<Type Name="DbExpressionBuilder" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="31d2ef6ffdfa08f2836c5e626e7ab960b9b568bd" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36695671" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DbExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DbExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Module DbExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbExpressionBuilder abstract sealed" />
  <TypeSignature Language="F#" Value="type DbExpressionBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="58ffe-101">Fornisce un'API per creare <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> e consente di accedere a tale API come metodi di estensione sul tipo di espressione stesso.</span>
      <span class="sxs-lookup">
        <span data-stu-id="58ffe-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s and allows that API to be accessed as extension methods on the expression type itself.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ Aggregate(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate (function, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="58ffe-102">Funzione che definisce l'operazione di aggregazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-102">The function that defines the aggregate operation.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="58ffe-103">Argomento in base a cui viene calcolata la funzione di aggregazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-103">The argument over which the aggregate function should be calculated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-104">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-104">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-105">Nuova aggregazione di funzioni con un riferimento alla funzione e all'argomento specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-105">A new function aggregate with a reference to the given function and argument.</span>
          </span>
          <span data-ttu-id="58ffe-106">La proprietà Distinct della funzione di aggregazione avrà il valore <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-106">The function aggregate's Distinct property will have the value <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-107">
            <paramref name="function" /> o <paramref name="argument" /> null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-107">
              <paramref name="function" /> or <paramref name="argument" /> null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-108">
            <paramref name="function" /> non è una funzione di aggregazione o dispone di più di un argomento oppure il tipo di risultato di <paramref name="argument" /> non è uguale né promuovibile al tipo di parametro di <paramref name="function" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-108">
              <paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AggregateDistinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AggregateDistinct (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ AggregateDistinct(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member AggregateDistinct : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct (function, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="58ffe-109">Funzione che definisce l'operazione di aggregazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-109">The function that defines the aggregate operation.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="58ffe-110">Argomento in base a cui viene calcolata la funzione di aggregazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-110">The argument over which the aggregate function should be calculated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-111">Crea un nuovo <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> applicato in modo diverso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-111">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> that is applied in a distinct fashion.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-112">Nuova aggregazione di funzioni con un riferimento alla funzione e all'argomento specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-112">A new function aggregate with a reference to the given function and argument.</span>
          </span>
          <span data-ttu-id="58ffe-113">La proprietà Distinct della funzione di aggregazione avrà il valore <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-113">The function aggregate's Distinct property will have the value <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-114">
            <paramref name="function" /> o <paramref name="argument" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-114">
              <paramref name="function" /> or <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-115">
            <paramref name="function" /> non è una funzione di aggregazione o dispone di più di un argomento oppure il tipo di risultato di <paramref name="argument" /> non è uguale né promuovibile al tipo di parametro di <paramref name="function" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-115">
              <paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="All">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-116">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> che determina se il predicato specificato vale per qualsiasi elemento del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-116">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="58ffe-117">Espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-117">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="58ffe-118">Metodo che rappresenta un predicato da valutare per ogni membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-118">A method representing a predicate to evaluate for each member of the input set.</span>
          </span>
          <span data-ttu-id="58ffe-119">Questo metodo deve produrre un'espressione con un tipo di risultato booleano che fornisce la logica predicativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-119">This method must produce an expression with a Boolean result type that provides the predicate logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-120">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> che determina se il predicato specificato vale per qualsiasi elemento del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-120">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-121">Nuovo DbQuantifierExpression che rappresenta l'operazione All.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-121">A new DbQuantifierExpression that represents the All operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-122">L'espressione generata da <paramref name="predicate" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-122">The expression produced by <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-123">L'espressione generata da <paramref name="Predicate" /> non ha un tipo di risultato Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-123">The expression produced by <paramref name="Predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="58ffe-124">Associazione a un'espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-124">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="58ffe-125">Espressione che rappresenta un predicato da valutare per ogni membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-125">An expression representing a predicate to evaluate for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-126">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> che determina se il predicato specificato vale per qualsiasi elemento del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-126">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-127">Nuovo DbQuantifierExpression che rappresenta l'operazione All.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-127">A new DbQuantifierExpression that represents the All operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-128">
            <paramref name="input" /> o <paramref name="predicate" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-128">
              <paramref name="input" /> or <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-129">
            <paramref name="predicate" /> non contiene un tipo di risultato booleano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-129">
              <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbAndExpression And(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function And (left As DbExpression, right As DbExpression) As DbAndExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbAndExpression ^ And(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member And : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbAndExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbAndExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-130">Espressione booleana che specifica l'argomento a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-130">A Boolean expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-131">Espressione booleana che specifica l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-131">A Boolean expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-132">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> che esegue l'operazione AND logica degli argomenti a sinistra e a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-132">Creates an <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> that performs the logical And of the left and right arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-133">Nuovo DbAndExpression con gli argomenti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-133">A new DbAndExpression with the specified arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-134">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-134">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-135">
            <paramref name="left" /> e <paramref name="right" /> non contengono un tipo di risultato booleano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-135">
              <paramref name="left" /> and <paramref name="right" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-136">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che determina se l'argomento di set specificato è non vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-136">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Any(class System.Data.Common.CommandTrees.DbExpression source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="58ffe-137">Espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-137">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-138">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che determina se l'argomento di set specificato è non vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-138">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-139">Nuovo <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applicato al nuovo <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> con l'argomento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-139">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-140">
            <paramref name="source" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-140">
              <paramref name="source" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-141">
            <paramref name="source" /> non contiene un tipo di risultato della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-141">
              <paramref name="source" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="58ffe-142">Espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-142">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="58ffe-143">Metodo che rappresenta il predicato da valutare per ogni membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-143">A method representing the predicate to evaluate for each member of the input set.</span>
          </span>
          <span data-ttu-id="58ffe-144">Questo metodo deve produrre un'espressione con un tipo di risultato booleano che fornisce la logica predicativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-144">This method must produce an expression with a Boolean result type that provides the predicate logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-145">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> che determina se il predicato specificato vale per qualsiasi elemento del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-145">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-146">Nuovo DbQuantifierExpression che rappresenta l'operazione Any.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-146">A new DbQuantifierExpression that represents the Any operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-147">L'espressione generata da <paramref name="predicate" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-147">The expression produced by <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-148">L'espressione generata da <paramref name="predicate" /> non ha un tipo di risultato Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-148">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="58ffe-149">Associazione a un'espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-149">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="58ffe-150">Espressione che rappresenta un predicato da valutare per ogni membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-150">An expression representing a predicate to evaluate for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-151">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> che determina se il predicato specificato vale per qualsiasi elemento del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-151">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-152">Nuovo DbQuantifierExpression che rappresenta l'operazione Any.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-152">A new DbQuantifierExpression that represents the Any operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-153">
            <paramref name="input" /> o <paramref name="predicate" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-153">
              <paramref name="input" /> or <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-154">L'espressione generata da <paramref name="predicate" /> non ha un tipo di risultato Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-154">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="As">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-155">Restituisce gli argomenti specificati come oggetto della coppia chiave/valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-155">Returns the specified arguments as a key/value pair object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt; As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt; As(class System.Data.Common.CommandTrees.DbAggregate value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbAggregate, alias As String) As KeyValuePair(Of String, DbAggregate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt; As(System::Data::Common::CommandTrees::DbAggregate ^ value, System::String ^ alias);" />
      <MemberSignature Language="F#" Value="static member As : System.Data.Common.CommandTrees.DbAggregate * string -&gt; System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbAggregate&gt;" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As (value, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbAggregate" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="58ffe-156">Valore nella coppia chiave/valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-156">The value in the key/value pair.</span>
          </span>
        </param>
        <param name="alias">
          <span data-ttu-id="58ffe-157">Chiave nella coppia chiave/valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-157">The key in the key/value pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-158">Restituisce gli argomenti specificati come oggetto della coppia chiave/valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-158">Returns the specified arguments as a key/value pair object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-159">Oggetto della coppia chiave/valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-159">A key/value pair object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt; As (this System.Data.Common.CommandTrees.DbExpression value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt; As(class System.Data.Common.CommandTrees.DbExpression value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbExpression, alias As String) As KeyValuePair(Of String, DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt; As(System::Data::Common::CommandTrees::DbExpression ^ value, System::String ^ alias);" />
      <MemberSignature Language="F#" Value="static member As : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As (value, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="58ffe-160">Valore nella coppia chiave/valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-160">The value in the key/value pair.</span>
          </span>
        </param>
        <param name="alias">
          <span data-ttu-id="58ffe-161">Chiave nella coppia chiave/valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-161">The key in the key/value pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-162">Restituisce gli argomenti specificati come oggetto della coppia chiave/valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-162">Returns the specified arguments as a key/value pair object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-163">Oggetto della coppia chiave/valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-163">A key/value pair object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding Bind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Bind (input As DbExpression) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ Bind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberSignature Language="F#" Value="static member Bind : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="58ffe-164">Espressione da associare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-164">The expression to bind.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-165">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> che associa l'espressione specificata mediante un nome di variabile generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-165">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses a generated variable name to bind the given expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-166">Nuova associazione di espressioni con l'espressione specificata e un nome di variabile generato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-166">A new expression binding with the specified expression and a generated variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-167">
            <paramref name="input" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-167">
              <paramref name="input" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-168">
            <paramref name="input" /> non dispone di un risultato della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-168">
              <paramref name="input" /> does not have a collection result.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding BindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BindAs (input As DbExpression, varName As String) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ BindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName);" />
      <MemberSignature Language="F#" Value="static member BindAs : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs (input, varName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="58ffe-169">Espressione da associare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-169">The expression to bind.</span>
          </span>
        </param>
        <param name="varName">
          <span data-ttu-id="58ffe-170">Nome di variabile da utilizzare per l'associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-170">The variable name that should be used for the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-171">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> che associa l'espressione specificata mediante un nome di variabile specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-171">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses the specified variable name to bind the given expression</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-172">Nuova associazione di espressioni con l'espressione specificata e un nome di variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-172">A new expression binding with the specified expression and variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-173">
            <paramref name="input" /> o <paramref name="varName" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-173">
              <paramref name="input" /> or <paramref name="varName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-174">
            <paramref name="input" /> non dispone di un risultato della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-174">
              <paramref name="input" /> does not have a collection result.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Case">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCaseExpression Case(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, class System.Data.Common.CommandTrees.DbExpression elseExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Case (whenExpressions As IEnumerable(Of DbExpression), thenExpressions As IEnumerable(Of DbExpression), elseExpression As DbExpression) As DbCaseExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCaseExpression ^ Case(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ whenExpressions, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ thenExpressions, System::Data::Common::CommandTrees::DbExpression ^ elseExpression);" />
      <MemberSignature Language="F#" Value="static member Case : seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbCaseExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case (whenExpressions, thenExpressions, elseExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCaseExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="thenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="elseExpression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="whenExpressions">
          <span data-ttu-id="58ffe-175">Elenco di espressioni che forniscono la logica condizionale di ogni caso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-175">A list of expressions that provide the conditional for of each case.</span>
          </span>
        </param>
        <param name="thenExpressions">
          <span data-ttu-id="58ffe-176">Elenco di espressioni che forniscono il risultato di ogni caso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-176">A list of expressions that provide the result of each case.</span>
          </span>
        </param>
        <param name="elseExpression">
          <span data-ttu-id="58ffe-177">Espressione che definisce il risultato in assenza di corrispondenza con i casi elencati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-177">An expression that defines the result when no case is matched.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-178">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-178">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-179">Nuovo DbCaseExpression con i casi specificati e il risultato predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-179">A new DbCaseExpression with the specified cases and default result.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-180">
            <paramref name="whenExpressions" /> o <paramref name="thenExpressions" /> è null, contiene null oppure <paramref name="elseExpression" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-180">
              <paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is null or contains null, or <paramref name="elseExpression" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-181">
            <paramref name="whenExpressions" /> o <paramref name="thenExpressions" /> è vuoto o <paramref name="whenExpressions" /> contiene un'espressione con un tipo di risultato non booleano oppure non esiste alcun tipo di risultato comune per tutte le espressioni in <paramref name="thenExpressions" /> e <paramref name="elseExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-181">
              <paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is empty or <paramref name="whenExpressions" /> contains an expression with a non-Boolean result type, or no common result type exists for all expressions in <paramref name="thenExpressions" /> and <paramref name="elseExpression" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CastTo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCastExpression CastTo(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage toType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CastTo (argument As DbExpression, toType As TypeUsage) As DbCastExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbCastExpression ^ CastTo(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ toType);" />
      <MemberSignature Language="F#" Value="static member CastTo : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbCastExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo (argument, toType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCastExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="toType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-182">Argomento a cui applicare il cast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-182">The argument to which the cast should be applied.</span>
          </span>
        </param>
        <param name="toType">
          <span data-ttu-id="58ffe-183">Metadati di Type che specificano il tipo a cui eseguire il cast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-183">Type metadata that specifies the type to cast to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-184">Crea una nuova espressione <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> che applica un'operazione di cast a un argomento polimorfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-184">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> that applies a cast operation to a polymorphic argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-185">Nuovo DbCastExpression con l'argomento e il tipo di destinazione specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-185">A new DbCastExpression with the specified argument and target type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-186">
            <paramref name="Argument" /> o <paramref name="toType" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-186">
              <paramref name="Argument" /> or <paramref name="toType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-187">Il cast specificato non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-187">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Constant">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-188">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-188">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Constant (value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Constant : obj -&gt; System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="58ffe-189">Valore costante da rappresentare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-189">The constant value to represent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-190">Crea un nuovo <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> con il valore costante specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-190">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the given constant value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-191">Nuovo DbConstantExpression con il valore dato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-191">A new DbConstantExpression with the given value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-192">
            <paramref name="value" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-192">
              <paramref name="value" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-193">
            <paramref name="value" /> non è un'istanza di un tipo di costante valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-193">
              <paramref name="value" /> is not an instance of a valid constant type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(class System.Data.Metadata.Edm.TypeUsage constantType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Constant (constantType As TypeUsage, value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Data::Metadata::Edm::TypeUsage ^ constantType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Constant : System.Data.Metadata.Edm.TypeUsage * obj -&gt; System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant (constantType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constantType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="constantType">
          <span data-ttu-id="58ffe-194">Tipo del valore costante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-194">The type of the constant value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="58ffe-195">Valore costante da rappresentare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-195">The constant value to represent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-196">Crea una nuova espressione <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> del tipo primitivo specificato con il valore costante indicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-196">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> of the specified primitive type with the given constant value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-197">Nuovo DbConstantExpression con il valore specificato e un tipo di risultato <paramref name="constantType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-197">A new DbConstantExpression with the given value and a result type of <paramref name="constantType" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-198">
            <paramref name="value" /> o <paramref name="constantType" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-198">
              <paramref name="value" /> or <paramref name="constantType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-199">
            <paramref name="value" /> non è un'istanza di un tipo di costante valido, <paramref name="constantType" /> non rappresenta un tipo primitivo o <paramref name="value" /> è di un tipo primitivo diverso da quello rappresentato da <paramref name="constantType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-199">
              <paramref name="value" /> is not an instance of a valid constant type,  <paramref name="constantType" /> does not represent a primitive type, or <paramref name="value" /> is of a different primitive type than that represented by <paramref name="constantType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRef">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-200">Crea un nuovo elemento <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> che codifica un riferimento a un'entità specifica di un tipo specificato in base a valori chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-200">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="58ffe-201">Set di entità che contiene l'elemento a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-201">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="58ffe-202">Raccolta di oggetti <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che forniscono i valori di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-202">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="58ffe-203">Queste espressioni devono corrispondere (in numero, tipo e ordine) alle proprietà di chiave del tipo di entità a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-203">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-204">Crea un nuovo elemento <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> che codifica un riferimento a un'entità specifica in base a valori chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-204">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-205">Nuovo DbRefExpression che fa riferimento all'elemento con i valori della chiave specificati nel set di entità specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-205">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-206">
            <paramref name="entitySet" /> è Null oppure <paramref name="keyValues" /> è Null o contiene Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-206">
              <paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-207">Il conteggio di <paramref name="keyValues" /> non corrisponde al conteggio dei membri principali dichiarati dal tipo di elemento di <paramref name="entitySet" /> oppure in <paramref name="keyValues" /> è contenuta un'espressione con un tipo di risultato che è incompatibile con il tipo di membro principale corrispondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-207">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="58ffe-208">Set di entità che contiene l'elemento a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-208">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="58ffe-209">Raccolta di oggetti <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che forniscono i valori di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-209">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="58ffe-210">Queste espressioni devono corrispondere (in numero, tipo e ordine) alle proprietà di chiave del tipo di entità a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-210">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-211">Crea un nuovo elemento <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> che codifica un riferimento a un'entità specifica in base a valori chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-211">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-212">Nuovo DbRefExpression che fa riferimento all'elemento con i valori della chiave specificati nel set di entità specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-212">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-213">
            <paramref name="entitySet" /> è Null oppure <paramref name="keyValues" /> è Null o contiene Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-213">
              <paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-214">Il conteggio di <paramref name="keyValues" /> non corrisponde al conteggio dei membri principali dichiarati dal tipo di elemento di <paramref name="entitySet" /> oppure in <paramref name="keyValues" /> è contenuta un'espressione con un tipo di risultato che è incompatibile con il tipo di membro principale corrispondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-214">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Metadata.Edm.EntityType * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, entityType, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="58ffe-215">Set di entità che contiene l'elemento a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-215">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="entityType">
          <span data-ttu-id="58ffe-216">Tipo specifico dell'entità a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-216">The specific type of the referenced entity.</span>
          </span>
          <span data-ttu-id="58ffe-217">Deve essere un tipo di entità della stessa gerarchia del tipo di elemento del set di entità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-217">This must be an entity type from the same hierarchy as the entity set's element type.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="58ffe-218">Raccolta di oggetti <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che forniscono i valori di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-218">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="58ffe-219">Queste espressioni devono corrispondere (in numero, tipo e ordine) alle proprietà di chiave del tipo di entità a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-219">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-220">Crea un nuovo elemento <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> che codifica un riferimento a un'entità specifica di un tipo specificato in base a valori chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-220">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-221">Nuovo DbRefExpression che fa riferimento all'elemento con i valori della chiave specificati nel set di entità specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-221">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-222">
            <paramref name="entitySet" /> o <paramref name="entityType" /> è null, oppure <paramref name="keyValues" /> è null o contiene null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-222">
              <paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-223">Il conteggio di <paramref name="keyValues" /> non corrisponde al conteggio dei membri principali dichiarati dal tipo di elemento di <paramref name="entitySet" /> oppure in <paramref name="keyValues" /> è contenuta un'espressione con un tipo di risultato che è incompatibile con il tipo di membro principale corrispondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-223">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Metadata.Edm.EntityType * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, entityType, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="58ffe-224">Set di entità che contiene l'elemento a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-224">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="entityType">
          <span data-ttu-id="58ffe-225">Tipo specifico dell'entità a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-225">The specific type of the referenced entity.</span>
          </span>
          <span data-ttu-id="58ffe-226">Deve essere un tipo di entità della stessa gerarchia del tipo di elemento del set di entità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-226">This must be an entity type from the same hierarchy as the entity set's element type.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="58ffe-227">Raccolta di oggetti <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che forniscono i valori di chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-227">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="58ffe-228">Queste espressioni devono corrispondere (in numero, tipo e ordine) alle proprietà di chiave del tipo di entità a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-228">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-229">Crea un nuovo elemento <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> che codifica un riferimento a un'entità specifica di un tipo specificato in base a valori chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-229">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-230">Nuovo DbRefExpression che fa riferimento all'elemento con i valori della chiave specificati nel set di entità specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-230">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-231">
            <paramref name="entitySet" /> o <paramref name="entityType" /> è null, oppure <paramref name="keyValues" /> è null o contiene null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-231">
              <paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-232">Il conteggio di <paramref name="keyValues" /> non corrisponde al conteggio dei membri principali dichiarati dal tipo di elemento di <paramref name="entitySet" /> oppure in <paramref name="keyValues" /> è contenuta un'espressione con un tipo di risultato che è incompatibile con il tipo di membro principale corrispondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-232">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CrossApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-233">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> che valuta l'espressione <paramref name="apply" /> specificata una volta per ogni elemento di un set di input specificato e produce una raccolta di righe con colonne corrispondenti relative all'input e all'espressione apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-233">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member CrossApply : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="58ffe-234">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-234">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="58ffe-235">Metodo che specifica la logica da valutare una volta per ogni membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-235">A method that specifies the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-236">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> che valuta l'espressione <paramref name="apply" /> specificata una volta per ogni elemento di un set di input specificato e produce una raccolta di righe con colonne corrispondenti relative all'input e all'espressione apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-236">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="58ffe-237">Le righe in cui <paramref name="apply" /> restituisce un set vuoto non vengono incluse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-237">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-238">Nuovo DbApplyExpression con l'input specificato e applica le associazioni e un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> di CrossApply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-238">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-239">Il risultato di <paramref name="apply" /> contiene un nome o un'espressione null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-239">The result of <paramref name="apply" /> contains a name or expression that is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-240">Il risultato dell'operazione di <paramref name="apply" /> contiene un nome o un'espressione non valido in un'associazione di espressioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-240">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberSignature Language="F#" Value="static member CrossApply : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply (input, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="58ffe-241">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-241">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="58ffe-242">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> che specifica la logica da valutare una volta per ogni membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-242">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-243">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> che valuta l'espressione <paramref name="apply" /> specificata una volta per ogni elemento di un set di input specificato e produce una raccolta di righe con colonne corrispondenti relative all'input e all'espressione apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-243">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="58ffe-244">Le righe in cui <paramref name="apply" /> restituisce un set vuoto non vengono incluse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-244">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-245">Nuovo DbApplyExpression con l'input specificato e applica le associazioni e un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> di CrossApply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-245">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-246">
            <paramref name="input" /> o <paramref name="apply" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-246">
              <paramref name="input" /> or <paramref name="apply" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CrossJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossJoin (inputs As IEnumerable(Of DbExpressionBinding)) As DbCrossJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCrossJoinExpression ^ CrossJoin(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ inputs);" />
      <MemberSignature Language="F#" Value="static member CrossJoin : seq&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; -&gt; System.Data.Common.CommandTrees.DbCrossJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin inputs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCrossJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="inputs">
          <span data-ttu-id="58ffe-247">Elenco di associazioni a un'espressione che specifica i set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-247">A list of expression bindings that specifies the input sets.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-248">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> che crea un join incondizionato dei set specificati dall'elenco di associazioni a un'espressione di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-248">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> that unconditionally joins the sets specified by the list of input expression bindings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-249">Nuovo DbCrossJoinExpression, con <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> di CrossJoin, che rappresenta un'operazione join non condizionale dei set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-249">A new DbCrossJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossJoin, that represents the unconditional join of the input sets.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-250">
            <paramref name="inputs" /> è null o contiene un elemento null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-250">
              <paramref name="inputs" /> is null or contains null element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-251">
            <paramref name="inputs" /> contiene meno di 2 associazioni all'espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-251">
              <paramref name="inputs" /> contains fewer than 2 expression bindings.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Deref">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDerefExpression Deref(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Deref (argument As DbExpression) As DbDerefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDerefExpression ^ Deref(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Deref : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbDerefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDerefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-252">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che fornisce il riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-252">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that provides the reference.</span>
          </span>
          <span data-ttu-id="58ffe-253">Questa espressione deve presentare un tipo di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-253">This expression must have a reference Type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-254">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> che recupera un'entità specifica in funzione di una determinata espressione di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-254">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> that retrieves a specific Entity given a reference expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-255">Nuovo DbDerefExpression che consente di recuperare l'entità specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-255">A new DbDerefExpression that retrieves the specified Entity.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-256">
            <paramref name="argument" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-256">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-257">
            <paramref name="argument" /> non dispone di un tipo di risultato riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-257">
              <paramref name="argument" /> does not have a reference result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDistinctExpression Distinct(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct (argument As DbExpression) As DbDistinctExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDistinctExpression ^ Distinct(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbDistinctExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDistinctExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-258">Espressione che definisce il set su cui eseguire l'operazione di distinzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-258">An expression that defines the set over which to perfom the distinct operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-259">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> che rimuove i duplicati dall'argomento di set specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-259">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> that removes duplicates from the given set argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-260">Nuovo DbDistinctExpression che rappresenta l'operazione distinta applicata all'argomento impostato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-260">A new DbDistinctExpression that represents the distinct operation applied to the specified set argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-261">
            <paramref name="argument" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-261">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-262">
            <paramref name="argument" /> non contiene un tipo di risultato della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-262">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Divide(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Divide (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Divide(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Divide : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-263">Espressione che specifica l'argomento a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-263">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-264">Espressione che specifica l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-264">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-265">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> che divide l'argomento a sinistra per l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-265">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that divides the left argument by the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-266">Nuovo DbArithmeticExpression che rappresenta l'operazione di divisione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-266">A new DbArithmeticExpression representing the division operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-267">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-267">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-268">Non esiste alcun tipo di risultato numerico comune tra <paramref name="left" /> o <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-268">No common numeric result type exists between <paramref name="left" /> or <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbElementExpression Element(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Element (argument As DbExpression) As DbElementExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbElementExpression ^ Element(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Element : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbElementExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbElementExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-269">Espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-269">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-270">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> che converte un set in un singleton.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-270">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> that converts a set into a singleton.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-271">Oggetto DbElementExpression che rappresenta la conversione dell'argomento impostato in un singleton.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-271">A DbElementExpression that represents the conversion of the set argument to a singleton.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-272">
            <paramref name="argument" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-272">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-273">
            <paramref name="argument" /> non contiene un tipo di risultato della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-273">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression Equal(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Equal (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ Equal(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Equal : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-274">Espressione che specifica l'argomento a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-274">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-275">Espressione che specifica l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-275">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-276">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> che verifica l'uguaglianza fra l'argomento a sinistra e quello a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-276">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-277">Nuovo DbComparisonExpression che rappresenta il confronto di uguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-277">A new DbComparisonExpression representing the equality comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-278">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-278">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-279">Non esiste alcun tipo di risultato confrontabile in termini di uguaglianza comune tra <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-279">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExceptExpression Except(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (left As DbExpression, right As DbExpression) As DbExceptExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExceptExpression ^ Except(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Except : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExceptExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExceptExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-280">Espressione che definisce l'argomento di set a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-280">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-281">Espressione che definisce l'argomento di set a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-281">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-282">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> che calcola la sottrazione dell'argomento di set a destra dall'argomento di set a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-282">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> that computes the subtraction of the right set argument from the left set argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-283">Nuovo oggetto DbExceptExpression che rappresenta la differenza tra l'argomento a sinistra e quella a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-283">A new DbExceptExpression that represents the difference of the left argument from the right argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-284">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-284">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-285">Non esiste alcun tipo di risultati della raccolta comune tra <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-285">No common collection result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Exists(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exists (argument As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Exists(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Exists : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-286">Espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-286">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-287">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che determina se l'argomento di set specificato è non vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-287">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-288">Nuovo <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applicato al nuovo <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> con l'argomento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-288">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-289">
            <paramref name="argument" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-289">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-290">
            <paramref name="argument" /> non contiene un tipo di risultato della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-290">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="False">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression False" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property False As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ False { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.False : System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-291">Ottiene un oggetto <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> con il valore booleano <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-291">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58ffe-292">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> con il valore booleano <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-292">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Filter(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Filter (input As DbExpressionBinding, predicate As DbExpression) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Filter(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Filter : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFilterExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="58ffe-293">Associazione a un'espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-293">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="58ffe-294">Espressione che rappresenta un predicato da valutare per ogni membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-294">An expression representing a predicate to evaluate for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-295">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> che filtra gli elementi nel set di input specificato tramite il predicato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-295">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-296">Nuovo DbFilterExpression che produce il set filtrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-296">A new DbFilterExpression that produces the filtered set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-297">
            <paramref name="input" /> o <paramref name="predicate" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-297">
              <paramref name="input" /> or <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-298">
            <paramref name="predicate" /> non contiene un tipo di risultato booleano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-298">
              <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FullOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-299">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> che unisce i set specificati dalle espressioni sinistra e destra, sulla condizione di join specificata, usando FullOuterJoin come <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-299">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member FullOuterJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-300">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica l'argomento del set sinistro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-300">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-301">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica l'argomento del set destro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-301">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="58ffe-302">Metodo che rappresenta la condizione su cui creare un join.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-302">A method representing the condition on which to join.</span>
          </span>
          <span data-ttu-id="58ffe-303">Questo metodo deve generare un'espressione con un tipo di risultato Boolean che fornisca la logica della condizione di join.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-303">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-304">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> che unisce i set specificati dalle espressioni sinistra e destra, sulla condizione di join specificata, usando FullOuterJoin come <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-304">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-305">Nuovo oggetto DbJoinExpression, con <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> equivalente a FullOuterJoin, che rappresenta l'operazione full outer join applicata ai set di input sinistro e destro nella condizione di join specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-305">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-306">L'espressione generata da <paramref name="joinCondition" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-306">The expression produced by <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-307">L'espressione generata da <paramref name="joinCondition" /> non ha un tipo di risultato Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-307">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member FullOuterJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-308">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> che specifica l'argomento di set a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-308">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-309">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> che specifica l'argomento di set a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-309">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="58ffe-310">Espressione che specifica la condizione in base a cui creare il join.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-310">An expression that specifies the condition on which to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-311">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> che, in base alla condizione di join specificata, crea un join dei set specificati dalle associazioni a un'espressione a sinistra e a destra, utilizzando FullOuterJoin come <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-311">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-312">Nuovo oggetto DbJoinExpression, con <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> equivalente a FullOuterJoin, che rappresenta l'operazione full outer join applicata ai set di input sinistro e destro nella condizione di join specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-312">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right     input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-313">
            <paramref name="left" />, <paramref name="right" /> o <paramref name="joinCondition" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-313">
              <paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-314">L'espressione generata da <paramref name="joinCondition" /> non ha un tipo di risultato Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-314">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEntityRef (argument As DbExpression) As DbEntityRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbEntityRefExpression ^ GetEntityRef(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member GetEntityRef : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbEntityRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbEntityRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-315">Espressione che fornisce l'entità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-315">The expression that provides the entity.</span>
          </span>
          <span data-ttu-id="58ffe-316">Questa espressione deve presentare un tipo di risultato di entità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-316">This expression must have an entity result type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-317">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> che recupera il riferimento dell'entità specificata in forma strutturale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-317">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> that retrieves the ref of the specifed entity in structural form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-318">Nuovo DbEntityRefExpression che consente di recuperare un riferimento all'entità specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-318">A new DbEntityRefExpression that retrieves a reference to the specified entity.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-319">
            <paramref name="argument" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-319">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-320">
            <paramref name="argument" /> non dispone di un tipo di risultato entità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-320">
              <paramref name="argument" /> does not have an entity result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRefKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRefKey (argument As DbExpression) As DbRefKeyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefKeyExpression ^ GetRefKey(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member GetRefKey : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRefKeyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefKeyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-321">Espressione che fornisce il riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-321">The expression that provides the reference.</span>
          </span>
          <span data-ttu-id="58ffe-322">Questa espressione deve presentare un tipo di riferimento con un tipo di elemento di entità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-322">This expression must have a reference Type with an Entity element type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-323">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> che recupera i valori di chiave del riferimento specificato in forma strutturale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-323">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> that retrieves the key values of the specifed reference in structural form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-324">Nuovo DbRefKeyExpression che recupera i valori di chiave del riferimento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-324">A new DbRefKeyExpression that retrieves the key values of the specified reference.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-325">
            <paramref name="argument" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-325">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-326">
            <paramref name="argument" /> non dispone di un tipo di risultato riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-326">
              <paramref name="argument" /> does not have a reference result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member GreaterThan : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-327">Espressione che specifica l'argomento a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-327">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-328">Espressione che specifica l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-328">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-329">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> che determina se l'argomento a sinistra è maggiore di quello a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-329">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-330">Nuovo DbComparisonExpression che rappresenta di tipo maggiore di.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-330">A new DbComparisonExpression representing the greater-than comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-331">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-331">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-332">Non esiste alcun tipo di risultato confrontabile in termini di ordinamento comune tra <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-332">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-333">Espressione che specifica l'argomento a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-333">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-334">Espressione che specifica l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-334">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-335">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> che determina se l'argomento a sinistra è maggiore o uguale a quello a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-335">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than or equal to the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-336">Nuovo DbComparisonExpression che rappresenta di tipo maggiore di o uguale a.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-336">A new DbComparisonExpression representing the greater-than-or-equal-to comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-337">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-337">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-338">Non esiste alcun tipo di risultato confrontabile in termini di ordinamento comune tra <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-338">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBind (input As DbExpression) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberSignature Language="F#" Value="static member GroupBind : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="58ffe-339">Espressione da associare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-339">The expression to bind.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-340">Crea una nuova associazione a un'espressione di gruppo che utilizza nomi generati di variabile e di variabile di gruppo per associare l'espressione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-340">Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-341">Nuova associazione di gruppi con l'espressione specificata, un nome di variabile generato e un nome di variabile di gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-341">A new group expression binding with the specified expression and a generated variable name and group variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-342">
            <paramref name="input" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-342">
              <paramref name="input" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-343">
            <paramref name="input" /> non contiene un tipo di risultato della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-343">
              <paramref name="input" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBindAs (input As DbExpression, varName As String, groupVarName As String) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName, System::String ^ groupVarName);" />
      <MemberSignature Language="F#" Value="static member GroupBindAs : System.Data.Common.CommandTrees.DbExpression * string * string -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs (input, varName, groupVarName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
        <Parameter Name="groupVarName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="58ffe-344">Espressione da associare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-344">The expression to bind.</span>
          </span>
        </param>
        <param name="varName">
          <span data-ttu-id="58ffe-345">Nome di variabile da utilizzare per l'associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-345">The variable name that should be used for the binding.</span>
          </span>
        </param>
        <param name="groupVarName">
          <span data-ttu-id="58ffe-346">Nome di variabile da utilizzare per fare riferimento al gruppo quando la nuova associazione a un'espressione di gruppo viene utilizzata in un'espressione di raggruppamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-346">The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-347">Crea una nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> che utilizza il nome di variabile e i nomi di variabile di gruppo specificati per associare l'espressione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-347">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that uses the specified variable name and group variable names to bind the given expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-348">Nuova associazione di gruppi con l'espressione specificata, un nome di variabile e un nome di variabile di gruppo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-348">A new group expression binding with the specified expression, variable name and group variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-349">
            <paramref name="input" />, <paramref name="varName" /> o <paramref name="groupVarName" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-349">
              <paramref name="input" />,  <paramref name="varName" /> or <paramref name="groupVarName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-350">
            <paramref name="input" /> non contiene un tipo di risultato della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-350">
              <paramref name="input" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupByExpression GroupBy(class System.Data.Common.CommandTrees.DbGroupExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy (input As DbGroupExpressionBinding, keys As IEnumerable(Of KeyValuePair(Of String, DbExpression)), aggregates As IEnumerable(Of KeyValuePair(Of String, DbAggregate))) As DbGroupByExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupByExpression ^ GroupBy(System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ keys, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt;&gt; ^ aggregates);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Data.Common.CommandTrees.DbGroupExpressionBinding * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbAggregate&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbGroupByExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy (input, keys, aggregates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupByExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbGroupExpressionBinding" RefType="this" />
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
        <Parameter Name="aggregates" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="58ffe-351">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-351">A <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="keys">
          <span data-ttu-id="58ffe-352">Elenco di coppie stringa/espressione che definiscono le colonne di raggruppamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-352">A list of string-expression pairs that define the grouping columns.</span>
          </span>
        </param>
        <param name="aggregates">
          <span data-ttu-id="58ffe-353">Elenco di espressioni che specificano le aggregazioni da applicare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-353">A list of expressions that specify aggregates to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-354">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> che raggruppa gli elementi del set di input in base alle chiavi di gruppo specificate e applica le aggregazioni specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-354">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> that groups the elements of the input set according to the specified group keys and applies the given aggregates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-355">Nuovo DbGroupByExpression con il set di input specificato, le chiavi di raggruppamento e gli aggregati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-355">A new DbGroupByExpression with the specified input set, grouping keys and aggregates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ffe-356">DbGroupByExpression consente di eseguire l'elenco di chiavi o l'elenco di funzioni di aggregazione sia vuoto, ma non entrambi.</span><span class="sxs-lookup"><span data-stu-id="58ffe-356">DbGroupByExpression allows either the list of keys or the list of aggregates to be empty, but not both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-357">
            <paramref name="input" />, <paramref name="keys" /> o <paramref name="aggregates" /> è Null, <paramref name="keys" /> contiene una chiave o un'espressione della colonna Null oppure <paramref name="aggregates" /> contiene un nome o un'aggregazione della colonna aggregata Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-357">
              <paramref name="input" />,  <paramref name="keys" /> or <paramref name="aggregates" /> is null,  <paramref name="keys" /> contains a null column key or expression, or <paramref name="aggregates" /> contains a null aggregate column name or aggregate.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-358">Sia <paramref name="keys" /> sia <paramref name="aggregates" /> sono vuoti o è stato specificato un nome della colonna non valido o duplicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-358">Both <paramref name="keys" /> and <paramref name="aggregates" /> are empty, or an invalid or duplicate column name was specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InnerJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-359">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> che, in base alla condizione di join specificata, crea un join dei set specificati dalle espressioni a sinistra e a destra, utilizzando InnerJoin come <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-359">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member InnerJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-360">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica l'argomento del set sinistro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-360">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-361">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica l'argomento del set destro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-361">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="58ffe-362">Metodo che rappresenta la condizione su cui creare un join.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-362">A method representing the condition on which to join.</span>
          </span>
          <span data-ttu-id="58ffe-363">Questo metodo deve generare un'espressione con un tipo di risultato Boolean che fornisca la logica della condizione di join.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-363">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-364">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> che, in base alla condizione di join specificata, crea un join dei set specificati dalle espressioni a sinistra e a destra, utilizzando InnerJoin come <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-364">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-365">Nuovo DbJoinExpression, con <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> di InnerJoin, che rappresenta l'operazione di join interna completa applicata ai set di input sinistro e destro nella condizione specificata di join.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-365">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-366">L'espressione generata da <paramref name="joinCondition" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-366">The expression produced by <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-367">L'espressione generata da <paramref name="joinCondition" /> non ha un tipo di risultato Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-367">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member InnerJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-368">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> che specifica l'argomento di set a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-368">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-369">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> che specifica l'argomento di set a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-369">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="58ffe-370">Espressione che specifica la condizione in base a cui creare il join.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-370">An expression that specifies the condition on which to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-371">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> che, in base alla condizione di join specificata, crea un join dei set specificati dalle associazioni a un'espressione a sinistra e a destra, utilizzando InnerJoin come <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-371">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-372">Nuovo DbJoinExpression, con <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> di InnerJoin, che rappresenta l'operazione di join interna completa applicata ai set di input sinistro e destro nella condizione specificata di join.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-372">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right     input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-373">
            <paramref name="left" />, <paramref name="right" /> o <paramref name="joinCondition" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-373">
              <paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-374">
            <paramref name="joinCondition" /> non contiene un tipo di risultato booleano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-374">
              <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIntersectExpression Intersect(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect (left As DbExpression, right As DbExpression) As DbIntersectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIntersectExpression ^ Intersect(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIntersectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIntersectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-375">Espressione che definisce l'argomento di set a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-375">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-376">Espressione che definisce l'argomento di set a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-376">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-377">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> che calcola l'intersezione degli argomenti di set a sinistra e a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-377">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> that computes the intersection of the left and right set arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-378">Nuovo oggetto DbIntersectExpression che rappresenta l'intersezione degli argomenti a sinistra e a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-378">A new DbIntersectExpression that represents the intersection of the left and right arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-379">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-379">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-380">Non esiste alcun tipo di risultati della raccolta comune tra <paramref name="left" /> o <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-380">No common collection result type exists between <paramref name="left" /> or <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-381">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> che rappresenta l'applicazione della funzione lambda specificata agli argomenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-381">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, arguments As IEnumerable(Of DbExpression)) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Common.CommandTrees.DbLambda * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbLambdaExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (lambda, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="lambda">
          <span data-ttu-id="58ffe-382">Istanza di <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> che rappresenta la funzione lambda da applicare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-382">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="58ffe-383">Elenco di espressioni che forniscono gli argomenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-383">A list of expressions that provide the arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-384">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> che rappresenta l'applicazione della funzione lambda specificata agli argomenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-384">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-385">Nuovo DbLambdaExpression che rappresenta l'applicazione della funzione Lambda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-385">A new DbLambdaExpression representing the Lambda function application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-386">
            <paramref name="lambda" /> o <paramref name="arguments" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-386">
              <paramref name="lambda" /> or <paramref name="arguments" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-387">Il conteggio di <paramref name="arguments" /> non corrisponde al numero di variabili dichiarato da <paramref name="lambda" /> oppure <paramref name="arguments" /> contiene un'espressione con un tipo di risultato che non è uguale o promuovibile al tipo di variabile corrispondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-387">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, ParamArray arguments As DbExpression()) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Common.CommandTrees.DbLambda * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbLambdaExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (lambda, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="lambda">
          <span data-ttu-id="58ffe-388">Istanza di <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> che rappresenta la funzione lambda da applicare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-388">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="58ffe-389">Espressioni che forniscono gli argomenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-389">Expressions that provide the arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-390">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> che rappresenta l'applicazione della funzione lambda specificata agli argomenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-390">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-391">Nuovo DbLambdaExpression che rappresenta l'applicazione della funzione Lambda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-391">A new DbLambdaExpression representing the Lambda function application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-392">
            <paramref name="lambda" /> o <paramref name="arguments" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-392">
              <paramref name="lambda" /> or <paramref name="arguments" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-393">Il conteggio di <paramref name="arguments" /> non corrisponde al numero di variabili dichiarato da <paramref name="lambda" /> oppure <paramref name="arguments" /> contiene un'espressione con un tipo di risultato che non è uguale o promuovibile al tipo di variabile corrispondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-393">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, arguments As IEnumerable(Of DbExpression)) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Metadata.Edm.EdmFunction * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (function, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="58ffe-394">Metadati per la funzione da richiamare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-394">Metadata for the function to invoke.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="58ffe-395">Elenco di espressioni che forniscono gli argomenti alla funzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-395">A list of expressions that provide the arguments to the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-396">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che rappresenta la chiamata alla funzione specificata con gli argomenti definiti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-396">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-397">Un nuovo oggetto DbFunctionExpression che rappresenta la chiamata alla funzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-397">A new DbFunctionExpression representing the function invocation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-398">
            <paramref name="function" /> è Null oppure <paramref name="arguments" /> è Null o contiene Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-398">
              <paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-399">Il numero di <paramref name="arguments" /> non corrisponde al numero di parametri dichiarati da <paramref name="function" /> oppure <paramref name="arguments" /> contiene un'espressione che ha un tipo di risultato diverso o promuovibile al tipo di parametro di funzione corrispondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-399">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, ParamArray arguments As DbExpression()) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (function, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="58ffe-400">Metadati per la funzione da richiamare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-400">Metadata for the function to invoke.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="58ffe-401">Espressioni che forniscono gli argomenti alla funzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-401">Expressions that provide the arguments to the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-402">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che rappresenta la chiamata alla funzione specificata con gli argomenti definiti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-402">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-403">Un nuovo oggetto DbFunctionExpression che rappresenta la chiamata alla funzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-403">A new DbFunctionExpression representing the function invocation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-404">
            <paramref name="function" /> è Null oppure <paramref name="arguments" /> è Null o contiene Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-404">
              <paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-405">Il numero di <paramref name="arguments" /> non corrisponde al numero di parametri dichiarati da <paramref name="function" /> oppure <paramref name="arguments" /> contiene un'espressione che ha un tipo di risultato diverso o promuovibile al tipo di parametro di funzione corrispondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-405">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsEmpty (argument As DbExpression) As DbIsEmptyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsEmptyExpression ^ IsEmpty(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member IsEmpty : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIsEmptyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsEmptyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-406">Espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-406">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-407">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> che determina se l'argomento di set specificato è un set vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-407">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> that determines whether the specified set argument is an empty set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-408">Nuovo DbIsEmptyExpression con l'argomento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-408">A new DbIsEmptyExpression with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-409">
            <paramref name="argument" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-409">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-410">
            <paramref name="argument" /> non contiene un tipo di risultato della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-410">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsNullExpression IsNull(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNull (argument As DbExpression) As DbIsNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsNullExpression ^ IsNull(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member IsNull : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIsNullExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-411">Espressione che specifica l'argomento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-411">An expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-412">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> che determina se l'argomento specificato è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-412">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> that determines whether the specified argument is null.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-413">Nuovo DbIsNullExpression con l'argomento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-413">A new DbIsNullExpression with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-414">
            <paramref name="argument" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-414">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-415">
            <paramref name="argument" /> dispone di un tipo di risultati della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-415">
              <paramref name="argument" /> has a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOf(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOf (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOf(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member IsOf : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbIsOfExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-416">Espressione che specifica l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-416">An expression that specifies the instance.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="58ffe-417">Metadati di tipo che specificano il tipo con cui deve essere confrontato il tipo di risultato dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-417">Type metadata that specifies the type that the instance's result type should be compared to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-418">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> che determina se l'argomento specificato è del tipo specificato o di un sottotipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-418">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> that determines whether the given argument is of the specified type or a subtype.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-419">Nuovo DbIsOfExpression con l'istanza e il tipo specificati e DbExpressionKind IsOf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-419">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOf.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ffe-420">È necessario che DbIsOfExpression `argument` dispone di un tipo di risultato polimorfico e che `type` è un tipo dalla stessa gerarchia dei tipi di quel tipo di risultato.</span><span class="sxs-lookup"><span data-stu-id="58ffe-420">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-421">
            <paramref name="argument" /> o <paramref name="type" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-421">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-422">
            <paramref name="type" /> non si trova nella stessa gerarchia dei tipi del tipo di risultato di <paramref name="argument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-422">
              <paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsOfOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOfOnly (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOfOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member IsOfOnly : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbIsOfExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-423">Espressione che specifica l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-423">An expression that specifies the instance.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="58ffe-424">Metadati di tipo che specificano il tipo con cui deve essere confrontato il tipo di risultato dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-424">Type metadata that specifies the type that the instance's result type should be compared to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-425">Crea una nuova espressione <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> che determina se l'argomento specificato è del tipo specificato ed esclusivamente di tale tipo (non di un sottotipo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-425">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-426">Nuovo DbIsOfExpression con l'istanza e il tipo specificati e DbExpressionKind IsOfOnly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-426">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOfOnly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ffe-427">È necessario che DbIsOfExpression `argument` dispone di un tipo di risultato polimorfico e che `type` è un tipo dalla stessa gerarchia dei tipi di quel tipo di risultato.</span><span class="sxs-lookup"><span data-stu-id="58ffe-427">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-428">
            <paramref name="argument" /> o <paramref name="type" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-428">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-429">
            <paramref name="type" /> non si trova nella stessa gerarchia dei tipi del tipo di risultato di <paramref name="argument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-429">
              <paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression Join(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey);" />
      <MemberSignature Language="F#" Value="static member Join : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join (outer, inner, outerKey, innerKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="outer">
          <span data-ttu-id="58ffe-430">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica l'argomento del set esterno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-430">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="58ffe-431">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica l'argomento del set interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-431">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span>
          </span>
        </param>
        <param name="outerKey">
          <span data-ttu-id="58ffe-432">Metodo che specifica come derivare il valore esterno della chiave da un elemento del set esterno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-432">A method that specifies how the outer key value should be derived from an element of the outer set.</span>
          </span>
        </param>
        <param name="innerKey">
          <span data-ttu-id="58ffe-433">Metodo che specifica come derivare il valore interno della chiave da un elemento del set interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-433">A method that specifies how the inner key value should be derived from an element of the inner set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-434">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> che unisce in join i set specificati dalle espressioni esterne e interne, in base a una condizione di uguaglianza tra le chiavi esterne e interne specificate, usando InnerJoin come <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-434">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-435">Nuovo oggetto DbJoinExpression, con un'enumerazione <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> di InnerJoin, che rappresenta l'operazione di inner join applicata ai set di input a sinistra e a destra in una condizione di join che confronta i valori di chiave esterni e interni per verificarne l'uguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-435">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-436">L'espressione generata da <paramref name="outerKey" /> o <paramref name="innerKey" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-436">The expression produced by <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-437">Le espressioni generate da <paramref name="outerKey" /> e <paramref name="innerKey" /> non possono essere confrontate per verificarne l'uguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-437">The expressions produced by <paramref name="outerKey" /> and <paramref name="innerKey" /> are not comparable for equality.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TSelector) (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Join : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, 'Selector&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join (outer, inner, outerKey, innerKey, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector">
          <span data-ttu-id="58ffe-438">Il tipo dei <c>selettore</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-438">The type of the <c>selector</c>.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="58ffe-439">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica l'argomento del set esterno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-439">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="58ffe-440">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica l'argomento del set interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-440">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span>
          </span>
        </param>
        <param name="outerKey">
          <span data-ttu-id="58ffe-441">Metodo che specifica come derivare il valore esterno della chiave da un elemento del set esterno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-441">A method that specifies how the outer key value should be derived from an element of the outer set.</span>
          </span>
        </param>
        <param name="innerKey">
          <span data-ttu-id="58ffe-442">Metodo che specifica come derivare il valore interno della chiave da un elemento del set interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-442">A method that specifies how the inner key value should be derived from an element of the inner set.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="58ffe-443">Metodo che specifica come derivare un elemento del set ottenuto da elementi di set interni ed esterni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-443">A method that specifies how an element of the result set should be derived from elements of the inner and outer sets.</span>
          </span>
          <span data-ttu-id="58ffe-444">Questo metodo deve generare un'istanza di un tipo che sia compatibile con Join e risolvibile in un oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-444">This method must produce an instance of a type that is compatible with Join and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          </span>
          <span data-ttu-id="58ffe-445">I requisiti di compatibilità per <c>TSelector</c> sono descritti nelle note.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-445">Compatibility requirements for <c>TSelector</c> are described in remarks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-446">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> che proietta il selettore indicato sui set specificati dalle espressioni esterne e interne, unite in join in una condizione di uguaglianza tra le chiavi esterne e interne specificate, usando InnerJoin come <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-446">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-447">Nuovo oggetto DbProjectExpression con il selettore specificato come proiezione e nuovo oggetto DbJoinExpression come input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-447">A new DbProjectExpression with the specified selector as its projection, and a new DbJoinExpression as its input.</span>
          </span>
          <span data-ttu-id="58ffe-448">L'oggetto di input DbJoinExpression viene creato con un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> di InnerJoin, che rappresenta l'operazione di inner join applicata ai set di input sinistri e destri in una condizione di join che confronta i valori di chiave esterni e interni per verificarne l'uguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-448">The input DbJoinExpression is created with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ffe-449">Per essere compatibile con Join, `TSelector` deve essere derivato da <xref:System.Data.Common.CommandTrees.DbExpression>, o deve essere un tipo anonimo con proprietà derivate da DbExpression.</span><span class="sxs-lookup"><span data-stu-id="58ffe-449">To be compatible with Join, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="58ffe-450">Di seguito sono riportati esempi dei tipi supportati per `TSelector`:</span><span class="sxs-lookup"><span data-stu-id="58ffe-450">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => o.Property("Name"))  
```  
  
 <span data-ttu-id="58ffe-451">(`TSelector` è <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="58ffe-451">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => new { OName = o.Property("Name"), IName = i.Property("Name") })  
```  
  
 <span data-ttu-id="58ffe-452">(`TSelector` è un tipo anonimo con proprietà derivate da DbExpression).</span><span class="sxs-lookup"><span data-stu-id="58ffe-452">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-453">Il risultato di <paramref name="selector" /> è null dopo la conversione in DbExpression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-453">The result of <paramref name="selector" /> is null after conversion to DbExpression.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-454">Il risultato di <paramref name="Selector" /> non è compatibile con SelectMany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-454">The result of <paramref name="Selector" /> is not compatible with SelectMany.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Lambda">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-455">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> con l'implementazione della funzione lambda inline e i parametri formali specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-455">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, variables As IEnumerable(Of DbVariableReferenceExpression)) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Data.Common.CommandTrees.DbExpression * seq&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; -&gt; System.Data.Common.CommandTrees.DbLambda" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda (body, variables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="58ffe-456">Espressione che definisce la logica della funzione lambda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-456">An expression that defines the logic of the Lambda function.</span>
          </span>
        </param>
        <param name="variables">
          <span data-ttu-id="58ffe-457">Raccolta di <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> che rappresenta i parametri formali per la funzione lambda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-457">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span>
          </span>
          <span data-ttu-id="58ffe-458">Queste variabili sono valide per essere usate nell'espressione <c>corpo</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-458">These variables are valid for use in the <c>body</c> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-459">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> con l'implementazione della funzione lambda inline e i parametri formali specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-460">Nuovo DbLambda che descrive una funzione lambda in linea con il corpo e i parametri formali specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-460">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-461">
            <paramref name="variables" /> è null, contiene null oppure <paramref name="body" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-461">
              <paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-462">
            <paramref name="variables" /> contiene più di un elemento con lo stesso nome di variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-462">
              <paramref name="variables" /> contains more than one element with the same variable name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, params System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, ParamArray variables As DbVariableReferenceExpression()) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, ... cli::array &lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbVariableReferenceExpression[] -&gt; System.Data.Common.CommandTrees.DbLambda" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda (body, variables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="58ffe-463">Espressione che definisce la logica della funzione lambda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-463">An expression that defines the logic of the Lambda function.</span>
          </span>
        </param>
        <param name="variables">
          <span data-ttu-id="58ffe-464">Raccolta di <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> che rappresenta i parametri formali per la funzione lambda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-464">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span>
          </span>
          <span data-ttu-id="58ffe-465">Queste variabili sono valide per essere usate nell'espressione <c>corpo</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-465">These variables are valid for use in the <c>body</c> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-466">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> con l'implementazione della funzione lambda inline e i parametri formali specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-466">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-467">Nuovo DbLambda che descrive una funzione lambda in linea con il corpo e i parametri formali specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-467">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-468">
            <paramref name="variables" /> è null, contiene null oppure <paramref name="body" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-468">
              <paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-469">
            <paramref name="variables" /> contiene più di un elemento con lo stesso nome di variabile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-469">
              <paramref name="variables" /> contains more than one element with the same variable name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-470">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> che, in base alla condizione di join specificata, crea un join dei set specificati dalle espressioni a sinistra e a destra, utilizzando LeftOuterJoin come <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-470">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member LeftOuterJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-471">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica l'argomento del set sinistro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-471">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-472">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica l'argomento del set destro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-472">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="58ffe-473">Metodo che rappresenta la condizione su cui creare un join.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-473">A method representing the condition on which to join.</span>
          </span>
          <span data-ttu-id="58ffe-474">Questo metodo deve generare un'espressione con un tipo di risultato Boolean che fornisca la logica della condizione di join.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-474">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-475">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> che, in base alla condizione di join specificata, crea un join dei set specificati dalle espressioni a sinistra e a destra, utilizzando LeftOuterJoin come <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-475">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-476">Nuovo DbJoinExpression, con <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> di LeftOuterJoin, che rappresenta l'operazione di join sinistra completa applicata ai set di input sinistro e destro nella condizione specificata di join.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-476">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-477">L'espressione generata da <paramref name="joinCondition" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-477">The expression produced by <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-478">L'espressione generata da <paramref name="joinCondition" /> non ha un tipo di risultato Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-478">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member LeftOuterJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-479">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> che specifica l'argomento di set a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-479">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-480">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> che specifica l'argomento di set a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-480">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="58ffe-481">Espressione che specifica la condizione in base a cui creare il join.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-481">An expression that specifies the condition on which to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-482">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> che, in base alla condizione di join specificata, crea un join dei set specificati dalle associazioni a un'espressione a sinistra e a destra, utilizzando LeftOuterJoin come <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-482">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-483">Nuovo DbJoinExpression, con <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> di LeftOuterJoin, che rappresenta l'operazione di join sinistra completa applicata ai set di input sinistro e destro nella condizione specificata di join.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-483">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right     input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-484">
            <paramref name="left" />, <paramref name="right" /> o <paramref name="joinCondition" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-484">
              <paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-485">
            <paramref name="joinCondition" /> non contiene un tipo di risultato booleano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-485">
              <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member LessThan : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-486">Espressione che specifica l'argomento a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-486">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-487">Espressione che specifica l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-487">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-488">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> che determina se l'argomento a sinistra è minore di quello a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-488">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-489">Nuovo DbComparisonExpression che rappresenta il confronto di tipo minore di.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-489">A new DbComparisonExpression representing the less-than comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-490">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-490">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-491">Non esiste alcun tipo di risultato confrontabile in termini di ordinamento comune tra <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-491">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-492">Espressione che specifica l'argomento a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-492">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-493">Espressione che specifica l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-493">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-494">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> che determina se l'argomento a sinistra è minore o uguale a quello a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-494">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than or equal to the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-495">Nuovo DbComparisonExpression che rappresenta il confronto di tipo minore di o uguale a.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-495">A new DbComparisonExpression representing the less-than-or-equal-to comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-496">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-496">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-497">Non esiste alcun tipo di risultato comune che sia confrontabile in termini di uguaglianza e di ordinamento tra <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-497">No common result type that is both equality- and order-comparable exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Like">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-498">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> che confronta la stringa di input specificata con il modello specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-498">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Like : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLikeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like (argument, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-499">Espressione che specifica la stringa di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-499">An expression that specifies the input string.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="58ffe-500">Espressione che specifica la stringa modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-500">An expression that specifies the pattern string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-501">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> che confronta la stringa di input specificata con il modello specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-501">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-502">Nuovo DbLikeExpression con l'input specificato, il modello e una escape null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-502">A new DbLikeExpression with the specified input, pattern and a null escape.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-503">
            <paramref name="Argument" /> o <paramref name="pattern" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-503">
              <paramref name="Argument" /> or <paramref name="pattern" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-504">
            <paramref name="Argument" /> o <paramref name="pattern" /> non dispone di un tipo di risultato stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-504">
              <paramref name="Argument" /> or <paramref name="pattern" /> does not have a string result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern, class System.Data.Common.CommandTrees.DbExpression escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression, escape As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern, System::Data::Common::CommandTrees::DbExpression ^ escape);" />
      <MemberSignature Language="F#" Value="static member Like : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLikeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like (argument, pattern, escape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="escape" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-505">Espressione che specifica la stringa di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-505">An expression that specifies the input string.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="58ffe-506">Espressione che specifica la stringa modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-506">An expression that specifies the pattern string.</span>
          </span>
        </param>
        <param name="escape">
          <span data-ttu-id="58ffe-507">Espressione facoltativa che specifica la stringa di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-507">An optional expression that specifies the escape string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-508">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> che confronta la stringa di input specificata con il modello specificato utilizzando l'escape facoltativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-508">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern using the optional escape.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-509">Nuovo DbLikeExpression con l'input specificato, il modello e una escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-509">A new DbLikeExpression with the specified input, pattern and escape.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-510">
            <paramref name="argument" />,   <paramref name="pattern" /> o <paramref name="escape" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-510">
              <paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-511">
            <paramref name="argument" />, <paramref name="pattern" /> o <paramref name="escape" /> non dispone di un tipo di risultato stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-511">
              <paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> does not have a string result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Limit(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Limit (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Limit(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Limit : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLimitExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-512">Espressione che specifica la raccolta di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-512">An expression that specifies the input collection.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="58ffe-513">Espressione che specifica il valore del limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-513">An expression that specifies the limit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-514">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> che limita il numero di elementi della raccolta Argument al valore di limite di conteggio specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-514">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span>
          </span>
          <span data-ttu-id="58ffe-515">I risultati correlati non sono inclusi nell'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-515">Tied results are not included in the output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-516">Nuovo DbLimitExpression con l'argomento specificato e valori limite di conteggio che non includono i risultati associati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-516">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-517">
            <paramref name="argument" /> o <paramref name="count" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-517">
              <paramref name="argument" /> or <paramref name="count" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-518">
            <paramref name="argument" /> non dispone di un tipo di risultati della raccolta o <paramref name="count" /> non dispone di un tipo di risultato uguale o promuovibile a un tipo Integer a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-518">
              <paramref name="argument" /> does not have a collection result type, or <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Minus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Minus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Minus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Minus : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-519">Espressione che specifica l'argomento a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-519">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-520">Espressione che specifica l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-520">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-521">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> che sottrae l'argomento a destra dall'argomento a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-521">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that subtracts the right argument from the left argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-522">Nuovo DbArithmeticExpression che rappresenta l'operazione di sottrazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-522">A new DbArithmeticExpression representing the subtraction operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-523">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-523">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-524">Non esiste alcun tipo di risultato numerico comune tra <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-524">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Modulo(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Modulo (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Modulo(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Modulo : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-525">Espressione che specifica l'argomento a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-525">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-526">Espressione che specifica l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-526">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-527">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> che calcola il resto ottenuto dividendo l'argomento a sinistra per l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-527">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that computes the remainder of the left argument divided by the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-528">Nuovo DbArithmeticExpression che rappresenta l'operazione modulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-528">A new DbArithmeticExpression representing the modulo operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-529">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-529">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-530">Non esiste alcun tipo di risultato numerico comune tra <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-530">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Multiply(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Multiply (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Multiply(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-531">Espressione che specifica l'argomento a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-531">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-532">Espressione che specifica l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-532">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-533">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> che moltiplica l'argomento a sinistra per l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-533">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that multiplies the left argument by the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-534">Nuovo DbArithmeticExpression che rappresenta l'operazione di moltiplicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-534">A new DbArithmeticExpression representing the multiplication operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-535">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-535">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-536">Non esiste alcun tipo di risultato numerico comune tra <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-536">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-537">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> che rappresenta la navigazione di una composizione o relazione di associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-537">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Common.CommandTrees.DbExpression navigateFrom, class System.Data.Metadata.Edm.RelationshipEndMember fromEnd, class System.Data.Metadata.Edm.RelationshipEndMember toEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (navigateFrom As DbExpression, fromEnd As RelationshipEndMember, toEnd As RelationshipEndMember) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Common::CommandTrees::DbExpression ^ navigateFrom, System::Data::Metadata::Edm::RelationshipEndMember ^ fromEnd, System::Data::Metadata::Edm::RelationshipEndMember ^ toEnd);" />
      <MemberSignature Language="F#" Value="static member Navigate : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.RelationshipEndMember * System.Data.Metadata.Edm.RelationshipEndMember -&gt; System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate (navigateFrom, fromEnd, toEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="fromEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
        <Parameter Name="toEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="navigateFrom">
          <span data-ttu-id="58ffe-538">Espressione che specifica l'istanza da cui eseguire la navigazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-538">An expression that specifies the instance from which navigation should occur.</span>
          </span>
        </param>
        <param name="fromEnd">
          <span data-ttu-id="58ffe-539">Metadati per la proprietà che rappresenta l'estremità della relazione da cui deve verificarsi la navigazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-539">Metadata for the property that represents the end of the relationship from which navigation should occur.</span>
          </span>
        </param>
        <param name="toEnd">
          <span data-ttu-id="58ffe-540">Metadati per la proprietà che rappresenta l'estremità della relazione verso cui deve verificarsi la navigazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-540">Metadata for the property that represents the end of the relationship to which navigation should occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-541">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> che rappresenta la navigazione di una composizione o relazione di associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-541">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-542">Nuovo DbRelationshipNavigationExpression che rappresenta la navigazione delle estremità della relazione da e a specificata del tipo di relazione specificato dall'istanza della sorgente di navigazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-542">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ffe-543"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> richiede che si verificano sempre navigazione da un riferimento e pertanto `navigateFrom` deve sempre presentare un tipo di risultato riferimento.</span><span class="sxs-lookup"><span data-stu-id="58ffe-543"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-544">
            <paramref name="fromEnd" />, <paramref name="toEnd" /> o <paramref name="navigateFrom" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-544">
              <paramref name="fromEnd" />,  <paramref name="toEnd" /> or <paramref name="navigateFrom" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-545">
            <paramref name="fromEnd" /> e <paramref name="toEnd" /> non sono dichiarati dallo stesso tipo di relazione oppure <paramref name="navigateFrom" /> presenta un tipo di risultato che non è compatibile con il tipo di proprietà di <paramref name="fromEnd" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-545">
              <paramref name="fromEnd" /> and <paramref name="toEnd" /> are not declared by the same relationship type, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of <paramref name="fromEnd" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, class System.Data.Common.CommandTrees.DbExpression navigateFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (type As RelationshipType, fromEndName As String, toEndName As String, navigateFrom As DbExpression) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Metadata::Edm::RelationshipType ^ type, System::String ^ fromEndName, System::String ^ toEndName, System::Data::Common::CommandTrees::DbExpression ^ navigateFrom);" />
      <MemberSignature Language="F#" Value="static member Navigate : System.Data.Metadata.Edm.RelationshipType * string * string * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate (type, fromEndName, toEndName, navigateFrom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.RelationshipType" RefType="this" />
        <Parameter Name="fromEndName" Type="System.String" />
        <Parameter Name="toEndName" Type="System.String" />
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="58ffe-546">Metadati del tipo di relazione che rappresenta la relazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-546">Metadata for the relation type that represents the relationship.</span>
          </span>
        </param>
        <param name="fromEndName">
          <span data-ttu-id="58ffe-547">Nome della proprietà del tipo di relazione che rappresenta l'estremità della relazione da cui deve essere eseguita la navigazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-547">The name of the property of the relation type that represents the end of the relationship from which navigation should occur.</span>
          </span>
        </param>
        <param name="toEndName">
          <span data-ttu-id="58ffe-548">Nome della proprietà del tipo di relazione che rappresenta l'estremità della relazione verso cui deve essere eseguita la navigazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-548">The name of the property of the relation type that represents the end of the relationship to which navigation should occur.</span>
          </span>
        </param>
        <param name="navigateFrom">
          <span data-ttu-id="58ffe-549">Espressione che specifica l'istanza da cui eseguire la navigazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-549">An expression the specifies the instance from which naviagtion should occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-550">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> che rappresenta la navigazione di una composizione o relazione di associazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-550">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-551">Nuovo DbRelationshipNavigationExpression che rappresenta la navigazione delle estremità della relazione da e a specificata del tipo di relazione specificato dall'istanza della sorgente di navigazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-551">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ffe-552"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> richiede che si verificano sempre navigazione da un riferimento e pertanto `navigateFrom` deve sempre presentare un tipo di risultato riferimento.</span><span class="sxs-lookup"><span data-stu-id="58ffe-552"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-553">
            <paramref name="type" />, <paramref name="fromEndName" />, <paramref name="toEndName" /> o <paramref name="navigateFrom" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-553">
              <paramref name="type" />,  <paramref name="fromEndName" />,  <paramref name="toEndName" /> or <paramref name="navigateFrom" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-554">
            <paramref name="type" /> non è associato all'area di lavoro dei metadati di questo albero dei comandi o <paramref name="navigateFrom" /> è associato a un albero dei comandi diverso o <paramref name="type" /> non dichiara una proprietà finale della relazione con nome <paramref name="toEndName" /> o <paramref name="fromEndName" /> oppure <paramref name="navigateFrom" /> dispone di un tipo di risultati che non è compatibile con il tipo di proprietà della proprietà finale della relazione con nome <paramref name="fromEndName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-554">
              <paramref name="type" /> is not associated with this command tree's metadata workspace or <paramref name="navigateFrom" /> is associated with a different command tree, or <paramref name="type" /> does not declare a relation end property with name <paramref name="toEndName" /> or <paramref name="fromEndName" />, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of the relation end property with name <paramref name="fromEndName" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Negate(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Negate (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Negate(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Negate : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-555">Espressione che specifica l'argomento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-555">An expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-556">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> che nega il valore dell'argomento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-556">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-557">Nuovo DbArithmeticExpression che rappresenta l'operazione di negazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-557">A new DbArithmeticExpression representing the negation operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-558">
            <paramref name="argument" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-558">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-559">Non esiste alcun tipo di risultato numerico per <paramref name="argument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-559">No numeric result type exists for <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="New">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-560">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-560">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, arguments As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member New : System.Data.Metadata.Edm.TypeUsage * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New (instanceType, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="instanceType">
          <span data-ttu-id="58ffe-561">Tipo della nuova istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-561">The type of the new instance.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="58ffe-562">Espressioni che specificano i valori delle nuove istanze, interpretate in base al tipo dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-562">Expressions that specify values of the new instances, interpreted according to the instance's type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-563">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-563">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          </span>
          <span data-ttu-id="58ffe-564">Se l'argomento di tipo è un tipo di insieme, gli argomenti specificano gli elementi dell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-564">If the type argument is a collection type, the arguments specify the elements of the collection.</span>
          </span>
          <span data-ttu-id="58ffe-565">In caso contrario, gli argomenti vengono utilizzati come valori di proprietà o di colonna della nuova istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-565">Otherwise the arguments are used as property or column values in the new instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-566">Nuovo DbNewInstanceExpression con tipo e argomenti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-566">A new DbNewInstanceExpression with the specified type and arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ffe-567">Se `instanceType` è un tipo di raccolta, ogni espressione nella `arguments` deve avere un tipo di risultato è promuovibile al tipo di elemento del `instanceType`.</span><span class="sxs-lookup"><span data-stu-id="58ffe-567">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="58ffe-568">Se `instanceType` è un tipo di riga, `arguments` deve contenere il numero di espressioni perché sono presenti colonne nel tipo di riga e il tipo di risultato di ogni espressione deve essere uguale o promovibile al tipo della colonna corrispondente.</span><span class="sxs-lookup"><span data-stu-id="58ffe-568">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="58ffe-569">Un tipo di riga che non dichiara tutte le colonne non è valido.</span><span class="sxs-lookup"><span data-stu-id="58ffe-569">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="58ffe-570">Se `instanceType` è un tipo di entità `arguments` deve contenere molte espressioni quante sono le proprietà definite dal tipo e il tipo di risultato di ogni espressione deve essere uguale o promovibile al tipo della proprietà corrispondente.</span><span class="sxs-lookup"><span data-stu-id="58ffe-570">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-571">
            <paramref name="instanceType" /> o <paramref name="arguments" /> è null o <paramref name="arguments" /> contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-571">
              <paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-572">
            <paramref name="arguments" /> è vuoto o i tipi di risultato delle espressioni incluse non corrispondono ai requisiti di <paramref name="instanceType" />, come illustrato nella sezione relativa alle note.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-572">
              <paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, ParamArray arguments As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member New : System.Data.Metadata.Edm.TypeUsage * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New (instanceType, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instanceType">
          <span data-ttu-id="58ffe-573">Tipo della nuova istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-573">The type of the new instance.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="58ffe-574">Espressioni che specificano i valori delle nuove istanze, interpretate in base al tipo dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-574">Expressions that specify values of the new instances, interpreted according to the instance's type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-575">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-575">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          </span>
          <span data-ttu-id="58ffe-576">Se l'argomento di tipo è un tipo di insieme, gli argomenti specificano gli elementi dell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-576">If the type argument is a collection type, the arguments specify the elements of the collection.</span>
          </span>
          <span data-ttu-id="58ffe-577">In caso contrario, gli argomenti vengono utilizzati come valori di proprietà o di colonna della nuova istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-577">Otherwise the arguments are used as property or column values in the new instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-578">Nuovo DbNewInstanceExpression con tipo e argomenti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-578">A new DbNewInstanceExpression with the specified type and arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ffe-579">Se `instanceType` è un tipo di raccolta, ogni espressione nella `arguments` deve avere un tipo di risultato è promuovibile al tipo di elemento del `instanceType`.</span><span class="sxs-lookup"><span data-stu-id="58ffe-579">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="58ffe-580">Se `instanceType` è un tipo di riga, `arguments` deve contenere il numero di espressioni perché sono presenti colonne nel tipo di riga e il tipo di risultato di ogni espressione deve essere uguale o promovibile al tipo della colonna corrispondente.</span><span class="sxs-lookup"><span data-stu-id="58ffe-580">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="58ffe-581">Un tipo di riga che non dichiara tutte le colonne non è valido.</span><span class="sxs-lookup"><span data-stu-id="58ffe-581">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="58ffe-582">Se `instanceType` è un tipo di entità `arguments` deve contenere molte espressioni quante sono le proprietà definite dal tipo e il tipo di risultato di ogni espressione deve essere uguale o promovibile al tipo della proprietà corrispondente.</span><span class="sxs-lookup"><span data-stu-id="58ffe-582">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-583">
            <paramref name="instanceType" /> o <paramref name="arguments" /> è null o <paramref name="arguments" /> contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-583">
              <paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-584">
            <paramref name="arguments" /> è vuoto o i tipi di risultato delle espressioni incluse non corrispondono ai requisiti di <paramref name="instanceType" />, come illustrato nella sezione relativa alle note.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-584">
              <paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewCollection">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-585">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> che costruisce una raccolta contenente gli elementi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-585">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (elements As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberSignature Language="F#" Value="static member NewCollection : seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection elements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="elements">
          <span data-ttu-id="58ffe-586">Elenco di espressioni che forniscono gli elementi dell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-586">A list of expressions that provide the elements of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-587">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> che costruisce una raccolta contenente gli elementi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-587">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span>
          </span>
          <span data-ttu-id="58ffe-588">Il tipo dell'insieme si basa sul tipo comune degli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-588">The type of the collection is based on the common type of the elements.</span>
          </span>
          <span data-ttu-id="58ffe-589">Se non esiste alcun tipo di elemento comune viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-589">If no common element type exists an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-590">Nuovo DbNewInstanceExpression con tipo di raccolta e argomenti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-590">A new DbNewInstanceExpression with the specified collection type and arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-591">
            <paramref name="elements" /> è null o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-591">
              <paramref name="elements" /> is null, or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-592">
            <paramref name="elements" /> è vuoto o contiene espressioni per le quali non esiste alcun tipo di risultato comune.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-592">
              <paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (params System.Data.Common.CommandTrees.DbExpression[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Data.Common.CommandTrees.DbExpression[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (ParamArray elements As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberSignature Language="F#" Value="static member NewCollection : System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection elements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elements">
          <span data-ttu-id="58ffe-593">Elenco di espressioni che forniscono gli elementi dell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-593">A list of expressions that provide the elements of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-594">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> che costruisce una raccolta contenente gli elementi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-594">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span>
          </span>
          <span data-ttu-id="58ffe-595">Il tipo dell'insieme si basa sul tipo comune degli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-595">The type of the collection is based on the common type of the elements.</span>
          </span>
          <span data-ttu-id="58ffe-596">Se non esiste alcun tipo di elemento comune viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-596">If no common element type exists an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-597">Nuovo DbNewInstanceExpression con tipo di raccolta e argomenti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-597">A new DbNewInstanceExpression with the specified collection type and arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-598">
            <paramref name="elements" /> è null o contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-598">
              <paramref name="elements" /> is null, or contains null..</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-599">
            <paramref name="elements" /> è vuoto o contiene espressioni per le quali non esiste alcun tipo di risultato comune.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-599">
              <paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewEmptyCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection(class System.Data.Metadata.Edm.TypeUsage collectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NewEmptyCollection (collectionType As TypeUsage) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewEmptyCollection(System::Data::Metadata::Edm::TypeUsage ^ collectionType);" />
      <MemberSignature Language="F#" Value="static member NewEmptyCollection : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection collectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collectionType">
          <span data-ttu-id="58ffe-600">Metadati del tipo della raccolta da creare</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-600">The type metadata for the collection to create</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-601">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> che costruisce un insieme vuoto del tipo di insieme specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-601">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs an empty collection of the specified collection type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-602">Nuovo DbNewInstanceExpression con il tipo di raccolta specificato e un elenco <paramref name="Arguments" /> vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-602">A new DbNewInstanceExpression with the specified collection type and an empty <paramref name="Arguments" /> list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-603">
            <paramref name="collectionType" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-603">
              <paramref name="collectionType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-604">
            <paramref name="collectionType" /> non è un tipo di insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-604">
              <paramref name="collectionType" /> is not a collection type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow (columnValues As IEnumerable(Of KeyValuePair(Of String, DbExpression))) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewRow(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ columnValues);" />
      <MemberSignature Language="F#" Value="static member NewRow : seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow columnValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="columnValues">
          <span data-ttu-id="58ffe-605">Elenco di coppie valore-chiave-DbExpression-stringa che definisce la struttura e i valori della riga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-605">A list of string-DbExpression key-value pairs that defines the structure and values of the row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-606">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> che produce una riga con le colonne denominate e i valori indicati, specificati come espressioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-606">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that produces a row with the specified named columns and the given values, specified as expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-607">Nuovo DbNewInstanceExpression che rappresenta la costruzione della riga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-607">A new DbNewInstanceExpression that represents the construction of the row.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-608">
            <paramref name="columnValues" /> è null o contiene un elemento con un nome di colonna o un'espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-608">
              <paramref name="columnValues" /> is null or contains an element with a null column name or expression.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-609">
            <paramref name="columnValues" /> è vuoto o contiene un nome di colonna duplicato o non valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-609">
              <paramref name="columnValues" /> is empty, or contains a duplicate or invalid column name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNotExpression Not(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Not (argument As DbExpression) As DbNotExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNotExpression ^ Not(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Not : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbNotExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNotExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-610">Espressione booleana che specifica l'argomento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-610">A Boolean expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-611">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> che esegue la negazione logica dell'argomento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-611">Creates a <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> that performs the logical negation of the given argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-612">Nuovo DbNotExpression con l'argomento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-612">A new DbNotExpression with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-613">
            <paramref name="argument" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-613">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-614">
            <paramref name="argument" /> non contiene un tipo di risultato booleano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-614">
              <paramref name="argument" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression NotEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NotEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ NotEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member NotEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-615">Espressione che specifica l'argomento a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-615">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-616">Espressione che specifica l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-616">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-617">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> che verifica la diseguaglianza fra l'argomento a sinistra e quello a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-617">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-618">Nuovo DbComparisonExpression che rappresenta il confronto di disuguaglianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-618">A new DbComparisonExpression representing the inequality comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-619">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-619">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-620">Non esiste alcun tipo di risultato confrontabile in termini di uguaglianza comune tra <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-620">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNullExpression Null(class System.Data.Metadata.Edm.TypeUsage nullType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Null (nullType As TypeUsage) As DbNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNullExpression ^ Null(System::Data::Metadata::Edm::TypeUsage ^ nullType);" />
      <MemberSignature Language="F#" Value="static member Null : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbNullExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null nullType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nullType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="nullType">
          <span data-ttu-id="58ffe-621">Tipo del valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-621">The type of the null value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-622">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />che rappresenta un valore null tipizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-622">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, which represents a typed null value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-623">Istanza di DbNullExpression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-623">An instance of DbNullExpression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-624">
            <paramref name="nullType" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-624">
              <paramref name="nullType" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OfType">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfType(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfType(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member OfType : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbOfTypeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-625">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-625">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="58ffe-626">Metadati del tipo che gli elementi del set di input devono presentare per essere inclusi nel set risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-626">Type metadata for the type that elements of the input set must have to be included in the resulting set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-627">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> che produce un set di elementi del set di input specificato aventi il tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-627">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-628">Nuovo oggetto DbOfTypeExpression con l'argomento e il tipo di set specificati e un oggetto ExpressionKind di <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-628">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ffe-629">Richiede che l'oggetto DbOfTypeExpression `argument` dispone di una raccolta con un tipo di elemento polimorfica e che tipo di risultato `type` è un tipo dalla stessa gerarchia dei tipi di quel tipo di elemento.</span><span class="sxs-lookup"><span data-stu-id="58ffe-629">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-630">
            <paramref name="argument" /> o <paramref name="type" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-630">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-631">
            <paramref name="argument" /> non dispone di un tipo di risultati della raccolta o <paramref name="type" /> non è un tipo della stessa gerarchia di tipi del tipo di elemento del tipo di risultatati della raccolta di <paramref name="argument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-631">
              <paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OfTypeOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfTypeOnly (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfTypeOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member OfTypeOnly : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbOfTypeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-632">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-632">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="58ffe-633">Metadati del tipo a cui il tipo degli elementi del set di input deve corrispondere in modo esatto affinché gli elementi siano inclusi nel set risultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-633">Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-634">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> che produce un set di elementi del set di input specificato aventi esattamente il tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-634">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of exactly the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-635">Nuovo oggetto DbOfTypeExpression con l'argomento e il tipo di set specificati e un oggetto ExpressionKind di <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-635">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ffe-636">Richiede che l'oggetto DbOfTypeExpression `argument` dispone di una raccolta con un tipo di elemento polimorfica e che tipo di risultato `type` è un tipo dalla stessa gerarchia dei tipi di quel tipo di elemento.</span><span class="sxs-lookup"><span data-stu-id="58ffe-636">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-637">
            <paramref name="argument" /> o <paramref name="type" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-637">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-638">
            <paramref name="argument" /> non dispone di un tipo di risultati della raccolta o <paramref name="type" /> non è un tipo della stessa gerarchia di tipi del tipo di elemento del tipo di risultatati della raccolta di <paramref name="argument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-638">
              <paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOrExpression Or(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Or (left As DbExpression, right As DbExpression) As DbOrExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOrExpression ^ Or(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Or : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbOrExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOrExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-639">Espressione booleana che specifica l'argomento a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-639">A Boolean expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-640">Espressione booleana che specifica l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-640">A Boolean expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-641">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> che esegue l'operazione OR logica degli argomenti a sinistra e a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-641">Creates an <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> that performs the logical Or of the left and right arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-642">Nuovo DbOrExpression con gli argomenti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-642">A new DbOrExpression with the specified arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-643">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-643">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-644">
            <paramref name="left" /> o <paramref name="right" /> non dispone di un tipo di risultato booleano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-644">
              <paramref name="left" /> or <paramref name="right" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-645">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> che ordina il set di input specificato in base alla chiave di ordinamento specificata in ordine crescente e con le regole di confronto predefinite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-645">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="58ffe-646">Espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-646">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="58ffe-647">Metodo che specifica come derivare l'espressione della chiave di ordinamento dato un membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-647">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="58ffe-648">Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-648">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-649">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> che ordina il set di input specificato in base alla chiave di ordinamento specificata in ordine crescente e con le regole di confronto predefinite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-649">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-650">Nuovo DbSortExpression che rappresenta l'operazione di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-650">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-651">L'espressione generata da <paramref name="sortKey" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-651">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-652">L'espressione prodotta da <paramref name="sortKey" /> non dispone di un tipo di risultato confrontabile in termini di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-652">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="58ffe-653">Espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-653">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="58ffe-654">Metodo che specifica come derivare l'espressione della chiave di ordinamento dato un membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-654">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="58ffe-655">Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-655">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="58ffe-656">Regole di confronto da utilizzare per l'ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-656">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-657">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> che ordina il set di input specificato in base alla chiave di ordinamento specificata in ordine crescente e con le regole di confronto specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-657">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-658">Nuovo DbSortExpression che rappresenta l'operazione di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-658">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-659">L'espressione generata da <paramref name="sortKey" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-659">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-660">L'espressione prodotta da <paramref name="sortKey" /> non contiene di un tipo di risultato confrontabile in termini di risultato stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-660">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58ffe-661">
            <paramref name="collation" /> è vuoto o contiene solo spazi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-661">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-662">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> che ordina il set di input specificato in base alla chiave di ordinamento specificata in ordine decrescente e con le regole di confronto predefinite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-662">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="58ffe-663">Espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-663">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="58ffe-664">Metodo che specifica come derivare l'espressione della chiave di ordinamento dato un membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-664">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="58ffe-665">Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-665">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-666">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> che ordina il set di input specificato in base alla chiave di ordinamento specificata in ordine decrescente e con le regole di confronto predefinite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-666">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-667">Nuovo DbSortExpression che rappresenta l'operazione di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-667">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-668">L'espressione generata da <paramref name="sortKey" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-668">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-669">L'espressione prodotta da <paramref name="sortKey" /> non dispone di un tipo di risultato confrontabile in termini di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-669">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="58ffe-670">Espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-670">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="58ffe-671">Metodo che specifica come derivare l'espressione della chiave di ordinamento dato un membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-671">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="58ffe-672">Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-672">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="58ffe-673">Regole di confronto da utilizzare per l'ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-673">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-674">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> che ordina il set di input specificato in base alla chiave di ordinamento specificata in ordine decrescente e con le regole di confronto specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-674">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-675">Nuovo DbSortExpression che rappresenta l'operazione di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-675">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-676">L'espressione generata da <paramref name="sortKey" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-676">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-677">L'espressione prodotta da <paramref name="sortKey" /> non contiene di un tipo di risultato confrontabile in termini di risultato stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-677">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58ffe-678">
            <paramref name="collation" /> è vuoto o contiene solo spazi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-678">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OuterApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-679">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> che valuta l'espressione <paramref name="apply" /> specificata una volta per ogni elemento di un set di input specificato e produce una raccolta di righe con colonne corrispondenti relative all'input e all'espressione apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-679">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member OuterApply : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="58ffe-680">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-680">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="58ffe-681">Metodo che specifica la logica da valutare una volta per ogni membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-681">A method that specifies the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-682">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> che valuta l'espressione <paramref name="apply" /> specificata una volta per ogni elemento di un set di input specificato e produce una raccolta di righe con colonne corrispondenti relative all'input e all'espressione apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-682">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="58ffe-683">Le righe per cui <paramref name="apply" /> è un set vuoto presentano il valore <see langword="null" /> nella colonna apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-683">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-684">Nuovo DbApplyExpression con l'input specificato e applica le associazioni e un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> di OuterApply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-684">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-685">Il risultato di <paramref name="apply" /> contiene un nome o un'espressione null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-685">The result of <paramref name="apply" /> contains a name or expression that is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-686">Il risultato dell'operazione di <paramref name="apply" /> contiene un nome o un'espressione non valido in un'associazione di espressioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-686">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberSignature Language="F#" Value="static member OuterApply : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply (input, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="58ffe-687">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-687">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="58ffe-688">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> che specifica la logica da valutare una volta per ogni membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-688">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-689">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> che valuta l'espressione <paramref name="apply" /> specificata una volta per ogni elemento di un set di input specificato e produce una raccolta di righe con colonne corrispondenti relative all'input e all'espressione apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-689">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="58ffe-690">Le righe per cui <paramref name="apply" /> è un set vuoto presentano il valore <see langword="null" /> nella colonna apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-690">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-691">Nuovo DbApplyExpression con l'input specificato e applica le associazioni e un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> di OuterApply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-691">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-692">
            <paramref name="input" /> o <paramref name="apply" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-692">
              <paramref name="input" /> or <paramref name="apply" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Parameter (type As TypeUsage, name As String) As DbParameterReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ Parameter(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Parameter : System.Data.Metadata.Edm.TypeUsage * string -&gt; System.Data.Common.CommandTrees.DbParameterReferenceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbParameterReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="58ffe-693">Tipo del parametro a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-693">The type of the referenced parameter.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="58ffe-694">Nome del parametro a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-694">The name of the referenced parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-695">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> che fa riferimento a un parametro avente il nome e il tipo specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-695">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> that references a parameter with the specified name and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-696">DbParameterReferenceExpression che rappresenta un riferimento a un parametro con il nome e il tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-696">A DbParameterReferenceExpression that represents a reference to a parameter with the specified name and type.</span>
          </span>
          <span data-ttu-id="58ffe-697">Il tipo di risultato dell'espressione è uguale a <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-697">The result type of the expression will be the same as <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Plus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Plus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Plus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Plus : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-698">Espressione che specifica l'argomento a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-698">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-699">Espressione che specifica l'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-699">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-700">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> che aggiunge l'argomento a sinistra all'argomento a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-700">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that adds the left argument to the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-701">Nuovo DbArithmeticExpression che rappresenta l'operazione di addizione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-701">A new DbArithmeticExpression representing the addition operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-702">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-702">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-703">Non esiste alcun tipo di risultato numerico comune tra <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-703">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Project(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Project (input As DbExpressionBinding, projection As DbExpression) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Project(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ projection);" />
      <MemberSignature Language="F#" Value="static member Project : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project (input, projection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="projection" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="58ffe-704">Associazione a un'espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-704">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="projection">
          <span data-ttu-id="58ffe-705">Espressione da proiettare sul set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-705">An expression to project over the set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-706">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> che proietta l'espressione indicata sul set di input specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-706">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified expression over the given input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-707">Nuovo DbProjectExpression che rappresenta l'operazione di proiezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-707">A new DbProjectExpression that represents the projection operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-708">
            <paramref name="input" /> o <paramref name="projection" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-708">
              <paramref name="input" /> or <paramref name="projection" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Property">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-709">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> che rappresenta il recupero della proprietà specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-709">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.EdmProperty propertyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyMetadata As EdmProperty) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::EdmProperty ^ propertyMetadata);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.EdmProperty -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, propertyMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyMetadata" Type="System.Data.Metadata.Edm.EdmProperty" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="58ffe-710">Istanza da cui recuperare la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-710">The instance from which to retrieve the property.</span>
          </span>
          <span data-ttu-id="58ffe-711">Può essere null se la proprietà è statica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-711">May be null if the property is static.</span>
          </span>
        </param>
        <param name="propertyMetadata">
          <span data-ttu-id="58ffe-712">Metadati della proprietà da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-712">Metadata for the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-713">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> che rappresenta il recupero della proprietà specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-713">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-714">Nuovo DbPropertyExpression che rappresenta la proprietà di navigazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-714">A new DbPropertyExpression representing the property retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-715">
            <paramref name="propertyMetadata" /> è null o <paramref name="instance" /> è null e la proprietà non è statica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-715">
              <paramref name="propertyMetadata" /> is null or <paramref name="instance" /> is null and the property is not static.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.NavigationProperty navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::NavigationProperty ^ navigationProperty);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.NavigationProperty -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, navigationProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="navigationProperty" Type="System.Data.Metadata.Edm.NavigationProperty" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="58ffe-716">Istanza da cui recuperare la proprietà di navigazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-716">The instance from which to retrieve the navigation property.</span>
          </span>
        </param>
        <param name="navigationProperty">
          <span data-ttu-id="58ffe-717">Metadati della proprietà di navigazione da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-717">Metadata for the navigation property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-718">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> che rappresenta il recupero della proprietà di navigazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-718">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified navigation property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-719">Nuovo DbPropertyExpression che rappresenta il recupero della proprietà di navigazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-719">A new DbPropertyExpression representing the navigation property retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-720">
            <paramref name="navigationProperty" /> o <paramref name="instance" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-720">
              <paramref name="navigationProperty" /> or <paramref name="instance" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, relationshipEnd As RelationshipEndMember) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::RelationshipEndMember ^ relationshipEnd);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.RelationshipEndMember -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, relationshipEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="relationshipEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="58ffe-721">Istanza da cui recuperare il membro finale della relazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-721">The instance from which to retrieve the relationship end member.</span>
          </span>
        </param>
        <param name="relationshipEnd">
          <span data-ttu-id="58ffe-722">Metadati del membro finale della relazione da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-722">Metadata for the relationship end member to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-723">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> che rappresenta il recupero del membro finale della relazione specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-723">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified relationship end member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-724">Nuovo DbPropertyExpression che rappresenta il recupero del membro finale della relazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-724">A new DbPropertyExpression representing the relationship end member retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-725">
            <paramref name="relationshipEnd" /> è null o <paramref name="instance" /> è null e la proprietà non è statica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-725">
              <paramref name="relationshipEnd" /> is null or <paramref name="instance" /> is null and the property is not static.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyName As String) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="58ffe-726">Istanza da cui recuperare la proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-726">The instance from which to retrieve the property.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="58ffe-727">Nome della proprietà da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-727">The name of the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-728">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> che rappresenta il recupero della proprietà di istanza avente il nome specificato dall'istanza specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-728">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the instance property with the specified name from the given instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-729">Nuovo DbPropertyExpression che rappresenta il recupero della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-729">A new DbPropertyExpression that represents the property retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-730">
            <paramref name="propertyName" /> è null o <paramref name="instance" /> è null e la proprietà non è statica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-730">
              <paramref name="propertyName" /> is null or <paramref name="instance" /> is null and the property is not static.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58ffe-731">Nessuna proprietà con il nome specificato viene dichiarata dal tipo di <paramref name="instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-731">No property with the specified name is declared by the type of <paramref name="instance" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RefFromKey">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-732">Crea un nuovo elemento <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> che codifica un riferimento a un'entità specifica basata su valori chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-732">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow);" />
      <MemberSignature Language="F#" Value="static member RefFromKey : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey (entitySet, keyRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="58ffe-733">Set di entità che contiene l'elemento a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-733">The Entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyRow">
          <span data-ttu-id="58ffe-734">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che costruisce un record con le colonne che corrispondono (in numero, tipo e ordine) alle proprietà di chiave del tipo di entità a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-734">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-735">Crea un nuovo elemento <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> che codifica un riferimento a un'entità specifica basata su valori chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-735">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-736">Nuovo DbRefExpression che fa riferimento all'elemento con i valori della chiave specificati nel set di entità specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-736">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ffe-737">`keyRow` deve essere un'espressione che specifica i valori di chiave che identificano l'entità con riferimenti all'interno dell'entità specificato impostata.</span><span class="sxs-lookup"><span data-stu-id="58ffe-737">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="58ffe-738">Il tipo di risultato `keyRow` deve contenere una colonna corrispondente per ogni proprietà chiave definita da `entitySet's` tipo di entità.</span><span class="sxs-lookup"><span data-stu-id="58ffe-738">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-739">
            <paramref name="entitySet" /> o <paramref name="keyRow" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-739">
              <paramref name="entitySet" /> or <paramref name="keyRow" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-740">
            <paramref name="keyRow" /> non dispone di un tipo di risultati di record che corrisponde alla proprietà dei tasti del tipo di entità del set di entità di riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-740">
              <paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow, class System.Data.Metadata.Edm.EntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow, System::Data::Metadata::Edm::EntityType ^ entityType);" />
      <MemberSignature Language="F#" Value="static member RefFromKey : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.EntityType -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey (entitySet, keyRow, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="58ffe-741">Set di entità che contiene l'elemento a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-741">The Entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyRow">
          <span data-ttu-id="58ffe-742">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che costruisce un record con le colonne che corrispondono (in numero, tipo e ordine) alle proprietà di chiave del tipo di entità a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-742">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span>
          </span>
        </param>
        <param name="entityType">
          <span data-ttu-id="58ffe-743">Tipo di Entità a cui fare riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-743">The type of the Entity that the reference should refer to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-744">Crea un nuovo elemento <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> che codifica un riferimento a un'entità specifica basata su valori chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-744">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-745">Nuovo DbRefExpression che fa riferimento all'elemento con i valori della chiave specificati nel set di entità specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-745">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ffe-746">`keyRow` deve essere un'espressione che specifica i valori di chiave che identificano l'entità con riferimenti all'interno dell'entità specificato impostata.</span><span class="sxs-lookup"><span data-stu-id="58ffe-746">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="58ffe-747">Il tipo di risultato `keyRow` deve contenere una colonna corrispondente per ogni proprietà chiave definita da `entitySet's` tipo di entità.</span><span class="sxs-lookup"><span data-stu-id="58ffe-747">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-748">
            <paramref name="entitySet" />, <paramref name="keyRow" /> o <paramref name="entityType" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-748">
              <paramref name="entitySet" />,  <paramref name="keyRow" /> or <paramref name="entityType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-749">
            <paramref name="entityType" /> non si trova nella stessa gerarchia tipi del tipo di entità del set di entità oppure <paramref name="keyRow" /> non dispone di un tipo di risultato record corrispondente alle proprietà chiave del tipo di entità del set di entità a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-749">
              <paramref name="entityType" /> is not in the same type hierarchy as the entity set's entity type, or <paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Scan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbScanExpression Scan(class System.Data.Metadata.Edm.EntitySetBase targetSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Scan (targetSet As EntitySetBase) As DbScanExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbScanExpression ^ Scan(System::Data::Metadata::Edm::EntitySetBase ^ targetSet);" />
      <MemberSignature Language="F#" Value="static member Scan : System.Data.Metadata.Edm.EntitySetBase -&gt; System.Data.Common.CommandTrees.DbScanExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan targetSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbScanExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSet" Type="System.Data.Metadata.Edm.EntitySetBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="targetSet">
          <span data-ttu-id="58ffe-750">Metadati del set di entità o di relazioni a cui fare riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-750">Metadata for the entity or relationship set to reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-751">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> che fa riferimento al set di entità o di relazioni specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-751">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> that references the specified entity or relationship set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-752">Nuovo DbScanExpression basato sull'entità o sul set di relazioni specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-752">A new DbScanExpression based on the specified entity or relationship set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-753">
            <paramref name="targetSet" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-753">
              <paramref name="targetSet" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TProjection&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt; projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, !!TProjection&gt; projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TProjection) (source As DbExpression, projection As Func(Of DbExpression, TProjection)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProjection&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Select(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, TProjection&gt; ^ projection);" />
      <MemberSignature Language="F#" Value="static member Select : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, 'Projection&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select (source, projection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProjection" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="projection" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProjection">
          <span data-ttu-id="58ffe-754">Tipo di risultato del metodo <c>proiezione</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-754">The method result type of <c>projection</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="58ffe-755">Espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-755">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="projection">
          <span data-ttu-id="58ffe-756">Metodo che specifica come derivare l'espressione proiettata, in base a un membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-756">A method that specifies how to derive the projected expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="58ffe-757">Questo metodo deve produrre un'istanza che presenti un tipo compatibile con Select e che possa essere risolto in un oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-757">This method must produce an instance of a type that is compatible with Select and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          </span>
          <span data-ttu-id="58ffe-758">I requisiti di compatibilità per <c>TProjection</c> sono descritti nelle note.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-758">Compatibility requirements for <c>TProjection</c> are described in remarks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-759">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> che seleziona l'espressione indicata sul set di input specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-759">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that selects the specified expression over the given input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-760">Nuovo DbProjectExpression che rappresenta l'operazione di selezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-760">A new DbProjectExpression that represents the select operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ffe-761">Per essere compatibile con l'istruzione Select, `TProjection` deve essere derivato da <xref:System.Data.Common.CommandTrees.DbExpression>, o deve essere un tipo anonimo con proprietà derivate da DbExpression.</span><span class="sxs-lookup"><span data-stu-id="58ffe-761">To be compatible with Select, `TProjection` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="58ffe-762">Di seguito sono riportati esempi dei tipi supportati per `TProjection`:</span><span class="sxs-lookup"><span data-stu-id="58ffe-762">The following are examples of supported types for `TProjection`:</span></span>  
  
```  
source.Select(x => x.Property("Name"))  
```  
  
 <span data-ttu-id="58ffe-763">`TProjection` è <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="58ffe-763">`TProjection` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.Select(x => new { Name = x.Property("Name") })  
```  
  
 <span data-ttu-id="58ffe-764">(`TProjection` è un tipo anonimo con una proprietà derivate da DbExpression).</span><span class="sxs-lookup"><span data-stu-id="58ffe-764">(`TProjection` is an anonymous type with a DbExpression-derived property).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-765">Il risultato della <paramref name="projection" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-765">The result of <paramref name="projection" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany (source As DbExpression, apply As Func(Of DbExpression, DbExpression)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="58ffe-766">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-766">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="58ffe-767">Metodo che rappresenta la logica da valutare una volta per ogni membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-767">A method that represents the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-768">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> che valuta l'espressione <paramref name="apply" /> specificata una volta per ogni elemento di un set di input specificato e produce una raccolta di righe con colonne corrispondenti relative all'input e all'espressione apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-768">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="58ffe-769">Le righe in cui <paramref name="apply" /> restituisce un set vuoto non vengono incluse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-769">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
          <span data-ttu-id="58ffe-770">Viene quindi creato un oggetto <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> che seleziona la colonna <paramref name="apply" /> da ogni riga, producendo l'insieme complessivo di risultati <paramref name="apply" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-770">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the <paramref name="apply" /> column from each row, producing the overall collection of <paramref name="apply" /> results.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-771">Nuovo DbProjectExpression che seleziona la colonna di applicazione da un nuovo DbApplyExpression con l'input specificato e applica le associazioni e un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> di CrossApply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-771">An new DbProjectExpression that selects the apply column from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-772">L'espressione generata da <paramref name="apply" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-772">The expression produced by <paramref name="apply" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-773">L'espressione prodotta da <paramref name="apply" /> non dispone di un tipo di raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-773">The expression produced by <paramref name="apply" /> does not have a collection type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSelector) (source As DbExpression, apply As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, 'Selector&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany (source, apply, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector">
          <span data-ttu-id="58ffe-774">Tipo di risultato del metodo <c>selettore</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-774">The method result type of <c>selector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="58ffe-775">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-775">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="58ffe-776">Metodo che rappresenta la logica da valutare una volta per ogni membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-776">A method that represents the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="58ffe-777">Metodo che specifica come derivare un elemento del set di risultati dato un elemento dei set relativi all'input e all'espressione apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-777">A method that specifies how an element of the result set should be derived given an element of the input and apply sets.</span>
          </span>
          <span data-ttu-id="58ffe-778">Questo metodo deve produrre un'istanza che presenti un tipo compatibile con SelectMany e che possa essere risolto in un oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-778">This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          </span>
          <span data-ttu-id="58ffe-779">I requisiti di compatibilità per <c>TSelector</c> sono descritti nelle note.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-779">Compatibility requirements for <c>TSelector</c> are described in remarks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-780">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> che valuta l'espressione <paramref name="apply" /> specificata una volta per ogni elemento di un set di input specificato e produce una raccolta di righe con colonne corrispondenti relative all'input e all'espressione apply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-780">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="58ffe-781">Le righe in cui <paramref name="apply" /> restituisce un set vuoto non vengono incluse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-781">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
          <span data-ttu-id="58ffe-782">Viene quindi creato un oggetto <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> che seleziona il parametro <paramref name="selector" /> specificato in ogni riga, producendo l'insieme complessivo di risultati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-782">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the specified <paramref name="selector" /> over each row, producing the overall collection of results.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-783">Nuovo DbProjectExpression che seleziona il risultato del selettore specificato da un nuovo DbApplyExpression con l'input specificato e applica le associazioni e un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> di CrossApply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-783">An new DbProjectExpression that selects the result of the given selector from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ffe-784">Per essere compatibile con SelectMany `TSelector` deve essere derivato da <xref:System.Data.Common.CommandTrees.DbExpression>, o deve essere un tipo anonimo con proprietà derivate da DbExpression.</span><span class="sxs-lookup"><span data-stu-id="58ffe-784">To be compatible with SelectMany, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="58ffe-785">Di seguito sono riportati esempi dei tipi supportati per `TSelector`:</span><span class="sxs-lookup"><span data-stu-id="58ffe-785">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => apply.Property("Name"))  
```  
  
 <span data-ttu-id="58ffe-786">(`TSelector` è <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="58ffe-786">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => new { SourceName = source.Property("Name"), RelatedName = apply.Property("Name") })  
```  
  
 <span data-ttu-id="58ffe-787">(`TSelector` è un tipo anonimo con proprietà derivate da DbExpression).</span><span class="sxs-lookup"><span data-stu-id="58ffe-787">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-788">Il risultato di <paramref name="selector" /> è null nella conversione a DbExpression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-788">The result of <paramref name="selector" /> is null on conversion to DbExpression.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-789">L'espressione prodotta da <paramref name="apply" /> non dispone di un tipo di raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-789">The expression produced by <paramref name="apply" /> does not have a collection type.</span>
          </span>
          <span data-ttu-id="58ffe-790">non dispone di un tipo di raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-790">does not have a collection type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Skip">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-791">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> che ordina il set di input in base alle specifiche di ordinamento prima di ignorare il numero specificato di elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-791">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbSortExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (argument As DbSortExpression, count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbSortExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Data.Common.CommandTrees.DbSortExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSkipExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-792">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> che specifica il set di input ordinato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-792">A <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that specifies the sorted input set.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="58ffe-793">Espressione che specifica il numero di elementi del set ordinato da ignorare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-793">An expression the specifies how many elements of the ordered set to skip.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-794">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> che ignora il numero specificato di elementi del set di input ordinato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-794">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that skips the specified number of elements from the given sorted input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-795">Nuovo DbSkipExpression che rappresenta l'operazione Skip.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-795">A new DbSkipExpression that represents the skip operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-796">
            <paramref name="argument" /> o <paramref name="count" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-796">
              <paramref name="argument" /> or <paramref name="count" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-797">
            <paramref name="count" /> non è un oggetto <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> o <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> oppure dispone di un tipo di risultato diverso da o non promuovibile a un tipo Integer a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-797">
              <paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause), count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Data.Common.CommandTrees.DbExpressionBinding * seq&lt;System.Data.Common.CommandTrees.DbSortClause&gt; * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSkipExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip (input, sortOrder, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="58ffe-798">Associazione a un'espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-798">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="sortOrder">
          <span data-ttu-id="58ffe-799">Elenco di specifiche di ordinamento che determinano come ordinare gli elementi del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-799">A list of sort specifications that determine how the elements of the input set should be sorted.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="58ffe-800">Espressione che specifica il numero di elementi del set ordinato da ignorare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-800">An expression the specifies how many elements of the ordered set to skip.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-801">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> che ordina il set di input in base alle specifiche di ordinamento prima di ignorare il numero specificato di elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-801">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-802">Nuovo DbSkipExpression che rappresenta l'operazione Skip.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-802">A new DbSkipExpression that represents the skip operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-803">
            <paramref name="input" />, <paramref name="sortOrder" /> o <paramref name="count" /> è null o <paramref name="sortOrder" /> contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-803">
              <paramref name="input" />,  <paramref name="sortOrder" /> or <paramref name="count" /> is null, or <paramref name="sortOrder" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-804">
            <paramref name="sortOrder" /> è vuoto o <paramref name="count" /> non è un oggetto <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> o un oggetto <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> oppure dispone di un tipo di risultato diverso da o non promuovibile a un tipo Integer a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-804">
              <paramref name="sortOrder" /> is empty, or <paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression Sort(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sort (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ Sort(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder);" />
      <MemberSignature Language="F#" Value="static member Sort : System.Data.Common.CommandTrees.DbExpressionBinding * seq&lt;System.Data.Common.CommandTrees.DbSortClause&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort (input, sortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="58ffe-805">Associazione a un'espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-805">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="sortOrder">
          <span data-ttu-id="58ffe-806">Elenco di specifiche di ordinamento che determinano come ordinare gli elementi del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-806">A list of sort specifications that determine how the elements of the input set should be sorted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-807">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> che ordina il set di input specificato in base alle specifiche di ordinamento specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-807">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort specifications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-808">Nuovo DbSortExpression che rappresenta l'operazione Sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-808">A new DbSortExpression that represents the sort operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-809">
            <paramref name="input" /> o <paramref name="sortOrder" /> è null o <paramref name="sortOrder" /> contiene un valore null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-809">
              <paramref name="input" /> or <paramref name="sortOrder" /> is null, or <paramref name="sortOrder" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-810">
            <paramref name="sortOrder" /> è vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-810">
              <paramref name="sortOrder" /> is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Take(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Take(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Take : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLimitExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-811">Espressione che specifica la raccolta di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-811">An expression that specifies the input collection.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="58ffe-812">Espressione che specifica il valore del limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-812">An expression that specifies the limit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-813">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> che limita il numero di elementi della raccolta Argument al valore di limite di conteggio specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-813">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span>
          </span>
          <span data-ttu-id="58ffe-814">I risultati correlati non sono inclusi nell'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-814">Tied results are not included in the output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-815">Nuovo DbLimitExpression con l'argomento specificato e valori limite di conteggio che non includono i risultati associati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-815">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-816">
            <paramref name="argument" /> o <paramref name="count" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-816">
              <paramref name="argument" /> or <paramref name="count" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-817">
            <paramref name="argument" /> non dispone di un tipo di risultati della raccolta, <paramref name="count" /> non dispone di un tipo di risultato uguale o promuovibile a un tipo Integer a 64 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-817">
              <paramref name="argument" /> does not have a collection result type,  <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-818">Crea un nuovo elemento <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> con un ordinamento che include l'ordinamento del set di input nell'ordine specificato insieme alla chiave di ordinamento specificata in ordine crescente e con le regole di confronto predefinite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-818">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="58ffe-819">Oggetto DbSortExpression che specifica il set di input ordinato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-819">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="58ffe-820">Metodo che specifica come derivare l'espressione della chiave di ordinamento aggiuntiva dato un membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-820">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="58ffe-821">Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-821">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-822">Crea un nuovo elemento <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> con un ordinamento che include l'ordinamento del set di input nell'ordine specificato insieme alla chiave di ordinamento specificata in ordine crescente e con le regole di confronto predefinite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-822">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-823">Nuovo DbSortExpression che rappresenta la precedente operazione di ordinamento generale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-823">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-824">L'espressione generata da <paramref name="sortKey" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-824">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-825">
            <paramref name="sortKey" /> non dispone di un tipo di risultato confrontabile in termini di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-825">
              <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="58ffe-826">Oggetto DbSortExpression che specifica il set di input ordinato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-826">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="58ffe-827">Metodo che specifica come derivare l'espressione della chiave di ordinamento aggiuntiva dato un membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-827">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="58ffe-828">Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-828">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="58ffe-829">Regole di confronto da utilizzare per l'ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-829">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-830">Crea un nuovo elemento <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> con un ordinamento che include l'ordinamento del set di input nell'ordine indicato insieme alla chiave di ordinamento specificata in ordine crescente e con le regole di confronto specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-830">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-831">Nuovo DbSortExpression che rappresenta la precedente operazione di ordinamento generale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-831">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-832">L'espressione generata da <paramref name="sortKey" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-832">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-833">L'espressione prodotta da <paramref name="sortKey" /> non contiene di un tipo di risultato confrontabile in termini di risultato stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-833">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58ffe-834">
            <paramref name="collation" /> è vuoto o contiene solo spazi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-834">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-835">Crea un nuovo elemento <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> con un ordinamento che include l'ordinamento del set di input nell'ordine indicato insieme alla chiave di ordinamento specificata in ordine decrescente e con le regole di confronto predefinite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-835">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="58ffe-836">Oggetto DbSortExpression che specifica il set di input ordinato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-836">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="58ffe-837">Metodo che specifica come derivare l'espressione della chiave di ordinamento aggiuntiva dato un membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-837">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="58ffe-838">Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-838">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-839">Crea un nuovo elemento <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> con un ordinamento che include l'ordinamento del set di input nell'ordine indicato insieme alla chiave di ordinamento specificata in ordine decrescente e con le regole di confronto predefinite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-839">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-840">Nuovo DbSortExpression che rappresenta la precedente operazione di ordinamento generale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-840">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-841">L'espressione generata da <paramref name="sortKey" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-841">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-842">L'espressione prodotta da <paramref name="sortKey" /> non dispone di un tipo di risultato confrontabile in termini di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-842">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="58ffe-843">Oggetto DbSortExpression che specifica il set di input ordinato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-843">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="58ffe-844">Metodo che specifica come derivare l'espressione della chiave di ordinamento aggiuntiva dato un membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-844">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="58ffe-845">Questo metodo deve produrre un'espressione con un tipo di risultato confrontabile in termini di ordinamento che fornisce la definizione della chiave di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-845">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="58ffe-846">Regole di confronto da utilizzare per l'ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-846">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-847">Crea un nuovo elemento <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> con un ordinamento che include l'ordinamento del set di input nell'ordine indicato insieme alla chiave di ordinamento specificata in ordine decrescente e con le regole di confronto specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-847">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-848">Nuovo DbSortExpression che rappresenta la precedente operazione di ordinamento generale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-848">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-849">L'espressione generata da <paramref name="sortKey" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-849">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-850">L'espressione prodotta da <paramref name="sortKey" /> non contiene di un tipo di risultato confrontabile in termini di risultato stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-850">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58ffe-851">
            <paramref name="collation" /> è vuoto o contiene solo spazi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-851">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClause">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-852">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> con un ordinamento crescente e con le regole di confronto predefinite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-852">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberSignature Language="F#" Value="static member ToSortClause : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="58ffe-853">Espressione che definisce la chiave di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-853">The expression that defines the sort key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-854">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> con un ordinamento crescente e con le regole di confronto predefinite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-854">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-855">Nuova clausola di ordinamento con chiave di ordinamento data e ordine di ordinamento ascendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-855">A new sort clause with the given sort key and ascending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-856">
            <paramref name="key" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-856">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-857">
            <paramref name="key" /> non dispone di un tipo di risultato confrontabile in termini di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-857">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ToSortClause : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause (key, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="58ffe-858">Espressione che definisce la chiave di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-858">The expression that defines the sort key.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="58ffe-859">Regole di confronto da utilizzare per l'ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-859">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-860">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> con un ordinamento crescente e con le regole di confronto specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-860">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-861">Nuova clausola di ordinamento con chiave di ordinamento e regole di confronto date e ordine di ordinamento ascendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-861">A new sort clause with the given sort key and collation, and ascending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-862">
            <paramref name="key" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-862">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58ffe-863">
            <paramref name="collation" /> è vuoto o contiene solo spazi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-863">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-864">
            <paramref name="key" /> non dispone di un tipo di risultato confrontabile in termini di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-864">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClauseDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-865">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> con un ordinamento decrescente e con le regole di confronto predefinite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-865">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberSignature Language="F#" Value="static member ToSortClauseDescending : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="58ffe-866">Espressione che definisce la chiave di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-866">The expression that defines the sort key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-867">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> con un ordinamento decrescente e con le regole di confronto predefinite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-867">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-868">Nuova clausola di ordinamento con chiave di ordinamento data e ordine di ordinamento discendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-868">A new sort clause with the given sort key and descending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-869">
            <paramref name="key" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-869">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-870">
            <paramref name="key" /> non dispone di un tipo di risultato confrontabile in termini di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-870">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ToSortClauseDescending : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending (key, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="58ffe-871">Espressione che definisce la chiave di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-871">The expression that defines the sort key.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="58ffe-872">Regole di confronto da utilizzare per l'ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-872">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-873">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> con un ordinamento decrescente e con le regole di confronto specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-873">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-874">Nuova clausola di ordinamento con chiave di ordinamento e regole di confronto date e ordine di ordinamento discendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-874">A new sort clause with the given sort key and collation, and descending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-875">
            <paramref name="key" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-875">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58ffe-876">
            <paramref name="collation" /> è vuoto o contiene solo spazi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-876">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-877">
            <paramref name="key" /> non dispone di un tipo di risultato confrontabile in termini di ordinamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-877">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TreatAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbTreatExpression TreatAs(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage treatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TreatAs (argument As DbExpression, treatType As TypeUsage) As DbTreatExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbTreatExpression ^ TreatAs(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ treatType);" />
      <MemberSignature Language="F#" Value="static member TreatAs : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbTreatExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs (argument, treatType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbTreatExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="treatType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-878">Espressione che specifica l'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-878">An expression that specifies the instance.</span>
          </span>
        </param>
        <param name="treatType">
          <span data-ttu-id="58ffe-879">Metadati del tipo da utilizzare come modello di trattamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-879">Type metadata for the treat-as type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-880">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-880">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-881">Nuovo DbTreatExpression con l'argomento e il tipo di destinazione specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-881">A new DbTreatExpression with the specified argument and type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ffe-882">È necessario che DbTreatExpression `argument` dispone di un tipo di risultato polimorfico e che `treatType` è un tipo dalla stessa gerarchia dei tipi di quel tipo di risultato.</span><span class="sxs-lookup"><span data-stu-id="58ffe-882">DbTreatExpression requires that `argument` has a polymorphic result type, and that `treatType` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-883">
            <paramref name="argument" /> o <paramref name="treatType" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-883">
              <paramref name="argument" /> or <paramref name="treatType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-884">
            <paramref name="treatType" /> non si trova nella stessa gerarchia dei tipi del tipo di risultato di <paramref name="argument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-884">
              <paramref name="treatType" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="True">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression True" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property True As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ True { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.True : System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58ffe-885">Ottiene un oggetto <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> con il valore booleano <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-885">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58ffe-886">Oggetto <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> con il valore booleano <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-886">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnaryMinus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnaryMinus (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ UnaryMinus(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member UnaryMinus : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="58ffe-887">Espressione che specifica l'argomento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-887">An expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-888">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> che nega il valore dell'argomento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-888">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-889">Nuovo DbArithmeticExpression che rappresenta l'operazione di negazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-889">A new DbArithmeticExpression representing the negation operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-890">
            <paramref name="argument" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-890">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-891">Non esiste alcun tipo di risultato numerico per <paramref name="argument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-891">No numeric result type exists for <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Union(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union (left As DbExpression, right As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Union(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Union : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-892">Espressione che definisce l'argomento di set a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-892">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-893">Espressione che definisce l'argomento di set a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-893">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-894">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che calcola l'unione degli argomenti di set a sinistra e a destra rimuovendone i duplicati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-894">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that computes the union of the left and right set arguments with duplicates removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-895">Nuovo DbExpression che calcola l'unione, senza duplicati, degli argomenti a sinistra e a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-895">A new DbExpression that computes the union, without duplicates, of the left and right arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-896">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-896">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-897">Non esiste alcun tipo di risultati della raccolta comune con un tipo di elemento confrontabile in termini di uguaglianza tra <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-897">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnionAll (left As DbExpression, right As DbExpression) As DbUnionAllExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbUnionAllExpression ^ UnionAll(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member UnionAll : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbUnionAllExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbUnionAllExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="58ffe-898">Espressione che definisce l'argomento di set a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-898">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="58ffe-899">Espressione che definisce l'argomento di set a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-899">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-900">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> che calcola l'unione degli argomenti di set a sinistra e a destra senza rimuoverne i duplicati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-900">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> that computes the union of the left and right set arguments and does not remove duplicates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-901">Nuovo DbUnionAllExpression che unisce gli argomenti a sinistra e a destra, inclusi i duplicati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-901">A new DbUnionAllExpression that union, including duplicates, of the left and right arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-902">
            <paramref name="left" /> o <paramref name="right" /> è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-902">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-903">Non esiste alcun tipo di risultati della raccolta comune con un tipo di elemento confrontabile in termini di uguaglianza tra <paramref name="left" /> e <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-903">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Variable (type As TypeUsage, name As String) As DbVariableReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ Variable(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Variable : System.Data.Metadata.Edm.TypeUsage * string -&gt; System.Data.Common.CommandTrees.DbVariableReferenceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbVariableReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="58ffe-904">Tipo della variabile a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-904">The type of the referenced variable.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="58ffe-905">Nome della variabile a cui si fa riferimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-905">The name of the referenced variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-906">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> che fa riferimento a una variabile avente il nome e il tipo specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-906">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that references a variable with the specified name and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-907">DbVariableReferenceExpression che rappresenta un riferimento a una variabile con il nome e il tipo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-907">A DbVariableReferenceExpression that represents a reference to a variable with the specified name and type.</span>
          </span>
          <span data-ttu-id="58ffe-908">Il tipo di risultato dell'espressione è uguale a <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-908">The result type of the expression will be the same as <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Where(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Where(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbFilterExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="58ffe-909">Espressione che specifica il set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-909">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="58ffe-910">Metodo che rappresenta il predicato da valutare per ogni membro del set di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-910">A method representing the predicate to evaluate for each member of the input set.</span>
          </span>
          <span data-ttu-id="58ffe-911">Questo metodo deve produrre un'espressione con un tipo di risultato booleano che fornisce la logica predicativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-911">This method must produce an expression with a Boolean result type that provides the predicate logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58ffe-912">Crea un nuovo oggetto <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> che filtra gli elementi nel set di input specificato tramite il predicato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-912">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58ffe-913">Nuovo DbQuantifierExpression che rappresenta l'operazione Any.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-913">A new DbQuantifierExpression that represents the Any operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58ffe-914">L'espressione generata da <paramref name="predicate" /> è Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-914">The expression produced by <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58ffe-915">L'espressione generata da <paramref name="predicate" /> non ha un tipo di risultato Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58ffe-915">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>