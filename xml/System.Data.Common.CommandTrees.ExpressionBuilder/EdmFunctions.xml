<Type Name="EdmFunctions" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ade158612276cd38148f7062489c3007520cefe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EdmFunctions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EdmFunctions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" />
  <TypeSignature Language="VB.NET" Value="Public Module EdmFunctions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EdmFunctions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c07ed-101">Fornisce una API per costruire oggetti <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> che richiamano funzioni EDM canoniche e consente di accedere all'API come metodi di estensione nel tipo di espressione stesso.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c07ed-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that invoke canonical EDM functions, and allows that API to be accessed as extension methods on the expression type itself.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Abs (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Abs(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Abs (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Abs(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c07ed-102">Espressione che specifica il valore numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-102">An expression that specifies the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-103">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Abs' canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-103">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Abs' function with the specified argument, which must each have a numeric result type.</span>
          </span>
          <span data-ttu-id="c07ed-104">Il tipo di risultato dell'espressione è lo stesso di **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-104">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-105">Nuova classe DbFunctionExpression che restituisce il valore assoluto di **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-105">A new DbFunctionExpression that returns the absolute value of **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-106">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-106">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-107">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-107">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddDays (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddDays(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDays (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c07ed-108">Espressione che specifica il valore a cui aggiungere **addValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-108">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c07ed-109">Espressione che specifica il numero di giorni da aggiungere a **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-109">An expression that specifies the number of days to add to **dateValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-110">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddDays' canonica con gli argomenti specificati, che devono presentare tipi di risultato DateTime, DateTimeOffset e Integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-110">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddDays' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span>
          </span>
          <span data-ttu-id="c07ed-111">Il tipo di risultato dell'espressione è uguale al tipo di risultato di **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-111">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-112">Nuova classe DbFunctionExpression che aggiunge il numero di giorni specificato da **addValue** al valore specificato da **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-112">A new DbFunctionExpression that adds the number of days specified by **addValue** to the value specified by **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-113">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-113">**dateValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-114">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-114">**dateValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddHours (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddHours(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHours (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c07ed-115">Espressione che specifica il valore a cui aggiungere **addValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-115">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c07ed-116">Espressione che specifica il numero di ore da aggiungere a **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-116">An expression that specifies the number of hours to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-117">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddHours' canonica con gli argomenti specificati, che devono presentare tipi di risultato DateTime, DateTimeOffset o Time e Integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-117">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddHours' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="c07ed-118">Il tipo di risultato dell'espressione è lo stesso di **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-118">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-119">Nuova classe DbFunctionExpression che aggiunge il numero di ore specificato da **addValue** al valore specificato da **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-119">A new DbFunctionExpression that adds the number of hours specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-120">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-120">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-121">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-121">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMicroseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c07ed-122">Espressione che specifica il valore a cui aggiungere **addValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-122">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c07ed-123">Espressione che specifica il numero di microsecondi da aggiungere a**timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-123">An expression that specifies the number of microseconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-124">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddMicroseconds' canonica con gli argomenti specificati, che devono presentare tipi di risultato DateTime, DateTimeOffset o Time e Integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-124">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMicroseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="c07ed-125">Il tipo di risultato dell'espressione è lo stesso di **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-125">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-126">Nuova classe DbFunctionExpression che aggiunge il numero di microsecondi specificato da **addValue** al valore specificato da **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-126">A new DbFunctionExpression that adds the number of microseconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-127">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-127">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-128">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-128">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMilliseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c07ed-129">Espressione che specifica il valore a cui aggiungere **addValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-129">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c07ed-130">Espressione che specifica il numero di millisecondi da aggiungere a **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-130">An expression that specifies the number of milliseconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-131">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddMilliseconds' canonica con gli argomenti specificati, che devono presentare tipi di risultato DateTime, DateTimeOffset o Time e Integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-131">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMilliseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="c07ed-132">Il tipo di risultato dell'espressione è lo stesso di **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-132">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-133">Nuova classe DbFunctionExpression che aggiunge il numero di millisecondi specificato da **addValue** al valore specificato da **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-133">A new DbFunctionExpression that adds the number of milliseconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-134">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-134">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-135">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-135">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMinutes (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c07ed-136">Espressione che specifica il valore a cui aggiungere **addValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-136">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c07ed-137">Espressione che specifica il numero di minuti da aggiungere a **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-137">An expression that specifies the number of minutes to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-138">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddMinutes' canonica con gli argomenti specificati, che devono presentare tipi di risultato DateTime, DateTimeOffset o Time e Integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-138">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMinutes' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="c07ed-139">Il tipo di risultato dell'espressione è lo stesso di **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-139">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-140">Nuova classe DbFunctionExpression che aggiunge il numero di minuti specificato da **addValue** al valore specificato da **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-140">A new DbFunctionExpression that adds the number of minutes specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-141">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-141">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-142">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-142">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMonths (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMonths(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMonths (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c07ed-143">Espressione che specifica il valore a cui aggiungere **addValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-143">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c07ed-144">Espressione che specifica il numero di mesi da aggiungere a **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-144">An expression that specifies the number of months to add to **dateValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-145">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddMonths' canonica con gli argomenti specificati, che devono presentare tipi di risultato DateTime, DateTimeOffset e Integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-145">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMonths' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span>
          </span>
          <span data-ttu-id="c07ed-146">Il tipo di risultato dell'espressione è uguale al tipo di risultato di **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-146">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-147">Nuova classe DbFunctionExpression che aggiunge il numero di mesi specificato da **addValue** al valore specificato da **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-147">A new DbFunctionExpression that adds the number of months specified by **addValue** to the value specified by **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-148">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-148">**dateValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-149">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-149">**dateValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNanoseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c07ed-150">Espressione che specifica il valore a cui aggiungere **addValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-150">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c07ed-151">Espressione che specifica il numero di nanosecondi da aggiungere a **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-151">An expression that specifies the number of nanoseconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-152">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddNanoseconds' canonica con gli argomenti specificati, che devono presentare tipi di risultato DateTime, DateTimeOffset o Time e Integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-152">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddNanoseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="c07ed-153">Il tipo di risultato dell'espressione è lo stesso di **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-153">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-154">Nuova classe DbFunctionExpression che aggiunge il numero di nanosecondi specificato da **addValue** al valore specificato da **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-154">A new DbFunctionExpression that adds the number of nanoseconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-155">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-155">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-156">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-156">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSeconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c07ed-157">Espressione che specifica il valore a cui aggiungere **addValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-157">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c07ed-158">Espressione che specifica il numero di secondi da aggiungere a **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-158">An expression that specifies the number of seconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-159">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddSeconds' canonica con gli argomenti specificati, che devono presentare tipi di risultato DateTime, DateTimeOffset o Time e Integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-159">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddSeconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="c07ed-160">Il tipo di risultato dell'espressione è lo stesso di **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-160">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-161">Nuova classe DbFunctionExpression che aggiunge il numero di secondi specificato da **addValue** al valore specificato da **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-161">A new DbFunctionExpression that adds the number of seconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-162">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-162">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-163">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-163">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddYears (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddYears(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddYears (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c07ed-164">Espressione che specifica il valore a cui aggiungere **addValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-164">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c07ed-165">Espressione che specifica il numero di anni da aggiungere a **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-165">An expression that specifies the number of years to add to **dateValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-166">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'AddYears' canonica con gli argomenti specificati, che devono presentare tipi di risultato DateTime, DateTimeOffset e Integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-166">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddYears' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span>
          </span>
          <span data-ttu-id="c07ed-167">Il tipo di risultato dell'espressione è uguale al tipo di risultato di **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-167">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-168">Nuova classe DbFunctionExpression che aggiunge il numero di anni specificato da **addValue** al valore specificato da **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-168">A new DbFunctionExpression that adds the number of years specified by **addValue** to the value specified by **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-169">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-169">**dateValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-170">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-170">**dateValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Average (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Average(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Average(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c07ed-171">Espressione che specifica la raccolta da cui calcolare il valore medio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-171">An expression that specifies the collection from which the average value should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-172">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Avg" canonica per la raccolta specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-172">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Avg' function over the specified collection.</span>
          </span>
          <span data-ttu-id="c07ed-173">Il tipo di risultato dell'espressione è uguale al tipo di elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-173">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-174">Nuovo oggetto DbFunctionExpression che produce il valore medio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-174">A new DbFunctionExpression that produces the average value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-175">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-175">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-176">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-176">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseAnd (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseAnd(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1">
          <span data-ttu-id="c07ed-177">Espressione che specifica il primo operando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-177">An expression that specifies the first operand.</span>
          </span>
        </param>
        <param name="value2">
          <span data-ttu-id="c07ed-178">Espressione che specifica il secondo operando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-178">An expression that specifies the second operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-179">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'BitwiseAnd' canonica con gli argomenti specificati, che devono presentare lo stesso tipo di risultato Integer numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-179">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseAnd' function with the specified arguments, which must have the same integer numeric result type.</span>
          </span>
          <span data-ttu-id="c07ed-180">Il tipo di risultato dell'espressione è uguale al tipo di argomenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-180">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-181">Nuova classe DbFunctionExpression che restituisce il valore ottenuto con l'operazione AND bit per bit di **value1** e **value2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-181">A new DbFunctionExpression that returns the value produced by performing the bitwise AND of **value1** and **value2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-182">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-182">**value1** **value2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-183">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-183">**value1** **value2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseNot">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseNot (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseNot(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c07ed-184">Espressione che specifica il primo operando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-184">An expression that specifies the first operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-185">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'BitwiseNot' canonica con gli argomenti specificati, che devono presentare un tipo di risultato Integer numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-185">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseNot' function with the specified argument, which must have an integer numeric result type.</span>
          </span>
          <span data-ttu-id="c07ed-186">Il tipo di risultato dell'espressione è uguale al tipo di argomenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-186">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-187">Nuova classe DbFunctionExpression che restituisce il valore ottenuto con l'operazione NOT bit per bit di **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-187">A new DbFunctionExpression that returns the value produced by performing the bitwise NOT of **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-188">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-188">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-189">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-189">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseOr (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseOr(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1">
          <span data-ttu-id="c07ed-190">Espressione che specifica il primo operando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-190">An expression that specifies the first operand.</span>
          </span>
        </param>
        <param name="value2">
          <span data-ttu-id="c07ed-191">Espressione che specifica il secondo operando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-191">An expression that specifies the second operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-192">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'BitwiseOr' canonica con gli argomenti specificati, che devono presentare lo stesso tipo di risultato Integer numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-192">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseOr' function with the specified arguments, which must have the same integer numeric result type.</span>
          </span>
          <span data-ttu-id="c07ed-193">Il tipo di risultato dell'espressione è uguale al tipo di argomenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-193">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-194">Nuova classe DbFunctionExpression che restituisce il valore ottenuto con l'operazione OR bit per bit di **value1** e **value2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-194">A new DbFunctionExpression that returns the value produced by performing the bitwise OR of **value1** and **value2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-195">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-195">**value1** **value2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-196">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-196">**value1** **value2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseXor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseXor (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseXor(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1">
          <span data-ttu-id="c07ed-197">Espressione che specifica il primo operando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-197">An expression that specifies the first operand.</span>
          </span>
        </param>
        <param name="value2">
          <span data-ttu-id="c07ed-198">Espressione che specifica il secondo operando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-198">An expression that specifies the second operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-199">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'BitwiseXor' canonica con gli argomenti specificati, che devono presentare lo stesso tipo di risultato Integer numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-199">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseXor' function with the specified arguments, which must have the same integer numeric result type.</span>
          </span>
          <span data-ttu-id="c07ed-200">Il tipo di risultato dell'espressione è uguale al tipo di argomenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-200">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-201">Nuova classe DbFunctionExpression che restituisce il valore ottenuto con l'operazione XOR (OR esclusivo) bit per bit di **value1** e **value2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-201">A new DbFunctionExpression that returns the value produced by performing the bitwise XOR (exclusive OR) of **value1** and **value2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-202">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-202">**value1** **value2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-203">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-203">**value1** **value2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Ceiling (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Ceiling(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Ceiling (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Ceiling(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c07ed-204">Espressione che specifica il valore numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-204">An expression that specifies the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-205">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Ceiling' canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato Single, Double o Decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-205">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Ceiling' function with the specified argument, which must each have a single, double or decimal result type.</span>
          </span>
          <span data-ttu-id="c07ed-206">Il tipo di risultato dell'espressione è lo stesso di **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-206">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-207">Nuova classe DbFunctionExpression che restituisce il valore Integer più piccolo non inferiore a **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-207">A new DbFunctionExpression that returns the smallest integer value not less than than **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-208">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-208">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-209">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-209">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Concat (this System.Data.Common.CommandTrees.DbExpression string1, System.Data.Common.CommandTrees.DbExpression string2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Concat(class System.Data.Common.CommandTrees.DbExpression string1, class System.Data.Common.CommandTrees.DbExpression string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat (string1 As DbExpression, string2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Concat(System::Data::Common::CommandTrees::DbExpression ^ string1, System::Data::Common::CommandTrees::DbExpression ^ string2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="string2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="string1">
          <span data-ttu-id="c07ed-210">Espressione che specifica la stringa da includere come primo elemento nella stringa concatenata restituita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-210">An expression that specifies the string that should appear first in the concatenated result string.</span>
          </span>
        </param>
        <param name="string2">
          <span data-ttu-id="c07ed-211">Espressione che specifica la stringa da includere come secondo elemento nella stringa concatenata restituita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-211">An expression that specifies the string that should appear second in the concatenated result string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-212">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Concat' canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato String.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-212">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Concat' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="c07ed-213">Il tipo di risultato dell'espressione è stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-213">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-214">Nuovo oggetto DbFunctionExpression che produce la stringa concatenata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-214">A new DbFunctionExpression that produces the concatenated string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-215">**string1** **string2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-215">**string1** **string2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-216">**string1** **string2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-216">**string1** **string2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Contains (this System.Data.Common.CommandTrees.DbExpression searchedString, System.Data.Common.CommandTrees.DbExpression searchedForString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Contains(class System.Data.Common.CommandTrees.DbExpression searchedString, class System.Data.Common.CommandTrees.DbExpression searchedForString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains (searchedString As DbExpression, searchedForString As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Contains(System::Data::Common::CommandTrees::DbExpression ^ searchedString, System::Data::Common::CommandTrees::DbExpression ^ searchedForString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchedString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="searchedForString" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="searchedString">
          <span data-ttu-id="c07ed-217">Espressione che specifica la stringa in cui cercare le occorrenze di **searchedForString**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-217">An expression that specifies the string to search for any occurence of **searchedForString**.</span>
          </span>
        </param>
        <param name="searchedForString">
          <span data-ttu-id="c07ed-218">Espressione che specifica la stringa da cercare in **searchedString**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-218">An expression that specifies the string to search for in **searchedString**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-219">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Contains" canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato String.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-219">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Contains' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="c07ed-220">Il tipo di risultato dell'espressione è Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-220">The result type of the expression is Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-221">Nuova classe DbFunctionExpression che restituisce un valore booleano che indica se **searchedForString** si verifica all'interno di **searchedString**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-221">A new DbFunctionExpression that returns a Boolean value indicating whether or not **searchedForString** occurs within **searchedString**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-222">**searchedString** **searchedForString**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-222">**searchedString** **searchedForString**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-223">**searchedString** **searchedForString**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-223">**searchedString** **searchedForString**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Count (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Count(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Count(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c07ed-224">Espressione che specifica la raccolta da cui calcolare il valore del conteggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-224">An expression that specifies the collection over which the count value should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-225">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Count" canonica per la raccolta specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-225">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Count' function over the specified collection.</span>
          </span>
          <span data-ttu-id="c07ed-226">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-226">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-227">Nuovo oggetto DbFunctionExpression che produce il valore del conteggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-227">A new DbFunctionExpression that produces the count value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-228">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-228">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-229">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-229">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTime (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTime(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="c07ed-230">Espressione che fornisce il valore dell'anno per la nuova istanza di DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-230">An expression that provides the year value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="c07ed-231">Espressione che fornisce il valore del mese per la nuova istanza di DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-231">An expression that provides the month value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="c07ed-232">Espressione che fornisce il valore del giorno per la nuova istanza di DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-232">An expression that provides the day value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="hour">
          <span data-ttu-id="c07ed-233">Espressione che fornisce il valore dell'ora per la nuova istanza di DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-233">An expression that provides the hour value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="c07ed-234">Espressione che fornisce il valore del minuto per la nuova istanza di DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-234">An expression that provides the minute value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="c07ed-235">Espressione che fornisce il valore del secondo per la nuova istanza di DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-235">An expression that provides the second value for the new DateTime instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-236">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "CreateDateTime" canonica con gli argomenti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-236">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTime' function with the specified arguments.</span>
          </span>
          <span data-ttu-id="c07ed-237">Il tipo di risultato di **second** deve essere Edm.Double, mentre tutti gli altri argomenti devono avere come risultato Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-237">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span>
          </span>
          <span data-ttu-id="c07ed-238">Il tipo di risultato dell'espressione è Edm.DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-238">The result type of the expression is Edm.DateTime.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-239">Nuovo DbFunctionExpression che restituisce un nuovo DateTime basato sui valori specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-239">A new DbFunctionExpression that returns a new DateTime based on the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-240">**year** **month** **day** **hour** **minute** **second**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-240">**year** **month** **day** **hour** **minute** **second**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-241">**year** **month** **day** **hour** **minute** **second**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-241">**year** **month** **day** **hour** **minute** **second**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second, System.Data.Common.CommandTrees.DbExpression timeZoneOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second, class System.Data.Common.CommandTrees.DbExpression timeZoneOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTimeOffset (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression, timeZoneOffset As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTimeOffset(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second, System::Data::Common::CommandTrees::DbExpression ^ timeZoneOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="timeZoneOffset" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="c07ed-242">Espressione che fornisce il valore dell'anno per la nuova istanza di DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-242">An expression that provides the year value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="c07ed-243">Espressione che fornisce il valore del mese per la nuova istanza di DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-243">An expression that provides the month value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="c07ed-244">Espressione che fornisce il valore del giorno per la nuova istanza di DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-244">An expression that provides the day value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="hour">
          <span data-ttu-id="c07ed-245">Espressione che fornisce il valore dell'ora per la nuova istanza di DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-245">An expression that provides the hour value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="c07ed-246">Espressione che fornisce il valore del minuto per la nuova istanza di DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-246">An expression that provides the minute value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="c07ed-247">Espressione che fornisce il valore del secondo per la nuova istanza di DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-247">An expression that provides the second value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="timeZoneOffset">
          <span data-ttu-id="c07ed-248">Espressione che fornisce il valore relativo al numero di minuti di differenza di fuso orario per la nuova istanza di DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-248">An expression that provides the number of minutes in the time zone offset value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-249">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "CreateDateTimeOffset" canonica con gli argomenti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-249">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTimeOffset' function with the specified arguments.</span>
          </span>
          <span data-ttu-id="c07ed-250">Il tipo di risultato di **second** deve essere Edm.Double, mentre tutti gli altri argomenti devono avere come risultato Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-250">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span>
          </span>
          <span data-ttu-id="c07ed-251">Il tipo di risultato dell'espressione è Edm.DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-251">The result type of the expression is Edm.DateTimeOffset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-252">Nuovo DbFunctionExpression che restituisce un nuovo DateTimeOffset basato sui valori specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-252">A new DbFunctionExpression that returns a new DateTimeOffset based on the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-253">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-253">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-254">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-254">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateTime (System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateTime(class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTime (hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateTime(System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="hour">
          <span data-ttu-id="c07ed-255">Espressione che fornisce il valore dell'ora per la nuova istanza di DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-255">An expression that provides the hour value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="c07ed-256">Espressione che fornisce il valore del minuto per la nuova istanza di DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-256">An expression that provides the minute value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="c07ed-257">Espressione che fornisce il valore del secondo per la nuova istanza di DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-257">An expression that provides the second value for the new DateTime instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-258">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "CreateTime" canonica con gli argomenti specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-258">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateTime' function with the specified arguments.</span>
          </span>
          <span data-ttu-id="c07ed-259">Il tipo di risultato di **second** deve essere Edm.Double, mentre tutti gli altri argomenti devono avere come risultato Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-259">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span>
          </span>
          <span data-ttu-id="c07ed-260">Il tipo di risultato dell'espressione è Edm.Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-260">The result type of the expression is Edm.Time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-261">Nuovo DbFunctionExpression che restituisce un nuovo Time basato sui valori specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-261">A new DbFunctionExpression that returns a new Time based on the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-262">**hour** **minute** **second**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-262">**hour** **minute** **second**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-263">**hour** **minute** **second**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-263">**hour** **minute** **second**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c07ed-264">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "CurrentDateTime" canonica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-264">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTime' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-265">Nuovo DbFunctionExpression che restituisce la data e l'ora corrente come un'istanza di Edm.DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-265">A new DbFunctionExpression that returns the current date and time as an Edm.DateTime instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTimeOffset () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTimeOffset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c07ed-266">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "CurrentDateTimeOffset" canonica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-266">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTimeOffset' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-267">Nuovo DbFunctionExpression che restituisce la data e l'ora corrente come un'istanza di Edm.DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-267">A new DbFunctionExpression that returns the current date and time as an Edm.DateTimeOffset instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUtcDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentUtcDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentUtcDateTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c07ed-268">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "CurrentUtcDateTime" canonica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-268">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentUtcDateTime' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-269">Nuovo DbFunctionExpression che restituisce la data e l'ora corrente UTC come un'istanza di Edm.DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-269">A new DbFunctionExpression that returns the current UTC date and time as an Edm.DateTime instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Day (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Day(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Day (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Day(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c07ed-270">Espressione che specifica il valore da cui recuperare il giorno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-270">An expression that specifies the value from which the day should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-271">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione canonica "Day" con l'argomento specificato, che deve avere DateTime o DateTimeOffset come tipo di risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-271">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Day' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c07ed-272">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-272">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-273">Nuova classe DbFunctionExpression che restituisce il valore Integer di giorno da **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-273">A new DbFunctionExpression that returns the integer day value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-274">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-274">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-275">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-275">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DayOfYear (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DayOfYear(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c07ed-276">Espressione che specifica il valore da cui recuperare il giorno dell'anno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-276">An expression that specifies the value from which the day within the year should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-277">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione canonica "DayOfYear" con l'argomento specificato, che deve avere DateTime o DateTimeOffset come tipo di risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-277">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DayOfYear' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c07ed-278">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-278">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-279">Nuova classe DbFunctionExpression che restituisce il valore Integer di giorno dell'anno da **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-279">A new DbFunctionExpression that returns the integer day of year value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-280">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-280">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-281">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-281">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DiffDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffDays (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffDays(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffDays (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1">
          <span data-ttu-id="c07ed-282">Espressione che specifica il primo argomento di valore di data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-282">An expression that specifies the first date value argument.</span>
          </span>
        </param>
        <param name="dateValue2">
          <span data-ttu-id="c07ed-283">Espressione che specifica il secondo argomento di valore di data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-283">An expression that specifies the second date value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-284">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffDays' canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato DateTime o DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-284">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffDays' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c07ed-285">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-285">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-286">Nuova classe DbFunctionExpression che restituisce la differenza in numero di giorni tra **dateValue1** e **dateValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-286">A new DbFunctionExpression that returns the number of days that is the difference between **dateValue1** and **dateValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffHours (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffHours(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffHours (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="c07ed-287">Espressione che specifica il primo argomento di valore di ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-287">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="c07ed-288">Espressione che specifica il secondo argomento di valore di ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-288">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-289">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffHours' canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato DateTime, DateTimeOffset o Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-289">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffHours' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c07ed-290">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-290">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-291">Nuova classe DbFunctionExpression che restituisce la differenza in numero di ore tra **timeValue1** e **timeValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-291">A new DbFunctionExpression that returns the number of hours that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMicroseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="c07ed-292">Espressione che specifica il primo argomento di valore di ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-292">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="c07ed-293">Espressione che specifica il secondo argomento di valore di ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-293">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-294">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffMicroseconds' canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato DateTime, DateTimeOffset o Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-294">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMicroseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c07ed-295">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-295">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-296">Nuova classe DbFunctionExpression che restituisce la differenza in numero di microsecondi tra **timeValue1** e **timeValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-296">A new DbFunctionExpression that returns the number of microseconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMilliseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="c07ed-297">Espressione che specifica il primo argomento di valore di ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-297">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="c07ed-298">Espressione che specifica il secondo argomento di valore di ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-298">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-299">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffMilliseconds' canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato DateTime, DateTimeOffset o Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-299">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMilliseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c07ed-300">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-300">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-301">Nuova classe DbFunctionExpression che restituisce la differenza in numero di millisecondi tra **timeValue1** e **timeValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-301">A new DbFunctionExpression that returns the number of milliseconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMinutes (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="c07ed-302">Espressione che specifica il primo argomento di valore di ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-302">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="c07ed-303">Espressione che specifica il secondo argomento di valore di ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-303">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-304">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffMinutes' canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato DateTime, DateTimeOffset o Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-304">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMinutes' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c07ed-305">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-305">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-306">Nuova classe DbFunctionExpression che restituisce la differenza in numero di minuti tra **timeValue1** e **timeValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-306">A new DbFunctionExpression that returns the number of minutes that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMonths (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1">
          <span data-ttu-id="c07ed-307">Espressione che specifica il primo argomento di valore di data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-307">An expression that specifies the first date value argument.</span>
          </span>
        </param>
        <param name="dateValue2">
          <span data-ttu-id="c07ed-308">Espressione che specifica il secondo argomento di valore di data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-308">An expression that specifies the second date value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-309">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffMonths' canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato DateTime o DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-309">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMonths' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c07ed-310">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-310">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-311">Nuova classe DbFunctionExpression che restituisce la differenza in numero di mesi tra **dateValue1** e **dateValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-311">A new DbFunctionExpression that returns the number of months that is the difference between **dateValue1** and **dateValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffNanoseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="c07ed-312">Espressione che specifica il primo argomento di valore di ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-312">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="c07ed-313">Espressione che specifica il secondo argomento di valore di ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-313">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-314">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffNanoseconds' canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato DateTime, DateTimeOffset o Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-314">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffNanoseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c07ed-315">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-315">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-316">Nuova classe DbFunctionExpression che restituisce la differenza in numero di nanosecondi tra **timeValue1** e **timeValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-316">A new DbFunctionExpression that returns the number of nanoseconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffSeconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="c07ed-317">Espressione che specifica il primo argomento di valore di ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-317">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="c07ed-318">Espressione che specifica il secondo argomento di valore di ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-318">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-319">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffSeconds' canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato DateTime, DateTimeOffset o Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-319">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffSeconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c07ed-320">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-320">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-321">Nuova classe DbFunctionExpression che restituisce la differenza in numero di secondi tra **timeValue1** e **timeValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-321">A new DbFunctionExpression that returns the number of seconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffYears (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffYears(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffYears (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1">
          <span data-ttu-id="c07ed-322">Espressione che specifica il primo argomento di valore di data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-322">An expression that specifies the first date value argument.</span>
          </span>
        </param>
        <param name="dateValue2">
          <span data-ttu-id="c07ed-323">Espressione che specifica il secondo argomento di valore di data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-323">An expression that specifies the second date value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-324">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'DiffYears' canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato DateTime o DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-324">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffYears' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c07ed-325">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-325">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-326">Nuova classe DbFunctionExpression che restituisce la differenza in numero di anni tra **dateValue1** e **dateValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-326">A new DbFunctionExpression that returns the number of years that is the difference between **dateValue1** and **dateValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression EndsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression EndsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EndsWith (stringArgument As DbExpression, suffix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ EndsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ suffix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="suffix" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c07ed-327">Espressione che specifica la stringa sulla cui fine viene eseguita la ricerca della stringa **suffix**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-327">An expression that specifies the string that is searched at the end for string **suffix**.</span>
          </span>
        </param>
        <param name="suffix">
          <span data-ttu-id="c07ed-328">Espressione che specifica la stringa di destinazione sulla cui fine viene eseguita la ricerca di **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-328">An expression that specifies the target string that is searched for at the end of **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-329">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "EndsWith" canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato String.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-329">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'EndsWith' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="c07ed-330">Il tipo di risultato dell'espressione è Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-330">The result type of the expression is Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-331">Nuova classe DbFunctionExpression che restituisce un valore booleano che indica se **stringArgument** termina con**suffix**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-331">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** ends with **suffix**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Floor (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Floor(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Floor (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Floor(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c07ed-332">Espressione che specifica il valore numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-332">An expression that specifies the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-333">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Floor" canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato Single, Double o Decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-333">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Floor' function with the specified argument, which must each have a single, double or decimal result type.</span>
          </span>
          <span data-ttu-id="c07ed-334">Il tipo di risultato dell'espressione è lo stesso di **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-334">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-335">Nuova classe DbFunctionExpression che restituisce il valore Integer più grande non superiore a **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-335">A new DbFunctionExpression that returns the largest integer value not greater than **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-336">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-336">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-337">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-337">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTotalOffsetMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes (this System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes(class System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTotalOffsetMinutes (dateTimeOffsetArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ GetTotalOffsetMinutes(System::Data::Common::CommandTrees::DbExpression ^ dateTimeOffsetArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffsetArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffsetArgument">
          <span data-ttu-id="c07ed-338">Espressione che specifica il valore DateTimeOffset da cui recuperare il la differenza di minuti rispetto al fuso orario GMT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-338">An expression that specifies the DateTimeOffset value from which the minute offset from GMT should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-339">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "GetTotalOffsetMinutes" canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-339">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GetTotalOffsetMinutes' function with the specified argument, which must have a DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c07ed-340">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-340">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-341">Nuova classe DbFunctionExpression che restituisce il numero di minuti **dateTimeOffsetArgument** e il fuso orario GMT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-341">A new DbFunctionExpression that returns the number of minutes **dateTimeOffsetArgument** is offset from GMT.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-342">**dateTimeOffsetArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-342">**dateTimeOffsetArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-343">**dateTimeOffsetArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-343">**dateTimeOffsetArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Hour (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Hour(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Hour (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Hour(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c07ed-344">Espressione che specifica il valore da cui recuperare l'ora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-344">An expression that specifies the value from which the hour should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-345">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Hour' canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime, DateTimeOffset o Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-345">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Hour' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c07ed-346">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-346">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-347">Nuova classe DbFunctionExpression che restituisce il valore Integer di ora da**timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-347">A new DbFunctionExpression that returns the integer hour value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-348">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-348">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-349">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-349">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression IndexOf (this System.Data.Common.CommandTrees.DbExpression searchString, System.Data.Common.CommandTrees.DbExpression stringToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression IndexOf(class System.Data.Common.CommandTrees.DbExpression searchString, class System.Data.Common.CommandTrees.DbExpression stringToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf (searchString As DbExpression, stringToFind As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ IndexOf(System::Data::Common::CommandTrees::DbExpression ^ searchString, System::Data::Common::CommandTrees::DbExpression ^ stringToFind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="stringToFind" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="searchString">
          <span data-ttu-id="c07ed-350">Espressione che specifica la stringa da cercare con **stringToFind**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-350">An expression that specifies the string to search for **stringToFind**.</span>
          </span>
        </param>
        <param name="stringToFind">
          <span data-ttu-id="c07ed-351">Espressione che specifica la stringa da cercare in **searchString**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-351">An expression that specifies the string to locate within **searchString** should be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-352">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "IndexOf" canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato String.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-352">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'IndexOf' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="c07ed-353">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-353">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-354">Nuova classe DbFunctionExpression che restituisce il primo indice di **stringToFind** in **searchString**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-354">A new DbFunctionExpression that returns the first index of **stringToFind** in **searchString**.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c07ed-355">L'indice restituito da IndexOf è \<b > in base 1 \< /b >.</span><span class="sxs-lookup"><span data-stu-id="c07ed-355">The index returned by IndexOf is \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-356">**searchString** **stringToFind**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-356">**searchString** **stringToFind**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-357">**searchString** **stringToFind**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-357">**searchString** **stringToFind**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Left (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Left(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Left (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Left(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c07ed-358">Espressione che specifica la stringa da cui estrarre la sottostringa più a sinistra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-358">An expression that specifies the string from which to extract the leftmost substring.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="c07ed-359">Espressione che specifica la lunghezza della sottostringa più a sinistra per estrarre da **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-359">An expression that specifies the length of the leftmost substring to extract from **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-360">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Left" canonica con gli argomenti specificati, che devono presentare tipi di risultato String e Integer numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-360">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Left' function with the specified arguments, which must have a string and integer numeric result type.</span>
          </span>
          <span data-ttu-id="c07ed-361">Il tipo di risultato dell'espressione è stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-361">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-362">Nuova classe DbFunctionExpression che restituisce la sottostringa più a sinistra di lunghezza **length** da **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-362">A new DbFunctionExpression that returns the leftmost substring of length **length** from **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-363">**stringArgument** **length**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-363">**stringArgument** **length**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-364">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-364">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Length (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Length(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Length (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Length(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c07ed-365">Espressione che specifica la stringa per la quale è necessario calcolare la lunghezza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-365">An expression that specifies the string for which the length should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-366">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Length' canonica con l'argomento specificato, che deve presentare un tipo di risultato String.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-366">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Length' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="c07ed-367">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-367">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-368">Nuova classe DbFunctionExpression che restituisce la lunghezza di **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-368">A new DbFunctionExpression that returns the length of **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-369">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-369">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-370">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-370">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LongCount">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression LongCount (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression LongCount(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ LongCount(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c07ed-371">Espressione che specifica la raccolta da cui calcolare il valore del conteggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-371">An expression that specifies the collection over which the count value should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-372">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "BigCount" canonica per la raccolta specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-372">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BigCount' function over the specified collection.</span>
          </span>
          <span data-ttu-id="c07ed-373">Il tipo di risultato dell'espressione è Edm.Int64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-373">The result type of the expression is Edm.Int64.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-374">Nuovo oggetto DbFunctionExpression che produce il valore del conteggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-374">A new DbFunctionExpression that produces the count value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-375">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-375">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-376">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-376">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Max (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Max(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Max(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c07ed-377">Espressione che specifica la raccolta da cui recuperare il valore massimo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-377">An expression that specifies the collection from which the maximum value should be retrieved</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-378">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Max" canonica per la raccolta specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-378">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Max' function over the specified collection.</span>
          </span>
          <span data-ttu-id="c07ed-379">Il tipo di risultato dell'espressione è uguale al tipo di elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-379">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-380">Nuovo oggetto DbFunctionExpression che produce il valore massimo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-380">A new DbFunctionExpression that produces the maximum value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-381">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-381">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-382">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-382">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Millisecond (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Millisecond(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Millisecond (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Millisecond(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c07ed-383">Espressione che specifica il valore da cui recuperare il millisecondo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-383">An expression that specifies the value from which the millisecond should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-384">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Millisecond' canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime, DateTimeOffset o Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-384">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Millisecond' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c07ed-385">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-385">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-386">Nuova classe DbFunctionExpression che restituisce il valore Integer di millisecondo da **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-386">A new DbFunctionExpression that returns the integer millisecond value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-387">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-387">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-388">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-388">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Min (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Min(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Min(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c07ed-389">Espressione che specifica la raccolta da cui recuperare il valore minimo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-389">An expression that specifies the collection from which the minimum value should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-390">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Min" canonica per la raccolta specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-390">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Min' function over the specified collection.</span>
          </span>
          <span data-ttu-id="c07ed-391">Il tipo di risultato dell'espressione è uguale al tipo di elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-391">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-392">Nuovo oggetto DbFunctionExpression che produce il valore minimo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-392">A new DbFunctionExpression that produces the minimum value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-393">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-393">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-394">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-394">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Minute (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Minute(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minute (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Minute(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c07ed-395">Espressione che specifica il valore da cui recuperare il minuto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-395">An expression that specifies the value from which the minute should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-396">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Minute' canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime, DateTimeOffset o Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-396">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Minute' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c07ed-397">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-397">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-398">Nuova classe DbFunctionExpression che restituisce il valore Integer di minuto da **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-398">A new DbFunctionExpression that returns the integer minute value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-399">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-399">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-400">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-400">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Month (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Month(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Month (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Month(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c07ed-401">Espressione che specifica il valore da cui recuperare il mese.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-401">An expression that specifies the value from which the month should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-402">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Month" canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime o DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-402">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Month' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c07ed-403">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-403">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-404">Nuova classe DbFunctionExpression che restituisce il valore Integer di mese da **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-404">A new DbFunctionExpression that returns the integer month value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-405">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-405">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-406">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-406">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewGuid">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression NewGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression NewGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function NewGuid () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ NewGuid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c07ed-407">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "NewGuid" canonica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-407">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'NewGuid' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-408">Nuovo DbFunctionExpression che restituisce un nuovo valore GUID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-408">A new DbFunctionExpression that returns a new GUID value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Power (this System.Data.Common.CommandTrees.DbExpression baseArgument, System.Data.Common.CommandTrees.DbExpression exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Power(class System.Data.Common.CommandTrees.DbExpression baseArgument, class System.Data.Common.CommandTrees.DbExpression exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Power (baseArgument As DbExpression, exponent As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Power(System::Data::Common::CommandTrees::DbExpression ^ baseArgument, System::Data::Common::CommandTrees::DbExpression ^ exponent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="exponent" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="baseArgument">
          <span data-ttu-id="c07ed-409">Espressione che specifica il valore numerico da elevare alla potenza data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-409">An expression that specifies the numeric value to raise to the given power.</span>
          </span>
        </param>
        <param name="exponent">
          <span data-ttu-id="c07ed-410">Espressione che specifica la potenza a cui elevare **baseArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-410">An expression that specifies the power to which **baseArgument** should be raised.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-411">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Power" canonica con gli argomenti specificati, che devono presentare tipi di risultato numerici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-411">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Power' function with the specified arguments, which must have numeric result types.</span>
          </span>
          <span data-ttu-id="c07ed-412">Il tipo di risultato dell'espressione è lo stesso di **baseArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-412">The result type of the expression is the same as the result type of **baseArgument**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-413">Nuova classe DbFunctionExpression che restituisce il valore **baseArgument** elevato alla potenza specificata da **exponent**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-413">A new DbFunctionExpression that returns the value of **baseArgument** raised to the power specified by **exponent**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-414">**baseArgument** **exponent**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-414">**baseArgument** **exponent**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-415">**baseArgument** **exponent**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-415">**baseArgument** **exponent**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Replace (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression toReplace, System.Data.Common.CommandTrees.DbExpression replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Replace(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression toReplace, class System.Data.Common.CommandTrees.DbExpression replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace (stringArgument As DbExpression, toReplace As DbExpression, replacement As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Replace(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ toReplace, System::Data::Common::CommandTrees::DbExpression ^ replacement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="toReplace" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="replacement" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c07ed-416">Espressione che specifica la stringa in cui eseguire l'operazione di sostituzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-416">An expression that specifies the string in which to perform the replacement operation.</span>
          </span>
        </param>
        <param name="toReplace">
          <span data-ttu-id="c07ed-417">Espressione che specifica la stringa che viene sostituita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-417">An expression that specifies the string that is replaced.</span>
          </span>
        </param>
        <param name="replacement">
          <span data-ttu-id="c07ed-418">Espressione che specifica la stringa sostitutiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-418">An expression that specifies the replacement string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-419">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Replace" canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato String.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-419">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Replace' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="c07ed-420">Il risultato dell'espressione è anche di tipo stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-420">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-421">Nuova classe DbFunctionExpression che restituisce una nuova stringa basata su **stringArgument** in cui ogni occorrenza di **toReplace** viene sostituita da **replacement**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-421">A new DbFunctionExpression than returns a new string based on **stringArgument** where every occurence of **toReplace** is replaced by **replacement**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-422">**stringArgument** **toReplace** **replacement**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-422">**stringArgument** **toReplace** **replacement**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-423">**stringArgument** **toReplace** **replacement**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-423">**stringArgument** **toReplace** **replacement**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Reverse (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Reverse(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Reverse(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c07ed-424">Espressione che specifica la stringa da invertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-424">An expression that specifies the string to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-425">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Reverse" canonica con l'argomento specificato, che deve presentare un tipo di risultato String.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-425">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Reverse' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="c07ed-426">Il risultato dell'espressione è anche di tipo stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-426">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-427">Nuova classe DbFunctionExpression che produce il valore inverso di **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-427">A new DbFunctionExpression that produces the reversed value of **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-428">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-428">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-429">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-429">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Right (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Right(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Right (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Right(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c07ed-430">Espressione che specifica la stringa da cui estrarre la sottostringa più a destra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-430">An expression that specifies the string from which to extract the rightmost substring.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="c07ed-431">Espressione che specifica la lunghezza della sottostringa più a destra per estrarre da **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-431">An expression that specifies the length of the rightmost substring to extract from **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-432">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Right" canonica con gli argomenti specificati, che devono presentare tipi di risultato String e Integer numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-432">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Right' function with the specified arguments, which must have a string and integer numeric result type.</span>
          </span>
          <span data-ttu-id="c07ed-433">Il tipo di risultato dell'espressione è stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-433">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-434">Nuova classe DbFunctionExpression che restituisce la sottostringa più a destra di lunghezza **length** da **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-434">A new DbFunctionExpression that returns the rightmost substring of length **length** from **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-435">**stringArgument** **length**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-435">**stringArgument** **length**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-436">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-436">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c07ed-437">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Round' canonica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-437">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c07ed-438">Espressione che specifica il valore numerico da arrotondare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-438">An expression that specifies the numeric value to round.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-439">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Round" canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato Single, Double o Decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-439">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified argument, which must each have a single, double or decimal result type.</span>
          </span>
          <span data-ttu-id="c07ed-440">Il tipo di risultato dell'espressione è lo stesso di **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-440">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-441">Nuovo DbFunctionExpression che arrotonda l'argomento specificato al valore Integer più vicino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-441">A new DbFunctionExpression that rounds the specified argument to the nearest integer value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-442">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-442">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-443">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-443">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c07ed-444">Espressione che specifica il valore numerico da arrotondare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-444">An expression that specifies the numeric value to round.</span>
          </span>
        </param>
        <param name="digits">
          <span data-ttu-id="c07ed-445">Espressione che specifica il numero di cifre di precisione da utilizzare per l'arrotondamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-445">An expression that specifies the number of digits of precision to use when rounding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-446">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Round" canonica con gli argomenti specificati, che devono presentare tipi di risultato Single, Double o Decimal e Integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-446">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span>
          </span>
          <span data-ttu-id="c07ed-447">Il tipo di risultato dell'espressione è lo stesso di **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-447">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-448">Nuova classe DbFunctionExpression che arrotonda l'argomento specificato al valore Integer più vicino, con la precisione specificata da **digits**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-448">A new DbFunctionExpression that rounds the specified argument to the nearest integer value, with precision as specified by **digits**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-449">**value** **digits**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-449">**value** **digits**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-450">**value** **digits**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-450">**value** **digits**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Second (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Second(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Second (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Second(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c07ed-451">Espressione che specifica il valore da cui recuperare il secondo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-451">An expression that specifies the value from which the second should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-452">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione 'Second' canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime, DateTimeOffset o Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-452">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Second' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c07ed-453">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-453">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-454">Nuova classe DbFunctionExpression che restituisce il valore Integer di secondo da **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-454">A new DbFunctionExpression that returns the integer second value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-455">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-455">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-456">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-456">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StartsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StartsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWith (stringArgument As DbExpression, prefix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StartsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ prefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="prefix" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c07ed-457">Espressione che specifica la stringa sul cui inizio viene eseguita la ricerca della stringa **prefisso**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-457">An expression that specifies the string that is searched at the start for string **prefix**.</span>
          </span>
        </param>
        <param name="prefix">
          <span data-ttu-id="c07ed-458">Espressione che specifica la stringa di destinazione sul cui inizio viene eseguita la ricerca di **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-458">An expression that specifies the target string that is searched for at the start of **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-459">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "StartsWith" canonica con gli argomenti specificati, ognuno dei quali deve presentare un tipo di risultato String.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StartsWith' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="c07ed-460">Il tipo di risultato dell'espressione è Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-460">The result type of the expression is Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-461">Nuova classe DbFunctionExpression che restituisce un valore booleano che indica se **stringArgument** inizia con **prefix**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-461">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** starts with **prefix**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDev (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDev(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDev (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDev(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c07ed-462">Espressione che specifica la raccolta per la quale è necessario calcolare la deviazione standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-462">An expression that specifies the collection for which the standard deviation should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-463">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "StDev" canonica per i membri non nullable della raccolta specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-463">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDev' function over the non-null members of the specified collection.</span>
          </span>
          <span data-ttu-id="c07ed-464">Il tipo di risultato dell'espressione è Edm.Double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-464">The result type of the expression is Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-465">Nuovo oggetto DbFunctionExpression che produce il valore della deviazione standard per i membri non nullable della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-465">A new DbFunctionExpression that produces the standard deviation value over non-null members of the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-466">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-466">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-467">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-467">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StDevP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDevP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDevP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDevP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDevP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c07ed-468">Espressione che specifica la raccolta per la quale è necessario calcolare la deviazione standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-468">An expression that specifies the collection for which the standard deviation should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-469">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "StDevP" canonica per il popolamento della raccolta specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-469">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDevP' function over the population of the specified collection.</span>
          </span>
          <span data-ttu-id="c07ed-470">Il tipo di risultato dell'espressione è Edm.Double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-470">The result type of the expression is Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-471">Nuovo oggetto DbFunctionExpression che produce il valore della deviazione standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-471">A new DbFunctionExpression that produces the standard deviation value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-472">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-472">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-473">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-473">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Substring (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression start, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Substring(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression start, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Substring (stringArgument As DbExpression, start As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Substring(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ start, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="start" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c07ed-474">Espressione che specifica la stringa da cui estrarre la sottostringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-474">An expression that specifies the string from which to extract the substring.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="c07ed-475">Espressione che specifica l'indice iniziale da utilizzare per il recupero della sottostringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-475">An expression that specifies the starting index from which the substring should be taken.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="c07ed-476">Espressione che specifica la lunghezza della sottostringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-476">An expression that specifies the length of the substring.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-477">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Substring" canonica con gli argomenti specificati, che devono presentare tipi di risultato String e Integer numerico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-477">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Substring' function with the specified arguments, which must have a string and integer numeric result types.</span>
          </span>
          <span data-ttu-id="c07ed-478">Il tipo di risultato dell'espressione è stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-478">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-479">Nuova classe DbFunctionExpression che restituisce la sottostringa di lunghezza **length** di **stringArgument** che inizia in **start**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-479">A new DbFunctionExpression that returns the substring of length **length** from **stringArgument** starting at **start**.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c07ed-480">La sottostringa richiede che l'indice specificato da **avviare** essere \<b > in base 1 \< /b >.</span><span class="sxs-lookup"><span data-stu-id="c07ed-480">Substring requires that the index specified by **start** be \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-481">**stringArgument** **start** **length**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-481">**stringArgument** **start** **length**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-482">**stringArgument** **start** **length**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-482">**stringArgument** **start** **length**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Sum (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Sum(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Sum(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c07ed-483">Espressione che specifica la raccolta da cui calcolare la somma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-483">An expression that specifies the collection from which the sum should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-484">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Sum" canonica per la raccolta specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-484">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Sum' function over the specified collection.</span>
          </span>
          <span data-ttu-id="c07ed-485">Il tipo di risultato dell'espressione è uguale al tipo di elemento della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-485">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-486">Nuovo oggetto DbFunctionExpression che produce la somma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-486">A new DbFunctionExpression that produces the sum.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-487">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-487">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-488">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-488">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToLower (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToLower(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLower (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToLower(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c07ed-489">Espressione che specifica la stringa che deve essere convertita in lettere minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-489">An expression that specifies the string that should be converted to lower case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-490">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "ToLower" canonica con l'argomento specificato, che deve presentare un tipo di risultato String.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-490">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToLower' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="c07ed-491">Il risultato dell'espressione è anche di tipo stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-491">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-492">Nuova classe DbFunctionExpression che restituisce il valore di **stringArgument** convertito in lettere minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-492">A new DbFunctionExpression that returns value of **stringArgument** converted to lower case.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-493">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-493">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-494">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-494">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToUpper (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToUpper(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUpper (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToUpper(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c07ed-495">Espressione che specifica la stringa che deve essere convertita in lettere maiuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-495">An expression that specifies the string that should be converted to upper case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-496">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "ToUpper" canonica con l'argomento specificato, che deve presentare un tipo di risultato String.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-496">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToUpper' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="c07ed-497">Il risultato dell'espressione è anche di tipo stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-497">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-498">Nuova classe DbFunctionExpression che restituisce il valore di **stringArgument** convertito in lettere maiuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-498">A new DbFunctionExpression that returns value of **stringArgument** converted to upper case.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-499">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-499">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-500">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-500">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Trim (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Trim(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Trim (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Trim(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c07ed-501">Espressione che specifica la stringa da cui rimuovere lo spazio iniziale e finale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-501">An expression that specifies the string from which leading and trailing space should be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-502">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Trim" canonica con l'argomento specificato, che deve presentare un tipo di risultato String.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-502">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Trim' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="c07ed-503">Il risultato dell'espressione è anche di tipo stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-503">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-504">Nuova classe DbFunctionExpression che restituisce il valore di **stringArgument** dopo aver rimosso lo spazio iniziale e finale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-504">A new DbFunctionExpression that returns value of **stringArgument** with leading and trailing space removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-505">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-505">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-506">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-506">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimEnd (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimEnd(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c07ed-507">Espressione che specifica la stringa da cui rimuovere lo spazio finale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-507">An expression that specifies the string from which trailing space should be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-508">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "RTrim" canonica con l'argomento specificato, che deve presentare un tipo di risultato String.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-508">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'RTrim' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="c07ed-509">Il risultato dell'espressione è anche di tipo stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-509">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-510">Nuova classe DbFunctionExpression che restituisce il valore di **stringArgument** dopo aver rimosso lo spazio finale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-510">A new DbFunctionExpression that returns value of **stringArgument** with trailing space removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-511">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-511">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-512">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-512">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimStart (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimStart(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimStart (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimStart(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c07ed-513">Espressione che specifica la stringa da cui rimuovere lo spazio iniziale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-513">An expression that specifies the string from which leading space should be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-514">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "LTrim" canonica con l'argomento specificato, che deve presentare un tipo di risultato String.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-514">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'LTrim' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="c07ed-515">Il risultato dell'espressione è anche di tipo stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-515">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-516">Nuova classe DbFunctionExpression che restituisce il valore di **stringArgument** dopo aver rimosso lo spazio iniziale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-516">A new DbFunctionExpression that returns value of **stringArgument** with leading space removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-517">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-517">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-518">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-518">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Truncate (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Truncate(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Truncate (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Truncate(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c07ed-519">Espressione che specifica il valore numerico da troncare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-519">An expression that specifies the numeric value to truncate.</span>
          </span>
        </param>
        <param name="digits">
          <span data-ttu-id="c07ed-520">Espressione che specifica il numero di cifre di precisione da utilizzare per il troncamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-520">An expression that specifies the number of digits of precision to use when truncating.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-521">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Truncate" canonica con gli argomenti specificati, che devono presentare tipi di risultato Single, Double o Decimal e Integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-521">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Truncate' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span>
          </span>
          <span data-ttu-id="c07ed-522">Il tipo di risultato dell'espressione è lo stesso di **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-522">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-523">Nuova classe DbFunctionExpression che tronca l'argomento specificato al valore Integer più vicino, con la precisione specificata da **digits**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-523">A new DbFunctionExpression that truncates the specified argument to the nearest integer value, with precision as specified by **digits**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-524">**value** **digits**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-524">**value** **digits**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-525">**value** **digits**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-525">**value** **digits**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TruncateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TruncateTime (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TruncateTime(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c07ed-526">Espressione che specifica il valore per il quale la parte relativa all'ora deve essere troncata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-526">An expression that specifies the value for which the time portion should be truncated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-527">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "TruncateTime" canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime o DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-527">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'TruncateTime' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c07ed-528">Il tipo di risultato dell'espressione è uguale al tipo di risultato di **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-528">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-529">Nuova classe DbFunctionExpression che restituisce il valore di **dateValue** con ora impostata su zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-529">A new DbFunctionExpression that returns the value of **dateValue** with time set to zero.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-530">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-530">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-531">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-531">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Var">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Var (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Var(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Var (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Var(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c07ed-532">Espressione che specifica la raccolta per la quale è necessario calcolare la varianza statistica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-532">An expression that specifies the collection for which the statistical variance should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-533">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Var" canonica per i membri non nullable della raccolta specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-533">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Var' function over the non-null members of the specified collection.</span>
          </span>
          <span data-ttu-id="c07ed-534">Il tipo di risultato dell'espressione è Edm.Double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-534">The result type of the expression is Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-535">Nuovo oggetto DbFunctionExpression che produce il valore della varianza statistica per i membri non nullable della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-535">A new DbFunctionExpression that produces the statistical variance value for the non-null members of the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-536">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-536">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-537">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-537">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VarP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression VarP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression VarP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VarP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ VarP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c07ed-538">Espressione che specifica la raccolta per la quale è necessario calcolare la varianza statistica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-538">An expression that specifies the collection for which the statistical variance should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-539">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "VarP" canonica per il popolamento della raccolta specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-539">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'VarP' function over the population of the specified collection.</span>
          </span>
          <span data-ttu-id="c07ed-540">Il tipo di risultato dell'espressione Edm.Double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-540">The result type of the expression Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-541">Nuovo oggetto DbFunctionExpression che produce il valore della varianza statistica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-541">A new DbFunctionExpression that produces the statistical variance value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-542">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-542">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-543">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-543">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Year (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Year(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Year (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Year(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c07ed-544">Espressione che specifica il valore da cui recuperare l'anno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-544">An expression that specifies the value from which the year should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c07ed-545">Crea un oggetto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> che richiama la funzione "Year" canonica con l'argomento specificato, che deve presentare un tipo di risultato DateTime o DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-545">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Year' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c07ed-546">Il tipo di risultato dell'espressione è Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-546">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c07ed-547">Nuova classe DbFunctionExpression che restituisce il valore Integer di anno da **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-547">A new DbFunctionExpression that returns the integer year value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c07ed-548">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-548">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c07ed-549">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c07ed-549">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>