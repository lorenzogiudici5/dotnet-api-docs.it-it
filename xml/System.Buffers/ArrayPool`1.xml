<Type Name="ArrayPool&lt;T&gt;" FullName="System.Buffers.ArrayPool&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c365ab2f2412036b41ba89388ab6a1187f6696d2" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36647249" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ArrayPool&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ArrayPool`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.ArrayPool`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ArrayPool(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ArrayPool abstract" />
  <TypeSignature Language="F#" Value="type ArrayPool&lt;'T&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Buffers</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="26ddb-101">Il tipo degli oggetti presenti nel pool di risorse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="26ddb-101">The type of the objects that are in the resource pool.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="26ddb-102">Offre un pool di risorse che consente il riutilizzo di istanze di tipo <see cref="T:T[]" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="26ddb-102">Provides a resource pool that enables reusing instances of type <see cref="T:T[]" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="26ddb-103">Usando il <xref:System.Buffers.ArrayPool%601> classe noleggiare e restituire i buffer (usando il <xref:System.Buffers.ArrayPool%601.Rent%2A> e <xref:System.Buffers.ArrayPool%601.Return%2A> metodi) può migliorare le prestazioni in situazioni in cui le matrici vengono create ed eliminate frequentemente, risultante nelle richieste di memoria significativa nell'operazione di garbage agente di raccolta.</span><span class="sxs-lookup"><span data-stu-id="26ddb-103">Using the <xref:System.Buffers.ArrayPool%601> class to rent and return buffers (using the <xref:System.Buffers.ArrayPool%601.Rent%2A> and <xref:System.Buffers.ArrayPool%601.Return%2A> methods) can improve performance in situations where arrays are created and destroyed frequently, resulting in significant memory pressure on the garbage collector.</span></span>
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="26ddb-104">Questa classe è thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="26ddb-104">This class is thread-safe.</span>
      </span>
      <span data-ttu-id="26ddb-105">Tutti i membri possono essere utilizzati da più thread contemporaneamente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="26ddb-105">All members may be used by multiple threads concurrently.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArrayPool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArrayPool();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26ddb-106">Inizializza una nuova istanza della classe <see cref="T:System.Buffers.ArrayPool`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-106">Initializes a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="26ddb-107">Si noti che questo costruttore è protetto; può essere chiamato solo dalle classi derivate dal <xref:System.Buffers.ArrayPool%601> classe.</span><span class="sxs-lookup"><span data-stu-id="26ddb-107">Note that this constructor is protected; it can only be called by classes derived from the <xref:System.Buffers.ArrayPool%601> class.</span></span> 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26ddb-108">Crea una nuova istanza della classe <see cref="T:System.Buffers.ArrayPool`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-108">Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26ddb-109">Nuova istanza della classe <see cref="T:System.Buffers.ArrayPool`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-109">A new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create (int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create(int32 maxArrayLength, int32 maxArraysPerBucket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (maxArrayLength As Integer, maxArraysPerBucket As Integer) As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create(int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="F#" Value="static member Create : int * int -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create (maxArrayLength, maxArraysPerBucket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxArrayLength" Type="System.Int32" />
        <Parameter Name="maxArraysPerBucket" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxArrayLength">
          <span data-ttu-id="26ddb-110">Lunghezza massima di un'istanza di matrice archiviabile nel pool.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-110">The maximum length of an array instance that may be stored in the pool.</span>
          </span>
        </param>
        <param name="maxArraysPerBucket">
          <span data-ttu-id="26ddb-111">Numero massimo di istanze di matrice archiviabili in ogni bucket del pool.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-111">The maximum number of array instances that may be stored in each bucket in the pool.</span>
          </span>
          <span data-ttu-id="26ddb-112">Il pool raggruppa le matrici con lunghezze simili in bucket per un accesso più rapido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-112">The pool groups arrays of similar lengths into buckets for faster access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26ddb-113">Crea una nuova istanza della classe <see cref="T:System.Buffers.ArrayPool`1" /> usando la configurazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-113">Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class using the specifed configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26ddb-114">Una nuova istanza della classe <see cref="T:System.Buffers.ArrayPool`1" /> con la configurazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-114">A new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class with the specified configuration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="26ddb-115">L'istanza del <xref:System.Buffers.ArrayPool%601> classe creata da questo metodo Raggruppa le matrici in bucket, senza alcun oltre `maxArraysPerBucket` in ogni bucket e con tali array non superiore a `maxArrayLength` lunghezza.</span><span class="sxs-lookup"><span data-stu-id="26ddb-115">The instance of the <xref:System.Buffers.ArrayPool%601> class created by this method will group arrays into buckets, with no more than `maxArraysPerBucket` in each bucket, and with those arrays not exceeding `maxArrayLength` in length.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rent">
      <MemberSignature Language="C#" Value="public abstract T[] Rent (int minimumLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] Rent(int32 minimumLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Rent (minimumLength As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;T&gt; ^ Rent(int minimumLength);" />
      <MemberSignature Language="F#" Value="abstract member Rent : int -&gt; 'T[]" Usage="arrayPool.Rent minimumLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minimumLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minimumLength">
          <span data-ttu-id="26ddb-116">Lunghezza minima della matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-116">The minimum length of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26ddb-117">Recupera un buffer con una lunghezza maggiore o uguale a quella richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-117">Retrieves a buffer that is at least the requested length.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26ddb-118">Una matrice di tipo <see cref="T:T[]" /> con una lunghezza di almeno <paramref name="minimumLength" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-118">An array of type <see cref="T:T[]" /> that is at least <paramref name="minimumLength" /> in length.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="26ddb-119">Questo buffer viene prestato al chiamante che devono essere restituito per il pool stesso usando il <xref:System.Buffers.ArrayPool%601.Return%2A> metodo, in modo che non può essere riutilizzato nelle successive chiamate al <xref:System.Buffers.ArrayPool%601.Rent%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="26ddb-119">This buffer is loaned to the caller and should be returned to the same pool using the <xref:System.Buffers.ArrayPool%601.Return%2A> method, so that it can be reused in subsequent calls to the <xref:System.Buffers.ArrayPool%601.Rent%2A> method.</span></span> <span data-ttu-id="26ddb-120">Errore di restituzione di un buffer in affitto non è un errore irreversibile.</span><span class="sxs-lookup"><span data-stu-id="26ddb-120">Failure to return a rented buffer is not a fatal error.</span></span> <span data-ttu-id="26ddb-121">Tuttavia, possono risultare prestazioni ridotte dell'applicazione, come il pool potrebbe essere necessario creare un nuovo buffer per sostituire quello perso.</span><span class="sxs-lookup"><span data-stu-id="26ddb-121">However, it may lead to decreased application performance, as the pool may need to create a new buffer to replace the lost one.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public abstract void Return (T[] array, bool clearArray = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Return(!T[] array, bool clearArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Return (array As T(), Optional clearArray As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member Return : 'T[] * bool -&gt; unit" Usage="arrayPool.Return (array, clearArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="clearArray" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="26ddb-122">Un buffer da restituire al pool ottenuto precedentemente tramite il metodo <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-122">A buffer to return to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method.</span>
          </span>
        </param>
        <param name="clearArray">
          <span data-ttu-id="26ddb-123">Indica se il contenuto del buffer deve essere cancellato prima del riutilizzo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-123">Indicates whether the contents of the buffer should be cleared before reuse.</span>
          </span>
          <span data-ttu-id="26ddb-124">Se <paramref name="clearArray" /> è impostato su <see langword="true" />, e se il pool archivia il buffer per un riutilizzo successivo, il metodo <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> cancella <paramref name="array" /> del relativo contenuto in modo che il chiamante successivo che userà il metodo <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> non visualizzerà il contenuto del chiamante precedente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-124">If <paramref name="clearArray" /> is set to <see langword="true" />, and if the pool will store the buffer to enable subsequent reuse, the <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> method will clear the <paramref name="array" /> of its contents so that a subsequent caller using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method will not see the content of the previous caller.</span>
          </span>
          <span data-ttu-id="26ddb-125">Se <paramref name="clearArray" /> è impostato su <see langword="false" /> o se il pool rilascia il buffer, il contenuto della matrice rimane invariato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-125">If <paramref name="clearArray" /> is set to <see langword="false" /> or if the pool will release the buffer, the array's contents are left unchanged.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26ddb-126">Restituisce una matrice al pool precedentemente ottenuto tramite il metodo <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> nella stessa istanza <see cref="T:System.Buffers.ArrayPool`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-126">Returns an array to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method on the same <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="26ddb-127">Una volta che viene restituito al pool un buffer, il chiamante rinuncia tutte le proprietà del buffer e non deve utilizzare.</span><span class="sxs-lookup"><span data-stu-id="26ddb-127">Once a buffer has been returned to the pool, the caller gives up all ownership of the buffer and must not use it.</span></span> <span data-ttu-id="26ddb-128">Il riferimento restituito da una chiamata specifica al <xref:System.Buffers.ArrayPool%601.Rent%2A> metodo deve essere restituito solo utilizzando il <xref:System.Buffers.ArrayPool%601.Return%2A> metodo una volta.</span><span class="sxs-lookup"><span data-stu-id="26ddb-128">The reference returned from a given call to the <xref:System.Buffers.ArrayPool%601.Rent%2A> method must only be returned using the <xref:System.Buffers.ArrayPool%601.Return%2A> method once.</span></span> <span data-ttu-id="26ddb-129">Il valore predefinito <xref:System.Buffers.ArrayPool%601> può mantenere il buffer restituito per noleggiare nuovamente o può rilasciare il buffer restituito se è stato stabilito che il pool sono già disponibili buffer insufficienti archiviati.</span><span class="sxs-lookup"><span data-stu-id="26ddb-129">The default <xref:System.Buffers.ArrayPool%601> may hold onto the returned buffer in order to rent it again, or it may release the returned buffer if it's determined that the pool already has enough buffers stored.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Shared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Buffers.ArrayPool`1&lt;!T&gt; Shared" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ArrayPool`1.Shared" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Shared As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Buffers::ArrayPool&lt;T&gt; ^ Shared { System::Buffers::ArrayPool&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Shared : System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Shared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26ddb-130">Ottiene un'istanza <see cref="T:System.Buffers.ArrayPool`1" /> condivisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-130">Gets a shared <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26ddb-131">Un oggetto condiviso <see cref="T:System.Buffers.ArrayPool`1" /> istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26ddb-131">A shared <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="26ddb-132">Il pool condiviso fornisce un'implementazione predefinita del <xref:System.Buffers.ArrayPool%601> classe destinato a applicabilità generale.</span><span class="sxs-lookup"><span data-stu-id="26ddb-132">The shared pool provides a default implementation of the <xref:System.Buffers.ArrayPool%601> class that's intended for general applicability.</span></span> <span data-ttu-id="26ddb-133">Mantiene le matrici di varie dimensioni di una classe condivisa e passare nuovamente una matrice di dimensioni maggiori rispetto a è stata effettivamente richiesta, ma non verrà mai trasferito nuovamente una matrice minore rispetto a quanto è stato richiesto.</span><span class="sxs-lookup"><span data-stu-id="26ddb-133">A shared class maintains arrays of multiple sizes, and may hand back a larger array than was actually requested, but it will never hand back a smaller array than was requested.</span></span> <span data-ttu-id="26ddb-134">Un buffer da una classe condivisa usando il noleggio di <xref:System.Buffers.ArrayPool%601.Rent%2A> metodo comporterà un buffer esistente viene estratta dal pool se è disponibile un buffer appropriato o in un nuovo buffer allocati se non è disponibili.</span><span class="sxs-lookup"><span data-stu-id="26ddb-134">Renting a buffer from a shared class using the <xref:System.Buffers.ArrayPool%601.Rent%2A> method will result in an existing buffer being taken from the pool if an appropriate buffer is available or in a new buffer being allocated if one is not available.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>