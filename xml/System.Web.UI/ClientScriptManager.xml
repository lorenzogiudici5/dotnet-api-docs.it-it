<Type Name="ClientScriptManager" FullName="System.Web.UI.ClientScriptManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9dd38f6423b80ecc318f1c7fec3ec47840a1766a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37590061" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientScriptManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ClientScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptManager sealed" />
  <TypeSignature Language="F#" Value="type ClientScriptManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="afb21-101">Defines methods for managing client scripts in Web applications.</span>
      <span class="sxs-lookup">
        <span data-stu-id="afb21-101">Defines methods for managing client scripts in Web applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-102">Il <xref:System.Web.UI.ClientScriptManager> classe viene utilizzata per gestire gli script client e aggiungerle alle applicazioni Web.</span><span class="sxs-lookup"><span data-stu-id="afb21-102">The <xref:System.Web.UI.ClientScriptManager> class is used to manage client scripts and add them to Web applications.</span></span> <span data-ttu-id="afb21-103">È possibile ottenere un riferimento al <xref:System.Web.UI.ClientScriptManager> classe la <xref:System.Web.UI.Page.ClientScript%2A> proprietà del <xref:System.Web.UI.Page> oggetto.</span><span class="sxs-lookup"><span data-stu-id="afb21-103">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> class from the <xref:System.Web.UI.Page.ClientScript%2A> property of the <xref:System.Web.UI.Page> object.</span></span>  
  
 <span data-ttu-id="afb21-104">È possibile aggiungere uno script client a una pagina Web in modo dichiarativo, includendo lo script nel markup HTML della pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-104">You can add a client script to a Web page declaratively by including the script in the HTML markup of the page.</span></span> <span data-ttu-id="afb21-105">Tuttavia, esistono situazioni è necessario aggiungere lo script client in modo dinamico.</span><span class="sxs-lookup"><span data-stu-id="afb21-105">However, there are situations when adding client script dynamically is needed.</span></span> <span data-ttu-id="afb21-106">Per aggiungere uno script in modo dinamico, usare il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metodo, il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metodo, il <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metodo, o il <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metodo, a seconda di come e quando si desidera aggiungere lo script.</span><span class="sxs-lookup"><span data-stu-id="afb21-106">To add a script dynamically, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, or the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method, depending on when and how you want to add the script.</span></span> <span data-ttu-id="afb21-107">Per altre informazioni, vedere [procedura: aggiungere Client uno Script in modo dinamico da ASP.NET Web Pages](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span><span class="sxs-lookup"><span data-stu-id="afb21-107">For more information, see [How to: Add Client Script Dynamically to ASP.NET Web Pages](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span></span>  
  
 <span data-ttu-id="afb21-108">Il <xref:System.Web.UI.ClientScriptManager> classe identifica in modo univoco gli script da una chiave <xref:System.String> e un <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="afb21-108">The <xref:System.Web.UI.ClientScriptManager> class uniquely identifies scripts by a key <xref:System.String> and a <xref:System.Type>.</span></span> <span data-ttu-id="afb21-109">Gli script con la stessa chiave e tipo vengono considerati duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-109">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="afb21-110">Utilizzando il tipo di script consente di evitare confusione script simili da diversi controlli utente che potrebbero essere in uso nella pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-110">Using the script type helps to avoid confusing similar scripts from different user controls that might be in use on the page.</span></span>  
  
 <span data-ttu-id="afb21-111">Il <xref:System.Web.UI.ClientScriptManager> classe può essere usata per richiamare i callback del client in situazioni quando è preferibile eseguire il codice lato server dal client senza eseguendo un postback.</span><span class="sxs-lookup"><span data-stu-id="afb21-111">The <xref:System.Web.UI.ClientScriptManager> class can be used to invoke client callbacks in situations when it is desirable to run server code from the client without performing a postback.</span></span> <span data-ttu-id="afb21-112">Ciò è detto eseguendo un callback di out-of-band al server.</span><span class="sxs-lookup"><span data-stu-id="afb21-112">This is referred to as performing an out-of-band callback to the server.</span></span> <span data-ttu-id="afb21-113">In un callback del client, una funzione di script client invia una richiesta asincrona a una pagina Web ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="afb21-113">In a client callback, a client script function sends an asynchronous request to an ASP.NET Web page.</span></span> <span data-ttu-id="afb21-114">La pagina Web viene eseguita una versione modificata del normale ciclo di vita per elaborare il callback.</span><span class="sxs-lookup"><span data-stu-id="afb21-114">The Web page runs a modified version of its normal life cycle to process the callback.</span></span> <span data-ttu-id="afb21-115">Usare il <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metodo per ottenere un riferimento a una funzione client che, quando richiamata, avvia un callback del client a un evento del server.</span><span class="sxs-lookup"><span data-stu-id="afb21-115">Use the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method to obtain a reference to a client function that, when invoked, initiates a client callback to a server event.</span></span> <span data-ttu-id="afb21-116">Per altre informazioni, vedere [implementazione di callback Client senza i postback](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="afb21-116">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="afb21-117">Gli script di callback non funzionerà nei browser meno recenti che non supportano il modello DOM (Document Object), e richiedono che ECMAScript sia abilitato nel client.</span><span class="sxs-lookup"><span data-stu-id="afb21-117">Script callbacks will not work in older browsers that do not support the Document Object Model (DOM), and they require that ECMAScript is enabled on the client.</span></span> <span data-ttu-id="afb21-118">Per verificare se il browser supporta i callback, usare il <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> proprietà, che è accessibile tramite il <xref:System.Web.HttpRequest.Browser%2A> proprietà intrinseca di ASP.NET <xref:System.Web.HttpContext.Request%2A> oggetto.</span><span class="sxs-lookup"><span data-stu-id="afb21-118">To check if the browser supports callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property, which is accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the ASP.NET intrinsic <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="afb21-119">Usare la <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodo e il <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> metodo per definire un evento di postback del client.</span><span class="sxs-lookup"><span data-stu-id="afb21-119">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method and the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method to define a client postback event.</span></span> <span data-ttu-id="afb21-120">Questi metodi consentono alle funzioni di script client, quando richiamata, per il server eseguire il postback della pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-120">These methods enable client script functions, when invoked, to cause the server to post back to the page.</span></span> <span data-ttu-id="afb21-121">Un evento di postback del client è diverso da un callback del client in un normale ciclo di vita per elaborare l'evento di postback del client al completamento della pagina Web.</span><span class="sxs-lookup"><span data-stu-id="afb21-121">A client postback event is different from a client callback in that the Web page completes a normal life cycle to process the client postback event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="afb21-122">Se si usa un <xref:System.Web.UI.WebControls.Button> controllo e il <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> è impostata su `false`, è quindi possibile usare i <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodo per restituire il client di postback evento per il <xref:System.Web.UI.WebControls.Button> controllo.</span><span class="sxs-lookup"><span data-stu-id="afb21-122">If you are using a <xref:System.Web.UI.WebControls.Button> control and the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is set to `false`, then you can use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method to return the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="afb21-123">Il <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> proprietà del <xref:System.Web.UI.WebControls.Button> (controllo), <xref:System.Web.UI.WebControls.ImageButton> controllo e <xref:System.Web.UI.WebControls.LinkButton> controllo può essere usato per eseguire lo script client.</span><span class="sxs-lookup"><span data-stu-id="afb21-123">The <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control, <xref:System.Web.UI.WebControls.ImageButton> control, and <xref:System.Web.UI.WebControls.LinkButton> control can be used to run client script.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-124">Esempio di codice seguente viene illustrato l'utilizzo dei <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metodo del <xref:System.Web.UI.ClientScriptManager> classe.</span><span class="sxs-lookup"><span data-stu-id="afb21-124">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="afb21-125">Nella pagina vengono definiti due script client: `PopupScript`, che visualizza un messaggio di avviso quando la pagina viene caricata, e `ButtonClickScript`, che definisce un gestore del client per un pulsante HTML `onClick` evento.</span><span class="sxs-lookup"><span data-stu-id="afb21-125">Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCallbackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="afb21-126">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-126">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="afb21-127">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-127">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="afb21-128">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-128">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="afb21-129">An argument passed from the client script to the server  <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-129">An argument passed from the client script to the server  <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="afb21-130">The name of the client event handler that receives the result of the successful server event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-130">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="afb21-131">The client script that is evaluated on the client prior to initiating the callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-131">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="afb21-132">The result of the script is passed back to the client event handler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-132">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-133">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-133">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
          <span data-ttu-id="afb21-134">The client function for this overloaded method includes a specified control, argument, client script, and context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-134">The client function for this overloaded method includes a specified control, argument, client script, and context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-135">The name of a client function that invokes the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-135">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-136">Il <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> metodo esegue un callback di out-of-band al server che è una versione modificata del normale ciclo di vita della pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-136">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method performs an out-of-band callback to the server that is a modified version of a page's normal life cycle.</span></span> <span data-ttu-id="afb21-137">Per altre informazioni, vedere [implementazione di callback Client senza i postback](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="afb21-137">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="afb21-138">Quando il browser Microsoft Internet Explorer (versione 5.0 o versioni successive), il meccanismo di callback di script viene implementato tramite l'oggetto COM Microsoft. XMLHTTP e richiede che il browser da impostare per l'esecuzione dei controlli ActiveX.</span><span class="sxs-lookup"><span data-stu-id="afb21-138">When the browser is Microsoft Internet Explorer (version 5.0 or later), the script callback mechanism is implemented through the Microsoft.XmlHttp COM object and requires the browser to be set to run ActiveX controls.</span></span> <span data-ttu-id="afb21-139">Per altri browser, viene usato un evento XMLHttpRequest locale del modello DOM del browser (Document Object) utilizzando.</span><span class="sxs-lookup"><span data-stu-id="afb21-139">For other browsers, an XMLHttpRequest using the browser's local Document Object Model (DOM) is used.</span></span> <span data-ttu-id="afb21-140">Per verificare se un browser supporta i callback del client, usare il <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="afb21-140">To check whether a browser supports client callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property.</span></span> <span data-ttu-id="afb21-141">Per verificare se un browser supporta XML tramite HTTP, usare il <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="afb21-141">To check whether a browser supports XML over HTTP, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> property.</span></span> <span data-ttu-id="afb21-142">Entrambe le proprietà sono accessibili tramite il <xref:System.Web.HttpRequest.Browser%2A> proprietà di intrinseche ASP.NET <xref:System.Web.HttpContext.Request%2A> oggetto.</span><span class="sxs-lookup"><span data-stu-id="afb21-142">Both properties are accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the intrinsic ASP.NET <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="afb21-143">Il <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> eseguire l'overload del <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metodo esegue un callback in modo sincrono tramite XML tramite HTTP.</span><span class="sxs-lookup"><span data-stu-id="afb21-143">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method performs a callback synchronously using XML over HTTP.</span></span> <span data-ttu-id="afb21-144">Quando si inviano dati in modo sincrono in uno scenario di callback, callback sincrono a restituire immediatamente e non bloccare il browser.</span><span class="sxs-lookup"><span data-stu-id="afb21-144">When sending data synchronously in a callback scenario, synchronous callbacks return immediately and do not block the browser.</span></span> <span data-ttu-id="afb21-145">Nessuna due callback sincroni possono eseguire contemporaneamente nel browser.</span><span class="sxs-lookup"><span data-stu-id="afb21-145">No two synchronous callbacks callback can execute at the same time in the browser.</span></span> <span data-ttu-id="afb21-146">Se viene generato un callback sincrono secondo mentre è in corso, il callback sincrono secondo Annulla il primo e verrà restituito solo il callback di secondo.</span><span class="sxs-lookup"><span data-stu-id="afb21-146">If a second synchronous callback is fired while one is currently pending, the second synchronous callback cancels the first and only the second callback will return.</span></span>  
  
 <span data-ttu-id="afb21-147">Per inviare i dati in modo asincrono, usare uno degli overload che accetta il `useAsync` parametro, ovvero un valore booleano valore che controlla questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="afb21-147">To send data asynchronously, use one of the overloads that takes the `useAsync` parameter, which is a Boolean value controlling this behavior.</span></span> <span data-ttu-id="afb21-148">Nello scenario asincrono è possibile avere più callback in sospeso. Tuttavia, l'ordine in cui vengono restituiti è necessariamente corrispondere all'ordine in cui vengono avviate.</span><span class="sxs-lookup"><span data-stu-id="afb21-148">In the asynchronous scenario you can have multiple pending callbacks; however, the order in which they return is not guaranteed to match the order in which they were initiated.</span></span>  
  
 <span data-ttu-id="afb21-149">Inoltre, questo overload del metodo il <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metodo non specifica alcuna funzione client per gestire il caso di una condizione di errore generato dal <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-149">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method specifies no client function to handle the case of an error condition generated by the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method.</span></span> <span data-ttu-id="afb21-150">Per specificare un gestore di callback di errore di client, usare uno degli overload che accetta il `clientErrorCallback` parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-150">To specify a client error callback handler, use one of the overloads that takes the `clientErrorCallback` parameter.</span></span>  
  
 <span data-ttu-id="afb21-151">Il <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> metodo accetta una stringa facoltativa `argument` parametro e restituisce una stringa.</span><span class="sxs-lookup"><span data-stu-id="afb21-151">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method takes an optional string `argument` parameter and returns a string.</span></span> <span data-ttu-id="afb21-152">Per passare o per la ricezione di più valori, concatenare i valori nell'input o restituiscono string, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="afb21-152">To pass in or to receive multiple values, concatenate values in the input or return string, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="afb21-153">Evitare di usare lo stato di visualizzazione nell'implementazione di pagina o controllo proprietà che devono essere aggiornati durante le operazioni di callback di script.</span><span class="sxs-lookup"><span data-stu-id="afb21-153">Avoid using the view state in the implementation of page or control properties that need be updated during script callback operations.</span></span> <span data-ttu-id="afb21-154">Se le proprietà sono in caso di richieste di pagine, è possibile usare lo stato della sessione.</span><span class="sxs-lookup"><span data-stu-id="afb21-154">If the properties are to survive page requests, you can use session state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-155">Esempio di codice seguente viene illustrato come utilizzare i due overload del <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metodo in uno scenario di callback client che viene incrementato di numeri interi.</span><span class="sxs-lookup"><span data-stu-id="afb21-155">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="afb21-156">Vengono visualizzati due meccanismi di callback; la differenza tra di essi è l'uso del `context` parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-156">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="afb21-157">Oggetto `ReceiveServerData1` funzione di callback client viene fornito tramite il `context` parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-157">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="afb21-158">Al contrario, il `ReceiveServerData2` funzione di callback client è definita un `<script>` blocco nella pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-158">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="afb21-159">Oggetto <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metodo è il gestore del server che viene incrementato il valore passato ad esso e <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> metodo viene restituito il valore incrementato sotto forma di stringa.</span><span class="sxs-lookup"><span data-stu-id="afb21-159">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="afb21-160">Se il <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metodo restituisce un errore, il `ProcessCallBackError` viene chiamata la funzione di client.</span><span class="sxs-lookup"><span data-stu-id="afb21-160">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-161">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-161">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="afb21-162">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-162">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="afb21-163">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-163">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="afb21-164">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-164">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="afb21-165">An argument passed from the client script to the server  <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-165">An argument passed from the client script to the server  <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="afb21-166">The name of the client event handler that receives the result of the successful server event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-166">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="afb21-167">The client script that is evaluated on the client prior to initiating the callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-167">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="afb21-168">The result of the script is passed back to the client event handler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-168">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="afb21-169">
            <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-169">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-170">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-170">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="afb21-171">The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-171">The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-172">The name of a client function that invokes the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-172">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-173">Questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metodo richiede un `useAsync` parametro, che consente di eseguire in modo asincrono il callback client impostando il valore su `true`.</span><span class="sxs-lookup"><span data-stu-id="afb21-173">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` parameter, which allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="afb21-174">Le versioni di overload del metodo che non richiedono la `useAsync` parametro è impostato il valore su `false` per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="afb21-174">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span>  
  
 <span data-ttu-id="afb21-175">Per altre informazioni su questo metodo, vedere la sezione Osservazioni per eseguire l'overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-175">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-176">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-176">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="afb21-177">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-177">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackEventReference (target As String, argument As String, clientCallback As String, context As String, clientErrorCallback As String, useAsync As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::String ^ target, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : string * string * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (target, argument, clientCallback, context, clientErrorCallback, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="afb21-178">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-178">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="afb21-179">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-179">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="afb21-180">An argument passed from the client script to the server  <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-180">An argument passed from the client script to the server  <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="afb21-181">The name of the client event handler that receives the result of the successful server event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-181">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="afb21-182">The client script that is evaluated on the client prior to initiating the callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-182">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="afb21-183">The result of the script is passed back to the client event handler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-183">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="afb21-184">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-184">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="afb21-185">
            <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-185">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-186">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-186">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="afb21-187">The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-187">The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-188">The name of a client function that invokes the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-188">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-189">Questo overload del metodo il <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metodo accetta un `target` stringa parametro anziché un <xref:System.Web.UI.Control> parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-189">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method takes a `target` string parameter instead of a <xref:System.Web.UI.Control> parameter.</span></span> <span data-ttu-id="afb21-190">Utilizzare questo overload quando si desidera che il callback per tornare a un valore diverso da una stringa contenente il <xref:System.Web.UI.Control.UniqueID%2A> del controllo.</span><span class="sxs-lookup"><span data-stu-id="afb21-190">Use this overload when you want the callback to go back to something other than a string containing the <xref:System.Web.UI.Control.UniqueID%2A> of the control.</span></span>  
  
 <span data-ttu-id="afb21-191">Inoltre, questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metodo richiede un `useAsync` e un `clientErrorCallback` parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-191">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="afb21-192">Il `useAsync` parametro consente di eseguire in modo asincrono il callback client impostando il valore su `true`.</span><span class="sxs-lookup"><span data-stu-id="afb21-192">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="afb21-193">Le versioni di overload del metodo che non richiedono la `useAsync` parametro è impostato il valore su `false` per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="afb21-193">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="afb21-194">Il `clientErrorCallback` parametro consente di definire il nome della funzione client che viene chiamato se il gestore del server, il <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> (metodo), restituisce un errore.</span><span class="sxs-lookup"><span data-stu-id="afb21-194">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method, returns an error.</span></span> <span data-ttu-id="afb21-195">Le versioni di overload del metodo che non richiedono il `clientErrorCallback` parametro impostato il valore su null.</span><span class="sxs-lookup"><span data-stu-id="afb21-195">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="afb21-196">Per altre informazioni su questo metodo, vedere la sezione Osservazioni per eseguire l'overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-196">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-197">Esempio di codice seguente viene illustrato come utilizzare i due overload del <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metodo in uno scenario di callback client che viene incrementato di numeri interi.</span><span class="sxs-lookup"><span data-stu-id="afb21-197">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="afb21-198">Vengono visualizzati due meccanismi di callback; la differenza tra di essi è l'uso del `context` parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-198">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="afb21-199">Oggetto `ReceiveServerData1` funzione di callback client viene fornito tramite il `context` parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-199">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="afb21-200">Al contrario, il `ReceiveServerData2` funzione di callback client è definita un `<script>` blocco nella pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-200">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="afb21-201">Oggetto <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metodo è il gestore del server che viene incrementato il valore passato ad esso e <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> metodo viene restituito il valore incrementato sotto forma di stringa.</span><span class="sxs-lookup"><span data-stu-id="afb21-201">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="afb21-202">Se il <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metodo restituisce un errore, quindi la funzione client `ProcessCallBackError` viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="afb21-202">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context, clientErrorCallback, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="afb21-203">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-203">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="afb21-204">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-204">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="afb21-205">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-205">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="afb21-206">The name of the client event handler that receives the result of the successful server event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-206">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="afb21-207">The client script that is evaluated on the client prior to initiating the callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-207">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="afb21-208">The result of the script is passed back to the client event handler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-208">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="afb21-209">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-209">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="afb21-210">
            <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-210">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-211">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-211">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="afb21-212">The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-212">The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-213">The name of a client function that invokes the client callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-213">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-214">Questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metodo richiede un `useAsync` e un `clientErrorCallback` parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-214">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="afb21-215">Il `useAsync` parametro consente di eseguire in modo asincrono il callback client impostando il valore su `true`.</span><span class="sxs-lookup"><span data-stu-id="afb21-215">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="afb21-216">Le versioni di overload del metodo che non richiedono la `useAsync` parametro è impostato il valore su `false` per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="afb21-216">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="afb21-217">Il `clientErrorCallback` parametro consente di definire il nome della funzione client che viene chiamato se il gestore del server (il <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> (metodo)) restituisce un errore.</span><span class="sxs-lookup"><span data-stu-id="afb21-217">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler (the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method) returns an error.</span></span> <span data-ttu-id="afb21-218">Le versioni di overload del metodo che non richiedono il `clientErrorCallback` parametro impostato il valore su null.</span><span class="sxs-lookup"><span data-stu-id="afb21-218">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="afb21-219">Per altre informazioni su questo metodo, vedere la sezione Osservazioni per eseguire l'overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-219">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-220">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-220">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="afb21-221">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-221">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackClientHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="afb21-222">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-222">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientHyperlink : System.Web.UI.Control * string -&gt; string" Usage="clientScriptManager.GetPostBackClientHyperlink (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="afb21-223">The server control to process the postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-223">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="afb21-224">The parameter passed to the server control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-224">The parameter passed to the server control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-225">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-225">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-226">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-226">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-227">Usando il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodo richiede il controllo che gestisce il postback per implementare il <xref:System.Web.UI.IPostBackEventHandler> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="afb21-227">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="afb21-228">Per implementare il <xref:System.Web.UI.IPostBackEventHandler> interfaccia di amministrazione di un <xref:System.Web.UI.Page>, utilizzare la direttiva.</span><span class="sxs-lookup"><span data-stu-id="afb21-228">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-229">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-229">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method.</span></span> <span data-ttu-id="afb21-230">Il controllo personalizzato, `MyControl`, implementa la <xref:System.Web.UI.IPostBackEventHandler> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="afb21-230">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="afb21-231">Quando viene selezionato l'elemento di ancoraggio HTML nella pagina, il <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> metodo del controllo personalizzato viene richiamato.</span><span class="sxs-lookup"><span data-stu-id="afb21-231">When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="afb21-232">Esempio di codice seguente ha la stessa funzionalità dell'esempio precedente, tranne il fatto che invece di un controllo personalizzato, il <xref:System.Web.UI.Page> classe implementa il <xref:System.Web.UI.IPostBackEventHandler> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="afb21-232">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientHyperlink : System.Web.UI.Control * string * bool -&gt; string" Usage="clientScriptManager.GetPostBackClientHyperlink (control, argument, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="afb21-233">The server control to process the postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-233">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="afb21-234">The parameter passed to the server control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-234">The parameter passed to the server control.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="afb21-235">
            <see langword="true" /> to register the postback event for validation; <see langword="false" /> to not register the post back event for validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-235">
              <see langword="true" /> to register the postback event for validation; <see langword="false" /> to not register the post back event for validation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-236">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-236">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-237">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-237">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-238">Usando il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodo richiede il controllo che gestisce il postback per implementare il <xref:System.Web.UI.IPostBackEventHandler> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="afb21-238">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="afb21-239">Per implementare il <xref:System.Web.UI.IPostBackEventHandler> interfaccia di amministrazione di un <xref:System.Web.UI.Page>, utilizzare la direttiva.</span><span class="sxs-lookup"><span data-stu-id="afb21-239">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="afb21-240">Returns a string that can be used in a client event to cause postback to the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-240">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.PostBackOptions -&gt; string" Usage="clientScriptManager.GetPostBackEventReference options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="afb21-241">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-241">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-242">Returns a string that can be used in a client event to cause postback to the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-242">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="afb21-243">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-243">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-244">A string that, when treated as script on the client, initiates the client postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-244">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-245">Per implementare il <xref:System.Web.UI.IPostBackEventHandler> interfaccia di amministrazione di un <xref:System.Web.UI.Page>, utilizzare la direttiva.</span><span class="sxs-lookup"><span data-stu-id="afb21-245">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="afb21-246">Il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodo può essere utilizzato con il <xref:System.Web.UI.WebControls.Button> controllare quando il <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> è di proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="afb21-246">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="afb21-247">In questo scenario, il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodo restituisce il postback client evento per il <xref:System.Web.UI.WebControls.Button> controllo.</span><span class="sxs-lookup"><span data-stu-id="afb21-247">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-248">The <see cref="T:System.Web.UI.PostBackOptions" /> parameter is <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-248">The <see cref="T:System.Web.UI.PostBackOptions" /> parameter is <see langword="null" /></span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control * string -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="afb21-249">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-249">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="afb21-250">A string of optional arguments to pass to the control that processes the postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-250">A string of optional arguments to pass to the control that processes the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-251">Returns a string that can be used in a client event to cause postback to the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-251">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="afb21-252">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-252">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-253">A string that, when treated as script on the client, initiates the postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-253">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-254">Per implementare il <xref:System.Web.UI.IPostBackEventHandler> interfaccia di amministrazione di un <xref:System.Web.UI.Page>, utilizzare la direttiva.</span><span class="sxs-lookup"><span data-stu-id="afb21-254">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="afb21-255">Il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodo può essere utilizzato con il <xref:System.Web.UI.WebControls.Button> controllare quando il <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> è di proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="afb21-255">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="afb21-256">In questo scenario, il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodo restituisce il postback client evento per il <xref:System.Web.UI.WebControls.Button> controllo.</span><span class="sxs-lookup"><span data-stu-id="afb21-256">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-257">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-257">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method.</span></span> <span data-ttu-id="afb21-258">Il controllo personalizzato, `MyControl`, implementa la <xref:System.Web.UI.IPostBackEventHandler> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="afb21-258">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="afb21-259">Quando si fa clic sul pulsante nella pagina, il <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> metodo del controllo personalizzato viene richiamato.</span><span class="sxs-lookup"><span data-stu-id="afb21-259">When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="afb21-260">Esempio di codice seguente ha la stessa funzionalità dell'esempio precedente, tranne il fatto che invece di un controllo personalizzato, il <xref:System.Web.UI.Page> classe implementa il <xref:System.Web.UI.IPostBackEventHandler> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="afb21-260">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-261">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-261">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions, registerForEventValidation As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.PostBackOptions * bool -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (options, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="afb21-262">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-262">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="afb21-263">
            <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-263">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-264">Returns a string that can be used in a client event to cause postback to the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-264">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="afb21-265">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-265">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object.</span>
          </span>
          <span data-ttu-id="afb21-266">Optionally, registers the event reference for validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-266">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-267">A string that, when treated as script on the client, initiates the client postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-267">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-268">Per implementare il <xref:System.Web.UI.IPostBackEventHandler> interfaccia di amministrazione di un <xref:System.Web.UI.Page> oggetto, usare la direttiva.</span><span class="sxs-lookup"><span data-stu-id="afb21-268">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page> object, use the  directive.</span></span>  
  
 <span data-ttu-id="afb21-269">Il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodo può essere utilizzato con il <xref:System.Web.UI.WebControls.Button> controllare quando il <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> è di proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="afb21-269">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="afb21-270">In questo scenario, il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodo restituisce il postback client evento per il <xref:System.Web.UI.WebControls.Button> controllo.</span><span class="sxs-lookup"><span data-stu-id="afb21-270">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="afb21-271">Se `registerForEventValidation` viene `true`, il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> chiamate al metodo il <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> metodo per registrare il riferimento dell'evento per la convalida con un ID di controllo univoco che rappresenta il controllo client che sta generando l'evento.</span><span class="sxs-lookup"><span data-stu-id="afb21-271">If `registerForEventValidation` is `true`, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-272">The <see cref="T:System.Web.UI.PostBackOptions" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-272">The <see cref="T:System.Web.UI.PostBackOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control * string * bool -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (control, argument, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="afb21-273">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-273">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="afb21-274">A string of optional arguments to pass to <c>control</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-274">A string of optional arguments to pass to <c>control</c>.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="afb21-275">
            <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-275">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-276">Returns a string to use in a client event to cause postback to the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-276">Returns a string to use in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="afb21-277">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-277">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
          <span data-ttu-id="afb21-278">Optionally, registers the event reference for validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-278">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-279">A string that, when treated as script on the client, initiates the postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-279">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-280">Per implementare il <xref:System.Web.UI.IPostBackEventHandler> interfaccia di amministrazione di un <xref:System.Web.UI.Page>, utilizzare la direttiva.</span><span class="sxs-lookup"><span data-stu-id="afb21-280">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 <span data-ttu-id="afb21-281">Il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodo può essere utilizzato con il <xref:System.Web.UI.WebControls.Button> controllare quando il <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> è di proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="afb21-281">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="afb21-282">In questo scenario, il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodo restituisce il postback client evento per il <xref:System.Web.UI.WebControls.Button> controllo.</span><span class="sxs-lookup"><span data-stu-id="afb21-282">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="afb21-283">Se `registerForEventValidation` è true, il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> chiamate al metodo il <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> metodo per registrare il riferimento dell'evento per la convalida con un ID di controllo univoco che rappresenta il controllo client che sta generando l'evento.</span><span class="sxs-lookup"><span data-stu-id="afb21-283">If `registerForEventValidation` is true, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-284">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-284">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWebResourceUrl">
      <MemberSignature Language="C#" Value="public string GetWebResourceUrl (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetWebResourceUrl(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetWebResourceUrl(Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="member this.GetWebResourceUrl : Type * string -&gt; string" Usage="clientScriptManager.GetWebResourceUrl (type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="afb21-285">The type of the resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-285">The type of the resource.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="afb21-286">The fully qualified name of the resource in the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-286">The fully qualified name of the resource in the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-287">Gets a URL reference to a resource in an assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-287">Gets a URL reference to a resource in an assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-288">The URL reference to the resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-288">The URL reference to the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-289">Il <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> metodo restituisce un riferimento URL a una risorsa incorporata in un assembly.</span><span class="sxs-lookup"><span data-stu-id="afb21-289">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method returns a URL reference to a resource embedded in an assembly.</span></span> <span data-ttu-id="afb21-290">Il riferimento restituito non è codificato in URL.</span><span class="sxs-lookup"><span data-stu-id="afb21-290">The returned reference is not URL encoded.</span></span> <span data-ttu-id="afb21-291">Risorse possono essere file di script, immagini o qualsiasi file statici.</span><span class="sxs-lookup"><span data-stu-id="afb21-291">Resources can be script files, images, or any static file.</span></span> <span data-ttu-id="afb21-292">Specificare il tipo di base per l'oggetto che dovranno accedere alla risorsa.</span><span class="sxs-lookup"><span data-stu-id="afb21-292">You specify the type based on the object that will be accessing the resource.</span></span>  
  
 <span data-ttu-id="afb21-293">Una risorsa Web registrata con la pagina viene identificata in base al tipo e nome.</span><span class="sxs-lookup"><span data-stu-id="afb21-293">A Web resource registered with the page is uniquely identified by its type and name.</span></span> <span data-ttu-id="afb21-294">Solo una risorsa con una coppia di nome e il tipo specificato può essere registrata con la pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-294">Only one resource with a given type and name pair can be registered with the page.</span></span> <span data-ttu-id="afb21-295">Tentativo di registrare una risorsa che è già registrata non crea un duplicato della risorsa registrata.</span><span class="sxs-lookup"><span data-stu-id="afb21-295">Attempting to register a resource that is already registered does not create a duplicate of the registered resource.</span></span>  
  
 <span data-ttu-id="afb21-296">Il <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> metodo viene utilizzato in combinazione con il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> metodo per accedere alle risorse incorporati negli assembly.</span><span class="sxs-lookup"><span data-stu-id="afb21-296">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method is used in conjunction with the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method for accessing resources embedded in assemblies.</span></span> <span data-ttu-id="afb21-297">Per altre informazioni sull'utilizzo delle risorse nelle applicazioni, vedere [ASP.NET Web Page Resources Overview](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span><span class="sxs-lookup"><span data-stu-id="afb21-297">For more information on using resources in applications, see [ASP.NET Web Page Resources Overview](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-298">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-298">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method.</span></span> <span data-ttu-id="afb21-299">Il *tipo* parametro in questo esempio è impostato per il tipo di classe nell'assembly che contiene la risorsa.</span><span class="sxs-lookup"><span data-stu-id="afb21-299">The *type* parameter in this example is set to the type of class in the assembly containing the resource.</span></span> <span data-ttu-id="afb21-300">Il `resourceName` parametro è specificato con il percorso completo della risorsa, che include lo spazio dei nomi predefinito.</span><span class="sxs-lookup"><span data-stu-id="afb21-300">The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="afb21-301">Esempio di codice seguente viene illustrato come applicare a livello di codice il <xref:System.Web.UI.WebResourceAttribute> attributo dei metadati per contrassegnare l'assembly per le risorse che verranno servite.</span><span class="sxs-lookup"><span data-stu-id="afb21-301">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span> <span data-ttu-id="afb21-302">Compilare la classe seguente in una libreria di classi con uno spazio dei nomi predefinito impostato su `Samples.AspNet.CS.Controls` o `Samples.AspNet.VB.Controls`, a seconda del linguaggio in uso.</span><span class="sxs-lookup"><span data-stu-id="afb21-302">Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="afb21-303">Questo esempio richiede un file JavaScript denominato `Script_include.js`.</span><span class="sxs-lookup"><span data-stu-id="afb21-303">This example requires a JavaScript file named `Script_include.js`.</span></span> <span data-ttu-id="afb21-304">Il file con estensione js è una risorsa incorporata nell'assembly che contiene il `ClientScriptResourceLabel` oggetto.</span><span class="sxs-lookup"><span data-stu-id="afb21-304">The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object.</span></span> <span data-ttu-id="afb21-305">Se si usa Visual Studio], nella finestra delle proprietà del progetto libreria di classi, impostare **Build Action** al **risorsa incorporata** quando viene selezionato il file di script.</span><span class="sxs-lookup"><span data-stu-id="afb21-305">If you are using Visual Studio], in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected.</span></span> <span data-ttu-id="afb21-306">Se si sta compilando la libreria nella riga di comando, utilizzare l'opzione per incorporare la risorsa.</span><span class="sxs-lookup"><span data-stu-id="afb21-306">If you are compiling the library at the command line, use the  switch to embed the resource.</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-307">The web resource name is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-307">The web resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="afb21-308">\- or -  The web resource name has a length of zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-308">\- or -  The web resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptBlockRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="afb21-309">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-309">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptBlockRegistered : string -&gt; bool" Usage="clientScriptManager.IsClientScriptBlockRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="afb21-310">The key of the client script block to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-310">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-311">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-311">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-312">
            <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-312">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-313">Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metodo per evitare la registrazione degli script duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-313">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="afb21-314">Ciò è particolarmente importante se lo script richiede una grande quantità di risorse server da creare.</span><span class="sxs-lookup"><span data-stu-id="afb21-314">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="afb21-315">Uno script client è identificato dalla relativa chiave e il relativo tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-315">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="afb21-316">Gli script con la stessa chiave e tipo vengono considerati duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-316">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="afb21-317">Questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> metodo chiama l'overload che accetta sia un `key` e una `type` parametro con il tipo è impostato come un <xref:System.Web.UI.Page> oggetto</span><span class="sxs-lookup"><span data-stu-id="afb21-317">This overload of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptBlockRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsClientScriptBlockRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="afb21-318">The type of the client script block to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-318">The type of the client script block to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="afb21-319">The key of the client script block to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-319">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-320">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-320">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-321">
            <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-321">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-322">Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metodo per evitare la registrazione degli script duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-322">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="afb21-323">Ciò è particolarmente importante se lo script richiede una grande quantità di risorse server da creare.</span><span class="sxs-lookup"><span data-stu-id="afb21-323">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="afb21-324">Uno script client è identificato dalla relativa chiave e il relativo tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-324">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="afb21-325">Gli script con la stessa chiave e tipo vengono considerati duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-325">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="afb21-326">Specificare il tipo di base per l'oggetto che dovranno accedere alla risorsa.</span><span class="sxs-lookup"><span data-stu-id="afb21-326">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="afb21-327">Ad esempio, quando si usa un' `Page` istanza per accedere alla risorsa, si specifica il `Page` tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-327">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-328">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-328">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="afb21-329">Si noti che, se la logica per cercare il blocco di script client esistenti sono state rimosse, potrebbe non esistere due script client duplicati nel codice sorgente HTML della pagina sottoposta a rendering perché il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metodo verifica la presenza di duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-329">Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates.</span></span> <span data-ttu-id="afb21-330">Il vantaggio di controllo consiste nel ridurre il calcolo non necessario.</span><span class="sxs-lookup"><span data-stu-id="afb21-330">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-331">The client script type is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-331">The client script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptIncludeRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="afb21-332">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-332">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptIncludeRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptIncludeRegistered : string -&gt; bool" Usage="clientScriptManager.IsClientScriptIncludeRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="afb21-333">The key of the client script include to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-333">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-334">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-334">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-335">
            <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-335">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-336">Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metodo per evitare la registrazione degli script duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-336">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="afb21-337">Ciò è particolarmente importante se lo script richiede una grande quantità di risorse server da creare.</span><span class="sxs-lookup"><span data-stu-id="afb21-337">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="afb21-338">Includere uno script client è identificata da relativa chiave e il relativo tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-338">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="afb21-339">Gli script con la stessa chiave e tipo vengono considerati duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-339">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="afb21-340">Questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metodo chiama l'overload che accetta sia un `key` e una `type` parametro con il tipo è impostato come un <xref:System.Web.UI.Page> oggetto.</span><span class="sxs-lookup"><span data-stu-id="afb21-340">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptIncludeRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsClientScriptIncludeRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="afb21-341">The type of the client script include to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-341">The type of the client script include to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="afb21-342">The key of the client script include to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-342">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-343">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-343">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-344">
            <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-344">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-345">Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> include metodo per evitare la registrazione dello script client duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-345">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate client script includes.</span></span> <span data-ttu-id="afb21-346">Ciò è particolarmente importante se lo script richiede una grande quantità di risorse server da creare.</span><span class="sxs-lookup"><span data-stu-id="afb21-346">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="afb21-347">Includere uno script client è identificata da relativa chiave e il relativo tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-347">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="afb21-348">Gli script con la stessa chiave e tipo vengono considerati duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-348">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="afb21-349">Specificare il tipo di base per l'oggetto che dovranno accedere alla risorsa.</span><span class="sxs-lookup"><span data-stu-id="afb21-349">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="afb21-350">Ad esempio, quando si utilizza un'istanza di pagina per accedere alla risorsa, specificare il `Page` tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-350">For instance, when using a Page instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-351">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-351">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method.</span></span> <span data-ttu-id="afb21-352">Si noti che, se sono stati rimossi la logica controlla la presenza include lo script client esistente, potrebbe non esistere due script client duplicati nel codice sorgente HTML della pagina sottoposta a rendering perché il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metodo verifica la presenza di duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-352">Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="afb21-353">Il vantaggio di controllo consiste nel ridurre il calcolo non necessario.</span><span class="sxs-lookup"><span data-stu-id="afb21-353">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="afb21-354">Questo esempio richiede un file JavaScript denominato `Script_include.js`, con il contenuto seguente:</span><span class="sxs-lookup"><span data-stu-id="afb21-354">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-355">The client script include type is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-355">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOnSubmitStatementRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="afb21-356">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-356">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOnSubmitStatementRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsOnSubmitStatementRegistered : string -&gt; bool" Usage="clientScriptManager.IsOnSubmitStatementRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="afb21-357">The key of the OnSubmit statement to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-357">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-358">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-358">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-359">
            <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-359">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-360">Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metodo per evitare la registrazione duplicata OnSubmit istruzioni.</span><span class="sxs-lookup"><span data-stu-id="afb21-360">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate OnSubmit statements.</span></span> <span data-ttu-id="afb21-361">Ciò è particolarmente importante se l'istruzione richiede una grande quantità di risorse server da creare.</span><span class="sxs-lookup"><span data-stu-id="afb21-361">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="afb21-362">Un'istruzione viene identificata in modo univoco la chiave e il relativo tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-362">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="afb21-363">Istruzioni con la stessa chiave e tipo vengono considerate duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-363">Statements with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="afb21-364">Questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> metodo chiama l'overload che accetta sia un `key` e una `type` parametro con il tipo è impostato come un <xref:System.Web.UI.Page> oggetto</span><span class="sxs-lookup"><span data-stu-id="afb21-364">This overload of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsOnSubmitStatementRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsOnSubmitStatementRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="afb21-365">The type of the OnSubmit statement to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-365">The type of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="afb21-366">The key of the OnSubmit statement to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-366">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-367">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-367">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-368">
            <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-368">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-369">Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metodo per evitare la registrazione di istruzioni duplicate.</span><span class="sxs-lookup"><span data-stu-id="afb21-369">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate statements.</span></span> <span data-ttu-id="afb21-370">Ciò è particolarmente importante se l'istruzione richiede una grande quantità di risorse server da creare.</span><span class="sxs-lookup"><span data-stu-id="afb21-370">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="afb21-371">Un'istruzione viene identificata in modo univoco la chiave e il relativo tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-371">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="afb21-372">Istruzioni con la stessa chiave e tipo vengono considerate duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-372">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="afb21-373">Specificare il tipo di base per l'oggetto che dovranno accedere alla risorsa.</span><span class="sxs-lookup"><span data-stu-id="afb21-373">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="afb21-374">Ad esempio, quando si usa un' `Page` istanza per accedere alla risorsa, si specifica il `Page` tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-374">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-375">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-375">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method.</span></span> <span data-ttu-id="afb21-376">Uno script denominato `OnSubmitScript` viene registrato con il <xref:System.Web.UI.Page> in modo che quando viene inviato form della pagina viene richiamato lo script.</span><span class="sxs-lookup"><span data-stu-id="afb21-376">A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-377">The OnSubmit statement type is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-377">The OnSubmit statement type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartupScriptRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="afb21-378">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-378">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsStartupScriptRegistered : string -&gt; bool" Usage="clientScriptManager.IsStartupScriptRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="afb21-379">The key of the startup script to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-379">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-380">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-380">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-381">
            <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-381">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-382">Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metodo per evitare la registrazione degli script duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-382">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="afb21-383">Ciò è particolarmente importante se lo script richiede una grande quantità di risorse server da creare.</span><span class="sxs-lookup"><span data-stu-id="afb21-383">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="afb21-384">Uno script di avvio viene identificato dalla relativa chiave e il relativo tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-384">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="afb21-385">Gli script con la stessa chiave e tipo vengono considerati duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-385">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="afb21-386">Questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metodo chiama l'overload che accetta una stringa di entrambe `key` e una `type` parametro con il tipo è impostato come un <xref:System.Web.UI.Page> oggetto</span><span class="sxs-lookup"><span data-stu-id="afb21-386">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a string `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsStartupScriptRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsStartupScriptRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="afb21-387">The type of the startup script to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-387">The type of the startup script to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="afb21-388">The key of the startup script to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-388">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-389">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-389">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="afb21-390">
            <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-390">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-391">Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metodo per evitare la registrazione degli script duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-391">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="afb21-392">Ciò è particolarmente importante se lo script richiede una grande quantità di risorse server da creare.</span><span class="sxs-lookup"><span data-stu-id="afb21-392">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="afb21-393">Uno script di avvio client viene identificato dalla relativa chiave e il relativo tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-393">A client startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="afb21-394">Gli script con la stessa chiave e tipo vengono considerati duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-394">Scripts with the same key and type are considered duplicates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-395">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-395">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="afb21-396">Si noti che, se la logica per cercare il blocco di script di avvio esistenti sono state rimosse, potrebbe non esistere due script di avvio duplicato nel codice sorgente HTML della pagina sottoposta a rendering perché il <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metodo verifica la presenza di duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-396">Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates.</span></span> <span data-ttu-id="afb21-397">Il vantaggio di controllo consiste nel ridurre il calcolo non necessario.</span><span class="sxs-lookup"><span data-stu-id="afb21-397">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-398">The startup script type is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-398">The startup script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterArrayDeclaration : string * string -&gt; unit" Usage="clientScriptManager.RegisterArrayDeclaration (arrayName, arrayValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName">
          <span data-ttu-id="afb21-399">The array name to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-399">The array name to register.</span>
          </span>
        </param>
        <param name="arrayValue">
          <span data-ttu-id="afb21-400">The array value or values to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-400">The array value or values to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-401">Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-401">Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-402">Il <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> controlli per verificare l'esistenza di una matrice registrata con lo stesso nome come il nome specificato nella `arrayName` parametro e, in questo caso, aggiunge i valori specificati nel `arrayValue` parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-402">The <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter.</span></span> <span data-ttu-id="afb21-403">Poiché il meccanismo di archiviazione sottostante si basa su un <xref:System.Collections.ArrayList>, i duplicati sono consentiti.</span><span class="sxs-lookup"><span data-stu-id="afb21-403">Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed.</span></span> <span data-ttu-id="afb21-404">Se una matrice registrata con lo stesso nome di `arrayName` parametro non esiste, viene creato e i valori nella `arrayValue` parametro aggiunto a esso.</span><span class="sxs-lookup"><span data-stu-id="afb21-404">If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.</span></span>  
  
 <span data-ttu-id="afb21-405">Se si desidera che i valori letterali stringa nella matrice JavaScript risultante, includere le virgolette singole (') o virgolette doppie di escape (\\") nel `arrayValue` parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-405">If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\") in the `arrayValue` parameter.</span></span> <span data-ttu-id="afb21-406">Il valore della `arrayValue` parametro deve essere un singolo elemento.</span><span class="sxs-lookup"><span data-stu-id="afb21-406">The value of the `arrayValue` parameter should be a single element.</span></span> <span data-ttu-id="afb21-407">Se più di un valore deve essere aggiunto alla matrice, eseguire più chiamate tramite il <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-407">If more than one value needs to be added to the array, make multiple calls using the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-408">Esempio di codice seguente viene illustrato l'utilizzo dei <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> e <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="afb21-408">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="afb21-409">L'esempio registra una matrice e un valore nascosto e definisce la `OnClick` eventi di un `<input>` pulsante per la quale calcolare la somma dei due valori della matrice e del valore nascosto.</span><span class="sxs-lookup"><span data-stu-id="afb21-409">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-410">
            <paramref name="arrayName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-410">
              <paramref name="arrayName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.String.Split" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="afb21-411">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-411">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptBlock : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptBlock (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="afb21-412">The type of the client script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-412">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="afb21-413">The key of the client script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-413">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="afb21-414">The client script literal to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-414">The client script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-415">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-415">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-416">Uno script client è identificato dalla relativa chiave e il relativo tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-416">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="afb21-417">Gli script con la stessa chiave e tipo vengono considerati duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-417">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="afb21-418">Un solo script con un tipo specificato e una coppia di chiavi può essere registrato con la pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-418">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="afb21-419">Tentativo di registrare uno script che è già registrato non crea un duplicato di script.</span><span class="sxs-lookup"><span data-stu-id="afb21-419">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="afb21-420">Chiamare il <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> metodo per determinare se uno script client con una coppia di chiave e il tipo specificato è già registrato ed evitare inutilmente il tentativo di aggiungere lo script.</span><span class="sxs-lookup"><span data-stu-id="afb21-420">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="afb21-421">In questo overload del metodo il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metodo, è necessario assicurarsi che lo script fornito nel `script` parametro viene eseguito il wrapping un `<script>` blocco di elementi.</span><span class="sxs-lookup"><span data-stu-id="afb21-421">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you must make sure that the script provided in the `script` parameter is wrapped in a `<script>` element block.</span></span>  
  
 <span data-ttu-id="afb21-422">Il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metodo aggiunge un blocco di script nella parte superiore della pagina sottoposta a rendering.</span><span class="sxs-lookup"><span data-stu-id="afb21-422">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="afb21-423">I blocchi di script non vengono necessariamente restituiti nell'ordine in che cui sono registrati.</span><span class="sxs-lookup"><span data-stu-id="afb21-423">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="afb21-424">Se l'ordine dei blocchi di script è importante, utilizzare un <xref:System.Text.StringBuilder> dell'oggetto per raggruppare gli script in una singola stringa e li registra quindi tutto in un blocco di script client singolo.</span><span class="sxs-lookup"><span data-stu-id="afb21-424">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-425">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-425">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptBlock : Type * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterClientScriptBlock (type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="afb21-426">The type of the client script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-426">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="afb21-427">The key of the client script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-427">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="afb21-428">The client script literal to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-428">The client script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="afb21-429">A Boolean value indicating whether to add script tags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-429">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-430">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-430">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-431">Uno script client è identificato dalla relativa chiave e il relativo tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-431">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="afb21-432">Gli script con la stessa chiave e tipo vengono considerati duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-432">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="afb21-433">Un solo script con un tipo specificato e una coppia di chiavi può essere registrato con la pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-433">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="afb21-434">Tentativo di registrare uno script che è già registrato non crea un duplicato di script.</span><span class="sxs-lookup"><span data-stu-id="afb21-434">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="afb21-435">Chiamare il <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> metodo per determinare se uno script client con una coppia di chiave e il tipo specificato è già registrato.</span><span class="sxs-lookup"><span data-stu-id="afb21-435">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered.</span></span> <span data-ttu-id="afb21-436">Ciò consente di evitare inutilmente il tentativo di aggiungere lo script.</span><span class="sxs-lookup"><span data-stu-id="afb21-436">This lets you avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="afb21-437">In questo overload del <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metodo, è possibile indicare se lo script fornito nel `script` parametro viene eseguito il wrapping con un `<script>` blocco di elementi usando il `addScriptTags` parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-437">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="afb21-438">L'impostazione `addScriptTags` a `true` indica che il tag di script verranno aggiunto automaticamente.</span><span class="sxs-lookup"><span data-stu-id="afb21-438">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="afb21-439">Il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metodo aggiunge un blocco di script nella parte superiore della pagina sottoposta a rendering.</span><span class="sxs-lookup"><span data-stu-id="afb21-439">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="afb21-440">I blocchi di script non vengono necessariamente restituiti nell'ordine in che cui sono registrati.</span><span class="sxs-lookup"><span data-stu-id="afb21-440">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="afb21-441">Se l'ordine dei blocchi di script è importante, utilizzare un <xref:System.Text.StringBuilder> dell'oggetto per raggruppare gli script in una singola stringa e li registra quindi tutto in un blocco di script client singolo.</span><span class="sxs-lookup"><span data-stu-id="afb21-441">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-442">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-442">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span> <span data-ttu-id="afb21-443">Si noti che il `addScriptTags` parametro è impostato su `true` in modo che non sono inclusi con l'inizio e la chiusura di tag di script di `script` parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-443">Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-444">The client script block type is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-444">The client script block type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="afb21-445">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-445">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClientScriptInclude (key As String, url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptInclude : string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptInclude (key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="afb21-446">The key of the client script include to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-446">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="afb21-447">The URL of the client script include to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-447">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-448">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL, which enables the script to be called from the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-448">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL, which enables the script to be called from the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-449">Includere uno script client è identificata da relativa chiave e il relativo tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-449">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="afb21-450">Gli script con la stessa chiave e tipo vengono considerati duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-450">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="afb21-451">Un solo script con un tipo specificato e una coppia di chiavi può essere registrato con la pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-451">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="afb21-452">Tentativo di registrare uno script che è già registrato non crea un duplicato di script.</span><span class="sxs-lookup"><span data-stu-id="afb21-452">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="afb21-453">Chiamare il <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> metodo per determinare se includere uno script client con una chiave specificata e la coppia di tipo è già registrata ed evitare inutilmente il tentativo di aggiungere lo script.</span><span class="sxs-lookup"><span data-stu-id="afb21-453">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method to determine whether a client script include with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="afb21-454">Per risolvere l'URL del client, usare il <xref:System.Web.UI.Control.ResolveClientUrl%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-454">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="afb21-455">Questo metodo Usa il contesto dell'URL in cui viene chiamato per risolvere il percorso.</span><span class="sxs-lookup"><span data-stu-id="afb21-455">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="afb21-456">Questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metodo chiama l'overload che accetta una `key`, un `URL`e un `type` parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-456">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method calls the overload that takes a `key`, a `URL`, and a `type` parameter.</span></span>  
  
 <span data-ttu-id="afb21-457">Il metodo aggiunge un blocco di script nella parte superiore della pagina sottoposta a rendering.</span><span class="sxs-lookup"><span data-stu-id="afb21-457">The method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-458">Per informazioni correlate, tra cui sintassi, utilizzo e un esempio, vedere <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span><span class="sxs-lookup"><span data-stu-id="afb21-458">For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptInclude : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptInclude (type, key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="afb21-459">The type of the client script include to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-459">The type of the client script include to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="afb21-460">The key of the client script include to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-460">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="afb21-461">The URL of the client script include to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-461">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-462">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-462">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-463">Questo overload del metodo il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metodo accetta *chiave* e *url* parametri per identificare lo script, nonché un `type` includono parametro per specificare l'identificazione dello script client.</span><span class="sxs-lookup"><span data-stu-id="afb21-463">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method takes *key* and *url* parameters to identify the script, as well as a `type` parameter to specify the identification of the client script include.</span></span> <span data-ttu-id="afb21-464">Specificare il tipo di base per l'oggetto che dovranno accedere alla risorsa.</span><span class="sxs-lookup"><span data-stu-id="afb21-464">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="afb21-465">Ad esempio, quando si usa un' `Page` istanza per accedere alla risorsa, si specifica il `Page` tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-465">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="afb21-466">Per risolvere l'URL del client, usare il <xref:System.Web.UI.Control.ResolveClientUrl%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-466">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="afb21-467">Questo metodo Usa il contesto dell'URL in cui viene chiamato per risolvere il percorso.</span><span class="sxs-lookup"><span data-stu-id="afb21-467">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="afb21-468">Questo metodo aggiunge un blocco di script nella parte superiore della pagina sottoposta a rendering.</span><span class="sxs-lookup"><span data-stu-id="afb21-468">This method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-469">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-469">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method.</span></span> <span data-ttu-id="afb21-470">Si noti che se la logica controlla la presenza include lo script client esistenti sono state rimosse, esiste comunque non sarebbe script client duplicato nella pagina sottoposta a rendering perché il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metodo verifica la presenza di duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-470">Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="afb21-471">Il vantaggio di controllo consiste nel ridurre il calcolo non necessario.</span><span class="sxs-lookup"><span data-stu-id="afb21-471">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="afb21-472">In questo esempio richiede un file JavaScript denominato file Script_include con il contenuto seguente:</span><span class="sxs-lookup"><span data-stu-id="afb21-472">This example requires a JavaScript file named Script_include.js with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-473">The client script include type is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-473">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="afb21-474">The URL is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-474">The URL is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="afb21-475">\- or -  The URL is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-475">\- or -  The URL is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptResource (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptResource(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptResource(Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptResource : Type * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptResource (type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="afb21-476">The type of the client script resource to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-476">The type of the client script resource to register.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="afb21-477">The name of the client script resource to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-477">The name of the client script resource to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-478">Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-478">Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-479">Il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> metodo viene usato per accedere a risorse compilate dagli assembly tramite il gestore HTTP WebResource. axd.</span><span class="sxs-lookup"><span data-stu-id="afb21-479">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method is used when accessing compiled-in resources from assemblies through the WebResource.axd HTTP handler.</span></span> <span data-ttu-id="afb21-480">Il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> metodo registra lo script con il <xref:System.Web.UI.Page> dell'oggetto e impedisce a script duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-480">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method registers the script with the <xref:System.Web.UI.Page> object and prevents duplicate scripts.</span></span> <span data-ttu-id="afb21-481">Questo metodo include il contenuto dell'URL della risorsa con un `<script>` blocco di elementi.</span><span class="sxs-lookup"><span data-stu-id="afb21-481">This method wraps the contents of the resource URL with a `<script>` element block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-482">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-482">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="afb21-483">Esempio di codice seguente viene illustrato come applicare a livello di codice il <xref:System.Web.UI.WebResourceAttribute> attributo dei metadati per contrassegnare l'assembly per le risorse che verranno servite.</span><span class="sxs-lookup"><span data-stu-id="afb21-483">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="afb21-484">Questo esempio richiede un file JavaScript denominato `Script_include.js`, con il contenuto seguente:</span><span class="sxs-lookup"><span data-stu-id="afb21-484">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 <span data-ttu-id="afb21-485">Compilare il `Script_include.js` file come risorsa nel `Samples.AspNet.CS.Controls` assembly che contiene il `ClientScriptResourceLabel` classe.</span><span class="sxs-lookup"><span data-stu-id="afb21-485">Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-486">The client resource name is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-486">The client resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="afb21-487">\- or -  The client resource name has a length of zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-487">\- or -  The client resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterExpandoAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="afb21-488">Registers a name/value pair as a custom (expando) attribute of the specified control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-488">Registers a name/value pair as a custom (expando) attribute of the specified control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterExpandoAttribute : string * string * string -&gt; unit" Usage="clientScriptManager.RegisterExpandoAttribute (controlId, attributeName, attributeValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="afb21-489">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-489">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="afb21-490">The name of the custom attribute to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-490">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="afb21-491">The value of the custom attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-491">The value of the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-492">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-492">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-493">Il <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> metodo registra una coppia nome/valore come attributo personalizzato (expando) sull'oggetto specificato <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="afb21-493">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="afb21-494">L'attributo expando è impostato in modo dinamico da JavaScript per mantenere la compatibilità XHTML per il rendering del markup del controllo.</span><span class="sxs-lookup"><span data-stu-id="afb21-494">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="afb21-495">Le virgolette e barre rovesciate in valori dell'attributo personalizzato (expando) vengono sottoposti a escape.</span><span class="sxs-lookup"><span data-stu-id="afb21-495">Quotes and backslashes in the custom (expando) attribute's values are escaped.</span></span> <span data-ttu-id="afb21-496">Se non si desidera eseguire l'escape di virgolette e barre rovesciate, chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> overload di metodo e impostare il `encode` parametro per `false`.</span><span class="sxs-lookup"><span data-stu-id="afb21-496">If you do not want to escape quotes and backslashes, call the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> overload method and set the `encode` parameter to `false`.</span></span>  
  
 <span data-ttu-id="afb21-497">Se l'attributo expando non viene trovato o non viene trovato il controllo a cui aggiungere l'attributo expando, lo script client viene comunque creato, ma non avrà alcun effetto del controllo.</span><span class="sxs-lookup"><span data-stu-id="afb21-497">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RegisterExpandoAttribute : string * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterExpandoAttribute (controlId, attributeName, attributeValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="afb21-498">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-498">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="afb21-499">The name of the custom attribute to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-499">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="afb21-500">The value of the custom attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-500">The value of the custom attribute.</span>
          </span>
        </param>
        <param name="encode">
          <span data-ttu-id="afb21-501">A Boolean value indicating whether to encode the custom attribute to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-501">A Boolean value indicating whether to encode the custom attribute to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-502">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-502">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-503">Il <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> metodo registra una coppia nome/valore come attributo personalizzato (expando) sull'oggetto specificato <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="afb21-503">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="afb21-504">L'attributo expando è impostato in modo dinamico da JavaScript per mantenere la compatibilità XHTML per il rendering del markup del controllo.</span><span class="sxs-lookup"><span data-stu-id="afb21-504">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="afb21-505">Impostare il `encode` parametro per `true` se è necessario eseguire l'escape di virgolette e barre rovesciate nel valore dell'attributo expando.</span><span class="sxs-lookup"><span data-stu-id="afb21-505">Set the `encode` parameter to `true` if you need to escape quotes and backslashes in your expando attribute's value.</span></span>  
  
 <span data-ttu-id="afb21-506">Se l'attributo expando non viene trovato o non viene trovato il controllo a cui aggiungere l'attributo expando, lo script client viene comunque creato, ma non avrà alcun effetto del controllo.</span><span class="sxs-lookup"><span data-stu-id="afb21-506">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-507">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> metodo del <xref:System.Web.UI.ClientScriptManager> classe.</span><span class="sxs-lookup"><span data-stu-id="afb21-507">The following code example demonstrates how to use the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="afb21-508">Lo script client nella pagina sottoposta a rendering imposta il `title` attributo di un `<span>` elemento.</span><span class="sxs-lookup"><span data-stu-id="afb21-508">The client script in the rendered page sets the `title` attribute of a `<span>` element.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/cs/clientscriptexpando.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/vb/clientscriptexpando.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForEventValidation">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="afb21-509">Registers an event reference for validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-509">Registers an event reference for validation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : string -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation uniqueId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="afb21-510">A unique ID representing the client control generating the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-510">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-511">Registers an event reference for validation with a unique control ID representing the client control generating the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-511">Registers an event reference for validation with a unique control ID representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-512">Per altre informazioni ed esempi, vedere il <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-512">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-513">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metodo e il <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> metodo per registrare un callback per la convalida e come convalidare che il callback ha avuto origine dalla pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-513">The following example shows how to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/eventvalidation2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/eventvalidation2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (options As PostBackOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::Web::UI::PostBackOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : System.Web.UI.PostBackOptions -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="afb21-514">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-514">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-515">Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-515">Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-516">Per altre informazioni ed esempi, vedere il <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-516">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.ValidateEvent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : string * string -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation (uniqueId, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="afb21-517">A unique ID representing the client control generating the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-517">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="afb21-518">Event arguments passed with the client event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-518">Event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-519">Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-519">Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="afb21-520">Il codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metodo e il <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> metodo per registrare un callback per la convalida e per convalidare che il callback ha avuto origine dalla pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-520">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="afb21-521">Per migliorare la convalida illustrata nell'esempio, è possibile modificare la convalida `argument` parametro per contenere le informazioni specifiche dell'utente, ad esempio un'identità o un ruolo</span><span class="sxs-lookup"><span data-stu-id="afb21-521">To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 <span data-ttu-id="afb21-522">Esempio di codice seguente illustra l'uso di <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metodo per registrare un callback per la convalida.</span><span class="sxs-lookup"><span data-stu-id="afb21-522">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method to register a callback for validation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="afb21-523">The method is called prior to the <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-523">The method is called prior to the <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterHiddenField : string * string -&gt; unit" Usage="clientScriptManager.RegisterHiddenField (hiddenFieldName, hiddenFieldInitialValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName">
          <span data-ttu-id="afb21-524">The name of the hidden field to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-524">The name of the hidden field to register.</span>
          </span>
        </param>
        <param name="hiddenFieldInitialValue">
          <span data-ttu-id="afb21-525">The initial value of the field to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-525">The initial value of the field to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-526">Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-526">Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-527">Il <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> metodo crea un nascosto `<input>` elemento nella pagina HTML di cui è stato eseguito rendering.</span><span class="sxs-lookup"><span data-stu-id="afb21-527">The <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method creates a hidden `<input>` element on the rendered HTML page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-528">Esempio di codice seguente viene illustrato l'utilizzo dei <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> e <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="afb21-528">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="afb21-529">L'esempio registra una matrice e un valore nascosto e definisce la `OnClick` eventi di un `<input>` pulsante per la quale calcolare la somma dei due valori della matrice e del valore nascosto.</span><span class="sxs-lookup"><span data-stu-id="afb21-529">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-530">
            <paramref name="hiddenFieldName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-530">
              <paramref name="hiddenFieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.WebControls.HiddenField" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterOnSubmitStatement : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterOnSubmitStatement (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="afb21-531">The type of the OnSubmit statement to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-531">The type of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="afb21-532">The key of the OnSubmit statement to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-532">The key of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="afb21-533">The script literal of the OnSubmit statement to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-533">The script literal of the OnSubmit statement to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-534">Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-534">Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
          <span data-ttu-id="afb21-535">The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-535">The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-536">Un'istruzione OnSubmit è identificata in modo univoco la chiave e il relativo tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-536">An OnSubmit statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="afb21-537">Istruzioni con la stessa chiave e tipo vengono considerate duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-537">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="afb21-538">Un'unica istruzione con un tipo specificato e una coppia di chiavi può essere registrata con la pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-538">Only one statement with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="afb21-539">Tentativo di registrare un'istruzione che è già registrata non creerà un duplicato dell'istruzione.</span><span class="sxs-lookup"><span data-stu-id="afb21-539">Attempting to register a statement that is already registered will not create a duplicate of the statement.</span></span>  
  
 <span data-ttu-id="afb21-540">Chiamare il <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> metodo per determinare se un'istruzione OnSubmit è già registrata con una coppia di chiave e il tipo specificata ed evitare inutilmente il tentativo di aggiungere lo script.</span><span class="sxs-lookup"><span data-stu-id="afb21-540">Call the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method to determine whether an OnSubmit statement is already registered with a given key and type pair and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="afb21-541">Il `script` parametro il <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metodo può contenere più comandi script, purché siano correttamente delimitati da punto e virgola (;).</span><span class="sxs-lookup"><span data-stu-id="afb21-541">The `script` parameter of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands as long as they are properly delimited with a semicolon (;).</span></span>  
  
 <span data-ttu-id="afb21-542">Il <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> aggiunge uno script che viene eseguito prima che la pagina viene inviata e ti offre la possibilità di annullare l'invio.</span><span class="sxs-lookup"><span data-stu-id="afb21-542">The <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> adds a script that is executed before the page is submitted and gives you an opportunity to cancel the submission.</span></span>  
  
 <span data-ttu-id="afb21-543">Per altre informazioni sui moduli HTML e il `OnSubmit` dell'attributo, vedere la [sito Web World Wide Web Consortium (W3C)](http://go.microsoft.com/fwlink/?linkid=37125).</span><span class="sxs-lookup"><span data-stu-id="afb21-543">For more information on HTML forms and the `OnSubmit` attribute, see the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-544">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-544">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-545">
            <paramref name="type" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-545">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="afb21-546">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-546">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterStartupScript : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterStartupScript (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="afb21-547">The type of the startup script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-547">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="afb21-548">The key of the startup script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-548">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="afb21-549">The startup script literal to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-549">The startup script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-550">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-550">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-551">Uno script client è identificato dalla relativa chiave e il relativo tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-551">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="afb21-552">Gli script con la stessa chiave e tipo vengono considerati duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-552">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="afb21-553">Un solo script con un tipo specificato e una coppia di chiavi può essere registrato con la pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-553">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="afb21-554">Tentativo di registrare uno script che è già registrato non crea un duplicato di script.</span><span class="sxs-lookup"><span data-stu-id="afb21-554">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="afb21-555">Chiamare il <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metodo per determinare se uno script di avvio con una coppia di chiave e il tipo specificato è già registrato ed evitare inutilmente il tentativo di aggiungere lo script.</span><span class="sxs-lookup"><span data-stu-id="afb21-555">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="afb21-556">In questo overload del metodo il <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metodo, è necessario assicurarsi che lo script fornito nel `script` parametro viene eseguito il wrapping con un `<script>` blocco di elementi.</span><span class="sxs-lookup"><span data-stu-id="afb21-556">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you must make sure that the script provided in the `script` parameter is wrapped with a `<script>` element block.</span></span>  
  
 <span data-ttu-id="afb21-557">Il blocco di script aggiunto per il <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metodo viene eseguito al termine del caricamento della pagina ma prima della pagina <xref:System.Web.UI.Control.OnLoad%2A> viene generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="afb21-557">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="afb21-558">I blocchi di script non vengono necessariamente restituiti nell'ordine in che cui sono registrati.</span><span class="sxs-lookup"><span data-stu-id="afb21-558">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="afb21-559">Se l'ordine dei blocchi di script è importante, utilizzare un <xref:System.Text.StringBuilder> dell'oggetto per raggruppare gli script in una singola stringa e li registra quindi tutto in un blocco di script client singolo.</span><span class="sxs-lookup"><span data-stu-id="afb21-559">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-560">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-560">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="afb21-561">Si noti che sono inclusi l'inizio e alla chiusura di tag di script all'interno di `script` parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-561">Note that the beginning and closing script tags are included within the `script` parameter.</span></span> <span data-ttu-id="afb21-562">Affinché lo script di tag aggiunti in base all'impostazione parametro aggiuntivo, vedere il <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-562">To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="member this.RegisterStartupScript : Type * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterStartupScript (type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="afb21-563">The type of the startup script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-563">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="afb21-564">The key of the startup script to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-564">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="afb21-565">The startup script literal to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-565">The startup script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="afb21-566">A Boolean value indicating whether to add script tags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-566">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-567">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-567">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afb21-568">Uno script di avvio viene identificato dalla relativa chiave e il relativo tipo.</span><span class="sxs-lookup"><span data-stu-id="afb21-568">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="afb21-569">Gli script con la stessa chiave e tipo vengono considerati duplicati.</span><span class="sxs-lookup"><span data-stu-id="afb21-569">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="afb21-570">Un solo script con un tipo specificato e una coppia di chiavi può essere registrato con la pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-570">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="afb21-571">Tentativo di registrare uno script che è già registrato non crea un duplicato di script.</span><span class="sxs-lookup"><span data-stu-id="afb21-571">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="afb21-572">Chiamare il <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metodo per determinare se uno script di avvio con una coppia di chiave e il tipo specificato è già registrato ed evitare inutilmente il tentativo di aggiungere lo script.</span><span class="sxs-lookup"><span data-stu-id="afb21-572">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="afb21-573">In questo overload del <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metodo, è possibile indicare se lo script fornito nel `script` parametro viene eseguito il wrapping con un `<script>` blocco di elementi usando il `addScriptTags` parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-573">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="afb21-574">L'impostazione `addScriptTags` a `true` indica che il tag di script verranno aggiunto automaticamente.</span><span class="sxs-lookup"><span data-stu-id="afb21-574">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="afb21-575">Il blocco di script aggiunto per il <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metodo viene eseguito al termine del caricamento della pagina ma prima della pagina <xref:System.Web.UI.Control.OnLoad%2A> viene generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="afb21-575">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="afb21-576">I blocchi di script non vengono necessariamente restituiti nell'ordine in che cui sono registrati.</span><span class="sxs-lookup"><span data-stu-id="afb21-576">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="afb21-577">Se l'ordine dei blocchi di script è importante, utilizzare un <xref:System.Text.StringBuilder> dell'oggetto per raggruppare gli script in una singola stringa e li registra quindi tutto in un blocco di script client singolo.</span><span class="sxs-lookup"><span data-stu-id="afb21-577">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afb21-578">Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="afb21-578">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="afb21-579">Si noti che il `addScriptTags` parametro è impostato su `false` in modo che sono inclusi con l'inizio e la chiusura di tag di script di `script` parametro.</span><span class="sxs-lookup"><span data-stu-id="afb21-579">Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="afb21-580">
            <paramref name="type" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-580">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
        <altmember cref="F:System.Web.UI.HtmlTextWriterTag.Script" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="afb21-581">Validates a client event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-581">Validates a client event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId);" />
      <MemberSignature Language="F#" Value="member this.ValidateEvent : string -&gt; unit" Usage="clientScriptManager.ValidateEvent uniqueId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="afb21-582">A unique ID representing the client control generating the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-582">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-583">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-583">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.ValidateEvent : string * string -&gt; unit" Usage="clientScriptManager.ValidateEvent (uniqueId, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="afb21-584">A unique ID representing the client control generating the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-584">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="afb21-585">The event arguments passed with the client event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-585">The event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="afb21-586">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-586">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="afb21-587">Il codice seguente viene illustrato come utilizzare il <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metodo e il <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> metodo per registrare un callback per la convalida e per convalidare che il callback ha avuto origine dalla pagina.</span><span class="sxs-lookup"><span data-stu-id="afb21-587">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="afb21-588">Per migliorare la convalida illustrata qui, è possibile modificare la convalida `argument` parametro per contenere le informazioni specifiche dell'utente, ad esempio un'identità o un ruolo</span><span class="sxs-lookup"><span data-stu-id="afb21-588">To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="afb21-589">
            <paramref name="uniqueId" /> is <see langword="null" /> or an empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="afb21-589">
              <paramref name="uniqueId" /> is <see langword="null" /> or an empty string ("").</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>