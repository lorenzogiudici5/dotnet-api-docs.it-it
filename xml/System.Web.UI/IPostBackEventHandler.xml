<Type Name="IPostBackEventHandler" FullName="System.Web.UI.IPostBackEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="74895afd3d877bfd2607636a11a815f62a72f90e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30605255" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce il metodo che i controlli server ASP.NET devono implementare per gestire gli eventi di postback.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per creare un controllo server che acquisisce le informazioni sull'invio di form dal browser, è necessario implementare questa interfaccia. Per ulteriori informazioni su come utilizzare questa interfaccia, vedere [Server di gestione di eventi in ASP.NET Web Form Pages](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 Esempio di codice seguente definisce un controllo server pulsante personalizzato che causa il postback, acquisisce l'evento di postback utilizzando il <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> (metodo) e genera un `Click` evento sul server.  
  
 [!code-csharp[Classic IPostBackEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="public void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Oggetto <see cref="T:System.String" /> che rappresenta un argomento di evento facoltativo da passare al gestore eventi.</param>
        <summary>Quando viene implementato da una classe, consente a un controllo server di elaborare un evento generato quando si invia un form al server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La pagina passa il valore della `eventArgument` parametro per il `RaisePostBackEvent` metodo del controllo che implementa il <xref:System.Web.UI.IPostBackEventHandler> interfaccia. Il controllo esegue anche il rendering dell'elemento HTML che determina il postback si verificano. Se il controllo esegue il rendering dello script lato client per il postback, l'argomento dello script viene passato il `eventArgument` parametro. Se il postback è causato da una semplice operazione, di invio di `eventArgument` parametro `null`.  
  
 Questo metodo fornisce la funzionalità per molti eventi implementati dai controlli server HTML e Web.  
  
   
  
## Examples  
 Esempio di codice seguente definisce un controllo server pulsante personalizzato che causa il postback, acquisisce l'evento di postback utilizzando il <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> (metodo) e genera un `Click` evento sul server.  
  
 [!code-csharp[Classic IPostBackEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackEventHandler Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>