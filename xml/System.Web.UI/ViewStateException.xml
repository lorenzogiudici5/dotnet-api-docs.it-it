<Type Name="ViewStateException" FullName="System.Web.UI.ViewStateException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a96557c46b0c067684a9680f548bb1037bc62c76" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30609465" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ViewStateException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ViewStateException extends System.Exception implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ViewStateException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ViewStateException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewStateException sealed : Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta l'eccezione generata quando lo stato di visualizzazione non può essere caricato o convalidato. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si verifica un'eccezione quando la pagina Carica le informazioni sullo stato di visualizzazione, la pagina Crea un <xref:System.Web.UI.ViewStateException> dell'oggetto e la passa come eccezione interna all'interno di un <xref:System.Web.HttpException> eccezione. Il <xref:System.Web.HttpException> eccezione viene generata nuovamente per essere gestita dall'applicazione.  
  
 Il <xref:System.Web.UI.ViewStateException> classe memorizza le informazioni sull'eccezione nel <xref:System.Web.UI.ViewStateException.Message%2A> proprietà. Se la richiesta è autorizzato ad accedere il <xref:System.Web.HttpRequest.ServerVariables%2A> proprietà, quindi il <xref:System.Web.UI.ViewStateException.Message%2A> proprietà contiene i valori restituiti dal <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, e <xref:System.Web.UI.ViewStateException.Path%2A> proprietà. in caso contrario, il <xref:System.Web.UI.ViewStateException.Message%2A> proprietà contiene un messaggio di errore generico dello stato di visualizzazione.  
  
 Un'eccezione dello stato di visualizzazione può essere il risultato di un errore di convalida codici MAC (Message Authentication). Se l'attributo `enableViewStateMac` è impostato su `true`, informazioni sullo stato di visualizzazione viene codificate con un identificatore MAC. Quando le informazioni sullo stato di visualizzazione viene inviate al server, la pagina verifica la codifica per assicurarsi che non è stata modificata dall'utente. Se la pagina non è possibile convalidare la codifica MAC le informazioni sullo stato di visualizzazione, verrà generata una <xref:System.Web.HttpException> eccezione con il <xref:System.Web.UI.ViewStateException> oggetto come eccezione interna.  
  
 Per la convalida MAC abbia esito positivo, le informazioni sullo stato di visualizzazione devono eseguire l'hashing con la stessa chiave quando vengono inviata e ricevute. All'interno di una Web farm, è necessario specificare la chiave del computer in ogni server a una chiave comune.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come implementare un metodo che deserializza una stringa con codifica base64 e restituisce un <xref:System.Collections.ICollection> raccolta di impostazioni delle proprietà. Il <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> metodo può generare un <xref:System.Web.HttpException> eccezione che contiene un <xref:System.Web.UI.ViewStateException> oggetto come eccezione interna. Nell'esempio viene illustrato come è possibile intercettare un <xref:System.Web.HttpException> eccezione e recuperare le proprietà di <xref:System.Web.UI.ViewStateException> oggetto.  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.MachineKeySection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ViewStateException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ViewStateException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ViewStateException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.ViewStateException" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeySection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
        <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.ViewStateException" /> con dati serializzati.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.IsConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConnected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il client è attualmente connesso al server.</summary>
        <value>
          <see langword="true" /> se il client è connesso al server; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà restituisce lo stesso valore di una chiamata di <xref:System.Web.HttpResponse.IsClientConnected%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come implementare un metodo che deserializza una stringa con codifica base64 e restituisce un <xref:System.Collections.ICollection> raccolta di impostazioni delle proprietà. Il <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> metodo può generare un <xref:System.Web.HttpException> eccezione che contiene un <xref:System.Web.UI.ViewStateException> oggetto come eccezione interna. Nell'esempio viene illustrato come è possibile intercettare un <xref:System.Web.HttpException> eccezione e recuperare le proprietà di <xref:System.Web.UI.ViewStateException> oggetto.  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene informazioni di debug sulla richiesta HTTP che ha generato un'eccezione dello stato di visualizzazione.</summary>
        <value>Oggetto <see cref="T:System.String" /> contenente il messaggio formattato con le informazioni relative all'eccezione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la richiesta non dispone dell'autorizzazione per accedere alle variabili del server, questa proprietà restituisce un messaggio di errore generico dello stato di visualizzazione. Se la richiesta dispone dell'autorizzazione per accedere alle variabili server, il <xref:System.Web.UI.ViewStateException.Message%2A> proprietà contiene i valori restituiti dal <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, e <xref:System.Web.UI.ViewStateException.Path%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il percorso della richiesta HTTP che ha generato un'eccezione dello stato di visualizzazione.</summary>
        <value>Oggetto <see cref="T:System.String" /> contenente il percorso della richiesta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà restituisce lo stesso valore di `PATH_INFO` variabile il <xref:System.Web.HttpRequest.ServerVariables%2A> proprietà. Restituisce la parte del percorso dopo il nome host. Ad esempio, nell'URL http://www.contoso.com/virdir/page.html, <xref:System.Web.UI.ViewStateException.Path%2A> restituisce /virdir/page.HTML.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come implementare un metodo che deserializza una stringa con codifica base64 e restituisce un <xref:System.Collections.ICollection> raccolta di impostazioni delle proprietà. Il <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> metodo può generare un <xref:System.Web.HttpException> eccezione che contiene un <xref:System.Web.UI.ViewStateException> oggetto come eccezione interna. Nell'esempio viene illustrato come è possibile intercettare un <xref:System.Web.HttpException> eccezione e recuperare le proprietà di <xref:System.Web.UI.ViewStateException> oggetto.  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistedState">
      <MemberSignature Language="C#" Value="public string PersistedState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PersistedState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.PersistedState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistedState As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PersistedState { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il contenuto della stringa dello stato di visualizzazione che, dopo la lettura, ha generato l'eccezione dello stato di visualizzazione.</summary>
        <value>Oggetto <see cref="T:System.String" /> contenente i valori dello stato di visualizzazione che hanno generato l'eccezione dello stato di visualizzazione.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Referer">
      <MemberSignature Language="C#" Value="public string Referer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Referer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Referer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Referer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Referer { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'URL della pagina collegata alla pagina in cui si è verificata l'eccezione dello stato di visualizzazione.</summary>
        <value>Oggetto <see cref="T:System.String" /> contenente la provenienza HTTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà restituisce lo stesso valore di `HTTP_REFERER` variabile il <xref:System.Web.HttpRequest.ServerVariables%2A> proprietà. Il valore è una stringa vuota ("") se nessuna richiesta precedente collegata alla pagina.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come implementare un metodo che deserializza una stringa con codifica base64 e restituisce un <xref:System.Collections.ICollection> raccolta di impostazioni delle proprietà. Il <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> metodo può generare un <xref:System.Web.HttpException> eccezione che contiene un <xref:System.Web.UI.ViewStateException> oggetto come eccezione interna. Nell'esempio viene illustrato come è possibile intercettare un <xref:System.Web.HttpException> eccezione e recuperare le proprietà di <xref:System.Web.UI.ViewStateException> oggetto.  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public string RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RemoteAddress { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'indirizzo IP della richiesta HTTP che ha generato un'eccezione dello stato di visualizzazione.</summary>
        <value>Oggetto <see cref="T:System.String" /> contenente l'indirizzo IP remoto del client.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà restituisce lo stesso valore di `REMOTE_ADDR` variabile il <xref:System.Web.HttpRequest.ServerVariables%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemotePort">
      <MemberSignature Language="C#" Value="public string RemotePort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemotePort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.RemotePort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemotePort As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RemotePort { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di porta della richiesta HTTP che ha generato un'eccezione dello stato di visualizzazione.</summary>
        <value>Oggetto <see cref="T:System.String" /> contenente il numero di porta remota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà restituisce lo stesso valore di `REMOTE_PORT` variabile il <xref:System.Web.HttpRequest.ServerVariables%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo di browser della richiesta HTTP che ha generato un'eccezione dello stato di visualizzazione.</summary>
        <value>Oggetto <see cref="T:System.String" /> contenente l'agente utente, che corrisponde in genere al tipo di browser.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà restituisce lo stesso valore di `HTTP_USER_AGENT` variabile il <xref:System.Web.HttpRequest.ServerVariables%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come implementare un metodo che deserializza una stringa con codifica base64 e restituisce un <xref:System.Collections.ICollection> raccolta di impostazioni delle proprietà. Il <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> metodo può generare un <xref:System.Web.HttpException> eccezione che contiene un <xref:System.Web.UI.ViewStateException> oggetto come eccezione interna. Nell'esempio viene illustrato come è possibile intercettare un <xref:System.Web.HttpException> eccezione e recuperare le proprietà di <xref:System.Web.UI.ViewStateException> oggetto.  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>