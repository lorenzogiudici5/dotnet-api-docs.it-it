<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ViewStateException.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a96557c46b0c067684a9680f548bb1037bc62c76.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a96557c46b0c067684a9680f548bb1037bc62c76</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ViewStateException">
          <source>Represents the exception that is thrown when the view state cannot be loaded or validated.</source>
          <target state="translated">Rappresenta l'eccezione generata quando lo stato di visualizzazione non può essere caricato o convalidato.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ViewStateException">
          <source>This class cannot be inherited.</source>
          <target state="translated">Questa classe non può essere ereditata.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If an exception occurs when the page loads the view-state information, the page creates a <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object and passes it as an inner exception within an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception.</source>
          <target state="translated">Se si verifica un'eccezione quando la pagina Carica le informazioni sullo stato di visualizzazione, la pagina Crea un <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> dell'oggetto e la passa come eccezione interna all'interno di un <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> eccezione.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception is re-thrown to be handled by the application.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> eccezione viene generata nuovamente per essere gestita dall'applicazione.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> class stores information about the exception in the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> classe memorizza le informazioni sull'eccezione nel <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If the request has permission to access the <ph id="ph1">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property, then the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property contains the values returned from the <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, and <ph id="ph8">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> properties; otherwise, the <ph id="ph9">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property contains a generic view-state error message.</source>
          <target state="translated">Se la richiesta è autorizzato ad accedere il <ph id="ph1">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> proprietà, quindi il <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> proprietà contiene i valori restituiti dal <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, e <ph id="ph8">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> proprietà. in caso contrario, il <ph id="ph9">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> proprietà contiene un messaggio di errore generico dello stato di visualizzazione.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>A view-state exception can be the result of a Message Authentication Codes (MAC) validation error.</source>
          <target state="translated">Un'eccezione dello stato di visualizzazione può essere il risultato di un errore di convalida codici MAC (Message Authentication).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If the page attribute <ph id="ph1">`enableViewStateMac`</ph> is set to <ph id="ph2">`true`</ph>, view-state information is encoded with a MAC identifier.</source>
          <target state="translated">Se l'attributo <ph id="ph1">`enableViewStateMac`</ph> è impostato su <ph id="ph2">`true`</ph>, informazioni sullo stato di visualizzazione viene codificate con un identificatore MAC.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>When the view-state information is posted back to the server, the page verifies the encoding to ensure that it has not been altered by the user.</source>
          <target state="translated">Quando le informazioni sullo stato di visualizzazione viene inviate al server, la pagina verifica la codifica per assicurarsi che non è stata modificata dall'utente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If the page cannot validate the MAC encoding on the view-state information, it will throw an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception with the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated">Se la pagina non è possibile convalidare la codifica MAC le informazioni sullo stato di visualizzazione, verrà generata una <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> eccezione con il <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> oggetto come eccezione interna.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>For MAC validation to succeed, the view-state information must be hashed by the same key when it is sent and received.</source>
          <target state="translated">Per la convalida MAC abbia esito positivo, le informazioni sullo stato di visualizzazione devono eseguire l'hashing con la stessa chiave quando vengono inviata e ricevute.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>Within a Web farm, the machine key on each server should be set to a common key.</source>
          <target state="translated">All'interno di una Web farm, è necessario specificare la chiave del computer in ogni server a una chiave comune.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come implementare un metodo che deserializza una stringa con codifica base64 e restituisce un <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> raccolta di impostazioni delle proprietà.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> metodo può generare un <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> eccezione che contiene un <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> oggetto come eccezione interna.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">Nell'esempio viene illustrato come è possibile intercettare un <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> eccezione e recuperare le proprietà di <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">Oggetto che contiene i dati oggetto serializzati.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">Informazioni contestuali sull'origine o sulla destinazione.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> con dati serializzati.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>Gets a value indicating whether the client is currently connected to the server.</source>
          <target state="translated">Ottiene un valore che indica se il client è attualmente connesso al server.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client is still connected to the server; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il client è connesso al server; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>This property returns the same value as calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> property.</source>
          <target state="translated">Questa proprietà restituisce lo stesso valore di una chiamata di <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come implementare un metodo che deserializza una stringa con codifica base64 e restituisce un <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> raccolta di impostazioni delle proprietà.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> metodo può generare un <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> eccezione che contiene un <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> oggetto come eccezione interna.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">Nell'esempio viene illustrato come è possibile intercettare un <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> eccezione e recuperare le proprietà di <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.Message">
          <source>Gets debugging information about the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">Ottiene informazioni di debug sulla richiesta HTTP che ha generato un'eccezione dello stato di visualizzazione.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Message">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the formatted message with information about the exception.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> contenente il messaggio formattato con le informazioni relative all'eccezione.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Message">
          <source>If the request does not have permission to access the server variables, then this property returns a generic view-state error message.</source>
          <target state="translated">Se la richiesta non dispone dell'autorizzazione per accedere alle variabili del server, questa proprietà restituisce un messaggio di errore generico dello stato di visualizzazione.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Message">
          <source>If the request does have permission to access server variables, the <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property contains the values returned from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> properties.</source>
          <target state="translated">Se la richiesta dispone dell'autorizzazione per accedere alle variabili server, il <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> proprietà contiene i valori restituiti dal <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, e <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.Path">
          <source>Gets the path of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">Ottiene il percorso della richiesta HTTP che ha generato un'eccezione dello stato di visualizzazione.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the path from the request.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> contenente il percorso della richiesta.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>This property returns the same value as the <ph id="ph1">`PATH_INFO`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">Questa proprietà restituisce lo stesso valore di <ph id="ph1">`PATH_INFO`</ph> variabile il <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>It returns the portion of the path after the host name.</source>
          <target state="translated">Restituisce la parte del percorso dopo il nome host.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>For example, in the URL <ph id="ph1">http://www.contoso.com/virdir/page.html</ph>, <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> would return /virdir/page.html.</source>
          <target state="translated">Ad esempio, nell'URL <ph id="ph1">http://www.contoso.com/virdir/page.html</ph>, <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> restituisce /virdir/page.HTML.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come implementare un metodo che deserializza una stringa con codifica base64 e restituisce un <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> raccolta di impostazioni delle proprietà.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> metodo può generare un <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> eccezione che contiene un <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> oggetto come eccezione interna.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">Nell'esempio viene illustrato come è possibile intercettare un <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> eccezione e recuperare le proprietà di <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.PersistedState">
          <source>Gets the contents of the view-state string that, when read, caused the view-state exception.</source>
          <target state="translated">Ottiene il contenuto della stringa dello stato di visualizzazione che, dopo la lettura, ha generato l'eccezione dello stato di visualizzazione.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.PersistedState">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the view-state values that caused the view-state exception.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> contenente i valori dello stato di visualizzazione che hanno generato l'eccezione dello stato di visualizzazione.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>Gets the URL of the page that linked to the page where the view-state exception occurred.</source>
          <target state="translated">Ottiene l'URL della pagina collegata alla pagina in cui si è verificata l'eccezione dello stato di visualizzazione.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the HTTP referrer.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> contenente la provenienza HTTP.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>This property returns the same value as the <ph id="ph1">`HTTP_REFERER`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">Questa proprietà restituisce lo stesso valore di <ph id="ph1">`HTTP_REFERER`</ph> variabile il <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The value is an empty string ("") if no previous request linked to the page.</source>
          <target state="translated">Il valore è una stringa vuota ("") se nessuna richiesta precedente collegata alla pagina.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come implementare un metodo che deserializza una stringa con codifica base64 e restituisce un <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> raccolta di impostazioni delle proprietà.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> metodo può generare un <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> eccezione che contiene un <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> oggetto come eccezione interna.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">Nell'esempio viene illustrato come è possibile intercettare un <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> eccezione e recuperare le proprietà di <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.RemoteAddress">
          <source>Gets the IP address of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">Ottiene l'indirizzo IP della richiesta HTTP che ha generato un'eccezione dello stato di visualizzazione.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemoteAddress">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the remote IP address of the client.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> contenente l'indirizzo IP remoto del client.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemoteAddress">
          <source>This property returns the same value as the <ph id="ph1">`REMOTE_ADDR`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">Questa proprietà restituisce lo stesso valore di <ph id="ph1">`REMOTE_ADDR`</ph> variabile il <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.RemotePort">
          <source>Gets the port number of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">Ottiene il numero di porta della richiesta HTTP che ha generato un'eccezione dello stato di visualizzazione.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemotePort">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the remote port number.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> contenente il numero di porta remota.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemotePort">
          <source>This property returns the same value as the <ph id="ph1">`REMOTE_PORT`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">Questa proprietà restituisce lo stesso valore di <ph id="ph1">`REMOTE_PORT`</ph> variabile il <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>Gets the browser type of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">Ottiene il tipo di browser della richiesta HTTP che ha generato un'eccezione dello stato di visualizzazione.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the user agent, which is typically the browser type.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> contenente l'agente utente, che corrisponde in genere al tipo di browser.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>This property returns the same value as the <ph id="ph1">`HTTP_USER_AGENT`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">Questa proprietà restituisce lo stesso valore di <ph id="ph1">`HTTP_USER_AGENT`</ph> variabile il <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come implementare un metodo che deserializza una stringa con codifica base64 e restituisce un <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> raccolta di impostazioni delle proprietà.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> metodo può generare un <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> eccezione che contiene un <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> oggetto come eccezione interna.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">Nell'esempio viene illustrato come è possibile intercettare un <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> eccezione e recuperare le proprietà di <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> oggetto.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>