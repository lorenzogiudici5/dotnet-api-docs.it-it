<Type Name="IBindableTemplate" FullName="System.Web.UI.IBindableTemplate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4f1138bb1eff9cf9e7995a28c8cc960df5d3ac6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30608305" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBindableTemplate : System.Web.UI.ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindableTemplate implements class System.Web.UI.ITemplate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IBindableTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindableTemplate&#xA;Implements ITemplate" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindableTemplate : System::Web::UI::ITemplate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITemplate</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Consente ai controlli con associazione a dati ASP.NET, ad esempio <see cref="T:System.Web.UI.WebControls.DetailsView" /> e <see cref="T:System.Web.UI.WebControls.FormView" />, di stabilire un'associazione automatica a un controllo origine dati ASP.NET all'interno di sezioni di contenuto basato su modelli.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.IBindableTemplate> interfaccia fornisce un modo per i controlli con associazione a dati ASP.NET, ad esempio <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.GridView>, e <xref:System.Web.UI.WebControls.FormView>, l'associazione ai dati forniti da un controllo origine dati ASP.NET, ad esempio <xref:System.Web.UI.WebControls.ObjectDataSource> o <xref:System.Web.UI.WebControls.SqlDataSource>, quando il controllo con associazione a dati include contenuto basato su modelli.  
  
> [!NOTE]
>  Gli sviluppatori di pagine non implementano il <xref:System.Web.UI.IBindableTemplate> interfaccia. Gli sviluppatori di creare controlli associati a dati personalizzati potrebbero modificare <xref:System.Web.UI.IBindableTemplate> nelle implementazioni di oggetti di <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> e <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> metodi, ma non possono implementare i propri <xref:System.Web.UI.IBindableTemplate> oggetti.  
  
 Controlli con associazione a dati, ad esempio <xref:System.Web.UI.WebControls.GridView> in genere sono a conoscenza delle strutture di controllo, figlio e può pertanto associare valori, estrarre valori da essi e passare questi valori tra il controllo con associazione a dati e un controllo origine dati ogni volta che si verifica l'associazione dati . Tuttavia, quando uno sviluppatore di pagina definisce il contenuto basato su modelli per un controllo con associazione a dati, i controlli figlio all'interno del modello non sono visibili al controllo con associazione a dati padre: l'elemento padre può rendere l'elemento figlio di contenuto (perché i controlli in modo efficace il rendering di se stessi), ma non è possibile estrarre i valori dei controlli figlio da passare all'operazione delete, insert o update del controllo origine dati associata. In scenari di associazione dati, contenuto basato su modelli è opaco a un controllo con associazione a dati padre. Il `Bind` sintassi rende possibile per il controllo con associazione a dati per estrarre i valori da un controllo con associazione a dati all'interno di un <xref:System.Web.UI.IBindableTemplate> istanza.  
  
 L'associazione di dati può essere unidirezionale o bidirezionale. (Le istruzioni di associazione vengono definite il <xref:System.ComponentModel.BindingDirection> enumerazione.) Associazione dati unidirezionale viene eseguita alcuna associazione di dati in una direzione in uscita, dal controllo origine dati al controllo con associazione a dati; ad esempio, qualsiasi scenario di lettura dei dati implica l'associazione unidirezionale. Per l'associazione dati unidirezionale, è possibile utilizzare la sintassi di associazione dati unidirezionale (`<%# Eval("fieldname") %>`) all'interno del contenuto basato su modelli e non è necessario utilizzare la sintassi ASP.NET data binding bidirezionale. Associazione dati bidirezionale viene data binding nella direzione in ingresso, il controllo con associazione a dati per il controllo origine dati. Automatica di modifica, inserimento ed eliminazione utilizzando ASP.NET con associazione a dati e i controlli origine dati sono gli scenari di data binding bidirezionale. Questi scenari utilizzano espressioni di associazione dati bidirezionale (`<%# Bind("fieldname") %>`). Il <xref:System.Web.UI.IBindableTemplate> interfaccia e l'infrastruttura ASP.NET supportano l'associazione dati dichiarativa, bidirezionale automatica tra controlli origine dati ASP.NET e contenuto basato su modelli. Per ulteriori informazioni sulle espressioni di associazione a dati ASP.NET e sulla sintassi, vedere [Binding to Databases](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) e [Cenni preliminari sulle espressioni di associazione dati](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Il contenuto basato su modelli per i controlli con associazione a dati è spesso definito in modo dichiarativo. Nella tabella seguente descrive i processi più comunemente utilizzati per associare dati a controlli con associazione a dati.  
  
|Controllo con associazione a dati|Process|  
|-------------------------|-------------|  
|<xref:System.Web.UI.WebControls.DetailsView>|Il controllo associato a dati è associato a dati mediante il `DataSourceID` proprietà del controllo origine dati e il contenuto basato su modelli è definita in un <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> o <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> proprietà.|  
|<xref:System.Web.UI.WebControls.GridView>|Il controllo associato a dati è associato a dati mediante il `DataSourceID` proprietà del controllo origine dati e il contenuto basato su modelli è definita in un <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> o <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> proprietà. Il <xref:System.Web.UI.WebControls.GridView> controllo non supporta un'operazione di inserimento.|  
|<xref:System.Web.UI.WebControls.FormView>|Il controllo associato a dati è associato a dati mediante il `DataSourceID` proprietà e il contenuto basato su modelli è definito un <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>, o <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> , proprietà o in un <xref:System.Web.UI.WebControls.TemplateField> oggetto.|  
  
 Il <xref:System.Web.UI.WebControls.DataList> e <xref:System.Web.UI.WebControls.Repeater> controlli non supportano scenari di associazione dati bidirezionale automatica.  
  
 ASP.NET crea in modo implicito un <xref:System.Web.UI.IBindableTemplate> dell'oggetto quando viene analizzato il contenuto basato su modelli che associa un controllo origine dati ASP.NET all'interno del modello. In particolare, il parser ASP.NET crea un'istanza di <xref:System.Web.UI.CompiledBindableTemplateBuilder> classe durante l'analisi di contenuto basato su modelli che utilizza la sintassi di associazione a dati ASP.NET e contiene i controlli server Web ASP.NET che supportano l'associazione dati. Questi controlli server ASP.NET vengono contrassegnati per la <xref:System.ComponentModel.BindableAttribute> attributo.  
  
 Il <xref:System.Web.UI.IBindableTemplate> interfaccia definisce un metodo, <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>. Questo metodo è definito per l'associazione dati bidirezionale, in modo che un controllo con associazione a dati automaticamente può estrarre coppie nome/valore dal contenuto basato su modelli e passare le coppie di un controllo origine dati in fase di esecuzione. Per l'associazione dati automatica abbia esito positivo, i nomi dei campi estratti dal contenuto basato su modelli per il <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> metodo deve corrispondere i nomi di parametro in un controllo origine dati associata. Chiamata agli sviluppatori di controllare il <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> metodo in modo esplicito solo all'interno delle relative implementazioni di <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> o un altro metodo simile di un controllo con associazione a dati personalizzato.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come un <xref:System.Web.UI.WebControls.FormView> controllo in modo dichiarativo può definire il contenuto basato su modelli, associare ai dati forniti da un <xref:System.Web.UI.WebControls.SqlDataSource> , controllare e visualizzare e modificare i record esistenti. Il parser ASP.NET analizza il contenuto basato su modelli e crea un <xref:System.Web.UI.IBindableTemplate> oggetto in fase di esecuzione che è in grado di associare i valori di <xref:System.Web.UI.WebControls.SqlDataSource> controllo alle aree di associazione di dati definite nel modello sia sintassi di associazione a dati ASP.NET unidirezionale (`<%# Eval("fieldname") %>`) e la sintassi di data binding bidirezionale (`<%# Bind("fieldname") %>`).  
  
> [!IMPORTANT]
>  Questo controllo include una casella di testo che accetta l'input dell'utente, ovvero una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ITemplate" />
    <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
    <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
    <altmember cref="T:System.ComponentModel.BindableAttribute" />
    <altmember cref="T:System.ComponentModel.BindingDirection" />
  </Docs>
  <Members>
    <Member MemberName="ExtractValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary ExtractValues (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.IOrderedDictionary ExtractValues(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExtractValues (container As Control) As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::IOrderedDictionary ^ ExtractValues(System::Web::UI::Control ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">Controllo <see cref="T:System.Web.UI.Control" /> dal quale devono essere estratte le coppie nome/valore, che vengono passate dal controllo con associazione a dati a un controllo origine dati associato in scenari con associazione dati bidirezionale.</param>
        <summary>Quando viene implementato da una classe, recupera un set di coppie nome/valore per i valori associati tramite la sintassi di associazione dati ASP.NET bidirezionale all'interno del contenuto basato su modelli.</summary>
        <returns>Dizionario <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> di coppie nome/valore. Il nome rappresenta il nome di un controllo all'interno del contenuto basato su modelli, mentre il valore corrisponde al valore corrente di una proprietà associato tramite la sintassi di associazione dati ASP.NET bidirezionale.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Un <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> (metodo) deve essere conforme alle regole seguenti:  
  
-   Se è presente più di un'associazione per un determinato campo, viene utilizzato l'ultimo binding rilevato.  
  
-   Per fare riferimento all'identificatore di un controllo nel <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> metodo, il controllo deve anche avere una proprietà ID definita dall'utente in fase di analisi. Se non esiste alcun ID, causando un errore di analisi.  
  
-   La sintassi di associazione a dati ASP.NET bidirezionale è valida solo in un <see cref="T:System.Web.UI.ITemplate" /> o <see cref="T:System.Web.UI.IBindableTemplate" /> proprietà di un controllo con associazione a dati.</para>
        </block>
        <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
        <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
      </Docs>
    </Member>
  </Members>
</Type>