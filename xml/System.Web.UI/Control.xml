<Type Name="Control" FullName="System.Web.UI.Control">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c5e204b7a88d9c05e9f718f5fcc598809702c48c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30610875" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Control : IDisposable, System.ComponentModel.IComponent, System.Web.UI.IControlBuilderAccessor, System.Web.UI.IControlDesignerAccessor, System.Web.UI.IDataBindingsAccessor, System.Web.UI.IExpressionsAccessor, System.Web.UI.IParserAccessor, System.Web.UI.IUrlResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Control extends System.Object implements class System.ComponentModel.IComponent, class System.IDisposable, class System.Web.UI.IControlBuilderAccessor, class System.Web.UI.IControlDesignerAccessor, class System.Web.UI.IDataBindingsAccessor, class System.Web.UI.IExpressionsAccessor, class System.Web.UI.IParserAccessor, class System.Web.UI.IUrlResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Control" />
  <TypeSignature Language="VB.NET" Value="Public Class Control&#xA;Implements IComponent, IControlBuilderAccessor, IControlDesignerAccessor, IDataBindingsAccessor, IDisposable, IExpressionsAccessor, IParserAccessor, IUrlResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public ref class Control : IDisposable, System::ComponentModel::IComponent, System::Web::UI::IControlBuilderAccessor, System::Web::UI::IControlDesignerAccessor, System::Web::UI::IDataBindingsAccessor, System::Web::UI::IExpressionsAccessor, System::Web::UI::IParserAccessor, System::Web::UI::IUrlResolutionService" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IControlBuilderAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IControlDesignerAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataBindingsAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IExpressionsAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IParserAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IUrlResolutionService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ID")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.ControlCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("Code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("System.Web.UI.Design.WebControlToolboxItem, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definisce proprietà, metodi ed eventi condivisi da tutti i controlli server ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa è la classe principale che è possibile derivare da durante lo sviluppo di controlli server ASP.NET personalizzati. <xref:System.Web.UI.Control> non dispone di alcuna funzionalità specifica dell'interfaccia utente. Se si modifica un controllo che non dispone di un'interfaccia utente, o combina altri controlli che utilizzano la propria interfaccia utente, derivare da <xref:System.Web.UI.Control>. Se si modifica un controllo che dispone di un'interfaccia utente, derivare da <xref:System.Web.UI.WebControls.WebControl> o qualsiasi controllo il <xref:System.Web.UI.WebControls> punto dello spazio dei nomi che fornisce un avvio appropriato per il controllo personalizzato.  
  
 La <xref:System.Web.UI.Control> classe è la classe base per tutti i controlli server ASP.NET, inclusi i controlli personalizzati, i controlli utente e le pagine. Le pagine ASP.NET sono istanze del <xref:System.Web.UI.Page> (classe), che eredita dalla <xref:System.Web.UI.Control> classe e che gestisce le richieste per i file con estensione aspx.  
  
 La <xref:System.Web.UI.Control> classe direttamente o indirettamente utilizzabile come parte dell'interfaccia utente per l'applicazione Web e come tale deve essere analizzata le per verificare che le procedure consigliate per scrivere codice protetto e proteggere le applicazioni vengono seguiti.  
  
 Per informazioni generali su questi argomenti, vedere [Panoramica di Web applicazione minacce alla sicurezza](http://msdn.microsoft.com/library/88d61678-f84e-4622-ae80-53128821855a), [NIB: procedure consigliate per criteri di sicurezza](http://msdn.microsoft.com/library/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05), e [concetti principali sulla sicurezza](~/docs/standard/security/key-security-concepts.md). Per ulteriori informazioni, vedere [protezione dei controlli Standard](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [come: messaggi di errore visualizzato](http://msdn.microsoft.com/library/6f70ac33-6e11-4e98-ab7d-bae9c0e7eefa), [procedura: proteggere dagli attacchi tramite Script in un'applicazione Web per l'applicazione HTML Codifica stringhe](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), e [Introduzione ai controlli di convalida](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un controllo personalizzato di server da cui deriva il <xref:System.Web.UI.Control> classe. Il `InnerContent` classe esegue l'override di <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> metodo, viene verificato se la classe dispone di controlli figlio della pagina e determina se il primo membro figlio del controllo è un controllo literal. Se entrambe queste condizioni vengono soddisfatte, il metodo sottoposto a override scrive la stringa HTML \<H2 > del messaggio:, il contenuto del controllo e di chiusura \</H2 > tag per la pagina Web Form.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[Classic Control Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control Example/CS/source.cs#1)]
 [!code-vb[Classic Control Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.TemplateControl" />
    <altmember cref="T:System.Web.UI.LiteralControl" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.Control" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Adapter">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Adapters.ControlAdapter Adapter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Adapters.ControlAdapter Adapter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Adapter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Adapter As ControlAdapter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Adapters::ControlAdapter ^ Adapter { System::Web::UI::Adapters::ControlAdapter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Adapters.ControlAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'adattatore specifico del browser per il controllo.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> del controllo. Se il browser di destinazione non richiede un adattatore, restituisce <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le pagine Web ASP.NET sono utilizzabili in una vasta gamma di dispositivi e browser che possono richiedere informazioni dal Web. Il <xref:System.Web.UI.Control.Adapter%2A> proprietà restituisce il <xref:System.Web.UI.Adapters.ControlAdapter> oggetto che esegue il rendering del controllo nel dispositivo richiedente o una schermata del browser.  
  
 Per ulteriori informazioni sugli adapter, vedere [dell'architettura Overview of Adaptive Control Behavior](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="AddedControl">
      <MemberSignature Language="C#" Value="protected internal virtual void AddedControl (System.Web.UI.Control control, int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddedControl(class System.Web.UI.Control control, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void AddedControl(System::Web::UI::Control ^ control, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">Oggetto <see cref="T:System.Web.UI.Control" /> aggiunto.</param>
        <param name="index">Indice del controllo nella raccolta <see cref="P:System.Web.UI.Control.Controls" />.</param>
        <summary>Chiamato dopo che un controllo figlio viene aggiunto alla raccolta <see cref="P:System.Web.UI.Control.Controls" /> dell'oggetto <see cref="T:System.Web.UI.Control" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.AddedControl%2A> metodo viene chiamato immediatamente dopo l'aggiunta di un controllo per il <xref:System.Web.UI.Control.Controls%2A> insieme.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="control" /> è un controllo <see cref="T:System.Web.UI.WebControls.Substitution" />.</exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.Control.RemovedControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected virtual void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddParsedSubObject(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto <see cref="T:System.Object" /> che rappresenta l'elemento sottoposto ad analisi.</param>
        <summary>Notifica al controllo server che un elemento, XML o HTML, è stato analizzato e aggiunge l'elemento all'oggetto <see cref="T:System.Web.UI.ControlCollection" /> del controllo server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A meno che non venga sottoposto a override, questo metodo aggiunge automaticamente <xref:System.Web.UI.LiteralControl> oggetti per il controllo server <xref:System.Web.UI.ControlCollection> oggetto. Questa raccolta è accessibile tramite <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> proprietà.  
  
   
  
## Examples  
 L'esempio seguente è un controllo server personalizzato che utilizza il <xref:System.Web.UI.Control.AddParsedSubObject%2A> metodo per determinare se gli elementi dichiarati tra i tag di apertura e chiusura di questo controllo sono <xref:System.Web.UI.WebControls.TextBox> controlli server Web. In tal caso, vengono aggiunti a un <xref:System.Collections.ArrayList> oggetto `items`. Quando sottoposto a override <xref:System.Web.UI.Control.CreateChildControls%2A> metodo viene chiamato, viene scorso il <xref:System.Collections.ArrayList> e ogni oggetto viene aggiunto al <xref:System.Web.UI.ControlCollection> del controllo server personalizzato.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[Control_AddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_AddParsedSubObject/CS/control_addparsedsubobject.cs#1)]
 [!code-vb[Control_AddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_AddParsedSubObject/VB/control_addparsedsubobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="ApplyStyleSheetSkin">
      <MemberSignature Language="C#" Value="public virtual void ApplyStyleSheetSkin (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyStyleSheetSkin(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyStyleSheetSkin(System::Web::UI::Page ^ page);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">Classe <see cref="T:System.Web.UI.Page" /> contenente il controllo.</param>
        <summary>Applica al controllo le proprietà di stile definite nel foglio di stile della pagina.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.ApplyStyleSheetSkin%2A> metodo imposta le proprietà dello stile del controllo in base alle proprietà dell'interfaccia definita in una directory dei temi. L'interfaccia applicata è l'interfaccia predefinita per il controllo o di quella specificata nella <xref:System.Web.UI.Control.SkinID%2A> proprietà. Il <xref:System.Web.UI.Control.ApplyStyleSheetSkin%2A> metodo viene chiamato da ASP.NET per i controlli dichiarativi inseriti in una pagina. È necessario chiamare il <xref:System.Web.UI.Control.ApplyStyleSheetSkin%2A> metodo tutti i controlli creati a livello di codice in fase di esecuzione per lo stile interfacce del foglio da applicare al controllo. Le interfacce dei temi vengono applicate automaticamente. Per ulteriori informazioni sulla differenza tra i temi e fogli di stile CSS, vedere [ASP.NET temi e interfacce](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il foglio di stile è già applicato.</exception>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeTemplateSourceDirectory">
      <MemberSignature Language="C#" Value="public string AppRelativeTemplateSourceDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeTemplateSourceDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.AppRelativeTemplateSourceDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property AppRelativeTemplateSourceDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppRelativeTemplateSourceDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la directory virtuale relativa all'applicazione dell'oggetto <see cref="T:System.Web.UI.Page" /> o <see cref="T:System.Web.UI.UserControl" /> contenente questo controllo.</summary>
        <value>Directory virtuale relativa all'applicazione della pagina o del controllo utente che contiene il controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A> proprietà contiene il percorso relativo dell'applicazione per il controllo utente o di pagina che contiene il controllo corrente. Se, ad esempio, la pagina Web si trova in http://www.contoso.com/application/subdirectory, il <xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A> restituisce "~ / sottodirectory".  
  
 Per restituire il percorso virtuale ("application/subdirectory"), utilizzare il <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRenderTracing">
      <MemberSignature Language="C#" Value="protected void BeginRenderTracing (System.IO.TextWriter writer, object traceObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BeginRenderTracing(class System.IO.TextWriter writer, object traceObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BeginRenderTracing (writer As TextWriter, traceObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BeginRenderTracing(System::IO::TextWriter ^ writer, System::Object ^ traceObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="traceObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto che scrive i dati di traccia.</param>
        <param name="traceObject">Oggetto traccia.</param>
        <summary>Inizia la traccia in fase di progettazione dei dati di rendering.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control BindingContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control BindingContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.BindingContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ BindingContainer { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il controllo contenente l'associazione dati del controllo corrente.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.Control" /> contenente l'associazione dati del controllo corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.BindingContainer%2A> proprietà contiene un riferimento per il <xref:System.Web.UI.Control> oggetto che contiene le informazioni di associazione dati per il controllo corrente.  
  
 Il <xref:System.Web.UI.Control.BindingContainer%2A> proprietà è lo stesso come il <xref:System.Web.UI.Control.NamingContainer%2A> proprietà, tranne quando il controllo è parte di un modello. In tal caso, il <xref:System.Web.UI.Control.BindingContainer%2A> è impostata sul <xref:System.Web.UI.Control> che definisce il modello.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="BuildProfileTree">
      <MemberSignature Language="C#" Value="protected void BuildProfileTree (string parentId, bool calcViewState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BuildProfileTree(string parentId, bool calcViewState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BuildProfileTree (parentId As String, calcViewState As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BuildProfileTree(System::String ^ parentId, bool calcViewState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentId" Type="System.String" />
        <Parameter Name="calcViewState" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parentId">Identificatore dell'elemento padre del controllo.</param>
        <param name="calcViewState">Valore Boolean che indica se viene calcolata la dimensione dello stato di visualizzazione.</param>
        <summary>Raccoglie informazioni sul controllo server e le recapita alla proprietà <see cref="P:System.Web.UI.Page.Trace" /> in modo che vengano visualizzate quando è attivata la tracciatura per la pagina.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di raccogliere le informazioni necessarie sulla gerarchia dell'interfaccia utente della pagina e lo passa alla pagina [ &lt;traccia&gt; ](~/docs/framework/configure-apps/file-schema/trace-debug/trace-element.md) proprietà. Quando si abilita la traccia, per una pagina o per l'applicazione, queste informazioni vengono visualizzate nel `Control Tree` sezione dell'output di traccia. Output di traccia per una pagina viene aggiunto alla fine della pagina. mentre l'output di traccia per un'applicazione possono essere visualizzate dal Visualizzatore di traccia (file trace.axd) che viene archiviato nella directory radice dell'applicazione. Per ulteriori informazioni sulla traccia, vedere [Panoramica della traccia ASP.NET](http://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildControlsCreated">
      <MemberSignature Language="C#" Value="protected bool ChildControlsCreated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildControlsCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ChildControlsCreated" />
      <MemberSignature Language="VB.NET" Value="Protected Property ChildControlsCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ChildControlsCreated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se i controlli figli del controllo server sono stati creati.</summary>
        <value>
          <see langword="true" /> se i controlli figli sono stati creati; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato un override del <xref:System.Web.UI.Control.OnDataBinding%2A> metodo di un oggetto personalizzato <xref:System.Web.UI.WebControls.Repeater> controllo. Per garantire che i controlli figlio non vengono creati fino a quando non si verifica nuovamente, l'associazione dati di <xref:System.Web.UI.Control.ChildControlsCreated%2A> è impostata su `true` dopo il <xref:System.Web.UI.WebControls.RepeaterItem> gli oggetti vengono creati e aggiunti al controllo <xref:System.Web.UI.ControlCollection> oggetto.  
  
 [!code-csharp[TemplatedDataBoundControl3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl3/cs/customrepeater.cs#1)]
 [!code-vb[TemplatedDataBoundControl3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl3/vb/customrepeater.vb#1)]  
  
 Nell'esempio seguente viene illustrato come utilizzare il controllo repeater personalizzato in una pagina Web.  
  
 [!code-aspx-csharp[TemplatedDataBoundControl3#2](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl3/cs/default.aspx#2)]
 [!code-aspx-vb[TemplatedDataBoundControl3#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl3/vb/default.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="ClearCachedClientID">
      <MemberSignature Language="C#" Value="protected void ClearCachedClientID ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearCachedClientID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearCachedClientID" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearCachedClientID ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearCachedClientID();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imposta il valore memorizzato nella cache <see cref="P:System.Web.UI.Control.ClientID" /> su <see langword="null" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearChildControlState">
      <MemberSignature Language="C#" Value="protected void ClearChildControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearChildControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearChildControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearChildControlState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearChildControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Elimina le informazioni sullo stato del controllo per i controlli figlio del controllo server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.ClearChildControlState%2A> metodo viene utilizzato quando viene eseguito l'override delle informazioni sullo stato del controllo figlio scritte nello stato del controllo padre quando vengono creati nuovi controlli figlio, ad esempio quando i controlli figlio con associazione a dati in un controllo server associato a dati basati su modelli. La chiamata di <xref:System.Web.UI.Control.ClearChildControlState%2A> metodo ai controlli figlio vuoto prima di chiamare il <xref:System.Web.UI.Control.SaveControlState%2A> metodo riduce le dimensioni delle informazioni sullo stato del controllo che devono essere archiviate o trasmesso.  
  
 Durante la ricreazione di controlli figlio di un <xref:System.Web.UI.Control> oggetto, usare il <xref:System.Web.UI.Control.ClearChildControlState%2A> metodo per cancellare lo stato del controllo figlio in modo che non venga applicato ai nuovi controlli inavvertitamente.  
  
 Deselezionare le caselle di utilizzare lo stato di visualizzazione, lo stato del controllo figlio di <xref:System.Web.UI.Control.ClearChildState%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.ClearChildState" />
        <altmember cref="M:System.Web.UI.Control.ClearChildViewState" />
      </Docs>
    </Member>
    <Member MemberName="ClearChildState">
      <MemberSignature Language="C#" Value="protected void ClearChildState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearChildState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearChildState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearChildState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearChildState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Elimina le informazioni sullo stato di visualizzazione e sullo stato del controllo per tutti i controlli figlio del controllo server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.ClearChildState%2A> metodo cancella tutte le informazioni sullo stato di visualizzazione e dello stato di controllo per i controlli figlio. È equivalente alla chiamata sia la <xref:System.Web.UI.Control.ClearChildViewState%2A> (metodo) e <xref:System.Web.UI.Control.ClearChildControlState%2A> metodo.  
  
 Durante la ricreazione di controlli figlio di un <xref:System.Web.UI.Control> oggetto, usare il <xref:System.Web.UI.Control.ClearChildState%2A> metodo per cancellare lo stato di figlio in modo che non venga applicato ai nuovi controlli inavvertitamente.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come eseguire l'override di <xref:System.Web.UI.Control.OnDataBinding%2A> metodo per un controllo con associazione a dati basati su modelli. Se l'origine dati cui è associato il controllo è popolato, il controllo <xref:System.Web.UI.ControlCollection> insieme viene svuotato tramite il <xref:System.Web.UI.ControlCollection.Clear%2A> (metodo) e <xref:System.Web.UI.Control.ClearChildState%2A> consente di rimuovere eventuali informazioni sullo stato salvato per i controlli figlio.  
  
 [!code-csharp[TemplatedDataBoundControl2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl2/cs/templatedataboundcontrol.cs#3)]
 [!code-vb[TemplatedDataBoundControl2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl2/vb/templatedataboundcontrol.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.ClearChildControlState" />
        <altmember cref="M:System.Web.UI.Control.ClearChildViewState" />
      </Docs>
    </Member>
    <Member MemberName="ClearChildViewState">
      <MemberSignature Language="C#" Value="protected void ClearChildViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearChildViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearChildViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearChildViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearChildViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Elimina le informazioni sullo stato di visualizzazione per tutti i controlli figlio del controllo server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene comunemente utilizzato quando si esegue l'override di <xref:System.Web.UI.Control.DataBind%2A> metodo durante lo sviluppo di controlli server basati su modelli di associazione a dati. Se non si chiama questo metodo, è possono creare informazioni sullo stato di visualizzazione di controllo figlio da un controllo server padre, per essere sottoposte a override durante l'associazione dati.  
  
 Durante la ricreazione di controlli figlio di un <xref:System.Web.UI.Control>, utilizzare il <xref:System.Web.UI.Control.ClearChildViewState%2A> metodo per cancellare lo stato di visualizzazione figlio in modo che non venga applicato ai nuovi controlli inavvertitamente.  
  
 Per ulteriori informazioni sull'utilizzo di questo metodo, vedere [procedura: creare controlli utente ASP.NET basati su modelli](http://msdn.microsoft.com/library/07664410-02dd-4494-af53-a9259741d4f2).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="M:System.Web.UI.Control.ClearChildControlState" />
        <altmember cref="M:System.Web.UI.Control.ClearChildState" />
      </Docs>
    </Member>
    <Member MemberName="ClearEffectiveClientIDMode">
      <MemberSignature Language="C#" Value="protected void ClearEffectiveClientIDMode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearEffectiveClientIDMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearEffectiveClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearEffectiveClientIDMode ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearEffectiveClientIDMode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imposta la proprietà <see cref="P:System.Web.UI.Control.ClientIDMode" /> dell'istanza del controllo corrente e di tutti i controlli figlio su <see cref="F:System.Web.UI.ClientIDMode.Inherit" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public virtual string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'ID di controllo per il markup HTML generato da ASP.NET.</summary>
        <value>ID di controllo per il markup HTML generato da ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene eseguito il rendering di un controllo server Web come un elemento HTML, il `id` attributo dell'elemento HTML è impostato il valore di <xref:System.Web.UI.Control.ClientID%2A> proprietà. Il <xref:System.Web.UI.Control.ClientID%2A> valore viene spesso utilizzato per accedere all'elemento HTML nello script client utilizzando il `document.getElementById` metodo. L'ID viene spesso utilizzato nelle regole CSS per specificare gli elementi di stile. Ad esempio, la regola di stile CSS seguente seleziona tutti `span` gli elementi che hanno il `id` valore dell'attributo `ProductIDLabel` e imposta i `background-color` attributo `white`:  
  
```  
span#ProductIDLabel { background-color: white; }  
```  
  
 ASP.NET fornisce più algoritmi come generare il <xref:System.Web.UI.Control.ClientID%2A> valore della proprietà. Si seleziona l'algoritmo da utilizzare per un controllo impostando il relativo <xref:System.Web.UI.Control.ClientIDMode%2A> proprietà. Gli algoritmi sono identificati dal <xref:System.Web.UI.ClientIDMode> valori di enumerazione elencati nella tabella seguente.  
  
|Valore|Descrizione|  
|-----------|-----------------|  
|<xref:System.Web.UI.ClientIDMode.AutoID>|Il valore <xref:System.Web.UI.Control.ClientID%2A> viene generato tramite la concatenazione dei valori <xref:System.Web.UI.Control.ID%2A> di ogni contenitore di denominazione padre con il valore <xref:System.Web.UI.Control.ID%2A> del controllo. In scenari di associazione a dati in cui viene eseguito il rendering di più istanze di un controllo, viene inserito un valore incrementale davanti al valore <xref:System.Web.UI.Control.ID%2A> del controllo. Ogni segmento è separato da un carattere di sottolineatura (_). Questo algoritmo è stato usato nelle versioni di ASP.NET precedenti ad ASP.NET 4.|  
|<xref:System.Web.UI.ClientIDMode.Static>|Il valore <xref:System.Web.UI.Control.ClientID%2A> è impostato sul valore della proprietà <xref:System.Web.UI.Control.ID%2A>. Se il controllo è un contenitore di denominazione, il controllo viene utilizzato come elemento principale della gerarchia di contenitori di denominazione per qualsiasi controllo contenuto.|  
|<xref:System.Web.UI.ClientIDMode.Predictable>|Questo algoritmo viene utilizzato per controlli inclusi in controlli associati a dati. Il valore <xref:System.Web.UI.Control.ClientID%2A> viene generato tramite la concatenazione del valore <xref:System.Web.UI.Control.ClientID%2A> del contenitore di denominazione padre con il valore <xref:System.Web.UI.Control.ID%2A> del controllo. Se il controllo è un controllo associato a dati che genera più righe, il valore del campo dati specificato nella proprietà <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> viene aggiunto alla fine. Per il controllo <xref:System.Web.UI.WebControls.GridView>, è possibile specificare più campi dati. Se il <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> proprietà è vuota, viene aggiunto un numero sequenziale alla fine anziché un valore del campo dati. Ogni segmento è separato da un carattere di sottolineatura (_).|  
|<xref:System.Web.UI.ClientIDMode.Inherit>|Il controllo eredita l'impostazione <xref:System.Web.UI.ClientIDMode> del relativo controllo <xref:System.Web.UI.Control.NamingContainer%2A>.|  
  
 Il valore predefinito di <xref:System.Web.UI.Control.ClientIDMode%2A> per una pagina è <xref:System.Web.UI.ClientIDMode.Predictable>. Il valore predefinito di <xref:System.Web.UI.Control.ClientIDMode%2A> per un controllo è <xref:System.Web.UI.ClientIDMode.Inherit>. Poiché per impostazione predefinita per i controlli <xref:System.Web.UI.ClientIDMode.Inherit>, la generazione predefinita è la modalità <xref:System.Web.UI.ClientIDMode.Predictable>. (Tuttavia, se si utilizza Visual Studio per convertire un progetto Web in ASP.NET 4 da una versione precedente, Visual Studio imposta automaticamente il valore predefinito del sito <xref:System.Web.UI.ClientIDMode.AutoID> nel file Web. config.)  
  
 Per altre informazioni, vedere [ASP.NET Web Server Control Identification](http://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7) (Identificazione del controllo server Web ASP.NET).  
  
   
  
## Examples  
 Gli esempi seguenti mostrano un controllo utente Web che si trova all'interno di una pagina contenuto per una pagina master. Il controllo utente contiene un <xref:System.Web.UI.WebControls.DropDownList> controllo e un <xref:System.Web.UI.WebControls.Label> controllo. Il testo visualizzato nel <xref:System.Web.UI.WebControls.Label> il controllo viene determinato dal valore selezionato dall'utente dal <xref:System.Web.UI.WebControls.DropDownList> controllo. Il valore di testo viene impostato tramite lo script client in modo che la pagina Web non è necessario eseguire il postback al server per impostare questo valore. Per ottenere un riferimento all'elemento HTML che è stato eseguito il rendering per il <xref:System.Web.UI.WebControls.Label> controllo nello script client, è necessario conoscere il valore del controllo <xref:System.Web.UI.Control.ClientID%2A> proprietà. Tuttavia, poiché il controllo utente può essere inserito in un punto qualsiasi in una pagina Web, è possibile conoscere in anticipo i contenitori di denominazione conterrà i controlli. Per assicurarsi che il <xref:System.Web.UI.Control.ClientID%2A> valore sarà lo stesso come il <xref:System.Web.UI.Control.ID%2A> valore, il codice imposta il <xref:System.Web.UI.Control.ClientIDMode%2A> valore <xref:System.Web.UI.WebControls.ValidatorDisplay.Static>.  
  
 Nell'esempio seguente viene illustrato il controllo utente.  
  
  
  
 Nell'esempio seguente viene illustrata la pagina contenuta che contiene il controllo utente.  
  
  
  
 Nell'esempio seguente viene illustrata la pagina master che contiene la pagina contenuta.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="T:System.Web.UI.INamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="ClientIDMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ClientIDMode ClientIDMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ClientIDMode ClientIDMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ClientIDMode As ClientIDMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ClientIDMode ClientIDMode { System::Web::UI::ClientIDMode get(); void set(System::Web::UI::ClientIDMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'algoritmo utilizzato per generare il valore della proprietà <see cref="P:System.Web.UI.Control.ClientID" />.</summary>
        <value>Valore che indica in che modo viene generata la proprietà <see cref="P:System.Web.UI.Control.ClientID" />. Il valore predefinito è <see cref="F:System.Web.UI.ClientIDMode.Inherit" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET fornisce più algoritmi come generare il <xref:System.Web.UI.Control.ClientID%2A> valore della proprietà. Si seleziona l'algoritmo da utilizzare per un controllo impostando il relativo <xref:System.Web.UI.Control.ClientIDMode%2A> proprietà. Gli algoritmi sono identificati dal <xref:System.Web.UI.ClientIDMode> valori di enumerazione elencati nella tabella seguente.  
  
|Valore|Descrizione|  
|-----------|-----------------|  
|<xref:System.Web.UI.ClientIDMode.AutoID>|Il valore <xref:System.Web.UI.Control.ClientID%2A> viene generato tramite la concatenazione dei valori <xref:System.Web.UI.Control.ID%2A> di ogni contenitore di denominazione padre con il valore <xref:System.Web.UI.Control.ID%2A> del controllo. In scenari di associazione a dati in cui viene eseguito il rendering di più istanze di un controllo, viene inserito un valore incrementale davanti al valore <xref:System.Web.UI.Control.ID%2A> del controllo. Ogni segmento è separato da un carattere di sottolineatura (_). Questo algoritmo è stato usato nelle versioni di ASP.NET precedenti ad ASP.NET 4.|  
|<xref:System.Web.UI.ClientIDMode.Static>|Il valore <xref:System.Web.UI.Control.ClientID%2A> è impostato sul valore della proprietà <xref:System.Web.UI.Control.ID%2A>. Se il controllo è un contenitore di denominazione, il controllo viene utilizzato come elemento principale della gerarchia di contenitori di denominazione per qualsiasi controllo contenuto.|  
|<xref:System.Web.UI.ClientIDMode.Predictable>|Questo algoritmo viene utilizzato per controlli inclusi in controlli associati a dati. Il valore <xref:System.Web.UI.Control.ClientID%2A> viene generato tramite la concatenazione del valore <xref:System.Web.UI.Control.ClientID%2A> del contenitore di denominazione padre con il valore <xref:System.Web.UI.Control.ID%2A> del controllo. Se il controllo è un controllo associato a dati che genera più righe, il valore del campo dati specificato nella proprietà <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> viene aggiunto alla fine. Per il controllo <xref:System.Web.UI.WebControls.GridView>, è possibile specificare più campi dati. Se il <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> proprietà è vuota, viene aggiunto un numero sequenziale alla fine anziché un valore del campo dati. Questo numero inizia da zero e viene incrementato di 1 per ogni riga. Ogni segmento è separato da un carattere di sottolineatura (_).|  
|<xref:System.Web.UI.ClientIDMode.Inherit>|Il controllo eredita l'impostazione <xref:System.Web.UI.ClientIDMode> del relativo controllo <xref:System.Web.UI.Control.NamingContainer%2A>.|  
  
 Il valore predefinito di <xref:System.Web.UI.Control.ClientIDMode%2A> per una pagina è <xref:System.Web.UI.ClientIDMode.Predictable>. Il valore predefinito di <xref:System.Web.UI.Control.ClientIDMode%2A> per un controllo è <xref:System.Web.UI.ClientIDMode.Inherit>. Poiché per impostazione predefinita per i controlli <xref:System.Web.UI.ClientIDMode.Inherit>, la generazione predefinita è la modalità <xref:System.Web.UI.ClientIDMode.Predictable>. (Tuttavia, se si utilizza Visual Studio per convertire un progetto Web in ASP.NET 4 da una versione precedente, Visual Studio imposta automaticamente il valore predefinito del sito <xref:System.Web.UI.ClientIDMode.AutoID> nel file Web. config.)  
  
 Per altre informazioni, vedere [ASP.NET Web Server Control Identification](http://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7) (Identificazione del controllo server Web ASP.NET).  
  
   
  
## Examples  
 Nell'esempio seguente <xref:System.Web.UI.WebControls.Label> controlli contenuti in un <xref:System.Web.UI.WebControls.ListView> controllo. Nel <xref:System.Web.UI.WebControls.ListView> (controllo), il <xref:System.Web.UI.Control.ClientIDMode%2A> è impostata su <xref:System.Web.UI.ClientIDMode.Predictable> e <xref:System.Web.UI.WebControls.ListView.ClientIDRowSuffix%2A> è impostata su `ProductID`. Nel codice HTML visualizzabile, questo crea tre `span` gli elementi che corrispondono a tre `ProductIDLabel` controlli. Quando la pagina viene eseguita, la `id` gli attributi per il `span` gli elementi sono impostati sui valori seguenti:  
  
-   `ListView1_ProductIDLabel_1`  
  
-   `ListView1_ProductIDLabel_34`  
  
-   `ListView1_ProductIDLabel_43`  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDSeparator">
      <MemberSignature Language="C#" Value="protected char ClientIDSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char ClientIDSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ClientIDSeparator" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientIDSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property char ClientIDSeparator { char get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un carattere che rappresenta il separatore utilizzato nella proprietà <see cref="P:System.Web.UI.Control.ClientID" />.</summary>
        <value>Restituisce sempre il carattere di sottolineatura (_).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.ClientID%2A> valore viene generato concatenando il <xref:System.Web.UI.Control.ID%2A> valore del controllo e <xref:System.Web.UI.Control.UniqueID%2A> valore del relativo controllo padre. Ogni parte dell'oggetto generato <xref:System.Web.UI.Control.ID%2A> proprietà separata con il <xref:System.Web.UI.Control.ClientIDSeparator%2A> valore della proprietà. Il valore restituisce sempre un carattere di sottolineatura (_).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="P:System.Web.UI.Control.ClientID" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="P:System.Web.UI.Control.IdSeparator" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Context" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Web.HttpContext" /> associato al controllo server per la richiesta Web corrente.</summary>
        <value>Oggetto <see cref="T:System.Web.HttpContext" /> specificato associato alla richiesta corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di accedere al <xref:System.Web.HttpContext> oggetto per la richiesta Web corrente. L'oggetto fornisce proprietà di cui il <xref:System.Web.HttpContext.Application%2A>, <xref:System.Web.HttpContext.Session%2A>, <xref:System.Web.HttpContext.Request%2A>, <xref:System.Web.HttpContext.Response%2A> e altri oggetti che contengono informazioni sulla richiesta HTTP corrente. Fornisce inoltre metodi che consentono di ottenere informazioni di configurazione e set o eliminare gli errori per la richiesta.  
  
   
  
## Examples  
 [!code-csharp[System.Web.UI.Control_Context_OnInit_ResolveUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/CS/control1.cs#1)]
 [!code-vb[System.Web.UI.Control_Context_OnInit_ResolveUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/VB/control1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
        <altmember cref="T:System.Web.HttpApplication" />
        <altmember cref="T:System.Web.HttpServerUtility" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Web.UI.ControlCollection" /> che rappresenta i controlli figlio per un controllo server specificato nella gerarchia dell'interfaccia utente.</summary>
        <value>Raccolta di controlli figlio per il controllo server specificato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In una pagina ASP.NET, quando vengono aggiunti in modo dichiarativo tra i tag di apertura e chiusura di un controllo server ASP.NET aggiunge automaticamente i controlli al controllo server contenitore <xref:System.Web.UI.ControlCollection>. Qualsiasi tag HTML o le stringhe di testo non vengono elaborate nel server vengono considerate <xref:System.Web.UI.LiteralControl> oggetti. Questi vengono aggiunti alla raccolta come gli altri controlli server.  
  
 Il <xref:System.Web.UI.Control.Controls%2A> proprietà consente di accedere a livello di codice all'istanza del <xref:System.Web.UI.ControlCollection> classe per qualsiasi controllo server. È possibile aggiungere controlli alla raccolta, rimuovere i controlli dalla raccolta o scorrere i controlli server nell'insieme.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come aggiungere controlli figlio di un controllo server <xref:System.Web.UI.ControlCollection> mediante il relativo <xref:System.Web.UI.Control.Controls%2A> proprietà.  
  
 [!code-csharp[Classic Control.Controls Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.Controls Example/CS/source.cs#1)]
 [!code-vb[Classic Control.Controls Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.Controls Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="P:System.Web.UI.Control.Controls" /> proprietà, verificare di chiamare il <see cref="M:System.Web.UI.Control.EnsureChildControls" /> metodo. Inoltre, se si intende aggiungere controlli alla raccolta di controlli a livello di codice, è possibile aggiungere i controlli nell'oggetto sottoposto a override <see cref="M:System.Web.UI.Control.CreateChildControls" /> metodo.</para>
        </block>
        <altmember cref="T:System.Web.UI.ControlCollection" />
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal virtual void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Viene chiamato dal framework della pagina ASP.NET per notificare ai controlli server che usano un'implementazione basata sulla composizione di creare gli eventuali controlli figlio in essi contenuti in preparazione per il postback o il rendering.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si sviluppa un controllo server composito o basato su modelli, è necessario eseguire l'override di questo metodo. Controlla l'override di <xref:System.Web.UI.Control.CreateChildControls%2A> metodo deve implementare il <xref:System.Web.UI.INamingContainer> interfaccia per evitare conflitti di denominazione.  
  
 Per ulteriori informazioni, vedere [modelli di controlli Server Web](http://msdn.microsoft.com/library/f769d290-fd04-4084-85fc-4ea30dd2e8ae) e [lo sviluppo di controlli Server ASP.NET personalizzati](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
   
  
## Examples  
 L'esempio seguente illustra una versione sottoposta a override del <xref:System.Web.UI.Control.CreateChildControls%2A> metodo. In questa implementazione, il controllo composito visualizza un <xref:System.Web.UI.WebControls.TextBox> controllo racchiuso tra due controlli di valore letterale che eseguono il rendering HTML.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[SystemWebUIControl CreateChildControls and EnsureChildControls#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/CS/compositecontrolsample1.cs#2)]
 [!code-vb[SystemWebUIControl CreateChildControls and EnsureChildControls#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/VB/compositecontrolsample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.ControlCollection" />
        <altmember cref="P:System.Web.UI.Control.ChildControlsCreated" />
        <altmember cref="T:System.Web.UI.INamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un nuovo oggetto <see cref="T:System.Web.UI.ControlCollection" /> per contenere i controlli figlio (valore letterale e server) del controllo del server.</summary>
        <returns>Oggetto <see cref="T:System.Web.UI.ControlCollection" /> che contiene i controlli server figlio del controllo server corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eseguire l'override di questo metodo in un controllo server personalizzato se è stato creato un oggetto collection che è derivato dalla <xref:System.Web.UI.ControlCollection> classe. È quindi possibile creare un'istanza di tale classe di raccolta per eseguire l'override di questo metodo.  
  
   
  
## Examples  
 Nell'esempio di codice viene eseguito l'override di <xref:System.Web.UI.Control.CreateControlCollection%2A> metodo per creare un'istanza di un `CustomControlCollection` (classe), che eredita dalla <xref:System.Web.UI.ControlCollection> classe.  
  
 [!code-csharp[System.Web.UI.ControlCollection_CTor_Owner#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/cs/controlcollection_7.cs#2)]
 [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/VB/controlcollection_7.vb#2)]  
  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Web.UI.Control.CreateControlCollection%2A> eseguire l'override del metodo in un controllo server personalizzato di <xref:System.Web.UI.Control.CreateChildControls%2A> metodo. La nuova raccolta viene creata e popolata successivamente con due controlli figlio, `firstControl` e `secondControl`.  
  
 [!code-csharp[Control_Sample_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#1)]
 [!code-vb[Control_Sample_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBind">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Associa un'origine dati al controllo server richiamato e a tutti i controlli figlio.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public virtual void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Associa un'origine dati al controllo server richiamato e a tutti i controlli figlio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo metodo per associare i dati da un'origine a un controllo server. Questo metodo è comunemente utilizzato dopo il recupero di un set di dati tramite una query sul database. La maggior parte dei controlli eseguono automaticamente, l'associazione a dati che significa che in genere non occorre chiamare questo metodo in modo esplicito.  
  
 È in genere l'override del metodo quando si crea un controllo con associazione a dati basati su modelli personalizzato. Per ulteriori informazioni, vedere [procedura: creare controlli utente ASP.NET basati su modelli](http://msdn.microsoft.com/library/07664410-02dd-4494-af53-a9259741d4f2) e [controlli Server Web di sviluppo personalizzato associato](http://msdn.microsoft.com/library/88fe02a3-957f-4ff7-84f5-2d7ab78db4c1). Quando viene chiamato su un controllo server, questo metodo risolve tutte le espressioni di associazione di dati nel controllo del server e in tutti i relativi controlli figlio.  
  
   
  
## Examples  
 Nell'esempio seguente esegue l'override di <xref:System.Web.UI.Control.DataBind%2A> metodo in un controllo server ASP.NET personalizzato. Viene innanzitutto eseguita la chiamata alla base <xref:System.Web.UI.Control.OnDataBinding%2A> (metodo) e quindi viene utilizzato il <xref:System.Web.UI.ControlCollection.Clear%2A?displayProperty=nameWithType> metodo per eliminare tutti i controlli figlio e <xref:System.Web.UI.Control.ClearChildViewState%2A> metodo per eliminare eventuali salvato le impostazioni dello stato di visualizzazione per i controlli figlio. Infine, il <xref:System.Web.UI.Control.ChildControlsCreated%2A> è impostata su `true` e il controllo viene richiesto di tenere traccia delle modifiche allo stato di visualizzazione dei controlli appena creati con il <xref:System.Web.UI.Control.TrackViewState%2A> metodo. Questa è una tecnica comune quando si associano dati a un controllo per assicurarsi che i nuovi dati non in conflitto con i dati archiviati da una precedente <xref:System.Web.UI.Control.DataBind%2A> chiamata al metodo.  
  
 [!code-csharp[Control_StateManagement#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#6)]
 [!code-vb[Control_StateManagement#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBindChildren" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="protected virtual void DataBind (bool raiseOnDataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DataBind(bool raiseOnDataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.DataBind(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DataBind (raiseOnDataBinding As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DataBind(bool raiseOnDataBinding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raiseOnDataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="raiseOnDataBinding">
          <see langword="true" /> se viene generato l'evento <see cref="E:System.Web.UI.Control.DataBinding" />; in caso contrario, <see langword="false" />.</param>
        <summary>Associa un'origine dati al controllo server chiamato e ai relativi controlli figlio con un'opzione per generare l'evento <see cref="E:System.Web.UI.Control.DataBinding" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> metodo in uno scenario quando il controllo personalizzato esegue l'override di <xref:System.Web.UI.Control.DataBind%2A> (metodo) e implementa il <xref:System.Web.UI.IDataItemContainer> interfaccia. In questo scenario, il controllo personalizzato chiama il <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> metodo con `raiseOnDataBinding` impostato su `false` per garantire che la classe base <xref:System.Web.UI.Control.DataBind%2A> metodo viene chiamato.  
  
 Il <xref:System.Web.UI.Control.DataBind?displayProperty=nameWithType> metodo richiama il <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> metodo con `raiseOnDataBinding` impostato su `true`.  
  
> [!NOTE]
>  La chiamata di <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> metodo con `raiseOnDataBinding` impostato su `false` imposta figlio di controlli ai dati associati il <xref:System.Web.UI.Control.DataBind?displayProperty=nameWithType> (metodo).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBindChildren" />
      </Docs>
    </Member>
    <Member MemberName="DataBindChildren">
      <MemberSignature Language="C#" Value="protected virtual void DataBindChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DataBindChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.DataBindChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DataBindChildren ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DataBindChildren();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Associa un'origine dati al controllo server e ai relativi controlli figlio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.Control.DataBindChildren%2A> metodo per associare un'origine dati ai controlli figlio di un controllo server.  
  
> [!NOTE]
>  Quando viene chiamato su un controllo server, questo metodo non associare dati al controllo. Per associare un controllo server e tutti i controlli figlio, chiamare il <xref:System.Web.UI.Control.DataBind%2A> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBinding">
      <MemberSignature Language="C#" Value="public event EventHandler DataBinding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataBinding" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.DataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataBinding As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataBinding;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Viene generato quando il controllo server viene associato a un'origine dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento di notifica per eseguire qualsiasi logica di associazione di dati che è stata scritta per il controllo del server.  
  
   
  
## Examples  
 [!code-csharp[ITemplate_Interface#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ITemplate_Interface/CS/itemplate.cs#1)]
 [!code-vb[ITemplate_Interface#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ITemplate_Interface/VB/itemplate.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DataItemContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control DataItemContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control DataItemContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.DataItemContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ DataItemContainer { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento al contenitore di denominazione se il contenitore di denominazione implementa <see cref="T:System.Web.UI.IDataItemContainer" />.</summary>
        <value>Contenitore di denominazione. In una gerarchia di contenitori di denominazione che implementano <see cref="T:System.Web.UI.IDataItemContainer" />, questa proprietà restituisce il contenitore di denominazione all'inizio della gerarchia o <see langword="null" /> se l'oggetto <see cref="T:System.Web.UI.Control" /> corrente non si trova in un contenitore di denominazione che implementa <see cref="T:System.Web.UI.IDataItemContainer" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataKeysContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control DataKeysContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control DataKeysContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.DataKeysContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataKeysContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ DataKeysContainer { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento al contenitore di denominazione se il contenitore di denominazione implementa <see cref="T:System.Web.UI.IDataKeysControl" />.</summary>
        <value>Contenitore di denominazione. In una gerarchia di contenitori di denominazione che implementano l'oggetto <see cref="T:System.Web.UI.IDataKeysControl" />, la proprietà restituisce il contenitore di denominazione all'inizio della gerarchia o <see langword="null" /> se l'oggetto <see cref="T:System.Web.UI.Control" /> corrente non si trova in un contenitore di denominazione che implementa l'oggetto <see cref="T:System.Web.UI.IDataKeysControl" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignMode">
      <MemberSignature Language="C#" Value="protected internal bool DesignMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.DesignMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property DesignMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool DesignMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se un controllo viene utilizzato in un'area di progettazione.</summary>
        <value>
          <see langword="true" /> se il controllo viene utilizzato in una finestra di progettazione; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.DesignMode%2A> restituisce proprietà `true` per indicare che il controllo viene usato nel contesto di una finestra di progettazione. I controlli personalizzati è possono utilizzare questa proprietà quando il comportamento in fase di progettazione è diverso dal comportamento in fase di esecuzione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abilita un controllo server alla pulizia finale prima che venga rilasciato dalla memoria.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare il metodo <xref:System.Web.UI.Control.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.Web.UI.Control>. Il metodo <xref:System.Web.UI.Control.Dispose%2A> lascia l'oggetto <xref:System.Web.UI.Control> in una condizione di inutilizzabilità. Dopo aver chiamato questo metodo, è necessario rilasciare tutti i riferimenti al controllo in modo che la memoria occupata può essere recuperata tramite garbage collection.  
  
   
  
## Examples  
 Nell'esempio di codice viene eseguito l'override di <xref:System.Web.UI.Control.Dispose%2A> metodo per chiudere la <xref:System.Web.UI.HtmlTextWriter> oggetto associato a un controllo e viene chiamato il <xref:System.Web.UI.Control.Dispose%2A> metodo su un <xref:System.Web.UI.WebControls.Button> controllo denominato `myButton`. Se un <xref:System.Exception> viene generata quando questa versione di <xref:System.Web.UI.Control.Dispose%2A> metodo viene chiamato, il controllo scrive un messaggio corrente <xref:System.Web.HttpResponse> oggetto.  
  
 [!code-csharp[Control_Dispose#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Dispose/CS/control_disposemethod.cs#1)]
 [!code-vb[Control_Dispose#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Dispose/VB/control_disposemethod.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Disposed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando un controllo server viene rilasciato dalla memoria, ossia nell'ultima fase della durata di un controllo server quando viene richiesta una pagina ASP.NET.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Risorse che richiedono un tempo del processore, ad esempio le connessioni di database, devono essere rilasciate con questo evento.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public virtual bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se al controllo vengono applicati i temi.</summary>
        <value>
          <see langword="true" /> per utilizzare i temi; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.EnableTheming%2A> proprietà indica se i temi sono abilitati per un controllo specificato. Quando il <xref:System.Web.UI.Control.EnableTheming%2A> proprietà `true`, directory dei temi dell'applicazione viene eseguita la ricerca per le interfacce di controllo da applicare. Se è presente alcuna interfaccia per il controllo specifico nella directory dei temi, le interfacce non sono applicate.  
  
 Quando il <xref:System.Web.UI.Control.EnableTheming%2A> proprietà `false`, la directory di tema non viene eseguita la ricerca e il contenuto del <xref:System.Web.UI.Control.SkinID%2A> proprietà non viene utilizzata.  
  
 Temi possono essere abilitati a livello di pagina, contenitore o controllo. Un controllo può eseguire l'override di <xref:System.Web.UI.Control.EnableTheming%2A> valore impostato dal relativo controllo padre o da una pagina che lo contiene.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'evento <see langword="Page_PreInit" /> si è già verificato.  
  
 \- oppure -  
  
 Il controllo è già stato aggiunto all'insieme <see langword="Controls" />.</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="EnableViewState">
      <MemberSignature Language="C#" Value="public virtual bool EnableViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.EnableViewState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableViewState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se lo stato di visualizzazione del controllo server deve essere persistente e lo stato di visualizzazione dei controlli figlio contenuti, per il client richiedente.</summary>
        <value>
          <see langword="true" /> se il controllo server mantiene lo stato di visualizzazione. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lo stato di visualizzazione consente un controllo server mantiene lo stato tra le richieste HTTP. Lo stato di visualizzazione per un controllo è abilitato se vengono soddisfatte tutte le condizioni seguenti:  
  
-   Il <xref:System.Web.UI.Control.EnableViewState%2A> per la pagina è impostata su `true`.  
  
-   Il <xref:System.Web.UI.Control.EnableViewState%2A> per il controllo è impostata su `true`.  
  
-   Il <xref:System.Web.UI.Control.ViewStateMode%2A> per il controllo è impostata su <xref:System.Web.UI.ViewStateMode.Enabled> o eredita il <xref:System.Web.UI.ViewStateMode.Enabled> impostazione.  
  
 Per altre informazioni, vedere la proprietà <xref:System.Web.UI.Control.ViewStateMode%2A>.  
  
 Lo stato di visualizzazione di un controllo server è costituito da tutti i valori delle proprietà. Per conservare questi valori in tutte le richieste HTTP, ASP.NET utilizza un'istanza di <xref:System.Web.UI.StateBag> classe per archiviare i valori delle proprietà. I valori vengono quindi passati come una variabile a un campo nascosto quando vengono elaborate le richieste successive. Per ulteriori informazioni sullo stato di visualizzazione, vedere [panoramica dello stato di visualizzazione ASP.NET](http://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818).  
  
 Esistono casi in cui è opportuno disabilitare lo stato di visualizzazione, in particolare per migliorare le prestazioni dell'applicazione. Ad esempio, se si sta caricando una richiesta di database in un controllo server, impostare questa proprietà su `false`. In caso contrario, il tempo del processore sarà sarebbero sprecato caricare lo stato di visualizzazione nel controllo server che verrà sostituito solo da una query sul database. Se <xref:System.Web.UI.Control.EnableViewState%2A> è `false`, è possibile utilizzare lo stato di controllo per mantenere le informazioni specifiche di un controllo e non possono essere disattivate come la proprietà di stato di visualizzazione. Per ulteriori informazioni sulla differenza tra lo stato del controllo e lo stato di visualizzazione, vedere [vs lo stato del controllo. Stato di visualizzazione](http://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681).  
  
 Per informazioni su come abilitare o disabilitare lo stato di visualizzazione in modo dichiarativo di una pagina ASP.NET, vedere.  
  
   
  
## Examples  
 L'esempio seguente imposta il <xref:System.Web.UI.Control.EnableViewState%2A> proprietà `false`.  
  
 [!code-csharp[Control_StateManagement#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_statemanagement.cs.aspx#7)]
 [!code-vb[Control_StateManagement#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_statemanagement.vb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewStateMode" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <altmember cref="P:System.Web.UI.Control.IsViewStateEnabled" />
      </Docs>
    </Member>
    <Member MemberName="EndRenderTracing">
      <MemberSignature Language="C#" Value="protected void EndRenderTracing (System.IO.TextWriter writer, object traceObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndRenderTracing(class System.IO.TextWriter writer, object traceObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EndRenderTracing (writer As TextWriter, traceObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EndRenderTracing(System::IO::TextWriter ^ writer, System::Object ^ traceObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="traceObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto che scrive i dati di traccia.</param>
        <param name="traceObject">Oggetto traccia.</param>
        <summary>Termina la traccia in fase di progettazione dei dati di rendering.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureChildControls">
      <MemberSignature Language="C#" Value="protected virtual void EnsureChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.EnsureChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EnsureChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EnsureChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se il controllo server contiene controlli figlio. In caso contrario, li crea.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo controlla innanzitutto il valore corrente di <xref:System.Web.UI.Control.ChildControlsCreated%2A> proprietà. Se questo valore è `false`, <xref:System.Web.UI.Control.CreateChildControls%2A> metodo viene chiamato.  
  
 Il <xref:System.Web.UI.Control.EnsureChildControls%2A> metodo viene in genere utilizzato nei controlli compositi, vale a dire controlli che utilizzano i controlli figlio per alcune o tutte le relative funzionalità. Il <xref:System.Web.UI.Control.EnsureChildControls%2A> metodo viene chiamato per verificare che i controlli figlio sono stati creati e sono pronti a elaborare l'input, per eseguire l'associazione di dati o eseguire altre attività.  
  
 Il <xref:System.Web.UI.WebControls.GridView> controllo è un esempio di un controllo composito. Crea dei controlli figlio, ad esempio <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.TableRow>, <xref:System.Web.UI.WebControls.TableCell>, <xref:System.Web.UI.WebControls.Label>, e <xref:System.Web.UI.WebControls.TextBox> tabella controlli, vengono utilizzati per eseguire il rendering HTML di <xref:System.Web.UI.WebControls.GridView> genera l'errore.  
  
 Nella maggior parte dei casi, gli sviluppatori di controllo di server personalizzati insufficienti eseguire l'override di questo metodo. Se si esegue l'override di questo metodo, è possibile utilizzarlo in modo simile al comportamento predefinito.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Web.UI.Control.EnsureChildControls%2A> metodo per assicurarsi che il controllo del server corrente dispone di controlli figlio. Quindi Ottiene o imposta un <xref:System.Web.UI.WebControls.TextBox.Text%2A> proprietà per un elemento figlio <xref:System.Web.UI.WebControls.TextBox> controllo in corrente del controllo server Web <xref:System.Web.UI.ControlCollection> oggetto.  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[SystemWebUIControl CreateChildControls and EnsureChildControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/CS/compositecontrolsample1.cs#1)]
 [!code-vb[SystemWebUIControl CreateChildControls and EnsureChildControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/VB/compositecontrolsample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="P:System.Web.UI.Control.ChildControlsCreated" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="EnsureID">
      <MemberSignature Language="C#" Value="protected void EnsureID ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.EnsureID" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureID ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureID();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un identificatore per i controlli a cui non è assegnato alcun identificatore.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.EnsureID%2A> metodo genera un identificatore per i controlli contenuti in un altro controllo. Gli identificatori vengono generati solo per i controlli che non sono assegnato un valore di <xref:System.Web.UI.Control.ID%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un elenco dei delegati del gestore eventi per il controllo. Questa proprietà è di sola lettura.</summary>
        <value>Elenco dei delegati del gestore eventi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è di tipo <xref:System.ComponentModel.EventHandlerList>, che utilizza un algoritmo di ricerca lineare per trovare le voci dell'elenco di delegati. Algoritmo di ricerca lineare è inefficiente quando si lavora con un numero elevato di voci. Pertanto, quando si dispone di un elenco di grandi dimensioni, la ricerca di voci con questa proprietà sarà lente.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un evento, denominato `Click`, che aggiunge e rimuove i gestori del controllo <xref:System.ComponentModel.EventHandlerList> raccolta quando l'evento viene chiamato da una pagina.  
  
 **Nota** viene ottimizzato il modo in cui un controllo aggiunge e rimuove eventi dall'elenco di quelli che gestisce il controllo. Se si crea controllo personalizzato e si desidera definire un evento, usare codice simile al seguente. Questa tecnica può essere utilizzata in c#, ma non in Visual Basic.  
  
 [!code-csharp[System.Web.UI.Page_VerifyRenderingInServerForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_VerifyRenderingInServerForm/CS/testlinkbutton.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventHandlerList" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindControl">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cerca il controllo server specificato nel contenitore dei nomi corrente.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Identificatore del controllo da ricercare.</param>
        <summary>Cerca un controllo server nel contenitore dei nomi corrente con il parametro <paramref name="id" /> specificato.</summary>
        <returns>Il controllo specificato oppure <see langword="null" /> se il controllo specificato non esiste.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare <xref:System.Web.UI.Control.FindControl%2A> per un controllo di accesso da una funzione in una pagina code-behind, per accedere a un controllo che si trova all'interno di un altro contenitore o in altre circostanze in cui il controllo di destinazione non è direttamente accessibile al chiamante. Questo metodo troverà un controllo solo se il controllo è contenuto direttamente dal contenitore specificato. ovvero, il metodo non esegue la ricerca in tutta la gerarchia dei controlli all'interno dei controlli. Per informazioni su come trovare un controllo quando non si conosce il contenitore immediato, vedere [come: i controlli Server di accesso dall'ID](http://msdn.microsoft.com/library/59964ef8-72ef-4159-9f1a-5b230ff46fb3).  
  
   
  
## Examples  
 L'esempio seguente definisce un `Button1_Click` gestore dell'evento. Quando viene richiamato, il gestore utilizza il <xref:System.Web.UI.Control.FindControl%2A> metodo per individuare un controllo con un <xref:System.Web.UI.Control.ID%2A> proprietà di `TextBox2` nella pagina che lo contiene. Se il controllo viene trovato, il relativo elemento padre viene determinato utilizzando il <xref:System.Web.UI.Control.Parent%2A> proprietà e del controllo padre <xref:System.Web.UI.Control.ID%2A> viene scritto nella pagina. Se `TextBox2` non viene trovato, la pagina viene scritto "Controllo non trovato".  
  
> [!IMPORTANT]
>  L'esempio include una casella di testo che accetta l'input dell'utente e rappresenta quindi una potenziale minaccia alla sicurezza. Per impostazione predefinita, le pagine Web ASP.NET verificano che l'input dell'utente non includa script o elementi HTML. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/CS/control_parent.cs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/VB/control_parent.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control FindControl (string id, int pathOffset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control FindControl(string id, int32 pathOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.FindControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FindControl (id As String, pathOffset As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ FindControl(System::String ^ id, int pathOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="pathOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">Identificatore del controllo da ricercare.</param>
        <param name="pathOffset">Numero di controlli ai livelli superiori della gerarchia dei controlli della pagina necessari per raggiungere un contenitore dei nomi.</param>
        <summary>Cerca nel contenitore di denominazione corrente un controllo server con il parametro <paramref name="id" /> indicato e un intero, specificato nel parametro <paramref name="pathOffset" />, che agevola la ricerca. Non eseguire l'override di questa versione del metodo <see cref="Overload:System.Web.UI.Control.FindControl" />.</summary>
        <returns>Il controllo specificato oppure <see langword="null" /> se il controllo specificato non esiste.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public virtual void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imposta lo stato attivo per l'input su un controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.Control.Focus%2A> per impostare lo stato attivo iniziale della pagina Web al controllo. Verrà aperta la pagina nel browser con il controllo selezionato.  
  
 Il <xref:System.Web.UI.Control.Focus%2A> metodo provoca una chiamata allo script lo stato attivo della pagina da generare sulla pagina sottoposta a rendering. Se la pagina non contiene un controllo con un elemento HTML `ID` attributo che corrisponde al controllo che il <xref:System.Web.UI.Control.Focus%2A> metodo è stato richiamato su, quindi non imposterà lo stato attivo alla pagina. Un esempio in cui questa situazione può verificarsi è quando si imposta lo stato attivo su un controllo utente anziché impostare lo stato attivo in un controllo figlio del controllo utente. In questo scenario, è possibile utilizzare il <xref:System.Web.UI.Control.FindControl%2A> per trovare il controllo figlio del controllo utente e richiamare il <xref:System.Web.UI.Control.Focus%2A> metodo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.FindControl(System.String)" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene i dati della fase di progettazione per un controllo.</summary>
        <returns>Oggetto <see cref="T:System.Collections.IDictionary" /> che contiene i dati della fase di progettazione per il controllo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.GetDesignModeState%2A> metodo restituisce i dati in fase di progettazione per un controllo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Il <see cref="M:System.Web.UI.Control.GetDesignModeState" /> restituisce <see langword="null" /> per impostazione predefinita. È necessario eseguire l'override di questo metodo per fornire i dati in fase di progettazione che richiede il controllo.</para>
        </block>
        <altmember cref="T:System.Web.UI.IControlDesignerAccessor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRouteUrl">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene l'URL che corrisponde a un set di parametri di route e facoltativamente a un nome della route.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (object routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(object routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeParameters As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::Object ^ routeParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeParameters" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeParameters">Parametri di route.</param>
        <summary>Ottiene l'URL corrispondente a un set di parametri di route.</summary>
        <returns>URL corrispondente ai parametri di route specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> metodo. Questo metodo converte l'oggetto è passato in `routeParameters` per un <xref:System.Web.Routing.RouteValueDictionary> oggetto utilizzando il <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> costruttore.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come chiamare il <xref:System.Web.UI.Control.GetRouteUrl%2A?displayProperty=nameWithType> metodo per ottenere l'URL di una route che dispone di parametri denominati `productid` e `category`. Questo esempio si presuppone che sia stato creato un <xref:System.Web.UI.WebControls.HyperLink> controllo denominato `HyperLink1`.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (System.Web.Routing.RouteValueDictionary routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(class System.Web.Routing.RouteValueDictionary routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeParameters As RouteValueDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::Web::Routing::RouteValueDictionary ^ routeParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeParameters" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeParameters">Parametri di route.</param>
        <summary>Ottiene l'URL corrispondente a un set di parametri di route.</summary>
        <returns>URL corrispondente ai parametri di route specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come chiamare questo metodo per ottenere l'URL di una route che dispone di parametri denominati `productid` e `category`. Questo esempio si presuppone che sia stato creato un <xref:System.Web.UI.WebControls.HyperLink> controllo denominato `HyperLink1`.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  (new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (string routeName, object routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(string routeName, object routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeName As String, routeParameters As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::String ^ routeName, System::Object ^ routeParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeParameters" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">Nome della route.</param>
        <param name="routeParameters">Parametri di route.</param>
        <summary>Ottiene l'URL che corrisponde a un set di parametri di route e a un nome della route.</summary>
        <returns>URL corrispondente ai parametri di route e al nome della route specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> metodo. Questo metodo converte l'oggetto è passato in `routeParameters` per un <xref:System.Web.Routing.RouteValueDictionary> oggetto utilizzando il <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> costruttore.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come chiamare questo metodo per ottenere l'URL di una route denominata `Product` e dispone di parametri denominati `productid` e `category`. Questo esempio si presuppone che sia stato creato un <xref:System.Web.UI.WebControls.HyperLink> controllo denominato `HyperLink1`.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (string routeName, System.Web.Routing.RouteValueDictionary routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(string routeName, class System.Web.Routing.RouteValueDictionary routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeName As String, routeParameters As RouteValueDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::String ^ routeName, System::Web::Routing::RouteValueDictionary ^ routeParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeParameters" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">Nome della route.</param>
        <param name="routeParameters">Parametri di route.</param>
        <summary>Ottiene l'URL che corrisponde a un set di parametri di route e a un nome della route.</summary>
        <returns>URL corrispondente ai parametri di route e al nome della route specificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come chiamare questo metodo per ottenere l'URL di una route denominata `Product` e dispone di parametri denominati `productid` e `category`. Questo esempio si presuppone che sia stato creato un <xref:System.Web.UI.WebControls.HyperLink> controllo denominato `HyperLink1`.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  (new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueIDRelativeTo">
      <MemberSignature Language="C#" Value="public string GetUniqueIDRelativeTo (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUniqueIDRelativeTo(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUniqueIDRelativeTo(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Un controllo che si trova in un contenitore di denominazione.</param>
        <summary>Restituisce la parte con prefisso della proprietà <see cref="P:System.Web.UI.Control.UniqueID" /> del controllo specificato.</summary>
        <returns>Parte con prefisso della proprietà <see cref="P:System.Web.UI.Control.UniqueID" /> del controllo specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.UniqueID%2A> proprietà di un controllo viene generato mediante l'aggiunta di un prefisso per il controllo <xref:System.Web.UI.Control.ID%2A> proprietà. Il prefisso è costituito il <xref:System.Web.UI.Control.UniqueID%2A> proprietà del controllo contenitore concatenato con un carattere separatore di denominazione. Se il contenitore di denominazione è la pagina, non è presente alcun prefisso. Questo metodo restituisce la stringa di prefisso. Se viene individuata alcuna stringa di prefisso, viene restituito il <xref:System.Web.UI.Control.UniqueID%2A> valore del controllo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Web.UI.Control.NamingContainer" /> di <paramref name="control" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasChildViewState">
      <MemberSignature Language="C#" Value="protected bool HasChildViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.HasChildViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property HasChildViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool HasChildViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se per i controlli figlio del controllo server corrente esistono impostazioni dello stato di visualizzazione salvate.</summary>
        <value>
          <see langword="true" /> se per i controlli figlio esistono informazioni sullo stato di visualizzazione salvate; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile evitare le chiamate per il <xref:System.Web.UI.Control.ClearChildViewState%2A> metodo utilizzando questa proprietà per verificare che tutti i controlli figlio del controllo server archiviano informazioni sullo stato di visualizzazione.  
  
   
  
## Examples  
 [!code-csharp[Control_StateManagement#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#5)]
 [!code-vb[Control_StateManagement#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="HasControls">
      <MemberSignature Language="C#" Value="public virtual bool HasControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.HasControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasControls () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se il controllo server contiene controlli figlio.</summary>
        <returns>
          <see langword="true" /> se il controllo contiene altri controlli; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poiché questo metodo si limita a determinare se esistono eventuali controlli figlio, può migliorare le prestazioni, consentendo di evitare superflua <xref:System.Web.UI.ControlCollection.Count%2A> chiamata alla proprietà. Le chiamate a questa proprietà richiedono un <xref:System.Web.UI.ControlCollection> oggetto deve essere creata un'istanza. Se non sono presenti figli, la creazione dell'oggetto comporta uno spreco di risorse del server.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Web.UI.Control.HasControls%2A> metodo per determinare se esistono controlli prima di utilizzare il <xref:System.Web.UI.ControlCollection.Count%2A> proprietà per scorrere un <xref:System.Web.UI.ControlCollection> oggetto.  
  
 [!code-csharp[Classic Control.HasControls Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.HasControls Example/CS/source.cs#1)]
 [!code-vb[Classic Control.HasControls Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.HasControls Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Il <see cref="M:System.Web.UI.Control.HasControls" /> deve eseguire l'override di metodo solo per modificare gli attributi dei metadati, ad esempio <see cref="T:System.ComponentModel.EditorBrowsableAttribute" />. Per ulteriori informazioni sull'utilizzo degli attributi, vedere [attributi](~/docs/standard/attributes/index.md).</para>
        </block>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="HasEvents">
      <MemberSignature Language="C#" Value="protected bool HasEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool HasEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.HasEvents" />
      <MemberSignature Language="VB.NET" Value="Protected Function HasEvents () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool HasEvents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un valore che indica se gli eventi vengono registrati per il controllo o eventuali controlli figlio.</summary>
        <returns>
          <see langword="true" /> se gli eventi vengono registrati; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'identificatore a livello di codice assegnato al controllo server.</summary>
        <value>L'identificatore a livello di codice assegnato al controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostazione di questa proprietà su un controllo server fornisce l'accesso a livello di codice alle proprietà, eventi e metodi del controllo server. Questa proprietà può essere impostata dagli sviluppatori Web dichiarando un <xref:System.Web.UI.Control.ID%2A> attributo nel tag di apertura di un controllo server ASP.NET.  
  
 Se questa proprietà non è specificata per un controllo server, in modo dichiarativo o a livello di codice, è possibile ottenere un riferimento al controllo e del relativo controllo padre <xref:System.Web.UI.Control.Controls%2A> proprietà.  
  
> [!NOTE]
>  Solo le combinazioni di caratteri alfanumerici e il carattere di sottolineatura (_) sono i valori validi per questa proprietà. Inserimento di spazi o altri caratteri non validi causerà un errore del parser pagina ASP.NET.  
  
   
  
## Examples  
 [!code-csharp[Control_Sample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample/CS/controlclass_samples.cs.aspx#2)]
 [!code-vb[Control_Sample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample/VB/controlclass_samples.vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
        <altmember cref="T:System.Web.UI.INamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="IdSeparator">
      <MemberSignature Language="C#" Value="protected char IdSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IdSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IdSeparator" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IdSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property char IdSeparator { char get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il carattere utilizzato per separare gli identificatori di controllo.</summary>
        <value>Carattere separatore. L’impostazione predefinita è "$".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il carattere contenuto nella <xref:System.Web.UI.Control.IdSeparator%2A> proprietà viene utilizzata per separare gli identificatori di controllo per i controlli figlio. Il carattere separatore di ID viene aggiunto per il <xref:System.Web.UI.Control.ID%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public event EventHandler Init;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Init" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Init" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Init As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Init;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Viene generato quando il controllo server viene inizializzato, ovvero nella prima fase della sua durata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlli server devono eseguire le operazioni di inizializzazione necessari per creare e configurare un'istanza. Non è possibile utilizzare le informazioni sullo stato di visualizzazione all'interno di questo evento. non si è ancora popolato. Non è necessario accedere un altro controllo server durante questo evento, che si tratti di un controllo figlio o padre di questo controllo. Altri controlli server non siano creati e pronto per l'accesso. Per ulteriori informazioni sugli eventi di controllo server, vedere [del modello di eventi controllo ASP.NET Web Forms Server](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).  
  
   
  
## Examples  
 Nell'esempio seguente viene assegnato un gestore dell'evento personalizzato, `Calendar_Init`al `Init` evento di un <xref:System.Web.UI.WebControls.Calendar> controllo.  
  
 [!code-aspx-csharp[Control_Sample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample/CS/controlclass_samples2.cs.aspx#4)]
 [!code-aspx-vb[Control_Sample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample/VB/controlclass_samples2.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsChildControlStateCleared">
      <MemberSignature Language="C#" Value="protected internal bool IsChildControlStateCleared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsChildControlStateCleared" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IsChildControlStateCleared" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsChildControlStateCleared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsChildControlStateCleared { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se i controlli contenuti in questo controllo dispongono di informazioni sullo stato del controllo.</summary>
        <value>
          <see langword="true" /> se i controlli figlio di questo controllo non utilizzano lo stato del controllo; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiteralContent">
      <MemberSignature Language="C#" Value="protected bool IsLiteralContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsLiteralContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.IsLiteralContent" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsLiteralContent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsLiteralContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se il controllo server conserva solo il contenuto literal.</summary>
        <returns>
          <see langword="true" /> se il controllo server contiene solo il contenuto literal; in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando questo metodo restituisce `true`, la raccolta del controllo server conserva un singolo controllo.  
  
   
  
## Examples  
 L'esempio seguente verifica se la pagina che contiene i controlli server è stato eseguito il postback. In caso affermativo, chiama il <xref:System.Web.UI.Control.IsLiteralContent%2A> metodo per determinare se il controllo contiene solo contenuto effettivo, o è un controllo padre di altri controlli server. Se contiene solo il contenuto literal il <xref:System.Web.UI.Control.UniqueID%2A> proprietà del <xref:System.Web.UI.LiteralControl> che rappresenta il contenuto scritto nella risposta.  
  
 [!code-csharp[System.Web.UI.Control_ViewStateIgnoresCase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/cs/controlsample_7.cs#1)]
 [!code-vb[System.Web.UI.Control_ViewStateIgnoresCase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/VB/controlsample_7.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.HasControls" />
        <altmember cref="T:System.Web.UI.LiteralControl" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il controllo server salva le modifiche allo stato di visualizzazione.</summary>
        <value>
          <see langword="true" /> se il controllo è contrassegnato per il salvataggio dello stato; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un esempio di controllo server personalizzato che utilizza questa proprietà, vedere [esempio basato su modelli di controllo Server](http://msdn.microsoft.com/library/986f63b8-6b50-42b9-a62d-a2f13cafa88b)  
  
   
  
## Examples  
 Nell'esempio seguente esegue l'override di <xref:System.Web.UI.Control.DataBind%2A> metodo in un controllo server ASP.NET personalizzato. Viene innanzitutto eseguita la chiamata alla base <xref:System.Web.UI.Control.OnDataBinding%2A> (metodo) e quindi viene utilizzato il `ControlCollection` oggetto. <xref:System.Web.UI.ControlCollection.Clear%2A?displayProperty=nameWithType> metodo per eliminare tutti i controlli figlio e <xref:System.Web.UI.Control.ClearChildViewState%2A> metodo per eliminare eventuali salvato le impostazioni dello stato di visualizzazione per i controlli figlio. Infine, il <xref:System.Web.UI.Control.ChildControlsCreated%2A> è impostata su `true`. Il controllo utilizza quindi la <xref:System.Web.UI.Control.IsTrackingViewState%2A> proprietà per determinare se il rilevamento delle modifiche dello stato di visualizzazione è abilitata per il controllo. Se non è abilitato, il <xref:System.Web.UI.Control.TrackViewState%2A> metodo viene chiamato.  
  
 [!code-csharp[Control_StateManagement#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#4)]
 [!code-vb[Control_StateManagement#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="IsViewStateEnabled">
      <MemberSignature Language="C#" Value="protected internal bool IsViewStateEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsViewStateEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IsViewStateEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsViewStateEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsViewStateEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se lo stato di visualizzazione è attivato per il controllo corrente.</summary>
        <value>
          <see langword="true" /> se lo stato di visualizzazione del controllo è attivato; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lo stato di visualizzazione può essere abilitato a livello di pagina, contenitore o controllo. Quando lo stato di visualizzazione è disabilitato a livello di pagina o del contenitore, lo stato di visualizzazione è disabilitato per tutti i controlli contenuti nella pagina o il contenitore. Il <xref:System.Web.UI.Control.IsViewStateEnabled%2A> proprietà indica se lo stato di visualizzazione è abilitato per le pagine, contenitori o controlli.  
  
 È possibile che il <xref:System.Web.UI.Control.EnableViewState%2A> proprietà e <xref:System.Web.UI.Control.IsViewStateEnabled%2A> proprietà può essere diverso. Ad esempio, se il <xref:System.Web.UI.Page> che contiene il controllo ha lo stato di visualizzazione è disabilitato, il <xref:System.Web.UI.Control.EnableViewState%2A> proprietà può essere `true` mentre il <xref:System.Web.UI.Control.IsViewStateEnabled%2A> proprietà `false`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Gli sviluppatori di pagine imposterà il <see cref="P:System.Web.UI.Control.EnableViewState" /> proprietà e <see cref="P:System.Web.UI.Control.ViewStateMode" /> proprietà per indicare se si utilizza lo stato di visualizzazione nel controllo. Utilizzare il <see cref="P:System.Web.UI.Control.IsViewStateEnabled" /> proprietà e <see cref="P:System.Web.UI.Control.ViewStateMode" /> proprietà nel codice per determinare se lo stato di visualizzazione è abilitato per il controllo e per tutti i contenitori.</para>
        </block>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="P:System.Web.UI.Control.ViewStateMode" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public event EventHandler Load;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Load" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Load" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Load As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Load;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Viene generato quando il controllo server è caricato nell'oggetto <see cref="T:System.Web.UI.Page" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Notifica al controllo del server di eseguire le operazioni di elaborazione che vengono impostate per ogni richiesta di pagina. È possibile accedere a informazioni sullo stato di visualizzazione e Web form dati inviati da questo evento. È possibile accedere anche altri controlli server nella gerarchia dei controlli della pagina.  
  
> [!NOTE]
>  Se si imposta un modello personalizzato in un controllo durante la `Page_Load` eventi, i valori di testo dei controlli figlio nel modello personalizzato andranno persi. Questo errore si verifica perché i valori del form sono già stati caricati.  
  
   
  
## Examples  
 [!code-csharp[System.Web.UI.Control_Load#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_Load/CS/control_load.cs#2)]
 [!code-vb[System.Web.UI.Control_Load#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_Load/VB/control_load.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal virtual void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Oggetto <see cref="T:System.Object" /> che rappresenta lo stato del controllo da ripristinare.</param>
        <summary>Ripristina le informazioni sullo stato del controllo da una richiesta di pagina precedente salvata dal metodo <see cref="M:System.Web.UI.Control.SaveControlState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eseguire l'override di questo metodo quando è necessario specificare come un controllo server personalizzato ripristina lo stato di controllo. Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
   
  
## Examples  
 Nell'esempio di codice viene eseguito l'override di <xref:System.Web.UI.Control.LoadControlState%2A> metodo in un controllo ASP.NET personalizzato. Quando questo metodo viene richiamato, determina se lo stato del controllo è stato salvato in precedenza per il controllo e, in tal caso, imposta la proprietà interna `currentIndex` con il valore salvato.  
  
 Il <xref:System.Web.UI.Control.OnInit%2A> viene eseguito l'override di metodo per chiamare il <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> metodo il <xref:System.Web.UI.Control.Page%2A> per indicare che il controllo personalizzato utilizza lo stato del controllo.  
  
 [!code-csharp[ControlState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlState/CS/controlstatecs.aspx#1)]
 [!code-vb[ControlState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlState/VB/controlstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Oggetto <see cref="T:System.Object" /> che rappresenta lo stato del controllo da ripristinare.</param>
        <summary>Ripristina le informazioni sullo stato di visualizzazione da una richiesta di pagina precedente salvata dal metodo <see cref="M:System.Web.UI.Control.SaveViewState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene utilizzato principalmente dall'infrastruttura .NET Framework e non deve essere utilizzato direttamente dal codice. Tuttavia, gli sviluppatori di controlli possono eseguire l'override questo metodo per specificare come un controllo server personalizzato ripristina lo stato di visualizzazione. Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
   
  
## Examples  
 Nell'esempio seguente esegue l'override di <xref:System.Web.UI.Control.LoadViewState%2A> metodo per un controllo server ASP.NET personalizzato. Crea un <xref:System.Object> matrice per contenere le informazioni sullo stato di visualizzazione passate il `savedState` parametro, quindi chiama l'implementazione di base del <xref:System.Web.UI.Control.LoadViewState%2A> metodo per la prima posizione di indice della matrice. Assegna i valori archiviati in due posizioni di indice per le variabili denominate `UserText` e `PasswordText`, rispettivamente.  
  
 [!code-csharp[Control_StateManagement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#1)]
 [!code-vb[Control_StateManagement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewStateByID">
      <MemberSignature Language="C#" Value="protected bool LoadViewStateByID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadViewStateByID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.LoadViewStateByID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property LoadViewStateByID As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool LoadViewStateByID { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il controllo prende parte al caricamento del proprio stato di visualizzazione tramite <see cref="P:System.Web.UI.Control.ID" /> anziché tramite l'indice.</summary>
        <value>
          <see langword="true" /> se il controllo carica il proprio stato di visualizzazione tramite <see cref="P:System.Web.UI.Control.ID" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, quando un controllo padre carica lo stato di visualizzazione nei controlli figlio creati, questo avviene la posizione di ogni controllo figlio del controllo padre <xref:System.Web.UI.Control.Controls%2A> insieme. Quando lo stato di visualizzazione viene inizialmente applicato, è possibile che tutti i controlli figlio non sono stati creati. In questo caso, lo stato di visualizzazione per i controlli non ancora creati viene salvato e applicato quando i controlli figlio vengono creati in un secondo momento.  
  
 Per un controllo padre applicare lo stato di visualizzazione per i controlli figlio, è necessario soddisfare due condizioni:  
  
-   Durante il postback, il controllo padre deve creare i controlli figlio nello stesso ordine della richiesta precedente in modo che l'ordine dei controlli di coerenza.  
  
-   Dopo il postback, i controlli figlio creati devono essere aggiunti alla fine della finestra del controllo padre <xref:System.Web.UI.Control.Controls%2A> insieme.  
  
 Se queste due condizioni non vengono soddisfatte, come nel caso di creazione ritardata di un controllo figlio, il controllo padre può caricare lo stato di visualizzazione tramite <xref:System.Web.UI.Control.ID%2A>. Per impostare il <xref:System.Web.UI.Control.LoadViewStateByID%2A> proprietà `true`, utilizzare il <xref:System.Web.UI.ViewStateModeByIdAttribute> attributo dei metadati per il controllo padre.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.ViewStateModeByIdAttribute" />
      </Docs>
    </Member>
    <Member MemberName="MapPathSecure">
      <MemberSignature Language="C#" Value="protected internal string MapPathSecure (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance string MapPathSecure(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.MapPathSecure(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function MapPathSecure (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::String ^ MapPathSecure(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">URL relativo o relativo alla directory radice.</param>
        <summary>Recupera il percorso fisico al quale è associato un percorso virtuale, assoluto o relativo.</summary>
        <returns>Percorso fisico al file richiesto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere utilizzato solo dai controlli server che dispone delle autorizzazioni per leggere i file e che fanno parte del file DLL completamente attendibili, ad esempio System.Web.dll. Ciò aiuta a evitare violazioni della sicurezza.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Web.UI.Control.MapPathSecure%2A> per ottenere il percorso fisico della directory virtuale del contenente <xref:System.Web.UI.Page> o <xref:System.Web.UI.UserControl> oggetto.  
  
 [!code-csharp[Control_MapPathSecure#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_MapPathSecure/CS/control_templatesourcedirectory.cs#1)]
 [!code-vb[Control_MapPathSecure#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_MapPathSecure/VB/control_templatesourcedirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> è <see langword="null" /> o è una stringa vuota ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="NamingContainer">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control NamingContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control NamingContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.NamingContainer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamingContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Control ^ NamingContainer { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento al contenitore dei nomi del controllo server, che crea uno spazio dei nomi univoco per distinguere i controlli server che hanno lo stesso valore della proprietà <see cref="P:System.Web.UI.Control.ID" />.</summary>
        <value>Contenitore dei nomi del controllo server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni pagina in un'applicazione Web ASP.NET contiene una gerarchia dei controlli. Questa gerarchia non è dipendente da un controllo che genera l'errore dell'interfaccia utente visibile all'utente. Il contenitore di denominazione per un determinato controllo rappresenta il controllo padre nella gerarchia che implementa il <xref:System.Web.UI.INamingContainer> interfaccia. Un controllo server che implementa questa interfaccia consente di creare uno spazio dei nomi univoco per il <xref:System.Web.UI.Control.ID%2A> i valori delle proprietà dei controlli server figlio. È possibile utilizzare il <xref:System.Web.UI.Control.NamingContainer%2A> proprietà del controllo figlio di un contenitore di denominazione per ottenere un riferimento al contenitore padre.  
  
 Creazione di uno spazio dei nomi univoco per i controlli server è particolarmente importante quando si associano i controlli server Web ai dati, ad esempio il <xref:System.Web.UI.WebControls.Repeater> e <xref:System.Web.UI.WebControls.DataList> i controlli server. Quando più voci nell'origine dati creano più istanze di un controllo server che è un elemento figlio del controllo ripetuto, il contenitore di denominazione garantisce che ogni istanza dei controlli figlio dispone <xref:System.Web.UI.Control.UniqueID%2A> i valori delle proprietà che non siano in conflitto. Il contenitore di denominazione predefinito per una pagina è l'istanza del <xref:System.Web.UI.Page> classe che viene generato quando la pagina viene richiesta.  
  
 Il <xref:System.Web.UI.Control.ClientID%2A> proprietà contiene il valore che viene eseguito il rendering dell'elemento `id` attributo nel markup HTML. A seconda del valore assegnato al <xref:System.Web.UI.Control.ClientIDMode%2A> proprietà, il valore generato per il <xref:System.Web.UI.Control.ClientID%2A> proprietà potrebbe includere l'ID del <xref:System.Web.UI.Control.NamingContainer%2A> oggetto. Quando si imposta <xref:System.Web.UI.Control.ClientIDMode%2A> a <xref:System.Web.UI.ClientIDMode.Static>, <xref:System.Web.UI.Control.ClientID%2A> valore non include l'ID del <xref:System.Web.UI.Control.NamingContainer%2A> oggetto. Quando si imposta <xref:System.Web.UI.Control.ClientIDMode%2A> a uno <xref:System.Web.UI.ClientIDMode.AutoID> o <xref:System.Web.UI.ClientIDMode.Predictable>, il <xref:System.Web.UI.Control.ClientID%2A> valore includerà l'ID di <xref:System.Web.UI.Control.NamingContainer%2A> oggetto. Per altre informazioni, vedere [ASP.NET Web Server Control Identification](http://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7) (Identificazione del controllo server Web ASP.NET).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo di <xref:System.Web.UI.Control.NamingContainer%2A> proprietà.  
  
 [!code-aspx-csharp[Control_NamingContainer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_NamingContainer/CS/control_namingcontainer.cs.aspx#1)]
 [!code-aspx-vb[Control_NamingContainer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_NamingContainer/VB/control_namingcontainer.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.INamingContainer" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected virtual bool OnBubbleEvent (object source, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnBubbleEvent(object source, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnBubbleEvent (source As Object, args As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnBubbleEvent(System::Object ^ source, EventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Origine dell'evento.</param>
        <param name="args">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Determina se l'evento per il controllo server viene passato a un livello superiore nella gerarchia dei controlli server dell'interfaccia utente per la pagina.</summary>
        <returns>
          <see langword="true" /> se l'evento è stato annullato. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I controlli server ASP.NET, ad esempio il <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList> e <xref:System.Web.UI.WebControls.GridView> i controlli Web possono contenere controlli figlio che generano eventi. Ad esempio, ogni riga in un <xref:System.Web.UI.WebControls.GridView> controllo può contenere uno o più pulsanti creati dinamicamente dai modelli. Anziché ogni pulsante genera un singolo evento, gli eventi dei controlli annidati vengono "trasmessi", vale a dire vengono inviati al contenitore di denominazione. Il contenitore di denominazione a sua volta genera un evento generico denominato <xref:System.Web.UI.WebControls.GridView.RowCommand> con valori di parametro. Questi valori consentono di determinare il singolo controllo che ha generato l'evento originale. Rispondendo a questo evento singolo, è possibile evitare la necessità di scrivere i singoli metodi di gestione degli eventi per i controlli figlio.  
  
   
  
## Examples  
 Nell'esempio seguente esegue l'override di <xref:System.Web.UI.Control.OnBubbleEvent%2A> metodo in un controllo server ASP.NET personalizzato `ParentControl`. Questo metodo viene richiamato quando un controllo figlio di `ParentControl` chiamate di <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> metodo. In questo caso, il `ParentControl` classe scrive due stringhe per la pagina ASP.NET che lo contiene, finestra di conferma prima che il relativo <xref:System.Web.UI.Control.OnBubbleEvent%2A> metodo è stato chiamato, nella seconda viene identificato il controllo del codice sorgente del <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> metodo.  
  
 [!code-csharp[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/CS/bubble.cs#1)]
 [!code-vb[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/VB/bubble.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBinding(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.Control.DataBinding" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo notifica a un controllo server per eseguire qualsiasi logica di associazione dati che sono associati.  
  
 Se si desidera gestire il <xref:System.Web.UI.Control.DataBinding> evento, è necessario eseguire l'override di questo metodo di gestione degli eventi. In questo modo si garantisce che tutti i delegati è collegata la <xref:System.Web.UI.Control.DataBinding> evento vengono richiamati.  
  
   
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come eseguire l'override di <xref:System.Web.UI.Control.OnDataBinding%2A> metodo per aggiungere i controlli figlio del controllo padre da un'origine dati.  
  
 [!code-csharp[TemplatedDataBoundControl#3](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl/CS/templatedataboundcontrol.cs#3)]
 [!code-vb[TemplatedDataBoundControl#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl/VB/templatedataboundcontrol.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal virtual void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In ASP.NET viene chiamato questo metodo per generare il <xref:System.Web.UI.Control.Init> evento. Se si sviluppa un controllo personalizzato, è possibile eseguire l'override di questo metodo per fornire un'ulteriore elaborazione. Se si esegue l'override di questo metodo, chiamare il controllo di base <xref:System.Web.UI.Control.OnInit%2A> metodo per notificare ai sottoscrittori dell'evento.  
  
   
  
## Examples  
 [!code-csharp[System.Web.UI.Control_Context_OnInit_ResolveUrl#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/CS/control1.cs#3)]
 [!code-vb[System.Web.UI.Control_Context_OnInit_ResolveUrl#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/VB/control1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> contenente i dati evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.Control.Load" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In ASP.NET viene chiamato questo metodo per generare il <xref:System.Web.UI.Control.Load> evento. Se si sviluppa un controllo personalizzato, è possibile eseguire l'override di questo metodo per fornire un'ulteriore elaborazione. Se si esegue l'override di questo metodo, chiamare il controllo di base <xref:System.Web.UI.Control.OnLoad%2A> metodo per notificare ai sottoscrittori dell'evento.  
  
   
  
## Examples  
 [!code-csharp[Control_OnUnload#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_OnUnload/CS/control_onunload.cs#3)]
 [!code-vb[Control_OnUnload#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_OnUnload/VB/control_onunload.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.Control.PreRender" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In ASP.NET viene chiamato questo metodo per generare il <xref:System.Web.UI.Control.PreRender> evento. Se si sviluppa un controllo personalizzato, è possibile eseguire l'override di questo metodo per fornire un'ulteriore elaborazione. Se si esegue l'override di questo metodo, chiamare il controllo di base <xref:System.Web.UI.Control.OnPreRender%2A> metodo per notificare ai sottoscrittori dell'evento.  
  
   
  
## Examples  
 [!code-csharp[Control_Sample_1_snipper#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1_snipper/CS/control_sample_1.cs#1)]
 [!code-vb[Control_Sample_1_snipper#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1_snipper/VB/control_sample_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal virtual void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnUnload(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.Control.Unload" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In ASP.NET viene chiamato questo metodo per generare il <xref:System.Web.UI.Control.Unload> evento. Se si sviluppa un controllo personalizzato, è possibile eseguire l'override di questo metodo per fornire un'ulteriore elaborazione. Se si esegue l'override di questo metodo, chiamare il controllo di base <xref:System.Web.UI.Control.OnUnload%2A> metodo per notificare ai sottoscrittori dell'evento.  
  
   
  
## Examples  
 [!code-csharp[Control_OnUnload#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_OnUnload/CS/control_onunload.cs#2)]
 [!code-vb[Control_OnUnload#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_OnUnload/VB/control_onunload.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.Unload" />
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="protected internal System.IO.Stream OpenFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.IO.Stream OpenFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OpenFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function OpenFile (path As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::IO::Stream ^ OpenFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso del file desiderato.</param>
        <summary>Ottiene un oggetto <see cref="T:System.IO.Stream" /> utilizzato per leggere un file.</summary>
        <returns>Oggetto <see cref="T:System.IO.Stream" /> che fa riferimento al file desiderato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.OpenFile%2A> metodo restituisce un <xref:System.IO.Stream> oggetto che può essere usato per leggere il contenuto del file specificato nel `path` parametro. Il parametro di percorso può essere entrambi un valore relativo o URL radice senza un protocollo (ad esempio "~ / /sito/file.txt), o un percorso fisico, locale ("c:\mySite\myFile.txt") o UNC ("\\\myServer\myFile.txt ").  
  
 Il <xref:System.Web.UI.Control.OpenFile%2A> metodo utilizza sicurezza dall'accesso di file per controllare l'accesso al file specificato. Se l'utente corrente di ASP.NET non ha accesso al file, quindi non è possibile aprire il file e un <xref:System.Web.HttpException> eccezione viene generata per indicare che l'accesso è stato negato. Se il `path` parametro è specificato un percorso relativo, l'eccezione non include informazioni sul percorso fisico del file richiesto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">L'accesso al file specificato è stato negato.</exception>
        <altmember cref="T:System.IO.FileStream" />
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Page Page { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page Page" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Page" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Page As Page" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Page ^ Page { System::Web::UI::Page ^ get(); void set(System::Web::UI::Page ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento all'istanza <see cref="T:System.Web.UI.Page" /> che contiene il controllo server.</summary>
        <value>Istanza <see cref="T:System.Web.UI.Page" /> che contiene il controllo server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Valore di questa proprietà corrisponda al nome del file con estensione aspx che contiene il controllo del server.  
  
   
  
## Examples  
 Nell'esempio seguente il metodo <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> viene sottoposto a override. Usa il <xref:System.Web.UI.Page> proprietà a cui accedere il <xref:System.Web.UI.Page.IsPostBack%2A?displayProperty=nameWithType> proprietà e determinare se la pagina che contiene questo controllo è stata caricata per la prima volta o è il risultato di un postback.  
  
 [!code-csharp[Control_Sample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample/CS/controlclass_samples.cs#1)]
 [!code-vb[Control_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample/VB/controlclass_samples.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il controllo è un controllo <see cref="T:System.Web.UI.WebControls.Substitution" />.</exception>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Parent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Control ^ Parent { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento al controllo padre del controllo server nella gerarchia dei controlli della pagina.</summary>
        <value>Riferimento al controllo padre del controllo server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni volta che viene richiesta una pagina, viene creata una gerarchia dei controlli server nella pagina. Questa proprietà consente di determinare il controllo padre del controllo del server corrente in tale gerarchia e per il programma.  
  
   
  
## Examples  
 Nell'esempio seguente imposta un nuovo <xref:System.Web.UI.Control> oggetto in una pagina, `myControl1`, il controllo specificato in un <xref:System.Web.UI.Control.FindControl%2A> chiamata al metodo. Se la chiamata restituisce un controllo, il codice Usa il <xref:System.Web.UI.Control.Parent%2A> proprietà per identificare il controllo contenente `myControl1`. Se il controllo padre esiste, la stringa "l'elemento padre della casella di testo è" viene concatenato con il <xref:System.Web.UI.Control.ID%2A> proprietà del controllo padre e scrivere il <xref:System.Web.UI.Control.Page%2A>. Se non viene trovato alcun controllo padre, la stringa "controllo non trovato" viene scritto.  
  
 [!code-csharp[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/CS/control_parent.cs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/VB/control_parent.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreRender">
      <MemberSignature Language="C#" Value="public event EventHandler PreRender;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreRender" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.PreRender" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreRender As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreRender;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo il caricamento dell'oggetto <see cref="T:System.Web.UI.Control" /> ma prima del rendering.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare questo evento per eseguire eventuali aggiornamenti prima che il controllo server viene eseguito il rendering della pagina. Eventuali modifiche nello stato di visualizzazione del controllo del server possono essere salvate durante questo evento. Vengono salvate le modifiche apportate nella fase di rendering.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseBubbleEvent">
      <MemberSignature Language="C#" Value="protected void RaiseBubbleEvent (object source, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseBubbleEvent(object source, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseBubbleEvent (source As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseBubbleEvent(System::Object ^ source, EventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Origine dell'evento.</param>
        <param name="args">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Assegna eventuali origini dell'evento e relative informazioni al controllo padre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I controlli server ASP.NET, ad esempio il <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList> e <xref:System.Web.UI.WebControls.GridView> i controlli Web possono contenere controlli figlio che generano eventi. Ad esempio, ogni riga in un <xref:System.Web.UI.WebControls.GridView> controllo può contenere uno o più pulsanti creati dinamicamente dai modelli. Anziché ogni pulsante genera un singolo evento, gli eventi dei controlli annidati vengono "trasmessi", vale a dire sono inviati al padre controllo. L'elemento padre a sua volta genera un evento generico denominato <xref:System.Web.UI.WebControls.GridView.RowCommand> con valori di parametro. Questi valori consentono di determinare il singolo controllo che ha generato l'evento originale. Rispondendo a questo evento singolo, è possibile evitare la necessità di scrivere i singoli metodi di gestione degli eventi per i controlli figlio.  
  
 Mentre è possibile eseguire l'override di questo metodo, mediante i controlli possano gestire o generare eventi propagati eseguendo l'override di <xref:System.Web.UI.Control.OnBubbleEvent%2A> metodo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare una classe personalizzata, `ChildControl`, l'override di <xref:System.Web.UI.WebControls.Button.OnClick%2A?displayProperty=nameWithType> metodo da chiamare il <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> metodo che invia il <xref:System.Web.UI.WebControls.Button.Click?displayProperty=nameWithType> eventi al proprio controllo server ASP.NET padre. Quando l'utente fa clic su un pulsante in una pagina ASP.NET che include un'istanza di `ChildControl`, genera il <xref:System.Web.UI.Control.OnBubbleEvent%2A> metodo nel controllo padre che contiene l'istanza di `ChildControl` e scrive la stringa "The ChildControl class OnClick, metodo chiamato"alla pagina.  
  
 [!code-csharp[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/CS/bubble.cs#2)]
 [!code-vb[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/VB/bubble.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RemovedControl">
      <MemberSignature Language="C#" Value="protected internal virtual void RemovedControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RemovedControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RemovedControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RemovedControl(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Oggetto <see cref="T:System.Web.UI.Control" /> rimosso.</param>
        <summary>Chiamato dopo che un controllo figlio viene rimosso dalla raccolta <see cref="P:System.Web.UI.Control.Controls" /> dell'oggetto <see cref="T:System.Web.UI.Control" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.RemovedControl%2A> metodo viene chiamato immediatamente dopo la rimozione di un controllo dal <xref:System.Web.UI.Control.Controls%2A> insieme.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il controllo è un controllo <see cref="T:System.Web.UI.WebControls.Substitution" />.</exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal virtual void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che riceve il contenuto del controllo server.</param>
        <summary>Invia il contenuto del controllo server a un oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> specificato che scrive il contenuto di cui eseguire il rendering nel client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante lo sviluppo di controlli server personalizzati, è possibile eseguire l'override di questo metodo per generare il contenuto di una pagina ASP.NET.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'override di <xref:System.Web.UI.Control.Render%2A> metodo. Il <xref:System.Web.UI.Control.HasControls%2A> metodo viene utilizzato per determinare se il controllo del server dispone di tutti i controlli figlio archiviati nel relativo <xref:System.Web.UI.ControlCollection> oggetto, che è possibile accedere tramite il <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> proprietà. Se <xref:System.Web.UI.Control.HasControls%2A> restituisce true e il primo controllo server nell'insieme corrisponde a testo letterale, quindi il testo viene aggiunto a una stringa HTML.  
  
 [!code-csharp[Classic Control.Render Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.Render Example/CS/source.cs#1)]
 [!code-vb[Classic Control.Render Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.Render Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal virtual void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che riceve il contenuto di cui è stato effettuato il rendering.</param>
        <summary>Invia il contenuto di un controllo figlio del controllo server a un oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> fornito, che scrive il contenuto di cui verrà effettuato il rendering sul client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo di notifica ad ASP.NET per il rendering di qualsiasi codice pagine ASP (Active Server) nella pagina. Se nella pagina è presente alcun codice ASP, questo metodo esegue il rendering di qualsiasi figlio controlli per il controllo server. Questo metodo viene chiamato dal <xref:System.Web.UI.Control.Render%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente esegue l'override di <xref:System.Web.UI.Control.RenderChildren%2A> metodo in un controllo server personalizzato. Determina se il controllo corrente ha eventuali controlli figlio relativo <xref:System.Web.UI.ControlCollection> oggetto. In caso affermativo, viene utilizzato il <xref:System.Web.UI.ControlCollection.Count%2A> proprietà per scorrere la raccolta. Che viene rilevato ogni controllo figlio, viene utilizzato il <xref:System.Web.UI.Control.RenderControl%2A> metodo per eseguire il rendering l'elemento padre, controllo e tutti i relativi controlli figlio, nella pagina che contiene.  
  
 Sottoposto a override <xref:System.Web.UI.Control.Render%2A> chiama quindi sottoposto a override <xref:System.Web.UI.Control.RenderChildren%2A> metodo.  
  
 [!code-csharp[Control_Sample_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#4)]
 [!code-vb[Control_Sample_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderControl">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce il contenuto del controllo e memorizza le informazioni della tracciatura relative al controllo se questa funzionalità è attivata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public virtual void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che riceve il contenuto del controllo.</param>
        <summary>Restituisce il contenuto del controllo server a un oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> specificato e archivia le informazioni di traccia relative al controllo se la funzionalità di traccia è abilitata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un controllo server <xref:System.Web.UI.Control.Visible%2A> è impostata su `true`, questo metodo determina se la traccia è abilitata per la pagina. In caso affermativo, archivia le informazioni di traccia associate al controllo e viene eseguito il rendering del contenuto del controllo server alla pagina.  
  
 Questo metodo viene chiamato automaticamente dalla pagina durante il rendering, ma può essere sottoposto a override dagli sviluppatori di controlli personalizzati.  
  
   
  
## Examples  
 Nell'esempio seguente esegue l'override di <xref:System.Web.UI.Control.RenderChildren%2A> metodo in un controllo server personalizzato. Determina se il controllo corrente ha eventuali controlli figlio relativo <xref:System.Web.UI.ControlCollection> oggetto. In caso affermativo, viene utilizzato il <xref:System.Web.UI.ControlCollection.Count%2A> proprietà per scorrere la raccolta. Che viene rilevato ogni controllo figlio, viene utilizzato il <xref:System.Web.UI.Control.RenderControl%2A> metodo per eseguire il rendering l'elemento figlio, controllo e tutti i relativi controlli figlio, nella pagina che contiene. Il <xref:System.Web.UI.XhtmlTextWriter> viene creata un'istanza di oggetto che viene passato a questo metodo per il <xref:System.Web.UI.Page.Render%2A> metodo.  
  
 [!code-csharp[Control_Sample_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#3)]
 [!code-vb[Control_Sample_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="protected void RenderControl (System.Web.UI.HtmlTextWriter writer, System.Web.UI.Adapters.ControlAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderControl(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.Adapters.ControlAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderControl (writer As HtmlTextWriter, adapter As ControlAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderControl(System::Web::UI::HtmlTextWriter ^ writer, System::Web::UI::Adapters::ControlAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="adapter" Type="System.Web.UI.Adapters.ControlAdapter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che riceve il contenuto del controllo.</param>
        <param name="adapter">Classe <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> che definisce il rendering.</param>
        <summary>Restituisce il contenuto del controllo server a un oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> specificato utilizzando un oggetto <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le pagine Web ASP.NET sono utilizzabili in una vasta gamma di dispositivi e browser che possono richiedere informazioni dal Web. Il <xref:System.Web.UI.Control.Adapter%2A> proprietà restituisce il <xref:System.Web.UI.Adapters.ControlAdapter> oggetto che esegue il rendering del controllo nel dispositivo richiedente o una schermata del browser.  
  
 Per ulteriori informazioni sugli adapter, vedere [dell'architettura Overview of Adaptive Control Behavior](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff).  
  
 Se un controllo server <xref:System.Web.UI.Control.Visible%2A> è impostata su `true` traccia è abilitata per la pagina, quindi vengono acquisite le informazioni di traccia associate al controllo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override di <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)" /> metodo nei controlli personalizzati, chiamare il metodo di classe di base per verificare le informazioni di traccia viene acquisite in modo corretto.</para>
        </block>
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="P:System.Web.HttpContext.Trace" />
      </Docs>
    </Member>
    <Member MemberName="RenderingCompatibility">
      <MemberSignature Language="C#" Value="public virtual Version RenderingCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version RenderingCompatibility" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.RenderingCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderingCompatibility As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ RenderingCompatibility { Version ^ get(); void set(Version ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che specifica la versione di ASP.NET con cui sarà compatibile il codice HTML di cui è stato eseguito il rendering.</summary>
        <value>La versione di ASP.NET con cui sarà compatibile il codice HTML di cui è stato eseguito il rendering.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET imposta questa proprietà sul valore di `controlRenderingCompatibilityVersion` attributo del `pages` elemento nel file Web. config. Se il `controlRenderingCompatibilityVersion` attributo non è impostato nel file Web. config, il valore predefinito è la versione corrente di ASP.NET.  
  
> [!CAUTION]
>  È una funzione di accesso set pubblica per questa proprietà, ma la funzione di accesso set supporta l'infrastruttura .NET Framework e non deve essere utilizzato direttamente dal codice. Se si imposta questo valore nel codice, l'effetto è imprevedibile.  
  
 Ogni versione di ASP.NET può eseguire il rendering HTML in modo diverso rispetto alle versioni precedenti. Ad esempio, in ASP.NET 3.5, se il <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> proprietà di un <xref:System.Web.UI.WebControls.Label> controllo `false`, per impostazione predefinita, ASP.NET esegue il rendering di un `span` elemento il cui `disabled` attributo è impostato su "disabled". In ASP.NET 4, per impostazione predefinita, il `span` elemento sottoposto a rendering con un foglio di stile (CSS) `class` attributo anziché il `disabled` attributo. Questo consente di specificare l'aspetto del controllo disabilitato, evitando il rendering di HTML non valido. (In HTML 4.0 e XHTML 1.1, il `span` elemento non supporta il `disabled` attributo.)  
  
 Un'applicazione Web può includere codice che potrebbe non funzionare correttamente se viene modificata per il rendering HTML. Per evitare questo problema, è possibile impostare il `controlRenderingCompatibilityVersion` attributo del `pages` elemento nel file Web. config per indicare quale versione precedente che si desidera mantenere la compatibilità con. Ad esempio, se si imposta la <xref:System.Web.UI.Control.RenderingCompatibility%2A> proprietà `3.5`, disattivato <xref:System.Web.UI.WebControls.Label> controllo eseguirà il rendering un `disabled` attributo e non una classe CSS.  
  
> [!NOTE]
>  La versione meno recente che è possibile impostare questa proprietà è `3.5`.  
  
 Per mantenere la compatibilità con le versioni precedenti, quando si utilizza Visual Studio per aggiornare un progetto Web per ASP.NET 4 da una versione precedente, Visual Studio imposta automaticamente il `controlRenderingCompatibilityVersion` attributo nel file Web. config per `3.5`. Se si desidera che un sito Web aggiornato per il rendering HTML utilizzando l'algoritmo che è stato introdotto in ASP.NET 4, è possibile modificare o rimuovere il `controlRenderingCompatibilityVersion` attributo.  
  
 La maggior parte dei casi, il comportamento controllato da questa proprietà è automatico e non è necessario controllare il <xref:System.Web.UI.Control.RenderingCompatibility%2A> proprietà nel codice. Tuttavia, se si utilizza un controllo personalizzato, potrebbe essere necessario includere il codice che modifica il comportamento del controllo in base all'impostazione di questa proprietà. Ad esempio, un controllo personalizzato per ASP.NET 4 potrebbe essere composta da <xref:System.Web.UI.WebControls.Label> controlli e il controllo personalizzato può specificare l'aspetto del controllo disabilitato tramite la generazione di codice JavaScript che modifica la `aspNetDisabled` classe. Questa impostazione funziona come previsto se <xref:System.Web.UI.Control.RenderingCompatibility%2A> è `4.0` o versione successiva. Tuttavia, per ottenere lo stesso effetto di quando <xref:System.Web.UI.Control.RenderingCompatibility%2A> è `3.5`, codice del controllo personalizzato è necessario impostare il controllo `CssClass` proprietà su "aspNetDisabled" quando il <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> proprietà `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
      </Docs>
    </Member>
    <Member MemberName="ResolveAdapter">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Adapters.ControlAdapter ResolveAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Adapters.ControlAdapter ResolveAdapter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ResolveAdapter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResolveAdapter () As ControlAdapter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Adapters::ControlAdapter ^ ResolveAdapter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Adapters.ControlAdapter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene l'adattatore del controllo responsabile del rendering del controllo specificato.</summary>
        <returns>Classe <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> che esegue il rendering del controllo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le pagine Web ASP.NET possono essere visualizzate in una vasta gamma di dispositivi che sono in grado di richieste di pagine dal Web. Il <xref:System.Web.UI.Control.ResolveAdapter%2A> metodo restituisce l'adattatore del controllo responsabile per il rendering del controllo nel browser o nel dispositivo che ha richiesto la pagina ASP.NET.  
  
 Il tipo di adattatore specifico restituito dipende dal tipo di discendente di <xref:System.Web.UI.Control> classe che viene eseguito il rendering.  
  
 Per ulteriori informazioni sugli adapter, vedere [dell'architettura Overview of Adaptive Control Behavior](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.Configuration.HttpCapabilitiesBase" />
      </Docs>
    </Member>
    <Member MemberName="ResolveClientUrl">
      <MemberSignature Language="C#" Value="public string ResolveClientUrl (string relativeUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveClientUrl(string relativeUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ResolveClientUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveClientUrl (relativeUrl As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ResolveClientUrl(System::String ^ relativeUrl);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IUrlResolutionService.ResolveClientUrl(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relativeUrl">URL relativo alla pagina corrente.</param>
        <summary>Ottiene un URL che può essere utilizzato dal browser.</summary>
        <returns>URL completo della risorsa specificata, adatto per essere utilizzato nel browser.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.Control.ResolveClientUrl%2A> per restituire una stringa URL utilizzabile dal client per accedere alle risorse server Web, ad esempio file di immagine, collegamenti a pagine aggiuntive e così via.  
  
> [!NOTE]
>  L'URL restituito da questo metodo è relativo alla cartella contenente il file di origine in cui il controllo viene creata un'istanza. I controlli che ereditano questa proprietà, ad esempio <xref:System.Web.UI.UserControl> e <xref:System.Web.UI.MasterPage>, verrà restituito un URL completo rispetto al controllo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeUrl" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveUrl">
      <MemberSignature Language="C#" Value="public string ResolveUrl (string relativeUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ResolveUrl(string relativeUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ResolveUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveUrl (relativeUrl As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ResolveUrl(System::String ^ relativeUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relativeUrl">URL associato alla proprietà <see cref="P:System.Web.UI.Control.TemplateSourceDirectory" />.</param>
        <summary>Converte un URL in un formato utilizzabile dal client richiedente.</summary>
        <returns>URL convertito.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il `relativeUrl` parametro contiene un URL assoluto, l'URL viene restituito invariato. Se il `relativeUrl` parametro contiene un URL relativo, che l'URL viene modificato in un URL relativo che sia corretto per il percorso della richiesta corrente, in modo che il browser è possibile risolvere l'URL.  
  
 Prendere ad esempio in considerazione i seguenti scenari:  
  
-   Un client ha richiesto una pagina ASP.NET che contiene un controllo utente che dispone di un'immagine è associata.  
  
-   La pagina ASP.NET è /Store/Page1.aspx.  
  
-   Il controllo utente si trova in /Store/UserControls/UC1.ascx.  
  
-   Il file di immagine si trova in /UserControls/Images/Image1.jpg.  
  
 Se il controllo utente passa il percorso relativo dell'immagine (vale a dire /Store/UserControls/Images/Image1.jpg) per il <xref:System.Web.UI.Control.ResolveUrl%2A> (metodo), il metodo restituirà il valore /Images/Image1.jpg.  
  
 Questo metodo Usa il <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> proprietà per ottenere l'URL assoluto. L'URL restituito può essere usata dal client.  
  
 Per ulteriori informazioni sui percorsi delle risorse in un sito Web, vedere [percorsi di progetti Web ASP.NET](http://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd).  
  
> [!NOTE]
>  Pagine Web per dispositivi mobili, solo se l'applicazione si basa su sessioni senza cookie o potrebbe ricevere richieste dal browser per dispositivi mobili che richiedono sessioni senza cookie, usando una tilde ("~") in un percorso può causare inavvertitamente la creazione di una nuova sessione e la possibile perdita dati della sessione. Per impostare una proprietà con un percorso, ad esempio "~ /*percorso"*, risolvere il percorso chiamando il <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> con un argomento, ad esempio "~ /*percorso"* prima di assegnarlo alla proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Web.UI.WebControls.Image> Web oggetto controllo server e viene utilizzato il <xref:System.Web.UI.Control.ResolveUrl%2A> metodo per impostare il percorso all'immagine, che viene archiviato dal <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> proprietà.  
  
 [!code-csharp[Control_ResolveUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_ResolveUrl/CS/control_resolveurl.cs#1)]
 [!code-vb[Control_ResolveUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_ResolveUrl/VB/control_resolveurl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Viene generato se il parametro <paramref name="relativeUrl" /> contiene <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.Control.TemplateSourceDirectory" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal virtual object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva tutte le modifiche dello stato di un controllo server apportate dopo il postback della pagina nel server.</summary>
        <returns>Restituisce lo stato corrente del controllo server. Se al controllo non è associato alcuno stato, questo metodo restituisce <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.UI.Control.SaveControlState%2A> per salvare le informazioni sullo stato necessarie per l'operazione di un controllo specifico. Questo dati sullo stato del controllo vengono archiviati separatamente dai dati dello stato di visualizzazione del controllo.  
  
 Controlli personalizzati usando lo stato del controllo devono chiamare il <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> metodo il <xref:System.Web.UI.Control.Page%2A> prima di salvare lo stato del controllo.  
  
   
  
## Examples  
 Nell'esempio di codice viene eseguito l'override di <xref:System.Web.UI.Control.SaveControlState%2A> metodo in un controllo ASP.NET personalizzato. Quando questo metodo viene richiamato, determina se la proprietà interna `currentIndex` è impostato su un valore non predefinito e, in caso affermativo, Salva il valore per lo stato del controllo.  
  
 Il <xref:System.Web.UI.Control.OnInit%2A> viene eseguito l'override di metodo per chiamare il <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> metodo il <xref:System.Web.UI.Control.Page%2A> per indicare che il controllo personalizzato utilizza lo stato del controllo.  
  
 [!code-csharp[ControlState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlState/CS/controlstatecs.aspx#1)]
 [!code-vb[ControlState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlState/VB/controlstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando viene salvato lo stato del controllo, un oggetto stringa viene restituito al client come una variabile che viene archiviata in un elemento HTML <see langword="HIDDEN" /> elemento. Eseguire l'override di questo metodo per estrarre le informazioni di stato da utilizzare nel controllo.  
  
 Lo stato del controllo è destinato a piccole quantità di dati critici, ad esempio una parola chiave o un indice di pagina. Utilizzo dello stato di controllo per grandi quantità di dati può influire negativamente sulle prestazioni della pagina. Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Salva eventuali modifiche dello stato di visualizzazione di un controllo server apportate dopo il postback della pagina nel server.</summary>
        <returns>Restituisce lo stato di visualizzazione corrente del controllo server. Se al controllo non è associato alcuno stato di visualizzazione, questo metodo restituisce <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lo stato di visualizzazione è costituito da tutti i valori delle proprietà di un controllo server. Questi valori vengono inseriti automaticamente nel controllo del server <xref:System.Web.UI.Control.ViewState%2A> proprietà, che è un'istanza del <xref:System.Web.UI.StateBag> classe. Valore di questa proprietà viene quindi inserito in un oggetto stringa dopo il salvataggio dello stato fase del ciclo di vita del controllo server. Per ulteriori informazioni, vedere [Panoramica del ciclo di vita della pagina ASP.NET](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).  
  
 Quando viene salvato lo stato di visualizzazione, l'oggetto stringa viene restituito al client come una variabile che viene archiviata in un elemento HTML `HIDDEN` elemento. Quando si crea un controllo server personalizzata con uno stato di visualizzazione personalizzato, lo stato di visualizzazione può essere gestito in modo esplicito con il <xref:System.Web.UI.Control.SaveViewState%2A> e <xref:System.Web.UI.Control.LoadViewState%2A> metodi. Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce). Per informazioni sull'implementazione di un provider di stato sessione personalizzato, vedere [implementando un Provider di archivio dello stato sessione](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
   
  
## Examples  
 Nell'esempio seguente esegue l'override di <xref:System.Web.UI.Control.SaveViewState%2A> metodo in un controllo server ASP.NET personalizzato. Quando questo metodo viene richiamato, determina se il controllo dispone di tutti i controlli figlio e se tale <xref:System.Web.UI.Page> oggetto è il risultato di un postback. Se entrambi sono true, verrà modificato il <xref:System.Web.UI.WebControls.Label.Text%2A> proprietà di un <xref:System.Web.UI.WebControls.Label> leggere controllo server Web `Custom Control Has Saved State`. Quindi Salva lo stato di visualizzazione del controllo come una matrice di oggetti, denominato `allStates`.  
  
 [!code-csharp[Control_StateManagement#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#2)]
 [!code-vb[Control_StateManagement#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected virtual void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">Oggetto <see cref="T:System.Collections.IDictionary" /> che contiene i dati della fase di progettazione per il controllo.</param>
        <summary>Imposta i dati della fase di progettazione per un controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.SetDesignModeState%2A> metodo salva i dati in fase di progettazione per un controllo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>È necessario eseguire l'override di questo metodo per salvare i dati in fase di progettazione che richiede il controllo.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetRenderMethodDelegate">
      <MemberSignature Language="C#" Value="public void SetRenderMethodDelegate (System.Web.UI.RenderMethod renderMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRenderMethodDelegate(class System.Web.UI.RenderMethod renderMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRenderMethodDelegate(System::Web::UI::RenderMethod ^ renderMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderMethod" Type="System.Web.UI.RenderMethod" />
      </Parameters>
      <Docs>
        <param name="renderMethod">Informazioni necessarie da passare al delegato per l'esecuzione del rendering del controllo server.</param>
        <summary>Assegna un delegato del gestore eventi per eseguire il rendering del controllo server e del relativo contenuto nel controllo padre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene fornito solo a fini di implementazione non si deve mai essere chiamato direttamente.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetTraceData">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta i dati di traccia per la traccia durante la fase di progettazione dei dati di rendering.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetTraceData">
      <MemberSignature Language="C#" Value="public void SetTraceData (object traceDataKey, object traceDataValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTraceData(object traceDataKey, object traceDataValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetTraceData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTraceData (traceDataKey As Object, traceDataValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTraceData(System::Object ^ traceDataKey, System::Object ^ traceDataValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="traceDataKey" Type="System.Object" />
        <Parameter Name="traceDataValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="traceDataKey">Chiave dei dati di traccia.</param>
        <param name="traceDataValue">Valore dei dati di traccia.</param>
        <summary>Imposta i dati di traccia per la traccia durante la fase di progettazione dei dati di rendering, utilizzando la chiave dei dati di traccia e il valore dei dati di traccia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTraceData">
      <MemberSignature Language="C#" Value="public void SetTraceData (object tracedObject, object traceDataKey, object traceDataValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTraceData(object tracedObject, object traceDataKey, object traceDataValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTraceData (tracedObject As Object, traceDataKey As Object, traceDataValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTraceData(System::Object ^ tracedObject, System::Object ^ traceDataKey, System::Object ^ traceDataValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tracedObject" Type="System.Object" />
        <Parameter Name="traceDataKey" Type="System.Object" />
        <Parameter Name="traceDataValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="tracedObject">Oggetto tracciato.</param>
        <param name="traceDataKey">Chiave dei dati di traccia.</param>
        <param name="traceDataValue">Valore dei dati di traccia.</param>
        <summary>Imposta i dati di traccia per la traccia durante la fase di progettazione dei dati di rendering, utilizzando l'oggetto tracciato, la chiave dei dati di traccia e il valore dei dati di traccia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Site" />
      <MemberSignature Language="VB.NET" Value="Public Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene informazioni sul contenitore del controllo corrente quando viene eseguito il rendering in un'area di progettazione.</summary>
        <value>Oggetto <see cref="T:System.ComponentModel.ISite" /> che contiene informazioni sul contenitore che ospita il controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Associa un sito di un <xref:System.ComponentModel.Component> l'oggetto in un <xref:System.ComponentModel.Container> dell'oggetto e consente la comunicazione tra i due. Fornisce inoltre un modo per il contenitore gestire i relativi componenti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il controllo è un controllo <see cref="T:System.Web.UI.WebControls.Substitution" />.</exception>
        <altmember cref="T:System.ComponentModel.ISite" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public virtual string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'interfaccia personalizzata da applicare al controllo.</summary>
        <value>Nome dell'interfaccia personalizzata da applicare al controllo. Il valore predefinito è <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le interfacce disponibili per un controllo sono contenute in uno o più file di interfaccia in una directory dei temi. Il <xref:System.Web.UI.Control.SkinID%2A> proprietà specifica quale di queste interfacce da applicare al controllo. Un'interfaccia è specifica per un determinato controllo. non è possibile condividere le impostazioni dell'interfaccia tra i controlli di tipi diversi.  
  
 Se non si imposta la <xref:System.Web.UI.Control.SkinID%2A> proprietà, un controllo utilizza l'interfaccia predefinita se ne è stata definita. Ad esempio, se un'interfaccia senza un ID è definito per un <xref:System.Web.UI.WebControls.Image> controllare, tale interfaccia verrà applicata a tutti <xref:System.Web.UI.WebControls.Image> controlli che non fa riferimento in modo esplicito un'interfaccia in base all'ID e che non sono impostati per disattivare i temi. Se è definita un'interfaccia con un ID per un <xref:System.Web.UI.WebControls.Image> controllare, tale interfaccia verrà applicata solo a <xref:System.Web.UI.WebControls.Image> controlli la cui <xref:System.Web.UI.Control.SkinID%2A> è impostata su tale ID.  
  
 Se i file di interfaccia in una directory di tema non contengono un'interfaccia con l'oggetto specificato <xref:System.Web.UI.Control.SkinID%2A> proprietà, un <xref:System.ArgumentException> viene generata l'eccezione in fase di esecuzione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il foglio di stile è già stato applicato.  
  
 \- oppure -  
  
 L'evento <see langword="Page_PreInit" /> si è già verificato.  
  
 \- oppure -  
  
 Il controllo è già stato aggiunto all'insieme <see langword="Controls" />.</exception>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlBuilderAccessor.ControlBuilder">
      <MemberSignature Language="C#" Value="System.Web.UI.ControlBuilder System.Web.UI.IControlBuilderAccessor.ControlBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlBuilder System.Web.UI.IControlBuilderAccessor.ControlBuilder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ControlBuilder As ControlBuilder Implements IControlBuilderAccessor.ControlBuilder" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::ControlBuilder ^ System.Web.UI.IControlBuilderAccessor.ControlBuilder { System::Web::UI::ControlBuilder ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IControlBuilderAccessor.ControlBuilder</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Web.UI.IControlBuilderAccessor.ControlBuilder" />.</summary>
        <value>La classe <see cref="T:System.Web.UI.ControlBuilder" /> che ha compilato il controllo oppure <see langword="null" />, se non è stato utilizzato un generatore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.Control> a un'interfaccia <xref:System.Web.UI.IControlBuilderAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.GetDesignModeState">
      <MemberSignature Language="C#" Value="System.Collections.IDictionary IControlDesignerAccessor.GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Function GetDesignModeState () As IDictionary Implements IControlDesignerAccessor.GetDesignModeState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionary ^ System.Web.UI.IControlDesignerAccessor.GetDesignModeState() = System::Web::UI::IControlDesignerAccessor::GetDesignModeState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState" />.</summary>
        <returns>Interfaccia <see cref="T:System.Collections.IDictionary" /> dello stato del controllo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.Control> a un'interfaccia <xref:System.Web.UI.IControlDesignerAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.SetDesignModeState">
      <MemberSignature Language="C#" Value="void IControlDesignerAccessor.SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IControlDesignerAccessor.SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub SetDesignModeState (data As IDictionary) Implements IControlDesignerAccessor.SetDesignModeState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System::Collections::IDictionary ^ data) = System::Web::UI::IControlDesignerAccessor::SetDesignModeState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">Oggetto <see cref="T:System.Collections.IDictionary" /> che contiene i dati della fase di progettazione per il controllo.</param>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.Control> a un'interfaccia <xref:System.Web.UI.IControlDesignerAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.SetOwnerControl">
      <MemberSignature Language="C#" Value="void IControlDesignerAccessor.SetOwnerControl (System.Web.UI.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IControlDesignerAccessor.SetOwnerControl(class System.Web.UI.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Sub SetOwnerControl (owner As Control) Implements IControlDesignerAccessor.SetOwnerControl" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System::Web::UI::Control ^ owner) = System::Web::UI::IControlDesignerAccessor::SetOwnerControl;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="owner">Proprietario del controllo.</param>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System.Web.UI.Control)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.Control> a un'interfaccia <xref:System.Web.UI.IControlDesignerAccessor>.  
  
 Il <xref:System.Web.UI.IControlDesignerAccessor> interfaccia viene utilizzata una finestra di progettazione controlli per eseguire azioni in fase di progettazione del controllo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="owner" /> è impostato sul controllo corrente.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.UserData">
      <MemberSignature Language="C#" Value="System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.UserData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.UserData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UserData As IDictionary Implements IControlDesignerAccessor.UserData" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::IDictionary ^ System.Web.UI.IControlDesignerAccessor.UserData { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IControlDesignerAccessor.UserData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Web.UI.IControlDesignerAccessor.UserData" />.</summary>
        <value>Interfaccia <see cref="T:System.Collections.IDictionary" /> contenente le informazioni sul controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.Control> a un'interfaccia <xref:System.Web.UI.IControlDesignerAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataBindingsAccessor.DataBindings">
      <MemberSignature Language="C#" Value="System.Web.UI.DataBindingCollection System.Web.UI.IDataBindingsAccessor.DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataBindingCollection System.Web.UI.IDataBindingsAccessor.DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataBindings As DataBindingCollection Implements IDataBindingsAccessor.DataBindings" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::DataBindingCollection ^ System.Web.UI.IDataBindingsAccessor.DataBindings { System::Web::UI::DataBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataBindingsAccessor.DataBindings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Web.UI.IDataBindingsAccessor.DataBindings" />.</summary>
        <value>Insieme di associazioni dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.Control> a un'interfaccia <xref:System.Web.UI.IDataBindingsAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataBindingsAccessor.HasDataBindings">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IDataBindingsAccessor.HasDataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IDataBindingsAccessor.HasDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasDataBindings As Boolean Implements IDataBindingsAccessor.HasDataBindings" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IDataBindingsAccessor.HasDataBindings { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataBindingsAccessor.HasDataBindings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Web.UI.IDataBindingsAccessor.HasDataBindings" />.</summary>
        <value>
          <see langword="true" /> se il controllo contiene la funzione logica di associazione dati; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.Control> a un'interfaccia <xref:System.Web.UI.IDataBindingsAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IExpressionsAccessor.Expressions">
      <MemberSignature Language="C#" Value="System.Web.UI.ExpressionBindingCollection System.Web.UI.IExpressionsAccessor.Expressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ExpressionBindingCollection System.Web.UI.IExpressionsAccessor.Expressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Expressions As ExpressionBindingCollection Implements IExpressionsAccessor.Expressions" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::ExpressionBindingCollection ^ System.Web.UI.IExpressionsAccessor.Expressions { System::Web::UI::ExpressionBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IExpressionsAccessor.Expressions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ExpressionBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Web.UI.IExpressionsAccessor.Expressions" />.</summary>
        <value>Classe <see cref="T:System.Web.UI.ExpressionBindingCollection" /> contenente gli oggetti <see cref="T:System.Web.UI.ExpressionBinding" /> che rappresentano le proprietà e le espressioni per un controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.Control> a un'interfaccia <xref:System.Web.UI.IExpressionsAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IExpressionsAccessor.HasExpressions">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IExpressionsAccessor.HasExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IExpressionsAccessor.HasExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasExpressions As Boolean Implements IExpressionsAccessor.HasExpressions" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IExpressionsAccessor.HasExpressions { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IExpressionsAccessor.HasExpressions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Per una descrizione di questo membro, vedere <see cref="P:System.Web.UI.IExpressionsAccessor.HasExpressions" />.</summary>
        <value>
          <see langword="true" /> se nel controllo sono presenti proprietà impostate tramite espressioni. In caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.Control> a un'interfaccia <xref:System.Web.UI.IExpressionsAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IParserAccessor.AddParsedSubObject">
      <MemberSignature Language="C#" Value="void IParserAccessor.AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IParserAccessor.AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddParsedSubObject (obj As Object) Implements IParserAccessor.AddParsedSubObject" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IParserAccessor.AddParsedSubObject(System::Object ^ obj) = System::Web::UI::IParserAccessor::AddParsedSubObject;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto da aggiungere.</param>
        <summary>Per una descrizione di questo membro, vedere <see cref="M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.Control> a un'interfaccia <xref:System.Web.UI.IParserAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.TemplateControl TemplateControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.TemplateControl TemplateControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.TemplateControl" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateControl As TemplateControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::TemplateControl ^ TemplateControl { System::Web::UI::TemplateControl ^ get(); void set(System::Web::UI::TemplateControl ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.TemplateControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un riferimento al modello che contiene il controllo.</summary>
        <value>Istanza di <see cref="T:System.Web.UI.TemplateControl" /> che contiene il controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un <xref:System.Web.UI.Control> istanza fa parte di un modello di controllo di <xref:System.Web.UI.Control.TemplateControl%2A> proprietà contiene un riferimento al controllo contenitore. Per ulteriori informazioni, vedere il <xref:System.Web.UI.TemplateControl?displayProperty=nameWithType> documentazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateSourceDirectory">
      <MemberSignature Language="C#" Value="public virtual string TemplateSourceDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplateSourceDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.TemplateSourceDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TemplateSourceDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TemplateSourceDirectory { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la directory virtuale dell'oggetto <see cref="T:System.Web.UI.Page" /> o dell'oggetto <see cref="T:System.Web.UI.UserControl" /> che contiene il controllo server corrente.</summary>
        <value>Directory virtuale della pagina o del controllo utente che contiene il controllo server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> proprietà specifica il percorso per il controllo utente o di pagina che contiene il controllo corrente. Se, ad esempio, la pagina Web si trova in http://www.contoso.com/application/subdirectory, il <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> proprietà restituisce "application/subdirectory".  
  
 Per restituire il percorso virtuale relativo dell'applicazione ("~ / sottodirectory"), utilizzare il <xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A> proprietà.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> proprietà due volte. La prima volta che viene utilizzato in un <xref:System.Web.UI.Control.MapPathSecure%2A?displayProperty=nameWithType> chiamata al metodo per ottenere il percorso della directory in cui si trova il controllo. La seconda volta che si trova in un <xref:System.IO.Directory.GetFiles%2A?displayProperty=nameWithType> chiamata al metodo per ottenere l'elenco di tutti i file contenuti in quella directory.  
  
 [!code-csharp[Control_TemplateSourceDirectory#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_TemplateSourceDirectory/CS/control_templatesourcedirectory.cs#2)]
 [!code-vb[Control_TemplateSourceDirectory#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_TemplateSourceDirectory/VB/control_templatesourcedirectory.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.UserControl" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Attiva il rilevamento delle modifiche dello stato di visualizzazione nel controllo server per consentirne la memorizzazione nell'oggetto <see cref="T:System.Web.UI.StateBag" /> del controllo server. È possibile accedere a questo oggetto tramite la proprietà <see cref="P:System.Web.UI.Control.ViewState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene chiamato automaticamente alla fine del <xref:System.Web.UI.Control.Init> eventi del ciclo di vita del controllo server.  
  
 Richiamare questo metodo quando si sviluppano i controlli con associazione a dati basati su modelli. Questo metodo segnala ad ASP.NET di monitorare le modifiche allo stato di visualizzazione di un controllo server, è necessario quando esegue l'override di <xref:System.Web.UI.Control.DataBind%2A?displayProperty=nameWithType> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente esegue l'override di <xref:System.Web.UI.Control.DataBind%2A> metodo in un controllo server ASP.NET personalizzato. Viene innanzitutto eseguita la chiamata alla base <xref:System.Web.UI.Control.OnDataBinding%2A> (metodo) e quindi viene utilizzato il <xref:System.Web.UI.ControlCollection.Clear%2A> metodo per eliminare tutti i controlli figlio e <xref:System.Web.UI.Control.ClearChildViewState%2A> metodo per eliminare eventuali salvato le impostazioni dello stato di visualizzazione per i controlli figlio. Infine, il <xref:System.Web.UI.Control.ChildControlsCreated%2A> è impostata su `true`. Il controllo utilizza quindi la <xref:System.Web.UI.Control.IsTrackingViewState%2A> proprietà per determinare se il rilevamento delle modifiche dello stato di visualizzazione è abilitata per il controllo. Se non è abilitato, il <xref:System.Web.UI.Control.TrackViewState%2A> metodo viene chiamato.  
  
 [!code-csharp[Control_StateManagement#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#5)]
 [!code-vb[Control_StateManagement#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public virtual string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'identificatore univoco qualificato gerarchicamente per il controllo server.</summary>
        <value>Identificatore completo per il controllo server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è diverso dal <xref:System.Web.UI.Control.ID%2A> proprietà, in cui il <xref:System.Web.UI.Control.UniqueID%2A> proprietà include l'identificatore per il contenitore di denominazione del controllo del server. Questo identificatore viene generato automaticamente quando viene elaborata una richiesta di pagina.  
  
 Questa proprietà è particolarmente importante per distinguere i controlli server contenuti all'interno di un controllo server di data binding che si ripete. Il controllo ripetuto, che sono <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, e <xref:System.Web.UI.WebControls.GridView> controllo server Web (o i controlli server personalizzati creati per includere funzionalità ripetute quando i dati associati), viene utilizzato come il contenitore di denominazione per figlio controlli. Ciò significa che crea uno spazio dei nomi univoco per il relativo elemento figlio dei controlli in modo che i relativi <xref:System.Web.UI.Control.ID%2A> i valori delle proprietà non sono in conflitto.  
  
 Ad esempio, se si include un ASP.NET <xref:System.Web.UI.WebControls.Label> Web di controllo del server in un <xref:System.Web.UI.WebControls.Repeater> controllo server e assegnare il <xref:System.Web.UI.WebControls.Label> controllo un <xref:System.Web.UI.Control.ID%2A> valore della proprietà `MyLabel`e <xref:System.Web.UI.WebControls.Repeater> un <xref:System.Web.UI.Control.ID%2A> di `MyRepeater`. Se si associano dati al <xref:System.Web.UI.WebControls.Repeater> per un <xref:System.Collections.ArrayList> oggetto con tre voci, il valore risultante <xref:System.Web.UI.Control.UniqueID%2A> proprietà per ogni istanza del <xref:System.Web.UI.WebControls.Label> i controlli server sono `MyRepeater$ctl00$MyLabel`, `MyRepeater$ctl01$MyLabel`, e `MyRepeater$ctl02$MyLabel`.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un <xref:System.Collections.ArrayList> dell'oggetto e popolarla con tre stringhe di testo, quindi associa una <xref:System.Web.UI.WebControls.Repeater> i dati nel controllo server Web di <xref:System.Collections.ArrayList> quando viene caricata la pagina. Ottiene il codice di <xref:System.Web.UI.Control.UniqueID%2A> proprietà per ogni controllo figlio generato durante l'associazione dati. Il codice genera tre versioni del <xref:System.Web.UI.WebControls.Label> controllo e scrive i `UniqueID` i valori delle proprietà per la pagina.  
  
 [!code-aspx-csharp[AccessingAspNetControlsProgramaticallyConcepts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/AccessingAspNetControlsProgramaticallyConcepts/CS/WebFormsControlIdResolution12.aspx#2)]
 [!code-aspx-vb[AccessingAspNetControlsProgramaticallyConcepts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AccessingAspNetControlsProgramaticallyConcepts/VB/WebFormsControlIdResolution12.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public event EventHandler Unload;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unload" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unload As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unload;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Viene generato quando il controllo server viene scaricato dalla memoria.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I controlli server devono eseguire qualsiasi pulizia finale, ad esempio la chiusura di file, le connessioni al database e l'eliminazione di oggetti, durante questa fase del ciclo di vita controllo prima che l'istanza viene scaricata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il controllo verifica la presenza di valori potenzialmente pericolosi nell'input proveniente dal browser.</summary>
        <value>Valore che determina se il controllo verifica l'input del client. I valori includono <see cref="F:System.Web.UI.ValidateRequestMode.Disabled" />, <see cref="F:System.Web.UI.ValidateRequestMode.Enabled" /> e <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />. L'impostazione predefinita è <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />, ovvero il controllo ottiene il valore dal padre.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulla convalida richiesta, vedere <xref:System.Web.UnvalidatedRequestValues>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ViewState As StateBag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::StateBag ^ ViewState { System::Web::UI::StateBag ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un dizionario di informazioni sullo stato che permette di salvare e ripristinare lo stato di visualizzazione di un controllo server attraverso più richieste per la stessa pagina.</summary>
        <value>Istanza della classe <see cref="T:System.Web.UI.StateBag" /> che contiene le informazioni sullo stato di visualizzazione del controllo server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lo stato di visualizzazione di un controllo server è costituito da tutti i valori delle proprietà. Per conservare questi valori in tutte le richieste HTTP, i controlli server ASP.NET utilizzano questa proprietà, che è un'istanza del <xref:System.Web.UI.StateBag> (classe), per archiviare i valori delle proprietà. I valori vengono quindi passati come una variabile a un elemento input nascosto HTML quando vengono elaborate le richieste successive. Per ulteriori informazioni sul salvataggio dello stato di visualizzazione controllo server, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 Lo stato di visualizzazione è abilitato per tutti i controlli server per impostazione predefinita, ma in alcuni casi in cui si desidererà per disabilitarlo. Per ulteriori informazioni, vedere [Cenni preliminari sulle prestazioni di ASP.NET](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).  
  
 Per informazioni sui dizionari e sul loro utilizzo, vedere [raccolte e strutture di dati](http://msdn.microsoft.com/library/60cc581f-1db5-445b-ba04-a173396bf872).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come implementare un `Text` proprietà che archivia e recupera il valore dal relativo controllo <xref:System.Web.UI.Control.ViewState%2A> proprietà.  
  
 [!code-csharp[SysWebUIControlViewState#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SysWebUIControlViewState/CS/controlviewstate.cs#2)]
 [!code-vb[SysWebUIControlViewState#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SysWebUIControlViewState/VB/controlviewstate.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <Member MemberName="ViewStateIgnoresCase">
      <MemberSignature Language="C#" Value="protected virtual bool ViewStateIgnoresCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ViewStateIgnoresCase" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ViewStateIgnoresCase" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ViewStateIgnoresCase As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ViewStateIgnoresCase { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Web.UI.StateBag" /> non effettua la distinzione tra maiuscole e minuscole.</summary>
        <value>
          <see langword="true" /> se l'istanza di <see cref="T:System.Web.UI.StateBag" /> non effettua distinzione tra maiuscole e minuscole; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eseguire l'override di questo metodo se si crea un controllo server personalizzato che salva lo stato di visualizzazione senza tener conto di case. Quando si esegue in modo più oggetti con la stessa chiave, ma con maiuscole e minuscole diverse, possono essere archiviati nel <xref:System.Web.UI.StateBag> associato il <xref:System.Web.UI.Control.ViewState%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio riportato di seguito viene illustrato come eseguire l'override di <xref:System.Web.UI.Control.ViewStateIgnoresCase%2A> proprietà da restituire `true`.  
  
 [!code-csharp[System.Web.UI.Control_ViewStateIgnoresCase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/cs/controlsample_7.cs#2)]
 [!code-vb[System.Web.UI.Control_ViewStateIgnoresCase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/VB/controlsample_7.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="ViewStateMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ViewStateMode ViewStateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ViewStateMode ViewStateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ViewStateMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ViewStateMode As ViewStateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ViewStateMode ViewStateMode { System::Web::UI::ViewStateMode get(); void set(System::Web::UI::ViewStateMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ViewStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la modalità dello stato, visualizzazione di questo controllo.</summary>
        <value>Modalità dello stato, visualizzazione di questo controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Web.UI.Control.ViewStateMode%2A> proprietà per abilitare lo stato di visualizzazione per un singolo controllo, anche se lo stato di visualizzazione è disabilitato per la pagina. Per ulteriori informazioni sullo stato di visualizzazione e lo stato del controllo, vedere il <xref:System.Web.UI.Control.EnableViewState%2A> proprietà.  
  
 Per disabilitare lo stato di visualizzazione per una pagina e abilitarlo per un controllo specifico nella pagina, impostare il <xref:System.Web.UI.Control.EnableViewState%2A> proprietà della pagina e il controllo `true`, impostare il <xref:System.Web.UI.Control.ViewStateMode%2A> proprietà della pagina per <xref:System.Web.UI.ViewStateMode.Disabled>e impostare il <xref:System.Web.UI.Control.ViewStateMode%2A> proprietà del il controllo a <xref:System.Web.UI.ViewStateMode.Enabled>.  
  
 Il valore predefinito di <xref:System.Web.UI.Control.ViewStateMode%2A> proprietà per una pagina è <xref:System.Web.UI.ViewStateMode.Enabled>. Il valore predefinito di <xref:System.Web.UI.Control.ViewStateMode%2A> proprietà per un controllo server Web in una pagina è <xref:System.Web.UI.ViewStateMode.Inherit>. Di conseguenza, se non si imposta questa proprietà nella pagina o il livello di controllo, il valore della <xref:System.Web.UI.Control.EnableViewState%2A> proprietà determina il comportamento dello stato di visualizzazione.  
  
 Il <xref:System.Web.UI.Control.ViewStateMode%2A> proprietà di una pagina o un controllo ha effetto solo se il <xref:System.Web.UI.Control.EnableViewState%2A> è impostata su `true`. Se il <xref:System.Web.UI.Control.EnableViewState%2A> è impostata su `false`, lo stato di visualizzazione verrà disattivato anche se il <xref:System.Web.UI.Control.ViewStateMode%2A> è impostata su <xref:System.Web.UI.ViewStateMode.Enabled>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">È stato effettuato un tentativo di impostare questa proprietà su un valore che non fa parte dell'enumerazione <see cref="T:System.Web.UI.ViewStateMode" />.</exception>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="P:System.Web.UI.Control.IsViewStateEnabled" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public virtual bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se viene eseguito il rendering di un controllo server come interfaccia utente nella pagina.</summary>
        <value>
          <see langword="true" /> se il controllo è visibile nella pagina. In caso contrario <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se questa proprietà è `false`, non viene eseguito il controllo del server. È necessario considerare questo organizzare il layout della pagina.  
  
> [!NOTE]
>  Se non viene eseguito un controllo contenitore, tutti i controlli in esso contenuti non vengono visualizzati anche se si imposta la <xref:System.Web.UI.Control.Visible%2A> proprietà di un singolo controllo `true`. In questo caso, il singolo controllo restituisce `false` per il <xref:System.Web.UI.Control.Visible%2A> proprietà anche se è stato impostato in modo esplicito `true`. (Ovvero, se il `Visible` del controllo padre è impostata su `false`, il controllo figlio eredita questa impostazione e l'impostazione ha la precedenza su qualsiasi impostazione locale.)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>