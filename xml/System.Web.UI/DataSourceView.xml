<Type Name="DataSourceView" FullName="System.Web.UI.DataSourceView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b17fef727a6f0f1ce8e4360cebe26d6b35e5a86e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378562" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceView abstract" />
  <TypeSignature Language="F#" Value="type DataSourceView = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Funge da classe base per tutte le classi di visualizzazione origine dati, che definiscono le funzionalità dei controlli origine dati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET supporta un'architettura di associazione di dati che consente ai controlli server Web da associare ai dati in modo coerente. Controlli server Web da associare ai dati vengono definiti per i controlli associati a dati e le classi che facilitano lo che binding vengono chiamati dai controlli origine dati. I controlli origine dati possono rappresentare qualsiasi origine dati: un database relazionale, un file, un flusso, un oggetto business e così via. Origine dati consentono di controllare i dati presenti in un sistema coerente per i controlli associati a dati, indipendentemente dall'origine o formato dei dati sottostanti.  
  
 Utilizzare i controlli origine dati che vengono forniti con ASP.NET, tra cui <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, e <xref:System.Web.UI.WebControls.XmlDataSource>, per eseguire la maggior parte delle attività di sviluppo Web. Utilizzare la base <xref:System.Web.UI.DataSourceControl> e <xref:System.Web.UI.DataSourceView> controllo del codice sorgente classi quando si desidera implementare i propri dati personalizzati.  
  
 È possibile pensare a un controllo origine dati come la combinazione del <xref:System.Web.UI.IDataSource> oggetto e degli elenchi di dati, denominato viste origine dati associati. Ogni elenco di dati è rappresentato da un <xref:System.Web.UI.DataSourceView> oggetto. Il <xref:System.Web.UI.DataSourceView> classe è la classe base per tutte le viste origine dati, o elenchi di dati, associati a controlli origine dati. Viste origine dati definiscono le funzionalità di un controllo origine dati. Poiché l'archivio dati sottostante contiene uno o più elenchi di dati, un controllo origine dati è sempre associato a uno o più viste origine dati denominato. Il controllo origine dati utilizza il <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> viste attualmente associate al controllo origine dati di origine di metodo per enumerare i dati e il <xref:System.Web.UI.DataSourceControl.GetView%2A> metodo per recuperare un'istanza di vista origine dati specifica in base al nome.  
  
 Tutti i <xref:System.Web.UI.DataSourceView> oggetti supportano il recupero dei dati dall'origine dati sottostante mediante la <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> metodo. Tutte le visualizzazioni supportano facoltativamente un set di base di operazioni, incluse le operazioni, ad esempio <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>, <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>, e <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>. Un controllo associato a dati può rilevare le funzionalità di un controllo origine dati mediante il recupero di un'origine dati associata visualizzazione utilizzando il <xref:System.Web.UI.DataSourceControl.GetView%2A> e <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> metodi ed eseguendo una query sulla vista in fase di progettazione o in fase di esecuzione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come estendere il <xref:System.Web.UI.DataSourceView> classe per creare una classe di visualizzazione fortemente tipizzata per un controllo origine dati. Il `CsVDataSourceView` classe definisce le funzionalità del `CsvDataSource` controllo origine dati e fornisce un'implementazione per i controlli associati a dati per utilizzare i dati archiviati in file con valori delimitati da virgole (CSV). Per ulteriori informazioni sul `CsvDataSource` controllo origine dati, vedere il <xref:System.Web.UI.DataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.IDataSource owner, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IDataSource, viewName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceView(System::Web::UI::IDataSource ^ owner, System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceView : System.Web.UI.IDataSource * string -&gt; System.Web.UI.DataSourceView" Usage="new System.Web.UI.DataSourceView (owner, viewName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.IDataSource" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Controllo origine dati al quale è associato l'oggetto <see cref="T:System.Web.UI.DataSourceView" />.</param>
        <param name="viewName">Nome dell'oggetto <see cref="T:System.Web.UI.DataSourceView" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.DataSourceView" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="owner" /> è <see langword="null" />.  \- o -  <paramref name="viewName" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.DataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Web.UI.DataSourceView" /> associato all'oggetto <see cref="T:System.Web.UI.DataSourceControl" /> corrente supporta l'operazione <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />.</summary>
        <value>
          <see langword="true" /> se l'operazione è supportata, altrimenti <see langword="false" />. L'implementazione della classe base restituisce <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.DataSourceView.CanDelete%2A> proprietà riflette non solo una funzionalità del controllo origine dati, ma anche se è attualmente appropriata eseguire un'operazione. Ad esempio, anche se una vista origine dati supporta il <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operazione in generale, se una proprietà obbligatoria o alcuni altri dati non sono impostati, il <xref:System.Web.UI.DataSourceView.CanDelete%2A> restituisce proprietà `false`, come un'operazione di eliminazione avrà esito negativo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.DataSourceView.CanDelete%2A> proprietà e il <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> metodo in una classe che estende la <xref:System.Web.UI.DataSourceView> classe. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public virtual bool CanExecute (string commandName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(string commandName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.CanExecute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanExecute (commandName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExecute(System::String ^ commandName);" />
      <MemberSignature Language="F#" Value="abstract member CanExecute : string -&gt; bool&#xA;override this.CanExecute : string -&gt; bool" Usage="dataSourceView.CanExecute commandName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandName">Nome del comando.</param>
        <summary>Determina se è possibile eseguire il comando specificato.</summary>
        <returns>
          <see langword="true" /> se il comando può essere eseguito; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.DataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Web.UI.DataSourceView" /> associato all'oggetto <see cref="T:System.Web.UI.DataSourceControl" /> corrente supporta l'operazione <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />.</summary>
        <value>
          <see langword="true" /> se l'operazione è supportata, altrimenti <see langword="false" />. L'implementazione della classe base restituisce <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.DataSourceView.CanInsert%2A> proprietà riflette non solo una funzionalità del controllo origine dati, ma anche se è attualmente appropriata eseguire un'operazione. Ad esempio, anche se un controllo origine dati supporta il <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operazione, se un comando di inserimento o alcuni altri dati non sono impostati, il <xref:System.Web.UI.DataSourceView.CanInsert%2A> restituisce proprietà `false`, come un'operazione di inserimento avrà esito negativo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.DataSourceView.CanInsert%2A> proprietà e il <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> metodo in una classe che estende la <xref:System.Web.UI.DataSourceView> classe. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public virtual bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.DataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Web.UI.DataSourceView" /> associato all'oggetto <see cref="T:System.Web.UI.DataSourceControl" /> corrente supporta lo spostamento dei dati recuperati tramite il metodo <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />.</summary>
        <value>
          <see langword="true" /> se l'operazione è supportata, altrimenti <see langword="false" />. L'implementazione della classe base restituisce <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aggiungendo un controllo associato a dati può richiedere lo spostamento le <xref:System.Web.UI.DataSourceCapabilities.Page> campo per il <xref:System.Web.UI.DataSourceSelectArguments> oggetto passato al <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> (metodo). Se un controllo con associazione a dati richiede il paging, ma la <xref:System.Web.UI.DataSourceView.CanPage%2A> restituisce proprietà `false`, la vista origine dati genera un'eccezione.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public virtual bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Web.UI.DataSourceView" /> associato all'oggetto <see cref="T:System.Web.UI.DataSourceControl" /> corrente supporta il recupero del numero totale di righe di dati anziché dei dati.</summary>
        <value>
          <see langword="true" /> se l'operazione è supportata, altrimenti <see langword="false" />. L'implementazione della classe base restituisce <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un controllo associato a dati può richiedere un conteggio totale delle righe tramite l'aggiunta del <xref:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount?displayProperty=nameWithType> campo per il <xref:System.Web.UI.DataSourceSelectArguments?displayProperty=nameWithType> oggetto passato al <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> (metodo). Se un controllo con associazione a dati richiede un conteggio totale delle righe, ma la <xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A> restituisce proprietà `false`, la vista origine dati genera un'eccezione.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
        <altmember cref="F:System.Web.UI.DataSourceOperation.SelectCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public virtual bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.DataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Web.UI.DataSourceView" /> associato all'oggetto <see cref="T:System.Web.UI.DataSourceControl" /> corrente supporta una visualizzazione ordinata dell'origine dati sottostante.</summary>
        <value>
          <see langword="true" /> se l'operazione è supportata, altrimenti <see langword="false" />. L'implementazione predefinita restituisce <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un controllo associato a dati può richiedere l'ordinamento aggiungendo il <xref:System.Web.UI.DataSourceCapabilities.Sort> campo per il <xref:System.Web.UI.DataSourceSelectArguments> oggetto passato al <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> (metodo). Se un'associazione a dati controllo richiede l'ordinamento, ma la <xref:System.Web.UI.DataSourceView.CanSort%2A> restituisce proprietà `false`, la vista origine dati genera un'eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.DataSourceView.CanSort%2A> proprietà in una classe che estende la <xref:System.Web.UI.DataSourceView> classe. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.DataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Web.UI.DataSourceView" /> associato all'oggetto <see cref="T:System.Web.UI.DataSourceControl" /> corrente supporta l'operazione <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />.</summary>
        <value>
          <see langword="true" /> se l'operazione è supportata, altrimenti <see langword="false" />. L'implementazione predefinita restituisce <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.DataSourceView.CanUpdate%2A> proprietà riflette non solo una funzionalità del controllo origine dati, ma anche se è attualmente appropriata eseguire un'operazione. Ad esempio, anche se un controllo associato a dati supporta il <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operazione, se un comando di aggiornamento obbligatorio o alcuni altri dati non sono impostati, il <xref:System.Web.UI.DataSourceView.CanUpdate%2A> restituisce proprietà `false`, come un'operazione di aggiornamento avrà esito negativo.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.DataSourceView.CanUpdate%2A> proprietà e il <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> metodo in una classe che estende la <xref:System.Web.UI.DataSourceView> classe. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceViewChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceViewChanged : EventHandler " Usage="member this.DataSourceViewChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la visualizzazione origine dati ha subito una modifica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La modifica alla vista origine dati potrebbe essere dovuto a una modifica nei valori delle relative proprietà o a una modifica nei dati a causa di un'operazione di dati eseguita dalla vista origine dati.  
  
 Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Delete (keys As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Delete (keys, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">Insieme <see cref="T:System.Collections.IDictionary" /> delle chiavi degli oggetti o delle righe da eliminare tramite l'operazione <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />.</param>
        <param name="oldValues">Insieme <see cref="T:System.Collections.IDictionary" /> delle coppie nome/valore che rappresentano gli elementi di dati e i relativi valori originali.</param>
        <param name="callback">Delegato <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> utilizzato per notificare a un controllo con associazione a dati quando l'operazione asincrona è completata.</param>
        <summary>Esegue un'operazione di eliminazione asincrona sull'elenco di dati rappresentato dall'oggetto <see cref="T:System.Web.UI.DataSourceView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.DataSourceView.Delete%2A> metodo è l'interfaccia di eliminazione asincrona dei dati per tutti gli oggetti vista origine dati. Il <xref:System.Web.UI.DataSourceView.Delete%2A> chiamate al metodo il <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> metodo utilizzando qualsiasi `keys` e `oldValues` valori dei parametri forniti. Il `callback` parametro è un delegato che un controllo con associazione a dati passa all'origine dati controllo di visualizzazione, che viene utilizzata per notificare l'associazione a dati quando il <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operazione è stata completata. Il metodo Usa i parametri del <xref:System.Web.UI.DataSourceViewOperationCallback> delegato da restituire il numero di record interessati e qualsiasi <xref:System.Exception> eccezione generata dal <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'oggetto <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> specificato è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : System.ComponentModel.EventHandlerList" Usage="System.Web.UI.DataSourceView.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un elenco di delegati del gestore eventi per la visualizzazione origine dati.</summary>
        <value>L'elenco dei delegati del gestore eventi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà è di tipo <xref:System.ComponentModel.EventHandlerList>, che usa un algoritmo di ricerca lineare per trovare le voci dell'elenco di delegati. Un algoritmo di ricerca lineare è inefficiente quando si lavora con un numero elevato di voci. Pertanto, quando si dispone di un elenco di grandi dimensioni, la ricerca di voci con questa proprietà sarà lente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Esegue il comando specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteCommand (commandName, keys, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="commandName">Nome del comando.</param>
        <param name="keys">Dizionario di chiavi di oggetto o di riga su cui agire.</param>
        <param name="values">Dizionario di coppie nome/valore che rappresentano gli elementi di dati e i relativi valori.</param>
        <summary>Esegue il comando specificato.</summary>
        <returns>Numero di elementi interessati dall'operazione.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.ExecuteCommand (commandName, keys, values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="commandName">Nome del comando.</param>
        <param name="keys">Dizionario di chiavi di oggetto o di riga su cui agire.</param>
        <param name="values">Dizionario di coppie nome/valore che rappresentano gli elementi di dati e i relativi valori.</param>
        <param name="callback">Un oggetto <see cref="T:System.Web.UI.DataSourceViewOperationCallback" />.</param>
        <summary>Esegue il comando specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo non restituisce valori.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Insieme <see cref="T:System.Collections.IDictionary" /> delle chiavi degli oggetti o delle righe da eliminare tramite l'operazione <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />.</param>
        <param name="oldValues">Insieme <see cref="T:System.Collections.IDictionary" /> delle coppie nome/valore che rappresentano gli elementi di dati e i relativi valori originali.</param>
        <summary>Esegue un'operazione di eliminazione sull'elenco di dati rappresentato dall'oggetto <see cref="T:System.Web.UI.DataSourceView" />.</summary>
        <returns>Il numero di elementi eliminati dall'archivio dati sottostante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlli con associazione a dati possono determinare se il <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operazione è supportata da un controllo origine dati recuperando il <xref:System.Web.UI.DataSourceView> utilizzando il <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> metodo e il controllo il <xref:System.Web.UI.DataSourceView.CanDelete%2A> proprietà.  
  
 Il `keys` parametro rappresenta le chiavi degli oggetti o delle righe dei dati da eliminare. Per le origini dati che rappresentano dati relazionali, ad esempio il <xref:System.Web.UI.WebControls.SqlDataSource> (controllo), il `keys` parametro è una raccolta di chiavi primarie del database. In altri scenari, il `keys` parametro è una raccolta di coppie nome/valore e viene utilizzato per filtrare un elenco di dati. Tutti i dati corrispondenti a una coppia nome/valore viene eliminati.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.DataSourceView> implementazione predefinita della classe consiste nel generare un <xref:System.NotSupportedException> (eccezione). Se si estende la <xref:System.Web.UI.DataSourceView> classe, eseguire l'override di <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> metodo se la classe supporta l'eliminazione dalla risorsa di archiviazione dati sottostante.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come una classe che estende la <xref:System.Web.UI.DataSourceView> classe può eseguire l'override di <xref:System.Web.UI.DataSourceView.CanDelete%2A> proprietà e il <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> (metodo). Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">L'operazione <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> non è supportata dall'oggetto <see cref="T:System.Web.UI.DataSourceView" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanDelete" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteInsert : System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">Insieme <see cref="T:System.Collections.IDictionary" /> delle coppie nome/valore utilizzate durante un'operazione di inserimento.</param>
        <summary>Esegue un'operazione di inserimento sull'elenco di dati rappresentato dall'oggetto <see cref="T:System.Web.UI.DataSourceView" />.</summary>
        <returns>Il numero di elementi inseriti nell'archivio dati sottostante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlli con associazione a dati possono determinare se il <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operazione è supportata da un controllo origine dati recuperando il <xref:System.Web.UI.DataSourceView> utilizzando il <xref:System.Web.UI.DataSourceControl.GetView%2A> metodo e il controllo il <xref:System.Web.UI.DataSourceView.CanInsert%2A> proprietà.  
  
 Il `values` parametro è un set di coppie nome/valore che rappresenta le colonne di dati o i campi e valori corrispondenti da inserire.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.DataSourceView> implementazione predefinita della classe consiste nel generare un <xref:System.NotSupportedException> (eccezione). Se si estende la <xref:System.Web.UI.DataSourceView> classe, eseguire l'override di <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> metodo se la classe supporta l'inserimento dell'archivio dati sottostante.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come una classe che estende la <xref:System.Web.UI.DataSourceView> classe può eseguire l'override di <xref:System.Web.UI.DataSourceView.CanInsert%2A> proprietà e il <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> (metodo). Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">L'operazione <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> non è supportata dall'oggetto <see cref="T:System.Web.UI.DataSourceView" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanInsert" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="dataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Oggetto <see cref="T:System.Web.UI.DataSourceSelectArguments" /> utilizzato per richiedere l'esecuzione di operazioni aggiuntive sui dati oltre al recupero dati di base.</param>
        <summary>Ottiene un elenco di dati dall'archivio dati sottostante.</summary>
        <returns>Un elenco <see cref="T:System.Collections.IEnumerable" /> di dati presenti nell'archivio dati sottostante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> viene chiamato per recuperare dati dall'archivio dati sottostante e restituirlo come un <xref:System.Collections.IEnumerable> oggetto. Tutti i controlli origine dati supportano il recupero di dati dall'archivio dati sottostante, anche se non sono supportate altre operazioni come l'inserimento e l'ordinamento. Poiché un controllo associato a dati può richiedere un elenco di dati in qualsiasi momento in seguito a un <xref:System.Web.UI.IDataSource.DataSourceChanged> evento o un <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> chiamata al metodo, il recupero di dati deve essere eseguito su richiesta.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> metodo in una classe che estende la <xref:System.Web.UI.DataSourceView> classe. Il `CsvDataSourceView` apre un file con valori delimitati da virgole (CSV), analizza di una riga e crea un <xref:System.Data.DataTable> oggetto e un <xref:System.Data.DataView> oggetto per mantenere i dati in memoria. Infine, un'espressione di ordinamento viene applicata se ne viene specificato per il <xref:System.Web.UI.DataSourceSelectArguments> oggetto e il <xref:System.Data.DataView> oggetto viene restituito come un <xref:System.Collections.IEnumerable> istanza. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Insieme <see cref="T:System.Collections.IDictionary" /> delle chiavi degli oggetti o delle righe da aggiornare tramite l'operazione di aggiornamento.</param>
        <param name="values">Insieme <see cref="T:System.Collections.IDictionary" /> delle coppie nome/valore che rappresentano gli elementi di dati e i relativi nuovi valori.</param>
        <param name="oldValues">Insieme <see cref="T:System.Collections.IDictionary" /> delle coppie nome/valore che rappresentano gli elementi di dati e i relativi valori originali.</param>
        <summary>Esegue un'operazione di aggiornamento sull'elenco di dati rappresentato dall'oggetto <see cref="T:System.Web.UI.DataSourceView" />.</summary>
        <returns>Il numero di elementi aggiornati nell'archivio dati sottostante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlli con associazione a dati possono determinare se il <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operazione è supportata da un controllo origine dati utilizzando il <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> metodo per recuperare il <xref:System.Web.UI.DataSourceView> oggetto e controllando il valore della <xref:System.Web.UI.DataSourceView.CanUpdate%2A> proprietà.  
  
 Il `keys` parametro rappresenta le chiavi degli oggetti o delle righe dei dati da aggiornare. Per le origini dati che rappresentano dati relazionali, ad esempio il <xref:System.Web.UI.WebControls.SqlDataSource> (controllo), il `keys` parametro è una raccolta di chiavi primarie del database. In altri scenari, il `keys` parametro è una raccolta di coppie nome/valore e viene utilizzato per filtrare un elenco di dati. Tutti i dati corrispondenti a una coppia nome/valore viene aggiornati con i valori trovati nel `values` parametro, ovvero un set di coppie nome/valore che rappresenta i nuovi valori per colonne o campi esistenti.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.DataSourceView> implementazione predefinita della classe consiste nel generare un <xref:System.NotSupportedException> (eccezione). Se si estende la <xref:System.Web.UI.DataSourceView> classe, eseguire l'override di <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> metodo se la classe supporta l'aggiornamento dei dati nell'archivio dati sottostante.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come una classe che estende la <xref:System.Web.UI.DataSourceView> classe può eseguire l'override di <xref:System.Web.UI.DataSourceView.CanUpdate%2A> proprietà e il <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> (metodo). Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">L'operazione <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> non è supportata dall'oggetto <see cref="T:System.Web.UI.DataSourceView" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanUpdate" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Insert (values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="values">Insieme <see cref="T:System.Collections.IDictionary" /> delle coppie nome/valore utilizzate durante un'operazione di inserimento.</param>
        <param name="callback">Delegato <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> utilizzato per notificare a un controllo con associazione a dati quando l'operazione asincrona è completata.</param>
        <summary>Esegue un'operazione di inserimento asincrona sull'elenco di dati rappresentato dall'oggetto <see cref="T:System.Web.UI.DataSourceView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.DataSourceView.Insert%2A> metodo è l'interfaccia di inserimento dati asincrona per tutti gli oggetti vista origine dati. Il <xref:System.Web.UI.DataSourceView.Insert%2A> chiamate al metodo il <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> metodo utilizzando qualsiasi `values` fornito. Il `callback` parametro è un delegato che un controllo con associazione a dati passa all'origine dati controllo di visualizzazione, che viene utilizzata per notificare l'associazione a dati quando il <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operazione è stata completata. Il metodo Usa i parametri del <xref:System.Web.UI.DataSourceViewOperationCallback> delegato da restituire il numero di record interessati e qualsiasi <xref:System.Exception> eccezione generata dal <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> chiamata al metodo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'oggetto <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> specificato è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.DataSourceView.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome della visualizzazione origine dati.</summary>
        <value>Il nome eventualmente assegnato all'oggetto <see cref="T:System.Web.UI.DataSourceView" />. Il valore predefinito è <see cref="F:System.String.Empty" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceViewChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceViewChanged : EventArgs -&gt; unit" Usage="dataSourceView.OnDataSourceViewChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> metodo notifica a un controllo associato a dati che l'origine dati sottostante è stato modificato e che il controllo deve riassociare ed eseguire le operazioni necessarie. In genere, il <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> metodo viene chiamato quando viene modificata una proprietà della vista origine dati.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="abstract member RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit&#xA;override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="dataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">Uno dei valori di <see cref="T:System.Web.UI.DataSourceCapabilities" /> confrontato con le funzionalità supportate dalla visualizzazione.</param>
        <summary>Viene chiamato dal metodo <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> per confrontare le funzionalità richieste per un'operazione <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> con quelle supportate dalla visualizzazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError%2A> metodo viene utilizzato dalla vista origine dati per esaminare tutte le funzionalità richieste da un controllo associato a dati, rappresentato dal <xref:System.Web.UI.DataSourceSelectArguments> oggetto passato per il <xref:System.Web.UI.DataSourceView.Select%2A> metodo e confronto per le funzionalità supportata dai dati vista di origine.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La visualizzazione origine dati non supporta la funzionalità dell'origine dati specificata.</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(class System.Web.UI.DataSourceSelectArguments arguments, class System.Web.UI.DataSourceViewSelectCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (arguments As DataSourceSelectArguments, callback As DataSourceViewSelectCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Web::UI::DataSourceSelectArguments ^ arguments, System::Web::UI::DataSourceViewSelectCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit&#xA;override this.Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit" Usage="dataSourceView.Select (arguments, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewSelectCallback" />
      </Parameters>
      <Docs>
        <param name="arguments">Oggetto <see cref="T:System.Web.UI.DataSourceSelectArguments" /> utilizzato per richiedere l'esecuzione di operazioni aggiuntive sui dati oltre al recupero dati di base.</param>
        <param name="callback">Delegato <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> utilizzato per notificare a un controllo con associazione a dati quando l'operazione asincrona è completata.</param>
        <summary>Ottiene un elenco di dati dall'archivio dati sottostante in modo asincrono.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.DataSourceView.Select%2A> metodo è l'interfaccia di recupero asincrono dei dati per tutti gli oggetti vista origine dati. Il <xref:System.Web.UI.DataSourceView.Select%2A> chiamate al metodo il <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> , passando qualsiasi <xref:System.Web.UI.DataSourceSelectArguments> fornito. Il `callback` parametro è un delegato che un controllo con associazione a dati passa all'origine dati controllo di visualizzazione, che viene utilizzata per notificare l'associazione a dati quando il <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> operazione è stata completata. I dati restituiti dal <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> viene restituita nel parametro della chiamata il <xref:System.Web.UI.DataSourceViewSelectCallback> delegare.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'oggetto <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> specificato è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewSelectCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Update (keys, values, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">Insieme <see cref="T:System.Collections.IDictionary" /> delle chiavi degli oggetti o delle righe da aggiornare tramite l'operazione di aggiornamento.</param>
        <param name="values">Insieme <see cref="T:System.Collections.IDictionary" /> delle coppie nome/valore che rappresentano gli elementi di dati e i relativi nuovi valori.</param>
        <param name="oldValues">Insieme <see cref="T:System.Collections.IDictionary" /> delle coppie nome/valore che rappresentano gli elementi di dati e i relativi valori originali.</param>
        <param name="callback">Delegato <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> utilizzato per notificare a un controllo con associazione a dati quando l'operazione asincrona è completata.</param>
        <summary>Esegue un'operazione di aggiornamento asincrona sull'elenco di dati rappresentato dall'oggetto <see cref="T:System.Web.UI.DataSourceView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.DataSourceView.Update%2A> metodo è l'interfaccia di modifica dati asincrona per tutti gli oggetti vista origine dati. Il <xref:System.Web.UI.DataSourceView.Update%2A> chiamate al metodo il <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> metodo utilizzando qualsiasi `keys`, `values`, e `oldValues` valori dei parametri forniti. Il `callback` parametro è un delegato che un controllo con associazione a dati passa all'origine dati controllo di visualizzazione, che viene utilizzata per notificare l'associazione a dati quando il <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operazione è stata completata. Il metodo Usa i parametri del <xref:System.Web.UI.DataSourceViewOperationCallback> delegato da restituire il numero di record interessati e qualsiasi <xref:System.Exception> eccezione generata dal <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> chiamare.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'oggetto <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> specificato è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>