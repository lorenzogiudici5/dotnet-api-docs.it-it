<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HtmlTextWriter.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac512a77ea598c1fb3af16632e6711c2fe49de157af.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12a77ea598c1fb3af16632e6711c2fe49de157af</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes markup characters and text to an ASP.NET server control output stream.</source>
          <target state="translated">Scrive caratteri di markup e testo in un flusso di output di un controllo server ASP.NET.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</source>
          <target state="translated">Questa classe fornisce le funzionalità di formattazione utilizzate dai controlli server ASP.NET per il rendering di markup sui client.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is used to render HTML 4.0 to desktop browsers.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe viene utilizzata per eseguire il rendering HTML 4.0 nei browser desktop.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> is also the base class for all markup writers in the <ph id="ph2">&lt;xref:System.Web.UI&gt;</ph> namespace, including the <ph id="ph3">&lt;xref:System.Web.UI.ChtmlTextWriter&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.Html32TextWriter&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.XhtmlTextWriter&gt;</ph> classes.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> è anche la classe base per tutti i writer di markup nel <ph id="ph2">&lt;xref:System.Web.UI&gt;</ph> dello spazio dei nomi, inclusi il <ph id="ph3">&lt;xref:System.Web.UI.ChtmlTextWriter&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.Html32TextWriter&gt;</ph>, e <ph id="ph5">&lt;xref:System.Web.UI.XhtmlTextWriter&gt;</ph> classi.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>These classes are used to write the elements, attributes, and style and layout information for different types of markup.</source>
          <target state="translated">Queste classi vengono utilizzate per scrivere elementi, attributi e le informazioni di stile e layout per diversi tipi di markup.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</source>
          <target state="translated">Inoltre, queste classi vengono utilizzate dalle classi adapter pagine e controlli associati a ogni linguaggio di markup.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</source>
          <target state="translated">Nella maggior parte dei casi, ASP.NET utilizza automaticamente il writer appropriato per il dispositivo richiedente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the <ph id="ph1">`controlAdapters`</ph> section of the application .browser file.</source>
          <target state="translated">Tuttavia, se si crea un writer di testo personalizzato o se si desidera specificare un determinato writer per eseguire il rendering di una pagina per un dispositivo specifico, è necessario associare il writer alla pagina di <ph id="ph1">`controlAdapters`</ph> sezione del file con estensione browser dell'applicazione.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> method of a custom control that is derived from the <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> metodo di un controllo personalizzato derivato dalla <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The code example illustrates how to use various <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> methods, properties, and fields.</source>
          <target state="translated">L'esempio di codice viene illustrato come usare vari <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> metodi, proprietà e campi.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> instance that renders the markup content.</source>
          <target state="translated">Istanza <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> che esegue il rendering del contenuto del markup.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class that uses a default tab string.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> che utilizza una stringa di tabulazioni predefinita.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant when indentation of a line is necessary.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> costruttore utilizza il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> costante quando è necessario il rientro di una riga.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>It calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> overload to initialize the new instance.</source>
          <target state="translated">Chiama il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> eseguire l'overload per inizializzare la nuova istanza.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor to create a custom <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object named <ph id="ph3">`StyledLabelHtmlWriter.`</ph> When the <ph id="ph4">`MyPage`</ph> custom class, which is derived from the <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> class, is requested by a client browser, it uses the <ph id="ph6">`StyledLabelHtmlWriter`</ph> class to render its content to the output stream.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> costruttore per creare un oggetto personalizzato <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> oggetto denominato <ph id="ph3">`StyledLabelHtmlWriter.`</ph> quando il <ph id="ph4">`MyPage`</ph> classe personalizzata derivata dalla <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> classe, viene richiesto da un client browser, viene utilizzato il <ph id="ph6">`StyledLabelHtmlWriter`</ph> classe per visualizzare il relativo contenuto nel flusso di output.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that renders the markup content.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> che esegue il rendering del contenuto del markup.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The string to use to render a line indentation.</source>
          <target state="translated">Stringa da utilizzare per eseguire il rendering di un rientro di riga.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class with a specified tab string character.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> con un carattere di stringa di tabulazioni specificato.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> constructor uses <ph id="ph3">`tabString`</ph> when indentation of a line is necessary.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> costruttore utilizza <ph id="ph3">`tabString`</ph> quando il rientro di una riga è necessario.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>It calls the <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> base constructor to initialize the new instance.</source>
          <target state="translated">Chiama il <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> base costruttore per inizializzare la nuova istanza.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor to create a custom <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object named <ph id="ph3">`StyledLabelHtmlWriter.`</ph> When the <ph id="ph4">`MyPage`</ph> custom class, which is derived from the <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> class, is requested by a client browser, it uses the <ph id="ph6">`StyledLabelHtmlWriter`</ph> class to render its content to the output stream.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> costruttore per creare un oggetto personalizzato <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> oggetto denominato <ph id="ph3">`StyledLabelHtmlWriter.`</ph> quando il <ph id="ph4">`MyPage`</ph> classe personalizzata derivata dalla <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> classe, viene richiesto da un client browser, viene utilizzato il <ph id="ph6">`StyledLabelHtmlWriter`</ph> classe per visualizzare il relativo contenuto nel flusso di output.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Aggiunge il valore e l'attributo di markup specificato al tag di apertura dell'elemento creato dall'oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> con una chiamata successiva al metodo <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">Stringa contenente il nome dell'attributo da aggiungere.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Stringa contenente il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Aggiunge il valore e l'attributo di markup specificato al tag di apertura dell'elemento creato dall'oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> con una chiamata successiva al metodo <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> method if the attribute is not one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> values, or if the attribute is not known until run time.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> metodo se l'attributo non è uno del <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> valori, o se l'attributo non è noto in fase di esecuzione.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">Per un'istanza di qualsiasi elemento di markup dato, la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe gestisce un elenco di attributi per tale elemento.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo viene chiamato, tutti gli attributi aggiunti dal <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> metodo vengono sottoposti a rendering per il tag di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object.</source>
          <target state="translated">L'elenco di attributi viene quindi cancellato il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">Il modello di codifica per il rendering degli elementi di markup è la seguente:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> metodo per aggiungere attributi all'elemento.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Usare il metodo <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">Utilizzare altri metodi necessari per il rendering del contenuto tra l'elemento tag di apertura e chiusura.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Usare il metodo <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method before calling the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> metodo prima di chiamare il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The code calls two different overloads of <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> and two different overloads of <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> before it calls the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method to render a <ph id="ph4">`&lt;span&gt;`</ph> element to the output stream.</source>
          <target state="translated">Il codice chiama due overload diversi di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> e due overload diversi di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> prima di chiamare il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo per eseguire il rendering di un <ph id="ph4">`&lt;span&gt;`</ph> elemento nel flusso di output.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> method is used to define the custom attribute named <ph id="ph2">`CustomAttribute`</ph> and the custom value named <ph id="ph3">`CustomAttributeValue`</ph> for the <ph id="ph4">`&lt;span&gt;`</ph> element that this code renders.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> metodo viene utilizzato per definire l'attributo personalizzato denominato <ph id="ph2">`CustomAttribute`</ph> e il valore personalizzato denominato <ph id="ph3">`CustomAttributeValue`</ph> per il <ph id="ph4">`&lt;span&gt;`</ph> che questo codice esegue il rendering.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that represents the markup attribute to add to the output stream.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> che rappresenta l'attributo di markup da aggiungere al flusso di output.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Stringa contenente il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Adds the markup attribute and the attribute value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Aggiunge l'attributo di markup e il valore dell'attributo al tag di apertura dell'elemento creato dall'oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> con una chiamata successiva al metodo <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> method to render a standard markup attribute.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> metodo per eseguire il rendering di un attributo di markup standard.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">Per un'istanza di qualsiasi elemento di markup dato, la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe gestisce un elenco di attributi per tale elemento.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes that are added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo viene chiamato, tutti gli attributi vengono aggiunti per il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> metodo vengono sottoposti a rendering per il tag di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>.</source>
          <target state="translated">L'elenco di attributi viene quindi cancellato il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">Il modello di codifica per il rendering degli elementi di markup è la seguente:</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> metodo per aggiungere attributi all'elemento.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Usare il metodo <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">Utilizzare altri metodi necessari per il rendering del contenuto tra l'elemento tag di apertura e chiusura.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Usare il metodo <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> method to add an <ph id="ph3">`Onclick`</ph> attribute to a markup element, and then set its value to the following ECMAScript code:</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload del <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> metodo per aggiungere un <ph id="ph3">`Onclick`</ph> attributo a un elemento di markup e impostarne il valore per il codice ECMAScript seguente:</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">Stringa contenente il nome dell'attributo da aggiungere.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Stringa contenente il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute and its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per codificare l'attributo e il relativo valore; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method, with optional encoding.</source>
          <target state="translated">Aggiunge il valore e l'attributo di markup specificato al tag di apertura dell'elemento creato dall'oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> con una chiamata successiva del metodo <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>, con codifica aggiuntiva.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method if the attribute is not one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> values, or if the attribute is not known until run time and encoding is needed.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> metodo se l'attributo non è uno del <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> valori o se l'attributo non è noto fino alla fase di esecuzione e la codifica è necessaria.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">Per un'istanza di qualsiasi elemento di markup dato, la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe gestisce un elenco di attributi per tale elemento.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo viene chiamato, tutti gli attributi aggiunti dal <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> metodo vengono sottoposti a rendering per il tag di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object.</source>
          <target state="translated">L'elenco di attributi viene quindi cancellato il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method with <ph id="ph2">`fEncode`</ph> set to <ph id="ph3">`true`</ph>, if the attribute can possibly contain a quotation mark ("), a less than sign (&lt;), or an ampersand (&amp;).</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> metodo con <ph id="ph2">`fEncode`</ph> impostato su <ph id="ph3">`true`</ph>, se l'attributo può contenere un segno di virgolette ("), un segno di minore (&lt;), o e commerciale (&amp;).</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The method call will encode the attribute to meet the requirements of the requesting device.</source>
          <target state="translated">La chiamata al metodo verrà codificare l'attributo per soddisfare i requisiti del dispositivo richiedente.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>You can set <ph id="ph1">`fEncode`</ph> to <ph id="ph2">`false`</ph>, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</source>
          <target state="translated">È possibile impostare <ph id="ph1">`fEncode`</ph> a <ph id="ph2">`false`</ph>, se si è certi che nessuno di tali caratteri verranno generati o se si è certi che l'attributo è già codificato.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">Il modello di codifica per il rendering degli elementi di markup è la seguente:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> metodo per aggiungere attributi all'elemento.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Usare il metodo <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">Utilizzare altri metodi necessari per il rendering del contenuto tra l'elemento tag di apertura e chiusura.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Usare il metodo <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to ensure that a custom attribute, named <ph id="ph3">`myattribute`</ph>, and its value are not encoded for an <ph id="ph4">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> metodo per garantire che un attributo personalizzato, denominato <ph id="ph3">`myattribute`</ph>, e il relativo valore non vengono codificati per un <ph id="ph4">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">Stringa contenente il nome dell'attributo da aggiungere.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Stringa contenente il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that represents the attribute.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> che rappresenta l'attributo.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Adds the specified markup attribute and value, along with an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> enumeration value, to the opening tag of the element that the <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph3">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Aggiunge il valore e l'attributo di markup specificato, oltre a un valore di enumerazione <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>, al tag di apertura dell'elemento creato dall'oggetto <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> con una chiamata successiva del metodo <ph id="ph3">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29&gt;</ph> method only when inheriting from the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29&gt;</ph> metodo solo quando si eredita dalla <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>It enables you to create new <ph id="ph1">`name`</ph> and <ph id="ph2">`key`</ph> pairs for attributes.</source>
          <target state="translated">Consente di creare nuovi <ph id="ph1">`name`</ph> e <ph id="ph2">`key`</ph> coppie per gli attributi.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that represents the markup attribute to add to the output stream.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> che rappresenta l'attributo di markup da aggiungere al flusso di output.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Stringa contenente il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute and its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per codificare l'attributo e il relativo valore; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Adds the markup attribute and the attribute value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method, with optional encoding.</source>
          <target state="translated">Aggiunge l'attributo di markup e il valore dell'attributo al tag di apertura dell'elemento creato dall'oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> con una chiamata successiva del metodo <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>, con codifica facoltativa.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to render a standard markup attribute, with optional encoding.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> metodo per eseguire il rendering di un attributo di markup standard, con codifica aggiuntiva.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">Per un'istanza di qualsiasi elemento di markup dato, la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe gestisce un elenco di attributi per tale elemento.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> are rendered to the opening tag of the element.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo viene chiamato, tutti gli attributi aggiunti dal <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> vengono sottoposti a rendering per il tag di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object.</source>
          <target state="translated">L'elenco di attributi viene quindi cancellato il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method with <ph id="ph2">`fEncode`</ph> set to <ph id="ph3">`true`</ph>, if the attribute can possibly contain a quotation mark ("), a less than sign (&lt;), or an ampersand (&amp;).</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> metodo con <ph id="ph2">`fEncode`</ph> impostato su <ph id="ph3">`true`</ph>, se l'attributo può contenere un segno di virgolette ("), un segno di minore (&lt;), o e commerciale (&amp;).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The method call will encode the attribute to meet the requirements of the requesting device.</source>
          <target state="translated">La chiamata al metodo verrà codificare l'attributo per soddisfare i requisiti del dispositivo richiedente.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>You can set <ph id="ph1">`fEncode`</ph> to <ph id="ph2">`false`</ph>, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</source>
          <target state="translated">È possibile impostare <ph id="ph1">`fEncode`</ph> a <ph id="ph2">`false`</ph>, se si è certi che nessuno di tali caratteri verranno generati o se si è certi che l'attributo è già codificato.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">Il modello di codifica per il rendering degli elementi di markup è la seguente:</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> metodo per aggiungere attributi all'elemento.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Usare il metodo <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">Utilizzare altri metodi necessari per il rendering del contenuto tra l'elemento tag di apertura e chiusura.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Usare il metodo <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to ensure that the string value that is assigned to an <ph id="ph2">`Alt`</ph> attribute for an <ph id="ph3">`&lt;img&gt;`</ph> element is encoded for the requesting device.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> metodo per assicurarsi che il valore stringa che viene assegnato a un <ph id="ph2">`Alt`</ph> attributo per un <ph id="ph3">`&lt;img&gt;`</ph> elemento è stato codificato per il dispositivo richiedente.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Adds a markup style attribute to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Aggiunge un attributo di stile markup al tag di apertura dell'elemento creato dall'oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> con una chiamata successiva del metodo <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>A string that contains the style attribute to add.</source>
          <target state="translated">Stringa contenente l'attributo di stile da aggiungere.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">Stringa contenente il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Aggiunge l'attributo di stile del markup specificato e il valore dell'attributo al tag del markup di apertura creato da una chiamata successiva del metodo <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> method when the style is not a member of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeration or is not known until run time.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload del <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> quando lo stile non è un membro del metodo di <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumerazione o non è noto in fase di esecuzione.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of styles for the markup elements it renders.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe gestisce un elenco di stili per gli elementi di markup viene eseguito il rendering.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any styles that are added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo viene chiamato, tutti gli stili che vengono aggiunti per il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> metodo vengono sottoposti a rendering per il tag di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The list of styles is then cleared.</source>
          <target state="translated">Viene quindi cancellato l'elenco degli stili.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">Il modello di codifica per il rendering degli elementi di markup è la seguente:</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add any style attributes to the element.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> metodo per aggiungere gli stili di attributi all'elemento.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Usare il metodo <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use other methods as needed to render the content found between the element opening and closing tags.</source>
          <target state="translated">Utilizzare altri metodi necessari per il rendering del contenuto tra l'elemento tag di apertura e chiusura.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Usare il metodo <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> method to render <ph id="ph3">`font-size`</ph> and <ph id="ph4">`color`</ph> style attributes on a <ph id="ph5">`&lt;p&gt;`</ph> element.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> metodo per eseguire il rendering <ph id="ph3">`font-size`</ph> e <ph id="ph4">`color`</ph> gli attributi di stile in un <ph id="ph5">`&lt;p&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>This code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to render the contents of the control.</source>
          <target state="translated">Nell'esempio viene utilizzata la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe per il rendering del contenuto del controllo.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> that represents the style attribute to add to the output stream.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> che rappresenta l'attributo di stile da aggiungere al flusso di output.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">Stringa contenente il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Adds the markup style attribute associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> value and the attribute value to the opening markup tag created by a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Aggiunge l'attributo di stile markup associato al valore <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> specificato e il valore dell'attributo al tag del markup di apertura creato da una chiamata successiva del metodo <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29&gt;</ph> method when the style is a member of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeration and is known before run time.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload del <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29&gt;</ph> quando lo stile è un membro del metodo di <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumerazione ed è noto prima della fase di esecuzione.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of styles for the markup elements it renders.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe gestisce un elenco di stili per gli elementi di markup viene eseguito il rendering.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any styles added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">Quando il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo viene chiamato, qualsiasi stile aggiunto tramite il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> metodo vengono sottoposti a rendering per il tag di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The list of styles is then cleared.</source>
          <target state="translated">Viene quindi cancellato l'elenco degli stili.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">Il modello di codifica per il rendering degli elementi di markup è la seguente:</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add any style attributes to the element.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> metodo per aggiungere gli stili di attributi all'elemento.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Usare il metodo <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use other methods as needed to render the content found between the element opening and closing tags.</source>
          <target state="translated">Utilizzare altri metodi necessari per il rendering del contenuto tra l'elemento tag di apertura e chiusura.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Usare il metodo <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The following code example demonstrates how to use part of an override of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare parte di un override del <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo in una classe derivata dalla <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The code checks whether a <ph id="ph1">`&lt;Label&gt;`</ph> element is being rendered.</source>
          <target state="translated">Il codice controlla se un <ph id="ph1">`&lt;Label&gt;`</ph> elemento viene eseguito il rendering.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method is called to check whether a <ph id="ph2">`Color`</ph> style attribute has been defined for the <ph id="ph3">`&lt;Label&gt;`</ph> element.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> metodo viene chiamato per verificare se un <ph id="ph2">`Color`</ph> dell'attributo di stile è stato definito per il <ph id="ph3">`&lt;Label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>If a <ph id="ph1">`Color`</ph> attribute has not been defined, the code calls this overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add the <ph id="ph3">`Color`</ph> attribute to the style attribute, and then set its value to <ph id="ph4">`red`</ph>.</source>
          <target state="translated">Se un <ph id="ph1">`Color`</ph> non è stato definito alcun attributo, il codice chiama l'overload del <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> metodo per aggiungere il <ph id="ph3">`Color`</ph> attributo all'attributo di stile e quindi impostarne il valore su <ph id="ph4">`red`</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string that contains the style attribute to be added.</source>
          <target state="translated">Stringa contenente l'attributo di stile da aggiungere.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">Stringa contenente il valore da assegnare all'attributo.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> that represents the style attribute to add.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> che rappresenta l'attributo di stile da aggiungere.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Adds the specified markup style attribute and the attribute value, along with an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value, to the opening markup tag created by a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Aggiunge l'attributo di stile del markup specificato e il valore dell'attributo, oltre a un valore di enumerazione <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>, al markup di apertura creato da una chiamata successiva del metodo <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29&gt;</ph> method only when inheriting from the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29&gt;</ph> metodo solo quando si eredita dalla <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>It enables you to create new <ph id="ph1">`name`</ph> and <ph id="ph2">`value`</ph> pairs for <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> attributes.</source>
          <target state="translated">Consente di creare nuovi <ph id="ph1">`name`</ph> e <ph id="ph2">`value`</ph> coppie per <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> attributi.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>Notifies an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object, or an object of a derived class, that a control is about to be rendered.</source>
          <target state="translated">Notifica a un oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> o a un oggetto di una classe derivata che si sta per eseguire il rendering di un controllo.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> method has no functionality.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implementazione della classe di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> metodo non presenta alcuna funzionalità.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>You must override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> method in a class derived from <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> to provide your own rendering functionality.</source>
          <target state="translated">È necessario eseguire l'override di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> metodo in una classe derivata da <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> per fornire la funzionalità di rendering.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>For example, in a markup language that might require <ph id="ph1">`&lt;p&gt;`</ph> elements to be rendered immediately ahead of a control, but where the need for the <ph id="ph2">`&lt;p&gt;`</ph> element is determined earlier, you could use the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> override.</source>
          <target state="translated">Ad esempio, in un linguaggio di markup che potrebbe richiedere <ph id="ph1">`&lt;p&gt;`</ph> elementi da sottoporre a rendering immediatamente prima di un controllo, ma nei quali la necessità per il <ph id="ph2">`&lt;p&gt;`</ph> elemento viene determinato in precedenza, è possibile utilizzare il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> eseguire l'override.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Close">
          <source>Closes the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object and releases any system resources associated with it.</source>
          <target state="translated">Chiude l'oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> e rilascia tutte le risorse di sistema a esso associate.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Close">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType&gt;</ph> base method.</source>
          <target state="translated">Questa implementazione del <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> chiamate al metodo di <ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType&gt;</ph> metodo di base.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Close">
          <source>Following a call to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> method, any operations on the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object might throw exceptions because all its resources have been released.</source>
          <target state="translated">Segue una chiamata al <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> metodo, qualsiasi operazione sul <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> oggetto può generare eccezioni, perché sono state rilasciate tutte le relative risorse.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>Represents a single tab character.</source>
          <target state="translated">Rappresenta un singolo carattere di tabulazione.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>The single tab is represented by the ASCII 9 character.</source>
          <target state="translated">Singola scheda è rappresentata dal carattere ASCII 9.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>The following code example demonstrates how to create a constructor that takes a <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> object as a parameter and passes the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> field as a parameter argument to a second version of the constructor.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come creare un costruttore che accetta un <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> oggetto come parametro e passa il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> campo come argomento di parametro a una seconda versione del costruttore.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>When this constructor is called from code, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</source>
          <target state="translated">Quando questo costruttore viene chiamato dal codice, il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> campo definisce i criteri di rientro per l'istanza del writer di markup che viene utilizzato da una pagina o un adapter.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>Represents the quotation mark (") character.</source>
          <target state="translated">Rappresenta il carattere virgolette doppie (").</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to close an attribute.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> campo viene utilizzato il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> metodo per chiudere un attributo.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>The following code example shows how to render a <ph id="ph1">`border`</ph> attribute for a <ph id="ph2">`&lt;table&gt;`</ph> element.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come eseguire il rendering di un <ph id="ph1">`border`</ph> attributo per un <ph id="ph2">`&lt;table&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the attribute and its value and uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> fields.</source>
          <target state="translated">Il codice chiama il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo per eseguire il rendering dell'attributo e il valore e viene utilizzato il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo per eseguire il rendering di <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> e <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> campi.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Questo esempio di codice viene eseguito il rendering di markup riportato di seguito:</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object of the current context.</source>
          <target state="translated">Codifica il valore dell'attributo di markup specificato in base ai requisiti dell'oggetto <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> del contesto corrente.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>A string containing the attribute value to encode.</source>
          <target state="translated">Stringa contenente il valore dell'attributo da codificare.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per codificare il valore dell'attributo; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object of the current context.</source>
          <target state="translated">Codifica il valore dell'attributo di markup specificato in base ai requisiti dell'oggetto <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> del contesto corrente.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>A string containing the encoded attribute value, <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is empty, or the unencoded attribute value if <ph id="ph3">&lt;paramref name="fEncode" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Stringa contenente il valore dell'attributo codificato, <ph id="ph1">&lt;see langword="null" /&gt;</ph> se <ph id="ph2">&lt;paramref name="value" /&gt;</ph> è vuoto oppure il valore dell'attributo non codificato se <ph id="ph3">&lt;paramref name="fEncode" /&gt;</ph> è <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> method if the attribute is not an <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> enumeration value or is not known until run time.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> metodo se l'attributo non è un <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> valore di enumerazione o non è noto in fase di esecuzione.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> method removes double quotation marks ("), ampersands (&amp;), and less than signs (&lt;) so that invalid tags are not generated, regardless of the input.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> metodo rimuove le virgolette doppie ("), le e commerciali (&amp;) e minore di (&lt;) in modo che valido tag segni non vengono generati, indipendentemente dall'input.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>The actual encoding is performed by the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method.</source>
          <target state="translated">La codifica viene eseguita dal <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> method as a parameter in an <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method call, and then encodes a <ph id="ph3">`color:blue`</ph> style attribute value.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> metodo come parametro in un <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> chiamata al metodo e come codificare un <ph id="ph3">`color:blue`</ph> valore dell'attributo di stile.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> representing the markup attribute.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> che rappresenta l'attributo di markup.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>A string containing the attribute value to encode.</source>
          <target state="translated">Stringa contenente il valore dell'attributo da codificare.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object of the current context.</source>
          <target state="translated">Codifica il valore dell'attributo di markup specificato in base ai requisiti dell'oggetto <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> del contesto corrente.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>A string containing the encoded attribute value.</source>
          <target state="translated">Stringa contenente il valore dell'attributo codificato</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> method removes double quotation marks ("), ampersands (&amp;), and less than signs (&lt;) so that invalid tags are not generated, regardless of the input.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> metodo rimuove le virgolette doppie ("), le e commerciali (&amp;) e minore di (&lt;) in modo che valido tag segni non vengono generati, indipendentemente dall'input.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The actual encoding is performed by the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method.</source>
          <target state="translated">La codifica viene eseguita dal <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>A string containing the URL to encode.</source>
          <target state="translated">Stringa contenente l'URL da codificare.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</source>
          <target state="translated">Esegue una codifica URL minima convertendo nella stringa "%20" gli spazi presenti nell'URL specificato.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>A string containing the encoded URL.</source>
          <target state="translated">Stringa contenente l'URL codificato.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</source>
          <target state="translated">La codifica URL di un carattere è costituito da un simbolo di percentuale (%), seguito dalla rappresentazione esadecimale a due cifre (maiuscole) del punto di codice ISO-Latin per il carattere.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>The hexadecimal representation of a space is 20.</source>
          <target state="translated">La rappresentazione esadecimale di uno spazio è 20.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A&gt;</ph> method to convert any spaces in the URL that is passed as a parameter in an <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method call.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A&gt;</ph> metodo per convertire gli spazi nell'URL che viene passato come parametro in un <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> chiamata al metodo.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>Gets the encoding that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object uses to write content to the page.</source>
          <target state="translated">Ottiene la codifica utilizzata dall'oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> per scrivere il contenuto nella pagina.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> in which the markup is written to the page.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> in cui viene scritto il markup nella pagina.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> property obtains its value from the base <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> object.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> proprietà ottenga il valore dalla base <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> property to write the type of encoding that a custom control uses to render text to the page that contains it.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> proprietà da scrivere il tipo di codifica utilizzato da un controllo personalizzato per il rendering di testo nella pagina che lo contiene.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>Notifies an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object, or an object of a derived class, that a control has finished rendering.</source>
          <target state="translated">Notifica a un oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> o a un oggetto di una classe derivata che un il rendering di un controllo è completato.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>You can use this method to close any markup elements opened in the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /&gt;</ph> method.</source>
          <target state="translated">È possibile utilizzare questo metodo per chiudere gli elementi markup aperti nel metodo <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> method has no functionality.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implementazione della classe di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> metodo non presenta alcuna funzionalità.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>You must override <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to provide your own rendering functionality.</source>
          <target state="translated">È necessario eseguire l'override <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> in una classe derivata dalla <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe per fornire funzionalità di rendering.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> method to close any markup elements opened in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> method.</source>
          <target state="translated">È possibile utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> metodo per chiudere gli elementi di markup è aperto nel <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>Represents the left angle bracket and slash mark (<ph id="ph1">&amp;lt;</ph>/) of the closing tag of a markup element.</source>
          <target state="translated">Rappresenta la parentesi uncinata aperta e la barra (<ph id="ph1">&amp;lt;</ph>/) del tag di chiusura di un elemento di markup.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method to construct markup element end tags.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> campo viene utilizzato il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo per costruire i tag di fine elemento.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>The following code example shows how to render the closing tag of a <ph id="ph1">`&lt;table&gt;`</ph> markup element by using the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> fields as parameter values in calls to the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come eseguire il rendering del tag di chiusura di un <ph id="ph1">`&lt;table&gt;`</ph> elemento markup utilizzando il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> e <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> i campi come valori di parametro nelle chiamate al <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> (metodo).</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>This code example renders the following markup:</source>
          <target state="translated">Questo esempio di codice viene eseguito il rendering di markup riportato di seguito:</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">Scrive il tag di apertura di un elemento di markup contenente attributi che implementano il layout e la formattazione dei caratteri dello stile specificato.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to begin applying to the block of markup.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> che specifica l'inizio dell'applicazione del layout e della formattazione al blocco di markup.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>Writes the opening tag of a <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">Scrive il tag di apertura di un elemento <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> contenente attributi che implementano il layout e la formattazione dei caratteri dello stile specificato.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply styles, such as background color or border width, to a block of markup.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> metodo per applicare stili, ad esempio larghezza, bordo o un colore di sfondo a un blocco di markup.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> metodi consentono a un adattatore di dispositivo o un controllo creare il markup che utilizza la formattazione di carattere dello stile specificato.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">Utilizzare lo stesso valore per <ph id="ph1">`style`</ph> nel <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> metodo da utilizzare nel corrispondente <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> method renders the opening tag of a <ph id="ph3">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> metodo esegue il rendering del tag di apertura di un <ph id="ph3">`&lt;span&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>This method then adds the necessary attributes and style attributes to the opening tag of the <ph id="ph1">`&lt;span&gt;`</ph> element to display the settings specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> object.</source>
          <target state="translated">Questo metodo aggiunge quindi gli attributi e necessari gli attributi di stile per il tag di apertura del <ph id="ph1">`&lt;span&gt;`</ph> elemento per visualizzare le impostazioni specificate per il <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>If you want to render a different markup element to contain the attributes and style attributes, use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> overload.</source>
          <target state="translated">Se si desidera eseguire il rendering di un elemento di markup diversi per contenere gli attributi e gli attributi di stile, utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> rapporto di overload.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare una classe personalizzata denominata <ph id="ph1">`TextSample`</ph>, derivata dal <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> (classe), che utilizza il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> per applicare un <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> stile da una stringa di testo.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> metodo esegue il rendering HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> chiamata al metodo chiude il <ph id="ph2">`&lt;span&gt;`</ph> elemento dopo il testo è stato eseguito il rendering.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to begin applying to the block of markup.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> che specifica l'inizio dell'applicazione del layout e della formattazione al blocco di markup.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> that specifies the opening tag of the markup element that will contain the style object specified in <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> che specifica il tag di apertura dell'elemento di markup che conterrà l'oggetto stile specificato in <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">Scrive il tag di apertura di un elemento di markup contenente attributi che implementano il layout e la formattazione dei caratteri dello stile specificato.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply styles, such as background color or border width, to a block of markup.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> metodo per applicare stili, ad esempio larghezza, bordo o un colore di sfondo a un blocco di markup.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> metodi consentono a un adattatore di dispositivo o un controllo creare il markup che utilizza la formattazione di carattere dello stile specificato.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">Utilizzare lo stesso valore per <ph id="ph1">`style`</ph> nel <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> metodo da utilizzare nel corrispondente <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method renders the opening tag of the element specified by the <ph id="ph3">`tag`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> metodo esegue il rendering del tag di apertura dell'elemento specificato da di <ph id="ph3">`tag`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> object.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> metodo aggiunge quindi gli attributi e necessari gli attributi di stile al tag di apertura dell'elemento per visualizzare le impostazioni specificate per il <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> overload to render the opening tag of a <ph id="ph2">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> eseguire l'overload per il rendering del tag di apertura di un <ph id="ph2">`&lt;span&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare una classe personalizzata denominata <ph id="ph1">`TextSample`</ph>, derivata dal <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> (classe), che utilizza il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> per applicare un <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> stile da una stringa di testo.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML<ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> metodo esegue il rendering HTML<ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> chiamata al metodo chiude il <ph id="ph2">`&lt;span&gt;`</ph> elemento dopo il testo è stato eseguito il rendering.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>Represents the equal sign (<ph id="ph1">&lt;see langword="=" /&gt;</ph>).</source>
          <target state="translated">Rappresenta il segno di uguale (<ph id="ph1">&lt;see langword="=" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>You might want to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> field instead of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> field when constructing the opening delimiter of an attribute value.</source>
          <target state="translated">È possibile utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> campo anziché il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> campo quando si costruisce il delimitatore di apertura di un valore di attributo.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>The following code example shows how to render the <ph id="ph1">`src`</ph> attribute and part of its value for an <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come eseguire il rendering di <ph id="ph1">`src`</ph> attributo e parte del relativo valore per un <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>The code uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> field in a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method call to render the equal sign (=) between the <ph id="ph3">`src`</ph> attribute and its value.</source>
          <target state="translated">Il codice Usa il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> campo in un <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> chiamata al metodo per eseguire il rendering il segno di uguale (=) tra il <ph id="ph3">`src`</ph> attributo e il relativo valore.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Questo esempio di codice viene eseguito il rendering di markup riportato di seguito:</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>Represents an equal sign (=) and a double quotation mark (") together in a string (=").</source>
          <target state="translated">Rappresenta un segno di uguale (=) e un segno di virgolette doppie (") insieme in una stringa (=").</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> methods to construct the opening delimiter of attribute values.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> campo viene utilizzato il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> metodi per costruire il delimitatore di apertura dei valori di attributo.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>The following code example shows how to render a <ph id="ph1">`border`</ph> attribute for a <ph id="ph2">`&lt;table&gt;`</ph> element.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come eseguire il rendering di un <ph id="ph1">`border`</ph> attributo per un <ph id="ph2">`&lt;table&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the attribute and its value and uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> fields.</source>
          <target state="translated">Il codice chiama il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo per eseguire il rendering dell'attributo e il valore e viene utilizzato il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo per eseguire il rendering di <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> e <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> campi.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>This code example renders the following markup:</source>
          <target state="translated">Questo esempio di codice viene eseguito il rendering di markup riportato di seguito:</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the closing tag of a markup element to end the specified layout and character formatting.</source>
          <target state="translated">Scrive il tag di chiusura di un elemento di markup per terminare il layout e la formattazione dei caratteri specificati.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to close.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> che specifica il layout e la formattazione da chiudere.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>Writes the closing tag of a <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> element to end the specified layout and character formatting.</source>
          <target state="translated">Scrive il tag di chiusura di un elemento <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> per terminare il layout e la formattazione dei caratteri specificati.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> method renders the closing tag of a <ph id="ph3">`&lt;span&gt;`</ph> element after the closing tag of the control, closing the element opened by the corresponding <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> call.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> metodo esegue il rendering del tag di chiusura di un <ph id="ph3">`&lt;span&gt;`</ph> elemento dopo il tag di chiusura del controllo, chiudendo l'elemento aperto dal corrispondente <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> chiamare.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> metodi consentono a un adattatore di dispositivo o un controllo creare markup che inizia e termina un blocco usando la formattazione di carattere dello stile specificato.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">Utilizzare lo stesso valore per <ph id="ph1">`style`</ph> nel <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> metodo da utilizzare nel corrispondente <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare una classe personalizzata denominata <ph id="ph1">`TextSample`</ph>, derivata dal <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> (classe), che utilizza il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> per applicare un <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> stile da una stringa di testo.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> metodo esegue il rendering HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> chiamata al metodo chiude il <ph id="ph2">`&lt;span&gt;`</ph> elemento dopo il testo è stato eseguito il rendering.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to stop applying to the output text.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> che specifica il layout e la formattazione per arrestare l'applicazione al testo di output.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> che specifica il tag di chiusura dell'elemento di markup contenente gli attributi che applicavano lo stile specificato.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>This must match the key passed in the corresponding <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /&gt;</ph> call.</source>
          <target state="translated">Deve corrispondere alla chiave passata alla chiamata <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /&gt;</ph> corrispondente.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Writes the closing tag of the specified markup element to end the specified layout and character formatting.</source>
          <target state="translated">Scrive il tag di chiusura dell'elemento di markup specificato per terminare il layout e la formattazione dei caratteri specificati.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method renders the closing tag of the element that is specified by <ph id="ph3">`tag`</ph> after the closing tag of the control, closing the element that was opened by the corresponding <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method call.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> metodo esegue il rendering del tag di chiusura dell'elemento specificato da <ph id="ph3">`tag`</ph> dopo il tag di chiusura del controllo, chiudere l'elemento che è stato aperto dal corrispondente <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> chiamata al metodo.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> metodi consentono a un adattatore di dispositivo o un controllo creare markup che inizia e termina un blocco usando la formattazione di carattere dello stile specificato.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">Utilizzare lo stesso valore per <ph id="ph1">`style`</ph> nel <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> metodo da utilizzare nel corrispondente <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare una classe personalizzata denominata <ph id="ph1">`TextSample`</ph>, derivata dal <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> (classe), che utilizza il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> per applicare un <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> stile da una stringa di testo.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> metodo esegue il rendering HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> chiamata al metodo chiude il <ph id="ph2">`&lt;span&gt;`</ph> elemento dopo il testo è stato eseguito il rendering.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>Removes all the markup and style attributes on all properties of the page or Web server control.</source>
          <target state="translated">Rimuove tutti gli attributi markup e di stile su tutte le proprietà della pagina o del controllo server Web.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>Before attributes are rendered on a markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method is called.</source>
          <target state="translated">Prima del rendering degli attributi su un elemento di markup, il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> metodo viene chiamato.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>In turn, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> methods for each attribute and style to render.</source>
          <target state="translated">A sua volta, il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> chiamate al metodo di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> metodi per ogni attributo e lo stile per il rendering.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>The following code example shows how to use a custom class, derived from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare una classe personalizzata, derivata dal <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> (classe), che esegue l'override di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>When called, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> override checks whether the text writer renders any <ph id="ph2">`&lt;label&gt;`</ph> or <ph id="ph3">`&lt;a&gt;`</ph> elements:</source>
          <target state="translated">Quando viene chiamato, il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> override viene verificato se il writer di testo esegue il rendering <ph id="ph2">`&lt;label&gt;`</ph> o <ph id="ph3">`&lt;a&gt;`</ph> elementi:</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>If a <ph id="ph1">`&lt;label&gt;`</ph> element is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method checks whether a <ph id="ph3">`style`</ph> attribute is rendered on the element and, if not, creates a <ph id="ph4">`style`</ph> attribute and sets it to <ph id="ph5">`color: blue`</ph>.</source>
          <target state="translated">Se un <ph id="ph1">`&lt;label&gt;`</ph> viene eseguito il rendering di elemento, il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> metodo verifica se un <ph id="ph3">`style`</ph> attributo viene eseguito il rendering sull'elemento e, in caso contrario, crea un <ph id="ph4">`style`</ph> attributo e lo imposta su <ph id="ph5">`color: blue`</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>If an <ph id="ph1">`&lt;a&gt;`</ph> element is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method determines whether an <ph id="ph3">`href`</ph> attribute is included and, if not, adds an <ph id="ph4">`href`</ph> to the URL <ph id="ph5">http://www.cohowinery.com</ph>.</source>
          <target state="translated">Se un <ph id="ph1">`&lt;a&gt;`</ph> viene eseguito il rendering di elemento, il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> metodo determina se un <ph id="ph3">`href`</ph> attributo sia incluso in caso contrario, aggiunge un' <ph id="ph4">`href`</ph> all'URL <ph id="ph5">http://www.cohowinery.com</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Flush">
          <source>Clears all buffers for the current <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object and causes any buffered data to be written to the output stream.</source>
          <target state="translated">Cancella tutti i buffer per l'oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> corrente e consente la scrittura nel flusso di output dei dati memorizzati nel buffer.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Flush">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Flush%2A&gt;</ph> method just calls the <ph id="ph3">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph> base method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implementazione della classe di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Flush%2A&gt;</ph> metodo chiama semplicemente il <ph id="ph3">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph> metodo di base.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>A string that contains the attribute for which to obtain the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>.</source>
          <target state="translated">Stringa contenente l'attributo per cui ottenere l'oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>Obtains the corresponding <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> enumeration value for the specified attribute.</source>
          <target state="translated">Ottiene il valore di enumerazione <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> corrispondente per l'attributo specificato.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> enumeration value for the specified attribute; otherwise, an invalid <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> value if the attribute is not a member of the enumeration.</source>
          <target state="translated">Valore di enumerazione <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> per l'attributo specificato; in caso contrario, valore <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> non valido se l'attributo non è un membro dell'enumerazione.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>If <ph id="ph1">`attrName`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> object, is returned.</source>
          <target state="translated">Se <ph id="ph1">`attrName`</ph> è <ph id="ph2">`null`</ph> o una stringa vuota (""), o non viene trovato nella tabella di nomi di attributi, il valore -1, tipizzata a un <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> dell'oggetto, viene restituito.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>The following code example demonstrates how to use a class, derived from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare una classe, derivata dal <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> (classe), che esegue l'override di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>The override checks whether <ph id="ph1">`tagKey`</ph> is equal to the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> field, which indicates that a <ph id="ph3">`&lt;font&gt;`</ph> markup element will be rendered.</source>
          <target state="translated">I controlli di sostituzione se <ph id="ph1">`tagKey`</ph> è uguale al <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> campo, che indica che un <ph id="ph3">`&lt;font&gt;`</ph> verrà eseguito il rendering di elemento di markup.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>If so, the override calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method to find out whether the <ph id="ph2">`&lt;font&gt;`</ph> element contains a <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute.</source>
          <target state="translated">Se in tal caso, l'override chiama il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> metodo per verificare che il <ph id="ph2">`&lt;font&gt;`</ph> elemento contiene un <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attributo.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> returns <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method calls the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> method, which defines the <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> and sets its value to <ph id="ph6">`30pt`</ph>.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> restituisce <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> chiamate al metodo il <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> metodo, che definisce il <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> e imposta il valore su <ph id="ph6">`30pt`</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> to obtain the markup attribute name for.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> per il quale ottenere il nome dell'attributo di markup.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>Obtains the name of the markup attribute associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> value.</source>
          <target state="translated">Ottiene il nome dell'attributo di markup associato al valore <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the markup attribute.</source>
          <target state="translated">Stringa contenente il nome dell'attributo di markup.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> method returns an empty string (""), if <ph id="ph2">`attrKey`</ph> is not a valid <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> value.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> il metodo restituisce una stringa vuota (""), se <ph id="ph2">`attrKey`</ph> non è un valido <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> valore.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> enumeration value to its string name.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> metodo per convertire un <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> il valore di enumerazione al relativo nome di stringa.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The style attribute for which to obtain the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>.</source>
          <target state="translated">Attributo di stile per il quale ottenere l'oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>Obtains the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value for the specified style.</source>
          <target state="translated">Ottiene il valore di enumerazione <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> per lo stile specificato.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value corresponding to <ph id="ph2">&lt;paramref name="styleName" /&gt;</ph>.</source>
          <target state="translated">Valore di enumerazione <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> corrispondente a <ph id="ph2">&lt;paramref name="styleName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> method returns the value -1 typed as a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> value, if <ph id="ph3">`styleName`</ph> does not correspond to any <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeration value.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> metodo restituisce il valore -1 tipizzato come una <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> valore, se <ph id="ph3">`styleName`</ph> non corrisponde a qualsiasi <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> valore di enumerazione.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo in una classe derivata dalla <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override determines whether a <ph id="ph2">`&lt;label&gt;`</ph> markup will be rendered, and, if so, checks the element for a <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override determina se un <ph id="ph2">`&lt;label&gt;`</ph> verrà eseguito il rendering di markup e, in caso affermativo, viene verificata l'elemento per un <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attributo.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute has not been defined, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> method is used as the first parameter in a call to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add a <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute to a <ph id="ph5">`&lt;label&gt;`</ph> markup element and set the <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute to <ph id="ph7">`red`</ph>.</source>
          <target state="translated">Se un <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> non è stato definito alcun attributo, il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> metodo viene utilizzato come primo parametro in una chiamata al <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> metodo per aggiungere un <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attributo un <ph id="ph5">`&lt;label&gt;`</ph> elemento di markup e impostare il <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attributo <ph id="ph7">`red`</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> to obtain the style attribute name for.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> per il quale si desidera ottenere il nome dell'attributo di stile.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>Obtains the markup style attribute name associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value.</source>
          <target state="translated">Ottiene il nome dell'attributo di stile markup associato al valore di enumerazione <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>The style attribute name associated with the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value specified in <ph id="ph2">&lt;paramref name="styleKey" /&gt;</ph>.</source>
          <target state="translated">Nome di attributo di stile associato al valore di enumerazione di <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> specificato in <ph id="ph2">&lt;paramref name="styleKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>If <ph id="ph1">`styleKey`</ph> is not a valid <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> object, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> method returns an empty string ("").</source>
          <target state="translated">Se <ph id="ph1">`styleKey`</ph> non è un valido <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> oggetto, il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> metodo restituisce una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>The following code example shows how to check whether a <ph id="ph1">`&lt;label&gt;`</ph> element is being rendered.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come controllare se un <ph id="ph1">`&lt;label&gt;`</ph> elemento viene eseguito il rendering.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>If so, it checks whether a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> style attribute has been defined on the element.</source>
          <target state="translated">Se in tal caso, verifica se un <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> dell'attributo di stile è stato definito nell'elemento.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>If the attribute has not been defined, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method is called and the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> method converts the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> enumeration member into its string representation to pass to the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Se l'attributo non è stato definito, il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> metodo viene chiamato e <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> metodo converte il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> membro di enumerazione nella relativa rappresentazione di stringa da passare al <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The markup element for which to obtain the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>.</source>
          <target state="translated">Elemento di markup per il quale ottenere l'oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>Obtains the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value associated with the specified markup element.</source>
          <target state="translated">Ottiene il valore di enumerazione di <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> associato all'elemento di markup specificato.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value; otherwise, if <ph id="ph2">&lt;paramref name="tagName" /&gt;</ph> is not associated with a specific <ph id="ph3">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> value, <ph id="ph4">&lt;see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" /&gt;</ph>.</source>
          <target state="translated">Valore di enumerazione di <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> oppure, se <ph id="ph2">&lt;paramref name="tagName" /&gt;</ph> non è associato a un valore <ph id="ph3">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> specifico, <ph id="ph4">&lt;see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>If <ph id="ph1">`tagName`</ph> is <ph id="ph2">`null`</ph>, an empty string (""), or cannot be found in the table of markup tag names, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> method returns the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag.Unknown&gt;</ph> field.</source>
          <target state="translated">Se <ph id="ph1">`tagName`</ph> è <ph id="ph2">`null`</ph>, una stringa vuota (""), o non viene trovato nella tabella dei nomi di tag di markup, il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> metodo restituisce il <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag.Unknown&gt;</ph> campo.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The following code example shows how to override the overload of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method that takes a string as its parameter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come eseguire l'override l'overload di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo che accetta una stringa come parametro.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The string is passed to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> method, which converts it to the corresponding <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration member, and then passes that to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload that takes a <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration value as a parameter.</source>
          <target state="translated">La stringa viene passata per il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> metodo, che viene convertito in corrispondente <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> membro di enumerazione e quindi lo passa al <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload che accetta un <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> come parametro un valore di enumerazione.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> to obtain the markup element for.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> per il quale ottenere l'elemento di markup.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>Obtains the markup element associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value.</source>
          <target state="translated">Ottiene l'elemento di markup associato al valore di enumerazione di <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>A string representing the markup element.</source>
          <target state="translated">Stringa che rappresenta l'elemento di markup.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>If <ph id="ph1">`tagKey`</ph> is not a valid <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> value, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> method returns an empty string ("").</source>
          <target state="translated">Se <ph id="ph1">`tagKey`</ph> non è un valido <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> valore, il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> metodo restituisce una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example demonstrates how to close a <ph id="ph1">`&lt;font&gt;`</ph> element by using the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiudere un <ph id="ph1">`&lt;font&gt;`</ph> elemento utilizzando il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> method to convert the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> value to a string.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> chiamate al metodo di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> metodo per convertire il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> una stringa a valore.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>Gets or sets the number of tab positions to indent the beginning of each line of markup.</source>
          <target state="translated">Ottiene o imposta il numero di posizioni di tabulazione per il rientro dell'inizio di ogni riga di markup.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>The number of tab positions to indent each line.</source>
          <target state="translated">Numero di posizioni di tabulazione per il rientro di ogni riga.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>Indentation is performed by writing the string that is specified by the <ph id="ph1">`tabString`</ph> parameter of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> constructor the number of times that are specified by the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property.</source>
          <target state="translated">Rientro viene eseguito mediante la scrittura di stringa specificato dal <ph id="ph1">`tabString`</ph> parametro del <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> il numero di volte in cui vengono specificati dal costruttore di <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property is set to a negative value, it is changed to 0 before being saved.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> è impostata su un valore negativo, viene modificata su 0 prima di essere salvata.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>The following code example demonstrates how to increment the value that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property when attributes have been added to the opening tag of a <ph id="ph2">`&lt;span&gt;`</ph> element and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method has been called.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come incrementare il valore assegnato al <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> proprietà quando sono stati aggiunti gli attributi di tag di apertura di un <ph id="ph2">`&lt;span&gt;`</ph> elemento e <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo è stato chiamato.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>This increases the indentation for any markup that is rendered inside the <ph id="ph1">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">In questo modo aumenta il rientro di qualsiasi tag che viene eseguito all'interno di <ph id="ph1">`&lt;span&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>Gets or sets the text writer that writes the inner content of the markup element.</source>
          <target state="translated">Ottiene o imposta il writer di testo che scrive il contenuto interno dell'elemento di markup.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that writes the inner markup content.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> che scrive il contenuto markup interno.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>Inner markup content is the text found between the opening and closing tags of a markup language element.</source>
          <target state="translated">Contenuto markup interno è il testo racchiuso tra i tag di apertura e chiusura di un elemento di linguaggio di markup.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> property is set to a <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> object that is an instance of the <ph id="ph3">&lt;xref:System.Web.HttpWriter&gt;</ph> class, this fact is noted and a separate reference is saved.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> è impostata su un <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> oggetto che rappresenta un'istanza del <ph id="ph3">&lt;xref:System.Web.HttpWriter&gt;</ph> (classe), questo fatto è indicato e viene salvato un altro riferimento.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>The following code example shows how to use a custom Web server control, derived from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare un controllo server Web personalizzato, derivato dal <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> (classe), che esegue l'override di <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>It uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to write a <ph id="ph2">`&lt;font&gt;`</ph> element.</source>
          <target state="translated">Usa il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe per la scrittura un <ph id="ph2">`&lt;font&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>After it writes the opening tag of the element, it uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> property to write the string <ph id="ph2">`"&lt;br&gt; The time on the server:"`</ph> and concatenates this string with the value of the <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Dopo la scrittura di tag di apertura dell'elemento, viene utilizzato il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> proprietà per scrivere la stringa <ph id="ph2">`"&lt;br&gt; The time on the server:"`</ph> e concatenata con il valore della <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Determina se viene eseguito il rendering dell'attributo di markup specificato e del relativo valore durante la chiamata successiva del metodo <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associated with the markup attribute.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associato all'attributo di markup.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Determina se viene eseguito il rendering dell'attributo di markup specificato e del relativo valore durante la chiamata successiva del metodo <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se viene eseguito il rendering dell'attributo durante la chiamata successiva del metodo <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>To obtain the value to be assigned to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29&gt;</ph> overload instead of this one.</source>
          <target state="translated">Per ottenere il valore da assegnare al <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> oggetto, usare il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29&gt;</ph> eseguire invece l'overload.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The following code example shows how to use an override of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a class that inherits from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare un override del <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo in una classe che eredita dalla <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override checks whether a <ph id="ph2">`&lt;font&gt;`</ph> markup element will be rendered.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override consente di controllare se un <ph id="ph2">`&lt;font&gt;`</ph> verrà eseguito il rendering di elemento di markup.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>If so, the override calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method to check whether the <ph id="ph2">`&lt;font&gt;`</ph> element contains a <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute.</source>
          <target state="translated">Se in tal caso, l'override chiama il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> metodo per verificare se il <ph id="ph2">`&lt;font&gt;`</ph> elemento contiene un <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attributo.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>If not, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> method, which defines the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute and sets its value to <ph id="ph4">`30pt`</ph>.</source>
          <target state="translated">In caso contrario, il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> chiamate al metodo di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> metodo, che definisce il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attributo e imposta il valore su <ph id="ph4">`30pt`</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associated with the markup attribute.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associato all'attributo di markup.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>The value assigned to the attribute.</source>
          <target state="translated">Valore assegnato all'attributo.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Determina se viene eseguito il rendering dell'attributo di markup specificato e del relativo valore durante la chiamata successiva del metodo <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se viene eseguito il rendering dell'attributo durante la chiamata successiva del metodo <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, the value to be assigned to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> object is returned in the <ph id="ph4">`value`</ph> parameter.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> restituisce <ph id="ph2">`true`</ph>, il valore da assegnare al <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> oggetto viene restituito nel <ph id="ph4">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Determines whether a markup style attribute is rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Determina se viene eseguito il rendering di un attributo di stile markup durante la chiamata successiva del metodo <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associated with the attribute.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associato all'attributo.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>Determines whether the specified markup style attribute is rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Determina se viene eseguito il rendering dell'attributo di stile markup specificato durante la chiamata successiva del metodo <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute will be rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se viene eseguito il rendering dell'attributo durante la chiamata successiva del metodo <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>To get the value that will be rendered with the specified style attribute, use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method.</source>
          <target state="translated">Per ottenere il valore che verrà eseguito il rendering con l'attributo di stile specificato, utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>The following code example shows how to check whether a <ph id="ph1">`&lt;label&gt;`</ph> element is being rendered.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come controllare se un <ph id="ph1">`&lt;label&gt;`</ph> elemento viene eseguito il rendering.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method checks whether a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> style attribute has been defined on the element.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> metodo verifica se un <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> dell'attributo di stile è stato definito nell'elemento.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute has not been defined, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method defines the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute and sets its value to <ph id="ph4">`red`</ph>.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> non è stato definito alcun attributo, il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> metodo consente di definire il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attributo e imposta il valore su <ph id="ph4">`red`</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associated with the attribute.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associato all'attributo.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">Valore assegnato all'attributo di stile.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>Determines whether the specified markup style attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Determina se viene eseguito il rendering dell'attributo di stile markup specificato e del relativo valore durante la chiamata successiva del metodo <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute and its value will be rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se viene eseguito il rendering dell'attributo e del relativo valore durante la chiamata successiva del metodo <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, the value to be assigned to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> attribute is returned in the <ph id="ph4">`value`</ph> parameter.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> restituisce <ph id="ph2">`true`</ph>, il valore da assegnare al <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> attributo viene restituito nel <ph id="ph4">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>A string that contains the name of the attribute to check.</source>
          <target state="translated">Stringa contenente il nome dell'attributo da controllare.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Checks an attribute to ensure that it can be rendered in the opening tag of a <ph id="ph1">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> markup element.</source>
          <target state="translated">Controlla un attributo per assicurare che sia possibile eseguirne il rendering nel tag di apertura di un elemento di markup <ph id="ph1">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> method returns <ph id="ph3">`true`</ph> for all attributes.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implementazione della classe di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> restituisce <ph id="ph3">`true`</ph> per tutti gli attributi.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> to limit the attributes that can be rendered in the opening tag of a <ph id="ph2">`&lt;form&gt;`</ph> element.</source>
          <target state="translated">Eseguire l'override di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> per limitare gli attributi che è possono eseguire il rendering nel tag di apertura di un <ph id="ph2">`&lt;form&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Override the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /&gt;</ph> method to return <ph id="ph2">&lt;see langword="true" /&gt;</ph> only for those attributes that can be included in the <ph id="ph3">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> element of the markup for which the class derived from the <ph id="ph4">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class is intended.</source>
          <target state="translated">Eseguire l'override di <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /&gt;</ph> per restituire <ph id="ph2">&lt;see langword="true" /&gt;</ph> solo per gli attributi che possono essere inclusi nel <ph id="ph3">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> elemento di markup per il quale la classe derivata dalla <ph id="ph4">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> classe può essere utilizzata.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>Gets or sets the line terminator string used by the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object.</source>
          <target state="translated">Ottiene o imposta la stringa del terminatore di riga utilizzata dall'oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The line terminator string used by the current <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>.</source>
          <target state="translated">Stringa del terminatore di riga utilizzata dalla classe <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The default line terminator string is a carriage return, followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The line terminator string is written to the output stream whenever one of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> methods is called.</source>
          <target state="translated">Il terminatore di riga viene scritto nel flusso di output ogni volta che una del <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> metodi viene chiamato.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> property is set to <ph id="ph2">`null`</ph>, the default new line character is used.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> è impostata su <ph id="ph2">`null`</ph>, viene utilizzato il carattere di nuova riga predefinita.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The following code example shows how to use a custom class, derived from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare una classe personalizzata, derivata dal <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> (classe), che esegue l'override di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>When called, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> override checks whether the text writer renders any <ph id="ph2">`&lt;label&gt;`</ph> or <ph id="ph3">`&lt;a&gt;`</ph> elements.</source>
          <target state="translated">Quando viene chiamato, il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> override viene verificato se il writer di testo esegue il rendering <ph id="ph2">`&lt;label&gt;`</ph> o <ph id="ph3">`&lt;a&gt;`</ph> elementi.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method determines whether a style attribute is defined for the label.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> metodo determina se un attributo di stile è definito per l'etichetta.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>If no style is defined, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method sets the default value for the <ph id="ph2">`style:color`</ph> attribute to blue.</source>
          <target state="translated">Se è definito alcuno stile, la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> metodo imposta il valore predefinito per il <ph id="ph2">`style:color`</ph> attributo impostandolo sul blu.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method then uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> property to insert a line break in the markup tag and writes any other defined attributes.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> metodo utilizza quindi la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> proprietà per inserire una riga break nel tag e scrive gli altri attributi definiti.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the attribute to render.</source>
          <target state="translated">Stringa contenente il nome dell'attributo di cui eseguire il rendering.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the value that is assigned to the attribute.</source>
          <target state="translated">Stringa contenente il valore assegnato all'attributo.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associated with the markup attribute.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associato all'attributo di markup.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Determines whether the specified markup attribute and its value can be rendered to the current markup element.</source>
          <target state="translated">Determina se è possibile eseguire il rendering dell'attributo di markup specificato e del relativo valore nell'elemento di markup corrente.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implementazione della classe di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> metodo restituisce sempre <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> overrides can determine whether an attribute will be rendered to the page.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> override possono determinare se la pagina verrà visualizzato come un attributo.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute is rendered, but the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> value is not <ph id="ph3">`30pt`</ph>, the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> override calls the <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add a <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute and set its value to <ph id="ph7">`30pt`</ph>.</source>
          <target state="translated">Se un <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> viene eseguito il rendering di attributi, ma la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> valore non è <ph id="ph3">`30pt`</ph>, il <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> eseguire l'override di chiamate di <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> metodo per aggiungere un <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attributo e impostarne il valore su <ph id="ph7">`30pt`</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> method to return <ph id="ph3">&lt;see langword="false" /&gt;</ph> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup.</source>
          <target state="translated">Se si eredita dal <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> (classe), è possibile eseguire l'override di <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> per restituire <ph id="ph3">&lt;see langword="false" /&gt;</ph> per impedire che un attributo viene eseguito il rendering del tutto, viene eseguito il rendering su un particolare elemento o viene eseguito il rendering per un particolare markup.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>For example, if you do not want the object derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to render the <ph id="ph2">&lt;see langword="bgcolor" /&gt;</ph> attribute to <ph id="ph3">&lt;see langword="&amp;lt;table&amp;gt;" /&gt;</ph> elements, you can override the <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> and return <ph id="ph5">&lt;see langword="false" /&gt;</ph> when <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passes <ph id="ph7">&lt;see langword="bgcolor" /&gt;</ph> and the <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> property value is <ph id="ph9">&lt;see langword="table" /&gt;</ph>.</source>
          <target state="translated">Ad esempio, se non si desidera l'oggetto derivato da <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> per eseguire il rendering di <ph id="ph2">&lt;see langword="bgcolor" /&gt;</ph> attributo <ph id="ph3">&lt;see langword="&amp;lt;table&amp;gt;" /&gt;</ph> elementi, è possibile eseguire l'override di <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> e restituire <ph id="ph5">&lt;see langword="false" /&gt;</ph> quando <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passa <ph id="ph7">&lt;see langword="bgcolor" /&gt;</ph> e <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> valore della proprietà è <ph id="ph9">&lt;see langword="table" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string containing the name of the style attribute to render.</source>
          <target state="translated">Stringa contenente il nome dell'attributo di stile di cui eseguire il rendering.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string containing the value that is assigned to the style attribute.</source>
          <target state="translated">Stringa contenente il valore assegnato all'attributo di stile.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associated with the style attribute.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associato all'attributo di stile.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</source>
          <target state="translated">Determina se è possibile eseguire il rendering dell'attributo di stile markup specificato e del relativo valore nell'elemento di markup corrente.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implementazione della classe di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> metodo restituisce sempre <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> overrides can determine whether a style attribute will be rendered to the page.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> override possono determinare se verrà eseguito il rendering di un attributo di stile della pagina.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> style attribute is rendered, but the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> value is not <ph id="ph3">`purple`</ph>, the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> override uses the <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to set the <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute to <ph id="ph7">`purple`</ph>.</source>
          <target state="translated">Se un <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> viene eseguito il rendering dell'attributo di stile, ma la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> valore non è <ph id="ph3">`purple`</ph>, <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> eseguire l'override viene utilizzato il <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> per impostare il <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attributo <ph id="ph7">`purple`</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> method to return <ph id="ph3">&lt;see langword="false" /&gt;</ph> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language.</source>
          <target state="translated">Se si eredita dal <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> (classe), è possibile eseguire l'override di <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> per restituire <ph id="ph3">&lt;see langword="false" /&gt;</ph> per impedire che un attributo di stile viene eseguito il rendering del tutto, viene eseguito il rendering su un particolare elemento o viene eseguito il rendering per un particolare linguaggio di markup.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>For example, if you do not want the object that is derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to render the <ph id="ph2">&lt;see langword="color" /&gt;</ph> style attribute to a <ph id="ph3">&lt;see langword="&amp;lt;p&amp;gt;" /&gt;</ph> element, you can override the <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> and return <ph id="ph5">&lt;see langword="false" /&gt;</ph> when <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passes <ph id="ph7">&lt;see langword="color" /&gt;</ph> and the <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> property value is <ph id="ph9">&lt;see langword="p" /&gt;</ph>.</source>
          <target state="translated">Ad esempio, se non si desidera che l'oggetto derivato da <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> per eseguire il rendering di <ph id="ph2">&lt;see langword="color" /&gt;</ph> attributo di stile da un <ph id="ph3">&lt;see langword="&amp;lt;p&amp;gt;" /&gt;</ph> elemento, è possibile eseguire l'override di <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> e restituire <ph id="ph5">&lt;see langword="false" /&gt;</ph> quando <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passa <ph id="ph7">&lt;see langword="color" /&gt;</ph>e <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> valore della proprietà è <ph id="ph9">&lt;see langword="p" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>A string containing the name of the element to render.</source>
          <target state="translated">Stringa contenente il nome dell'elemento di cui eseguire il rendering.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> associated with the element.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> associato all'elemento.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Determines whether the specified markup element will be rendered to the requesting page.</source>
          <target state="translated">Determina se verrà eseguito il rendering dell'elemento di markup specificato nella pagina richiedente.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implementazione della classe di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> metodo restituisce sempre <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> overrides can determine whether an element will be rendered to the page.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> override possono determinare se verrà visualizzato come un elemento alla pagina.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> element is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> override uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method to determine whether a <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute is being rendered.</source>
          <target state="translated">Se un <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> viene eseguito il rendering di elemento, il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> eseguire l'override viene utilizzato il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> metodo per determinare se un <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> viene eseguito il rendering di attributi.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>If not, it uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to create a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute and set its value to <ph id="ph3">`20pt`</ph>.</source>
          <target state="translated">Se non viene utilizzato il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> metodo per creare un <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attributo e impostarne il valore su <ph id="ph3">`20pt`</ph>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> method to return <ph id="ph3">&lt;see langword="false" /&gt;</ph> to prevent a markup element from being rendered at all or for a particular markup language.</source>
          <target state="translated">Se si eredita dal <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> (classe), è possibile eseguire l'override di <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> per restituire <ph id="ph3">&lt;see langword="false" /&gt;</ph> per impedire il rendering oppure solo per un particolare linguaggio di markup di un elemento di markup.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>For example, if you do not want the object that is derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to render the <ph id="ph2">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> element, you can override the <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> method to return <ph id="ph4">&lt;see langword="false" /&gt;</ph> when a page is requested that contains a <ph id="ph5">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Ad esempio, se non si desidera che l'oggetto derivato da <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> per eseguire il rendering di <ph id="ph2">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> elemento, è possibile eseguire l'override di <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> per restituire <ph id="ph4">&lt;see langword="false" /&gt;</ph> quando viene richiesta una pagina che contiene un <ph id="ph5">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>Writes a series of tab strings that represent the indentation level for a line of markup characters.</source>
          <target state="translated">Scrive una serie di stringhe di tabulazioni che rappresentano il livello di rientro di una riga di caratteri di markup.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property to determine how many tab strings to write to obtain the desired indentation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> metodo utilizza il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> proprietà per determinare il numero di stringhe da scrivere per ottenere il rientro desiderato scheda.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The tab string is specified with the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">La stringa di scheda viene specificata con il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>If no tab string is specified, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant (<ph id="ph2">`\t`</ph>) is used.</source>
          <target state="translated">Se viene specificata alcuna stringa di scheda, il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> costante (<ph id="ph2">`\t`</ph>) viene utilizzato.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> method in a class that is derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> metodo in una classe derivata dalla <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> override always uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant to perform the indentation.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> eseguire sempre l'override viene utilizzato il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> (costante) per eseguire il rientro.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>Removes the most recently saved markup element from the list of rendered elements.</source>
          <target state="translated">Rimuove l'elemento di markup salvato più di recente dall'elenco degli elementi di cui è stato eseguito il rendering.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the most recently rendered markup element.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> contenente l'elemento di markup di cui è stato eseguito il rendering più di recente.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>Elements are added to the list of rendered markup elements by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Gli elementi vengono aggiunti all'elenco di elementi di markup sottoposto a rendering per il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method removes markup elements from the list by calling the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> metodo rimuove gli elementi di markup dall'elenco chiamando il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>The list of rendered elements is empty.</source>
          <target state="translated">L'elenco di elementi di cui è stato eseguito il rendering è vuoto.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>The closing tag of the markup element.</source>
          <target state="translated">Tag di chiusura dell'elemento di markup.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>Saves the specified markup element for later use when generating the end tag for a markup element.</source>
          <target state="translated">Salva l'elemento di markup specificato affinché venga utilizzato in seguito per la generazione del tag di fine per un elemento di markup.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>Elements are added to the list of rendered markup elements when the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Gli elementi vengono aggiunti all'elenco di elementi di markup sottoposto a rendering quando il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> chiamate al metodo di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method removes markup elements from the list after it renders the end tag for the element.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> metodo rimuove gli elementi di markup dall'elenco dopo il rendering del tag di fine per l'elemento.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the markup attribute to register.</source>
          <target state="translated">Stringa contenente il nome dell'attributo di markup da registrare.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that corresponds with the attribute name.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> corrispondente al nome dell'attributo.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">Registra gli attributi markup, che si tratti di valori letterali o di attributi generati in modo dinamico, dal file di origine affinché sia possibile eseguirne correttamente il rendering sul client richiedente.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The predefined attributes of the HTML markup language are registered by calls to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> method when the first <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is created.</source>
          <target state="translated">Gli attributi predefiniti del linguaggio di markup HTML vengono registrati mediante chiamate al <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> metodo quando il primo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> viene creato l'oggetto.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Dynamic attributes can be registered by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> method at other times.</source>
          <target state="translated">Gli attributi dinamici possono essere registrati mediante il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> metodo in altri momenti.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The registration table used by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> method is <ph id="ph2">`static`</ph>, so registration of attributes applies to all <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objects on the host computer.</source>
          <target state="translated">La tabella di registrazione utilizzata dal <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> metodo <ph id="ph2">`static`</ph>, pertanto la registrazione di attributi viene applicata a tutti <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> oggetti nel computer host.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The string passed from the source file specifying the style name.</source>
          <target state="translated">Stringa passata dal file di origine che specifica il nome dello stile.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> that corresponds with the specified style.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> corrispondente allo stile specificato.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">Registra le proprietà di stile markup, che si tratti di valori letterali o attributi generati in modo dinamico, dal file di origine in modo che sia possibile eseguirne correttamente il rendering sul client richiedente.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> method when the first <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is created.</source>
          <target state="translated">Gli attributi di foglio CSS predefiniti del linguaggio di markup HTML vengono registrati mediante chiamate al <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> metodo quando il primo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> viene creato l'oggetto.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Dynamic style attributes can be registered by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> method at other times.</source>
          <target state="translated">Gli attributi di stile dinamico possono essere registrati mediante il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> metodo in altri momenti.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The registration table used by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> method is <ph id="ph2">`static`</ph>, so registration of attributes applies to all <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objects on the host computer.</source>
          <target state="translated">La tabella di registrazione utilizzata dal <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> metodo <ph id="ph2">`static`</ph>, pertanto la registrazione di attributi viene applicata a tutti <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> oggetti nel computer host.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>A string that contains the HTML tag.</source>
          <target state="translated">Stringa contenente il tag HTML.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> that specifies which element to render.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> che specifica l'elemento di cui eseguire il rendering.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">Registra i tag del markup, che si tratti di valori letterali o di attributi generati in modo dinamico, dal file di origine in modo che sia possibile eseguirne correttamente il rendering sul client richiedente.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The predefined markup tags of the HTML language are registered by calls to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> method when the first <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is created.</source>
          <target state="translated">I tag predefiniti del linguaggio HTML vengono registrati mediante chiamate al <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> metodo quando il primo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> viene creato l'oggetto.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Dynamic markup tags can be registered by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> method at other times.</source>
          <target state="translated">Tag del markup dinamici possono essere registrati mediante il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> metodo in altri momenti.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The registration table used by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> method is <ph id="ph2">`static`</ph>, so registration of tags applies to all <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objects on the host computer.</source>
          <target state="translated">La tabella di registrazione utilizzata dal <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> metodo <ph id="ph2">`static`</ph>, pertanto la registrazione di tag si applica a tutti <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> oggetti nel computer host.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</source>
          <target state="translated">Scrive qualsiasi testo o spaziatura presente dopo il contenuto e prima del tag di chiusura dell'elemento di markup nel flusso di output del markup.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>A string that contains the spacing or text to write after the content of the element.</source>
          <target state="translated">Stringa contenente la spaziatura o il testo da scrivere dopo il contenuto dell'elemento.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> method can be useful if you want to insert child elements into the current markup element.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> metodo può essere utile se si desidera inserire gli elementi figlio nell'elemento di markup corrente.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> method in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to determine whether a <ph id="ph3">`&lt;label&gt;`</ph> element is being rendered.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> metodo in una classe derivata dal <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe per determinare se un <ph id="ph3">`&lt;label&gt;`</ph> elemento viene eseguito il rendering.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> override inserts the closing tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately before the closing tag of the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> override inserisce il tag di chiusura di un <ph id="ph2">`&lt;font&gt;`</ph> elemento immediatamente prima del tag di chiusura del <ph id="ph3">`&lt;label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>If an element other than <ph id="ph1">`&lt;label&gt;`</ph> is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> base method is used.</source>
          <target state="translated">Se un elemento diverso da <ph id="ph1">`&lt;label&gt;`</ph> viene eseguito il rendering, il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> viene utilizzato il metodo di base.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> implementazione della classe di <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> restituisce <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> if you want to write text or spacing after the element content but before the closing tag.</source>
          <target state="translated">Eseguire l'override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> se si desidera scrivere testo o spaziatura dopo il contenuto dell'elemento, ma prima del tag di chiusura.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>Writes any spacing or text that occurs after the closing tag for a markup element.</source>
          <target state="translated">Scrive qualsiasi spaziatura o testo presente dopo il tag di chiusura per un elemento di markup.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The spacing or text to write after the closing tag of the element.</source>
          <target state="translated">Spaziatura o testo da scrivere dopo il tag di chiusura dell'elemento.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> method can be useful if you want to render additional closing tags after the element tag.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> metodo può essere utile se si desidera eseguire il rendering di tag di chiusura aggiuntivi dopo il tag dell'elemento.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> method to determine whether a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is rendering a <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> metodo per determinare se una classe derivata dal <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe esegue il rendering un <ph id="ph3">`&lt;label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> override inserts the closing tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately after the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> override inserisce il tag di chiusura di un <ph id="ph2">`&lt;font&gt;`</ph> elemento subito dopo il <ph id="ph3">`&lt;label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>If it is not a <ph id="ph1">`&lt;label&gt;`</ph> element, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> base method is used.</source>
          <target state="translated">Se non è un <ph id="ph1">`&lt;label&gt;`</ph> elemento, il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> viene utilizzato il metodo di base.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> implementazione della classe di <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> restituisce <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> if you want to write text or spacing after the element closing tag.</source>
          <target state="translated">Eseguire l'override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> se si desidera scrivere testo o spaziatura dopo il tag di chiusura dell'elemento.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>Writes any text or spacing before the content and after the opening tag of a markup element.</source>
          <target state="translated">Scrive qualsiasi testo o spaziatura prima del contenuto e dopo il tag di apertura di un elemento di markup.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The text or spacing to write prior to the content of the element.</source>
          <target state="translated">Testo o spaziatura da scrivere prima del contenuto dell'elemento.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>If not overridden, <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se non se ne esegue l'override, il metodo <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> restituisce <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> method can be useful if you want to insert child elements into the current markup element before the inner markup.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> metodo può essere utile se si desidera inserire gli elementi figlio nell'elemento di markup corrente prima del markup interno.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> method to determine whether a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is about to render a <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> metodo per determinare se una classe derivata dal <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe sta per eseguire il rendering di un <ph id="ph3">`&lt;label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> override inserts the opening tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately after the opening tag of the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> override inserisce i tag di apertura di un <ph id="ph2">`&lt;font&gt;`</ph> elemento immediatamente dopo il tag di apertura del <ph id="ph3">`&lt;label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>If it is not a <ph id="ph1">`&lt;label&gt;`</ph> element, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> base method is used.</source>
          <target state="translated">Se non è un <ph id="ph1">`&lt;label&gt;`</ph> elemento, il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> viene utilizzato il metodo di base.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> implementazione della classe di <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> restituisce <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> if you want to write text or spacing after the opening tag but ahead of the element content.</source>
          <target state="translated">Eseguire l'override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> se si desidera scrivere testo o spaziatura dopo il tag di apertura, ma prima del contenuto dell'elemento.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>Writes any text or spacing that occurs before the opening tag of a markup element.</source>
          <target state="translated">Scrive qualsiasi testo o spaziatura presente prima del tag di apertura di un elemento di markup.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The text or spacing to write before the markup element opening tag.</source>
          <target state="translated">Testo o spaziatura da scrivere prima del tag di apertura dell'elemento di markup.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>If not overridden, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se non se ne esegue l'override, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> metodo può essere utile se si desidera eseguire il rendering dei tag di apertura aggiuntivi prima del tag di apertura dell'elemento previsto.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method to determine whether a class that is derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is about to render a <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come eseguire l'override di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> metodo per determinare se una classe derivata dal <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe sta per eseguire il rendering di un <ph id="ph3">`&lt;label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> override inserts the opening tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately before the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">In questo caso, il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> override inserisce i tag di apertura di un <ph id="ph2">`&lt;font&gt;`</ph> elemento immediatamente prima di <ph id="ph3">`&lt;label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>If it is not rendering a <ph id="ph1">`&lt;label&gt;`</ph> element, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> base method is used.</source>
          <target state="translated">Se non viene eseguito il rendering un <ph id="ph1">`&lt;label&gt;`</ph> elemento, il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> viene utilizzato il metodo di base.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> implementazione della classe di <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> restituisce <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> if you want to write text or spacing ahead of the element opening tag.</source>
          <target state="translated">Eseguire l'override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> se si desidera scrivere testo o spaziatura prima del tag di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the opening tag of a markup element to the output stream.</source>
          <target state="translated">Scrive il tag di apertura di un elemento di markup nel flusso di output.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>A string containing the name of the markup element for which to render the opening tag.</source>
          <target state="translated">Stringa contenente il nome dell'elemento di markup per il quale eseguire il rendering del tag di apertura.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>Writes the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">Scrive il tag di apertura dell'elemento di markup specificato nel flusso di output.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29&gt;</ph> method, if the markup element is not one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration values.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> eseguire l'override del <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29&gt;</ph> metodo, se l'elemento di markup non è uno del <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> valori di enumerazione.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>To generate a markup element by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method, first call the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</source>
          <target state="translated">Per generare un elemento di codice utilizzando il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo, chiamare prima il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> metodi, se necessario, per specificare eventuali attributi dell'elemento o gli attributi di stile che devono essere visualizzati nel tag di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>After generating the inner markup, call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method to generate the closing tag.</source>
          <target state="translated">Dopo aver generato il codice interno, chiamare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> metodo per generare il tag di chiusura.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a custom control to render the opening tag of a non-standard <ph id="ph2">`MyTag`</ph> element.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo in un controllo personalizzato per il rendering del tag di apertura di un non standard <ph id="ph2">`MyTag`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>The code example then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render inner markup, and then calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method to close the element.</source>
          <target state="translated">L'esempio di codice chiama quindi il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo per eseguire il rendering di markup interno, quindi chiama il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> metodo per chiudere l'elemento.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Questo esempio di codice genera il markup seguente:</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> values that defines the opening tag of the markup element to render.</source>
          <target state="translated">Uno dei valori di <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> che definisce il tag di apertura dell'elemento di markup di cui eseguire il rendering.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>Writes the opening tag of the markup element associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value to the output stream.</source>
          <target state="translated">Scrive il tag di apertura dell'elemento di markup associato al valore di enumerazione di <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> specificato nel flusso di output.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29&gt;</ph> method if the markup element is of a known type that is one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration values.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29&gt;</ph> metodo se l'elemento di markup di un tipo conosciuto è uno del <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> valori di enumerazione.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>To generate a markup element by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method, first call the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</source>
          <target state="translated">Per generare un elemento di codice utilizzando il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo, chiamare prima il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> metodi, se necessario, per specificare eventuali attributi dell'elemento o gli attributi di stile che devono essere visualizzati nel tag di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>After generating the inner markup, call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method to generate the closing tag.</source>
          <target state="translated">Dopo aver generato il codice interno, chiamare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> metodo per generare il tag di chiusura.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method to output the opening tag of an <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo per restituire il tag di apertura di un <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>The attributes that are added to the element by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method will be in the opening <ph id="ph2">`&lt;img&gt;`</ph> tag.</source>
          <target state="translated">Gli attributi che vengono aggiunti all'elemento mediante il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> metodo sarà nell'apertura <ph id="ph2">`&lt;img&gt;`</ph> tag.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method is used to generate the closing tag.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> metodo viene utilizzato per generare il tag di chiusura.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Questo esempio di codice genera il markup seguente:</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>Writes the end tag of a markup element to the output stream.</source>
          <target state="translated">Scrive il tag di fine di un elemento di markup nel flusso di output.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method after the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</source>
          <target state="translated">Chiamare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> metodo dopo il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> l'overload del metodo e dopo che tutto il contenuto tra i tag di apertura e chiusura (markup interno) dell'elemento è stato eseguito il rendering.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method after both the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method that generates the opening tag and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method that renders the inner markup between the opening and closing tags of the custom <ph id="ph4">`MyTag`</ph> element have been called.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> metodo dopo entrambi il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo che genera il tag di apertura e <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo che esegue il rendering del markup interno tra il tag di apertura e chiusura personalizzato<ph id="ph4">`MyTag`</ph> elemento è stato chiamato.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>This code example generates the following markup:</source>
          <target state="translated">Questo esempio di codice genera il markup seguente:</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
          <source>Represents a space and the self-closing slash mark (/) of a markup tag.</source>
          <target state="translated">Rappresenta uno spazio e la barra di autochiusura (/) di un tag del markup.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingChars&gt;</ph> field is used in markup elements that are self-closed.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingChars&gt;</ph> campo viene utilizzato nel tag di chiusura automatica.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
          <source>For example:</source>
          <target state="translated">Ad esempio:</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>Represents the closing slash mark and right angle bracket (/<ph id="ph1">&amp;gt;</ph>) of a self-closing markup element.</source>
          <target state="translated">Rappresenta la barra di chiusura e la parentesi uncinata chiusa (/<ph id="ph1">&amp;gt;</ph>) di un elemento di markup a chiusura automatica.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method when constructing self-closing markup elements.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> campo viene utilizzato il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo durante la costruzione di chiusura automatica degli elementi di markup.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>The following code example shows how to render the value of a custom <ph id="ph1">`FileName`</ph> property followed by a quotation mark and the characters represented by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> field.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come il rendering del valore di un oggetto personalizzato <ph id="ph1">`FileName`</ph> seguita da una virgoletta di proprietà e i caratteri rappresentati dal <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> campo.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>The code example calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method and passes the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> field as the parameter argument to close the element.</source>
          <target state="translated">L'esempio di codice chiama il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo e passa il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> campo come argomento di parametro per chiudere l'elemento.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>This code example renders the <ph id="ph1">`FileName`</ph> property value, and then the following markup:</source>
          <target state="translated">Questo esempio di codice viene eseguito il rendering di <ph id="ph1">`FileName`</ph> valore della proprietà, quindi il markup seguente:</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>Represents the semicolon (;).</source>
          <target state="translated">Rappresenta il punto e virgola (;).</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>Pass the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> field as the parameter argument in a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method call when you want to render a semicolon from a custom control or adapter.</source>
          <target state="translated">Passare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> campo come argomento di parametro in un <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> chiamata al metodo quando si desidera eseguire il rendering di un punto e virgola da un controllo personalizzato o una scheda.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>The following code example demonstrates how to manually render a series of styles on a markup element.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come eseguire il rendering manuale di una serie di stili su un elemento di markup.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render <ph id="ph2">`font-size`</ph> and <ph id="ph3">`border-style`</ph> style attributes.</source>
          <target state="translated">Nell'esempio di codice viene utilizzato il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo per eseguire il rendering <ph id="ph2">`font-size`</ph> e <ph id="ph3">`border-style`</ph> gli attributi di stile.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> field is used as a parameter of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to separate the value of the <ph id="ph3">`font-size`</ph> attribute from the beginning of the <ph id="ph4">`border-style`</ph> attribute.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> campo viene utilizzato come un parametro del <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> (metodo) per separare il valore della <ph id="ph3">`font-size`</ph> attributo dall'inizio del <ph id="ph4">`border-style`</ph> attributo.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Questo esempio di codice viene eseguito il rendering di markup riportato di seguito:</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar">
          <source>Represents an apostrophe (').</source>
          <target state="translated">Rappresenta un apostrofo (').</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar&gt;</ph> field when it is necessary to render an apostrophe.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar&gt;</ph> campo quando è necessario eseguire il rendering di un apostrofo.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>Represents the slash mark (/).</source>
          <target state="translated">Rappresenta la barra (/).</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> field to render the slash marks when you write a URL.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> campo per il rendering della barra indica quando si scrive un URL.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> field when writing the closing tag of a markup element.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> metodo utilizza il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> campo quando si scrive il tag di chiusura di un elemento di markup.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>The following code example demonstrates how to manually render the <ph id="ph1">`src`</ph> attribute of an <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come eseguire il rendering manuale di <ph id="ph1">`src`</ph> attributo di un <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> field as its parameter to render slash marks in the path that is applied to the <ph id="ph3">`src`</ph> attribute.</source>
          <target state="translated">Nell'esempio di codice viene utilizzato il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo con il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> contrassegna campo come parametro per il rendering delle barre nel percorso che viene applicato al <ph id="ph3">`src`</ph> attributo.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Questo esempio di codice viene eseguito il rendering di markup riportato di seguito:</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>Represents a space ( ) character.</source>
          <target state="translated">Rappresenta uno spazio ( ).</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> methods when writing separators between elements and attributes.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> campo viene utilizzato il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> metodi durante la scrittura di separatori tra gli elementi e attributi.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>This section provides two code examples.</source>
          <target state="translated">Questa sezione vengono fornite due esempi di codice.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The first one demonstrates how to create a character array.</source>
          <target state="translated">Il primo esempio viene illustrato come creare una matrice di caratteri.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">Nel secondo esempio viene illustrato come utilizzare la matrice.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>These code examples generate the following markup:</source>
          <target state="translated">Questi esempi di codice generano il markup seguente:</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The following code example shows how to create a <ph id="ph1">&lt;xref:System.Char&gt;</ph> array that contains the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come creare un <ph id="ph1">&lt;xref:System.Char&gt;</ph> matrice che contiene il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> campo.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare la matrice creata nell'esempio di codice precedente come parametro quando si chiama il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>Represents the style equals (<ph id="ph1">&lt;see langword=":" /&gt;</ph>) character used to set style attributes equal to values.</source>
          <target state="translated">Rappresenta il carattere (<ph id="ph1">&lt;see langword=":" /&gt;</ph>) di stile utilizzato per impostare attributi di stile corrispondenti ai valori.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> method to delimit style names and values.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> campo viene utilizzato il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> (metodo) per delimitare i valori e nomi di stili.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>The following code example demonstrates how to render a <ph id="ph1">`FontWeight`</ph> attribute and value of <ph id="ph2">`bold`</ph> to the opening tag of an element.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come eseguire il rendering di un <ph id="ph1">`FontWeight`</ph> attributo e il valore di <ph id="ph2">`bold`</ph> al tag di apertura di un elemento.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> field as the parameter to render the character that sets the value of each style attribute.</source>
          <target state="translated">Nell'esempio di codice viene utilizzato il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo con il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> campo come parametro per eseguire il rendering del carattere che imposta il valore di ogni attributo di stile.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Questo esempio di codice viene eseguito il rendering di markup riportato di seguito:</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> value for the specified markup element.</source>
          <target state="translated">Ottiene o imposta il valore di <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> per l'elemento di markup specificato.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The markup element that is having its opening tag rendered.</source>
          <target state="translated">Elemento di markup per il quale viene eseguito il rendering del tag di apertura.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> property is of use only to classes that inherit from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> proprietà può essere utilizzato solo per le classi che ereditano dalla <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>You should read or set the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> property only in a call to the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method; this is the only time it is set to a consistent value.</source>
          <target state="translated">È consigliabile leggere o impostare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> proprietà solo in una chiamata al <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> metodo; questo è l'unica volta impostata su un valore coerente.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The following code example demonstrates an overridden version of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> method in a class that derives from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">L'esempio di codice seguente illustra una versione sottoposta a override del <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> metodo in una classe che deriva dalla <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>It uses the value of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> property to determine whether a server control using the custom <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is rendering a <ph id="ph3">`&lt;label&gt;`</ph> markup element.</source>
          <target state="translated">Viene utilizzato il valore della <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> proprietà per determinare se un controllo server utilizzando l'interfaccia personalizzata <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> oggetto il rendering di un <ph id="ph3">`&lt;label&gt;`</ph> elemento di markup.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>If it is, a <ph id="ph1">`&lt;font&gt;`</ph> element with a <ph id="ph2">`color`</ph> attribute set to <ph id="ph3">`red`</ph> is returned to modify the formatting of the <ph id="ph4">`&lt;label&gt;`</ph> element's text.</source>
          <target state="translated">Questo caso, un <ph id="ph1">`&lt;font&gt;`</ph> elemento con un <ph id="ph2">`color`</ph> attributo impostato su <ph id="ph3">`red`</ph> viene restituito per modificare la formattazione del <ph id="ph4">`&lt;label&gt;`</ph> testo dell'elemento.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The property value cannot be set.</source>
          <target state="translated">Non è possibile impostare il valore della proprietà.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>Represents the opening angle bracket (<ph id="ph1">&amp;lt;</ph>) of a markup tag.</source>
          <target state="translated">Rappresenta la parentesi uncinata aperta (<ph id="ph1">&amp;lt;</ph>) di un tag di markup.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> methods when writing markup tags.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> campo viene utilizzato il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> metodi quando si scrive il tag di markup.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>The following code example renders the first character of the opening tag of a <ph id="ph1">`&lt;table&gt;`</ph> element with the element name.</source>
          <target state="translated">Esempio di codice seguente viene eseguito il rendering il primo carattere del tag di apertura di un <ph id="ph1">`&lt;table&gt;`</ph> elemento con il nome dell'elemento.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> field as a parameter.</source>
          <target state="translated">Nell'esempio di codice viene utilizzato il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo con il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> campo come parametro.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Questo esempio di codice viene eseguito il rendering di markup riportato di seguito:</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>Gets or sets the tag name of the markup element being rendered.</source>
          <target state="translated">Ottiene o imposta il nome del tag dell'elemento di markup di cui eseguire il rendering.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The tag name of the markup element being rendered.</source>
          <target state="translated">Nome del tag dell'elemento di markup di cui eseguire il rendering.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> property is of use only to classes that inherit from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> proprietà può essere utilizzato solo per le classi che ereditano dalla <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>You should read or set the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> property only in <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method calls; this is the only time it is set to a consistent value.</source>
          <target state="translated">È consigliabile leggere o impostare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> proprietà solo in <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> chiamate al metodo; questo è l'unica volta impostata su un valore coerente.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The following code example demonstrates an overridden version of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method in a class that derives from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">L'esempio di codice seguente illustra una versione sottoposta a override del <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> metodo in una classe che deriva dalla <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The code example checks whether the element to render is a <ph id="ph1">`&lt;label&gt;`</ph> element by calling the <ph id="ph2">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> method, and then passing the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> property value and a string, <ph id="ph4">`"label"`</ph>, as the parameter arguments.</source>
          <target state="translated">L'esempio di codice controlla se l'elemento per il rendering è un <ph id="ph1">`&lt;label&gt;`</ph> elemento chiamando il <ph id="ph2">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> (metodo) e quindi passare il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> valore della proprietà e una stringa, <ph id="ph4">`"label"`</ph>, come argomenti di parametro.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>If a <ph id="ph1">`&lt;label&gt;`</ph> element is about to be rendered, the opening tag of a <ph id="ph2">`&lt;font&gt;`</ph> element, with a <ph id="ph3">`color`</ph> attribute set to <ph id="ph4">`red`</ph>, is rendered before the <ph id="ph5">`&lt;label&gt;`</ph> element's opening tag.</source>
          <target state="translated">Se un <ph id="ph1">`&lt;label&gt;`</ph> elemento sta per essere eseguito il rendering, il tag di apertura di un <ph id="ph2">`&lt;font&gt;`</ph> elemento, con un <ph id="ph3">`color`</ph> attributo impostato su <ph id="ph4">`red`</ph>, viene eseguito prima il <ph id="ph5">`&lt;label&gt;`</ph> tag di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>If the element to render is not a <ph id="ph1">`&lt;label&gt;`</ph> element, the base class's version of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method is called.</source>
          <target state="translated">Se l'elemento per il rendering non è un <ph id="ph1">`&lt;label&gt;`</ph> elemento, la versione della classe di base del <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> metodo viene chiamato.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>Represents the closing angle bracket (<ph id="ph1">&amp;gt;</ph>) of a markup tag.</source>
          <target state="translated">Rappresenta la parentesi uncinata chiusa (<ph id="ph1">&amp;gt;</ph>) di un tag di markup.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> methods when writing markup tags.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> campo viene utilizzato il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> metodi quando si scrive il tag di markup.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>The following code example shows how to render the closing tag of a <ph id="ph1">`&lt;table&gt;`</ph> element by making calls to overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come eseguire il rendering del tag di chiusura di un <ph id="ph1">`&lt;table&gt;`</ph> elemento effettuando chiamate agli overload del <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>To render the final character of the tag, the code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> field as a parameter.</source>
          <target state="translated">Per eseguire il rendering del carattere finale del tag, l'esempio di codice Usa il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo con il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> campo come parametro.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Questo esempio di codice viene eseguito il rendering di markup riportato di seguito:</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the specified data type to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive il tipo di dati specificato nel flusso di output, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> to write to the output stream.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
          <source>Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive la rappresentazione testuale di un valore Boolean nel flusso di output, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo genera le tabulazioni in sospeso e quindi chiama il <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> metodo di base.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>The Unicode character to write to the output stream.</source>
          <target state="translated">Carattere Unicode da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive la rappresentazione testuale di un carattere Unicode nel flusso di output, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo genera le tabulazioni in sospeso e quindi chiama il <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> metodo di base.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to end the opening tag of an <ph id="ph2">`&lt;img&gt;`</ph> element by using the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> constant.</source>
          <target state="translated">Esempio di codice seguente viene illustrato l'utilizzo di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo alla fine del tag di apertura di un <ph id="ph2">`&lt;img&gt;`</ph> elemento utilizzando il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> costante.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>This code example renders the following markup:</source>
          <target state="translated">Questo esempio di codice viene eseguito il rendering di markup riportato di seguito:</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The array of Unicode characters to write to the output stream.</source>
          <target state="translated">Matrice di caratteri Unicode da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive la rappresentazione testuale di una matrice di caratteri Unicode nel flusso di output, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo genera le tabulazioni in sospeso e quindi chiama il <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> metodo di base.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>This section provides two code examples.</source>
          <target state="translated">Questa sezione vengono fornite due esempi di codice.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The first one demonstrates how to create an array of characters.</source>
          <target state="translated">Il primo esempio viene illustrato come creare una matrice di caratteri.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">Nel secondo esempio viene illustrato come utilizzare la matrice.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>These code examples generate the following markup:</source>
          <target state="translated">Questi esempi di codice generano il markup seguente:</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The following code example demonstrates how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come creare una matrice di caratteri che compongono il testo <ph id="ph1">`hello world`</ph>.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">Inclusa nella matrice è il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> campo, che consente di creare uno spazio tra le due parole.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the <ph id="ph2">`hello world`</ph> character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo per eseguire il rendering di <ph id="ph2">`hello world`</ph> matrice di caratteri creata nell'esempio di codice precedente a una pagina, quando il controllo che contiene il codice di esempio è incluso in una pagina.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>The double-precision floating-point number to write to the output stream.</source>
          <target state="translated">Numero in virgola mobile e precisione doppia da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive nel flusso di output la rappresentazione testuale di un numero in virgola mobile e precisione doppia e qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo genera le tabulazioni in sospeso e quindi chiama il <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> metodo di base.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> field.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo per il rendering del valore del <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> campo.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Questo esempio di codice genera il markup seguente:</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
          <source>The 32-byte signed integer to write to the output stream.</source>
          <target state="translated">Valore integer a 32 byte con segno da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
          <source>Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive nel flusso di output la rappresentazione testuale di un intero con segno a 32 byte e qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo genera le tabulazioni in sospeso e quindi chiama il <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> metodo di base.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
          <source>The 64-byte signed integer to write to the output stream.</source>
          <target state="translated">Intero con segno a 64 byte da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
          <source>Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive nel flusso di output la rappresentazione testuale di un intero con segno a 64 byte e qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo genera le tabulazioni in sospeso e quindi chiama il <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> metodo di base.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The object to write to the output stream.</source>
          <target state="translated">Oggetto da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>Writes the text representation of an object to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive nel flusso di output la rappresentazione testuale di un oggetto e qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo genera le tabulazioni in sospeso e quindi chiama il <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> metodo di base.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo per il rendering del valore del <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Questo esempio di codice genera il markup seguente:</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property:</source>
          <target state="translated">Il valore di <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> proprietà:</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>The single-precision floating-point number to write to the output stream.</source>
          <target state="translated">Numero in virgola mobile e precisione singola da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive nel flusso di output la rappresentazione testuale di un numero in virgola mobile e precisione singola e qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo genera le tabulazioni in sospeso e quindi chiama il <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> metodo di base.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> field, which is the smallest possible value of the <ph id="ph3">&lt;xref:System.Single&gt;</ph> structure.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo per il rendering del valore del <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> campo, il valore più piccolo possibile del <ph id="ph3">&lt;xref:System.Single&gt;</ph> struttura.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Questo esempio di codice genera il markup seguente:</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>The string to write to the output stream.</source>
          <target state="translated">Stringa da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>Writes the specified string to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive nel flusso di output la stringa specificata e qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo genera le tabulazioni in sospeso e quindi chiama il <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> metodo di base.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a string between the opening and closing tags of a custom markup element.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo per eseguire il rendering di una stringa compresa tra il tag di apertura e chiusura di un elemento di markup personalizzata.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Questo esempio di codice genera il markup seguente:</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">Stringa contenente zero o più elementi di formato.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Oggetto da formattare.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>Writes a tab string and a formatted string to the output stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> method, along with any pending tab spacing.</source>
          <target state="translated">Scrive nel flusso di output una stringa di tabulazioni e una stringa formattata utilizzando la stessa semantica del metodo <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo genera le tabulazioni in sospeso e quindi chiama il <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> metodo di base.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a formatted string with the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo per eseguire il rendering di una stringa formattata con il valore di <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">Stringa contenente zero o più elementi di formato.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>An object array to format.</source>
          <target state="translated">Matrice di oggetti da formattare.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive una stringa formattata contenente la rappresentazione testuale di una matrice di oggetti nel flusso di output, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>This method uses the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">Il metodo utilizza la stessa semantica del metodo <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo genera le tabulazioni in sospeso e quindi chiama il <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> metodo di base.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>This section contains two code examples.</source>
          <target state="translated">In questa sezione contiene due esempi di codice.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The first one demonstrates how to render a formatted string and the contents of an array.</source>
          <target state="translated">Il primo viene illustrato come eseguire il rendering di una stringa formattata e il contenuto di una matrice.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The second one demonstrates how to declare the array.</source>
          <target state="translated">Il secondo esempio viene illustrato come dichiarare la matrice.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a formatted string and the contents of an object array, named <ph id="ph2">`curPriceTime`</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo per eseguire il rendering di una stringa formattata e il contenuto di una matrice di oggetti, denominato <ph id="ph2">`curPriceTime`</ph>.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The method call renders the second member of the array before it renders the first member.</source>
          <target state="translated">La chiamata al metodo viene eseguito il rendering il secondo membro della matrice prima che il rendering del primo membro.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The following code example demonstrates declaring the <ph id="ph1">`curPriceTime`</ph> object array.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come dichiarare il <ph id="ph1">`curPriceTime`</ph> matrice di oggetti.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The array of characters from which to write text to the output stream.</source>
          <target state="translated">Matrice di caratteri da cui scrivere il testo nel flusso di output.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The index location in the array where writing begins.</source>
          <target state="translated">Posizione di indice di inizio scrittura all'interno della matrice.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write to the output stream.</source>
          <target state="translated">Numero di caratteri da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive la rappresentazione testuale di una sottomatrice di caratteri Unicode nel flusso di output, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo genera le tabulazioni in sospeso e quindi chiama il <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> metodo di base.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This section provides two code examples.</source>
          <target state="translated">Questa sezione vengono fornite due esempi di codice.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The first one demonstrates how to create a character array.</source>
          <target state="translated">Il primo esempio viene illustrato come creare una matrice di caratteri.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">Nel secondo esempio viene illustrato come utilizzare la matrice.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>These code examples generate the following markup:</source>
          <target state="translated">Questi esempi di codice generano il markup seguente:</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The following code example shows how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come creare una matrice di caratteri che compongono il testo <ph id="ph1">`hello world`</ph>.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">Inclusa nella matrice è il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> campo, che consente di creare uno spazio tra le due parole.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The following portion of the code example uses the <ph id="ph1">`index`</ph> and <ph id="ph2">`count`</ph> parameters of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the first five characters of the array created in the preceding example.</source>
          <target state="translated">La parte dell'esempio di codice seguente usa il <ph id="ph1">`index`</ph> e <ph id="ph2">`count`</ph> parametri del <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo per eseguire il rendering i primi cinque caratteri della matrice creata nell'esempio precedente.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">Stringa contenente zero o più elementi di formato.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Oggetto da formattare.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Oggetto da formattare.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Scrive una stringa formattata contenente la rappresentazione testuale di due oggetti nel flusso di output, insieme a qualsiasi spaziatura di tabulazione in sospeso.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>This method uses the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Il metodo utilizza la stessa semantica del metodo <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo genera le tabulazioni in sospeso e quindi chiama il <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> metodo di base.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a formatted string and the values of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> properties.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> metodo per eseguire il rendering di una stringa formattata e i valori del <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes a markup attribute and its value to the output stream.</source>
          <target state="translated">Scrive un attributo di markup e il relativo valore nel flusso di output.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The attribute to write to the output stream.</source>
          <target state="translated">Attributo da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The value assigned to the attribute.</source>
          <target state="translated">Valore assegnato all'attributo.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Writes the specified markup attribute and value to the output stream.</source>
          <target state="translated">Scrive l'attributo di markup specificato e il relativo valore nel flusso di output.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to write markup attributes and their values with no encoding.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> metodo per scrivere attributi markup e i relativi valori senza codifica.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes the attribute value enclosed in double quotation marks (").</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> metodo scrive il valore dell'attributo racchiuso tra virgolette doppie (").</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes only the attribute name.</source>
          <target state="translated">Se <ph id="ph1">`value`</ph> è <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> metodo scrive solo il nome dell'attributo.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element in which both overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method are called.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato il rendering un <ph id="ph1">`&lt;img&gt;`</ph> elemento nel quale entrambi gli overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> metodo vengono chiamati.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The code example uses the following process:</source>
          <target state="translated">L'esempio di codice utilizza il seguente processo:</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which renders the opening characters of the element.</source>
          <target state="translated">Chiamate di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> metodo, che esegue il rendering dei caratteri di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, which writes an <ph id="ph2">`alt`</ph> attribute and its value to the <ph id="ph3">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Chiamate di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, per scrivere un <ph id="ph2">`alt`</ph> attributo e il valore per il <ph id="ph3">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload to render a custom <ph id="ph2">`myattribute`</ph> attribute, with a value of <ph id="ph3">`No "encoding" required`</ph>, and then sets <ph id="ph4">`fEncode`</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Chiamate di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload per il rendering di un oggetto personalizzato <ph id="ph2">`myattribute`</ph> con un valore di attributo <ph id="ph3">`No "encoding" required`</ph>e quindi imposta <ph id="ph4">`fEncode`</ph> a <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Closes the opening tag of the element, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Chiude il tag di apertura dell'elemento e quindi chiama il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> metodo per chiudere il <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Questo esempio di codice genera il markup seguente:</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>In derived classes, you can override the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> method to define custom rules for writing attributes and their values.</source>
          <target state="translated">Nelle classi derivate, è possibile eseguire l'override di <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> metodo per definire regole personalizzate per la scrittura di attributi e i relativi valori.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>For example, you could write code that allowed the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> method to write an attribute with an empty value.</source>
          <target state="translated">Ad esempio, è possibile scrivere del codice che consenta di <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> metodo per scrivere un attributo con un valore vuoto.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The markup attribute to write to the output stream.</source>
          <target state="translated">Attributo di markup da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The value assigned to the attribute.</source>
          <target state="translated">Valore assegnato all'attributo.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute and its assigned value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per codificare l'attributo e il valore assegnato. In caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</source>
          <target state="translated">Scrive il valore e l'attributo di markup specificati nel flusso di output e, se specificato, scrive il valore codificato.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to write markup attributes and their values with or without encoding.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> metodo per scrivere attributi markup e i relativi valori con o senza codifica.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method to do the encoding.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> metodo utilizza il <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> metodo per eseguire la codifica.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes the attribute value enclosed in double quotation marks (").</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> metodo scrive il valore dell'attributo racchiuso tra virgolette doppie (").</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes only the attribute name.</source>
          <target state="translated">Se <ph id="ph1">`value`</ph> è <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> metodo scrive solo il nome dell'attributo.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element in which both overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method are called.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato il rendering un <ph id="ph1">`&lt;img&gt;`</ph> elemento nel quale entrambi gli overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> metodo vengono chiamati.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The code example uses the following process:</source>
          <target state="translated">L'esempio di codice utilizza il seguente processo:</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which renders the opening characters of the element.</source>
          <target state="translated">Chiamate di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> metodo, che esegue il rendering dei caratteri di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, which writes an <ph id="ph2">`alt`</ph> attribute and its value to the <ph id="ph3">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Chiamate di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, per scrivere un <ph id="ph2">`alt`</ph> attributo e il valore per il <ph id="ph3">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload to render a custom <ph id="ph2">`myattribute`</ph> attribute, with a value of <ph id="ph3">`No "encoding" required`</ph>, and then sets <ph id="ph4">`fEncode`</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Chiamate di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload per il rendering di un oggetto personalizzato <ph id="ph2">`myattribute`</ph> con un valore di attributo <ph id="ph3">`No "encoding" required`</ph>e quindi imposta <ph id="ph4">`fEncode`</ph> a <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Closes the opening tag of the element, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Chiude il tag di apertura dell'elemento e quindi chiama il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> metodo per chiudere il <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Questo esempio di codice genera il markup seguente:</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>In derived classes, you can override the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> method to define custom rules for writing attributes and their values.</source>
          <target state="translated">Nelle classi derivate, è possibile eseguire l'override di <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> metodo per definire regole personalizzate per la scrittura di attributi e i relativi valori.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>For example, you could write code that allowed the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> method to write an attribute with an empty value.</source>
          <target state="translated">Ad esempio, è possibile scrivere del codice che consenta di <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> metodo per scrivere un attributo con un valore vuoto.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The markup element of which to write the opening tag.</source>
          <target state="translated">Elemento di markup di cui scrivere il tag di apertura.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">Scrive l'eventuale spaziatura di tabulazione e il tag di apertura dell'elemento di markup specificato nel flusso di output.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method does not write the closing angle bracket (&gt;) of the markup element's opening tag.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> metodo non scrive la parentesi angolare di chiusura (&gt;) del tag di apertura dell'elemento di markup.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>This allows the writing of markup attributes to the opening tag of the element.</source>
          <target state="translated">In questo modo la scrittura di attributi di tag per il tag di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> constant to close the opening tag when calling the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> costante per chiudere il tag di apertura durante la chiamata di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> constant when you write markup elements that are self-closing.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> metodo con il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> costante quando si scrivono elementi di markup a chiusura automatica.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> metodo viene utilizzato dai controlli server personalizzati che non consente il mapping di tag o un attributo e il rendering degli elementi di markup nello stesso modo per ogni richiesta.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element in which both overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method are called.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato il rendering un <ph id="ph1">`&lt;img&gt;`</ph> elemento nel quale entrambi gli overload di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> metodo vengono chiamati.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The code example uses the following process:</source>
          <target state="translated">L'esempio di codice utilizza il seguente processo:</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which renders the opening characters of the element.</source>
          <target state="translated">Chiamate di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> metodo, che esegue il rendering dei caratteri di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, which writes an <ph id="ph2">`alt`</ph> attribute and its value to the <ph id="ph3">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Chiamate di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, per scrivere un <ph id="ph2">`alt`</ph> attributo e il valore per il <ph id="ph3">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload to render a custom <ph id="ph2">`myattribute`</ph> attribute, with a value of <ph id="ph3">`No "encoding" required`</ph>, and then sets <ph id="ph4">`fEncode`</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Chiamate di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload per il rendering di un oggetto personalizzato <ph id="ph2">`myattribute`</ph> con un valore di attributo <ph id="ph3">`No "encoding" required`</ph>e quindi imposta <ph id="ph4">`fEncode`</ph> a <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Closes the opening tag of the element, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Chiude il tag di apertura dell'elemento e quindi chiama il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> metodo per chiudere il <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Questo esempio di codice genera il markup seguente:</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>Writes a <ph id="ph1">&lt;see langword="&amp;lt;br /&amp;gt;" /&gt;</ph> markup element to the output stream.</source>
          <target state="translated">Scrive un elemento di markup <ph id="ph1">&lt;see langword="&amp;lt;br /&amp;gt;" /&gt;</ph> nel flusso di output.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method to render line breaks in custom control or adapter markup.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> interruzioni di metodo per il rendering linea nel markup di controllo o scheda personalizzata.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method writes a space between the <ph id="ph2">`br`</ph> and <ph id="ph3">`/`</ph> for improved HTML compatibility.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> metodo scrive uno spazio tra il <ph id="ph2">`br`</ph> e <ph id="ph3">`/`</ph> per una migliore compatibilità HTML.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method to write a <ph id="ph2">`&lt;br /&gt;`</ph> element to the requesting browser after the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method writes the encoded <ph id="ph4">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> markup.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come chiamare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> metodo per scrivere un <ph id="ph2">`&lt;br /&gt;`</ph> elemento al browser dopo il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> metodo scrive codificate <ph id="ph4">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> markup.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The text string to encode and write to the output stream.</source>
          <target state="translated">Stringa di testo da codificare e scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>Encodes the specified text for the requesting device, and then writes it to the output stream.</source>
          <target state="translated">Codifica il testo specificato per il dispositivo richiedente e quindi lo scrive nel flusso di output.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method when a string contains angle brackets (<ph id="ph2">\&lt;</ph> or &gt;) or an ampersand (&amp;).</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> metodo quando una stringa contiene parentesi acute (<ph id="ph2">\&lt;</ph> o &gt;) o una e commerciale (&amp;).</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method to perform the encoding and also converts Unicode character <ph id="ph3">`00A0`</ph> to <ph id="ph4">`&amp;nbsp;`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> metodo utilizza il <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> metodo per eseguire la codifica e converte il carattere Unicode <ph id="ph3">`00A0`</ph> a <ph id="ph4">`&amp;nbsp;`</ph>.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method to write the encoded markup <ph id="ph2">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> to the output stream.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> metodo per scrivere il markup codificato <ph id="ph2">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> nel flusso di output.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method writes <ph id="ph2">`&lt;br /&gt;`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> metodo scritture <ph id="ph2">`&lt;br /&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source><ph id="ph1">&lt;paramref name="text" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="text" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The URL string to encode and write to the output stream.</source>
          <target state="translated">Stringa dell'URL da codificare e scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>Encodes the specified URL, and then writes it to the output stream.</source>
          <target state="translated">Codifica l'URL specificato e quindi lo scrive nel flusso di output.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The URL might include parameters.</source>
          <target state="translated">L'URL può includere parametri.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> method encodes the string in the <ph id="ph2">`url`</ph> parameter in accordance with the specification for URL encoding.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> metodo consente di codificare la stringa di <ph id="ph2">`url`</ph> parametro conforme alla specifica per la codifica URL.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The parameters that follow the question mark (?) delimiter are not encoded.</source>
          <target state="translated">I parametri che seguono il delimitatore punto interrogativo (?) non sono codificati.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> method, which generates the following output:</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> metodo che genera il seguente output:</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>The URL parameter string to encode and write to the output stream.</source>
          <target state="translated">Stringa del parametro URL da codificare e scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</source>
          <target state="translated">Codifica il parametro URL specificato per la periferica richiedente, quindi lo scrive nel flusso di output.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as <ph id="ph1">`%3d`</ph>.</source>
          <target state="translated">Gli spazi in parte il parametro di un URL sono codificati come segni più (+) e il segno di uguale (=) sono codificato come <ph id="ph1">`%3d`</ph>.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> method, which generates the following output:</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> metodo che genera il seguente output:</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>The element to write the closing tag for.</source>
          <target state="translated">Elemento per cui scrivere il tag di apertura.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Writes any tab spacing and the closing tag of the specified markup element.</source>
          <target state="translated">Scrive l'eventuale spaziatura di tabulazione e il tag di chiusura dell'elemento di markup specificato.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method has no logic to make the element end tag match the corresponding opening tag.</source>
          <target state="translated">A differenza di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> (metodo), il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> non dispone di alcuna logica in modo che corrisponda al tag di apertura per il tag di fine elemento.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato il rendering un <ph id="ph1">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>The code example uses the following process:</source>
          <target state="translated">L'esempio di codice utilizza il seguente processo:</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method to render the opening characters of the element.</source>
          <target state="translated">Chiamate di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> metodo per eseguire il rendering dei caratteri di apertura dell'elemento.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Calls the two overloads of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to write attributes to the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Chiama due overload di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> metodo scrivere attributi per il <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Chiamate di <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> metodo per chiudere il <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>The element to write to the output stream.</source>
          <target state="translated">Elemento da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">Scrive l'eventuale spaziatura di tabulazione e il tag di apertura dell'elemento di markup specificato nel flusso di output.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> method automatically writes the closing angle bracket (&gt;) of the opening tag of the element, unlike the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which does not write the closing angle bracket.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> metodo scrive automaticamente la parentesi angolare di chiusura (&gt;) del tag di apertura dell'elemento, a differenza di <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> (metodo), che scrive la parentesi angolare di chiusura.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> for markup elements that have no attributes.</source>
          <target state="translated">Utilizzare <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> per gli elementi di markup senza attributi.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes data to an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> output stream, as specified by the overloaded parameters, followed by a line terminator string.</source>
          <target state="translated">Scrive dati in un flusso di output di <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>, come specificato dai parametri di overload, seguiti da una stringa del terminatore di riga.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>All versions of this method write any pending tab spacing to the output stream.</source>
          <target state="translated">Tutte le versioni di questo metodo scrivono qualsiasi spaziatura di tabulazione in sospeso nel flusso di output.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>Writes a line terminator string to the output stream.</source>
          <target state="translated">Scrive un terminatore di riga nel flusso di output.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>For more information, see <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to insert a line after an <ph id="ph2">`&lt;img&gt;`</ph> element is rendered.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> per inserire una riga dopo un <ph id="ph2">`&lt;img&gt;`</ph> elemento sottoposto a rendering.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>The Boolean to write to the output stream.</source>
          <target state="translated">Valore Boolean da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive qualsiasi spaziatura di tabulazione in sospeso e la rappresentazione testuale di un valore Boolean, seguita da una stringa del terminatore di riga nel flusso di output.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>The character to write to the output stream.</source>
          <target state="translated">Carattere da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive qualsiasi spaziatura di tabulazione in sospeso e un carattere Unicode, seguito da una stringa del terminatore di riga, nel flusso di output.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The character array to write to the output stream.</source>
          <target state="translated">Matrice di caratteri da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive qualsiasi spaziatura di tabulazione in sospeso e una matrice di caratteri Unicode, seguita da una stringa del terminatore di riga, nel flusso di output.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>This section provides two code examples.</source>
          <target state="translated">Questa sezione vengono fornite due esempi di codice.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The first one demonstrates how to create an array.</source>
          <target state="translated">Il primo esempio viene illustrato come creare una matrice.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The second one demonstrates how to use that array.</source>
          <target state="translated">Il secondo esempio viene illustrato come utilizzare tale matrice.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>These code examples generate the following markup:</source>
          <target state="translated">Questi esempi di codice generano il markup seguente:</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The following code example shows how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come creare una matrice di caratteri che compongono il testo <ph id="ph1">`hello world`</ph>.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">Inclusa nella matrice è il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> campo, che consente di creare uno spazio tra le due parole.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The following code example renders the <ph id="ph1">`hello world`</ph> character array that was created in the preceding example by using the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method.</source>
          <target state="translated">Esegue il rendering di esempio di codice seguente il <ph id="ph1">`hello world`</ph> matrice di caratteri che è stato creato nell'esempio precedente utilizzando il <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The double-precision floating-point number to write to the output stream.</source>
          <target state="translated">Numero in virgola mobile e precisione doppia da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive qualsiasi spaziatura di tabulazione in sospeso e la rappresentazione testuale di un numero in virgola mobile e precisione doppia, seguita da una stringa del terminatore di riga, nel flusso di output.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> field.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> metodo per il rendering del valore del <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> campo.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Questo esempio di codice genera il markup seguente:</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>The 32-byte signed integer to write to the output stream.</source>
          <target state="translated">Valore integer a 32 byte con segno da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive qualsiasi spaziatura di tabulazione in sospeso e la rappresentazione testuale di un intero con segno a 32 byte, seguita da una stringa del terminatore di riga, nel flusso di output.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>The 64-byte signed integer to write to the output stream.</source>
          <target state="translated">Intero con segno a 64 byte da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive nel flusso di output qualsiasi spaziatura di tabulazione in sospeso e la rappresentazione testuale di un intero con segno a 64 byte, seguita da una stringa del terminatore di riga.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The object to write to the output stream.</source>
          <target state="translated">Oggetto da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive qualsiasi spaziatura di tabulazione in sospeso e la rappresentazione testuale di un oggetto, seguita da una stringa del terminatore di riga, nel flusso di output.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> property to a control.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> metodo per il rendering del valore del <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> proprietà a un controllo.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The single-precision floating point number to write to the output stream.</source>
          <target state="translated">Numero in virgola mobile e precisione singola da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive qualsiasi spaziatura di tabulazione in sospeso e la rappresentazione testuale di un numero in virgola mobile e precisione singola, seguita da una stringa del terminatore di riga, nel flusso di output.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> field, which is the smallest possible value of the <ph id="ph3">&lt;xref:System.Single&gt;</ph> structure.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> metodo per il rendering del valore del <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> campo, il valore più piccolo possibile del <ph id="ph3">&lt;xref:System.Single&gt;</ph> struttura.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Questo esempio di codice genera il markup seguente:</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>The string to write to the output stream.</source>
          <target state="translated">Stringa da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive qualsiasi spaziatura di tabulazione in sospeso e una stringa di testo, seguita da una stringa del terminatore di riga, nel flusso di output.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>The 4-byte unsigned integer to write to the output stream.</source>
          <target state="translated">Valore integer a 4 byte senza segno da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive qualsiasi spaziatura di tabulazione in sospeso e la rappresentazione testuale di un valore integer a 4 byte senza segno, seguita da una stringa del terminatore di riga, nel flusso di output.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>A string containing zero or more format items.</source>
          <target state="translated">Stringa contenente zero o più elementi di formato.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Oggetto da formattare.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive qualsiasi spaziatura di tabulazione in sospeso e una stringa formattata contenente la rappresentazione testuale di un oggetto, seguita da una stringa del terminatore di riga, nel flusso di output.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method uses the same semantics as the <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> metodo utilizza la stessa semantica di <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%29&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render a formatted string with the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> metodo per eseguire il rendering di una stringa formattata con il valore di <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>A string containing zero or more format items.</source>
          <target state="translated">Stringa contenente zero o più elementi di formato.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>An object array to format.</source>
          <target state="translated">Matrice di oggetti da formattare.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive qualsiasi spaziatura di tabulazione in sospeso e una stringa formattata contenente la rappresentazione testuale di una matrice di oggetti, seguita da una stringa del terminatore di riga, nel flusso di output.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method uses the same semantics as the <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> metodo utilizza la stessa semantica di <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>This section contains two code examples.</source>
          <target state="translated">In questa sezione contiene due esempi di codice.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The first one demonstrates how to render a string and an array to the output stream.</source>
          <target state="translated">Il primo viene illustrato come eseguire il rendering di una stringa e una matrice nel flusso di output.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The second one shows how to declare the array.</source>
          <target state="translated">La seconda viene illustrato come dichiarare la matrice.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render a formatted string and the contents of an object array to the output stream.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> metodo per eseguire il rendering di una stringa formattata e il contenuto di una matrice di oggetti nel flusso di output.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The following code example shows how to declare the object array that was rendered in the preceding code example.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come dichiarare una matrice di oggetti che è stato eseguito il rendering nell'esempio di codice precedente.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The character array from which to write text to the output stream.</source>
          <target state="translated">Matrice di caratteri da cui scrivere il testo nel flusso di output.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The location in the character array where writing begins.</source>
          <target state="translated">Posizione di inizio scrittura all'interno della matrice di caratteri.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters in the array to write to the output stream.</source>
          <target state="translated">Numero di caratteri della matrice da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive qualsiasi spaziatura di tabulazione in sospeso e una sottomatrice di caratteri Unicode, seguita da una stringa del terminatore di riga, nel flusso di output.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>This section contains two code examples.</source>
          <target state="translated">In questa sezione contiene due esempi di codice.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The first one demonstrates how to create a character array.</source>
          <target state="translated">Il primo esempio viene illustrato come creare una matrice di caratteri.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">Nel secondo esempio viene illustrato come utilizzare la matrice.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>These code examples generate the following markup:</source>
          <target state="translated">Questi esempi di codice generano il markup seguente:</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The following code example demonstrates how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">Esempio di codice riportato di seguito viene illustrato come creare una matrice di caratteri che compongono il testo <ph id="ph1">`hello world`</ph>.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">Inclusa nella matrice è il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> campo, che consente di creare uno spazio tra le due parole.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The following code example uses the <ph id="ph1">`index`</ph> and <ph id="ph2">`count`</ph> parameters of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the first five characters of the array created in the preceding code example.</source>
          <target state="translated">Nell'esempio di codice viene illustrato come utilizzare il <ph id="ph1">`index`</ph> e <ph id="ph2">`count`</ph> parametri del <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> metodo per eseguire il rendering i primi cinque caratteri della matrice creata nell'esempio di codice precedente.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>A string containing zero or more format items.</source>
          <target state="translated">Stringa contenente zero o più elementi di formato.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Oggetto da formattare.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Oggetto da formattare.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive qualsiasi spaziatura di tabulazione in sospeso e una stringa formattata contenente la rappresentazione testuale di due oggetti, seguita da una stringa del terminatore di riga, nel flusso di output.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method uses the same semantics as the <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> metodo utilizza la stessa semantica di <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render a formatted string and the values of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> property.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> metodo per eseguire il rendering di una stringa formattata e i valori del <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> proprietà e <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>The string to write to the output stream.</source>
          <target state="translated">Stringa da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>Writes a string, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Scrive una stringa, seguita da una stringa del terminatore di riga, nel flusso di output.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>This method ignores any specified tab spacing.</source>
          <target state="translated">Questo metodo ignora qualsiasi spaziatura di tabulazione specificata.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A&gt;</ph> method rather than the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method when you do not want to render any tab spacing ahead of the rendered string <ph id="ph3">`s`</ph>.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A&gt;</ph> metodo anziché <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> metodo quando non si desidera eseguire il rendering di qualsiasi spaziatura di tabulazione prima della stringa <ph id="ph3">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga ("\r\n").</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> metodo di base viene utilizzata per scrivere il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes a style attribute and its value to the output stream.</source>
          <target state="translated">Scrive un attributo di stile e il relativo valore nel flusso di output.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>The style attribute to write to the output stream.</source>
          <target state="translated">Attributo di stile da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">Valore assegnato all'attributo di stile.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>Writes the specified style attribute to the output stream.</source>
          <target state="translated">Scrive l'attributo di stile specificato nel flusso di output.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> method writes the style attribute in the following form:</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> metodo scrive l'attributo di stile nel formato seguente:</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></source>
          <target state="translated"><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The style attribute to write to the output stream.</source>
          <target state="translated">Attributo di stile da scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">Valore assegnato all'attributo di stile.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the style attribute and its assigned value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per codificare l'attributo di stile e il valore assegnato; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</source>
          <target state="translated">Scrive l'attributo di stile e il valore specificati nel flusso di output e codifica il valore, se specificato.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> method writes the style attribute in the following form:</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> metodo scrive l'attributo di stile nel formato seguente:</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></source>
          <target state="translated"><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method is used to encode the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> metodo viene utilizzato per codificare il <ph id="ph2">`value`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>The string to encode and write to the output stream.</source>
          <target state="translated">Stringa da codificare e scrivere nel flusso di output.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the string as a part of the parameter section of the URL; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to encode the string as part of the path section of the URL.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per codificare la stringa come una parte della sezione parametro dell'URL; <ph id="ph2">&lt;see langword="false" /&gt;</ph> per codificare la stringa come parte della sezione percorso dell'URL.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>Writes the specified string, encoding it according to URL requirements.</source>
          <target state="translated">Scrive la stringa specificata, codificandola secondo i requisiti URL.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> method encodes characters that could be considered URL delimiters (dependent on the setting of <ph id="ph2">`argument`</ph>) into strings of the form <ph id="ph3">`%xx`</ph>, if the ASCII code is less than 128; otherwise, <ph id="ph4">`%uxxxx`</ph>, where <ph id="ph5">`x`</ph> is a hexadecimal digit.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> metodo codifica i caratteri che possono essere considerati come delimitatori URL (dipende dall'impostazione di <ph id="ph2">`argument`</ph>) in stringhe di formato <ph id="ph3">`%xx`</ph>, se il codice ASCII è inferiore a 128; in caso contrario, <ph id="ph4">`%uxxxx`</ph>, dove <ph id="ph5">`x`</ph> è un cifra esadecimale.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> methods use the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> method as a utility method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> metodi utilizzano il <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> metodo come metodo di utilità.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>