<Type Name="Html32TextWriter" FullName="System.Web.UI.Html32TextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd10b676a3221b2b0462daa6da9f6ac2dc629d3e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36577023" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Html32TextWriter : System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Html32TextWriter extends System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Html32TextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class Html32TextWriter&#xA;Inherits HtmlTextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class Html32TextWriter : System::Web::UI::HtmlTextWriter" />
  <TypeSignature Language="F#" Value="type Html32TextWriter = class&#xA;    inherit HtmlTextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlTextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Scrive una serie di caratteri e testo specifici di HTML 3.2 nel flusso di output per un controllo server ASP.NET. La classe <see cref="T:System.Web.UI.Html32TextWriter" /> fornisce le funzionalità di formattazione usate dai controlli server di ASP.NET per il rendering del contenuto HTML 3.2 sui client.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Html32TextWriter> classe è un'alternativa al <xref:System.Web.UI.HtmlTextWriter> classe. Converte gli attributi di stile HTML 4.0 in HTML 3.2 tag e attributi equivalenti. Consente di standardizzare la propagazione degli attributi, ad esempio i colori e tipi di carattere, utilizzando le tabelle HTML. ASP.NET usa automaticamente questa classe per HTML 3.2 e i browser precedenti controllando il <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> proprietà del <xref:System.Web.HttpBrowserCapabilities> classe. A meno che non si crea una pagina personalizzata o una scheda di controllo che ha come destinazione i dispositivi che usano i tag HTML 3.2, non è necessaria creare un'istanza di <xref:System.Web.UI.Html32TextWriter> classe in modo esplicito.  
  
 Per ulteriori informazioni sulla personalizzazione pagina e il rendering del controllo, vedere [procedura dettagliata: sviluppo e un controllo del Server Web personalizzato utilizzato](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare una classe denominata `CustomHtml32TextWriter`, che deriva dal <xref:System.Web.UI.Html32TextWriter> classe. `CustomHtml32TextWriter` Crea due costruttori che seguono il modello che viene stabilito per il <xref:System.Web.UI.HtmlTextWriter> classe ed esegue l'override di <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A>, <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A>, <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A>, e <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> metodi.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#1)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlTextWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.Html32TextWriter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Html32TextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Html32TextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Html32TextWriter : System.IO.TextWriter -&gt; System.Web.UI.Html32TextWriter" Usage="new System.Web.UI.Html32TextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Classe <see cref="T:System.IO.TextWriter" /> che esegue il rendering del contenuto HMTL.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.Html32TextWriter" /> che utilizza il rientro della riga specificato nel campo <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> quando il browser richiedente necessita di rientri di riga.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Html32TextWriter.%23ctor%2A> costruttore passa il <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> valore del campo da una seconda versione che presenta due parametri seguenti:  
  
-   `writer`, che accetta un'istanza di <xref:System.IO.TextWriter> classe.  
  
-   `tabString`, che accetta una stringa che definisce il rientro della riga.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare una classe personalizzata che deriva dal <xref:System.Web.UI.Html32TextWriter> classe. Sono disponibili due costruttori, ovvero standard per tutte le classi che derivano direttamente o indirettamente dal <xref:System.Web.UI.HtmlTextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#1)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Html32TextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Html32TextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Html32TextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.Html32TextWriter" Usage="new System.Web.UI.Html32TextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.IO.TextWriter" /> che esegue il rendering del contenuto HMTL 3.2.</param>
        <param name="tabString">Stringa che rappresenta il numero di spazi definito dalla proprietà <see cref="P:System.Web.UI.HtmlTextWriter.Indent" />.</param>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.Web.UI.Html32TextWriter" /> che utilizza il rientro della riga specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare una classe personalizzata che deriva dal <xref:System.Web.UI.Html32TextWriter> classe. Sono disponibili due costruttori, ovvero standard per tutte le classi che derivano direttamente o indirettamente dal <xref:System.Web.UI.HtmlTextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#1)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
      </Docs>
    </Member>
    <Member MemberName="FontStack">
      <MemberSignature Language="C#" Value="protected System.Collections.Stack FontStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack FontStack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.FontStack" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FontStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Stack ^ FontStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FontStack : System.Collections.Stack" Usage="System.Web.UI.Html32TextWriter.FontStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di informazioni relative ai caratteri per il rendering da parte di HTML.</summary>
        <value>Insieme di informazioni relative ai caratteri.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected override string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="override this.GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string" Usage="html32TextWriter.GetTagName tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">Valore di enumerazione <see cref="T:System.Web.UI.HtmlTextWriterTag" /> per il quale si desidera ottenere l'elemento HTML.</param>
        <summary>Restituisce l'elemento HTML associato al valore di enumerazione <see cref="T:System.Web.UI.HtmlTextWriterTag" /> specificato.</summary>
        <returns>Elemento HTML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Web.UI.HtmlTextWriterTag.Div?displayProperty=nameWithType> campo viene passato `tagKey` e il <xref:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution%2A> proprietà `true`, il <xref:System.Web.UI.Html32TextWriter.GetTagName%2A> metodo restituisce il `table` elemento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="html32TextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">Attributo di stile HTML da scrivere nel flusso di output.</param>
        <param name="value">Valore associato all'attributo di stile HTML.</param>
        <param name="key">Valore di enumerazione di <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associato all'attributo di stile HTML.</param>
        <summary>Determina se scrivere l'attributo di stile HTML specificato e il relativo valore nel flusso di output.</summary>
        <returns>
          <see langword="true" /> se il rendering dell'attributo di stile HTML e del relativo valore verrà eseguito nel flusso di output. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Html32TextWriter.OnStyleAttributeRender%2A> metodo supporta un numero inferiore di attributi di stile HTML più il <xref:System.Web.UI.Html32TextWriter.OnStyleAttributeRender%2A> metodo sottoposto a override.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected override bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="html32TextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">Elemento HTML da scrivere nel flusso di output.</param>
        <param name="key">Valore di enumerazione di <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associato all'elemento HTML.</param>
        <summary>Determina se scrivere l'elemento HTML specificato nel flusso di output.</summary>
        <returns>
          <see langword="true" /> se l'elemento HTML viene scritto nel flusso di output. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution%2A> proprietà è `true`, la <xref:System.Web.UI.Html32TextWriter.OnTagRender%2A> metodo sostituisce qualsiasi `div` gli elementi che eseguono il rendering da un controllo con `table` elementi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected override string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderAfterContent();" />
      <MemberSignature Language="F#" Value="override this.RenderAfterContent : unit -&gt; string" Usage="html32TextWriter.RenderAfterContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Scrive eventuale testo o spaziatura disponibile dopo il contenuto dell'elemento HTML.</summary>
        <returns>Spaziatura o testo da scrivere dopo il contenuto dell'elemento HTML. In caso contrario, se non esistono informazioni di questo tipo di cui eseguire il rendering, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metodo. Ogni sottoposto a override di metodo prima controlla se un `th` elemento viene eseguito il rendering e quindi utilizza il <xref:System.Web.UI.Html32TextWriter.SupportsBold%2A> metodo per verificare se il dispositivo richiedente può visualizzare la formattazione in grassetto. Se il dispositivo supporta la formattazione in grassetto, il <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metodo scrive il tag di chiusura di un `b` elemento. Se il dispositivo non supporta la formattazione in grassetto, il <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metodo scrive il tag di chiusura di un `font` elemento.  
  
 Successivamente, il codice verifica se un `h4` elemento viene eseguito il rendering e quindi utilizza il <xref:System.Web.UI.Html32TextWriter.SupportsItalic%2A> proprietà per controllare se il dispositivo richiedente può essere visualizzato corsivo. Se il dispositivo supporta il grassetto, il <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metodo scrive il tag di chiusura di un `i` elemento. Se il dispositivo non supporta il grassetto, il <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metodo scrive il tag di chiusura di un `font` elemento.  
  
 Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#4)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected override string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderAfterTag();" />
      <MemberSignature Language="F#" Value="override this.RenderAfterTag : unit -&gt; string" Usage="html32TextWriter.RenderAfterTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Scrive qualsiasi testo o spaziatura rilevata dopo il tag di chiusura di un elemento HTML.</summary>
        <returns>Spaziatura o testo da scrivere dopo il tag di chiusura dell'elemento HTML. In caso contrario, se non esistono informazioni di questo tipo di cui eseguire il rendering, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> metodo. Il codice controlla se un `a` elemento viene eseguito il rendering. In tal caso, il <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> metodo scrive il tag di chiusura di un `small` elemento. L'esempio per la <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A> metodo esegue la stessa verifica per il `a` elemento e quindi scrive il tag di apertura del `small` elemento.  
  
 Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#5)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected override string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderBeforeContent();" />
      <MemberSignature Language="F#" Value="override this.RenderBeforeContent : unit -&gt; string" Usage="html32TextWriter.RenderBeforeContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Scrive qualsiasi spaziatura di tabulazione o informazione sul tipo di carattere presente prima del contenuto di un elemento HTML.</summary>
        <returns>Informazioni relative ai caratteri o alla spaziatura da scrivere prima del rendering del contenuto dell'elemento HTML. In caso contrario, se non esistono informazioni di questo tipo di cui eseguire il rendering, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metodo. Il codice controlla se un `th` elemento viene eseguito il rendering e quindi utilizza il <xref:System.Web.UI.Html32TextWriter.SupportsBold%2A> metodo per verificare se il dispositivo richiedente può visualizzare la formattazione in grassetto. Se il dispositivo supporta la formattazione in grassetto, il <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metodo scrive il tag di apertura di un `b` elemento. Se il dispositivo non supporta la formattazione in grassetto, il <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metodo scrive il tag di apertura di un `font` elemento con un `color` attributo impostato sul valore esadecimale del rosso.  
  
 Successivamente, ogni metodo controlla se un `h4` elemento viene eseguito il rendering e quindi utilizza il <xref:System.Web.UI.Html32TextWriter.SupportsItalic%2A> proprietà per controllare se il dispositivo richiedente può essere visualizzato corsivo. Se il dispositivo supporta il grassetto, il <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metodo scrive il tag di apertura di un `i` elemento. Se il dispositivo non supporta il grassetto, il <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metodo scrive il tag di apertura di un `font` elemento con un `color` attributo impostato sul valore esadecimale per blu scuro.  
  
 Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#2)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected override string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderBeforeTag();" />
      <MemberSignature Language="F#" Value="override this.RenderBeforeTag : unit -&gt; string" Usage="html32TextWriter.RenderBeforeTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Scrive qualsiasi testo o spaziatura di tabulazione presente prima del tag di apertura di un elemento HTML nel flusso di output di HTML 3.2.</summary>
        <returns>Informazioni relative ai caratteri e alla spaziatura di cui eseguire il rendering prima del tag. In caso contrario, se non esistono informazioni di questo tipo di cui eseguire il rendering, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A> metodo. Il codice controlla se un `a` elemento viene eseguito il rendering. In tal caso, sottoposto a override <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A> metodo scrive il tag di apertura di un `small` elemento. L'esempio per la <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> esegue la stessa verifica per il `a` elemento e quindi scrive il tag di chiusura del `small` elemento.  
  
 Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#3)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="html32TextWriter.RenderBeginTag tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">Valore di enumerazione <see cref="T:System.Web.UI.HtmlTextWriterTag" /> che indica l'elemento HTML da scrivere.</param>
        <summary>Scrive il tag di apertura dell'elemento specificato nel flusso di output di HTML 3.2.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un `div` viene specificato alcun elemento e il <xref:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution%2A> valore della proprietà è `true`, il <xref:System.Web.UI.Html32TextWriter.RenderBeginTag%2A> metodo esegue base `table` formattazione per presentare il contenuto che è contenuto nell'elemento il `div` elemento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag();" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : unit -&gt; unit" Usage="html32TextWriter.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Scrive nel flusso di output dell'oggetto <see cref="T:System.Web.UI.Html32TextWriter" /> il tag finale di un elemento HTML e qualsiasi informazione sul tipo di carattere associata all'elemento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPerformDivTableSubstitution">
      <MemberSignature Language="C#" Value="public bool ShouldPerformDivTableSubstitution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldPerformDivTableSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldPerformDivTableSubstitution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldPerformDivTableSubstitution { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldPerformDivTableSubstitution : bool with get, set" Usage="System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore Boolean che indica se sostituire un elemento <see langword="Table" /> con un elemento <see langword="Div" /> per ridurre il tempo necessario per il rendering di un blocco di HTML.</summary>
        <value>
          <see langword="true" /> per sostituire <see langword="Table" /> con <see langword="Div" />. In caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBold">
      <MemberSignature Language="C#" Value="public bool SupportsBold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBold" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.SupportsBold" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsBold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsBold { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBold : bool with get, set" Usage="System.Web.UI.Html32TextWriter.SupportsBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore Boolean che indica se il dispositivo richiedente supporta testo HTML in grassetto. La proprietà <see cref="P:System.Web.UI.Html32TextWriter.SupportsBold" /> consente di eseguire in modo condizionale il rendering di testo in grassetto nel flusso di output della classe <see cref="T:System.Web.UI.Html32TextWriter" />.</summary>
        <value>
          <see langword="true" /> se il dispositivo richiedente supporta il testo in grassetto. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> e <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metodi. Ogni override controlla se un `Label` elemento viene eseguito il rendering e quindi utilizza il <xref:System.Web.UI.Html32TextWriter.SupportsBold%2A> metodo per verificare se il dispositivo richiedente può visualizzare la formattazione in grassetto. Se il dispositivo supporta la formattazione in grassetto, il <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metodo scrive il tag di apertura di un `b` elemento e il <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metodo scrive il tag di chiusura. Se il dispositivo non supporta la formattazione in grassetto, il <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metodo scrive il tag di apertura di un `Font` elemento con un `color` attributo impostato sul valore esadecimale del rosso e il <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metodo scrive il tag di chiusura.  
  
 Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#2)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
        <altmember cref="P:System.Web.UI.Html32TextWriter.SupportsItalic" />
      </Docs>
    </Member>
    <Member MemberName="SupportsItalic">
      <MemberSignature Language="C#" Value="public bool SupportsItalic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsItalic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.SupportsItalic" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsItalic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsItalic { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SupportsItalic : bool with get, set" Usage="System.Web.UI.Html32TextWriter.SupportsItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore Boolean che indica se il dispositivo richiedente supporta testo HTML in corsivo. La proprietà <see cref="P:System.Web.UI.Html32TextWriter.SupportsItalic" /> consente di eseguire in modo condizionale il rendering di testo in corsivo nel flusso di output della classe <see cref="T:System.Web.UI.Html32TextWriter" />.</summary>
        <value>
          <see langword="true" /> se il dispositivo richiedente supporta il testo in corsivo. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> e <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metodi. Ogni override controlla se un `span` elemento viene eseguito il rendering e quindi utilizza il <xref:System.Web.UI.Html32TextWriter.SupportsItalic%2A> proprietà per controllare se il dispositivo richiedente può essere visualizzato corsivo. Se il dispositivo supporta il grassetto, il <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metodo scrive il tag di apertura di un `i` elemento e il <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metodo scrive il tag di chiusura. Se il dispositivo non supporta il grassetto, il <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metodo scrive il tag di apertura di un `Font` elemento con un `color` attributo impostato sul valore esadecimale per blu scuro e il <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metodo scrive il tag di chiusura.  
  
 Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#2)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
        <altmember cref="P:System.Web.UI.Html32TextWriter.SupportsBold" />
      </Docs>
    </Member>
  </Members>
</Type>