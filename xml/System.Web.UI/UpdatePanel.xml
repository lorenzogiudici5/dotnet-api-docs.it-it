<Type Name="UpdatePanel" FullName="System.Web.UI.UpdatePanel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66ef0d171c99e6ddb1e86ae6595f835a04020b98" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36575466" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UpdatePanel : System.Web.UI.Control, System.Web.UI.IAttributeAccessor, System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdatePanel extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor, class System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdatePanel" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdatePanel&#xA;Inherits Control&#xA;Implements IAttributeAccessor, IUpdatePanel" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdatePanel : System::Web::UI::Control, System::Web::UI::IAttributeAccessor, System::Web::UI::IUpdatePanel" />
  <TypeSignature Language="F#" Value="type UpdatePanel = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor&#xA;    interface IUpdatePanel" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IUpdatePanel</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Triggers")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.UpdatePanel.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enables sections of a page to be partially rendered without a postback.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In questo argomento  
  
-   [Introduzione](#introduction)  
  
-   [Aggiornamento del contenuto di UpdatePanel](#refreshing_updatepanel_content)  
  
-   [Utilizzo di UpdatePanel](#updatepanel_usage)  
  
-   [Applicazione di stili](#applying_styles)  
  
-   [Sintassi dichiarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduzione  
 <xref:System.Web.UI.UpdatePanel> i controlli sono una parte centrale della funzionalità AJAX in ASP.NET. Vengono utilizzati con il <xref:System.Web.UI.ScriptManager> controllo per attivare il rendering parziale della pagina. Per il rendering parziale della pagina riduce la necessità di postback sincroni e gli aggiornamenti a pagina completo quando solo parte della pagina deve essere aggiornata. Per il rendering parziale della pagina consente di migliorare l'esperienza utente perché riduce lo sfarfallio che si verifica durante un postback pagina intera e migliora l'interattività della pagina Web.  
  
<a name="refreshing_updatepanel_content"></a>   
## <a name="refreshing-updatepanel-content"></a>Aggiornamento del contenuto di UpdatePanel  
 Quando è abilitato per il rendering parziale della pagina, un controllo può eseguire un postback che aggiorna l'intera pagina o un postback asincrono che aggiorna il contenuto di uno o più <xref:System.Web.UI.UpdatePanel> controlli. Indica se un controllo provoca un postback asincrono e aggiornamenti un <xref:System.Web.UI.UpdatePanel> controllo dipende da quanto segue:  
  
-   Se il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> proprietà del <xref:System.Web.UI.UpdatePanel> NFS è impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, il <xref:System.Web.UI.UpdatePanel> contenuto del controllo viene aggiornato a ogni postback proveniente dalla pagina. Sono inclusi i postback asincroni da controlli che sono all'interno di altre <xref:System.Web.UI.UpdatePanel> postback da controlli che non sono all'interno e controlli <xref:System.Web.UI.UpdatePanel> controlli.  
  
-   Se il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, il <xref:System.Web.UI.UpdatePanel> contenuto del controllo viene aggiornato nelle circostanze seguenti:  
  
    -   Quando si chiama il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo il <xref:System.Web.UI.UpdatePanel> controllare in modo esplicito.  
  
    -   Quando il <xref:System.Web.UI.UpdatePanel> controllo è nidificato in un'altra <xref:System.Web.UI.UpdatePanel> controllo e al pannello padre è aggiornato.  
  
    -   Quando un postback è causato da un controllo che viene definito come trigger utilizzando il `Triggers` proprietà del <xref:System.Web.UI.UpdatePanel> controllo. In questo scenario, il controllo attiva in modo esplicito l'aggiornamento del contenuto del pannello. Il controllo può essere interna o esterna il <xref:System.Web.UI.UpdatePanel> controllo che è associato il trigger.  
  
    -   Quando il <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> è impostata su `true` e un controllo figlio del <xref:System.Web.UI.UpdatePanel> controllo provoca un postback. I controlli figlio di annidati <xref:System.Web.UI.UpdatePanel> controlli non causano un aggiornamento per l'outer <xref:System.Web.UI.UpdatePanel> controllare a meno che non sono definite esplicitamente come trigger.  
  
 La combinazione dell'impostazione il <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> proprietà da `false` e il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> proprietà <xref:System.Web.UI.UpdatePanelUpdateMode.Always> non è consentito e verrà generata un'eccezione.  
  
 Quando il <xref:System.Web.UI.UpdatePanel> controllo esegue un postback asincrono, aggiunge un'intestazione HTTP personalizzata. Alcuni proxy rimuovere questa intestazione HTTP personalizzata. In questo caso, il server gestisce la richiesta come un postback regolare, generando un errore del client. Per risolvere questo problema, inserire un campo modulo personalizzato quando si esegue il post asincrono. Controllare l'intestazione o al campo del form personalizzata nel codice server.  
  
<a name="updatepanel_usage"></a>   
## <a name="updatepanel-usage"></a>Utilizzo di UpdatePanel  
 È possibile utilizzare più <xref:System.Web.UI.UpdatePanel> controlli per aggiornare diverse aree della pagina in modo indipendente. Quando la pagina che contiene uno o più <xref:System.Web.UI.UpdatePanel> controlli viene innanzitutto sottoposto a rendering, tutto il contenuto di tutti i <xref:System.Web.UI.UpdatePanel> controlli sono sottoposto a rendering e inviati al browser. Nei successivi postback asincroni, il contenuto di ogni <xref:System.Web.UI.UpdatePanel> controllo potrebbe non essere aggiornato a seconda delle impostazioni del pannello e della logica di server o client per i singoli pannelli.  
  
 È anche possibile usare <xref:System.Web.UI.UpdatePanel> controlli negli scenari seguenti:  
  
-   Nei controlli utente.  
  
-   Nelle pagine master e di contenuto.  
  
-   Annidato all'interno di altre <xref:System.Web.UI.UpdatePanel> controlli.  
  
-   All'interno basati su modelli dei controlli, ad esempio il <xref:System.Web.UI.WebControls.GridView> o <xref:System.Web.UI.WebControls.Repeater> controlli.  
  
 <xref:System.Web.UI.UpdatePanel> è possibile aggiungere controlli in modo dichiarativo o a livello di codice.  
  
 È possibile aggiungere un <xref:System.Web.UI.UpdatePanel> controllare a livello di codice, ma non è possibile aggiungere trigger a livello di codice. Per creare trigger un comportamento simile, è possibile registrare un controllo nella pagina come controllo di postback asincrono. Eseguire questa operazione chiamando il <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> metodo il <xref:System.Web.UI.ScriptManager> controllo. È quindi possibile creare un gestore eventi che viene eseguito in risposta al postback asincrono e nel gestore, chiamare il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo il <xref:System.Web.UI.UpdatePanel> controllo.  
  
<a name="applying_styles"></a>   
## <a name="applying-styles"></a>Applicazione di stili  
 Il <xref:System.Web.UI.UpdatePanel> controllo accetta gli attributi expando. Ciò consente di impostare una classe CSS per HTMLelements che i controlli di rendering. Ad esempio, è possibile creare il codice illustrato nell'esempio seguente:  
  
```  
<asp:UpdatePanel runat="server" class="myStyle">  
</asp:UpdatePanel>   
```  
  
 Il markup nell'esempio precedente viene eseguito il rendering HTML simile al seguente quando si esegue la pagina:  
  
```  
<div id="ctl00_MainContent_UpdatePanel1" class="MyStyle">  
</div>  
```  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintassi dichiarativa  
  
```  
<asp:UpdatePanel  
    ChildrenAsTriggers="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    RenderMode="Block|Inline"  
    runat="server"  
    SkinID="string"  
    UpdateMode="Always|Conditional"  
    Visible="True|False"  
>  
    <ContentTemplate>  
        <!-- child controls -->  
    </ContentTemplate>  
    <Triggers>  
        <asp:AsyncPostBackTrigger   
            ControlID="string"  
            EventName="string"  
        />  
        <asp:PostBackTrigger   
            ControlID="string"  
        />  
    </Triggers>  
</asp:UpdatePanel>  
```  
  
   
  
## Examples  
 Gli esempi seguenti illustrano vari modi di usare il <xref:System.Web.UI.UpdatePanel> controllo.  
  
 **Controlli all'interno di un controllo UpdatePanel**  
  
 Nell'esempio seguente viene illustrato come inserire controlli all'interno di un <xref:System.Web.UI.UpdatePanel> per ridurre lo sfarfallio dello schermo quando si registra nel server di controllo. In questo esempio, un <xref:System.Web.UI.WebControls.Calendar> e un <xref:System.Web.UI.WebControls.DropDownList> controllo sono racchiusi tra parentesi una <xref:System.Web.UI.UpdatePanel> controllo. Per impostazione predefinita, il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> proprietà è <xref:System.Web.UI.UpdatePanelUpdateMode.Always> e il <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> proprietà `true`. Pertanto, i controlli figlio del pannello provocano un postback asincrono.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  
  
 **Scenario Master-Details con controlli UpdatePanel**  
  
 Nell'esempio seguente, un <xref:System.Web.UI.UpdatePanel> controllo viene utilizzato in uno scenario master-details che mostra gli ordini e dettagli dell'ordine dal database Northwind. Uno <xref:System.Web.UI.UpdatePanel> controllo contiene il <xref:System.Web.UI.WebControls.GridView> controllo che visualizza un elenco di ordini. Un secondo <xref:System.Web.UI.UpdatePanel> controllo contiene un <xref:System.Web.UI.WebControls.DetailsView> controllo che visualizza i dettagli di un tipo di ordinamento. Quando si seleziona un ordine della prima tabella, nella seconda tabella vengono visualizzati i dettagli per quest'ordine. La seconda tabella viene aggiornata in modo asincrono in base alla selezione nella prima tabella. Le operazioni di ordinamento e paging nella tabella di riepilogo ordini causano anche da aggiornamenti parziali.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample2CS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample2VB.aspx#2)]  
  
 Se si inserisce un <xref:System.Web.UI.WebControls.GridView> controllo all'interno di un <xref:System.Web.UI.UpdatePanel> impostazione di controllo, la <xref:System.Web.UI.WebControls.GridView> del controllo <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> proprietà `true` non è supportata. Tuttavia, perché il <xref:System.Web.UI.UpdatePanel> controllo supporta i postback asincroni, tutti i postback che modificano il <xref:System.Web.UI.WebControls.GridView> controllo all'interno di un <xref:System.Web.UI.UpdatePanel> controllo causare lo stesso comportamento di ordinamento e paging callback.  
  
 **Utilizzo di un controllo UpdatePanel in un modello**  
  
 Nell'esempio seguente, un' <xref:System.Web.UI.UpdatePanel> controllo viene utilizzato nel modello di elemento di un <xref:System.Web.UI.WebControls.GridView> controllo. <xref:System.Web.UI.UpdatePanel> i controlli in ogni riga di dati vengono generati automaticamente. Ogni riga <xref:System.Web.UI.UpdatePanel> controllo contiene un <xref:System.Web.UI.WebControls.Label> controllo per visualizzare la quantità dell'elemento in tale riga e una <xref:System.Web.UI.WebControls.Button> controllo per diminuire e aumentare la quantità.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample3CS.aspx#3)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample3VB.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdatePanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UpdatePanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.UpdatePanel" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per inizializzare una nuova istanza di <xref:System.Web.UI.UpdatePanel> classe. Aggiungere in modo dinamico un' <xref:System.Web.UI.UpdatePanel> il controllo a una pagina, creare un nuovo <xref:System.Web.UI.UpdatePanel> dell'istanza e quindi aggiungere i controlli figlio per l'oggetto di controllo che è esposto dall'istanza <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare in modo dinamico un <xref:System.Web.UI.UpdatePanel> e aggiungerlo a una pagina. Quando si fa clic su pulsante all'interno di <xref:System.Web.UI.UpdatePanel> (controllo), il messaggio viene aggiornato con la data e ora. I controlli figlio vengono aggiunti utilizzando la <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> proprietà.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Web.UI.AttributeCollection" Usage="System.Web.UI.UpdatePanel.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("WebControl_Attributes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the cascading style sheet (CSS) attributes collection of the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
        <value>I nomi di foglio di stile CSS le regole di stile nell'insieme di attributi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.Attributes%2A> proprietà contiene una raccolta di attributi di stile CSS che può essere usato in che li racchiude `div` elemento del <xref:System.Web.UI.UpdatePanel> controllo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsTriggers">
      <MemberSignature Language="C#" Value="public bool ChildrenAsTriggers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsTriggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildrenAsTriggers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChildrenAsTriggers { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ChildrenAsTriggers : bool with get, set" Usage="System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether postbacks from immediate child controls of an <see cref="T:System.Web.UI.UpdatePanel" /> control update the panel's content.</summary>
        <value>
          <see langword="true" /> Se i postback dal figlio immediati controlli del <see cref="T:System.Web.UI.UpdatePanel" /> aggiornamento del controllo del pannello del contenuto; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare il <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> proprietà da `true` se si desidera che i postback dai controlli figlio immediati del <xref:System.Web.UI.UpdatePanel> provocare un aggiornamento del contenuto del Pannello di controllo. Di controlli figlio annidati <xref:System.Web.UI.UpdatePanel> controlli non provocheranno un aggiornamento dell'elemento padre <xref:System.Web.UI.UpdatePanel> del controllo contenuto a meno che non si chiama il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo in modo esplicito o è definire i controlli figlio come trigger.  
  
> [!NOTE]
>  Quando il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Always> e il <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> è impostata su `false`, una <xref:System.InvalidOperationException> generata un'eccezione durante il <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> metodo. Questa combinazione di proprietà non è consentita per il <xref:System.Web.UI.UpdatePanel> controllo.  
  
 Uno scenario in cui è possibile impostare <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> al `false` quando si dispone di due <xref:System.Web.UI.UpdatePanel> controlli e si desidera un postback dal pannello primo di aggiornare il contenuto del pannello del secondo, ma non aggiorna il proprio contenuto. Ad esempio, il primo pannello potrebbe essere un elenco di prodotti da acquistare e il secondo pannello potrebbe essere un carrello acquisti.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ ContentTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the template that defines the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
        <value>Un' <see cref="T:System.Web.UI.ITemplate" /> che definisce il contenuto dell'istanza di <see cref="T:System.Web.UI.UpdatePanel" /> controllo. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> proprietà contiene il contenuto visualizzato all'interno di un <xref:System.Web.UI.UpdatePanel> controllare quando ne viene eseguito il rendering. È possibile creare il contenuto del modello in modo dichiarativo o a livello di codice. Il modello di contenuto di un <xref:System.Web.UI.UpdatePanel> controllo è un modello a istanza singola. Pertanto, le proprietà di controlli in esso contenute sono accessibili direttamente nella pagina senza utilizzare il <xref:System.Web.UI.Page.FindControl%2A> metodo. Per altre informazioni, vedere il <xref:System.Web.UI.TemplateInstanceAttribute> Cenni preliminari sulla classe.  
  
 Per aggiungere elementi ai <xref:System.Web.UI.UpdatePanel> controllare in modo dichiarativo, aggiungere un' `<ContentTemplate>` elemento tra i tag di apertura e chiusura del <xref:System.Web.UI.UpdatePanel> controllo. All'interno di `<ContentTemplate>` tag di elementi, dichiarare altri controlli e gli elementi HTML.  
  
 Per aggiungere elementi ai <xref:System.Web.UI.UpdatePanel> controllare in modo dinamico, utilizzare il <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> proprietà, che consente di aggiungere i controlli figlio senza dover creare un modello personalizzato che implementa il <xref:System.Web.UI.ITemplate> interfaccia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> property of the <see cref="T:System.Web.UI.UpdatePanel" /> control is set after an instance of the template is created or after the content template container is created.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="T:System.Web.UI.TemplateInstanceAttribute" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ContentTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ContentTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTemplateContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ContentTemplateContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplateContainer : System.Web.UI.Control" Usage="System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a control object to which you can programmatically add child controls.</summary>
        <value>Un <see cref="T:System.Web.UI.Control" /> oggetto che definisce il contenuto del <see cref="T:System.Web.UI.UpdatePanel" /> controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> proprietà consente di aggiungere a livello di codice i controlli figlio per il <xref:System.Web.UI.UpdatePanel> controllo senza la necessità di definire un modello personalizzato che eredita il <xref:System.Web.UI.ITemplate> interfaccia. Se si aggiunge contenuto per il <xref:System.Web.UI.UpdatePanel> controllare in modo dichiarativo o tramite una finestra di progettazione, è necessario aggiungere contenuto al <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> proprietà tramite un `<ContentTemplate>` elemento.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come specificare a livello di codice il <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> proprietà di un <xref:System.Web.UI.UpdatePanel> controllo. Il <xref:System.Web.UI.WebControls.Label.Text%2A> proprietà di un <xref:System.Web.UI.WebControls.Label> controllo viene impostato quando `Button1` fa.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override sealed System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.UpdatePanel.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.UI.ControlCollection" /> object that contains the child controls for the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
        <value>La raccolta di controlli figlio per il <see cref="T:System.Web.UI.UpdatePanel" /> controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.Controls%2A> proprietà viene sostituita dalla base <xref:System.Web.UI.Control> classe e sealed per impedire ulteriori derivazioni. Per aggiungere controlli ai <xref:System.Web.UI.UpdatePanel> controllare in modo dichiarativo, creare un `<ContentTemplate>` elemento all'interno di <xref:System.Web.UI.UpdatePanel> markup del controllo. Per aggiungere controlli per la <xref:System.Web.UI.UpdatePanel> controllare a livello di codice, utilizzare il <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.Clear" />, <see cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />, or <see cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" /> method of the <see cref="T:System.Web.UI.ControlCollection" /> class has been called. To change the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control, modify the child controls of the <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> property.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="CreateContentTemplateContainer">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateContentTemplateContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateContentTemplateContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentTemplateContainer () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateContentTemplateContainer();" />
      <MemberSignature Language="F#" Value="abstract member CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control&#xA;override this.CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control" Usage="updatePanel.CreateContentTemplateContainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a <see cref="T:System.Web.UI.Control" /> object that acts as a container for child controls that define the <see cref="T:System.Web.UI.UpdatePanel" /> control's content.</summary>
        <returns>A <see cref="T:System.Web.UI.Control" /> container for the <see cref="T:System.Web.UI.UpdatePanel" /> control's content.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è destinato all'utilizzo dagli sviluppatori di controlli che desiderano estendere il <xref:System.Web.UI.UpdatePanel> controllo. Ad esempio, nelle classi derivate, è possibile fornire un controllo radice diverse che funge da contenitore per il <xref:System.Web.UI.UpdatePanel> contenuto del controllo. L'implementazione predefinita restituisce un <xref:System.Web.UI.Control> oggetto.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> metodo in un oggetto personalizzato <xref:System.Web.UI.UpdatePanel> controllo eseguire sempre il rendering di `<fieldset>` e `<legend>` elementi per il contenuto del pannello. L'oggetto personalizzato <xref:System.Web.UI.UpdatePanel> controllo definisce una proprietà pubblica denominata `GroupingText` vale a dire una stringa letterale all'interno di `<legend>` elemento.  
  
 Un oggetto personalizzato <xref:System.Web.UI.UpdatePanel> controllo denominato `CustomUpdatePanel` deriva da <xref:System.Web.UI.UpdatePanel> ed eseguire l'override di <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> metodo. Inserire il `CustomUpdatePanel` classe codice sorgente nella cartella App_Code del sito Web.  
  
 [!code-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/App_Code/CustomUpdatePanel.cs#2)]
 [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/App_Code/CustomUpdatePanel.vb#2)]  
  
 L'oggetto personalizzato <xref:System.Web.UI.UpdatePanel> controllo viene utilizzato nella pagina esattamente come il <xref:System.Web.UI.UpdatePanel> controllo. L'esempio seguente mostra una pagina che contiene l'oggetto personalizzato <xref:System.Web.UI.UpdatePanel> controllo.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/UpdatePanelCreateContentTemplateContainerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/UpdatePanelCreateContentTemplateContainerVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection&#xA;override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="updatePanel.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the collection of all controls that are contained in the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> object that consists of all controls that define the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.CreateControlCollection%2A> metodo viene utilizzato dagli sviluppatori di controlli.  
  
 Poiché questo metodo è protetto e sealed, è visibile alle classi che ereditano dal <xref:System.Web.UI.UpdatePanel> classe, ma non può essere sottoposto a override. Questo metodo esegue l'override dell'implementazione di base per restituire un specializzate <xref:System.Web.UI.ControlCollection> oggetto che genera un <xref:System.InvalidOperationException> quando il <xref:System.Web.UI.ControlCollection.Add%2A>, <xref:System.Web.UI.ControlCollection.AddAt%2A>, <xref:System.Web.UI.ControlCollection.Clear%2A>, <xref:System.Web.UI.ControlCollection.Remove%2A>, oppure <xref:System.Web.UI.ControlCollection.RemoveAt%2A> metodo del <xref:System.Web.UI.ControlCollection> classe viene richiamata. Per modificare il contenuto del <xref:System.Web.UI.UpdatePanel> controllare, modificare i controlli figlio del <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="updatePanel.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initializes the <see cref="T:System.Web.UI.UpdatePanel" /> control trigger collection if partial-page rendering is enabled.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se per il rendering parziale della pagina non è abilitato, i trigger definiti nel <xref:System.Web.UI.UpdatePanel.Triggers%2A> proprietà non vengono inizializzati perché non hanno alcun effetto. Il <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> proprietà del <xref:System.Web.UI.ScriptManager> controllo Ottiene o imposta un valore che indica se è abilitato per il rendering parziale della pagina. Il <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> proprietà del <xref:System.Web.UI.ScriptManager> controllo Ottiene o imposta un valore che indica se è supportato per il rendering parziale della pagina.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando esegue l'override di <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> (metodo), assicurarsi di chiamare la classe di base in modo che i trigger vengono registrati se è abilitato per il rendering parziale della pagina.</para>
        </block>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
        <altmember cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="IsInPartialRendering">
      <MemberSignature Language="C#" Value="public bool IsInPartialRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInPartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInPartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInPartialRendering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInPartialRendering : bool" Usage="System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.UpdatePanel" /> control is being updated as a result of an asynchronous postback.</summary>
        <value>
          <see langword="true" /> Se l'oggetto corrente <see cref="T:System.Web.UI.UpdatePanel" /> controllo è stata aggiornata in seguito a un postback asincrono; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.IsInPartialRendering%2A> proprietà è destinata all'utilizzo dagli sviluppatori di controlli che desiderano sapere quando un <xref:System.Web.UI.UpdatePanel> controllo viene aggiornato in seguito a un postback asincrono. Negli scenari di sviluppo di pagine, utilizzare il <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> proprietà per determinare se una pagina viene elaborata come risultato un postback asincrono.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInit : EventArgs -&gt; unit&#xA;override this.OnInit : EventArgs -&gt; unit" Usage="updatePanel.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel> del controllo <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> viene creata un'istanza di proprietà durante il <xref:System.Web.UI.UpdatePanel.OnInit%2A> metodo.  
  
 Il <xref:System.Web.UI.UpdatePanel.OnInit%2A> metodo viene utilizzato dagli sviluppatori di controlli per estendere le funzionalità del <xref:System.Web.UI.UpdatePanel> controllo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> property is being defined when the <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> property has already been created.</exception>
        <block subset="none" type="overrides">
          <para>Quando esegue l'override di <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> metodo in una classe derivata, assicurarsi di chiamare il <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> metodo della classe di base in modo che i delegati registrati può ricevere l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoad : EventArgs -&gt; unit&#xA;override this.OnLoad : EventArgs -&gt; unit" Usage="updatePanel.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.Load" /> event for the <see cref="T:System.Web.UI.UpdatePanel" /> control and invokes the <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> method when partial-page rendering is not enabled.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Se esegue l'override di <see cref="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" /> (metodo), assicurarsi di chiamare la classe di base in modo che il <see cref="E:System.Web.UI.Control.Load" /> verrà generato l'evento.</para>
        </block>
        <altmember cref="M:System.Web.UI.UpdatePanel.Initialize" />
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreRender : EventArgs -&gt; unit&#xA;override this.OnPreRender : EventArgs -&gt; unit" Usage="updatePanel.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> metodo viene utilizzato dagli sviluppatori di controlli per estendere le funzionalità del <xref:System.Web.UI.UpdatePanel> controllo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" /> property is set to <see langword="false" />, and the <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> property is set to <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnload : EventArgs -&gt; unit&#xA;override this.OnUnload : EventArgs -&gt; unit" Usage="updatePanel.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains event data.</param>
        <summary>Raises the base <see cref="E:System.Web.UI.Control.Unload" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.OnUnload%2A> metodo viene utilizzato dagli sviluppatori di controlli per estendere le funzionalità del <xref:System.Web.UI.UpdatePanel> controllo  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> object that represents the output stream for rendering HTML content.</param>
        <summary>Raises the <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.Render%2A> metodo viene utilizzato dagli sviluppatori di controlli per estendere le funzionalità del <xref:System.Web.UI.UpdatePanel> controllo.  
  
 Il <xref:System.Web.UI.UpdatePanel.Render%2A> metodo scrive il contenuto renderizzato del <xref:System.Web.UI.UpdatePanel> controllo per il browser mediante l'oggetto specificato <xref:System.Web.UI.HtmlTextWriter> oggetto. Quando esegue l'override di <xref:System.Web.UI.UpdatePanel.Render%2A> metodo in una classe derivata, assicurarsi di chiamare il <xref:System.Web.UI.UpdatePanel.Render%2A> metodo della base classe in modo che i controlli figlio del <xref:System.Web.UI.UpdatePanel> controllo vengono sottoposti a rendering.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> object that represents the output stream for rendering HTML content.</param>
        <summary>Raises the <see cref="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> metodo viene utilizzato dagli sviluppatori di controlli per estendere le funzionalità del <xref:System.Web.UI.UpdatePanel> controllo.  
  
 Il <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> metodo scrive il contenuto renderizzato del <xref:System.Web.UI.UpdatePanel> controllo per il browser mediante l'oggetto specificato <xref:System.Web.UI.HtmlTextWriter> oggetto. Quando esegue l'override di <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> metodo in una classe derivata, assicurarsi di chiamare il <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> metodo della base classe in modo che i controlli figlio del <xref:System.Web.UI.UpdatePanel> controllo vengono sottoposti a rendering.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelRenderMode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelRenderMode RenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderMode As UpdatePanelRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelRenderMode RenderMode { System::Web::UI::UpdatePanelRenderMode get(); void set(System::Web::UI::UpdatePanelRenderMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderMode : System.Web.UI.UpdatePanelRenderMode with get, set" Usage="System.Web.UI.UpdatePanel.RenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether an <see cref="T:System.Web.UI.UpdatePanel" /> control's content is enclosed in an HTML <see langword="&lt;div&gt;" /> or <see langword="&lt;span&gt;" /> element.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.UpdatePanelRenderMode" />. Il valore predefinito è <see cref="F:System.Web.UI.UpdatePanelRenderMode.Block" /> in modo che il contenuto del pannello è racchiuso tra HTML <see langword="&lt;div&gt;" /> elemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Web.UI.UpdatePanel.RenderMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelRenderMode.Inline>, il contenuto di un <xref:System.Web.UI.UpdatePanel> controllo viene eseguito il rendering in HTML `<span>` elemento. Se il <xref:System.Web.UI.UpdatePanel.RenderMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelRenderMode.Block>, viene eseguito il rendering in HTML `<div>` elemento.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Web.UI.UpdatePanel.RenderMode%2A> proprietà in modo dichiarativo. Il <xref:System.Web.UI.UpdatePanel> controllo denominato `UpdatePanel1` viene eseguito il rendering in HTML `<span>` elemento. Se il <xref:System.Web.UI.UpdatePanel.RenderMode%2A> impostata su <xref:System.Web.UI.UpdatePanelRenderMode.Block>, il paragrafo risulta apparirebbe disgiunto a causa del modo in cui il codice HTML `<div>` elemento viene sottoposto a rendering.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/CS/UpdatePanelRenderModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/VB/UpdatePanelRenderModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="RequiresUpdate">
      <MemberSignature Language="C#" Value="protected internal virtual bool RequiresUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property RequiresUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool RequiresUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUpdate : bool" Usage="System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control will be updated.</summary>
        <value>
          <see langword="true" /> Se il <see cref="T:System.Web.UI.UpdatePanel" /> il contenuto del controllo verrà aggiornato; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, il <xref:System.Web.UI.UpdatePanel.RequiresUpdate%2A> proprietà restituisce `true` se il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo è stato chiamato in modo esplicito oppure se il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Always>.  
  
 Questa proprietà è destinata all'utilizzo dagli sviluppatori di controlli che desiderano estendere il <xref:System.Web.UI.UpdatePanel> controllo. Ad esempio, nelle classi derivate, è possibile fornire logica aggiuntiva per determinare se un <xref:System.Web.UI.UpdatePanel> controllo deve essere aggiornato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (key As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ key) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The name of the attribute.</param>
        <summary>Returns an attribute of a Web control by using a specified name.</summary>
        <returns>The value of the attribute.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un'implementazione esplicita di un membro di interfaccia. e può essere utilizzato solo quando si esegue il cast dell'istanza di <xref:System.Web.UI.UpdatePanel> su un'interfaccia <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (key As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ key, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The name of the attribute to set.</param>
        <param name="value">The value of the attribute to set.</param>
        <summary>Sets the value of the specified control attribute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un'implementazione esplicita di un membro di interfaccia. e può essere utilizzato solo quando si esegue il cast dell'istanza di <xref:System.Web.UI.UpdatePanel> su un'interfaccia <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelTriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.UpdatePanelTriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As UpdatePanelTriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelTriggerCollection ^ Triggers { System::Web::UI::UpdatePanelTriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Web.UI.UpdatePanelTriggerCollection" Usage="System.Web.UI.UpdatePanel.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelTriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> object that contains <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> and <see cref="T:System.Web.UI.PostBackTrigger" /> objects that were registered declaratively for the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
        <value>Una raccolta di oggetti di tipo <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> e <see cref="T:System.Web.UI.PostBackTrigger" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.Triggers%2A> proprietà ottiene una raccolta di tutti i trigger che sono stati definiti per il <xref:System.Web.UI.UpdatePanel> controllo. (È possibile definire trigger in modo dichiarativo utilizzando la **UpdatePanelTrigger Editor della raccolta** finestra di dialogo nella finestra di progettazione o tramite il `<Triggers>` elemento del <xref:System.Web.UI.UpdatePanel> controllo.) La raccolta include <xref:System.Web.UI.AsyncPostBackTrigger> e <xref:System.Web.UI.PostBackTrigger> oggetti.  
  
 I trigger dichiarativi che sono definiti nel <xref:System.Web.UI.UpdatePanel.Triggers%2A> insieme non vengono rilevate nello stato di visualizzazione.  
  
 Se un controllo che è un contenitore di denominazione viene utilizzato come un trigger, tutti i controlli figlio che generano postback si comportano come trigger.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelTriggerCollection" />
        <altmember cref="T:System.Web.UI.UpdatePanelTrigger" />
        <altmember cref="T:System.Web.UI.AsyncPostBackTrigger" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="updatePanel.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes an update of the content of an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la pagina è abilitata per il rendering parziale della pagina, quando si richiama il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo, il <xref:System.Web.UI.UpdatePanel> nel browser viene aggiornato il contenuto del controllo. Chiamare il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo se si dispone di codice server che deve eseguire per determinare se un <xref:System.Web.UI.UpdatePanel> controllo deve essere aggiornato. Se si prevede di usare il <xref:System.Web.UI.UpdatePanel.Update%2A> (metodo), impostare il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> proprietà <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. Se si desidera che la decisione di aggiornare il pannello nella logica del server, assicurarsi che il <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> proprietà `false` e che non esplicita sono definiti trigger per il pannello.  
  
 In uno scenario di sviluppo di pagina tipiche, se si definiscono i trigger o se il <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> proprietà è `true` per il <xref:System.Web.UI.UpdatePanel> (controllo), il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo viene chiamato automaticamente durante il ciclo di vita della pagina.  
  
 Se il <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> proprietà non è definita per il <xref:System.Web.UI.UpdatePanel> controllare, si verificherà alcun aggiornamento del pannello.  
  
   
  
## Examples  
 Nell'esempio seguente viene utilizzata la <xref:System.Web.UI.UpdatePanel.Update%2A> metodo per aggiornare il contenuto di un <xref:System.Web.UI.UpdatePanel> controllare quando più di cinque secondi trascorsi dopo l'ultimo aggiornamento.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> property is set to <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.  \- or –  The <see cref="M:System.Web.UI.UpdatePanel.Update" /> method is called during or after the page's <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> event.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelUpdateMode UpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelUpdateMode UpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMode As UpdatePanelUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelUpdateMode UpdateMode { System::Web::UI::UpdatePanelUpdateMode get(); void set(System::Web::UI::UpdatePanelUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMode : System.Web.UI.UpdatePanelUpdateMode with get, set" Usage="System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates when an <see cref="T:System.Web.UI.UpdatePanel" /> control's content is updated.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.UpdatePanelUpdateMode" />. Il valore predefinito è <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un <xref:System.Web.UI.UpdatePanel> controllo non è presente in un'altra <xref:System.Web.UI.UpdatePanel> il pannello di controllo, viene aggiornato in base alle impostazioni del <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> e <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> proprietà, con la raccolta di trigger. Quando un <xref:System.Web.UI.UpdatePanel> controllo si trova all'interno di un altro <xref:System.Web.UI.UpdatePanel> (controllo), il pannello figlio viene aggiornata automaticamente quando il pannello padre è aggiornato.  
  
 Il contenuto di un <xref:System.Web.UI.UpdatePanel> controllo viene aggiornato nelle circostanze seguenti:  
  
-   Se il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, il <xref:System.Web.UI.UpdatePanel> contenuto del controllo viene aggiornato a ogni postback che deriva da un punto qualsiasi della pagina. Sono inclusi i postback asincroni da controlli che sono all'interno di altre <xref:System.Web.UI.UpdatePanel> postback da controlli che non sono all'interno e controlli <xref:System.Web.UI.UpdatePanel> controlli.  
  
-   Se il <xref:System.Web.UI.UpdatePanel> controllo è nidificato in un'altra <xref:System.Web.UI.UpdatePanel> controllo e il pannello di aggiornamento padre viene aggiornato.  
  
-   Se il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, e si verifica una delle condizioni seguenti:  
  
    -   Si chiama il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo il <xref:System.Web.UI.UpdatePanel> controllare in modo esplicito.  
  
    -   Il postback è causato da un controllo che viene definito come trigger utilizzando il <xref:System.Web.UI.UpdatePanel.Triggers%2A> proprietà del <xref:System.Web.UI.UpdatePanel> controllo. In questo scenario, il controllo attiva in modo esplicito l'aggiornamento del contenuto del pannello. Il controllo può essere interna o esterna il <xref:System.Web.UI.UpdatePanel> controllo che definisce il trigger.  
  
    -   Il <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> è impostata su `true` e un controllo figlio del <xref:System.Web.UI.UpdatePanel> controllo provoca un postback. Un controllo figlio di un nidificate <xref:System.Web.UI.UpdatePanel> controllo non provoca un aggiornamento per l'outer <xref:System.Web.UI.UpdatePanel> controllare a meno che non è definito in modo esplicito come un trigger.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare la proprietà <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>. Nell'esempio viene dichiarata due <xref:System.Web.UI.UpdatePanel> controlli. Nel primo pannello, il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. Nel pannello del secondo <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Always>. Un pulsante all'esterno di entrambi i pannelli viene registrato come controllo di postback asincrono chiamando il <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> metodo il <xref:System.Web.UI.ScriptManager> controllo. Il pulsante `Click` gestore dell'evento, il <xref:System.Web.UI.UpdatePanel.Update%2A> del primo pannello viene chiamato se più di cinque secondi trascorsi dall'ultimo aggiornamento. In questo scenario, il contenuto del pannello viene aggiornato solo se l'ultimo aggiornamento è stato effettuato più di cinque secondi. Il contenuto del secondo pannello viene sempre aggiornato.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified type is not one of the <see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> values.</exception>
        <altmember cref="T:System.Web.UI.UpdatePanelUpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.Update" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      </Docs>
    </Member>
  </Members>
</Type>