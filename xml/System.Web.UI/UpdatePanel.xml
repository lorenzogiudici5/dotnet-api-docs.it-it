<Type Name="UpdatePanel" FullName="System.Web.UI.UpdatePanel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7df503fad3c7f9bf2f7aff23a8a308f8b9041b04" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51863026" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UpdatePanel : System.Web.UI.Control, System.Web.UI.IAttributeAccessor, System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdatePanel extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor, class System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdatePanel" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdatePanel&#xA;Inherits Control&#xA;Implements IAttributeAccessor, IUpdatePanel" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdatePanel : System::Web::UI::Control, System::Web::UI::IAttributeAccessor, System::Web::UI::IUpdatePanel" />
  <TypeSignature Language="F#" Value="type UpdatePanel = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor&#xA;    interface IUpdatePanel" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IUpdatePanel</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Triggers")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.UpdatePanel.bmp")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente il rendering parziale di sezioni di una pagina senza un postback.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In questo argomento  
  
-   [Introduzione](#introduction)  
  
-   [Aggiornamento del contenuto di UpdatePanel](#refreshing_updatepanel_content)  
  
-   [Utilizzo di UpdatePanel](#updatepanel_usage)  
  
-   [Applicazione di stili](#applying_styles)  
  
-   [Sintassi dichiarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduzione  
 <xref:System.Web.UI.UpdatePanel> i controlli sono una parte essenziale di funzionalità AJAX in ASP.NET. Vengono usati con il <xref:System.Web.UI.ScriptManager> controllo per abilitare il rendering parziale della pagina. Per il rendering parziale della pagina riduce la necessità di aggiornamenti dell'intera pagina e postback sincroni quando solo parte della pagina deve essere aggiornato. Rendering parziale della pagina consente di migliorare l'esperienza dell'utente perché riduce lo sfarfallio che si verifica durante un postback pagina intera e migliora l'interattività di pagina Web.  
  
<a name="refreshing_updatepanel_content"></a>   
## <a name="refreshing-updatepanel-content"></a>Aggiornamento del contenuto di UpdatePanel  
 Quando è abilitato per il rendering parziale della pagina, un controllo può eseguire un postback che aggiorna l'intera pagina o un postback asincrono che aggiorna il contenuto di uno o più <xref:System.Web.UI.UpdatePanel> controlli. Indica se un controllo provoca un postback asincrono e aggiornamenti un <xref:System.Web.UI.UpdatePanel> controllo dipende da quanto segue:  
  
-   Se il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> proprietà del <xref:System.Web.UI.UpdatePanel> NFS è impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, il <xref:System.Web.UI.UpdatePanel> contenuto del controllo viene aggiornato a ogni postback che ha origine dalla pagina. Sono inclusi i postback asincroni dai controlli all'interno di altri <xref:System.Web.UI.UpdatePanel> i postback derivanti dai controlli che non sono all'interno e controlli <xref:System.Web.UI.UpdatePanel> controlli.  
  
-   Se il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, il <xref:System.Web.UI.UpdatePanel> contenuto del controllo viene aggiornato nelle circostanze seguenti:  
  
    -   Quando si chiama il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo di <xref:System.Web.UI.UpdatePanel> controllare in modo esplicito.  
  
    -   Quando la <xref:System.Web.UI.UpdatePanel> controllo è annidato all'interno di altro <xref:System.Web.UI.UpdatePanel> controllo e il pannello padre viene aggiornato.  
  
    -   Quando un postback è causato da un controllo che è definito come trigger usando il `Triggers` proprietà del <xref:System.Web.UI.UpdatePanel> controllo. In questo scenario, il controllo attiva in modo esplicito un aggiornamento del contenuto del pannello. Il controllo può essere all'interno o all'esterno di <xref:System.Web.UI.UpdatePanel> controllo che il trigger è associato.  
  
    -   Quando la <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> è impostata su `true` e un controllo figlio del <xref:System.Web.UI.UpdatePanel> controllo determina un postback. Di controlli figlio annidati <xref:System.Web.UI.UpdatePanel> controlli non provocano un aggiornamento per l'outer <xref:System.Web.UI.UpdatePanel> controllare a meno che non sono definite esplicitamente come trigger.  
  
 La combinazione dell'impostazione di <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> proprietà `false` e il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> proprietà <xref:System.Web.UI.UpdatePanelUpdateMode.Always> non è consentito e verrà generata un'eccezione.  
  
 Quando il <xref:System.Web.UI.UpdatePanel> controllo esegue un postback asincrono, aggiunge un'intestazione HTTP personalizzata. Alcuni proxy rimuovere l'intestazione HTTP personalizzata. In questo caso, il server gestisce la richiesta come un normale postback, provocando un errore del client. Per risolvere questo problema, inserire un campo del form personalizzata quando si eseguono gli invii asincroni. Controllare l'intestazione o al campo del form personalizzata nel codice server.  
  
<a name="updatepanel_usage"></a>   
## <a name="updatepanel-usage"></a>Utilizzo di UpdatePanel  
 È possibile usare più <xref:System.Web.UI.UpdatePanel> controlli per aggiornare diverse aree della pagina in modo indipendente. Quando la pagina che contiene uno o più <xref:System.Web.UI.UpdatePanel> controlli viene innanzitutto sottoposto a rendering, tutto il contenuto di tutte le <xref:System.Web.UI.UpdatePanel> controlli vengono eseguito il rendering e inviati al browser. Asincrono durante i postback successivi, il contenuto della ognuno <xref:System.Web.UI.UpdatePanel> controllo potrebbe non essere aggiornato a seconda delle impostazioni del pannello e sulla logica di client o server per i singoli pannelli.  
  
 È anche possibile usare <xref:System.Web.UI.UpdatePanel> controlli negli scenari seguenti:  
  
-   Nei controlli utente.  
  
-   Nelle pagine master e di contenuto.  
  
-   Annidato all'interno di altri <xref:System.Web.UI.UpdatePanel> controlli.  
  
-   All'interno basato su modelli dei controlli, ad esempio la <xref:System.Web.UI.WebControls.GridView> o <xref:System.Web.UI.WebControls.Repeater> controlli.  
  
 <xref:System.Web.UI.UpdatePanel> è possibile aggiungere i controlli in modo dichiarativo o a livello di codice.  
  
 È possibile aggiungere un <xref:System.Web.UI.UpdatePanel> controllare a livello di codice, ma non è possibile aggiungere trigger a livello di codice. Per creare un comportamento simile a trigger, è possibile registrare un controllo nella pagina come controllo di postback asincrono. Eseguire questa operazione chiamando il <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> metodo del <xref:System.Web.UI.ScriptManager> controllo. È quindi possibile creare un gestore eventi che viene eseguito in risposta al postback asincrono e nel gestore di chiamata il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo di <xref:System.Web.UI.UpdatePanel> controllo.  
  
<a name="applying_styles"></a>   
## <a name="applying-styles"></a>Applicazione di stili  
 Il <xref:System.Web.UI.UpdatePanel> controllo accetta gli attributi expando. Ciò consente di impostare una classe CSS per HTMLelements che eseguono il rendering dei controlli. Ad esempio, è possibile creare il codice illustrato nell'esempio seguente:  
  
```  
<asp:UpdatePanel runat="server" class="myStyle">  
</asp:UpdatePanel>   
```  
  
 Il markup nell'esempio precedente esegue il rendering HTML simile al seguente quando viene eseguita la pagina:  
  
```  
<div id="ctl00_MainContent_UpdatePanel1" class="MyStyle">  
</div>  
```  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintassi dichiarativa  
  
```  
<asp:UpdatePanel  
    ChildrenAsTriggers="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    RenderMode="Block|Inline"  
    runat="server"  
    SkinID="string"  
    UpdateMode="Always|Conditional"  
    Visible="True|False"  
>  
    <ContentTemplate>  
        <!-- child controls -->  
    </ContentTemplate>  
    <Triggers>  
        <asp:AsyncPostBackTrigger   
            ControlID="string"  
            EventName="string"  
        />  
        <asp:PostBackTrigger   
            ControlID="string"  
        />  
    </Triggers>  
</asp:UpdatePanel>  
```  
  
   
  
## Examples  
 Gli esempi seguenti illustrano diversi usi del <xref:System.Web.UI.UpdatePanel> controllo.  
  
 **Controlli all'interno di un controllo UpdatePanel**  
  
 Nell'esempio seguente mostra come inserire i controlli all'interno di un <xref:System.Web.UI.UpdatePanel> controllo per ridurre lo sfarfallio durante la registrazione al server. In questo esempio, un <xref:System.Web.UI.WebControls.Calendar> e una <xref:System.Web.UI.WebControls.DropDownList> controllo sono all'interno di un <xref:System.Web.UI.UpdatePanel> controllo. Per impostazione predefinita, il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> proprietà viene <xref:System.Web.UI.UpdatePanelUpdateMode.Always> e il <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> è di proprietà `true`. Di conseguenza, i controlli figlio del Pannello di causano un postback asincrono.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  
  
 **Scenario Master-Details con i controlli UpdatePanel**  
  
 Nell'esempio seguente, un <xref:System.Web.UI.UpdatePanel> controllo viene usato in uno scenario master-dettagli che mostra gli ordini e dettagli dell'ordine dal database Northwind. Uno <xref:System.Web.UI.UpdatePanel> controllo contiene la <xref:System.Web.UI.WebControls.GridView> controllo che visualizza un elenco di ordini. Una seconda <xref:System.Web.UI.UpdatePanel> controllo contiene un <xref:System.Web.UI.WebControls.DetailsView> controllo che visualizza i dettagli di un ordine. Quando si seleziona un ordine della prima tabella, nella seconda tabella vengono visualizzati i dettagli per tale ordine. Nella seconda tabella viene aggiornata in modo asincrono in base alla selezione nella prima tabella. Le operazioni di ordinamento e paging nella tabella di riepilogo ordini generano anche gli aggiornamenti parziali.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample2CS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample2VB.aspx#2)]  
  
 Se si inserisce un <xref:System.Web.UI.WebControls.GridView> controllo all'interno di un' <xref:System.Web.UI.UpdatePanel> impostazione di controllo, il <xref:System.Web.UI.WebControls.GridView> del controllo <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> proprietà `true` non è supportato. Tuttavia, perché il <xref:System.Web.UI.UpdatePanel> controllo supporta i postback asincroni, qualsiasi postback che modificano il <xref:System.Web.UI.WebControls.GridView> controllo all'interno di un <xref:System.Web.UI.UpdatePanel> controllo causare lo stesso comportamento di ordinamento e paging i callback.  
  
 **Utilizzo di un controllo UpdatePanel in un modello**  
  
 Nell'esempio seguente, un' <xref:System.Web.UI.UpdatePanel> controllo viene utilizzato nel modello di elemento di un <xref:System.Web.UI.WebControls.GridView> controllo. <xref:System.Web.UI.UpdatePanel> i controlli in ogni riga di dati vengono generati automaticamente. Ogni riga <xref:System.Web.UI.UpdatePanel> controllo contiene un <xref:System.Web.UI.WebControls.Label> controllo per visualizzare la quantità dell'elemento in tale riga e un <xref:System.Web.UI.WebControls.Button> controllo ridurre e aumentare la quantità.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample3CS.aspx#3)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample3VB.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManager" />
    <related type="Article" href="https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a">Panoramica della tecnologia di UpdatePanel</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b0156068-0d33-48e4-80fe-9ef76670ed26">Panoramica della tecnologia di ScriptManager</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdatePanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UpdatePanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per inizializzare una nuova istanza di <xref:System.Web.UI.UpdatePanel> classe. Aggiungere in modo dinamico un' <xref:System.Web.UI.UpdatePanel> a una pagina di controllo, creare un nuovo <xref:System.Web.UI.UpdatePanel> dell'istanza e quindi aggiungere i controlli figlio all'oggetto esposto da dell'istanza del controllo <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare in modo dinamico un <xref:System.Web.UI.UpdatePanel> controllano e aggiungerlo a una pagina. Quando si fa clic sul pulsante all'interno di <xref:System.Web.UI.UpdatePanel> controllo, il messaggio viene aggiornato con la data e ora. I controlli figlio vengono aggiunti usando il <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> proprietà.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Web.UI.AttributeCollection" Usage="System.Web.UI.UpdatePanel.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.WebSysDescription("WebControl_Attributes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di attributi del foglio di stile CSS del controllo <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Nomi delle regole di stile CSS nell'insieme di attributi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.Attributes%2A> proprietà contiene una raccolta di attributi di stile CSS che può essere usato in che li racchiude `div` elemento di <xref:System.Web.UI.UpdatePanel> controllo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsTriggers">
      <MemberSignature Language="C#" Value="public bool ChildrenAsTriggers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsTriggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildrenAsTriggers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChildrenAsTriggers { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ChildrenAsTriggers : bool with get, set" Usage="System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se i postback derivanti dai controlli figlio immediati di un controllo <see cref="T:System.Web.UI.UpdatePanel" /> aggiornano il contenuto del pannello.</summary>
        <value>
          <see langword="true" /> se i postback derivanti dai controlli figlio immediati del controllo <see cref="T:System.Web.UI.UpdatePanel" /> aggiornano il contenuto del pannello; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare il <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> proprietà `true` se si desidera che i postback derivanti dai controlli figlio immediati del <xref:System.Web.UI.UpdatePanel> controllo per fare in modo un aggiornamento del contenuto del pannello. Di controlli figlio annidati <xref:System.Web.UI.UpdatePanel> controlli non comporterà un aggiornamento dell'elemento padre <xref:System.Web.UI.UpdatePanel> del controllo contenuto a meno che non si chiama il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo in modo esplicito o è definire i controlli figlio come trigger.  
  
> [!NOTE]
>  Quando il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Always> e il <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> è impostata su `false`, una <xref:System.InvalidOperationException> eccezione viene generata durante la <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> (metodo). Questa combinazione di proprietà non è consentita per il <xref:System.Web.UI.UpdatePanel> controllo.  
  
 Uno scenario in cui è possibile impostare <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> al `false` quando si dispone di due <xref:System.Web.UI.UpdatePanel> controlli e si desidera che un postback del primo pannello per aggiornare il contenuto del pannello del secondo ma non aggiorna il proprio contenuto. Ad esempio, il primo pannello potrebbe essere un elenco di prodotti da acquistare e il secondo pannello potrebbe essere un carrello acquisti.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ ContentTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.TemplateInstance</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il modello che definisce il contenuto del controllo <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Istanza di <see cref="T:System.Web.UI.ITemplate" /> che definisce il contenuto del controllo <see cref="T:System.Web.UI.UpdatePanel" />. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> proprietà contiene il contenuto visualizzato all'interno di un <xref:System.Web.UI.UpdatePanel> controllare quando è sottoposto a rendering. È possibile creare il contenuto del modello in modo dichiarativo o a livello di codice. Il modello di contenuto di un <xref:System.Web.UI.UpdatePanel> controllo è un modello a istanza singola. Pertanto, le proprietà dei controlli in esso contenute sono accessibili direttamente nella pagina senza usare il <xref:System.Web.UI.Page.FindControl%2A> (metodo). Per altre informazioni, vedere il <xref:System.Web.UI.TemplateInstanceAttribute> Cenni preliminari sulla classe.  
  
 Per aggiungere elementi al <xref:System.Web.UI.UpdatePanel> in modo dichiarativo di controllo, aggiungere un' `<ContentTemplate>` elemento tra i tag di apertura e chiusura del <xref:System.Web.UI.UpdatePanel> controllo. All'interno di `<ContentTemplate>` tag dell'elemento, dichiarare altri controlli e gli elementi HTML.  
  
 Per aggiungere elementi al <xref:System.Web.UI.UpdatePanel> controllano in modo dinamico, usare il <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> proprietà, che consente di aggiungere i controlli figlio senza la necessità di creare un modello personalizzato che implementa il <xref:System.Web.UI.ITemplate> interfaccia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> del controllo <see cref="T:System.Web.UI.UpdatePanel" /> viene impostata dopo la creazione di un'istanza del modello o dopo la creazione del contenitore dei modelli di contento.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="T:System.Web.UI.TemplateInstanceAttribute" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f769d290-fd04-4084-85fc-4ea30dd2e8ae">Modelli di controlli Server Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ContentTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ContentTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTemplateContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ContentTemplateContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplateContainer : System.Web.UI.Control" Usage="System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto controllo a cui è possibile aggiungere controlli figlio a livello di codice.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.Control" /> che definisce il contenuto del controllo <see cref="T:System.Web.UI.UpdatePanel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> proprietà consente di aggiungere a livello di codice i controlli figlio per il <xref:System.Web.UI.UpdatePanel> controllo senza la necessità di definire un modello personalizzato che eredita dal <xref:System.Web.UI.ITemplate> interfaccia. Se si aggiunge contenuto al <xref:System.Web.UI.UpdatePanel> controllare in modo dichiarativo o tramite una finestra di progettazione, è necessario aggiungere il contenuto per il <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> usando un `<ContentTemplate>` elemento.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come specificare a livello di codice le <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> proprietà di un <xref:System.Web.UI.UpdatePanel> controllo. Il <xref:System.Web.UI.WebControls.Label.Text%2A> proprietà di un <xref:System.Web.UI.WebControls.Label> NFS è impostata quando `Button1` si fa clic.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override sealed System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.UpdatePanel.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Web.UI.ControlCollection" /> che contiene i controlli figlio per il controllo <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Insieme dei controlli figlio per il controllo <see cref="T:System.Web.UI.UpdatePanel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.Controls%2A> è sottoposta a override dalla base <xref:System.Web.UI.Control> classe e sealed per impedire ulteriori derivazioni. Per aggiungere controlli al <xref:System.Web.UI.UpdatePanel> controllano in modo dichiarativo, creare un `<ContentTemplate>` elemento all'interno di <xref:System.Web.UI.UpdatePanel> markup del controllo. Per aggiungere controlli per la <xref:System.Web.UI.UpdatePanel> controllare a livello di codice, utilizzare il <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">È stato chiamato il metodo <see cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.Clear" />, <see cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" /> o <see cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" /> della classe <see cref="T:System.Web.UI.ControlCollection" />. Per modificare il contenuto del controllo <see cref="T:System.Web.UI.UpdatePanel" />, modificare i controlli figlio della proprietà <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="CreateContentTemplateContainer">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateContentTemplateContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateContentTemplateContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentTemplateContainer () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateContentTemplateContainer();" />
      <MemberSignature Language="F#" Value="abstract member CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control&#xA;override this.CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control" Usage="updatePanel.CreateContentTemplateContainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un oggetto <see cref="T:System.Web.UI.Control" /> che svolge la funzione di contenitore per i controlli figlio che definiscono il contenuto del controllo <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <returns>Contenitore <see cref="T:System.Web.UI.Control" /> per il contenuto del controllo <see cref="T:System.Web.UI.UpdatePanel" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è destinato all'utilizzo dagli sviluppatori di controlli che desiderano estendere il <xref:System.Web.UI.UpdatePanel> controllo. Nelle classi derivate, ad esempio, è possibile fornire un controllo diverso radice che funge da contenitore per il <xref:System.Web.UI.UpdatePanel> contenuto del controllo. L'implementazione predefinita restituisce un <xref:System.Web.UI.Control> oggetto.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come eseguire l'override di <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> metodo in una classe personalizzata <xref:System.Web.UI.UpdatePanel> controllo eseguire sempre il rendering le `<fieldset>` e `<legend>` elementi per il contenuto del pannello. L'oggetto personalizzato <xref:System.Web.UI.UpdatePanel> controllo definisce una proprietà pubblica denominata `GroupingText` vale a dire una stringa letterale all'interno di `<legend>` elemento.  
  
 Una classe personalizzata <xref:System.Web.UI.UpdatePanel> controllo denominato `CustomUpdatePanel` deriva da <xref:System.Web.UI.UpdatePanel> ed esegue l'override di <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> (metodo). Inserire il `CustomUpdatePanel` codice sorgente nella cartella App_Code del sito Web della classe.  
  
 [!code-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/App_Code/CustomUpdatePanel.cs#2)]
 [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/App_Code/CustomUpdatePanel.vb#2)]  
  
 L'oggetto personalizzato <xref:System.Web.UI.UpdatePanel> controllo viene usato nella pagina come il <xref:System.Web.UI.UpdatePanel> controllo è. L'esempio seguente mostra una pagina che contiene l'oggetto personalizzato <xref:System.Web.UI.UpdatePanel> controllo.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/UpdatePanelCreateContentTemplateContainerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/UpdatePanelCreateContentTemplateContainerVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection&#xA;override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="updatePanel.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'insieme di tutti i controlli contenuti nel controllo <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <returns>Oggetto <see cref="T:System.Web.UI.ControlCollection" /> costituito da tutti i controlli che definiscono il contenuto del controllo <see cref="T:System.Web.UI.UpdatePanel" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.CreateControlCollection%2A> metodo viene usato dagli sviluppatori di controlli.  
  
 Poiché questo metodo è protetto e bloccato, è visibile alle classi che ereditano dal <xref:System.Web.UI.UpdatePanel> classe, ma non può essere sottoposto a override. Questo metodo esegue l'override dell'implementazione base per restituire un specializzato <xref:System.Web.UI.ControlCollection> oggetto che genera un <xref:System.InvalidOperationException> quando il <xref:System.Web.UI.ControlCollection.Add%2A>, <xref:System.Web.UI.ControlCollection.AddAt%2A>, <xref:System.Web.UI.ControlCollection.Clear%2A>, <xref:System.Web.UI.ControlCollection.Remove%2A>, o <xref:System.Web.UI.ControlCollection.RemoveAt%2A> metodo il <xref:System.Web.UI.ControlCollection> classe viene richiamata. Per modificare il contenuto del controllo <xref:System.Web.UI.UpdatePanel>, modificare i controlli figlio della proprietà <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="updatePanel.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inizializza l'insieme di trigger dei controlli <see cref="T:System.Web.UI.UpdatePanel" /> se è abilitato il rendering a pagina parziale.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è abilitato per il rendering parziale della pagina, i trigger definiti nel <xref:System.Web.UI.UpdatePanel.Triggers%2A> proprietà non inizializzate perché non hanno alcun effetto. Il <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> proprietà del <xref:System.Web.UI.ScriptManager> controllo Ottiene o imposta un valore che indica se è abilitato per il rendering parziale della pagina. Il <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> proprietà del <xref:System.Web.UI.ScriptManager> controllo Ottiene o imposta un valore che indica se è supportato per il rendering parziale della pagina.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando esegue l'override di <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> (metodo), assicurarsi di chiamare la classe di base in modo che i trigger vengono registrati, se è abilitato il rendering parziale della pagina.</para>
        </block>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
        <altmember cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="IsInPartialRendering">
      <MemberSignature Language="C#" Value="public bool IsInPartialRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInPartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInPartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInPartialRendering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInPartialRendering : bool" Usage="System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il controllo <see cref="T:System.Web.UI.UpdatePanel" /> viene aggiornato come risultato di un postback asincrono.</summary>
        <value>
          <see langword="true" /> se il controllo <see cref="T:System.Web.UI.UpdatePanel" /> corrente viene aggiornato come risultato di un postback asincrono; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.IsInPartialRendering%2A> proprietà deve essere utilizzato dagli sviluppatori di controlli che desiderano sapere quando un <xref:System.Web.UI.UpdatePanel> controllo viene aggiornato in seguito a un postback asincrono. Negli scenari di sviluppo di pagine, utilizzare il <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> proprietà per determinare se una pagina viene elaborata in seguito a un postback asincrono.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInit : EventArgs -&gt; unit&#xA;override this.OnInit : EventArgs -&gt; unit" Usage="updatePanel.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel> del controllo <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> viene creata un'istanza di proprietà durante la <xref:System.Web.UI.UpdatePanel.OnInit%2A> (metodo).  
  
 Il <xref:System.Web.UI.UpdatePanel.OnInit%2A> metodo viene utilizzato dagli sviluppatori di controlli per estendere le funzionalità del <xref:System.Web.UI.UpdatePanel> controllo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> viene definita quando la proprietà <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> è già stata creata.</exception>
        <block subset="none" type="overrides">
          <para>Quando esegue l'override di <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> metodo in una classe derivata, assicurarsi di chiamare il <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> metodo della classe di base in modo che i delegati registrati può ricevere l'evento.</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Panoramica del ciclo di vita della pagina ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoad : EventArgs -&gt; unit&#xA;override this.OnLoad : EventArgs -&gt; unit" Usage="updatePanel.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.Control.Load" /> per il controllo <see cref="T:System.Web.UI.UpdatePanel" /> e richiama il metodo <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> quando non è abilitato il rendering a pagina parziale.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Se esegue l'override di <see cref="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" /> metodo, assicurarsi di chiamare la classe di base in modo che il <see cref="E:System.Web.UI.Control.Load" /> verrà generato l'evento.</para>
        </block>
        <altmember cref="M:System.Web.UI.UpdatePanel.Initialize" />
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreRender : EventArgs -&gt; unit&#xA;override this.OnPreRender : EventArgs -&gt; unit" Usage="updatePanel.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.Control.PreRender" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> metodo viene utilizzato dagli sviluppatori di controlli per estendere le funzionalità del <xref:System.Web.UI.UpdatePanel> controllo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" /> è impostata su <see langword="false" /> e la proprietà <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> è impostata su <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnload : EventArgs -&gt; unit&#xA;override this.OnUnload : EventArgs -&gt; unit" Usage="updatePanel.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Web.UI.Control.Unload" /> di base.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.OnUnload%2A> metodo viene utilizzato dagli sviluppatori di controlli per estendere le funzionalità del <xref:System.Web.UI.UpdatePanel> controllo  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Panoramica del ciclo di vita della pagina ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che rappresenta il flusso di output per il rendering del contenuto HTML.</param>
        <summary>Genera l'evento <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.Render%2A> metodo viene utilizzato dagli sviluppatori di controlli per estendere le funzionalità del <xref:System.Web.UI.UpdatePanel> controllo.  
  
 Il <xref:System.Web.UI.UpdatePanel.Render%2A> metodo scrive il contenuto renderizzato del <xref:System.Web.UI.UpdatePanel> controllo nel browser mediante l'oggetto specificato <xref:System.Web.UI.HtmlTextWriter> oggetto. Quando esegue l'override di <xref:System.Web.UI.UpdatePanel.Render%2A> metodo in una classe derivata, assicurarsi di chiamare il <xref:System.Web.UI.UpdatePanel.Render%2A> metodo della base classe in modo che i controlli figlio del <xref:System.Web.UI.UpdatePanel> controllo vengono sottoposti a rendering.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Panoramica del ciclo di vita della pagina ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che rappresenta il flusso di output per il rendering del contenuto HTML.</param>
        <summary>Genera l'evento <see cref="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> metodo viene utilizzato dagli sviluppatori di controlli per estendere le funzionalità del <xref:System.Web.UI.UpdatePanel> controllo.  
  
 Il <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> metodo scrive il contenuto renderizzato del <xref:System.Web.UI.UpdatePanel> controllo nel browser mediante l'oggetto specificato <xref:System.Web.UI.HtmlTextWriter> oggetto. Quando esegue l'override di <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> metodo in una classe derivata, assicurarsi di chiamare il <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> metodo della base classe in modo che i controlli figlio del <xref:System.Web.UI.UpdatePanel> controllo vengono sottoposti a rendering.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Panoramica del ciclo di vita della pagina ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelRenderMode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelRenderMode RenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderMode As UpdatePanelRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelRenderMode RenderMode { System::Web::UI::UpdatePanelRenderMode get(); void set(System::Web::UI::UpdatePanelRenderMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderMode : System.Web.UI.UpdatePanelRenderMode with get, set" Usage="System.Web.UI.UpdatePanel.RenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se il contenuto di un controllo <see cref="T:System.Web.UI.UpdatePanel" /> viene racchiuso in un elemento HTML <see langword="&lt;div&gt;" /> o <see langword="&lt;span&gt;" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.UpdatePanelRenderMode" />. L'impostazione predefinita è <see cref="F:System.Web.UI.UpdatePanelRenderMode.Block" />, in modo che il contenuto del pannello venga racchiuso in un elemento HTML <see langword="&lt;div&gt;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Web.UI.UpdatePanel.RenderMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelRenderMode.Inline>, il contenuto di un <xref:System.Web.UI.UpdatePanel> controllo viene eseguito il rendering in HTML `<span>` elemento. Se il <xref:System.Web.UI.UpdatePanel.RenderMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelRenderMode.Block>, ne viene eseguito il rendering all'interno di un elemento HTML `<div>` elemento.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare il <xref:System.Web.UI.UpdatePanel.RenderMode%2A> proprietà in modo dichiarativo. Il <xref:System.Web.UI.UpdatePanel> controllo denominato `UpdatePanel1` viene eseguito il rendering in HTML `<span>` elemento. Se il <xref:System.Web.UI.UpdatePanel.RenderMode%2A> impostata su <xref:System.Web.UI.UpdatePanelRenderMode.Block>, il paragrafo apparirebbe disgiunto a causa del modo in cui il codice HTML `<div>` elemento sottoposto a rendering.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/CS/UpdatePanelRenderModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/VB/UpdatePanelRenderModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="RequiresUpdate">
      <MemberSignature Language="C#" Value="protected internal virtual bool RequiresUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property RequiresUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool RequiresUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUpdate : bool" Usage="System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il contenuto del controllo <see cref="T:System.Web.UI.UpdatePanel" /> verrà aggiornato.</summary>
        <value>
          <see langword="true" /> se il contenuto del controllo <see cref="T:System.Web.UI.UpdatePanel" /> verrà aggiornato; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, il <xref:System.Web.UI.UpdatePanel.RequiresUpdate%2A> proprietà restituisce `true` se il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo è stato chiamato in modo esplicito oppure se il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> viene impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Always>.  
  
 Questa proprietà è destinata all'utilizzo dagli sviluppatori di controlli che desiderano estendere il <xref:System.Web.UI.UpdatePanel> controllo. Nelle classi derivate, ad esempio, è possibile fornire logica aggiuntiva per determinare se un <xref:System.Web.UI.UpdatePanel> controllo deve essere aggiornato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (key As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ key) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nome dell'attributo.</param>
        <summary>Restituisce un attributo di un controllo Web utilizzando un nome specificato.</summary>
        <returns>Valore dell'attributo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.UpdatePanel> a un'interfaccia <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (key As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ key, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nome dell'attributo da impostare.</param>
        <param name="value">Valore dell'attributo da impostare.</param>
        <summary>Imposta il valore dell'attributo del controllo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro è un’implementazione esplicita di un membro di interfaccia. Può essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Web.UI.UpdatePanel> a un'interfaccia <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelTriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.UpdatePanelTriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As UpdatePanelTriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelTriggerCollection ^ Triggers { System::Web::UI::UpdatePanelTriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Web.UI.UpdatePanelTriggerCollection" Usage="System.Web.UI.UpdatePanel.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelTriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> che contiene gli oggetti <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> e <see cref="T:System.Web.UI.PostBackTrigger" /> registrati in modo dichiarativo per il controllo <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Insieme di oggetti di tipo <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> e <see cref="T:System.Web.UI.PostBackTrigger" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.UpdatePanel.Triggers%2A> proprietà ottiene una raccolta di tutti i trigger che sono stati definiti per il <xref:System.Web.UI.UpdatePanel> controllo. (È possibile definire trigger in modo dichiarativo utilizzando il **UpdatePanelTrigger Editor della raccolta** finestra di dialogo nella finestra di progettazione o tramite il `<Triggers>` elemento del <xref:System.Web.UI.UpdatePanel> controllo.) La raccolta include <xref:System.Web.UI.AsyncPostBackTrigger> e <xref:System.Web.UI.PostBackTrigger> oggetti.  
  
 Trigger dichiarativo definiti nel <xref:System.Web.UI.UpdatePanel.Triggers%2A> raccolta non vengono rilevate nello stato di visualizzazione.  
  
 Se un controllo che è un contenitore di denominazione viene usato come trigger, tutti i relativi controlli figlio che provocano postback si comportano come trigger.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelTriggerCollection" />
        <altmember cref="T:System.Web.UI.UpdatePanelTrigger" />
        <altmember cref="T:System.Web.UI.AsyncPostBackTrigger" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="updatePanel.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina un aggiornamento del contenuto di un controllo <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la pagina è abilitata per il rendering parziale della pagina, quando si richiama il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo, il <xref:System.Web.UI.UpdatePanel> nel browser viene aggiornato il contenuto del controllo. Chiamare il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo se si dispone di codice del server che deve eseguire per determinare se un <xref:System.Web.UI.UpdatePanel> controllo deve essere aggiornato. Se si prevede di usare la <xref:System.Web.UI.UpdatePanel.Update%2A> metodo, impostare il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> proprietà <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. Se si desidera che la decisione di aggiornare il pannello nella logica del server, assicurarsi che il <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> è di proprietà `false` e che non espliciti sono definiti trigger per il pannello.  
  
 In uno scenario di sviluppo tipica pagina, se si definiscono trigger o il <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> proprietà è `true` per il <xref:System.Web.UI.UpdatePanel> (controllo), il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo viene chiamato automaticamente durante il ciclo di vita della pagina.  
  
 Se il <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> proprietà non è definita per il <xref:System.Web.UI.UpdatePanel> controllare, si verificherà alcun aggiornamento del pannello.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo per aggiornare il contenuto di un <xref:System.Web.UI.UpdatePanel> controllare quando più di cinque secondi trascorsi dopo l'ultimo aggiornamento.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> è impostata su <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.  
  
\- oppure – 
Il metodo <see cref="M:System.Web.UI.UpdatePanel.Update" /> viene chiamato durante o dopo l'evento <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> della pagina.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelUpdateMode UpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelUpdateMode UpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMode As UpdatePanelUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelUpdateMode UpdateMode { System::Web::UI::UpdatePanelUpdateMode get(); void set(System::Web::UI::UpdatePanelUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMode : System.Web.UI.UpdatePanelUpdateMode with get, set" Usage="System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica quando viene aggiornato il contenuto di un controllo <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.UI.UpdatePanelUpdateMode" />. Il valore predefinito è <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un <xref:System.Web.UI.UpdatePanel> controllo non è presente in un'altra <xref:System.Web.UI.UpdatePanel> controllo, il pannello viene aggiornato in base alle impostazioni delle <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> e <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> proprietà, con la raccolta dei trigger. Quando un <xref:System.Web.UI.UpdatePanel> controllo si trova all'interno di un altro <xref:System.Web.UI.UpdatePanel> (controllo), il pannello figlio viene aggiornata automaticamente quando il pannello padre viene aggiornato.  
  
 Il contenuto di un <xref:System.Web.UI.UpdatePanel> controllo viene aggiornato nelle circostanze seguenti:  
  
-   Se il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, il <xref:System.Web.UI.UpdatePanel> contenuto del controllo viene aggiornato a ogni postback che deriva da un punto qualsiasi della pagina. Sono inclusi i postback asincroni dai controlli all'interno di altri <xref:System.Web.UI.UpdatePanel> i postback derivanti dai controlli che non sono all'interno e controlli <xref:System.Web.UI.UpdatePanel> controlli.  
  
-   Se il <xref:System.Web.UI.UpdatePanel> controllo è annidato all'interno di altro <xref:System.Web.UI.UpdatePanel> controllo e nel Pannello di aggiornamento padre viene aggiornato.  
  
-   Se il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, e si verifica una delle condizioni seguenti:  
  
    -   Si chiama il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo di <xref:System.Web.UI.UpdatePanel> controllare in modo esplicito.  
  
    -   Il postback è causato da un controllo che è definito come trigger usando il <xref:System.Web.UI.UpdatePanel.Triggers%2A> proprietà del <xref:System.Web.UI.UpdatePanel> controllo. In questo scenario, il controllo attiva in modo esplicito un aggiornamento del contenuto del pannello. Il controllo può essere all'interno o all'esterno di <xref:System.Web.UI.UpdatePanel> controllo che definisce il trigger.  
  
    -   Il <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> è impostata su `true` e un controllo figlio del <xref:System.Web.UI.UpdatePanel> controllo determina un postback. Un controllo figlio di un tipo annidato <xref:System.Web.UI.UpdatePanel> controllo non provoca un aggiornamento per l'outer <xref:System.Web.UI.UpdatePanel> controllare a meno che non sia definito esplicitamente come trigger.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare la proprietà <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>. Nell'esempio viene dichiarata due <xref:System.Web.UI.UpdatePanel> controlli. Nel primo pannello, il <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. Nel pannello dei secondo <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> è impostata su <xref:System.Web.UI.UpdatePanelUpdateMode.Always>. Un pulsante di fuori di entrambi i pannelli è registrato come un controllo di postback asincrono chiamando il <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> metodo del <xref:System.Web.UI.ScriptManager> controllo. Nel pulsante `Click` gestore dell'evento, il <xref:System.Web.UI.UpdatePanel.Update%2A> del primo pannello viene chiamato se più di cinque secondi trascorsi dall'ultimo aggiornamento. In questo scenario, il contenuto del pannello viene aggiornato solo se l'ultimo aggiornamento è stato effettuato più di cinque secondi. Il contenuto del secondo pannello sia sempre aggiornato.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il tipo specificato non è uno dei valori di <see cref="T:System.Web.UI.UpdatePanelUpdateMode" />.</exception>
        <altmember cref="T:System.Web.UI.UpdatePanelUpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.Update" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      </Docs>
    </Member>
  </Members>
</Type>