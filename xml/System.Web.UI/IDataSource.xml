<Type Name="IDataSource" FullName="System.Web.UI.IDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8bd9799a83592c123c572fa408e6f968b54e2249" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46676702" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataSource" />
  <TypeSignature Language="F#" Value="type IDataSource = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Rappresenta un'origine dati astratta alla quale stabiliscono un'associazione i controlli con associazione a dati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET supporta un'architettura di associazione dati di controllo che consente ai controlli server Web da associare ai dati in modo coerente. Controlli server Web da associare ai dati vengono definiti per i controlli con associazione a dati e le classi che semplificano che i binding vengono chiamati controlli origine dati. Controlli origine dati possono rappresentare qualsiasi origine dati: un database relazionale, un file, un flusso, un oggetto business e così via. I controlli origine dati presentare i dati in modo coerente a controlli con associazione a dati, indipendentemente dall'origine o formato dei dati sottostanti.  
  
 Si implementa il <xref:System.Web.UI.IDataSource> interfaccia quando si desidera implementare un controllo origine dati ASP.NET personalizzato.  
  
 Qualsiasi classe che implementa il <xref:System.Web.UI.IDataSource> interfaccia è un controllo origine dati. Il <xref:System.Web.UI.IDataSource> interfaccia funge da base per tutto il codice sorgente dati ASP.NET controlli e definisce uno dei concetti fondamentali dell'architettura data binding con i due metodi: il <xref:System.Web.UI.IDataSource.GetView%2A> metodo e <xref:System.Web.UI.IDataSource.GetViewNames%2A> (metodo). Questo concetto è che tutti i controlli origine dati supportano uno o più viste denominate i propri dati. L'oggetto vista origine dati è simile al <xref:System.Data.DataView> astrazione nel <xref:System.Data> dello spazio dei nomi: un data binding, visualizzazione dei dati per l'ordinamento, filtro e altre operazioni sui dati che definisce la vista personalizzata. In sostanza, un'origine dati di controllo non esegue alcuna operazione più di recuperare le visualizzazioni dei dati.  
  
 Un controllo origine dati può avere uno o più oggetti vista origine dati. Alcuni controlli origine dati, inclusi quelli che rappresentano, ad esempio database relazionali <xref:System.Web.UI.WebControls.SqlDataSource> e <xref:System.Web.UI.WebControls.AccessDataSource>, supporta una sola visualizzazione. Altri controlli origine dati, inclusi i controlli origine dati gerarchica, ad esempio <xref:System.Web.UI.WebControls.SiteMapDataSource>, supportano molte visualizzazioni. La vista origine dati definisce le funzionalità di un'origine dati e le operazioni che supporta.  
  
 In sintesi, implementano i controlli origine dati il <xref:System.Web.UI.IDataSource> interfaccia, supporta uno o più visualizzazioni sui dati rappresentati e sempre supporta il recupero dei dati dall'origine dati che rappresentano denominate. Controlli origine dati recuperano sempre i dati su richiesta, ad esempio quando `DataBind` viene chiamato su un controllo associato a dati.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come una classe può implementare i metodi definiti dal <xref:System.Web.UI.IDataSource> interfaccia per fornire dati a controlli con associazione a dati. Il controllo origine dati in questo esempio funziona come un'origine dati in un file con valori delimitati da virgole e utilizzabile da qualsiasi controllo associato a dati per visualizzare i dati di file delimitati da virgole. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.DataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando un controllo origine dati ha subito una qualsiasi modifica che influisce su controlli con associazione a dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.IDataSource.DataSourceChanged> l'evento viene generato quando le proprietà di un controllo con associazione a dati o i dati sottostanti è stato modificato in qualche modo che influisce sul data binding tra un controllo con associazione a dati e i relativi dati. Ad esempio, l'evento viene generato se un file di nome di proprietà, ad esempio il <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> proprietà, viene modificato in un controllo origine dati basata su file.  
  
 Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.DataSourceView" Usage="iDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nome della visualizzazione da recuperare.</param>
        <summary>Ottiene la visualizzazione origine dati denominata associata al controllo origine dati.</summary>
        <returns>Restituisce l'oggetto <see cref="T:System.Web.UI.DataSourceView" /> denominato associato al controllo <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Classi di controlli origine dati possono supportare uno o più visualizzazioni dei dati sottostanti. Queste viste sono rappresentate da istanze del <xref:System.Web.UI.DataSourceView> classe. La vista origine dati definisce le funzionalità di un controllo origine dati ed esegue tutte le operazioni necessarie per recuperare i dati dall'archivio dati sottostante ed esegua operazioni di ordinamento, inserimento, eliminazione e l'aggiornamento.  
  
 Controllo origine dati le classi che implementano il <xref:System.Web.UI.IDataSource> implementa interfaccia il <xref:System.Web.UI.IDataSource.GetView%2A> metodo restituisca fortemente tipizzato consente di visualizzare gli oggetti associati alla classe.  
  
   
  
## Examples  
 Esempio di codice seguente mostra in che modo una classe di controlli origine dati che implementa il <xref:System.Web.UI.IDataSource> interfaccia implementa la <xref:System.Web.UI.IDataSource.GetView%2A> metodo, che restituisce un'istanza fortemente tipizzata del <xref:System.Web.UI.DataSourceView> classe. Poiché il controllo origine dati supporta una sola visualizzazione, ignora il nome e restituisce una visualizzazione denominata con il nome di visualizzazione predefinito. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.DataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; System.Collections.ICollection" Usage="iDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene un insieme di nomi che rappresentano l'elenco di oggetti visualizzazione associati all'interfaccia <see cref="T:System.Web.UI.IDataSource" />.</summary>
        <returns>Un insieme <see cref="T:System.Collections.ICollection" /> che contiene i nomi delle visualizzazioni associate all'oggetto <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Classi di controlli origine dati possono supportare uno o più viste denominate i relativi dati sottostanti. Il <xref:System.Web.UI.IDataSource.GetViewNames%2A> metodo restituisce una raccolta di nomi di visualizzazione attualmente associato all'istanza di controllo origine dati. I chiamanti possono scorrere la raccolta di nomi di visualizzazioni e recuperare i singoli <xref:System.Web.UI.DataSourceView> gli oggetti con il <xref:System.Web.UI.IDataSource.GetView%2A> (metodo).  
  
 Controllo origine dati le classi che implementano il <xref:System.Web.UI.IDataSource> implementa interfaccia il <xref:System.Web.UI.IDataSource.GetViewNames%2A> per restituire una raccolta di nomi che rappresenta tutti i file di dati consente di visualizzare gli oggetti attualmente associati alla classe controllo origine dati.  
  
   
  
## Examples  
 Il codice seguente mostra in che modo un controllo origine dati che implementa il <xref:System.Web.UI.IDataSource> interfaccia implementa la <xref:System.Web.UI.IDataSource.GetViewNames%2A> metodo, che restituisce un <xref:System.Collections.ICollection> raccolta dei nomi. Poiché l'origine dati supporta una sola visualizzazione, il metodo restituisce una raccolta di un elemento con il nome predefinito per la visualizzazione. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.DataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
  </Members>
</Type>