<Type Name="PageStatePersister" FullName="System.Web.UI.PageStatePersister">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="958266b25b54a2aee32d5c8f9dd8d6258a5cc074" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39805486" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PageStatePersister" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageStatePersister extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageStatePersister" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageStatePersister" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageStatePersister abstract" />
  <TypeSignature Language="F#" Value="type PageStatePersister = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce le funzionalità di base per i meccanismi di persistenza dello stato di visualizzazione disponibili in ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le richieste HTTP e le risposte sono intrinsecamente senza state. Per mantenere le informazioni sullo stato tra le richieste HTTP, è possono archiviare le pagine ASP.NET <xref:System.Web.UI.Page> dello stato. Questo stato, denominato stato di visualizzazione è costituito da dati che rendono la pagina e i controlli vengono visualizzati come se sono uguali a quelle che l'utente visualizzato e interagisce con essi nell'ultimo round trip al server e le impostazioni di controllo e di pagina. Sono disponibili diversi meccanismi per archiviare lo stato di visualizzazione tra le richieste successive nella stessa pagina. La classe astratta <xref:System.Web.UI.PageStatePersister> rappresenta la classe base per questi meccanismi di archiviazione di informazioni sullo stato.  
  
 Il meccanismo di persistenza predefinito visualizzazione dello stato in ASP.NET è mantenere le informazioni sullo stato sotto forma di stringa con codifica Base64 in un elemento HTML nascosto (un elemento con la `type` attributo è impostato su `"hidden"`) nella pagina. Una pagina ASP.NET viene utilizzato un <xref:System.Web.UI.HiddenFieldPageStatePersister> oggetto per eseguire questa funziona, usando un <xref:System.Web.UI.IStateFormatter> istanza da serializzare e deserializzare le informazioni sullo stato di oggetto. In alternativa, è possibile archiviare lo stato di visualizzazione per le pagine nel <xref:System.Web.HttpContext.Session%2A> oggetto sul server utilizzando il <xref:System.Web.UI.SessionPageStatePersister> classe per i client per dispositivi mobili con larghezza di banda limitata e risorse. In alcuni casi, è possibile disabilitare completamente la persistenza dello stato di visualizzazione. In questo caso, il risultato è che in alcuni casi le pagine e controlli che si basano su salvataggio permanente dello stato non funzionano correttamente. Per altre informazioni sullo stato di gestione e visualizzazione di stato pagina, vedere [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 Se si siano scrivendo i controlli, è possibile archiviare le informazioni sullo stato per i controlli di <xref:System.Web.UI.Control.ViewState%2A> dizionario, che è un <xref:System.Web.UI.StateBag> oggetto. Lo sviluppatore dovrà recuperare lo stato del controllo tramite il <xref:System.Web.UI.PageStatePersister.ControlState%2A> proprietà. È possibile assegnare le chiavi e valori per il <xref:System.Web.UI.Control.ViewState%2A> proprietà e il <xref:System.Web.UI.Page> oggetto serializza le informazioni sullo stato tra le richieste. Per eseguire gestire nel controllo lo stato personalizzato, eseguire l'override di <xref:System.Web.UI.Control.LoadViewState%2A> e <xref:System.Web.UI.Control.SaveViewState%2A> metodi. Eventuali informazioni sullo stato archiviato in questo dizionario vengono perse quando lo stato di visualizzazione è disabilitato per lo sviluppatore della pagina. Per limitare il problema, in ASP.NET versione 2.0 è possibile archiviare le informazioni sullo stato critico in un oggetto separato, denominato stato del controllo. L'oggetto di stato di controllo non viene modificata quando lo stato di visualizzazione è disabilitato per lo sviluppatore della pagina. L'archiviazione di informazioni sullo stato nell'oggetto di stato di controllo richiede che il controllo è eseguire l'override di <xref:System.Web.UI.Control.LoadControlState%2A> e <xref:System.Web.UI.Control.SaveControlState%2A> lo stato del controllo i metodi e che il controllo deve essere registrato per archiviare informazioni sullo stato di ogni volta che l'inizializzazione del controllo. È possibile registrare un controllo per utilizzare lo stato del controllo eseguendo l'override di <xref:System.Web.UI.Control.OnInit%2A> metodo e chiamando il metodo di <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> (metodo). Per altre informazioni sull'uso di <xref:System.Web.UI.Control.ViewState%2A> proprietà e il controllo dello stato durante lo sviluppo di controlli, vedere [sviluppo di controlli Server ASP.NET personalizzati](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
 Per mantenere lo stato di visualizzazione sul client che non supportano esistente consente di visualizzare i meccanismi di persistenza dello stato, è possibile estendere il <xref:System.Web.UI.PageStatePersister> classe per presentare i propri metodi di persistenza dello stato di visualizzazione e gli adattatori di pagina è possibile usare per configurare l'applicazione ASP.NET Per utilizzare meccanismi di persistenza dello stato di visualizzazione diverse in base al tipo di client a cui viene visualizzata una pagina. Le classi che derivano dal <xref:System.Web.UI.PageStatePersister> classe deve eseguire l'override astratta <xref:System.Web.UI.PageStatePersister.Save%2A> metodo per archiviare lo stato di visualizzazione e lo stato del controllo nel supporto di persistenza ed eseguire l'override di <xref:System.Web.UI.PageStatePersister.Load%2A> metodo per estrarre i file. Se è necessario serializzare lo stato di visualizzazione e lo stato del controllo in una stringa, è possibile usare la <xref:System.Web.UI.IStateFormatter> oggetto che è possibile accedere tramite il <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> proprietà. In modo efficiente la serializzazione e deserializzazione delle informazioni sullo stato di oggetto in una stringa con codifica Base64. È anche possibile eseguire l'override di <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> proprietà per fornire il proprio meccanismo di serializzazione dello stato di oggetto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come creare un <xref:System.Web.UI.PageStatePersister> oggetto che salva lo stato di visualizzazione e il controllo sul server Web. Il `StreamPageStatePersister` dimostra come eseguire l'override di <xref:System.Web.UI.PageStatePersister.Load%2A> e <xref:System.Web.UI.PageStatePersister.Save%2A> informazioni sullo stato di metodi per estrarre e salvare una vista. Poiché i meccanismi di persistenza dello stato sono correlati al rendering adattivo e alle funzionalità del client, il `MyPageAdapter` classe viene fornita per attivare il `StreamPageStatePersister` per un'applicazione ASP.NET. Infine, viene fornito un file di funzionalità (browser) del browser per abilitare il `MyPageAdapter` adapter per una classe specifica di client (in questo caso, il Web browser predefinito).  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#1)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#1)]  
  
 Esempio di codice seguente viene illustrato come creare un <xref:System.Web.UI.Adapters.PageAdapter> che restituisce un'istanza della classe `StreamPageStatePersister`, che consente di rendere persistente lo stato di visualizzazione e il controllo per una pagina Web ASP.NET.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#5)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#5)]  
  
 Compilare queste due classi in un assembly che è possibile usare per eseguire un esempio, utilizzando la seguente riga di comando del compilatore. Assicurarsi che l'assembly compilato sia nella directory \Bin sotto la radice dell'applicazione ASP.NET.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#6)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#6)]  
  
 Infine, per abilitare il `MyPageAdapter` adapter, è necessario creare una directory denominata Browsers sotto la radice dell'applicazione ASP.NET e includere un file con estensione con le informazioni di configurazione. Il `<refid>` elemento nel file di configurazione indica che la configurazione sostituisce i valori specificati per il browser predefinito nel file di configurazione default. In questo esempio `MyPageAdapter` viene utilizzato per le pagine Web ASP.NET (in cui in genere viene utilizzato alcun adattatore).  
  
```  
<browsers>  
    <browser refid="Default" >  
        <controlAdapters>  
            <adapter   
                controlType="System.Web.UI.Page"                              
                adapterType="Samples.AspNet.CS.MyPageAdapter" />  
        </controlAdapters>  
    </browser>  
</browsers>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ObjectStateFormatter" />
    <altmember cref="T:System.Web.UI.LosFormatter" />
    <altmember cref="T:System.Web.UI.Pair" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageStatePersister (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageStatePersister(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageStatePersister : System.Web.UI.Page -&gt; System.Web.UI.PageStatePersister" Usage="new System.Web.UI.PageStatePersister page" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">L'elemento <see cref="T:System.Web.UI.Page" /> creato per il meccanismo di persistenza dello stato di visualizzazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.PageStatePersister" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="page" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlState">
      <MemberSignature Language="C#" Value="public object ControlState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ControlState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.ControlState" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ControlState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlState : obj with get, set" Usage="System.Web.UI.PageStatePersister.ControlState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un oggetto che rappresenta i dati utilizzati dai controlli contenuti nell'oggetto <see cref="T:System.Web.UI.Page" /> corrente per la persistenza tra le richieste HTTP inviate al server Web.</summary>
        <value>Un oggetto che contiene i dati relativi allo stato di visualizzazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lo stato del controllo è un oggetto costituito da dati relativi allo stato di visualizzazione critici funzione dover controlli server Web e si trova in un oggetto separato dalle informazioni sullo stato di visualizzazione normale. Dati sullo stato di controllo non viene modificati quando lo stato di visualizzazione è disabilitato al <xref:System.Web.UI.Page> livello, ma richiede passaggi di implementazione aggiuntivi da usare. Per altre informazioni sull'uso di <xref:System.Web.UI.Control.ViewState%2A> proprietà e il controllo dello stato durante lo sviluppo di controlli, vedere [sviluppo di controlli Server ASP.NET personalizzati](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
   
  
## Examples  
 Esempio di codice seguente mostra in che modo una classe che deriva dal <xref:System.Web.UI.PageStatePersister> classe consente di inizializzare il <xref:System.Web.UI.PageStatePersister.ControlState%2A> proprietà. In questo esempio, il <xref:System.Web.UI.PageStatePersister.ControlState%2A> proprietà assegnata al <xref:System.Web.UI.Pair.Second> campo di un <xref:System.Web.UI.Pair> dell'oggetto e serializzati utilizzando la <xref:System.Web.UI.ObjectStateFormatter> classe. Quando la <xref:System.Web.UI.PageStatePersister.Load%2A> metodo viene chiamato, il <xref:System.Web.UI.ObjectStateFormatter> classe viene utilizzata per deserializzare Visualizza informazioni sullo stato del controllo dello stato e il <xref:System.Web.UI.PageStatePersister.ControlState%2A> proprietà viene inizializzata da risultante <xref:System.Web.UI.Pair> dell'oggetto <xref:System.Web.UI.Pair.Second> campo. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.PageStatePersister> classe.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.Load" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Load();" />
      <MemberSignature Language="F#" Value="abstract member Load : unit -&gt; unit" Usage="pageStatePersister.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Le classi derivate eseguono l'override di questo metodo per deserializzare e caricare informazioni persistenti sullo stato quando un oggetto <see cref="T:System.Web.UI.Page" /> inizializza la gerarchia dei controlli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che derivano dal <xref:System.Web.UI.PageStatePersister> implementano il <xref:System.Web.UI.PageStatePersister.Load%2A> metodo per inizializzare il <xref:System.Web.UI.PageStatePersister.ViewState%2A> e <xref:System.Web.UI.PageStatePersister.ControlState%2A> proprietà da un formato persistente.  
  
   
  
## Examples  
 Esempio di codice seguente mostra in che modo una classe che deriva dal <xref:System.Web.UI.PageStatePersister> classe implementa il <xref:System.Web.UI.PageStatePersister.Load%2A> per caricare lo stato di visualizzazione da un supporto di persistenza. Il `StreamPageStatePersister` tenta di leggere dati da un flusso. Usa un' <xref:System.Web.UI.IStateFormatter> oggetto per deserializzare i dati dello stato di visualizzazione e inizializzare il <xref:System.Web.UI.PageStatePersister.ViewState%2A> proprietà e il <xref:System.Web.UI.PageStatePersister.ControlState%2A> proprietà, una pagina utilizzata per inizializzare i controlli. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.PageStatePersister> classe.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Page Page { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page Page" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.Page" />
      <MemberSignature Language="VB.NET" Value="Protected Property Page As Page" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Page ^ Page { System::Web::UI::Page ^ get(); void set(System::Web::UI::Page ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Page : System.Web.UI.Page with get, set" Usage="System.Web.UI.PageStatePersister.Page" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto <see cref="T:System.Web.UI.Page" /> per il quale viene creato il meccanismo di persistenza dello stato di visualizzazione.</summary>
        <value>Oggetto <see cref="T:System.Web.UI.Page" /> al quale è associato l'oggetto <see cref="T:System.Web.UI.PageStatePersister" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare la <xref:System.Web.UI.PageStatePersister.Page%2A> proprietà a cui accedere corrente <xref:System.Web.HttpContext> oggetto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public abstract void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.Save" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Save();" />
      <MemberSignature Language="F#" Value="abstract member Save : unit -&gt; unit" Usage="pageStatePersister.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Le classi derivate eseguono l'override di questo metodo per serializzare informazioni persistenti sullo stato quando un oggetto <see cref="T:System.Web.UI.Page" /> viene scaricato dalla memoria.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che derivano dal <xref:System.Web.UI.PageStatePersister> implementano il <xref:System.Web.UI.PageStatePersister.Save%2A> metodo in modo permanente il contenuto del <xref:System.Web.UI.PageStatePersister.ViewState%2A> e <xref:System.Web.UI.PageStatePersister.ControlState%2A> proprietà su un supporto di persistenza.  
  
   
  
## Examples  
 Esempio di codice seguente mostra in che modo una classe che deriva dal <xref:System.Web.UI.PageStatePersister> classe implementa il <xref:System.Web.UI.PageStatePersister.Save%2A> metodo per rendere persistente lo stato di visualizzazione in un supporto di persistenza. Il `StreamPageStatePersister` Usa un' <xref:System.Web.UI.IStateFormatter> oggetto da serializzare il contenuto delle <xref:System.Web.UI.PageStatePersister.ViewState%2A> proprietà e <xref:System.Web.UI.PageStatePersister.ControlState%2A> proprietà. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.PageStatePersister> classe.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateFormatter">
      <MemberSignature Language="C#" Value="protected System.Web.UI.IStateFormatter StateFormatter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IStateFormatter StateFormatter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.StateFormatter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StateFormatter As IStateFormatter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::IStateFormatter ^ StateFormatter { System::Web::UI::IStateFormatter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StateFormatter : System.Web.UI.IStateFormatter" Usage="System.Web.UI.PageStatePersister.StateFormatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IStateFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Web.UI.IStateFormatter" /> utilizzato per serializzare e deserializzare le informazioni sullo stato contenute nelle proprietà <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> e <see cref="P:System.Web.UI.PageStatePersister.ControlState" /> durante le chiamate dei metodi <see cref="M:System.Web.UI.PageStatePersister.Save" /> e <see cref="M:System.Web.UI.PageStatePersister.Load" />.</summary>
        <value>Un'istanza di <see cref="T:System.Web.UI.IStateFormatter" /> utilizzata per serializzare e deserializzare lo stato dell'oggetto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile eseguire l'override di <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> proprietà per fornire un proprio formattatore lo stato di visualizzazione.  
  
   
  
## Examples  
 Esempio di codice seguente mostra in che modo una classe che deriva dal <xref:System.Web.UI.PageStatePersister> classe accede al <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> proprietà da recuperare un' <xref:System.Web.UI.ObjectStateFormatter> oggetto, ovvero l'implementazione predefinita del <xref:System.Web.UI.IStateFormatter> interfaccia, per la serializzazione di visualizzazione lo stato e stato del controllo in un flusso. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.PageStatePersister> classe.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="public object ViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.ViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ViewState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : obj with get, set" Usage="System.Web.UI.PageStatePersister.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un oggetto che rappresenta i dati utilizzati dai controlli contenuti nell'oggetto <see cref="T:System.Web.UI.Page" /> corrente per la persistenza tra le richieste HTTP inviate al server Web.</summary>
        <value>Un oggetto che contiene i dati relativi allo stato di visualizzazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lo stato di visualizzazione è un dizionario dei dati dello stato che richiedono controlli server Web per il funzionamento e il loro rendering. Gli sviluppatori di controlli di accesso in genere l'oggetto stato di visualizzazione usando la <xref:System.Web.UI.Control.ViewState%2A> proprietà. Lo stato di visualizzazione viene modificato quando lo stato di visualizzazione è disabilitato al <xref:System.Web.UI.Page> livello e di conseguenza i controlli potrebbero non funzionare correttamente in questi scenari. Per altre informazioni sull'uso <xref:System.Web.UI.Control.ViewState%2A> e controllare lo stato quando lo sviluppo di controlli, vedere [sviluppo di controlli Server ASP.NET personalizzati](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
   
  
## Examples  
 Esempio di codice seguente mostra in che modo una classe che deriva dal <xref:System.Web.UI.PageStatePersister> classe consente di inizializzare il <xref:System.Web.UI.PageStatePersister.ViewState%2A> proprietà. In questo esempio, il <xref:System.Web.UI.PageStatePersister.ViewState%2A> proprietà assegnata al <xref:System.Web.UI.Pair.First> campo di un <xref:System.Web.UI.Pair> dell'oggetto e serializzati utilizzando la <xref:System.Web.UI.ObjectStateFormatter> oggetto, ovvero un'istanza del <xref:System.Web.UI.IStateFormatter> interfaccia. Quando la <xref:System.Web.UI.PageStatePersister.Load%2A> metodo viene chiamato, il <xref:System.Web.UI.ObjectStateFormatter> interfaccia viene utilizzata per deserializzare le informazioni sullo stato di visualizzazione e il <xref:System.Web.UI.PageStatePersister.ViewState%2A> proprietà viene inizializzata da risultante <xref:System.Web.UI.Pair> dell'oggetto <xref:System.Web.UI.Pair.First> campo. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Web.UI.PageStatePersister> classe.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>