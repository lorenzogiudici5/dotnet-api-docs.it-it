<Type Name="IParserAccessor" FullName="System.Web.UI.IParserAccessor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae57054750ec6a3a2527f4f03cbb9a7c48d5e837" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36377272" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IParserAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IParserAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IParserAccessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IParserAccessor" />
  <TypeSignature Language="C++ CLI" Value="public interface class IParserAccessor" />
  <TypeSignature Language="F#" Value="type IParserAccessor = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce quale metodo debba essere implementato dai controlli server ASP.NET per riconoscere quando vengono analizzati elementi HTML oppure XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando gli elementi vengono analizzati, essi sono riconosciuti come i controlli figlio del controllo server che implementa questa interfaccia. Questi elementi vengono convertiti in oggetti. Quando si implementa questa interfaccia, il controllo creato definisce quali l'elaborazione viene eseguito solo in seguito alla notifica che un elemento è stato analizzato.  
  
 Poiché il <xref:System.Web.UI.Control> classe implementa questa interfaccia, è facile estendere tale classe ed eseguire l'override della relativa implementazione il <xref:System.Web.UI.IParserAccessor.AddParsedSubObject%2A> metodo anziché implementare questa interfaccia.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.ControlCollection" />
    <altmember cref="P:System.Web.UI.Control.Controls" />
  </Docs>
  <Members>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="public void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member AddParsedSubObject : obj -&gt; unit" Usage="iParserAccessor.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">L'oggetto <see cref="T:System.Object" /> che è stato analizzato.</param>
        <summary>Quando è implementato da un controllo server ASP.NET, notifica al controllo server che un elemento XML o HTML è stato analizzato.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>