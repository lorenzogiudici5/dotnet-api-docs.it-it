<Type Name="ScriptReference" FullName="System.Web.UI.ScriptReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b5d0e6d587213dceae8a4963519542cb7ee6eff" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37530232" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ScriptReference : System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptReference extends System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptReference" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptReference&#xA;Inherits ScriptReferenceBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptReference : System::Web::UI::ScriptReferenceBase" />
  <TypeSignature Language="F#" Value="type ScriptReference = class&#xA;    inherit ScriptReferenceBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ScriptReferenceBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Registra un file ECMAScript (JavaScript) per l'utilizzo in una pagina Web ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile includere un file JavaScript in una pagina Web ASP.NET tramite la registrazione tramite un <xref:System.Web.UI.ScriptReference> oggetto. È possibile registrare un file di script che si trova come file con estensione js (un file di script statici) sul sito Web. È anche possibile registrare un file script incorporato come risorsa in un assembly. Dopo aver registrato il file di script, è possibile usare le funzioni in script client nella pagina Web.  
  
 Per registrare un file di script statici, impostare il <xref:System.Web.UI.ScriptReferenceBase.Path%2A> proprietà del <xref:System.Web.UI.ScriptReference> oggetto al relativo percorso del file.  
  
 Per registrare un file script incorporato come risorsa in un assembly, impostare il <xref:System.Web.UI.ScriptReference.Assembly%2A> proprietà sul nome dell'assembly che contiene il file. Impostare quindi il <xref:System.Web.UI.ScriptReference.Name%2A> proprietà sul nome del file con estensione js incorporati nell'assembly. In tal caso, il file di script deve essere incorporato, non è collegato.  
  
 Impostare il <xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A> proprietà per indicare se utilizzare il debug o rilascio versione dello script.  
  
 Il <xref:System.Web.UI.ScriptMode.Auto> valore produce risultati diversi a seconda se fa riferimento a un file di script autonomo o in un file script incorporato come risorsa in un assembly. Un file di script autonomo viene definito con il <xref:System.Web.UI.ScriptReferenceBase.Path%2A> proprietà. Un riferimento all'assembly è possibile accedervi tramite il <xref:System.Web.UI.ScriptReference.Name%2A> e <xref:System.Web.UI.ScriptReference.Assembly%2A> proprietà. I risultati per il <xref:System.Web.UI.ScriptMode.Auto> valore sono i seguenti:  
  
-   Quando viene applicata a un file di script autonomo in cui il <xref:System.Web.UI.ScriptReferenceBase.Path%2A> proprietà viene specificata, il <xref:System.Web.UI.ScriptMode.Auto> valore è equivalente a <xref:System.Web.UI.ScriptMode.Release>.  
  
-   Quando viene applicato a un riferimento allo script in un assembly <xref:System.Web.UI.ScriptMode.Auto> equivale a <xref:System.Web.UI.ScriptMode.Inherit>. Quando solo <xref:System.Web.UI.ScriptReference.Name%2A> viene specificato, viene usato per fare riferimento allo script. Quando <xref:System.Web.UI.ScriptReference.Name%2A> e il <xref:System.Web.UI.ScriptReferenceBase.Path%2A> proprietà sono entrambi specificati, il <xref:System.Web.UI.ScriptReferenceBase.Path%2A> proprietà viene usata invece di <xref:System.Web.UI.ScriptReference.Name%2A>, ma la <xref:System.Web.UI.ScriptMode.Auto> valore è sempre equivalente a <xref:System.Web.UI.ScriptMode.Inherit>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come fare riferimento a un controllo personalizzato e un file JavaScript che è incorporato nell'assembly del controllo. Si presuppone che l'assembly nella cartella Bin del sito Web. Aggiunge un'animazione al controllo personalizzato <xref:System.Web.UI.UpdatePanel> controlli. Il file di JavaScript viene compilato come risorsa incorporata denominata SampleControl.UpdatePanelAnimation.js. Il file JavaScript incorporato è registrato con il <xref:System.Web.UI.ScriptReference.Assembly%2A> e <xref:System.Web.UI.ScriptReference.Name%2A> proprietà.  
  
 Per usare questo esempio, compilare il file JavaScript che viene visualizzato nell'esempio di come una risorsa incorporata con il controllo personalizzato. Inserire l'assembly risultante nella cartella Bin del sito Web. Per un esempio di come incorporare un file JavaScript in un assembly, vedere [procedura dettagliata: incorporamento di un JavaScript File come risorsa in un Assembly](http://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).  
  
 Nell'esempio seguente mostra una pagina che utilizza il controllo personalizzato.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 Nell'esempio seguente illustra la definizione di classe di controllo personalizzato.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 Nell'esempio seguente viene illustrato il supporto file JavaScript.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 Nell'esempio seguente viene illustrato il codice che è necessario aggiungere al file AssemblyInfo del progetto che contiene il controllo personalizzato e il file JavaScript.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.ScriptReference" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.ScriptReference" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Percorso del file script client relativo alla pagina Web.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.ScriptReference" /> utilizzando un percorso specifico.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string name, string assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, assembly As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ name, System::String ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string * string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference (name, assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assembly" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome del file script incorporato nell'assembly.</param>
        <param name="assembly">Nome dell'assembly contenente il file script client come risorsa incorporata.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.ScriptReference" /> utilizzando un nome e un assembly specifici.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public string Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Assembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : string with get, set" Usage="System.Web.UI.ScriptReference.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'assembly contenente il file script client come risorsa incorporata.</summary>
        <value>Nome completo o parzialmente qualificato dell'assembly che contiene un file script client come risorsa incorporata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare il <xref:System.Web.UI.ScriptReference.Assembly%2A> proprietà quando si fa riferimento a un file di script client che viene incluso come risorsa incorporata in un assembly. Impostare <xref:System.Web.UI.ScriptReference.Assembly%2A> al nome dell'assembly completo o parzialmente qualificato. Un nome completo dell'assembly include un nome, le impostazioni cultura, chiave pubblica e numero di versione. Un nome di assembly parziali include solo un nome.  
  
 Quando si specifica un valore per <xref:System.Web.UI.ScriptReference.Assembly%2A>, è necessario specificare anche il nome della risorsa incorporata nel <xref:System.Web.UI.ScriptReference.Name%2A> proprietà. In caso contrario, un <xref:System.InvalidOperationException> verrà generata.  
  
 L'assembly cui viene fatto riferimento deve trovarsi nella cartella Bin del sito Web o nella global assembly cache.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come fare riferimento a un controllo personalizzato e un file JavaScript che è incorporato nell'assembly del controllo. Si presuppone che l'assembly nella cartella Bin del sito Web. Aggiunge un'animazione al controllo personalizzato <xref:System.Web.UI.UpdatePanel> controlli. Il file di JavaScript viene compilato come risorsa incorporata denominata SampleControl.UpdatePanelAnimation.js. Il file JavaScript incorporato è registrato con il <xref:System.Web.UI.ScriptReference.Assembly%2A> e <xref:System.Web.UI.ScriptReference.Name%2A> proprietà.  
  
 Per usare questo esempio, compilare il file JavaScript che viene visualizzato nell'esempio di come una risorsa incorporata con il controllo personalizzato. Inserire l'assembly risultante nella cartella Bin del sito Web. Per un esempio di come incorporare un file JavaScript in un assembly, vedere [procedura dettagliata: incorporamento di un JavaScript File come risorsa in un Assembly](http://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).  
  
 Nell'esempio seguente mostra una pagina che utilizza il controllo personalizzato.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 Nell'esempio seguente illustra la definizione di classe di controllo personalizzato.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 Nell'esempio seguente viene illustrato il supporto file JavaScript.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 Nell'esempio seguente viene illustrato il codice che è necessario aggiungere al file AssemblyInfo del progetto che contiene il controllo personalizzato e il file JavaScript.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrl">
      <MemberSignature Language="C#" Value="protected internal override string GetUrl (System.Web.UI.ScriptManager scriptManager, bool zip);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetUrl(class System.Web.UI.ScriptManager scriptManager, bool zip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetUrl(System::Web::UI::ScriptManager ^ scriptManager, bool zip);" />
      <MemberSignature Language="F#" Value="override this.GetUrl : System.Web.UI.ScriptManager * bool -&gt; string" Usage="scriptReference.GetUrl (scriptManager, zip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="zip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scriptManager">Controllo <see langword="ScriptManager" /> nella pagina Web di destinazione.</param>
        <param name="zip">
          <see langword="true" /> se lo script deve essere compresso. In caso contrario, <see langword="false" />.</param>
        <summary>Recupera l'URL di cui viene eseguito il rendering come valore dell'attributo <see langword="src" /> dell'elemento <see langword="script" />.</summary>
        <returns>Stringa che contiene l'URL di cui viene eseguito il rendering come valore dell'attributo <see langword="src" /> dell'elemento <see langword="script" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreScriptPath">
      <MemberSignature Language="C#" Value="public bool IgnoreScriptPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreScriptPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreScriptPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreScriptPath { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreScriptPath : bool with get, set" Usage="System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This property is obsolete. Instead of using ScriptManager.ScriptPath, set the Path property on each individual ScriptReference.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la proprietà <see cref="P:System.Web.UI.ScriptManager.ScriptPath" /> è inclusa nell'URL quando si registra un file script client da una risorsa.</summary>
        <value>
          <see langword="true" /> se il percorso dello script non è utilizzato quando si registra lo script client; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si imposta <xref:System.Web.UI.ScriptReference.IgnoreScriptPath%2A> al `true` quando si vuole registrare un file script client senza includere la <xref:System.Web.UI.ScriptManager.ScriptPath%2A> valore nell'URL del file di script.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAjaxFrameworkScript">
      <MemberSignature Language="C#" Value="protected internal override bool IsAjaxFrameworkScript (System.Web.UI.ScriptManager scriptManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsAjaxFrameworkScript(class System.Web.UI.ScriptManager scriptManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsAjaxFrameworkScript(System::Web::UI::ScriptManager ^ scriptManager);" />
      <MemberSignature Language="F#" Value="override this.IsAjaxFrameworkScript : System.Web.UI.ScriptManager -&gt; bool" Usage="scriptReference.IsAjaxFrameworkScript scriptManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
      </Parameters>
      <Docs>
        <param name="scriptManager">Un oggetto <see cref="T:System.Web.UI.ScriptManager" />.</param>
        <summary>Determina se il riferimento allo script è uno script AJAX.</summary>
        <returns>
          <see langword="true" /> se il riferimento allo script è uno script AJAX; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFromSystemWebExtensions">
      <MemberSignature Language="C#" Value="protected internal override bool IsFromSystemWebExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsFromSystemWebExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsFromSystemWebExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsFromSystemWebExtensions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsFromSystemWebExtensions();" />
      <MemberSignature Language="F#" Value="override this.IsFromSystemWebExtensions : unit -&gt; bool" Usage="scriptReference.IsFromSystemWebExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method is obsolete. Use IsAjaxFrameworkScript(ScriptManager) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica se lo script composito contiene un riferimento a uno script del framework ASP.NET AJAX.</summary>
        <returns>
          <see langword="true" /> se lo script composito contiene un riferimento a uno script del framework ASP.NET AJAX; in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.ScriptReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome della risorsa incorporata contenente il file script client.</summary>
        <value>Nome del file script client incorporato come risorsa in un assembly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare il <xref:System.Web.UI.ScriptReference.Name%2A> proprietà riferimento a un file di script client incorporato come risorsa in un assembly.  
  
 Se si definiscono valori per entrambe le <xref:System.Web.UI.ScriptReferenceBase.Path%2A> e <xref:System.Web.UI.ScriptReference.Name%2A> delle proprietà nello stesso riferimento allo script, il <xref:System.Web.UI.ScriptReferenceBase.Path%2A> proprietà ha la precedenza.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come fare riferimento a un controllo personalizzato e un file JavaScript che è incorporato nell'assembly del controllo. Si presuppone che l'assembly nella cartella Bin del sito Web. Aggiunge un'animazione al controllo personalizzato <xref:System.Web.UI.UpdatePanel> controlli. Il file di JavaScript viene compilato come risorsa incorporata denominata SampleControl.UpdatePanelAnimation.js. Il file JavaScript incorporato è registrato con il <xref:System.Web.UI.ScriptReference.Assembly%2A> e <xref:System.Web.UI.ScriptReference.Name%2A> proprietà.  
  
 Per usare questo esempio, compilare il file JavaScript che viene visualizzato nell'esempio di come una risorsa incorporata con il controllo personalizzato. Inserire l'assembly risultante nella cartella Bin del sito Web. Per un esempio di come incorporare un file JavaScript in un assembly, vedere [procedura dettagliata: incorporamento di un JavaScript File come risorsa in un Assembly](http://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).  
  
 Nell'esempio seguente mostra una pagina che utilizza il controllo personalizzato.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 Nell'esempio seguente illustra la definizione di classe di controllo personalizzato.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 Nell'esempio seguente viene illustrato il supporto file JavaScript.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 Nell'esempio seguente viene illustrato il codice che è necessario aggiungere al file AssemblyInfo del progetto che contiene il controllo personalizzato e il file JavaScript.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="scriptReference.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una stringa che rappresenta il valore della proprietà <see cref="P:System.Web.UI.ScriptReference.Name" />, della proprietà <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> o il nome del tipo.</summary>
        <returns>Valore della proprietà <see cref="P:System.Web.UI.ScriptReference.Name" /> , se definita, o della proprietà <see cref="P:System.Web.UI.ScriptReferenceBase.Path" />, se definita; in caso contrario, valore della proprietà <see cref="P:System.Reflection.MemberInfo.Name" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>