<Type Name="ThemeProvider" FullName="System.Web.UI.ThemeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e75748f20ad8755b5d8a2cf4e255a3b3fad8adaa" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37529608" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ThemeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ThemeProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ThemeProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ThemeProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThemeProvider sealed" />
  <TypeSignature Language="F#" Value="type ThemeProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce una classe che incapsula informazioni sui temi e sui fogli di stile per controlli in un ambiente di progettazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli sviluppatori di pagine e gli autori di controlli non usano il <xref:System.Web.UI.ThemeProvider> classe. I generatori di progettazione e strumenti per sviluppatori ASP.NET utilizzano il <xref:System.Web.UI.ThemeProvider> classe in combinazione con il <xref:System.Web.UI.SkinBuilder> classe e il <xref:System.Web.UI.IThemeResolutionService> interfaccia da applicare temi e le interfacce del rispettivo controllo ai controlli in fase di progettazione.  
  
 Il <xref:System.Web.UI.ThemeProvider> classe incapsula le informazioni necessarie per applicare un tema o il tema di foglio di stile e le relative interfacce del controllo ai controlli figlio di un controllo in una finestra di progettazione.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IThemeResolutionService" />
    <altmember cref="T:System.Web.UI.ControlBuilder" />
    <altmember cref="T:System.Web.UI.SkinBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThemeProvider (System.ComponentModel.Design.IDesignerHost host, string name, string themeDefinition, string[] cssFiles, string themePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.IDesignerHost host, string name, string themeDefinition, string[] cssFiles, string themePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ThemeProvider.#ctor(System.ComponentModel.Design.IDesignerHost,System.String,System.String,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As IDesignerHost, name As String, themeDefinition As String, cssFiles As String(), themePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThemeProvider(System::ComponentModel::Design::IDesignerHost ^ host, System::String ^ name, System::String ^ themeDefinition, cli::array &lt;System::String ^&gt; ^ cssFiles, System::String ^ themePath);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ThemeProvider : System.ComponentModel.Design.IDesignerHost * string * string * string[] * string -&gt; System.Web.UI.ThemeProvider" Usage="new System.Web.UI.ThemeProvider (host, name, themeDefinition, cssFiles, themePath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="themeDefinition" Type="System.String" />
        <Parameter Name="cssFiles" Type="System.String[]" />
        <Parameter Name="themePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">Un oggetto <see cref="T:System.ComponentModel.Design.IDesignerHost" /> che rappresenta l'ambiente di progettazione corrente.</param>
        <param name="name">Nome del tema o del tema di foglio di stile rappresentato da <see cref="T:System.Web.UI.ThemeProvider" />. Questo parametro può essere <see langword="null" />.</param>
        <param name="themeDefinition">Informazioni sul tema passate al metodo <see cref="M:System.Web.UI.DesignTimeTemplateParser.ParseTheme(System.ComponentModel.Design.IDesignerHost,System.String,System.String)" />. Si tratta del contenuto concatenato e non elaborato del tema.</param>
        <param name="cssFiles">Nomi dei file CSS inclusi insieme al tema rappresentato da <see cref="T:System.Web.UI.ThemeProvider" />.</param>
        <param name="themePath">Percorso assoluto del file contenente le informazioni sul tema e sulle interfacce del controllo per il tema specificato.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.ThemeProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `themeDefinition` parametro passato al <xref:System.Web.UI.ThemeProvider.%23ctor%28System.ComponentModel.Design.IDesignerHost%2CSystem.String%2CSystem.String%2CSystem.String%5B%5D%2CSystem.String%29> costruttore rappresenta la concatenazione di tutte le interfacce del controllo associato al tema ma non viene esposto direttamente dal <xref:System.Web.UI.ThemeProvider> classe, come determinato che viene passato a un <xref:System.Web.UI.DesignTimeTemplateParser> per recuperare un <xref:System.Web.UI.ControlBuilder> e non viene utilizzato in caso contrario.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentHashCode">
      <MemberSignature Language="C#" Value="public int ContentHashCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentHashCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ThemeProvider.ContentHashCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentHashCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentHashCode { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentHashCode : int" Usage="System.Web.UI.ThemeProvider.ContentHashCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'hash della definizione del tema passata al costruttore.</summary>
        <value>Codice hash per la stringa passata come definizione del tema al costruttore della classe.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssFiles">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection CssFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection CssFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ThemeProvider.CssFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CssFiles As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ CssFiles { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CssFiles : System.Collections.ICollection" Usage="System.Web.UI.ThemeProvider.CssFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di stringhe che rappresentano i nomi di tutti i file CSS associati al tema corrente, nel caso di un tema di foglio di stile.</summary>
        <value>Un insieme <see cref="T:System.Collections.ICollection" /> di stringhe che identificano i file CSS associati al tema o al tema di foglio di stile. Questa proprietà potrebbe restituire <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà viene utilizzata dall'host di progettazione per aggiungere collegamenti al foglio di stile per i file CSS durante il rendering di HTML in un'area di progettazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerHost">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.IDesignerHost DesignerHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.IDesignerHost DesignerHost" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ThemeProvider.DesignerHost" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignerHost As IDesignerHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::IDesignerHost ^ DesignerHost { System::ComponentModel::Design::IDesignerHost ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerHost : System.ComponentModel.Design.IDesignerHost" Usage="System.Web.UI.ThemeProvider.DesignerHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesignerHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.ComponentModel.Design.IDesignerHost" /> che rappresenta l'ambiente di progettazione corrente.</summary>
        <value>Un oggetto <see cref="T:System.ComponentModel.Design.IDesignerHost" /> che rappresenta l'ambiente di progettazione corrente.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetSkinBuilder">
      <MemberSignature Language="C#" Value="public System.Web.UI.SkinBuilder GetSkinBuilder (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.SkinBuilder GetSkinBuilder(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ThemeProvider.GetSkinBuilder(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::SkinBuilder ^ GetSkinBuilder(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetSkinBuilder : System.Web.UI.Control -&gt; System.Web.UI.SkinBuilder" Usage="themeProvider.GetSkinBuilder control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.SkinBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Controllo al quale si desidera applicare un tema e un'interfaccia del controllo.</param>
        <summary>Recupera un'istanza <see cref="T:System.Web.UI.SkinBuilder" /> per il controllo specificato, che viene utilizzata per applicare un tema e un'interfaccia del controllo in un ambiente di progettazione.</summary>
        <returns>Un'istanza <see cref="T:System.Web.UI.SkinBuilder" /> eventualmente definita per il tipo di controllo specificato, altrimenti <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.ThemeProvider.GetSkinBuilder%2A> metodo viene chiamato dal <xref:System.Web.UI.ControlBuilder> per applicare un tema e qualsiasi classe di base interfaccia del controllo a un controllo al momento della compilazione in fase di progettazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.BuildObject" />
      </Docs>
    </Member>
    <Member MemberName="GetSkinControlBuildersForControlType">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary GetSkinControlBuildersForControlType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary GetSkinControlBuildersForControlType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ThemeProvider.GetSkinControlBuildersForControlType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ GetSkinControlBuildersForControlType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSkinControlBuildersForControlType : Type -&gt; System.Collections.IDictionary" Usage="themeProvider.GetSkinControlBuildersForControlType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Oggetto <see cref="T:System.Type" /> per il quale si desidera recuperare tutti gli oggetti <see cref="T:System.Web.UI.ControlBuilder" /> associati.</param>
        <summary>Ottiene un oggetto <see cref="T:System.Collections.IDictionary" /> contenente un insieme di oggetti <see cref="T:System.Web.UI.SkinBuilder" /> per l'oggetto <see cref="T:System.Type" /> specificato.</summary>
        <returns>Un oggetto <see cref="T:System.Collections.IDictionary" /> contenente un elenco con uno o più oggetti <see cref="T:System.Web.UI.ControlBuilder" /> associati all'oggetto <see cref="T:System.Type" /> passato al metodo. In questo elenco vengono inseriti gli oggetti <see cref="T:System.Collections.DictionaryEntry" /> per i quali la proprietà <see cref="P:System.Web.UI.Control.SkinID" /> è un valore <see cref="P:System.Collections.DictionaryEntry.Key" /> e l'oggetto <see cref="T:System.Web.UI.SkinBuilder" /> associato è <see cref="P:System.Collections.DictionaryEntry.Value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSkinsForControl">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetSkinsForControl (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetSkinsForControl(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ThemeProvider.GetSkinsForControl(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetSkinsForControl(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSkinsForControl : Type -&gt; System.Collections.ICollection" Usage="themeProvider.GetSkinsForControl type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Oggetto <see cref="T:System.Type" /> per il quale si desidera recuperare tutti i nomi di interfaccia associati.</param>
        <summary>Ottiene un insieme <see cref="T:System.Collections.ICollection" /> di identificatori di interfaccia associati all'oggetto <see cref="T:System.Type" /> specificato.</summary>
        <returns>Un insieme <see cref="T:System.Collections.ICollection" /> di identificatori di interfaccia, nel caso in cui siano state definite interfacce del controllo per l'oggetto <see cref="T:System.Type" /> specificato. Se al tipo non è stata associata alcuna interfaccia del controllo, verrà restituito un insieme <see cref="T:System.Collections.ICollection" /> vuoto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.ThemeProvider.GetSkinsForControl%2A> metodo viene utilizzato dalle finestre di progettazione per compilare gli elenchi di nomi di controllo dell'interfaccia personalizzata. Finestre di progettazione usare l'elenco da associare agli elementi dell'interfaccia utente o visualizzare le proprietà di progettazione per un tipo di controllo specificato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThemeName">
      <MemberSignature Language="C#" Value="public string ThemeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThemeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ThemeProvider.ThemeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThemeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThemeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThemeName : string" Usage="System.Web.UI.ThemeProvider.ThemeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del tema o del tema di foglio di stile rappresentato dall'istanza <see cref="T:System.Web.UI.ThemeProvider" />.</summary>
        <value>Il nome del tema o del tema di foglio di stile rappresentato dall'istanza <see cref="T:System.Web.UI.ThemeProvider" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.ThemeProvider.ThemeName%2A> viene impostata `name` proprietà del <xref:System.Web.UI.ThemeProvider.%23ctor%28System.ComponentModel.Design.IDesignerHost%2CSystem.String%2CSystem.String%2CSystem.String%5B%5D%2CSystem.String%29> costruttore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>