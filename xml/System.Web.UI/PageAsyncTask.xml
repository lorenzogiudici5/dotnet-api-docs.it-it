<Type Name="PageAsyncTask" FullName="System.Web.UI.PageAsyncTask">
  <TypeSignature Language="C#" Value="public sealed class PageAsyncTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PageAsyncTask extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageAsyncTask" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PageAsyncTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAsyncTask sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7d95d-101">Contiene informazioni su un'attività asincrona registrata in una pagina.</span><span class="sxs-lookup"><span data-stu-id="7d95d-101">Contains information about an asynchronous task registered to a page.</span></span> <span data-ttu-id="7d95d-102">Questa classe non può essere ereditata.</span><span class="sxs-lookup"><span data-stu-id="7d95d-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d95d-103">In ASP.NET versione 2.0 consente di registrare più attività in una pagina e di eseguire in modo asincrono prima del rendering della pagina.</span><span class="sxs-lookup"><span data-stu-id="7d95d-103">ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</span></span> <span data-ttu-id="7d95d-104">È possibile specificare che un'attività da eseguire in modo asincrono se si tratta di un processo lento e non si desidera che altri processi rallentare mentre è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="7d95d-104">You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</span></span> <span data-ttu-id="7d95d-105">Le attività asincrone possono essere eseguite in parallelo o sequenziale.</span><span class="sxs-lookup"><span data-stu-id="7d95d-105">The asynchronous tasks can be executed in parallel or sequentially.</span></span>  
  
 <span data-ttu-id="7d95d-106">Oggetto <xref:System.Web.UI.PageAsyncTask> oggetto deve essere registrato per la pagina tramite il <xref:System.Web.UI.Page.RegisterAsyncTask%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="7d95d-106">A <xref:System.Web.UI.PageAsyncTask> object must be registered to the page through the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method.</span></span> <span data-ttu-id="7d95d-107">La pagina stessa non deve essere elaborato in modo asincrono per eseguire attività asincrone.</span><span class="sxs-lookup"><span data-stu-id="7d95d-107">The page itself does not have to be processed asynchronously to execute asynchronous tasks.</span></span> <span data-ttu-id="7d95d-108">È possibile impostare il `Async` l'attributo `true` (come illustrato nell'esempio di codice seguente) o `false` nella pagina di direttiva e le attività asincrone verranno comunque elaborate in modo asincrono:</span><span class="sxs-lookup"><span data-stu-id="7d95d-108">You can set the `Async` attribute to either `true` (as shown in the following code example) or `false` on the page directive and the asynchronous tasks will still be processed asynchronously:</span></span>  
  
 `<%@ Page Async="true" %>`  
  
 <span data-ttu-id="7d95d-109">Quando il `Async` attributo è impostato su `false`, il thread che esegue la pagina verrà bloccato fino al completamento di tutte le attività asincrone.</span><span class="sxs-lookup"><span data-stu-id="7d95d-109">When the `Async` attribute is set to `false`, the thread that executes the page will be blocked until all asynchronous tasks are complete.</span></span>  
  
 <span data-ttu-id="7d95d-110">Le attività asincrone registrate prima il <xref:System.Web.UI.Page.PreRenderComplete> evento verrà eseguito automaticamente dalla pagina se essi non sono già state eseguite.</span><span class="sxs-lookup"><span data-stu-id="7d95d-110">Any asynchronous tasks registered before the <xref:System.Web.UI.Page.PreRenderComplete> event will be executed automatically by the page if they have not already been executed.</span></span> <span data-ttu-id="7d95d-111">Le attività asincrone registrate dopo il <xref:System.Web.UI.Page.PreRenderComplete> evento devono essere eseguite in modo esplicito tramite il <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="7d95d-111">Those asynchronous tasks registered after the <xref:System.Web.UI.Page.PreRenderComplete> event must be executed explicitly through the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method.</span></span> <span data-ttu-id="7d95d-112">Il <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> metodo può essere utilizzato anche per le attività prima di avviare il <xref:System.Web.UI.Page.PreRenderComplete> evento.</span><span class="sxs-lookup"><span data-stu-id="7d95d-112">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method can also be used to start tasks before the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="7d95d-113">Il <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> metodo esegue tutte le attività asincrone registrate nella pagina che non sono state eseguite.</span><span class="sxs-lookup"><span data-stu-id="7d95d-113">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method executes all the registered asynchronous tasks on the page that have not been executed.</span></span>  
  
 <span data-ttu-id="7d95d-114">Per impostazione predefinita, un'attività asincrona scadrà se non è stata completata entro 45 secondi.</span><span class="sxs-lookup"><span data-stu-id="7d95d-114">By default, an asynchronous task will time out if it has not completed within 45 seconds.</span></span> <span data-ttu-id="7d95d-115">Il file Web. config o la direttiva di pagina, è possibile specificare un valore di timeout diverso.</span><span class="sxs-lookup"><span data-stu-id="7d95d-115">You can specify a different time-out value in either the Web.config file or the page directive.</span></span> <span data-ttu-id="7d95d-116">Il `<pages>` sezione del file Web. config contiene un `asyncTimeout` attributo, come illustrato di seguito.</span><span class="sxs-lookup"><span data-stu-id="7d95d-116">The `<pages>` section of the Web.config file contains an `asyncTimeout` attribute, as shown below.</span></span>  
  
 `<system.web>`  
  
 `<pages asyncTimeout="30">`  
  
 `</pages>`  
  
 `</system.web>`  
  
 <span data-ttu-id="7d95d-117">La direttiva di pagina contiene un `AsyncTimeout` attributo.</span><span class="sxs-lookup"><span data-stu-id="7d95d-117">The page directive contains an `AsyncTimeout` attribute.</span></span>  
  
 `<%@ Page AsyncTimeout="30" %>`  
  
   
  
## Examples  
 <span data-ttu-id="7d95d-118">Esempio di codice seguente registra tre attività asincrone a una pagina e li esegue in parallelo.</span><span class="sxs-lookup"><span data-stu-id="7d95d-118">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="7d95d-119">Ogni attività chiama un metodo che determina semplicemente che il thread per 5 secondi.</span><span class="sxs-lookup"><span data-stu-id="7d95d-119">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d95d-120">Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.PageAsyncTask" />.</span><span class="sxs-lookup"><span data-stu-id="7d95d-120">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of CancellationToken, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="7d95d-121">Gestore eventi.</span><span class="sxs-lookup"><span data-stu-id="7d95d-121">An event handler.</span></span></param>
        <summary><span data-ttu-id="7d95d-122">Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.PageAsyncTask" /> utilizzando un gestore eventi che consente di annullare l'attività.</span><span class="sxs-lookup"><span data-stu-id="7d95d-122">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d95d-123">Esegue il wrapping di questo costruttore un <xref:System.Web.TaskEventHandler> delegare in modo che il <xref:System.Web.UI.PageAsyncTask> oggetto possibile integrare codice asincrono (in base a <xref:System.Threading.Tasks.Task> oggetti) con la funzionalità di asincrona pagine Web Form ASP.NET esistente.</span><span class="sxs-lookup"><span data-stu-id="7d95d-123">This constructor wraps a <xref:System.Web.TaskEventHandler> delegate so that the <xref:System.Web.UI.PageAsyncTask> object can integrate asynchronous code (based on <xref:System.Threading.Tasks.Task> objects) with the existing ASP.NET Web Forms asynchronous pages feature.</span></span> <span data-ttu-id="7d95d-124">ASP.NET segnalerà il <xref:System.Threading.CancellationToken> oggetto passato a un <xref:System.Web.TaskEventHandler> delegato per l'annullamento in base il <xref:System.Web.UI.Page.AsyncTimeout%2A> attributo impostato `@ Page` direttiva della pagina Web.</span><span class="sxs-lookup"><span data-stu-id="7d95d-124">ASP.NET will signal the <xref:System.Threading.CancellationToken> object that is passed to a <xref:System.Web.TaskEventHandler> delegate for cancellation based on the <xref:System.Web.UI.Page.AsyncTimeout%2A> attribute set in the `@ Page` directive of the Web page.</span></span> <span data-ttu-id="7d95d-125">Quando il <xref:System.Web.UI.Page.AsyncTimeout%2A> valore è stato raggiunto il <xref:System.Threading.CancellationToken> oggetto verrà segnalato.</span><span class="sxs-lookup"><span data-stu-id="7d95d-125">When the <xref:System.Web.UI.Page.AsyncTimeout%2A> value has been reached, the <xref:System.Threading.CancellationToken> object will be signaled.</span></span> <span data-ttu-id="7d95d-126">Il `CancellationToken` parametro deve essere passato a qualsiasi API asincrone che vengono chiamati dall'implementazione del <xref:System.Web.TaskEventHandler> classe.</span><span class="sxs-lookup"><span data-stu-id="7d95d-126">The `CancellationToken` parameter must be passed to any asynchronous APIs that are called by your implementation of the <xref:System.Web.TaskEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="7d95d-127">Gestore eventi.</span><span class="sxs-lookup"><span data-stu-id="7d95d-127">An event handler.</span></span></param>
        <summary><span data-ttu-id="7d95d-128">Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.PageAsyncTask" /> utilizzando un gestore eventi che consente di gestire l'attività.</span><span class="sxs-lookup"><span data-stu-id="7d95d-128">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be handled.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="7d95d-129">Gestore da chiamare quando si inizia un'attività asincrona.</span><span class="sxs-lookup"><span data-stu-id="7d95d-129">The handler to call when beginning an asynchronous task.</span></span></param>
        <param name="endHandler"><span data-ttu-id="7d95d-130">Gestore da chiamare quando l'attività viene completata correttamente entro il periodo di timeout.</span><span class="sxs-lookup"><span data-stu-id="7d95d-130">The handler to call when the task is completed successfully within the time-out period.</span></span></param>
        <param name="timeoutHandler"><span data-ttu-id="7d95d-131">Gestore da chiamare quando l'attività non viene completata correttamente entro il periodo di timeout.</span><span class="sxs-lookup"><span data-stu-id="7d95d-131">The handler to call when the task is not completed successfully within the time-out period.</span></span></param>
        <param name="state"><span data-ttu-id="7d95d-132">Oggetto che rappresenta lo stato dell'attività.</span><span class="sxs-lookup"><span data-stu-id="7d95d-132">The object that represents the state of the task.</span></span></param>
        <summary><span data-ttu-id="7d95d-133">Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.PageAsyncTask" /> utilizzando il valore predefinito per l'esecuzione in parallelo.</span><span class="sxs-lookup"><span data-stu-id="7d95d-133">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the default value for executing in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d95d-134">Questa implementazione del costruttore imposta la <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> proprietà `false` affinché l'attività asincrona non viene elaborata in parallelo con altre attività nella pagina.</span><span class="sxs-lookup"><span data-stu-id="7d95d-134">This implementation of the constructor sets the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property to `false` so the asynchronous task is not processed in parallel with other tasks on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7d95d-135">Il parametro <paramref name="beginHandler" /> o <paramref name="endHandler" /> non è specificato.</span><span class="sxs-lookup"><span data-stu-id="7d95d-135">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object, executeInParallel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state, bool executeInParallel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="executeInParallel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="7d95d-136">Gestore da chiamare quando si inizia un'attività asincrona.</span><span class="sxs-lookup"><span data-stu-id="7d95d-136">The handler to call when beginning an asynchronous task.</span></span></param>
        <param name="endHandler"><span data-ttu-id="7d95d-137">Gestore da chiamare quando l'attività viene completata correttamente entro il periodo di timeout.</span><span class="sxs-lookup"><span data-stu-id="7d95d-137">The handler to call when the task is completed successfully within the time-out period.</span></span></param>
        <param name="timeoutHandler"><span data-ttu-id="7d95d-138">Gestore da chiamare quando l'attività non viene completata correttamente entro il periodo di timeout.</span><span class="sxs-lookup"><span data-stu-id="7d95d-138">The handler to call when the task is not completed successfully within the time-out period.</span></span></param>
        <param name="state"><span data-ttu-id="7d95d-139">Oggetto che rappresenta lo stato dell'attività.</span><span class="sxs-lookup"><span data-stu-id="7d95d-139">The object that represents the state of the task.</span></span></param>
        <param name="executeInParallel"><span data-ttu-id="7d95d-140">Valore che indica se l'attività può essere elaborata in parallelo con altre attività.</span><span class="sxs-lookup"><span data-stu-id="7d95d-140">The value that indicates whether the task can be processed in parallel with other tasks.</span></span></param>
        <summary><span data-ttu-id="7d95d-141">Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.PageAsyncTask" /> utilizzando il valore specificato per l'esecuzione in parallelo.</span><span class="sxs-lookup"><span data-stu-id="7d95d-141">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the specified value for executing in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d95d-142">Questa implementazione del costruttore consente di specificare se l'attività asincrona verrà elaborato in parallelo con altre attività nella pagina.</span><span class="sxs-lookup"><span data-stu-id="7d95d-142">This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d95d-143">Esempio di codice seguente crea tre attività asincrone che vengono elaborate in parallelo tra loro.</span><span class="sxs-lookup"><span data-stu-id="7d95d-143">The following code example creates three asynchronous tasks that are processed in parallel to each other.</span></span> <span data-ttu-id="7d95d-144">In questo esempio fa parte di un esempio più esaustivo disponibile nel <xref:System.Web.UI.PageAsyncTask> Cenni preliminari sulla classe.</span><span class="sxs-lookup"><span data-stu-id="7d95d-144">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7d95d-145">Il parametro <paramref name="beginHandler" /> o <paramref name="endHandler" /> non è specificato.</span><span class="sxs-lookup"><span data-stu-id="7d95d-145">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d95d-146">Ottiene il metodo da chiamare quando si inizia un'attività asincrona.</span><span class="sxs-lookup"><span data-stu-id="7d95d-146">Gets the method to call when beginning an asynchronous task.</span></span></summary>
        <value><span data-ttu-id="7d95d-147">Delegato <see cref="T:System.Web.BeginEventHandler" /> che rappresenta il metodo da chiamare quando si inizia l'attività asincrona.</span><span class="sxs-lookup"><span data-stu-id="7d95d-147">A <see cref="T:System.Web.BeginEventHandler" /> delegate that represents the method to call when beginning the asynchronous task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d95d-148">Il <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegato è impostato nel costruttore.</span><span class="sxs-lookup"><span data-stu-id="7d95d-148">The <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d95d-149">Esempio di codice seguente registra tre attività asincrone a una pagina e li esegue in parallelo.</span><span class="sxs-lookup"><span data-stu-id="7d95d-149">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="7d95d-150">Ogni attività chiama un metodo che determina semplicemente che il thread per 5 secondi.</span><span class="sxs-lookup"><span data-stu-id="7d95d-150">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="7d95d-151">Oggetto <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegato specificato per ogni attività.</span><span class="sxs-lookup"><span data-stu-id="7d95d-151">A <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d95d-152">Ottiene il metodo da chiamare quando l'attività viene completata correttamente entro il periodo di timeout.</span><span class="sxs-lookup"><span data-stu-id="7d95d-152">Gets the method to call when the task completes successfully within the time-out period.</span></span></summary>
        <value><span data-ttu-id="7d95d-153">Delegato <see cref="T:System.Web.EndEventHandler" /> che rappresenta il metodo da chiamare quando l'attività viene completata correttamente entro il periodo di timeout.</span><span class="sxs-lookup"><span data-stu-id="7d95d-153">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task completes successfully within the time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d95d-154">Il <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegato è impostato nel costruttore.</span><span class="sxs-lookup"><span data-stu-id="7d95d-154">The <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d95d-155">Esempio di codice seguente registra tre attività asincrone a una pagina e li esegue in parallelo.</span><span class="sxs-lookup"><span data-stu-id="7d95d-155">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="7d95d-156">Ogni attività chiama un metodo che determina semplicemente che il thread per 5 secondi.</span><span class="sxs-lookup"><span data-stu-id="7d95d-156">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="7d95d-157">Un <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegato specificato per ogni attività.</span><span class="sxs-lookup"><span data-stu-id="7d95d-157">An <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteInParallel">
      <MemberSignature Language="C#" Value="public bool ExecuteInParallel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExecuteInParallel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecuteInParallel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExecuteInParallel { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d95d-158">Ottiene un valore che indica se l'attività può essere elaborata in parallelo con altre attività.</span><span class="sxs-lookup"><span data-stu-id="7d95d-158">Gets a value that indicates whether the task can be processed in parallel with other tasks.</span></span></summary>
        <value>
          <span data-ttu-id="7d95d-159"><see langword="true" /> se l'attività deve essere elaborata in parallelo con altre attività; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d95d-159"><see langword="true" /> if the task should be processed in parallel with other tasks; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d95d-160">Il <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> proprietà è impostata nel costruttore.</span><span class="sxs-lookup"><span data-stu-id="7d95d-160">The <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set in the constructor.</span></span> <span data-ttu-id="7d95d-161">Quando più attività vengono registrate in una pagina e <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> è impostata su `true`, tali attività vengono elaborate simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="7d95d-161">When multiple tasks are registered in a page and the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `true`, then those tasks are processed concurrently.</span></span> <span data-ttu-id="7d95d-162">Tuttavia, se il <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> è impostata su `false`, tali attività vengono elaborate in sequenza.</span><span class="sxs-lookup"><span data-stu-id="7d95d-162">However, if the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `false`, then those tasks are processed sequentially.</span></span> <span data-ttu-id="7d95d-163">Ad esempio, se una pagina contenuta due attività asincrone e ciascuna richiede 5 secondi per completare e <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> è impostato su `true`, entrambe le attività verranno completata entro 5 secondi.</span><span class="sxs-lookup"><span data-stu-id="7d95d-163">For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `true`, both tasks will complete in 5 seconds.</span></span> <span data-ttu-id="7d95d-164">Se <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> è impostato su `false` per questi due attività, quindi la prima attività verrà completata entro 5 secondi e la seconda attività 5 secondi dopo il completamento della prima attività.</span><span class="sxs-lookup"><span data-stu-id="7d95d-164">If <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `false` for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d95d-165">L'esempio di codice seguente definisce tre attività asincrone che vengono impostate da elaborare in parallelo.</span><span class="sxs-lookup"><span data-stu-id="7d95d-165">The following code example defines three asynchronous tasks that are each set to be processed in parallel.</span></span> <span data-ttu-id="7d95d-166">In questo esempio fa parte di un esempio più esaustivo disponibile nel <xref:System.Web.UI.PageAsyncTask> Cenni preliminari sulla classe.</span><span class="sxs-lookup"><span data-stu-id="7d95d-166">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public object State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object State" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ State { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d95d-167">Ottiene un oggetto che rappresenta lo stato dell'attività.</span><span class="sxs-lookup"><span data-stu-id="7d95d-167">Gets an object that represents the state of the task.</span></span></summary>
        <value><span data-ttu-id="7d95d-168">Oggetto <see cref="T:System.Object" /> che rappresenta lo stato dell'attività.</span><span class="sxs-lookup"><span data-stu-id="7d95d-168">An <see cref="T:System.Object" /> that represents the state of the task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d95d-169">Il <xref:System.Web.UI.PageAsyncTask.State%2A> proprietà viene impostata nel costruttore e non può essere modificato durante l'esecuzione dell'attività asincrona.</span><span class="sxs-lookup"><span data-stu-id="7d95d-169">The <xref:System.Web.UI.PageAsyncTask.State%2A> property is set in the constructor and cannot be modified during execution of the asynchronous task.</span></span> <span data-ttu-id="7d95d-170">È possibile distinguere le attività asincrone in una pagina tramite l'assegnazione di valori stringa univoci alle rispettive <xref:System.Web.UI.PageAsyncTask.State%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="7d95d-170">You can differentiate asynchronous tasks in a page by assigning unique string values to their respective <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d95d-171">Esempio di codice seguente crea tre attività asincrone e vengono assegnati valori univoci per i relativi <xref:System.Web.UI.PageAsyncTask.State%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="7d95d-171">The following code example creates three asynchronous tasks and gives them unique values for their <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span> <span data-ttu-id="7d95d-172">In questo esempio fa parte di un esempio più esaustivo disponibile nel <xref:System.Web.UI.PageAsyncTask> Cenni preliminari sulla classe.</span><span class="sxs-lookup"><span data-stu-id="7d95d-172">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler TimeoutHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler TimeoutHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ TimeoutHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d95d-173">Ottiene il metodo da chiamare quando l'attività non viene completata correttamente entro il periodo di timeout.</span><span class="sxs-lookup"><span data-stu-id="7d95d-173">Gets the method to call when the task does not complete successfully within the time-out period.</span></span></summary>
        <value><span data-ttu-id="7d95d-174">Delegato <see cref="T:System.Web.EndEventHandler" /> che rappresenta il metodo da chiamare quando l'attività non viene completata correttamente entro il periodo di timeout.</span><span class="sxs-lookup"><span data-stu-id="7d95d-174">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task does not complete successfully within the time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d95d-175">Il <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegato è impostato nel costruttore.</span><span class="sxs-lookup"><span data-stu-id="7d95d-175">The <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d95d-176">Esempio di codice seguente registra tre attività asincrone a una pagina e li esegue in parallelo.</span><span class="sxs-lookup"><span data-stu-id="7d95d-176">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="7d95d-177">Ogni attività chiama un metodo che determina semplicemente che il thread per 5 secondi.</span><span class="sxs-lookup"><span data-stu-id="7d95d-177">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="7d95d-178">Oggetto <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegato specificato per ogni attività.</span><span class="sxs-lookup"><span data-stu-id="7d95d-178">A <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>