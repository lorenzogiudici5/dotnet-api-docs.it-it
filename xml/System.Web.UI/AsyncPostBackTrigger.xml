<Type Name="AsyncPostBackTrigger" FullName="System.Web.UI.AsyncPostBackTrigger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ad87b363639f50be9f9d84ab1a2a71108214e55" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37532299" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AsyncPostBackTrigger : System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AsyncPostBackTrigger extends System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.AsyncPostBackTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncPostBackTrigger&#xA;Inherits UpdatePanelControlTrigger" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncPostBackTrigger : System::Web::UI::UpdatePanelControlTrigger" />
  <TypeSignature Language="F#" Value="type AsyncPostBackTrigger = class&#xA;    inherit UpdatePanelControlTrigger" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.UpdatePanelControlTrigger</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines a control and optional event of the control as an asynchronous postback control trigger that causes an <see cref="T:System.Web.UI.UpdatePanel" /> control to refresh.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Web.UI.AsyncPostBackTrigger> controllo per abilitare i controlli da trigger per un <xref:System.Web.UI.UpdatePanel> controllo. I controlli che sono trigger per un pannello di aggiornamento provocano un aggiornamento del contenuto del pannello dopo un postback asincrono. La definizione di un controllo trigger asincrono è utile negli scenari seguenti:  
  
-   Per i controlli che si trovano all'esterno di un pannello.  
  
-   Per i controlli che si trovano all'interno di un pannello quando le <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> è di proprietà `false`.  
  
-   Per i controlli che si trovano all'interno di pannelli nidificati, per provocare un aggiornamento dei pannelli padre.  
  
 Il controllo che il <xref:System.Web.UI.AsyncPostBackTrigger> riferimenti al controllo deve essere nello stesso contenitore di denominazione del Pannello di aggiornamento per i quali è un trigger. I trigger che si basano sui controlli in altri contenitori di denominazione non sono supportati.  
  
 Aggiungere <xref:System.Web.UI.AsyncPostBackTrigger> controlli utilizzando il **UpdatePanelTrigger Editor della raccolta** finestra di dialogo nella finestra di progettazione o creando una `Triggers` in modo dichiarativo nell'elemento di <xref:System.Web.UI.UpdatePanel> controllo. Il <xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> proprietà è obbligatoria, ma il <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> proprietà è facoltativa. Se il <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> proprietà non viene specificata, il <xref:System.ComponentModel.DefaultEventAttribute> attributo del controllo viene utilizzato per determinare l'evento predefinito. Ad esempio, l'evento predefinito per il <xref:System.Web.UI.WebControls.Button> controllo è il <xref:System.Web.UI.WebControls.Button.Click> evento. Il <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> proprietà è tra maiuscole e minuscole.  
  
 È anche possibile fare riferimento a un contenitore di denominazione come trigger. In tal caso, tutti i controlli figlio nel contenitore che possono causare un postback vengono considerati i trigger per il <xref:System.Web.UI.UpdatePanel> controllo.  
  
 Aggiunta programmatica <xref:System.Web.UI.AsyncPostBackTrigger> controlli non è supportato. Per registrare a livello di codice un controllo di postback, usare il <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> metodo di <xref:System.Web.UI.ScriptManager> controllo. Chiamare quindi il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo del <xref:System.Web.UI.UpdatePanel> controllare quando il controllo esegue il postback.  
  
 Se si definisce un controllo utilizzando sia <xref:System.Web.UI.PostBackTrigger> e <xref:System.Web.UI.AsyncPostBackTrigger>, viene generata un'eccezione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come aggiungere un <xref:System.Web.UI.AsyncPostBackTrigger> controllare in modo dichiarativo. Oggetto <xref:System.Web.UI.WebControls.Button> controllo che non è compreso un <xref:System.Web.UI.UpdatePanel> consente agli utenti di immettere un termine di ricerca per trovare nel `Products` tabella del database Northwind. Oggetto <xref:System.Web.UI.WebControls.GridView> controllo che si trova all'interno di <xref:System.Web.UI.UpdatePanel> controllo Mostra i risultati. Il <xref:System.Web.UI.WebControls.Button> controllo viene specificato come trigger asincroni per il <xref:System.Web.UI.UpdatePanel> controllo.  
  
 [!code-aspx-csharp[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/CS/AsyncPostBackTriggerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/VB/AsyncPostBackTriggerVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.PostBackTrigger" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsyncPostBackTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsyncPostBackTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of an <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aggiungere <xref:System.Web.UI.AsyncPostBackTrigger> controlli utilizzando il **UpdatePanelTrigger Editor della raccolta** finestra di dialogo nella finestra di progettazione o creando una `Triggers` in modo dichiarativo nell'elemento di <xref:System.Web.UI.UpdatePanel> controllo.  
  
 Aggiunta di <xref:System.Web.UI.AsyncPostBackTrigger> controlli a livello di codice non è supportato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlID : string with get, set" Usage="System.Web.UI.AsyncPostBackTrigger.ControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the control that triggers an asynchronous postback for an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
        <value>ID controllo server.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public string EventName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
      <MemberSignature Language="VB.NET" Value="Public Property EventName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EventName : string with get, set" Usage="System.Web.UI.AsyncPostBackTrigger.EventName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the postback control event that triggers an <see cref="T:System.Web.UI.UpdatePanel" /> control to be updated.</summary>
        <value>Il nome dell'evento. Il valore predefinito è <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> proprietà è facoltativa. Se non è specificato, il <xref:System.ComponentModel.DefaultEventAttribute> attributo del controllo viene utilizzato per determinare l'evento predefinito. La tabella seguente elenca gli eventi predefiniti per alcuni controlli comuni di ASP.NET 2.0.  
  
|Control|Evento predefinito|  
|-------------|-------------------|  
|<xref:System.Web.UI.WebControls.Button>|<xref:System.Web.UI.WebControls.Button.Click>|  
|<xref:System.Web.UI.WebControls.Calendar>|<xref:System.Web.UI.WebControls.Calendar.SelectionChanged>|  
|<xref:System.Web.UI.WebControls.CheckBox>|<xref:System.Web.UI.WebControls.CheckBox.CheckedChanged>|  
|<xref:System.Web.UI.WebControls.GridView>|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|  
|<xref:System.Web.UI.WebControls.TextBox>|<xref:System.Web.UI.WebControls.TextBox.TextChanged>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
      </Docs>
    </Member>
    <Member MemberName="HasTriggered">
      <MemberSignature Language="C#" Value="protected internal override bool HasTriggered ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool HasTriggered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.HasTriggered" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function HasTriggered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool HasTriggered();" />
      <MemberSignature Language="F#" Value="override this.HasTriggered : unit -&gt; bool" Usage="asyncPostBackTrigger.HasTriggered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a value that indicates whether the trigger was invoked.</summary>
        <returns>
          <see langword="true" /> if the trigger was invoked; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli sviluppatori di controlli possono eseguire l'override di <xref:System.Web.UI.AsyncPostBackTrigger.HasTriggered%2A> metodo per fornire la logica personalizzata per determinare se il trigger è stato richiamato. Per visualizzare un trigger personalizzato nel `Triggers` elemento del <xref:System.Web.UI.UpdatePanel> (controllo), è possibile aggiungere una direttiva nella pagina o all'elemento del file Web. config.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="asyncPostBackTrigger.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initializes the <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> control and determines whether the event that is named in the trigger exists and is valid.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">No <see cref="T:System.Web.UI.ScriptManager" /> control was found on the page.  \- or -  The event that is named in the <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> property is not found for the control that is named in the <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property.  \- or -  The event that is named in the <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> property for the control that is named in the <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property does not match a standard event handler signature.</exception>
        <altmember cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
        <altmember cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" />
      </Docs>
    </Member>
    <Member MemberName="OnEvent">
      <MemberSignature Language="C#" Value="public void OnEvent (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnEvent(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnEvent (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnEvent(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnEvent : obj * EventArgs -&gt; unit" Usage="asyncPostBackTrigger.OnEvent (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">The event sender.</param>
        <param name="e">The event data.</param>
        <summary>Raises the event that will trigger a postback and refresh of an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="asyncPostBackTrigger.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string representation of the current <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> control.</summary>
        <returns>A string that represents the current <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> control.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>