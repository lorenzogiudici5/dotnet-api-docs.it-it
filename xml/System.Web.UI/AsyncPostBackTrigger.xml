<Type Name="AsyncPostBackTrigger" FullName="System.Web.UI.AsyncPostBackTrigger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c9b2b6a2f8c6ccfeaea2ec0d9768dbb48b0576a9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598655" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AsyncPostBackTrigger : System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AsyncPostBackTrigger extends System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.AsyncPostBackTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncPostBackTrigger&#xA;Inherits UpdatePanelControlTrigger" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncPostBackTrigger : System::Web::UI::UpdatePanelControlTrigger" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.UpdatePanelControlTrigger</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="370fc-101">Definisce un controllo e un evento facoltativo del controllo come trigger del controllo di postback asincrono che determina l'aggiornamento di un controllo <see cref="T:System.Web.UI.UpdatePanel" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="370fc-101">Defines a control and optional event of the control as an asynchronous postback control trigger that causes an <see cref="T:System.Web.UI.UpdatePanel" /> control to refresh.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="370fc-102">Utilizzare il <xref:System.Web.UI.AsyncPostBackTrigger> controllo per abilitare i controlli da trigger per un <xref:System.Web.UI.UpdatePanel> controllo.</span><span class="sxs-lookup"><span data-stu-id="370fc-102">Use the <xref:System.Web.UI.AsyncPostBackTrigger> control to enable controls to be triggers for an <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="370fc-103">I controlli che sono i trigger per un pannello di aggiornamento determina un aggiornamento del contenuto del pannello dopo un postback asincrono.</span><span class="sxs-lookup"><span data-stu-id="370fc-103">Controls that are triggers for an update panel cause a refresh of the panel's content after an asynchronous postback.</span></span> <span data-ttu-id="370fc-104">Definire un controllo trigger asincrono è utile negli scenari seguenti:</span><span class="sxs-lookup"><span data-stu-id="370fc-104">Defining an asynchronous trigger control is useful in the following scenarios:</span></span>  
  
-   <span data-ttu-id="370fc-105">Per i controlli che si trovano all'esterno di un pannello.</span><span class="sxs-lookup"><span data-stu-id="370fc-105">For controls that are outside a panel.</span></span>  
  
-   <span data-ttu-id="370fc-106">Per i controlli che si trovano all'interno di un pannello quando il <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="370fc-106">For controls that are inside a panel when the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `false`.</span></span>  
  
-   <span data-ttu-id="370fc-107">Per i controlli che si trovano all'interno di panelli annidati, per provocare un aggiornamento dei pannelli padre.</span><span class="sxs-lookup"><span data-stu-id="370fc-107">For controls that are inside nested panels, in order to cause a refresh of parent panels.</span></span>  
  
 <span data-ttu-id="370fc-108">Il controllo che il <xref:System.Web.UI.AsyncPostBackTrigger> i riferimenti di controllo devono essere nello stesso contenitore di denominazione del Pannello di aggiornamento per i quali è un trigger.</span><span class="sxs-lookup"><span data-stu-id="370fc-108">The control that the <xref:System.Web.UI.AsyncPostBackTrigger> control references must be in the same naming container as the update panel for which it is a trigger.</span></span> <span data-ttu-id="370fc-109">I trigger che si basano sui controlli in altri contenitori di denominazione non sono supportati.</span><span class="sxs-lookup"><span data-stu-id="370fc-109">Triggers that are based on controls in other naming containers are not supported.</span></span>  
  
 <span data-ttu-id="370fc-110">Aggiungere <xref:System.Web.UI.AsyncPostBackTrigger> controlli utilizzando il **UpdatePanelTrigger Editor della raccolta** la finestra di dialogo nella finestra di progettazione o creando un `Triggers` in modo dichiarativo nell'elemento di <xref:System.Web.UI.UpdatePanel> controllo.</span><span class="sxs-lookup"><span data-stu-id="370fc-110">Add <xref:System.Web.UI.AsyncPostBackTrigger> controls either by using the **UpdatePanelTrigger Collection Editor** dialog box in the designer or by creating a `Triggers` element declaratively in the <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="370fc-111">Il <xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> proprietà è obbligatoria, ma la <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> proprietà è facoltativa.</span><span class="sxs-lookup"><span data-stu-id="370fc-111">The <xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> property is required, but the <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is optional.</span></span> <span data-ttu-id="370fc-112">Se il <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> proprietà non è specificata, il <xref:System.ComponentModel.DefaultEventAttribute> attributo del controllo viene utilizzato per determinare l'evento predefinito.</span><span class="sxs-lookup"><span data-stu-id="370fc-112">If the <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is not specified, the <xref:System.ComponentModel.DefaultEventAttribute> attribute of the control is used to determine the default event.</span></span> <span data-ttu-id="370fc-113">Ad esempio, l'evento predefinito per il <xref:System.Web.UI.WebControls.Button> controllo è il <xref:System.Web.UI.WebControls.Button.Click> evento.</span><span class="sxs-lookup"><span data-stu-id="370fc-113">For example, the default event for the <xref:System.Web.UI.WebControls.Button> control is the <xref:System.Web.UI.WebControls.Button.Click> event.</span></span> <span data-ttu-id="370fc-114">Il <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> proprietà è tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="370fc-114">The <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is case-insensitive.</span></span>  
  
 <span data-ttu-id="370fc-115">È anche possibile fare riferimento a un contenitore di denominazione come trigger.</span><span class="sxs-lookup"><span data-stu-id="370fc-115">You can also reference a naming container as a trigger.</span></span> <span data-ttu-id="370fc-116">In tal caso, tutti i controlli figlio nel contenitore che provocano un postback vengono considerati trigger per il <xref:System.Web.UI.UpdatePanel> controllo.</span><span class="sxs-lookup"><span data-stu-id="370fc-116">In that case, all child controls in the container that cause a postback are considered triggers for the <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 <span data-ttu-id="370fc-117">Aggiunta a livello di programmazione <xref:System.Web.UI.AsyncPostBackTrigger> controlli non è supportata.</span><span class="sxs-lookup"><span data-stu-id="370fc-117">Programmatically adding <xref:System.Web.UI.AsyncPostBackTrigger> controls is not supported.</span></span> <span data-ttu-id="370fc-118">Per registrare a livello di codice un controllo di postback, utilizzare il <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> metodo il <xref:System.Web.UI.ScriptManager> controllo.</span><span class="sxs-lookup"><span data-stu-id="370fc-118">To programmatically register a postback control, use the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control.</span></span> <span data-ttu-id="370fc-119">Chiamare quindi il <xref:System.Web.UI.UpdatePanel.Update%2A> metodo il <xref:System.Web.UI.UpdatePanel> controllare quando il controllo esegue il postback.</span><span class="sxs-lookup"><span data-stu-id="370fc-119">Then call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the <xref:System.Web.UI.UpdatePanel> control when the control posts back.</span></span>  
  
 <span data-ttu-id="370fc-120">Se si definisce un controllo utilizzando sia <xref:System.Web.UI.PostBackTrigger> e <xref:System.Web.UI.AsyncPostBackTrigger>, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="370fc-120">If you define a control using both <xref:System.Web.UI.PostBackTrigger> and <xref:System.Web.UI.AsyncPostBackTrigger>, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="370fc-121">Nell'esempio seguente viene illustrato come aggiungere un <xref:System.Web.UI.AsyncPostBackTrigger> controllare in modo dichiarativo.</span><span class="sxs-lookup"><span data-stu-id="370fc-121">The following example shows how to add an <xref:System.Web.UI.AsyncPostBackTrigger> control declaratively.</span></span> <span data-ttu-id="370fc-122">A <xref:System.Web.UI.WebControls.Button> controllo che non è compreso un <xref:System.Web.UI.UpdatePanel> consente agli utenti di immettere un termine di ricerca per trovare nel `Products` tabella del database Northwind.</span><span class="sxs-lookup"><span data-stu-id="370fc-122">A <xref:System.Web.UI.WebControls.Button> control that is outside an <xref:System.Web.UI.UpdatePanel> control lets users enter a search term to find in the `Products` table of the Northwind database.</span></span> <span data-ttu-id="370fc-123">Oggetto <xref:System.Web.UI.WebControls.GridView> controllo che si trova all'interno di <xref:System.Web.UI.UpdatePanel> controllo Mostra i risultati.</span><span class="sxs-lookup"><span data-stu-id="370fc-123">A <xref:System.Web.UI.WebControls.GridView> control that is inside the <xref:System.Web.UI.UpdatePanel> control shows the results.</span></span> <span data-ttu-id="370fc-124">Il <xref:System.Web.UI.WebControls.Button> controllo viene specificato come trigger asincrono per il <xref:System.Web.UI.UpdatePanel> controllo.</span><span class="sxs-lookup"><span data-stu-id="370fc-124">The <xref:System.Web.UI.WebControls.Button> control is specified as an asynchronous trigger for the <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/CS/AsyncPostBackTriggerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/VB/AsyncPostBackTriggerVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.PostBackTrigger" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsyncPostBackTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsyncPostBackTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="370fc-125">Inizializza una nuova istanza di una classe <see cref="T:System.Web.UI.AsyncPostBackTrigger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-125">Initializes a new instance of an <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="370fc-126">Aggiungere <xref:System.Web.UI.AsyncPostBackTrigger> controlli utilizzando il **UpdatePanelTrigger Editor della raccolta** la finestra di dialogo nella finestra di progettazione o creando un `Triggers` in modo dichiarativo nell'elemento di <xref:System.Web.UI.UpdatePanel> controllo.</span><span class="sxs-lookup"><span data-stu-id="370fc-126">Add <xref:System.Web.UI.AsyncPostBackTrigger> controls either by using the **UpdatePanelTrigger Collection Editor** dialog box in the designer or by creating a `Triggers` element declaratively in the <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 <span data-ttu-id="370fc-127">Aggiunta di <xref:System.Web.UI.AsyncPostBackTrigger> controlli a livello di codice non è supportato.</span><span class="sxs-lookup"><span data-stu-id="370fc-127">Adding <xref:System.Web.UI.AsyncPostBackTrigger> controls programmatically is not supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="370fc-128">Ottiene o imposta il nome del controllo che attiva un postback asincrono per un controllo <see cref="T:System.Web.UI.UpdatePanel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-128">Gets or sets the name of the control that triggers an asynchronous postback for an <see cref="T:System.Web.UI.UpdatePanel" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="370fc-129">ID controllo server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-129">A server control ID.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public string EventName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
      <MemberSignature Language="VB.NET" Value="Public Property EventName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="370fc-130">Ottiene o imposta l'evento del controllo di postback che attiva un controllo <see cref="T:System.Web.UI.UpdatePanel" /> da aggiornare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-130">Gets or sets the postback control event that triggers an <see cref="T:System.Web.UI.UpdatePanel" /> control to be updated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="370fc-131">Il nome dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-131">The event name.</span>
          </span>
          <span data-ttu-id="370fc-132">Il valore predefinito è <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-132">The default value is <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="370fc-133">Il <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> proprietà è facoltativa.</span><span class="sxs-lookup"><span data-stu-id="370fc-133">The <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is optional.</span></span> <span data-ttu-id="370fc-134">Se non è specificato, il <xref:System.ComponentModel.DefaultEventAttribute> attributo del controllo viene utilizzato per determinare l'evento predefinito.</span><span class="sxs-lookup"><span data-stu-id="370fc-134">If it is not specified, the <xref:System.ComponentModel.DefaultEventAttribute> attribute of the control is used to determine the default event.</span></span> <span data-ttu-id="370fc-135">La tabella seguente elenca gli eventi predefiniti per alcuni controlli comuni di ASP.NET 2.0.</span><span class="sxs-lookup"><span data-stu-id="370fc-135">The following table lists default events for some common ASP.NET 2.0 controls.</span></span>  
  
|<span data-ttu-id="370fc-136">Control</span><span class="sxs-lookup"><span data-stu-id="370fc-136">Control</span></span>|<span data-ttu-id="370fc-137">Evento predefinito</span><span class="sxs-lookup"><span data-stu-id="370fc-137">Default event</span></span>|  
|-------------|-------------------|  
|<xref:System.Web.UI.WebControls.Button>|<xref:System.Web.UI.WebControls.Button.Click>|  
|<xref:System.Web.UI.WebControls.Calendar>|<xref:System.Web.UI.WebControls.Calendar.SelectionChanged>|  
|<xref:System.Web.UI.WebControls.CheckBox>|<xref:System.Web.UI.WebControls.CheckBox.CheckedChanged>|  
|<xref:System.Web.UI.WebControls.GridView>|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|  
|<xref:System.Web.UI.WebControls.TextBox>|<xref:System.Web.UI.WebControls.TextBox.TextChanged>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
      </Docs>
    </Member>
    <Member MemberName="HasTriggered">
      <MemberSignature Language="C#" Value="protected internal override bool HasTriggered ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool HasTriggered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.HasTriggered" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function HasTriggered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool HasTriggered();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="370fc-138">Restituisce un valore che indica se il trigger è stato richiamato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-138">Returns a value that indicates whether the trigger was invoked.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="370fc-139">
            <see langword="true" /> se il trigger è stato richiamato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-139">
              <see langword="true" /> if the trigger was invoked; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="370fc-140">Gli sviluppatori di controlli possono eseguire l'override di <xref:System.Web.UI.AsyncPostBackTrigger.HasTriggered%2A> metodo per fornire la logica personalizzata per determinare se il trigger è stato richiamato.</span><span class="sxs-lookup"><span data-stu-id="370fc-140">Control developers can override the <xref:System.Web.UI.AsyncPostBackTrigger.HasTriggered%2A> method to provide custom logic for determining whether the trigger was invoked.</span></span> <span data-ttu-id="370fc-141">Per visualizzare un trigger personalizzato nel `Triggers` elemento del <xref:System.Web.UI.UpdatePanel> (controllo), è possibile aggiungere una direttiva per la pagina o per l'elemento del file Web. config.</span><span class="sxs-lookup"><span data-stu-id="370fc-141">To see a custom trigger in the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control, you can add an  directive to the page or to the  element of the Web.config file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="370fc-142">Inizializza il controllo <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> e determina se l'evento denominato nel trigger esiste ed è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-142">Initializes the <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> control and determines whether the event that is named in the trigger exists and is valid.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="370fc-143">Nessun controllo <see cref="T:System.Web.UI.ScriptManager" /> trovato nella pagina.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-143">No <see cref="T:System.Web.UI.ScriptManager" /> control was found on the page.</span>
          </span>
          <span data-ttu-id="370fc-144">\- oppure -</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-144">\- or -</span>
          </span>
          <span data-ttu-id="370fc-145">Impossibile trovare l'evento denominato nella proprietà <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> per il controllo denominato nella proprietà <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-145">The event that is named in the <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> property is not found for the control that is named in the <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property.</span>
          </span>
          <span data-ttu-id="370fc-146">\- oppure -</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-146">\- or -</span>
          </span>
          <span data-ttu-id="370fc-147">L'evento denominato nella proprietà <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> per il controllo denominato nella proprietà <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> non corrisponde a una firma del gestore eventi standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-147">The event that is named in the <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> property for the control that is named in the <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property does not match a standard event handler signature.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
        <altmember cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" />
      </Docs>
    </Member>
    <Member MemberName="OnEvent">
      <MemberSignature Language="C#" Value="public void OnEvent (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnEvent(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnEvent (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnEvent(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="370fc-148">Mittente dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-148">The event sender.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="370fc-149">Dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-149">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="370fc-150">Genera l'evento che attiverà un postback e aggiornerà un controllo <see cref="T:System.Web.UI.UpdatePanel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-150">Raises the event that will trigger a postback and refresh of an <see cref="T:System.Web.UI.UpdatePanel" /> control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="370fc-151">Restituisce una rappresentazione di stringa del controllo <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-151">Returns a string representation of the current <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="370fc-152">Una stringa che rappresenta il controllo <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="370fc-152">A string that represents the current <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>