<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="14af1-101">Viene utilizzata per indicare che un controllo può essere la destinazione di un evento di callback sul server.</span><span class="sxs-lookup"><span data-stu-id="14af1-101">Used to indicate that a control can be the target of a callback event on the server.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14af1-102">Implementare il <xref:System.Web.UI.ICallbackEventHandler> interfaccia per qualsiasi controllo personalizzato che deve ricevere gli eventi di callback.</span><span class="sxs-lookup"><span data-stu-id="14af1-102">Implement the <xref:System.Web.UI.ICallbackEventHandler> interface for any custom control that needs to receive callback events.</span></span> <span data-ttu-id="14af1-103">Per ulteriori informazioni, vedere [implementazione di callback Client senza postback](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="14af1-103">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
 <span data-ttu-id="14af1-104">Esempi di controlli che implementano il <xref:System.Web.UI.ICallbackEventHandler> interfaccia include il <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.TreeView> controlli.</span><span class="sxs-lookup"><span data-stu-id="14af1-104">Examples of controls that implement the <xref:System.Web.UI.ICallbackEventHandler> interface include the <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> controls.</span></span> <span data-ttu-id="14af1-105">Quando un evento di callback ha come destinazione un controllo che implementa il <xref:System.Web.UI.ICallbackEventHandler> interfaccia, il <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metodo viene chiamato per gestire l'evento, passando l'argomento dell'evento come parametro e <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> restituisce il risultato del metodo di callback.</span><span class="sxs-lookup"><span data-stu-id="14af1-105">When a callback event targets a control that implements the <xref:System.Web.UI.ICallbackEventHandler> interface, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is called to handle the event, passing the event argument as a parameter and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the result of the callback.</span></span>  
  
 <span data-ttu-id="14af1-106">I controlli che recuperano dati da un controllo origine dati durante il callback è possono farlo in modo sincrono o asincrono.</span><span class="sxs-lookup"><span data-stu-id="14af1-106">Controls that retrieve data from a data source control during callback can do so synchronously or asynchronously.</span></span> <span data-ttu-id="14af1-107">I controlli ASP.NET come <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.TreeView> vengono implementati in modo sincrono.</span><span class="sxs-lookup"><span data-stu-id="14af1-107">ASP.NET controls like <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> are implemented synchronously.</span></span> <span data-ttu-id="14af1-108">I callback sincroni non impedire all'utente nel Visualizzatore.</span><span class="sxs-lookup"><span data-stu-id="14af1-108">Synchronous callbacks do not prevent the user from working in the browser.</span></span> <span data-ttu-id="14af1-109">In modalità sincrona, è possibile eseguire un solo callback in un momento, con l'ultimo callback ha la precedenza.</span><span class="sxs-lookup"><span data-stu-id="14af1-109">In synchronous mode, only one callback at a time can execute, with the last callback taking precedence.</span></span> <span data-ttu-id="14af1-110">Quando un controllo Web viene implementato per supportare il comportamento asincrono, è possibile generare più callback contemporaneamente.</span><span class="sxs-lookup"><span data-stu-id="14af1-110">When a Web control is implemented to support asynchronous behavior, multiple callbacks can be raised simultaneously.</span></span> <span data-ttu-id="14af1-111">Per informazioni dettagliate sulla programmazione asincrona, vedere [basato su eventi modello asincrono (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).</span><span class="sxs-lookup"><span data-stu-id="14af1-111">For details on asynchronous programming, see [Event-based Asynchronous Pattern (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).</span></span>  
  
 <span data-ttu-id="14af1-112">È possibile specificare se gli eventi di callback provenienti dall'interfaccia utente eseguito il rendering da un controllo che implementa il <xref:System.Web.UI.ICallbackEventHandler> interfaccia vengono convalidati.</span><span class="sxs-lookup"><span data-stu-id="14af1-112">You can specify whether callback events originating from the user interface rendered by a control implementing the <xref:System.Web.UI.ICallbackEventHandler> interface are validated.</span></span> <span data-ttu-id="14af1-113">La convalida degli eventi è buona norma.</span><span class="sxs-lookup"><span data-stu-id="14af1-113">Validation of events is a good security practice.</span></span> <span data-ttu-id="14af1-114">Tuttavia, per motivi di prestazioni è possibile disabilitarla.</span><span class="sxs-lookup"><span data-stu-id="14af1-114">However, for performance reasons you can disable it.</span></span> <span data-ttu-id="14af1-115">Per controllare se la convalida viene eseguita sugli eventi di callback, impostare il `enableEventValidation` attributo del [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) direttiva o `enableEventValidation` attributo del [pages Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) del file Web. config.</span><span class="sxs-lookup"><span data-stu-id="14af1-115">To control whether event validation is performed on callback events, set the `enableEventValidation` attribute of the [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive or the `enableEventValidation` attribute of the [pages Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) of the Web.config file.</span></span> <span data-ttu-id="14af1-116">Se si imposta la <xref:System.Web.UI.Page.EnableEventValidation%2A> proprietà nel codice, impostarla `Page_Init` fase dell'elaborazione della pagina.</span><span class="sxs-lookup"><span data-stu-id="14af1-116">If you set the <xref:System.Web.UI.Page.EnableEventValidation%2A> property in code, set it in the `Page_Init` phase of page processing.</span></span> <span data-ttu-id="14af1-117">Per ulteriori informazioni su Bilanciamento il vantaggio di sicurezza della convalida degli eventi con il relativo impatto sulle prestazioni, vedere [Cenni preliminari sulle prestazioni di ASP.NET](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).</span><span class="sxs-lookup"><span data-stu-id="14af1-117">For more information on balancing the security benefit of event validation with its performance cost, see [ASP.NET Performance Overview](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14af1-118">Restituisce i risultati di un evento di callback diretto a un controllo.</span><span class="sxs-lookup"><span data-stu-id="14af1-118">Returns the results of a callback event that targets a control.</span></span></summary>
        <returns><span data-ttu-id="14af1-119">Risultato del callback.</span><span class="sxs-lookup"><span data-stu-id="14af1-119">The result of the callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14af1-120">Le eccezioni generate <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> non impedirà <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> di essere chiamato e restituire un risultato.</span><span class="sxs-lookup"><span data-stu-id="14af1-120">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="14af1-121">Per evitare <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> di restituire un risultato, impostare un flag quando viene generata un'eccezione <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> e restituiscono una stringa vuota da <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="14af1-121">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument"><span data-ttu-id="14af1-122">Stringa che rappresenta un argomento di evento da passare al gestore eventi.</span><span class="sxs-lookup"><span data-stu-id="14af1-122">A string that represents an event argument to pass to the event handler.</span></span></param>
        <summary><span data-ttu-id="14af1-123">Elabora un evento di callback che ha come destinazione un controllo.</span><span class="sxs-lookup"><span data-stu-id="14af1-123">Processes a callback event that targets a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14af1-124">Quando `null` viene utilizzato come parametro di argomento dell'evento, la stringa viene serializzata come "null" e inviata di nuovo al server.</span><span class="sxs-lookup"><span data-stu-id="14af1-124">When `null` is used as the event argument parameter, the string is serialized to "null" and sent back to the server.</span></span> <span data-ttu-id="14af1-125">Poiché non esiste alcun modo per distinguere tra `null` e "null", è consigliabile evitare di utilizzare `null` parametri dell'argomento con callback.</span><span class="sxs-lookup"><span data-stu-id="14af1-125">Because there is no way to distinguish between `null` and "null", you should avoid using `null` argument parameters with callbacks.</span></span>  
  
 <span data-ttu-id="14af1-126">Le eccezioni generate <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> non impedirà <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> di essere chiamato e restituire un risultato.</span><span class="sxs-lookup"><span data-stu-id="14af1-126">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="14af1-127">Per evitare <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> di restituire un risultato, impostare un flag quando viene generata un'eccezione <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> e restituiscono una stringa vuota da <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="14af1-127">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>