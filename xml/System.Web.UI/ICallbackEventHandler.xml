<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fd0e63154b3f5a2354970a96bf74345816e7be7" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51901513" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <TypeSignature Language="F#" Value="type ICallbackEventHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Viene utilizzata per indicare che un controllo può essere la destinazione di un evento di callback sul server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementare il <xref:System.Web.UI.ICallbackEventHandler> interfaccia per tutti i controlli personalizzati che devono essere inviati gli eventi di callback. Per altre informazioni, vedere [implementazione di callback Client senza i postback](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).  
  
 Esempi di controlli che implementano il <xref:System.Web.UI.ICallbackEventHandler> interfaccia include le <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.TreeView> controlli. Quando un evento di callback diretto a un controllo che implementa il <xref:System.Web.UI.ICallbackEventHandler> interfaccia, il <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> viene chiamato per gestire l'evento, passando l'argomento dell'evento come parametro e il <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> restituisce il risultato del metodo di callback.  
  
 I controlli che recuperano dati da un controllo origine dati durante il callback è possono farlo in modo sincrono o asincrono. Controlli ASP.NET, ad esempio <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.TreeView> vengono implementati in modo sincrono. I callback sincroni non impedire all'utente nel Visualizzatore. In modalità sincrona, è possibile eseguire soltanto una richiamata in una fase, con l'ultimo callback ha la precedenza. Quando un controllo Web viene implementato per supportare il comportamento asincrono, più callback possono essere generati contemporaneamente. Per informazioni dettagliate sulla programmazione asincrona, vedere [basato su eventi asincroni Pattern (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).  
  
 È possibile specificare se gli eventi di callback che hanno origine dall'interfaccia utente viene eseguito il rendering da un controllo che implementa il <xref:System.Web.UI.ICallbackEventHandler> interfaccia vengono convalidati. La convalida degli eventi è buona norma. Tuttavia, per motivi di prestazioni è possibile disabilitarlo. Per controllare se la convalida degli eventi viene eseguita sugli eventi di callback, impostare il `enableEventValidation` attributo del [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) direttiva o il `enableEventValidation` attributo del [pages Element (Schema delle impostazioni ASP.NET)](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) del file Web. config. Se si impostano i <xref:System.Web.UI.Page.EnableEventValidation%2A> proprietà nel codice impostarla `Page_Init` fase dell'elaborazione della pagina. Per altre informazioni sul bilanciamento i vantaggi della protezione della convalida degli eventi con relativo impatto sulle prestazioni, vedere [Cenni preliminari sulle prestazioni ASP.NET](https://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string" Usage="iCallbackEventHandler.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce i risultati di un evento di callback diretto a un controllo.</summary>
        <returns>Risultato del callback.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le eccezioni generate nei <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> non impedirà <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> dalla chiamata e restituire un risultato. Per impedire <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> da restituire un risultato, impostare un flag quando viene generata un'eccezione <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> e restituire una stringa vuota da <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit" Usage="iCallbackEventHandler.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Stringa che rappresenta un argomento di evento da passare al gestore eventi.</param>
        <summary>Elabora un evento di callback che ha come destinazione un controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si `null` viene usato come parametro di argomento dell'evento, la stringa viene serializzata come "null" e inviata di nuovo al server. Perché non esiste alcun modo per distinguere `null` e "null", è consigliabile evitare di usare `null` i parametri di argomento con i callback.  
  
 Le eccezioni generate nei <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> non impedirà <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> dalla chiamata e restituire un risultato. Per impedire <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> da restituire un risultato, impostare un flag quando viene generata un'eccezione <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> e restituire una stringa vuota da <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>