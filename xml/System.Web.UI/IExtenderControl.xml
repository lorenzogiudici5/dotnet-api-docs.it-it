<Type Name="IExtenderControl" FullName="System.Web.UI.IExtenderControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c7e8355f1f70d3786c08bb177404003de62a6676" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30606025" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IExtenderControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtenderControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IExtenderControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtenderControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IExtenderControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce il comportamento di un controllo estensione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlli di estensione che derivano dal <xref:System.Web.UI.ExtenderControl> classe richiedono un <xref:System.Web.UI.ScriptManager> controllo per aprire la pagina. Il <xref:System.Web.UI.ExtenderControl> classe di base esegue un test esplicito per assicurarsi che un <xref:System.Web.UI.ScriptManager> controllo presente nella pagina.  
  
 Tuttavia, se si desidera creare controlli e la pagina non contiene un <xref:System.Web.UI.ScriptManager> (controllo), è possibile creare una classe che implementa il <xref:System.Web.UI.IExtenderControl> interfaccia direttamente. Inoltre, se si sta creando una classe che deriva da <xref:System.Web.UI.Control> o si estende un controllo esistente che deriva da <xref:System.Web.UI.Control>, è possibile implementare il <xref:System.Web.UI.IExtenderControl> interfaccia per supportare la funzionalità client.  
  
 Il <xref:System.Web.UI.IExtenderControl> interfaccia registra le librerie di script per un controllo chiamando la <xref:System.Web.UI.IExtenderControl.GetScriptReferences%2A> (metodo) e registra <xref:System.Web.UI.ScriptDescriptor> oggetti chiamando il <xref:System.Web.UI.IExtenderControl.GetScriptDescriptors%2A> metodo. Il <xref:System.Web.UI.IExtenderControl.GetScriptDescriptors%2A> metodo restituisce un <xref:System.Collections.IEnumerable> elenco <xref:System.Web.UI.ScriptDescriptor> oggetti.  
  
> [!NOTE]
>  Se si estende un tipo di controllo esistente che è derivato dal <xref:System.Web.UI.WebControls.WebControl> classe, implementare il <xref:System.Web.UI.IScriptControl> interfaccia.  
  
 Per creare un controllo extender implementando <xref:System.Web.UI.IExtenderControl>, effettuare le operazioni seguenti:  
  
-   Scrivere codice per il controllo `OnInit` evento per rilevare e utilizzare il <xref:System.Web.UI.ScriptManager> controllare se è disponibile nella pagina.  
  
-   Se il <xref:System.Web.UI.ScriptManager> non è disponibile nella pagina, fornire alternative per registrare gli script necessari chiamando i metodi statici del <xref:System.Web.UI.ScriptManager> classe.  
  
-   Fornire membri virtuali protetti per <xref:System.Web.UI.IExtenderControl> membri.  
  
-   Fornire uno script dell'istanza come un blocco di script che si registra con il <xref:System.Web.UI.ScriptManager> controllo. È necessario eseguire questa operazione durante il controllo `PreRender`, `PreRenderComplete`, o `Render` eventi.  
  
-   Registrare i descrittori di script durante il controllo `Render` evento.  
  
> [!NOTE]
>  Se la pagina contiene un <xref:System.Web.UI.UpdatePanel> (controllo), la pagina deve contenere un <xref:System.Web.UI.ScriptManager> controllo. È necessario implementare la <xref:System.Web.UI.IExtenderControl> interfaccia solo quando la pagina non contiene un <xref:System.Web.UI.ScriptManager> controllo.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ExtenderControl" />
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName="GetScriptDescriptors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors (System.Web.UI.Control targetControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors(class System.Web.UI.Control targetControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IExtenderControl.GetScriptDescriptors(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetScriptDescriptors (targetControl As Control) As IEnumerable(Of ScriptDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ GetScriptDescriptors(System::Web::UI::Control ^ targetControl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="targetControl">Controllo server a cui è associata l'estensione.</param>
        <summary>Registra gli oggetti <see cref="T:System.Web.UI.ScriptDescriptor" /> relativi al controllo e restituisce un oggetto che contiene gli oggetti <see cref="T:System.Web.UI.ScriptDescriptor" /> relativi al controllo.</summary>
        <returns>Insieme <see cref="T:System.Collections.IEnumerable" /> contenente gli oggetti <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IExtenderControl.GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Public Function GetScriptReferences () As IEnumerable(Of ScriptReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ GetScriptReferences();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Registra le librerie di script per il controllo e restituisce un'enumerazione dei file ECMAScript (JavaScript) registrati come risorse incorporate.</summary>
        <returns>Insieme <see cref="T:System.Collections.IEnumerable" /> contenente file JavaScript registrati come risorse incorporate.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>