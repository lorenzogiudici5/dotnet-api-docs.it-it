<Type Name="ConflictOptions" FullName="System.Web.UI.ConflictOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f213ffcca66f94205425cd8519b7f64f6024de97" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36377928" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ConflictOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConflictOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ConflictOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConflictOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConflictOptions" />
  <TypeSignature Language="F#" Value="type ConflictOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Determina come i controlli origine dati ASP.NET gestiscono i conflitti tra i dati durante l'aggiornamento o l'eliminazione di dati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controllo della concorrenza è una tecnica che utilizzano archivi dati al controllo del codice come dati viene letta e modificati nell'archivio quando più client accedono e modificano gli stessi dati. Ad esempio, un client legge i dati e presenta all'utente, mentre un altro client legge gli stessi dati e presenta a un altro utente. Se entrambi gli utenti aggiornano i dati e inviano per l'archiviazione dei dati, potrebbero verificarsi risultati imprevisti perché i client potrebbero aggiornare valori diversi per gli stessi dati. Questa viene considerata un conflitto.  
  
 Il `ConflictDetection` proprietà definite per i controlli origine dati ASP.NET viene utilizzata per determinano il modo in cui un controllo gestisce i conflitti di dati nell'archivio dati sottostante quando l'archivio dati sottostante utilizza la concorrenza ottimistica e un'operazione di eliminazione o l'operazione di aggiornamento eseguire.  
  
 Per impostazione predefinita, il `ConflictDetection` è impostata su OverwriteChanges, ovvero il controllo origine dati verrà sovrascritte tutte le modifiche apportate a una riga di dati tra l'ora il controllo origine dati prima di leggere i dati dalla riga e l'ora che la riga viene aggiornata. La chiave primaria viene usata per individuare la riga di dati che verrà aggiornata o eliminata, ma nessun altro confronto dei dati viene eseguito. Se il controllo origine dati è configurato per utilizzare l'opzione CompareAllValues, tuttavia, il controllo passa i dati originali nel `oldValues` raccolte del `Update` e `Delete` metodi in modo che sia possibile scrivere la logica per aggiornare o eliminare dati solo se Questi valori corrispondono a quelli attualmente presenti nell'archivio dati. I valori corrispondenti indicano che i dati non vengono modificati dal momento che è stato letto.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
  </Docs>
  <Members>
    <Member MemberName="CompareAllValues">
      <MemberSignature Language="C#" Value="CompareAllValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions CompareAllValues = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberSignature Language="VB.NET" Value="CompareAllValues" />
      <MemberSignature Language="C++ CLI" Value="CompareAllValues" />
      <MemberSignature Language="F#" Value="CompareAllValues = 1" Usage="System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Un controllo origine dati utilizza l'insieme <paramref name="oldValues" /> dei metodi <see langword="Update" /> e <see langword="Delete" /> per determinare se i dati sono stati modificati da un altro processo.</summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions OverwriteChanges = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberSignature Language="F#" Value="OverwriteChanges = 0" Usage="System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Un controllo origine dati sovrascrive tutti i valori in una riga di dati con i propri valori per la riga.</summary>
      </Docs>
    </Member>
  </Members>
</Type>