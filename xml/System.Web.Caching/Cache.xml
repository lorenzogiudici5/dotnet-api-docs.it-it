<Type Name="Cache" FullName="System.Web.Caching.Cache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="94f45042df80a508c4f3e5b8a5aa565736af422f" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51882767" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Cache : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cache extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.Cache" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cache&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cache sealed : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type Cache = class&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Implementa la cache per un'applicazione Web. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'istanza di questa classe viene creata per ogni dominio dell'applicazione e rimane valido fino a quando il dominio dell'applicazione rimane attivo. Informazioni su un'istanza di questa classe sono disponibile tramite il `Cache` proprietà del <xref:System.Web.HttpContext> oggetto o il `Cache` proprietà del <xref:System.Web.UI.Page> oggetto.  
  
> [!NOTE]
>  Il <xref:System.Web.Caching.Cache> classe non deve essere utilizzata all'esterno delle applicazioni ASP.NET. È stato progettato e testato per l'uso di ASP.NET per fornire la memorizzazione nella cache per le applicazioni Web. Per altri tipi di applicazioni, ad esempio le applicazioni console o Windows Form, usare il <xref:System.Runtime.Caching.ObjectCache> classe.  
  
   
  
## Examples  
 Nell'esempio seguente è una pagina in cui viene visualizzato il valore assegnato a un elemento nella cache e successivamente viene notificato quando l'elemento viene rimosso dalla cache. Crea una `RemovedCallback` metodo, che ha la firma del `CacheItemRemovedCallback` delegato, per notificare agli utenti quando viene rimosso l'elemento della cache e Usa il <xref:System.Web.Caching.CacheItemRemovedReason> enumerazione per indicare il motivo per cui è stata rimossa. Usa inoltre il <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> proprietà per aggiungere oggetti alla cache e recuperare il valore di tali oggetti. Nel `AddItemToCache` metodo, viene utilizzato il <xref:System.Web.Caching.Cache.Add%2A?displayProperty=nameWithType> metodo per aggiungere un elemento alla cache. Usare la `CacheItemRemovedCallback` delegato, è necessario aggiungere un elemento alla cache con questo metodo o il <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> metodo, in modo che che ASP.NET può apportare automaticamente il metodo appropriato viene chiamato quando l'elemento viene rimosso. Personalizzata `RemoveItemFromCache` metodo viene utilizzato il <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> metodo per eliminare in modo esplicito l'elemento dalla cache, causando la `RemovedCallback` metodo da richiamare.  
  
> [!NOTE]
>  L'istanza di Cache a cui accede il frammento di codice seguente è un membro del <xref:System.Web.UI.Page> oggetto che eredita in questo esempio.  
  
 [!code-aspx-csharp[System.Web.Caching Examples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#1)]
 [!code-aspx-vb[System.Web.Caching Examples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>Questo tipo è thread-safe.</threadsafe>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
    <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
    <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Caching.Cache" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Add(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Add(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; obj" Usage="cache.Add (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">Chiave di cache utilizzata per fare riferimento all'elemento.</param>
        <param name="value">Elemento da aggiungere alla cache.</param>
        <param name="dependencies">Dipendenze di file o chiave di cache per l'elemento. Al variare di una delle dipendenze, l'oggetto viene invalidato e rimosso dalla cache. In assenza di dipendenze, questo parametro contiene il valore <see langword="null" />.</param>
        <param name="absoluteExpiration">Ora in cui l'oggetto aggiunto scade e viene rimosso dalla cache. Se si usa la scadenza variabile, il parametro <c>absoluteExpiration</c> deve essere <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <param name="slidingExpiration">Intervallo di tempo tra l'ultimo accesso all'oggetto aggiunto e la sua scadenza. Se questo valore è pari a 20 minuti, l'oggetto scade e viene rimosso dalla cache 20 minuti dopo l'ultimo accesso. Se si usa la scadenza assoluta, il parametro <c>slidingExpiration</c> deve essere <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="priority">Costo relativo dell'oggetto, così come è espresso dall'enumerazione <see cref="T:System.Web.Caching.CacheItemPriority" />. La cache utilizza questo valore per la rimozione degli oggetti; gli oggetti con un impiego inferiore vengono rimossi dalla cache prima di quelli con un impiego superiore.</param>
        <param name="onRemoveCallback">Delegato che, se fornito, viene chiamato quando un oggetto viene rimosso dalla cache. Può essere utilizzato per notificare all'applicazione l'eliminazione dalla cache dei relativi oggetti.</param>
        <summary>Aggiunge l'elemento specificato all'oggetto <see cref="T:System.Web.Caching.Cache" /> con dipendenze e criteri di scadenza e priorità, nonché un delegato da utilizzare per notificare all'applicazione la rimozione dell'elemento inserito dalla <see langword="Cache" />.</summary>
        <returns>Oggetto che rappresenta l'elemento che è stato aggiunto se l'elemento è stato memorizzato in precedenza nella cache. In caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamate a questo metodo avrà esito negativo se un elemento con lo stesso `key` parametro è già archiviato nel `Cache`. Per sovrascrivere un oggetto esistente `Cache` elemento usando la stessa `key` parametro, usare il <xref:System.Web.Caching.Cache.Insert%2A> (metodo).  
  
 Non è possibile impostare il `absoluteExpiration` e `slidingExpiration` parametri. Se si prevede che l'elemento della cache scada in un momento specifico, è impostato il `absoluteExpiration` parametro per il momento specifico e il `slidingExpiration` parametro per <xref:System.Web.Caching.Cache.NoSlidingExpiration>.  
  
 Se si desidera che l'elemento della cache scada dopo un determinato periodo di tempo trascorso dall'ultimo accesso all'elemento, impostare il `slidingExpiration` parametro per l'intervallo di scadenza e il `absoluteExpiration` parametro per <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 L'esempio seguente crea un `AddItemToCache` (metodo). Quando questo metodo viene chiamato, viene impostata un' `itemRemoved` proprietà `false` e registra un `onRemove` metodo con una nuova istanza del <xref:System.Web.Caching.CacheItemRemovedCallback> delegare. Viene utilizzata la firma del delegato di `RemovedCallback` (metodo). Il `AddItemToCache` metodo controlla quindi il valore associato di `Key1` chiave nella cache. Se il valore è `null`, il `Add` metodo inserisce un elemento nella cache con una chiave di `Key1`, un valore di `Value 1`, una scadenza assoluta di 60 secondi e una priorità elevata della cache. Usa inoltre il `onRemove` metodo come argomento. In questo modo il `RemovedCallback` metodo da chiamare quando questo elemento viene rimosso dalla cache.  
  
> [!NOTE]
>  Per esempi di come usare il <xref:System.Web.Caching.CacheDependency> classe e il <xref:System.Web.Caching.CacheItemRemovedCallback> delegato, vedere [Caching Application Data](https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)).  
  
 [!code-csharp[System.Web.Caching Examples#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#3)]
 [!code-vb[System.Web.Caching Examples#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="key" /> oppure <paramref name="value" /> viene impostato su <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="slidingExpiration" /> viene impostato su un valore inferiore a <see langword="TimeSpan.Zero" /> o superiore a un anno.</exception>
        <exception cref="T:System.ArgumentException">Entrambi i parametri <paramref name="absoluteExpiration" /> e <paramref name="slidingExpiration" /> vengono impostati per l'elemento che si tenta di aggiungere a <see langword="Cache" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.Caching.Cache.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di elementi archiviati nella cache.</summary>
        <value>Numero di elementi archiviati nella cache.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà può essere utile durante il monitoraggio delle prestazioni dell'applicazione o quando si usa la funzionalità di traccia ASP.NET.  
  
   
  
## Examples  
 L'esempio seguente ottiene il valore del `Count` proprietà, lo converte in una stringa e assegna la stringa per il <xref:System.Web.UI.WebControls.Label.Text%2A> proprietà di un <xref:System.Web.UI.WebControls.Label> controllo del server, Web `Label1`.  
  
 [!code-csharp[System.Web.Caching.Cache.Count#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/CS/cachecountcs.aspx#1)]
 [!code-vb[System.Web.Caching.Cache.Count#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/VB/cachecountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectivePercentagePhysicalMemoryLimit">
      <MemberSignature Language="C#" Value="public long EffectivePercentagePhysicalMemoryLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePercentagePhysicalMemoryLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePercentagePhysicalMemoryLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePercentagePhysicalMemoryLimit : int64" Usage="System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la percentuale di memoria fisica utilizzabile da un'applicazione prima che ASP.NET avvii la rimozione di elementi dalla cache.</summary>
        <value>Percentuale di memoria fisica disponibile per l'applicazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> proprietà restituisce la percentuale di memoria fisica disponibile per l'applicazione. Quando la percentuale disponibile diventa bassa, l'algoritmo di cache avvia la rimozione di elementi dalla cache.  
  
 Il <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> può essere impostata con il `percentagePhysicalMemoryUsedLimit` attributo delle [elemento cache per caching (Schema delle impostazioni ASP.NET)](https://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299) elemento nel file di configurazione dell'applicazione. Se il `percentagePhysicalMemoryUsedLimit` attributo non è impostato, l'algoritmo di cache determina le dimensioni massime della cache e il <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> proprietà venga calcolata.  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> è stato introdotto in .NET Framework versione 3.5.  Per altre informazioni, vedere [Versioni e dipendenze](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      </Docs>
    </Member>
    <Member MemberName="EffectivePrivateBytesLimit">
      <MemberSignature Language="C#" Value="public long EffectivePrivateBytesLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePrivateBytesLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePrivateBytesLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePrivateBytesLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePrivateBytesLimit : int64" Usage="System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di byte disponibili per la cache.</summary>
        <value>Numero di byte disponibili per la cache.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> proprietà restituisce il numero di byte che può essere utilizzato dal processo di applicazione. Una volta raggiunto questo limite, l'algoritmo di cache inizia in modo aggressivo lo scavenging la cache.  
  
 Il <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> può essere impostata con il `privateBytesLimit` attributo delle [elemento cache per caching (Schema delle impostazioni ASP.NET)](https://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299) elemento nel file di configurazione dell'applicazione. Quando la `privateBytesLimit` attributo non è impostato, l'algoritmo di cache determina le dimensioni massime della cache e il <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> proprietà contiene la dimensione scelta dall'algoritmo.  
  
   
  
## Examples  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; obj" Usage="cache.Get key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Identificatore per la voce di cache da recuperare.</param>
        <summary>Recupera l'elemento specificato dall'oggetto <see cref="T:System.Web.Caching.Cache" />.</summary>
        <returns>Elemento della cache recuperato oppure <see langword="null" /> se è impossibile trovare la chiave.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come recuperare il valore memorizzato nella cache per un controllo ASP.NET server casella di testo.  
  
 [!code-csharp[Classic Cache.Get Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Get Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="cache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera un enumeratore di dizionari usato per scorrere le impostazioni delle chiavi e i relativi valori contenuti nella cache.</summary>
        <returns>Enumeratore per scorrere l'oggetto <see cref="T:System.Web.Caching.Cache" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gli elementi possono essere aggiunto a o rimosso dalla cache anche se questo metodo esegue l'enumerazione degli elementi.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Collections.IDictionaryEnumerator> oggetto `CacheEnum`, usando il `GetEnumerator` (metodo). L'enumeratore passa attraverso la cache, converte il valore di ogni elemento memorizzato nella cache in una stringa e quindi scrive i valori in una pagina Web Form.  
  
 [!code-csharp[Cache.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Cache.GetEnumerator/CS/getenumcs.aspx#1)]
 [!code-vb[Cache.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Cache.GetEnumerator/VB/getenumvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inserisce un elemento nell'oggetto <see cref="T:System.Web.Caching.Cache" />. Utilizzare una delle versioni di questo metodo per sovrascrivere un elemento <see langword="Cache" /> esistente con lo stesso parametro <paramref name="key" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj -&gt; unit" Usage="cache.Insert (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">Chiave di cache utilizzata per fare riferimento all'elemento.</param>
        <param name="value">Oggetto da inserire nella cache.</param>
        <summary>Inserisce un elemento nell'oggetto <see cref="T:System.Web.Caching.Cache" /> con una chiave di cache per fare riferimento alla relativa posizione, utilizzando i valori predefiniti forniti dall'enumerazione <see cref="T:System.Web.Caching.CacheItemPriority" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di sovrascrivere un elemento della cache esistente la cui chiave corrisponde il `key` parametro. L'oggetto aggiunto alla cache usando l'overload del `Insert` metodo viene inserito senza dipendenze di file o della cache, una priorità pari a <xref:System.Web.Caching.CacheItemPriority.Default>, un valore di scadenza scorrevole <xref:System.Web.Caching.Cache.NoSlidingExpiration>e un valore di scadenza assoluta della <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come inserire un elemento nella cache di un'applicazione.  
  
 [!code-csharp[Classic Cache.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="key" /> o il parametro <paramref name="value" /> è <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency -&gt; unit" Usage="cache.Insert (key, value, dependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="key">Chiave di cache utilizzata per identificare l'elemento.</param>
        <param name="value">Oggetto da inserire nella cache.</param>
        <param name="dependencies">Dipendenze di file o chiave di cache per l'oggetto inserito. Al variare di una delle dipendenze, l'oggetto viene invalidato e rimosso dalla cache. In assenza di dipendenze, questo parametro contiene il valore <see langword="null" />.</param>
        <summary>Inserisce un oggetto nella <see cref="T:System.Web.Caching.Cache" /> con dipendenze di file o chiave.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di sovrascrivere un elemento della cache esistente la cui chiave corrisponde il `key` parametro. L'oggetto aggiunto alla cache usando l'overload del `Insert` metodo viene inserito senza dipendenze di file o della cache, una priorità pari a <xref:System.Web.Caching.CacheItemPriority.Default>, un valore di scadenza scorrevole <xref:System.Web.Caching.Cache.NoSlidingExpiration>e un valore di scadenza assoluta della <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come inserire un elemento nella cache di un'applicazione con una dipendenza della cache in un file di configurazione XML.  
  
 [!code-csharp[Classic Cache.Insert1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="key" /> o il parametro <paramref name="value" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="key">Chiave di cache utilizzata per fare riferimento all'oggetto.</param>
        <param name="value">Oggetto da inserire nella cache.</param>
        <param name="dependencies">Dipendenze di file o chiave di cache per l'oggetto inserito. Al variare di una delle dipendenze, l'oggetto viene invalidato e rimosso dalla cache. In assenza di dipendenze, questo parametro contiene il valore <see langword="null" />.</param>
        <param name="absoluteExpiration">Ora in cui l'oggetto inserito scade e viene rimosso dalla cache. Per evitare possibili problemi con l'ora locale, ad esempio passaggi dall'ora solare all'ora legale, utilizzare la proprietà <see cref="P:System.DateTime.UtcNow" /> anziché <see cref="P:System.DateTime.Now" /> per questo valore di parametro. Se si usa la scadenza assoluta, il parametro <c>slidingExpiration</c> deve essere <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="slidingExpiration">Intervallo tra l'ora dell'ultimo accesso dell'oggetto inserito e l'ora di scadenza dell'oggetto. Se questo valore è pari a 20 minuti, l'oggetto scadrà e verrà rimosso dalla cache 20 minuti dopo l'ultimo accesso. Se si usa la scadenza variabile, il parametro <c>absoluteExpiration</c> deve essere <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <summary>Inserisce un oggetto nella <see cref="T:System.Web.Caching.Cache" /> con dipendenze e criteri di scadenza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo sovrascriverà sprovvisti `Cache` elementi con lo stesso `key` parametro.  
  
 Se il `slidingExpiration` parametro è impostato su <xref:System.Web.Caching.Cache.NoSlidingExpiration>, scadenza con scorrimento è disabilitato. Se si imposta il `slidingExpiration` parametro per maggiore <xref:System.TimeSpan.Zero>, il `absoluteExpiration` parametro è impostato su <xref:System.DateTime.Now%2A> oltre il valore contenuto nella `slidingExpiration` parametro. Se l'elemento viene richiesto dalla cache prima che la quantità di tempo specificato dal `absoluteExpiration` parametro, sarà possibile posizionare l'elemento nella cache anche in questo caso, e `absoluteExpiration` verrà nuovamente impostata su `DateTime.Now` oltre il valore contenuto nel `slidingExpiration` parametro. Se l'elemento non è richiesta dalla cache prima della data nel `absoluteExpiration` parametro, l'elemento viene rimosso dalla cache. . Viene inserito l'elemento aggiunto alla cache utilizza questo overload del metodo di inserimento con priorità <xref:System.Web.Caching.CacheItemPriority.Default>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come inserire un elemento nella cache di un'applicazione con una scadenza assoluta.  
  
> [!NOTE]
>  Poiché questa forma del `Insert` metodo supporta le dipendenze della cache, se l'elemento non ha alcuna dipendenza, è necessario dichiarare il `dependency` come parametro `null` (`Nothing` in Visual Basic) nell'elenco delimitato da virgole dei parametri.  
  
 [!code-csharp[Classic Cache.Insert2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#1)]  
  
 Nell'esempio seguente viene illustrato come inserire un elemento nella cache con una scadenza variabile.  
  
 [!code-csharp[Classic Cache.Insert2 Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.Insert2 Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="key" /> o il parametro <paramref name="value" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Viene impostato il parametro <paramref name="slidingExpiration" /> su un valore inferiore a <see langword="TimeSpan.Zero" /> o su un valore equivalente a più di un anno.</exception>
        <exception cref="T:System.ArgumentException">Entrambi i parametri <paramref name="absoluteExpiration" /> e <paramref name="slidingExpiration" /> vengono impostati per l'elemento che si tenta di aggiungere a <see langword="Cache" />.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemUpdateCallback onUpdateCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, class System.Web.Caching.CacheItemUpdateCallback onUpdateCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, onUpdateCallback As CacheItemUpdateCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemUpdateCallback ^ onUpdateCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemUpdateCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, onUpdateCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="onUpdateCallback" Type="System.Web.Caching.CacheItemUpdateCallback" />
      </Parameters>
      <Docs>
        <param name="key">Chiave di cache utilizzata per fare riferimento all'oggetto.</param>
        <param name="value">Oggetto da inserire nella cache.</param>
        <param name="dependencies">Dipendenze di file o chiave di cache per l'elemento. Al variare di una delle dipendenze, l'oggetto viene invalidato e rimosso dalla cache. In assenza di dipendenze, questo parametro contiene il valore <see langword="null" />.</param>
        <param name="absoluteExpiration">Ora in cui l'oggetto inserito scade e viene rimosso dalla cache. Per evitare possibili problemi con l'ora locale, ad esempio passaggi dall'ora solare all'ora legale, utilizzare la proprietà <see cref="P:System.DateTime.UtcNow" /> anziché <see cref="P:System.DateTime.Now" /> per questo valore di parametro. Se si usa la scadenza assoluta, il parametro <c>slidingExpiration</c> deve essere impostato su <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="slidingExpiration">Intervallo di tempo intercorso tra l'ultimo accesso all'oggetto memorizzato nella cache e la sua scadenza. Se questo valore è pari a 20 minuti, l'oggetto scadrà e verrà rimosso dalla cache 20 minuti dopo l'ultimo accesso. Se si usa la scadenza variabile, il parametro <c>absoluteExpiration</c> deve essere impostato su <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <param name="onUpdateCallback">Delegato che verrà chiamato prima che l'oggetto venga rimosso dalla cache. Può essere utilizzato per aggiornare l'elemento memorizzato nella cache e assicurarsi che non venga rimosso dalla stessa.</param>
        <summary>Inserisce un oggetto nell'oggetto <see cref="T:System.Web.Caching.Cache" />, insieme alle dipendenze, ai criteri di scadenza e a un delegato che è possibile utilizzare per inviare una notifica all'applicazione prima che l'elemento venga rimosso dalla cache.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Caching.Cache.Insert%2A> metodo consente di inserire un nuovo elemento nella cache e fornire un delegato che viene chiamato prima che l'elemento viene rimosso dalla cache. Nel delegato, è possibile aggiornare l'elemento memorizzato nella cache e impedire venga rimosso dalla cache.  
  
 Questo metodo sovrascriverà sprovvisti `Cache` elementi con lo stesso `key` parametro.  
  
 Non è possibile impostare il `absoluteExpiration` e `slidingExpiration` parametri. Se si prevede che l'elemento della cache scada in un momento specifico, è impostato il `absoluteExpiration` parametro per il momento specifico e il `slidingExpiration` parametro per <xref:System.Web.Caching.Cache.NoSlidingExpiration>.  
  
 Se si desidera che l'elemento della cache scada dopo un determinato periodo di tempo trascorso dall'elemento dell'ultimo accesso, si imposta la `slidingExpiration` parametro per l'intervallo di scadenza ed è impostato il `absoluteExpiration` parametro per <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="key" />, <paramref name="value" /> o <paramref name="onUpdateCallback" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Viene impostato il parametro <paramref name="slidingExpiration" /> su un valore inferiore a <see langword="TimeSpan.Zero" /> o su un valore equivalente a più di un anno.</exception>
        <exception cref="T:System.ArgumentException">Entrambi i parametri <paramref name="absoluteExpiration" /> e <paramref name="slidingExpiration" /> vengono impostati per l'elemento che si tenta di aggiungere a <see langword="Cache" />.  
  
oppure 
Il parametro <paramref name="dependencies" /> è <see langword="null" />, il parametro <paramref name="absoluteExpiration" /> è impostato su <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> e il parametro <paramref name="slidingExpiration" /> è impostato su <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheItemUpdateCallback" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">Chiave di cache utilizzata per fare riferimento all'oggetto.</param>
        <param name="value">Oggetto da inserire nella cache.</param>
        <param name="dependencies">Dipendenze di file o chiave di cache per l'elemento. Al variare di una delle dipendenze, l'oggetto viene invalidato e rimosso dalla cache. In assenza di dipendenze, questo parametro contiene il valore <see langword="null" />.</param>
        <param name="absoluteExpiration">Ora in cui l'oggetto inserito scade e viene rimosso dalla cache. Per evitare possibili problemi con l'ora locale, ad esempio passaggi dall'ora solare all'ora legale, utilizzare la proprietà <see cref="P:System.DateTime.UtcNow" /> anziché <see cref="P:System.DateTime.Now" /> per questo valore di parametro. Se si usa la scadenza assoluta, il parametro <c>slidingExpiration</c> deve essere <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="slidingExpiration">Intervallo di tempo tra l'ultimo accesso all'oggetto inserito e la sua scadenza. Se questo valore è pari a 20 minuti, l'oggetto scadrà e verrà rimosso dalla cache 20 minuti dopo l'ultimo accesso. Se si usa la scadenza variabile, il parametro <c>absoluteExpiration</c> deve essere <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <param name="priority">Costo dell'oggetto in relazione agli altri elementi memorizzati nella cache, come è espresso nell'enumerazione <see cref="T:System.Web.Caching.CacheItemPriority" />. La cache utilizza questo valore per la rimozione degli oggetti; gli oggetti con un impiego inferiore vengono rimossi dalla cache prima di quelli con un impiego superiore.</param>
        <param name="onRemoveCallback">Delegato che, se fornito, verrà chiamato quando un oggetto è rimosso dalla cache. Può essere utilizzato per notificare all'applicazione l'eliminazione dalla cache dei relativi oggetti.</param>
        <summary>Inserisce un oggetto nell'oggetto <see cref="T:System.Web.Caching.Cache" /> con dipendenze e criteri di scadenza e priorità, nonché un delegato da utilizzare per notificare all'applicazione quando l'elemento inserito viene rimosso dalla <see langword="Cache" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo sovrascriverà sprovvisti `Cache` elementi con lo stesso `key` parametro.  
  
 Non è possibile impostare il `absoluteExpiration` e `slidingExpiration` parametri. Se si prevede che l'elemento della cache scada in un momento specifico, è impostato il `absoluteExpiration` parametro per il momento specifico e il `slidingExpiration` parametro per <xref:System.Web.Caching.Cache.NoSlidingExpiration>.  
  
 Se si desidera che l'elemento della cache scada dopo un determinato periodo di tempo trascorso dall'ultimo accesso all'elemento, impostare il `slidingExpiration` parametro per l'intervallo di scadenza e il `absoluteExpiration` parametro per <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 L'esempio seguente illustra come assegnare una priorità elevata elemento quando si inserisce l'applicazione `Cache` oggetto.  
  
> [!NOTE]
>  Per altre informazioni su come usare questo metodo con il <xref:System.Web.Caching.CacheItemRemovedCallback> delegato, vedere [procedura: notificare a un'applicazione quando un elemento viene rimosso dalla Cache](https://msdn.microsoft.com/library/38c33aa0-afe9-40ba-a1a4-1ebab95286ef).  
  
 [!code-csharp[Classic Cache.Insert3 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert3 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="key" /> o il parametro <paramref name="value" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Viene impostato il parametro <paramref name="slidingExpiration" /> su un valore inferiore a <see langword="TimeSpan.Zero" /> o su un valore equivalente a più di un anno.</exception>
        <exception cref="T:System.ArgumentException">Entrambi i parametri <paramref name="absoluteExpiration" /> e <paramref name="slidingExpiration" /> vengono impostati per l'elemento che si tenta di aggiungere a <see langword="Cache" />.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.Caching.Cache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Oggetto <see cref="T:System.String" /> che rappresenta la chiave per un elemento nella cache.</param>
        <summary>Recupera o imposta la voce di cache nella chiave specificata.</summary>
        <value>Voce di cache specificata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare questa proprietà per recuperare il valore di un elemento della cache specificato o per aggiungere un elemento e una chiave per tale cache. Aggiunta di un'elemento della cache utilizzando la <xref:System.Web.Caching.Cache.Item%2A> proprietà è equivalente alla chiamata di <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> (metodo).  
  
   
  
## Examples  
 L'esempio seguente usa il `Item` proprietà per recuperare il valore di un oggetto memorizzato nella cache associato il `Key1` chiave. Usa quindi il <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType> metodo per scrivere il valore e testo introduttivo e l'elemento HTML di B in una pagina Web Form.  
  
 [!code-csharp[System.Web.Caching Examples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#5)]
 [!code-vb[System.Web.Caching Examples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#5)]  
  
 Nell'esempio seguente illustra l'uso di questa proprietà per inserire il valore di una casella di testo nella cache.  
  
 [!code-csharp[Classic Cache.this Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.this Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.this Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.this Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName="NoAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime NoAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoAbsoluteExpiration As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoAbsoluteExpiration : DateTime" Usage="System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Viene utilizzato nel parametro <paramref name="absoluteExpiration" /> in una chiamata al metodo <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> per indicare che è necessario che l'elemento non abbia alcuna scadenza. Questo campo è di sola lettura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando usato, questo campo consente di impostare il `absoluteExpiration` uguale al parametro <xref:System.DateTime.MaxValue>, che è una costante che rappresenta il più grande possibile `DateTime` valore, 12/31/9999 11:59:59 PM.  
  
   
  
## Examples  
 L'esempio seguente illustra come usare il `NoAbsoluteExpiration` per disabilitare le scadenze assolute durante l'inserimento di un elemento nel campo di `Cache`.  
  
 [!code-csharp[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Utilizzato come parametro <paramref name="slidingExpiration" /> in una chiamata al metodo <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> o <see cref="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" /> per disabilitare le scadenze variabili. Questo campo è di sola lettura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando usato, questo campo consente di impostare il `slidingExpiration` parametro per il <xref:System.TimeSpan.Zero?displayProperty=nameWithType> campo, che ha un valore costante pari a zero. L'elemento memorizzato nella cache scade in base al `absoluteExpiration` parametro associato ai `Insert` o `Add` chiamata al metodo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il metodo Insert per aggiungere un elemento per il <xref:System.Web.Caching.Cache> utilizzando il `NoSlidingExpiration` campo.  
  
 [!code-csharp[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.TimeSpan.Zero" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public object Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; obj" Usage="cache.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Identificatore <see cref="T:System.String" /> per l'elemento della cache da rimuovere.</param>
        <summary>Rimuove l'elemento specificato dall'oggetto <see cref="T:System.Web.Caching.Cache" /> dell'applicazione.</summary>
        <returns>L'elemento viene rimosso dalla <see langword="Cache" />. Se non viene trovato il valore del parametro chiave, verrà restituito <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente crea un `RemoveItemFromCache` (metodo). Quando questo metodo viene chiamato, Usa la <xref:System.Web.Caching.Cache.Item%2A> proprietà per controllare se la cache contiene un oggetto che è associato un `Key1` valore della chiave. In caso affermativo, il `Remove` viene chiamato per rimuovere l'oggetto.  
  
 [!code-csharp[System.Web.Caching Examples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#4)]
 [!code-vb[System.Web.Caching Examples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un enumeratore che può scorrere l'insieme dell'oggetto <see cref="T:System.Web.Caching.Cache" />.</summary>
        <returns>Enumeratore che può scorrere l'insieme dell'oggetto <see cref="T:System.Web.Caching.Cache" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>