<Type Name="CacheDependency" FullName="System.Web.Caching.CacheDependency">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1cbdbf27513441246c62aeabdc24ab032a7e544" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46691620" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CacheDependency : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CacheDependency extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.CacheDependency" />
  <TypeSignature Language="VB.NET" Value="Public Class CacheDependency&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheDependency : IDisposable" />
  <TypeSignature Language="F#" Value="type CacheDependency = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stabilisce una relazione di dipendenza tra un elemento archiviato in un oggetto <see cref="T:System.Web.Caching.Cache" /> di un'applicazione ASP.NET e un file, una chiave di cache, una matrice di file o di chiavi di cache o un altro oggetto <see cref="T:System.Web.Caching.CacheDependency" />. La classe <see cref="T:System.Web.Caching.CacheDependency" /> consente di monitorare le relazioni di dipendenza in modo che, quando una relazione viene modificata, l'elemento memorizzato nella cache venga automaticamente rimosso.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si aggiunge un elemento nella cache dipendente da un altro oggetto, ad esempio un file o una matrice di file, l'elemento dipendente viene automaticamente rimosso dalla cache quando viene modificato l'oggetto. Si supponga, ad esempio, creare un <xref:System.Data.DataSet> oggetto basati sui dati in un file XML. È possibile aggiungere il <xref:System.Data.DataSet> alla cache con un <xref:System.Web.Caching.CacheDependency> oggetto che rende il <xref:System.Data.DataSet> dipende dal file XML. Se il file XML viene modificato, il <xref:System.Data.DataSet> viene rimosso dalla cache.  
  
 È possibile aggiungere elementi con dipendenze da memorizzare nella cache dell'applicazione con il <xref:System.Web.Caching.Cache.Add%2A> e <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> metodi. Non è possibile usare il <xref:System.Web.Caching.Cache.Item%2A> proprietà per aggiungere elementi alla cache con le dipendenze.  
  
 Per impostare una dipendenza, si crea un'istanza del <xref:System.Web.Caching.CacheDependency> classe, che specifica il file, chiavi o le directory in cui l'elemento è dipendente, e quindi passare la dipendenza per il <xref:System.Web.Caching.Cache.Add%2A> o <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> (metodo). Il <xref:System.Web.Caching.CacheDependency> istanza può rappresentare un singolo file o directory, una matrice di file o directory o una matrice di file o directory insieme a una matrice delle chiavi della cache (rappresentano altri elementi archiviati nel <xref:System.Web.Caching.Cache> oggetto).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.Caching.CacheDependency.HasChanged%2A> proprietà per determinare se un <xref:System.Web.Caching.CacheDependency> modificati dopo la richiesta precedente per un elemento nel <xref:System.Web.Caching.Cache>. Il `dt` valore passato il `start` parametro è impostato su <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Caching.Cache" />
    <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
    <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CacheDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CacheDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si vuole derivare la propria classe dal <xref:System.Web.Caching.CacheDependency>, questa versione di implementare il <xref:System.Web.Caching.CacheDependency.%23ctor%2A> costruttore.  
  
   
  
## Examples  
 L'esempio di codice seguente è una classe che implementa questa versione del <xref:System.Web.Caching.CacheDependency> costruttore come tutte le classi che derivano da <xref:System.Web.Caching.CacheDependency> necessario.  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Percorso di un file o di una directory da cui dipende l'oggetto memorizzato nella cache. Quando questa risorsa viene modificata, l'oggetto memorizzato nella cache diviene obsoleto e viene rimosso.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Caching.CacheDependency" /> che verifica la presenza di modifiche in un file o in una directory.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la directory o il file specificato nel `filename` parametro non viene trovato nel file system, verrà considerato come mancanti. Se la directory o file non è presente quando l'oggetto con la dipendenza viene aggiunto per il <xref:System.Web.Caching.Cache>, l'oggetto memorizzato nella cache verrà rimosso dal <xref:System.Web.Caching.Cache> quando viene creata la directory o file.  
  
 Ad esempio, si supponga che si aggiunge un oggetto per il <xref:System.Web.Caching.Cache> con una dipendenza dal seguente percorso di file: c:\stocks\xyz.dat. Se tale file non viene trovato quando la <xref:System.Web.Caching.CacheDependency> oggetto viene creato, ma viene creato in un secondo momento, l'oggetto memorizzato nella cache viene rimosso dopo la creazione del file xyz.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un'istanza del <xref:System.Web.Caching.CacheDependency> classe con una dipendenza da un file XML. Il <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> metodo aggiunge quindi un elemento per il <xref:System.Web.Caching.Cache> che è dipendente da tale file.  
  
 [!code-csharp[Classic CacheDependency.CacheDependency Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CacheDependency.CacheDependency Example/CS/source.cs#1)]
 [!code-vb[Classic CacheDependency.CacheDependency Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CacheDependency.CacheDependency Example/VB/source.vb#1)]  
  
 È anche possibile usare la tecnica seguente per aggiungere un elemento per il <xref:System.Web.Caching.Cache> con una dipendenza in un file.  
  
 [!code-csharp[Single File Dependency Cache entry#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Single File Dependency Cache entry/CS/DependencySingleFilecs.aspx#1)]
 [!code-vb[Single File Dependency Cache entry#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Single File Dependency Cache entry/VB/DependencySingleFilevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency filenames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames">Matrice di percorsi di file o directory da cui dipende l'oggetto memorizzato nella cache. Quando una di queste risorse viene modificata, l'oggetto memorizzato nella cache diviene obsoleto e viene rimosso.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Caching.CacheDependency" /> che verifica la presenza di modifiche in una matrice di percorsi di file o directory.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il file o directory nella matrice viene modificato o viene rimosso dalla matrice, l'elemento memorizzato nella cache diviene obsoleto e viene rimosso dall'oggetto dell'applicazione <xref:System.Web.Caching.Cache> oggetto.  
  
 Inoltre, se una qualsiasi delle directory o file specificati nella `filenames` parametro non viene trovato nel file system, viene considerata come mancante. Se manca una directory o file quando l'oggetto con la dipendenza viene aggiunto per il <xref:System.Web.Caching.Cache>, l'oggetto memorizzato nella cache verrà rimosso dal <xref:System.Web.Caching.Cache> quando viene creato la directory o il file.  
  
 Ad esempio, si supponga che si aggiunge un oggetto per il <xref:System.Web.Caching.Cache> con una dipendenza dal seguente percorso di file: c:\stocks\xyz.dat. Se tale file non viene trovato quando la <xref:System.Web.Caching.CacheDependency> oggetto viene creato, ma viene creato in un secondo momento, l'oggetto memorizzato nella cache viene rimosso dopo la creazione del file xyz.  
  
> [!NOTE]
>  Quando si crea la matrice che contiene le dipendenze del file, è necessario definire il numero di file che l'elemento per aggiungere il <xref:System.Web.Caching.Cache> dipende.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> metodo a cui aggiungere un elemento di <xref:System.Web.Caching.Cache> con dipendenze da una matrice di file. È inoltre possibile rendere l'elemento dipende da una matrice di directory.  
  
 [!code-csharp[Multiple file based dependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Multiple file based dependency/CS/DependencyMultiFilecs.aspx#1)]
 [!code-vb[Multiple file based dependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Multiple file based dependency/VB/DependencyMultiFilevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string filename, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(System::String ^ filename, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filename, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filename">Percorso di un file o di una directory da cui dipende l'oggetto memorizzato nella cache. Quando questa risorsa viene modificata, l'oggetto memorizzato nella cache diviene obsoleto e viene rimosso.</param>
        <param name="start">Ora rispetto alla quale verificare la data dell'ultima modifica apportata alla directory o al file.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Caching.CacheDependency" /> che verifica la presenza di modifiche in un file o in una directory.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la directory o il file specificato nel `filename` parametro non viene trovato nel file system, verrà considerato come mancanti. Se la directory o file non è presente quando l'oggetto con la dipendenza viene aggiunto per il <xref:System.Web.Caching.Cache>, l'oggetto memorizzato nella cache verrà rimosso dal <xref:System.Web.Caching.Cache> quando viene creata la directory o file.  
  
 Ad esempio, si supponga che si aggiunge un oggetto per il <xref:System.Web.Caching.Cache> con una dipendenza dal seguente percorso di file: c:\stocks\xyz.dat. Se tale file non viene trovato quando la <xref:System.Web.Caching.CacheDependency> oggetto viene creato, ma viene creato in un secondo momento, l'oggetto memorizzato nella cache viene rimosso dopo la creazione del file xyz.  
  
> [!NOTE]
>  Rilevamento delle modifiche inizia immediatamente e non dipende direttamente il `start` parametro. Usare la `start` per passare una data e ora nel passato in cui si desidera controllare l'ultima data della directory o il file passato nel parametro il `filename` parametro. Se l'ultima data è successiva alla data e ora impostati passati i `start` parametro, l'elemento memorizzato nella cache viene rimosso dal <xref:System.Web.Caching.Cache>.  
  
   
  
## Examples  
 Esempio di codice seguente utilizza questo costruttore per creare un'istanza di un <xref:System.Web.Caching.CacheDependency> dell'oggetto, quindi inserisce un elemento nel <xref:System.Web.Caching.Cache> con tale dipendenza. Il `dt` valore passato il `start` parametro è impostato su <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">Matrice di percorsi di file o directory da cui dipende l'oggetto memorizzato nella cache. Quando una di queste risorse viene modificata, l'oggetto memorizzato nella cache diviene obsoleto e viene rimosso.</param>
        <param name="start">Ora rispetto alla quale verificare la data dell'ultima modifica apportata agli oggetti nella matrice.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Caching.CacheDependency" /> che verifica la presenza di modifiche in una matrice di percorsi di file o directory e specifica un orario di inizio della verifica delle modifiche.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se una qualsiasi delle directory o file specificati nella `filenames` parametro non viene trovato nel file system, viene considerata come mancante. Se manca una directory o file quando l'oggetto con la dipendenza viene aggiunto per il <xref:System.Web.Caching.Cache>, l'oggetto memorizzato nella cache verrà rimosso dal <xref:System.Web.Caching.Cache> quando viene creato la directory o il file.  
  
 Ad esempio, si supponga che si aggiunge un oggetto per il <xref:System.Web.Caching.Cache> con una dipendenza dal seguente percorso di file: c:\stocks\xyz.dat. Se tale file non viene trovato quando la <xref:System.Web.Caching.CacheDependency> oggetto viene creato, ma viene creato in un secondo momento, l'oggetto memorizzato nella cache viene rimosso dopo la creazione del file xyz.  
  
> [!NOTE]
>  Rilevamento delle modifiche inizia immediatamente e non dipende direttamente il `start` parametro. Usare la `start` parametro per passare una data e ora nel passato in cui si desidera controllare la data ultima modifica della matrice passato nel `filenames` parametro. Se l'ultima data di qualsiasi oggetto nella matrice è successiva alla data e set temporale passata il `start` parametro, l'elemento memorizzato nella cache viene rimosso dal <xref:System.Web.Caching.Cache>.  
  
   
  
## Examples  
 L'esempio di codice seguente crea una <xref:System.Web.Caching.CacheDependency> oggetto che passa due file XML e una <xref:System.DateTime.Now%2A?displayProperty=nameWithType> valore quando l'oggetto è incluso come argomento un parametro in un <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> chiamata al metodo.  
  
 [!code-csharp[CacheDependency Constructor4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor4/CS/depmultifilestimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor4/VB/depmultifilestimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames">Matrice di percorsi di file o directory da cui dipende l'oggetto memorizzato nella cache. Quando una di queste risorse viene modificata, l'oggetto memorizzato nella cache diviene obsoleto e viene rimosso.</param>
        <param name="cachekeys">Matrice di chiavi della cache in cui il nuovo oggetto verifica la presenza di modifiche. Quando una di queste chiavi della cache viene modificata, l'oggetto memorizzato nella cache associato a questo oggetto di dipendenza diviene obsoleto e viene rimosso dalla cache.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Caching.CacheDependency" /> che verifica la presenza di modifiche in una matrice di percorsi di file o directory e/o in una matrice di chiavi di cache.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inoltre, se una qualsiasi delle directory o file specificati nella `filenames` parametro non viene trovato nel file system, viene considerata come mancante. Se manca una directory o file quando l'oggetto con la dipendenza viene aggiunto per il <xref:System.Web.Caching.Cache>, l'oggetto memorizzato nella cache verrà rimosso dal <xref:System.Web.Caching.Cache> quando viene creato la directory o il file.  
  
 Ad esempio, si supponga che si aggiunge un oggetto per il <xref:System.Web.Caching.Cache> con una dipendenza dal seguente percorso di file: c:\stocks\xyz.dat. Se tale file non viene trovato quando la <xref:System.Web.Caching.CacheDependency> oggetto viene creato, ma viene creato in un secondo momento, l'oggetto memorizzato nella cache viene rimosso dopo la creazione del file xyz.  
  
 Tuttavia, il `cachekeys` dipendenza non funziona allo stesso modo. Se almeno un valore nel `cachekeys` parametro non esiste al momento di un'operazione di inserimento, l'inserimento ha esito negativo. Si noti che nessuna eccezione generata per questo scenario.  
  
## Examples  
 Il frammento di codice seguente viene illustrato come inserire un elemento all'interno dell'applicazione <xref:System.Web.Caching.Cache> con una dipendenza su una chiave a un altro elemento memorizzato nella cache. Poiché questo metodo Usa la sintassi della matrice, è necessario definire il numero di chiavi in cui l'elemento per aggiungere il <xref:System.Web.Caching.Cache> è dipendente.  
  
 [!code-csharp[Key based dependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Key based dependency/CS/DependencyKeycs.aspx#1)]
 [!code-vb[Key based dependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Key based dependency/VB/DependencyKeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">Matrice di percorsi di file o directory da cui dipende l'oggetto memorizzato nella cache. Quando una di queste risorse viene modificata, l'oggetto memorizzato nella cache diviene obsoleto e viene rimosso.</param>
        <param name="cachekeys">Matrice di chiavi della cache in cui il nuovo oggetto verifica la presenza di modifiche. Quando una di queste chiavi della cache viene modificata, l'oggetto memorizzato nella cache associato a questo oggetto di dipendenza diviene obsoleto e viene rimosso dalla cache.</param>
        <param name="start">Data e ora per verificare la data dell'ultima modifica apportata agli oggetti passati nelle matrici <c>filenames</c> e <c>cachekeys</c>.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Caching.CacheDependency" /> che verifica la presenza di modifiche in una matrice di percorsi di file o directory e/o in una matrice di chiavi di cache.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inoltre, se una qualsiasi delle directory o file specificati nella `filenames` parametro non viene trovato nel file system, viene considerata come mancante. Se manca una directory o file quando l'oggetto con la dipendenza viene aggiunto per il <xref:System.Web.Caching.Cache>, l'oggetto memorizzato nella cache verrà rimosso dal <xref:System.Web.Caching.Cache> quando viene creato la directory o il file.  
  
 Ad esempio, si supponga che si aggiunge un oggetto per il <xref:System.Web.Caching.Cache> con una dipendenza dal seguente percorso di file: c:\stocks\xyz.dat. Se tale file non viene trovato quando la <xref:System.Web.Caching.CacheDependency> oggetto viene creato, ma viene creato in un secondo momento, l'oggetto memorizzato nella cache viene rimosso dopo la creazione del file xyz.  
  
 Tuttavia, il `cachekeys` dipendenza non funziona allo stesso modo. Se almeno un valore nel `cachekeys` parametro non esiste al momento di un'operazione di inserimento, l'inserimento ha esito negativo. Si noti che nessuna eccezione generata per questo scenario.

> [!NOTE]
>  Rilevamento delle modifiche inizia immediatamente e non dipende direttamente il `start` parametro. Usare la `start` parametro per passare una data e ora nel passato in cui si desidera controllare la data ultima modifica di qualsiasi oggetto passato nel `filenames` o `cachekeys` parametri. Se l'ultima data di uno di questi oggetti è successiva alla data e ora impostati passata al `start` parametro, l'elemento memorizzato nella cache viene rimosso dal <xref:System.Web.Caching.Cache>.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un `CreateDependency` (metodo). Quando questo metodo viene chiamato, viene creato un <xref:System.DateTime> oggetto e il <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> proprietà viene utilizzata per aggiungere un elemento alla cache con un `key` parametro `key1` e il valore `Value 1`. Una matrice di stringhe `dependencyKey`, viene quindi creata con il valore di `key1` anche. Ciò <xref:System.Web.Caching.CacheDependency> costruttore crea quindi un'istanza una <xref:System.Web.Caching.CacheDependency> oggetto che passa `dependencyKey` e il <xref:System.DateTime> oggetto come argomenti dei parametri. Il <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> metodo viene chiamato, utilizzando il <xref:System.Web.Caching.CacheDependency> oggetto come parametro. In questo modo l'oggetto aggiunto alla cache usando il <xref:System.Web.Caching.Cache.Insert%2A> metodo dipende il `key1` chiave.  
  
 [!code-csharp[CacheDependency Constructor6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor6/CS/depkeytimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor6/VB/depkeytimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, class System.Web.Caching.CacheDependency dependency) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), dependency As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, System::Web::Caching::CacheDependency ^ dependency);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * System.Web.Caching.CacheDependency -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, dependency)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="filenames">Matrice di percorsi di file o directory da cui dipende l'oggetto memorizzato nella cache. Quando una di queste risorse viene modificata, l'oggetto memorizzato nella cache diviene obsoleto e viene rimosso.</param>
        <param name="cachekeys">Matrice di chiavi della cache in cui il nuovo oggetto verifica la presenza di modifiche. Quando una di queste chiavi della cache viene modificata, l'oggetto memorizzato nella cache associato a questo oggetto di dipendenza diviene obsoleto e viene rimosso dalla cache.</param>
        <param name="dependency">Altra istanza della classe <see cref="T:System.Web.Caching.CacheDependency" /> da cui dipende questa istanza.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Caching.CacheDependency" /> che verifica la presenza di modifiche in una matrice di percorsi di file o directory e/o in una matrice di chiavi di cache. Si rende inoltre dipendente da un'istanza separata della classe <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inoltre, se una qualsiasi delle directory o file specificati nella `filenames` parametro non viene trovato nel file system, viene considerata come mancante. Se manca una directory o file quando l'oggetto con la dipendenza viene aggiunto per il <xref:System.Web.Caching.Cache>, l'oggetto memorizzato nella cache verrà rimosso dal <xref:System.Web.Caching.Cache> quando viene creato la directory o il file.  
  
 Ad esempio, si supponga che si aggiunge un oggetto per il <xref:System.Web.Caching.Cache> con una dipendenza dal seguente percorso di file: c:\stocks\xyz.dat. Se tale file non viene trovato quando la <xref:System.Web.Caching.CacheDependency> oggetto viene creato, ma viene creato in un secondo momento, l'oggetto memorizzato nella cache viene rimosso dopo la creazione del file xyz.  
  
 Tuttavia, il `cachekeys` dipendenza non funziona allo stesso modo. Se almeno un valore nel `cachekeys` parametro non esiste al momento di un'operazione di inserimento, l'inserimento ha esito negativo. Si noti che nessuna eccezione generata per questo scenario.
  
## Examples  
 L'esempio di codice seguente crea un `CreateDependency` (metodo). Quando questo metodo viene chiamato, Usa la <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> proprietà per aggiungere un elemento alla cache con un `key` del parametro `key1` e il valore `Value 1`. Una matrice di stringhe `dependencyKey`, viene quindi creata con il valore di `key1` anche. Il <xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType> costruttore viene utilizzato per creare un <xref:System.Web.Caching.CacheDependency> oggetto `dep1`, che passano `dependencyKey` come argomento del parametro. Una seconda <xref:System.Web.Caching.CacheDependency> oggetto `dep2`, viene creata utilizzando questo costruttore, con `dep1` passata come terzo argomento di parametro. Questa dipendenza secondo dipende dal primo. Il <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> metodo viene chiamato, utilizzando la seconda <xref:System.Web.Caching.CacheDependency> oggetto come parametro. Se la prima dipendenza viene modificato in alcun modo, l'elemento memorizzato nella cache verrà invalidato.  
  
 [!code-csharp[CacheDependency Constructor7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor7/CS/dependencycs.aspx#1)]
 [!code-vb[CacheDependency Constructor7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor7/VB/dependencyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, class System.Web.Caching.CacheDependency dependency, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), dependency As CacheDependency, start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, System::Web::Caching::CacheDependency ^ dependency, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * System.Web.Caching.CacheDependency * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, dependency, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">Matrice di percorsi di file o directory da cui dipende l'oggetto memorizzato nella cache. Quando una di queste risorse viene modificata, l'oggetto memorizzato nella cache diviene obsoleto e viene rimosso.</param>
        <param name="cachekeys">Matrice di chiavi della cache in cui il nuovo oggetto verifica la presenza di modifiche. Quando una di queste chiavi della cache viene modificata, l'oggetto memorizzato nella cache associato a questo oggetto di dipendenza diviene obsoleto e viene rimosso dalla cache.</param>
        <param name="dependency">Altra istanza della classe <see cref="T:System.Web.Caching.CacheDependency" /> da cui dipende questa istanza.</param>
        <param name="start">Ora per verificare la data dell'ultima modifica apportata agli oggetti nelle matrici e oggetto <see cref="T:System.Web.Caching.CacheDependency" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Caching.CacheDependency" /> che verifica la presenza di modifiche in una matrice di percorsi di file o directory e/o in una matrice di chiavi di cache. Si rende inoltre dipendente da un'altra istanza della classe <see cref="T:System.Web.Caching.CacheDependency" /> e dall'orario di inizio della verifica delle modifiche.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inoltre, se una qualsiasi delle directory o file specificati nella `filenames` parametro non viene trovato nel file system, viene considerata come mancante. Se manca una directory o file quando l'oggetto con la dipendenza viene aggiunto per il <xref:System.Web.Caching.Cache>, l'oggetto memorizzato nella cache verrà rimosso dal <xref:System.Web.Caching.Cache> quando viene creato la directory o il file.  
  
 Ad esempio, si supponga che si aggiunge un oggetto per il <xref:System.Web.Caching.Cache> con una dipendenza dal seguente percorso di file: c:\stocks\xyz.dat. Se tale file non viene trovato quando la <xref:System.Web.Caching.CacheDependency> oggetto viene creato, ma viene creato in un secondo momento, l'oggetto memorizzato nella cache viene rimosso dopo la creazione del file xyz.  
 
 Tuttavia, il `cachekeys` dipendenza non funziona allo stesso modo. Se almeno un valore nel `cachekeys` parametro non esiste al momento di un'operazione di inserimento, l'inserimento ha esito negativo. Si noti che nessuna eccezione generata per questo scenario.

> [!NOTE]
>  Rilevamento delle modifiche inizia immediatamente e non dipende direttamente il `start` parametro. Usare il `start` passato parametro da passare a una data e ora nel passato in cui si desidera controllare la data ultima modifica di uno qualsiasi degli oggetti di `filenames`, `cachekeys`, o `dependency` parametri. Se l'ultima data di uno di questi oggetti è successiva alla data e ora passata al `start` parametro, l'elemento memorizzato nella cache viene rimosso dal <xref:System.Web.Caching.Cache>.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato un `CreateDependency` (metodo). Quando questo metodo viene chiamato, viene creato un <xref:System.DateTime> oggetto e il <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> proprietà viene utilizzata per aggiungere un elemento alla cache con un parametro di chiave `key1` e il valore `Value 1`. Una matrice di stringhe `dependencyKey`, viene quindi creata con il valore in corrispondenza dell'indice relativo primo (e unico) impostato sul valore di `key1` anche. Il <xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType> costruttore viene quindi usato per creare un <xref:System.Web.Caching.CacheDependency> oggetto `dep1`, che passano `dependencyKey` come argomento del parametro. Una seconda <xref:System.Web.Caching.CacheDependency> oggetto `dep2`, viene quindi creata utilizzando il costruttore, con `dep1` e il <xref:System.DateTime> oggetto passati come argomenti di parametro. Questa dipendenza secondo dipende dal primo e il monitoraggio delle dipendenze verrà avviata dopo 10 secondi il `CreateDependency` viene chiamato il metodo. Il <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> metodo viene chiamato, utilizzando la seconda <xref:System.Web.Caching.CacheDependency> oggetto come parametro. Se la prima dipendenza viene modificato in alcun modo, l'elemento memorizzato nella cache verrà invalidato.  
  
 [!code-csharp[CacheDependency Constructor8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor8/CS/dependencytimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor8/VB/dependencytimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName="DependencyDispose">
      <MemberSignature Language="C#" Value="protected virtual void DependencyDispose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DependencyDispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.DependencyDispose" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DependencyDispose ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DependencyDispose();" />
      <MemberSignature Language="F#" Value="abstract member DependencyDispose : unit -&gt; unit&#xA;override this.DependencyDispose : unit -&gt; unit" Usage="cacheDependency.DependencyDispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia le risorse utilizzate dalla classe <see cref="T:System.Web.Caching.CacheDependency" /> e tutte le classi che derivano da <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Qualsiasi classe che deriva dal <xref:System.Web.Caching.CacheDependency> classe è necessaria implementare questo metodo per pulire le risorse ha utilizzato la classe derivata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata una classe che eredita dal <xref:System.Web.Caching.CacheDependency> classe ed esegue l'override di <xref:System.Web.Caching.CacheDependency.DependencyDispose%2A> (metodo). Quando viene chiamato questo metodo, imposta la proprietà booleana personalizzata denominata `Disposed` a `true`.  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cacheDependency.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia le risorse usate dall'oggetto <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishInit">
      <MemberSignature Language="C#" Value="protected internal void FinishInit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void FinishInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.FinishInit" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub FinishInit ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void FinishInit();" />
      <MemberSignature Language="F#" Value="member this.FinishInit : unit -&gt; unit" Usage="cacheDependency.FinishInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Completa l'inizializzazione dell'oggetto <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Caching.CacheDependency.FinishInit%2A> metodo viene completato l'inizializzazione del <xref:System.Web.Caching.CacheDependency> oggetto. Questo metodo viene chiamato da tutti <xref:System.Web.Caching.CacheDependency> costruttori.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Il <see cref="M:System.Web.Caching.CacheDependency.FinishInit" /> metodo deve essere chiamato alla fine del costruttore per le classi derivate completare l'inizializzazione del <see cref="T:System.Web.Caching.CacheDependency" /> oggetto.</para>
        </block>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName="GetFileDependencies">
      <MemberSignature Language="C#" Value="public virtual string[] GetFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.GetFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileDependencies () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFileDependencies();" />
      <MemberSignature Language="F#" Value="abstract member GetFileDependencies : unit -&gt; string[]&#xA;override this.GetFileDependencies : unit -&gt; string[]" Usage="cacheDependency.GetFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene le dipendenze del file.</summary>
        <returns>Dipendenze del file.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueID">
      <MemberSignature Language="C#" Value="public virtual string GetUniqueID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUniqueID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.GetUniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUniqueID () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetUniqueID();" />
      <MemberSignature Language="F#" Value="abstract member GetUniqueID : unit -&gt; string&#xA;override this.GetUniqueID : unit -&gt; string" Usage="cacheDependency.GetUniqueID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera un identificatore univoco per un oggetto <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <returns>Identificatore univoco dell'oggetto <see cref="T:System.Web.Caching.CacheDependency" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo può essere particolarmente utile per tenere traccia di più istanze del <xref:System.Web.Caching.CacheDependency> classe associata a un elemento o di un'applicazione.  
  
 L'identificatore è una combinazione di sia il nome del file (per le dipendenze di file) o il nome della chiave (per una dipendenza della cache-key) e una stringa che questo metodo assegna alla dipendenza. Nelle classi che derivano dal <xref:System.Web.Caching.CacheDependency> (classe), è possibile eseguire l'override del metodo per personalizzare come viene generato l'identificatore univoco.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Web.Caching.AggregateCacheDependency> oggetto, denominato `aggDep`, con due <xref:System.Web.Caching.CacheDependency> nella relativa matrice di oggetti. Una volta `aggDep` viene creata un'istanza, il codice chiama il <xref:System.Web.Caching.CacheDependency.GetUniqueID%2A> metodo per generare un identificatore univoco per entrambi le dipendenze che `aggDep` contiene e Visualizza la pagina contiene gli identificatori. Viene quindi aggiunto un elemento per il <xref:System.Web.Caching.Cache>, usando il <xref:System.Web.Caching.Cache.Insert%2A> metodo, con `aggDep` come dipendenza.  
  
 [!code-vb[CachingSamples_AggregateCacheDependency1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_AggregateCacheDependency1/VB/aggregatecachedependencysamplevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.CacheDependency.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanged : bool" Usage="System.Web.Caching.CacheDependency.HasChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Web.Caching.CacheDependency" /> è stato modificato.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Web.Caching.CacheDependency" /> è stato modificato; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile aggiungere un elemento a un'applicazione di ASP.NET <xref:System.Web.Caching.Cache> con un <xref:System.Web.Caching.CacheDependency>. Quando la <xref:System.Web.Caching.CacheDependency> viene modificato, l'elemento aggiunto di <xref:System.Web.Caching.Cache> viene invalidato e rimosso dalla cache. È possibile usare questa proprietà per determinare se un <xref:System.Web.Caching.CacheDependency> è stato modificato e ricreare l'elemento nella <xref:System.Web.Caching.Cache> se che si è verificato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Web.Caching.CacheDependency.HasChanged%2A> proprietà per determinare se un <xref:System.Web.Caching.CacheDependency> modificati dopo la richiesta precedente per un elemento nel <xref:System.Web.Caching.Cache>. Il `dt` valore passato il `start` parametro è impostato su <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName="ItemRemoved">
      <MemberSignature Language="C#" Value="public void ItemRemoved ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ItemRemoved() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.ItemRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Sub ItemRemoved ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ItemRemoved();" />
      <MemberSignature Language="F#" Value="member this.ItemRemoved : unit -&gt; unit" Usage="cacheDependency.ItemRemoved " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiamato quando viene rimossa una voce della cache monitorata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepDependenciesAlive">
      <MemberSignature Language="C#" Value="public void KeepDependenciesAlive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void KeepDependenciesAlive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.KeepDependenciesAlive" />
      <MemberSignature Language="VB.NET" Value="Public Sub KeepDependenciesAlive ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void KeepDependenciesAlive();" />
      <MemberSignature Language="F#" Value="member this.KeepDependenciesAlive : unit -&gt; unit" Usage="cacheDependency.KeepDependenciesAlive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aggiorna l'ora dell'ultimo accesso di ogni elemento della cache che dipende da questo elemento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyDependencyChanged">
      <MemberSignature Language="C#" Value="protected void NotifyDependencyChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void NotifyDependencyChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub NotifyDependencyChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void NotifyDependencyChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.NotifyDependencyChanged : obj * EventArgs -&gt; unit" Usage="cacheDependency.NotifyDependencyChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Origine dell'evento.</param>
        <param name="e">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Notifica all'oggetto <see cref="T:System.Web.Caching.CacheDependency" /> di base che sono state apportate modifiche alla dipendenza rappresentata da una classe <see cref="T:System.Web.Caching.CacheDependency" /> derivata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Qualsiasi classe che deriva dal <xref:System.Web.Caching.CacheDependency> classe deve implementare questo metodo.  
  
 Quando si deriva dal <xref:System.Web.Caching.CacheDependency> (classe), utilizzare la funzionalità di base di qualsiasi metodo o proprietà che non hanno sostituito. Quando si crea un'istanza della classe derivata, rappresenta i file, chiavi della cache, le tabelle del database o altri oggetti arbitrari che si desidera rendere dipendente da un elemento memorizzato nella cache. Quando viene modificato un elemento di dipendenza, questo metodo invia una notifica la funzionalità di base del <xref:System.Web.Caching.CacheDependency> classe che l'elemento è stato modificato, in modo che i valori del <xref:System.Web.Caching.CacheDependency.HasChanged%2A> e <xref:System.Web.Caching.CacheDependency.UtcLastModified%2A> proprietà possono essere aggiornate.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata una classe che eredita dal <xref:System.Web.Caching.CacheDependency> classe. Crea un metodo pubblico `ResetDependency`, che usa la <xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A> metodo per modificare l'ora in cui è stata modificata la dipendenza e quindi chiama il <xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A> (metodo).  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName="SetCacheDependencyChanged">
      <MemberSignature Language="C#" Value="public void SetCacheDependencyChanged (Action&lt;object,EventArgs&gt; dependencyChangedAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCacheDependencyChanged(class System.Action`2&lt;object, class System.EventArgs&gt; dependencyChangedAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.SetCacheDependencyChanged(System.Action{System.Object,System.EventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCacheDependencyChanged (dependencyChangedAction As Action(Of Object, EventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCacheDependencyChanged(Action&lt;System::Object ^, EventArgs ^&gt; ^ dependencyChangedAction);" />
      <MemberSignature Language="F#" Value="member this.SetCacheDependencyChanged : Action&lt;obj, EventArgs&gt; -&gt; unit" Usage="cacheDependency.SetCacheDependencyChanged dependencyChangedAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyChangedAction" Type="System.Action&lt;System.Object,System.EventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="dependencyChangedAction">Azione per le modifiche apportate alla dipendenza.</param>
        <summary>Aggiunge un metodo azione per gestire l'invio delle notifiche alle parti interessate delle modifiche apportate a questa dipendenza.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUtcLastModified">
      <MemberSignature Language="C#" Value="protected void SetUtcLastModified (DateTime utcLastModified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetUtcLastModified(valuetype System.DateTime utcLastModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetUtcLastModified (utcLastModified As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetUtcLastModified(DateTime utcLastModified);" />
      <MemberSignature Language="F#" Value="member this.SetUtcLastModified : DateTime -&gt; unit" Usage="cacheDependency.SetUtcLastModified utcLastModified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utcLastModified" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="utcLastModified">Ora dell'ultima modifica apportata alla dipendenza.</param>
        <summary>Indica l'ora dell'ultima modifica apportata a una dipendenza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente viene illustrata una classe che eredita dal <xref:System.Web.Caching.CacheDependency> classe. Crea un metodo pubblico `ResetDependency`, che usa la <xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A> metodo per modificare l'ora in cui è stata modificata la dipendenza e quindi chiama il <xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A> (metodo).  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
    <Member MemberName="TakeOwnership">
      <MemberSignature Language="C#" Value="public bool TakeOwnership ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TakeOwnership() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.TakeOwnership" />
      <MemberSignature Language="VB.NET" Value="Public Function TakeOwnership () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TakeOwnership();" />
      <MemberSignature Language="F#" Value="member this.TakeOwnership : unit -&gt; bool" Usage="cacheDependency.TakeOwnership " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consente al primo utente di dichiarare la proprietà esclusiva di questa dipendenza.</summary>
        <returns>
          <see langword="true" />
          <see langword="true" /> se l'elemento è stato il primo ad assumere la proprietà; in caso contrario, <see langword="false" />. <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo dichiara che la dipendenza viene utilizzata. Se un altro elemento precedentemente chiamato questo metodo e ha richiesto la proprietà, `false` viene restituito. Oggetto <xref:System.Web.Caching.CacheDependency> può essere usato solo da una voce di una cache. Quando un elemento viene aggiunto a una cache con tutte le dipendenze della cache specificate, la cache deve assumere la proprietà di tali dipendenze per assicurarsi che non siano riusati da qualche parte else.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcLastModified">
      <MemberSignature Language="C#" Value="public DateTime UtcLastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime UtcLastModified" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.CacheDependency.UtcLastModified" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcLastModified As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime UtcLastModified { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcLastModified : DateTime" Usage="System.Web.Caching.CacheDependency.UtcLastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'ora dell'ultima modifica apportata alla dipendenza.</summary>
        <value>Ora dell'ultima modifica apportata alla dipendenza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà viene misurata in formato Coordinated Universal Time (UTC) (noto anche come ora di Greenwich Mean Time).  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Web.Caching.AggregateCacheDependency> classe per aggiungere un elemento, con due <xref:System.Web.Caching.CacheDependency> dell'oggetto a dipendenze, il <xref:System.Web.Caching.Cache>. Quando una richiesta per il <xref:System.Web.Caching.Cache> elemento viene stabilito, il codice controlla se l'elemento si trova il <xref:System.Web.Caching.Cache>. In caso affermativo il <xref:System.Web.Caching.CacheDependency.UtcLastModified%2A> viene convertita in una stringa e visualizzata nella pagina di proprietà. In caso contrario, l'elemento e le relative due dipendenze vengono creati e aggiunti al <xref:System.Web.Caching.Cache>.  
  
 [!code-vb[CachingSamples_AggregateCacheDependency1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_AggregateCacheDependency1/VB/aggregatecachedependencysamplevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">La memorizzazione nella cache i dati dell'applicazione</related>
      </Docs>
    </Member>
  </Members>
</Type>