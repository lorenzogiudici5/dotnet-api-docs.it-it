<Type Name="IDataServiceMetadataProvider" FullName="System.Data.Services.Providers.IDataServiceMetadataProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6064a320a368ad3326fee907988e0af36361a3f5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36684078" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataServiceMetadataProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataServiceMetadataProvider" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Providers.IDataServiceMetadataProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataServiceMetadataProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataServiceMetadataProvider" />
  <TypeSignature Language="F#" Value="type IDataServiceMetadataProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Gestisce metadati relativi a un provider del servizio dati personalizzato.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ContainerName">
      <MemberSignature Language="C#" Value="public string ContainerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ContainerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContainerName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainerName : string" Usage="System.Data.Services.Providers.IDataServiceMetadataProvider.ContainerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nome del contenitore per l'origine dati.</summary>
        <value>Stringa che contiene il nome del contenitore.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerNamespace">
      <MemberSignature Language="C#" Value="public string ContainerNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContainerNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ContainerNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainerNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContainerNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainerNamespace : string" Usage="System.Data.Services.Providers.IDataServiceMetadataProvider.ContainerNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nome dello spazio dei nomi per l'origine dati.</summary>
        <value>Stringa che contiene il nome dello spazio dei nomi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDerivedTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ResourceType&gt; GetDerivedTypes (System.Data.Services.Providers.ResourceType resourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Services.Providers.ResourceType&gt; GetDerivedTypes(class System.Data.Services.Providers.ResourceType resourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Providers.IDataServiceMetadataProvider.GetDerivedTypes(System.Data.Services.Providers.ResourceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Services::Providers::ResourceType ^&gt; ^ GetDerivedTypes(System::Data::Services::Providers::ResourceType ^ resourceType);" />
      <MemberSignature Language="F#" Value="abstract member GetDerivedTypes : System.Data.Services.Providers.ResourceType -&gt; seq&lt;System.Data.Services.Providers.ResourceType&gt;" Usage="iDataServiceMetadataProvider.GetDerivedTypes resourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ResourceType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="System.Data.Services.Providers.ResourceType" />
      </Parameters>
      <Docs>
        <param name="resourceType">Oggetto <see cref="T:System.Data.Services.Providers.ResourceType" /> di base.</param>
        <summary>Tenta di restituire tutti i tipi che derivano dal tipo di risorsa specificato.</summary>
        <returns>Raccolta <see cref="T:System.Collections.Generic.IEnumerable`1" /> di oggetti <see cref="T:System.Data.Services.Providers.ResourceType" /> derivati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.Data.Services.Providers.IDataServiceMetadataProvider.GetDerivedTypes%2A> deve restituire una raccolta di tutti i tipi derivati da `resourceType`.  
  
 Il tipo passato al metodo tramite il parametro `resourceType` non deve essere restituito nella raccolta.  
  
 Un responsabile dell'implementazione dell'interfaccia di <xref:System.Data.Services.Providers.IDataServiceMetadataProvider> deve restituire un valore Null se dal tipo fornito non viene derivato alcun tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceAssociationSet">
      <MemberSignature Language="C#" Value="public System.Data.Services.Providers.ResourceAssociationSet GetResourceAssociationSet (System.Data.Services.Providers.ResourceSet resourceSet, System.Data.Services.Providers.ResourceType resourceType, System.Data.Services.Providers.ResourceProperty resourceProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Services.Providers.ResourceAssociationSet GetResourceAssociationSet(class System.Data.Services.Providers.ResourceSet resourceSet, class System.Data.Services.Providers.ResourceType resourceType, class System.Data.Services.Providers.ResourceProperty resourceProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Providers.IDataServiceMetadataProvider.GetResourceAssociationSet(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Providers::ResourceAssociationSet ^ GetResourceAssociationSet(System::Data::Services::Providers::ResourceSet ^ resourceSet, System::Data::Services::Providers::ResourceType ^ resourceType, System::Data::Services::Providers::ResourceProperty ^ resourceProperty);" />
      <MemberSignature Language="F#" Value="abstract member GetResourceAssociationSet : System.Data.Services.Providers.ResourceSet * System.Data.Services.Providers.ResourceType * System.Data.Services.Providers.ResourceProperty -&gt; System.Data.Services.Providers.ResourceAssociationSet" Usage="iDataServiceMetadataProvider.GetResourceAssociationSet (resourceSet, resourceType, resourceProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Providers.ResourceAssociationSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceSet" Type="System.Data.Services.Providers.ResourceSet" />
        <Parameter Name="resourceType" Type="System.Data.Services.Providers.ResourceType" />
        <Parameter Name="resourceProperty" Type="System.Data.Services.Providers.ResourceProperty" />
      </Parameters>
      <Docs>
        <param name="resourceSet">Set di risorse dell'estremità dell'associazione di origine.</param>
        <param name="resourceType">Tipo di risorsa dell'estremità dell'associazione di origine.</param>
        <param name="resourceProperty">Proprietà di risorsa dell'estremità dell'associazione di origine.</param>
        <summary>Ottiene l'istanza di <see cref="T:System.Data.Services.Providers.ResourceAssociationSet" /> se viene fornita l'estremità dell'associazione di origine.</summary>
        <returns>Istanza di <see cref="T:System.Data.Services.Providers.ResourceAssociationSet" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDerivedTypes">
      <MemberSignature Language="C#" Value="public bool HasDerivedTypes (System.Data.Services.Providers.ResourceType resourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasDerivedTypes(class System.Data.Services.Providers.ResourceType resourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Providers.IDataServiceMetadataProvider.HasDerivedTypes(System.Data.Services.Providers.ResourceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasDerivedTypes(System::Data::Services::Providers::ResourceType ^ resourceType);" />
      <MemberSignature Language="F#" Value="abstract member HasDerivedTypes : System.Data.Services.Providers.ResourceType -&gt; bool" Usage="iDataServiceMetadataProvider.HasDerivedTypes resourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="System.Data.Services.Providers.ResourceType" />
      </Parameters>
      <Docs>
        <param name="resourceType">Oggetto <see cref="T:System.Data.Services.Providers.ResourceType" /> da valutare.</param>
        <summary>Determina se un tipo di risorsa dispone di tipi derivati.</summary>
        <returns>
          <see langword="true" /> quando <paramref name="resourceType" /> rappresenta un'entità che dispone di tipi derivati. In caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceSets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ResourceSet&gt; ResourceSets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Services.Providers.ResourceSet&gt; ResourceSets" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ResourceSets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResourceSets As IEnumerable(Of ResourceSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Data::Services::Providers::ResourceSet ^&gt; ^ ResourceSets { System::Collections::Generic::IEnumerable&lt;System::Data::Services::Providers::ResourceSet ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResourceSets : seq&lt;System.Data.Services.Providers.ResourceSet&gt;" Usage="System.Data.Services.Providers.IDataServiceMetadataProvider.ResourceSets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ResourceSet&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene tutti i contenitori disponibili.</summary>
        <value>Raccolta <see cref="T:System.Collections.Generic.IEnumerable`1" /> di oggetti <see cref="T:System.Data.Services.Providers.ResourceSet" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceOperations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ServiceOperation&gt; ServiceOperations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Services.Providers.ServiceOperation&gt; ServiceOperations" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ServiceOperations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceOperations As IEnumerable(Of ServiceOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Data::Services::Providers::ServiceOperation ^&gt; ^ ServiceOperations { System::Collections::Generic::IEnumerable&lt;System::Data::Services::Providers::ServiceOperation ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceOperations : seq&lt;System.Data.Services.Providers.ServiceOperation&gt;" Usage="System.Data.Services.Providers.IDataServiceMetadataProvider.ServiceOperations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ServiceOperation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Restituisce tutte le operazioni di servizio in questa origine dati.</summary>
        <value>Raccolta <see cref="T:System.Collections.Generic.IEnumerable`1" /> di oggetti <see cref="T:System.Data.Services.Providers.ServiceOperation" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveResourceSet">
      <MemberSignature Language="C#" Value="public bool TryResolveResourceSet (string name, out System.Data.Services.Providers.ResourceSet resourceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryResolveResourceSet(string name, [out] class System.Data.Services.Providers.ResourceSet&amp; resourceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Providers.IDataServiceMetadataProvider.TryResolveResourceSet(System.String,System.Data.Services.Providers.ResourceSet@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveResourceSet (name As String, ByRef resourceSet As ResourceSet) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveResourceSet(System::String ^ name, [Runtime::InteropServices::Out] System::Data::Services::Providers::ResourceSet ^ % resourceSet);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveResourceSet : string *  -&gt; bool" Usage="iDataServiceMetadataProvider.TryResolveResourceSet (name, resourceSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceSet" Type="System.Data.Services.Providers.ResourceSet&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">Nome dell'oggetto <see cref="T:System.Data.Services.Providers.ResourceSet" /> da risolvere.</param>
        <param name="resourceSet">Restituisce il set di risorse o un valore <see langword="null" /> se non viene trovato un set di risorse con il valore <c>name</c> specificato.</param>
        <summary>Tenta di ottenere un set di risorse in base al nome specificato.</summary>
        <returns>
          <see langword="true" /> quando viene trovato un set di risorse con il valore <paramref name="name" /> specificato. In caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveResourceType">
      <MemberSignature Language="C#" Value="public bool TryResolveResourceType (string name, out System.Data.Services.Providers.ResourceType resourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryResolveResourceType(string name, [out] class System.Data.Services.Providers.ResourceType&amp; resourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Providers.IDataServiceMetadataProvider.TryResolveResourceType(System.String,System.Data.Services.Providers.ResourceType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveResourceType (name As String, ByRef resourceType As ResourceType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveResourceType(System::String ^ name, [Runtime::InteropServices::Out] System::Data::Services::Providers::ResourceType ^ % resourceType);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveResourceType : string *  -&gt; bool" Usage="iDataServiceMetadataProvider.TryResolveResourceType (name, resourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="System.Data.Services.Providers.ResourceType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">Nome del tipo da risolvere.</param>
        <param name="resourceType">Restituisce il tipo di risorse o un valore <see langword="null" /> se non viene trovato un tipo di risorse con il valore <c>name</c> specificato.</param>
        <summary>Tenta di ottenere un tipo di risorsa in base al nome specificato.</summary>
        <returns>
          <see langword="true" /> quando viene trovato un tipo di risorse con il valore <paramref name="name" /> specificato. In caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveServiceOperation">
      <MemberSignature Language="C#" Value="public bool TryResolveServiceOperation (string name, out System.Data.Services.Providers.ServiceOperation serviceOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryResolveServiceOperation(string name, [out] class System.Data.Services.Providers.ServiceOperation&amp; serviceOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Providers.IDataServiceMetadataProvider.TryResolveServiceOperation(System.String,System.Data.Services.Providers.ServiceOperation@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveServiceOperation (name As String, ByRef serviceOperation As ServiceOperation) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveServiceOperation(System::String ^ name, [Runtime::InteropServices::Out] System::Data::Services::Providers::ServiceOperation ^ % serviceOperation);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveServiceOperation : string *  -&gt; bool" Usage="iDataServiceMetadataProvider.TryResolveServiceOperation (name, serviceOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="serviceOperation" Type="System.Data.Services.Providers.ServiceOperation&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">Nome dell'operazione di servizio da risolvere.</param>
        <param name="serviceOperation">Restituisce l'operazione del servizio o un valore <see langword="null" /> se non viene trovata un'operazione del servizio con il valore <c>name</c> specificato.</param>
        <summary>Tenta di ottenere un'operazione di servizio in base al nome specificato.</summary>
        <returns>
          <see langword="true" /> quando viene trovata un'operazione del servizio con il valore <paramref name="name" /> specificato. In caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Types">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ResourceType&gt; Types { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Services.Providers.ResourceType&gt; Types" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Providers.IDataServiceMetadataProvider.Types" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Types As IEnumerable(Of ResourceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Data::Services::Providers::ResourceType ^&gt; ^ Types { System::Collections::Generic::IEnumerable&lt;System::Data::Services::Providers::ResourceType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Types : seq&lt;System.Data.Services.Providers.ResourceType&gt;" Usage="System.Data.Services.Providers.IDataServiceMetadataProvider.Types" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ResourceType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Restituisce tutti i tipi in questa origine dati.</summary>
        <value>Raccolta <see cref="T:System.Collections.Generic.IEnumerable`1" /> di oggetti <see cref="T:System.Data.Services.Providers.ResourceType" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>