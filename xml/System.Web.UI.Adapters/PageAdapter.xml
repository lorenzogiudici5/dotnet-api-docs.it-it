<Type Name="PageAdapter" FullName="System.Web.UI.Adapters.PageAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="43e5c07bafad09fe487f1f25fb07d7b997dcc699" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550595" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PageAdapter : System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageAdapter extends System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Adapters.PageAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageAdapter&#xA;Inherits ControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAdapter abstract : System::Web::UI::Adapters::ControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Adapters.ControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Adatta una pagina Web per un browser specifico e fornisce la classe base dalla quale ereditano tutti gli adattatori di pagina, direttamente o indirettamente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.UI.Adapters.PageAdapter> classe è una classe astratta che si adatta a una pagina Web per una classe specifica di browser, definita dal linguaggio di markup che utilizza il browser (ad esempio HTML o XHTML). Possibile incapsulare gran parte dell'adattabilità comportamento di rendering nelle classi di writer di testo specializzati che derivano dalla <xref:System.Web.UI.HtmlTextWriter> classe, pertanto non è sempre necessario specificare un adattatore di pagina.  
  
 La maggior parte dei membri degli adattatori di pagina derivata vengono chiamati dalla <xref:System.Web.UI.Page> classe o dagli adattatori di controllo. Prima di tutto, il <xref:System.Web.UI.Page> schede di classe o un controllo rilevare la presenza dell'adattatore di pagina derivato e quindi chiamare il membro o fornire la funzionalità, se l'adattatore di pagina non è presente.  
  
 I membri del <xref:System.Web.UI.Adapters.PageAdapter> forniscono le funzionalità seguenti:  
  
-   Il <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> e <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams%2A> proprietà definiscono le intestazioni HTTP aggiuntive e HTTP `GET` e `POST` parametri che possono essere utilizzati per variare la memorizzazione nella cache. Vengono chiamati durante l'inizializzazione della cache dalla <xref:System.Web.UI.Page> classe.  
  
-   Il <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> metodo restituisce un oggetto che può essere utilizzato per mantenere gli stati di visualizzazione e del controllo combinati della pagina. Oggetto di riferimento del <xref:System.Web.UI.Page.PageStatePersister%2A> proprietà se è presente un adattatore di pagina derivato.  
  
-   Il <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> metodo fornisce un frammento di codice DHTML che può essere usato per fare riferimento a moduli di script.  
  
-   Il <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> metodo restituisce una raccolta di variabili di postback se la pagina è in fase di postback. Viene chiamato da .NET Framework anziché il <xref:System.Web.UI.Page.DeterminePostBackMode%2A?displayProperty=nameWithType> metodo se è presente un adattatore di pagina derivato.  
  
-   Il <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> e <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> metodi vengono utilizzati dagli adattatori di controllo per eseguire il rendering di collegamenti ipertestuali se è presente un adattatore di pagina derivato.  
  
-   Il <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> metodo esegue il rendering di un collegamento ipertestuale o un tag di postback client in grado di inviare il form.  
  
-   Il <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> e <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> metodi vengono utilizzati dagli adattatori di controllo pulsante di opzione per fare riferimento a altro <xref:System.Web.UI.WebControls.RadioButton> controlli in un gruppo di pulsanti di opzione.  
  
-   Il <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> proprietà fornisce l'accesso agli Stati del controllo e visualizzazione combinati del <xref:System.Web.UI.Page> oggetto tramite l'oggetto interno `ClientState` proprietà del <xref:System.Web.UI.Page> classe.  
  
-   Il <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> metodo viene utilizzato dagli adattatori di controllo per eseguire una trasformazione del testo specifico del dispositivo.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come derivare una classe denominata `CustomPageAdapter` dal <xref:System.Web.UI.Adapters.PageAdapter> classe ed eseguire l'override di <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> metodo. Il <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> metodo aggiunge un attributo denominato `src` a un collegamento ipertestuale, che contiene un riferimento alla pagina corrente. Tutti i collegamenti ipertestuali visualizzati in pagine a cui `CustomPageAdapter` collegato avrà il `src` attributo.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.Adapters.PageAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework costruisce questo adattatore internamente durante la creazione della corrispondente <xref:System.Web.UI.Page> classe o una classe derivata.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByHeaders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByHeaders As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByHeaders { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un elenco di intestazioni HTTP aggiuntive che consentono di variare la memorizzazione nella cache per la pagina Web alla quale è collegato questo adattatore di pagina derivato.</summary>
        <value>Oggetto <see cref="T:System.Collections.IList" /> che contiene un elenco di intestazioni HTTP; in caso contrario, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entità sul Web che memorizza nella cache di pagine Web di memorizzare nella cache più versioni, in base alle intestazioni HTTP e altri fattori. Ad esempio, una versione per ogni lingua in cui viene generata una pagina in genere è memorizzato nella cache, in base il `Accept-Language` intestazione HTTP.  
  
 Per i browser specifici, potrebbe essere necessario variare la memorizzazione nella cache da intestazioni HTTP oltre che le intestazioni di memorizzazione nella cache di controllo indipendente dalla destinazione. Ad esempio, potrebbe essere necessario memorizzare nella cache diverse versioni di una pagina per dimensioni dello schermo diverse.  
  
 I nomi di intestazione restituiti dal <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> proprietà vengono aggiunti all'elenco di intestazioni nel `Vary` intestazione HTTP inviata al browser client.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si eredita dal <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), è possibile eseguire l'override di <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> proprietà per restituire un elenco delle intestazioni aggiuntive per controllare la memorizzazione nella cache specifico della destinazione. Il <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> restituisce proprietà di base <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByHeaders" />
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByParams">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByParams As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByParams { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un elenco di parametri aggiuntivi dalle richieste HTTP GET e POST che variano la memorizzazione nella cache per la pagina Web alla quale è collegato questo adattatore di pagina derivato.</summary>
        <value>Oggetto <see cref="T:System.Collections.IList" /> che contiene un elenco di parametri GET e POST; in caso contrario, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entità sul Web che le pagine Web cache nella cache più versioni in base, tra gli altri fattori, i parametri della richiesta. Ad esempio, una versione per ogni punto vendita all'interno di una catena di distribuzione per il quale può essere generata una pagina verrebbe in genere essere memorizzati nella cache. in base al nome del parametro (ad esempio, `StoreID`).  
  
 Per i browser specifici, potrebbe essere necessario variare la memorizzazione nella cache da GET o parametri oltre ai parametri POST per la memorizzazione nella cache di controllo indipendente dalla destinazione. Ad esempio, potrebbe essere necessario memorizzare nella cache diverse versioni di una pagina per il provider di servizi diversi telefono cellulare.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si eredita dal <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), è possibile eseguire l'override di <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> proprietà per restituire un elenco di parametri GET o POST aggiuntivi per controllare la memorizzazione nella cache di destinazione specifici. Il <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> metodo restituisce il valore di base <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
      </Docs>
    </Member>
    <Member MemberName="ClientState">
      <MemberSignature Language="C#" Value="protected string ClientState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientState As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ClientState { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene una stringa codificata che contiene i dati di visualizzazione e degli stati di controllo della pagina Web alla quale è associato questo adattatore di pagina derivato.</summary>
        <value>Oggetto <see cref="T:System.String" /> codificato che contiene la visualizzazione combinata e gli stati di controllo dei controlli sull'oggetto <see cref="T:System.Web.UI.Page" /> associato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> proprietà fornisce l'accesso alla classe interna `ClientState` proprietà la <xref:System.Web.UI.Page> classe.  
  
 Visualizzare i dati di stati archiviati dal <xref:System.Web.UI.PageStatePersister> oggetto interno `ClientState` proprietà <xref:System.Web.UI.Page> verranno sempre salvati nel campo nascosto nella pagina Web.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si eredita dal <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), è possibile eseguire l'override di <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> proprietà perché non è <see langword="virtual" />. Per modificare il comportamento di <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> in una classe derivata, implementare un nuovo <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> proprietà che fa riferimento il <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> proprietà della classe di base.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackMode () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se la pagina Web è in postback e restituisce un insieme nome/valore delle variabili di postback.</summary>
        <returns>Oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> delle variabili di postback, se presenti; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> metodo restituisce una delle raccolte seguenti:  
  
-   Variabili di form se il metodo di trasferimento dati HTTP è `POST`.  
  
-   Variabili di stringa di query se il metodo HTTP è `GET`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si eredita dal <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), è possibile eseguire l'override di <see cref="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" /> metodo per fornire una gestione specifico della destinazione della raccolta di variabili di postback.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Page.DeterminePostBackMode" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce una raccolta nome-valore di dati inviata nella pagina utilizzando un comando POST o GET, senza eseguire la convalida delle richieste ASP.NET.</summary>
        <returns>Dati del form non convalidati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni, vedere la classe <xref:System.Web.UnvalidatedRequestValues>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackFormReference">
      <MemberSignature Language="C#" Value="protected internal virtual string GetPostBackFormReference (string formId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetPostBackFormReference(string formId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetPostBackFormReference (formId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetPostBackFormReference(System::String ^ formId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formId">Oggetto <see cref="T:System.String" /> che contiene l'ID client del form inserito.</param>
        <summary>Restituisce un frammento di codice DHTML che può essere utilizzato dal browser client per fare riferimento al form nella pagina inserita.</summary>
        <returns>Oggetto <see cref="T:System.String" /> con un riferimento al form nella pagina inserita.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> metodo fornisce un riferimento DHTML al form di postback. Nel frammento di codice presenta il formato seguente:  
  
 `document.forms['` `formID` `']`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si eredita dal <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), è possibile eseguire l'override di <see cref="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" /> metodo se il codice per il browser supportato dall'adapter richiede un formato diverso per il riferimento al form di postback. Ad esempio, lo standard HTML 3.2 utilizzato dai browser PocketPC richiede il seguente formato:  
  
 <c>documento.</c><paramref name="formID" /></para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="GetRadioButtonsByGroup">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection GetRadioButtonsByGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRadioButtonsByGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRadioButtonsByGroup (groupName As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ICollection ^ GetRadioButtonsByGroup(System::String ^ groupName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Oggetto <see cref="T:System.String" /> che corrisponde al nome del gruppo <see cref="T:System.Web.UI.WebControls.RadioButton" /> da recuperare.</param>
        <summary>Recupera un insieme di controlli pulsante di opzione specificato da <paramref name="groupName" />.</summary>
        <returns>Oggetto <see cref="T:System.Collections.ICollection" /> di controlli <see cref="T:System.Web.UI.WebControls.RadioButton" /> che costituiscono <paramref name="groupName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare schede di controllo pulsante di opzione di <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> e <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> metodi per fare riferimento a altro <xref:System.Web.UI.WebControls.RadioButton> controlli nel gruppo.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="GetStatePersister">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.PageStatePersister GetStatePersister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.PageStatePersister GetStatePersister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatePersister () As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::PageStatePersister ^ GetStatePersister();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto utilizzato dalla pagina Web per mantenere gli stati di controllo e visualizzazione.</summary>
        <returns>Oggetto derivato dall'oggetto <see cref="T:System.Web.UI.PageStatePersister" /> che supporta la creazione e l'estrazione degli stati di controllo e visualizzazione combinati per l'oggetto <see cref="T:System.Web.UI.Page" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Page.PageStatePersister%2A> proprietà Usa il <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> per restituire l'oggetto, derivato dal <xref:System.Web.UI.PageStatePersister> (classe), che costituisce ed estratti gli stati combinati di controllo e visualizzazione della pagina. Se è presente alcun adattatore di pagina derivato collegato alla pagina, un <xref:System.Web.UI.HiddenFieldPageStatePersister> oggetto viene utilizzato per mantenere lo stato in un campo nascosto nella pagina.  
  
|Tipo collegamento|Collegamento risulta|  
|---------------|--------------------|  
|Riferimento all'entità di codice, cer|<xref:System.Char.ToString%2A>|  
|Codice entità riferimento completo, cerq|<xref:System.Char.ToString%2A?displayProperty=nameWithType>|  
|Codice entità riferimento specifico, limitata|<xref:System.Char.ToString%28System.Char%29>|  
|Codice entità riferimento completo specifico, cerqs|<xref:System.Char.ToString%28System.Char%29?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Visualizzare i dati di stati archiviati dal <see cref="T:System.Web.UI.PageStatePersister" /> oggetto interno <see langword="ClientState" /> proprietà del <see cref="T:System.Web.UI.Page" /> verranno sempre salvati nel campo nascosto nella pagina Web.</para>
        </block>
        <block subset="none" type="overrides">
          <para>Quando si eredita dal <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), è possibile eseguire l'override di <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> per restituire un altro derivato persister dello stato di pagina, se non è possibile mantenere lo stato combinato in un campo nascosto (ad esempio, a causa di risorse limitate).  
  
 Il <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> base classe restituisce un <see cref="T:System.Web.UI.HiddenFieldPageStatePersister" /> oggetto. È possibile utilizzare la <see cref="T:System.Web.UI.SessionPageStatePersister" /> classe per mantenere lo stato della pagina nello stato sessione.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
        <altmember cref="T:System.Web.UI.HiddenFieldPageStatePersister" />
        <altmember cref="T:System.Web.UI.SessionPageStatePersister" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRadioButton">
      <MemberSignature Language="C#" Value="public virtual void RegisterRadioButton (System.Web.UI.WebControls.RadioButton radioButton);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRadioButton(class System.Web.UI.WebControls.RadioButton radioButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRadioButton(System::Web::UI::WebControls::RadioButton ^ radioButton);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radioButton" Type="System.Web.UI.WebControls.RadioButton" />
      </Parameters>
      <Docs>
        <param name="radioButton">Oggetto <see cref="T:System.Web.UI.WebControls.RadioButton" /> da aggiungere alla raccolta.</param>
        <summary>Aggiunge un controllo pulsante di opzione all'insieme per un gruppo di pulsanti di opzione specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Adapters.PageAdapter> classe Usa un <xref:System.Collections.Specialized.ListDictionary> oggetto per gestire un elenco di gruppi di pulsanti di opzione. Ogni elemento in <xref:System.Collections.Specialized.ListDictionary> è una raccolta del <xref:System.Web.UI.WebControls.RadioButton> controlli in un gruppo di pulsanti di opzione. Il <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> metodo aggiunge un <xref:System.Web.UI.WebControls.RadioButton> controllo alla raccolta appropriata, creando la raccolta se non esiste già e <xref:System.Collections.Specialized.ListDictionary> se vi sono non registrato in precedenza <xref:System.Web.UI.WebControls.RadioButton> controlli.  
  
 Utilizzare le schede di controllo pulsante di opzione di <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> e <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> metodi per fare riferimento a altro <xref:System.Web.UI.WebControls.RadioButton> controlli in un gruppo di pulsanti di opzione.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Esegue il rendering di un tag di apertura di collegamento ipertestuale sul flusso di risposta.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> contenente i metodi per eseguire il rendering dell'output specifico della destinazione.</param>
        <param name="targetUrl">Valore <see cref="T:System.String" /> che contiene l'URL di destinazione del collegamento.</param>
        <param name="encodeUrl">
          <see langword="true" /> per utilizzare <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> per codificare l'output del flusso; in caso contrario, <see langword="false" />.</param>
        <param name="softkeyLabel">Valore <see cref="T:System.String" /> da utilizzare come etichetta di un tasto softkey.</param>
        <summary>Esegue il rendering di un tag di apertura di collegamento ipertestuale che comprende l'URL di destinazione al flusso di risposta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> metodo scrive un tag tag del collegamento ipertestuale. Quando `writer` è <xref:System.Web.UI.HtmlTextWriter>, questo tag ha il formato seguente:  
  
 `<a href="` `targetUrl` `">`  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come derivare una classe denominata `CustomPageAdapter` dal <xref:System.Web.UI.Adapters.PageAdapter> classe ed eseguire l'override di <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> metodo. Il <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> metodo aggiunge un attributo denominato `src` a un collegamento ipertestuale, che contiene un riferimento alla pagina corrente. Tutti i collegamenti ipertestuali visualizzati in pagine a cui `CustomPageAdapter` collegato avrà il `src` attributo.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si eredita dal <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), è possibile eseguire l'override di <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> metodo per scrivere un formato diverso per l'apertura di un collegamento ipertestuale, tag o attributi da scrivere altri tag. Ad esempio, il <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> metodo di base non scrive un attributo per <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel, System::String ^ accessKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> contenente i metodi per eseguire il rendering dell'output specifico della destinazione.</param>
        <param name="targetUrl">Valore <see cref="T:System.String" /> che contiene l'URL di destinazione del collegamento.</param>
        <param name="encodeUrl">
          <see langword="true" /> per utilizzare <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> per codificare l'output del flusso; in caso contrario, <see langword="false" />.</param>
        <param name="softkeyLabel">Valore <see cref="T:System.String" /> da utilizzare come etichetta di un tasto softkey.</param>
        <param name="accessKey">Valore <see cref="T:System.String" /> da assegnare all'attributo <see langword="accessKey" /> del collegamento da creare.</param>
        <summary>Esegue il rendering di un tag di apertura di collegamento ipertestuale che comprende l'URL di destinazione e un tasto di scelta al flusso di risposta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> metodo scrive un tag tag del collegamento ipertestuale. Quando `writer` è un <xref:System.Web.UI.HtmlTextWriter> dell'oggetto, questo tag ha il formato seguente:  
  
 `<a href="` `targetUrl` `" accessKey="` `accessKey` `">`  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come derivare una classe denominata `CustomPageAdapter` dal <xref:System.Web.UI.Adapters.PageAdapter> classe ed eseguire l'override di <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> metodo. <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Aggiunge un attributo denominato `src` a un collegamento ipertestuale, che contiene un riferimento alla pagina corrente. Tutti i collegamenti ipertestuali visualizzati in pagine a cui `CustomPageAdapter` collegato avrà il `src` attributo.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          La lunghezza di <paramref name="accessKey" /> è superiore a un carattere.</exception>
        <block subset="none" type="overrides">
          <para>Quando si eredita dal <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), è possibile eseguire l'override di <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> metodo per scrivere un formato diverso per l'apertura di un collegamento ipertestuale, tag o attributi da scrivere altri tag. Ad esempio, il <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> metodo di base non scrive un attributo per <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderEndHyperlink (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndHyperlink(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndHyperlink (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndHyperlink(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> che contiene i metodi per eseguire il rendering dell'output specifico della destinazione.</param>
        <summary>Esegue il rendering di un tag di chiusura di collegamento ipertestuale sul flusso di risposta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> metodo scrive una chiusura tag del collegamento ipertestuale. Quando il writer di testo è un <xref:System.Web.UI.HtmlTextWriter> dell'oggetto, questo tag ha il formato seguente:  
  
 `</a>`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si eredita dal <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), è possibile eseguire l'override di <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" /> e <see cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" /> metodi quando un formato diverso di collegamento ipertestuale eseguire il rendering.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderPostBackEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Esegue il rendering di un evento di postback all'interno del flusso di risposta come un collegamento, compresi tutti gli argomenti richiesti.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> contenente i metodi per eseguire il rendering dell'output specifico della destinazione.</param>
        <param name="target">Valore <see cref="T:System.String" /> contenente il nome di destinazione dell'evento di postback.</param>
        <param name="argument">Valore <see cref="T:System.String" /> contenente l'argomento da passare all'evento di destinazione di postback.</param>
        <param name="softkeyLabel">Valore <see cref="T:System.String" /> da utilizzare come etichetta di un tasto softkey.</param>
        <param name="text">Valore <see cref="T:System.String" /> del testo da visualizzare come collegamento.</param>
        <summary>Esegue il rendering di un evento di postback all'interno del flusso di risposta come un collegamento ipertestuale, compreso lo stato di visualizzazione codificato e possibilmente crittografato, oltre alla destinazione e all'argomento dell'evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> metodo scrive un evento di postback come collegamento ipertestuale senza script.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si eredita dal <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), è possibile eseguire l'override di <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> metodo se un formato diverso è necessario per il collegamento ipertestuale dell'evento di postback o il browser ha altri requisiti specifici. Alcuni browser richiedono ad esempio, il testo del collegamento ipertestuale per essere non vuoto se il collegamento per eseguire il rendering. È inoltre possibile sostituire <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> se risorse limitate non consentono di includere lo stato di visualizzazione come parametro URL. Il <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> metodo di base non scrive un attributo per <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> contenente i metodi per eseguire il rendering dell'output specifico della destinazione.</param>
        <param name="target">Valore <see cref="T:System.String" /> contenente il nome di destinazione dell'evento di postback.</param>
        <param name="argument">Valore <see cref="T:System.String" /> contenente l'argomento da passare all'evento di destinazione di postback.</param>
        <param name="softkeyLabel">Valore <see cref="T:System.String" /> da utilizzare come etichetta di un tasto softkey.</param>
        <param name="text">Valore <see cref="T:System.String" /> del testo da visualizzare come collegamento.</param>
        <param name="postUrl">Valore <see cref="T:System.String" /> che contiene la pagina di destinazione dell'URL del postback.</param>
        <param name="accessKey">Valore <see cref="T:System.String" /> utilizzato per assegnare all'attributo <see langword="accessKey" /> del collegamento creato.</param>
        <summary>Esegue il rendering di un evento di postback all'interno del flusso di risposta come un collegamento ipertestuale, compreso lo stato di visualizzazione codificato e possibilmente crittografato, la destinazione e l'argomento di un evento, un parametro di pagina precedente e un tasto di scelta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> metodo scrive un evento di postback come collegamento ipertestuale senza script, inclusi i blocchi probabilmente <xref:System.Web.HttpUtility.UrlEncode%2A> stato di visualizzazione, `__EVENTTARGET=target`, `__EVENTARGUMENT=argument`, `__PREVIOUSPAGE=currentFilePath` , parametri e un `accessKey="accessKey"` attributo.  
  
 Lo stato di visualizzazione verrà crittografato se la `enableViewStateMac` attributo del [pages Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) elemento di configurazione è impostata su `true`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si eredita dal <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), è possibile eseguire l'override di <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> metodo se un formato diverso è necessario per il collegamento ipertestuale dell'evento di postback o il browser ha altri requisiti specifici. Alcuni browser richiedono ad esempio, il testo del collegamento ipertestuale per essere non vuoto se il collegamento per eseguire il rendering. È inoltre possibile sostituire <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> se risorse limitate non consentono di includere lo stato di visualizzazione come parametro URL. Il <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> metodo di base non scrive un attributo per <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey, bool encode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">Oggetto <see cref="T:System.Web.UI.HtmlTextWriter" /> contenente i metodi per eseguire il rendering dell'output specifico della destinazione.</param>
        <param name="target">Valore <see cref="T:System.String" /> contenente il nome di destinazione dell'evento di postback.</param>
        <param name="argument">Valore <see cref="T:System.String" /> contenente l'argomento da passare all'evento di destinazione di postback.</param>
        <param name="softkeyLabel">Valore <see cref="T:System.String" /> da utilizzare come etichetta di un tasto softkey.</param>
        <param name="text">Valore <see cref="T:System.String" /> del testo da visualizzare come collegamento.</param>
        <param name="postUrl">Valore <see cref="T:System.String" /> che contiene la pagina di destinazione dell'URL del postback.</param>
        <param name="accessKey">Valore <see cref="T:System.String" /> da assegnare all'attributo <see langword="accessKey" /> del collegamento creato.</param>
        <param name="encode">
          <see langword="true" /> per usare <c>&amp;amp;</c> come separatore del parametro URL; <see langword="false" /> per usare <c>&amp;</c>.</param>
        <summary>Esegue il rendering di un evento di postback all'interno del flusso di risposta come un collegamento ipertestuale, compreso lo stato di visualizzazione codificato, la destinazione e l'argomento di un evento, un parametro di pagina precedente e un tasto di scelta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> metodo scrive un evento di postback come collegamento ipertestuale senza script, inclusi i blocchi probabilmente <xref:System.Web.HttpUtility.UrlEncode%2A> stato di visualizzazione, `__EVENTTARGET=target`, `__EVENTARGUMENT=argument`, `__PREVIOUSPAGE=currentFilePath` , parametri e un `accessKey="accessKey"` attributo.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si eredita dal <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), è possibile eseguire l'override di <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> metodo se un formato diverso è necessario per il collegamento ipertestuale dell'evento di postback o il browser ha altri requisiti specifici. Alcuni browser richiedono ad esempio, il testo del collegamento ipertestuale per essere non vuoto se il collegamento per eseguire il rendering. È inoltre possibile sostituire <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> se risorse limitate non consentono di includere lo stato di visualizzazione come parametro URL. Il <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> metodo di base non scrive un attributo per <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="TransformText">
      <MemberSignature Language="C#" Value="public virtual string TransformText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TransformText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TransformText (text As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ TransformText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Oggetto <see cref="T:System.String" /> che rappresenta il testo da trasformare.</param>
        <summary>Trasforma il testo per il browser di destinazione.</summary>
        <returns>Oggetto <see cref="T:System.String" /> che contiene il testo trasformato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> metodo può essere utilizzato, ad esempio, per trasformare i caratteri di tabulazione (`\t`) in interruzioni di riga (`\n`).  
  
 Il <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> metodo restituisce il valore di base `text` subisce modifiche.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si eredita dal <see cref="T:System.Web.UI.Adapters.PageAdapter" /> (classe), è possibile eseguire l'override <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> se un particolare markup dispone di un costrutto con un formato diverso da HTML standard. Se, ad esempio, un browser richiede un identificatore per un tag diverso da quello che verrebbe utilizzato nel codice HTML, <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> può eseguire l'override di metodo per individuare il tag e modificarlo.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
  </Members>
</Type>