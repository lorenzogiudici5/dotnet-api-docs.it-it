<Type Name="RibbonApplicationSplitMenuItem" FullName="System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8fcea2ac56fca1c4ee20df57ed246238139e2300" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36568450" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RibbonApplicationSplitMenuItem : System.Windows.Controls.Ribbon.RibbonSplitMenuItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RibbonApplicationSplitMenuItem extends System.Windows.Controls.Ribbon.RibbonSplitMenuItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class RibbonApplicationSplitMenuItem&#xA;Inherits RibbonSplitMenuItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class RibbonApplicationSplitMenuItem : System::Windows::Controls::Ribbon::RibbonSplitMenuItem" />
  <TypeSignature Language="F#" Value="type RibbonApplicationSplitMenuItem = class&#xA;    inherit RibbonSplitMenuItem" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Ribbon.RibbonSplitMenuItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.Ribbon.RibbonApplicationMenuItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="00f99-101">Rappresenta una voce di menu all'interno di un controllo <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenu" /> che può richiamare un comando e visualizza inoltre un sottomenu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="00f99-101">Represents a menu item inside a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenu" /> control that can invoke a command and also display a submenu.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f99-102">In genere si usa un <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> quando si desidera richiamare un comando e visualizzare un sottomenu di comandi correlati usando una singola voce di menu.</span><span class="sxs-lookup"><span data-stu-id="00f99-102">You typically use a <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> when you want to invoke a command and also display a submenu of related commands using a single menu item.</span></span> <span data-ttu-id="00f99-103">Per ulteriori informazioni sull'utilizzo dei comandi con voci di menu, vedere [procedura: aggiungere un comando a un oggetto MenuItem](http://msdn.microsoft.com/library/013d68a0-5373-4a68-bd91-5de574307370).</span><span class="sxs-lookup"><span data-stu-id="00f99-103">For more information about using commands with menu items, see [How to: Add a Command to a MenuItem](http://msdn.microsoft.com/library/013d68a0-5373-4a68-bd91-5de574307370).</span></span>  
  
 <span data-ttu-id="00f99-104">Il comando che è associato il <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> viene richiamato quando viene selezionata la voce di menu.</span><span class="sxs-lookup"><span data-stu-id="00f99-104">The command that is associated with the <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> is invoked when the menu item is clicked.</span></span> <span data-ttu-id="00f99-105">Il sottomenu viene visualizzato quando il puntatore del mouse viene spostato sulla voce di menu.</span><span class="sxs-lookup"><span data-stu-id="00f99-105">The submenu is displayed when the mouse pointer is moved over the menu item.</span></span> <span data-ttu-id="00f99-106">Il sottomenu del <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> è costituito dagli oggetti all'interno di <xref:System.Windows.Controls.ItemsControl.Items%2A> raccolta di un <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>.</span><span class="sxs-lookup"><span data-stu-id="00f99-106">The submenu of the <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> is made up of the objects within the <xref:System.Windows.Controls.ItemsControl.Items%2A> collection of a <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>.</span></span> <span data-ttu-id="00f99-107">È comune per un <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> all'host <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> oggetti per creare i sottomenu.</span><span class="sxs-lookup"><span data-stu-id="00f99-107">It is common for a <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> to host <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> objects to create submenus.</span></span>  
  
 <span data-ttu-id="00f99-108">La figura seguente mostra il Menu di applicazione per un controllo barra multifunzione.</span><span class="sxs-lookup"><span data-stu-id="00f99-108">The following illustration shows the Application Menu for a ribbon control.</span></span> <span data-ttu-id="00f99-109">Il **Salva con nome** e **stampa** gli elementi sono esempi del <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> controllo.</span><span class="sxs-lookup"><span data-stu-id="00f99-109">The **Save As** and **Print** items are examples of the <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> control.</span></span>  
  
 <span data-ttu-id="00f99-110">![Sulla barra multifunzione Menu applicazione](~/add/media/wpfribbon-appmenu.png "sulla barra multifunzione Menu dell'applicazione")</span><span class="sxs-lookup"><span data-stu-id="00f99-110">![Ribbon Application Menu](~/add/media/wpfribbon-appmenu.png "Ribbon Application Menu")</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00f99-111">Nell'esempio seguente mostra le voci di menu del Menu dell'applicazione illustrato in precedenza.</span><span class="sxs-lookup"><span data-stu-id="00f99-111">The following example shows the menu items of the Application Menu shown previously.</span></span> <span data-ttu-id="00f99-112">Il <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> ospitano oggetti <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> oggetti.</span><span class="sxs-lookup"><span data-stu-id="00f99-112">The <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem> objects are hosting <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> objects.</span></span>  
  
 [!code-xaml[Ribbon_Snippets#AppMenuItems](~/samples/snippets/csharp/VS_Snippets_Wpf/ribbon_snippets/cs/ribbonwindow1.xaml#appmenuitems)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RibbonApplicationSplitMenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RibbonApplicationSplitMenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00f99-113">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-113">Initializes a new instance of the <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="ribbonApplicationSplitMenuItem.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00f99-114">Restituisce un nuovo oggetto <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-114">Returns a new <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00f99-115">Un nuovo oggetto contenitore <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> utilizzato per visualizzare un elemento dalla raccolta <see cref="P:System.Windows.Controls.ItemsControl.Items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-115">A new <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> container object that is used to display an item from the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="ribbonApplicationSplitMenuItem.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="00f99-116">Elemento da verificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-116">The item to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00f99-117">Restituisce un valore che indica se un l'elemento specificato è (o è idoneo a essere) il proprio contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-117">Returns a value that indicates whether the specified item is (or is eligible to be) its own container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00f99-118">
            <see langword="true" /> se l’elemento è un <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />, un <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, un <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" /> o un <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-118">
              <see langword="true" /> if the item is a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />, a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, a <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" />, or a <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As RibbonApplicationMenuItemLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Ribbon::RibbonApplicationMenuItemLevel Level { System::Windows::Controls::Ribbon::RibbonApplicationMenuItemLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel" Usage="System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00f99-119">Ottiene un valore che indica a quale livello viene visualizzata la voce di menu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-119">Gets a value that indicates at what level the menu item is displayed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00f99-120">Uno dei valori di enumerazione che specifica a quale livello è visualizzata la voce di menu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-120">One the enumeration values that specifies at what level the menu item is displayed.</span>
          </span>
          <span data-ttu-id="00f99-121">Il valore predefinito registrato è <see cref="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel.Top" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-121">The registered default is <see cref="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel.Top" />.</span>
          </span>
          <span data-ttu-id="00f99-122">Per ulteriori informazioni sugli elementi che possono influenzare il valore, vedere [proprietà di dipendenza, valore Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-122">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Level"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="00f99-123">Informazioni proprietà di dipendenza</span><span class="sxs-lookup"><span data-stu-id="00f99-123">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="00f99-124">Campo dell'identificatore</span><span class="sxs-lookup"><span data-stu-id="00f99-124">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.LevelProperty>|  
|<span data-ttu-id="00f99-125">Impostare le proprietà dei metadati su `true`</span><span class="sxs-lookup"><span data-stu-id="00f99-125">Metadata properties set to `true`</span></span>|<span data-ttu-id="00f99-126">nessuno</span><span class="sxs-lookup"><span data-stu-id="00f99-126">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LevelProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LevelProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LevelProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.LevelProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LevelProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LevelProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LevelProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.LevelProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00f99-127">Identifica la proprietà di dipendenza <see cref="P:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.Level" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-127">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.Level" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivatingKeyTip">
      <MemberSignature Language="C#" Value="protected override void OnActivatingKeyTip (System.Windows.Controls.ActivatingKeyTipEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnActivatingKeyTip(class System.Windows.Controls.ActivatingKeyTipEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.OnActivatingKeyTip(System.Windows.Controls.ActivatingKeyTipEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnActivatingKeyTip (e As ActivatingKeyTipEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnActivatingKeyTip(System::Windows::Controls::ActivatingKeyTipEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnActivatingKeyTip : System.Windows.Controls.ActivatingKeyTipEventArgs -&gt; unit" Usage="ribbonApplicationSplitMenuItem.OnActivatingKeyTip e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ActivatingKeyTipEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="00f99-128">Contiene i dati relativi all'attivazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-128">Contains data about the activation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00f99-129">Viene chiamato quando si preme il suggerimento del tasto di scelta o il tasto di scelta rapida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-129">Called when the KeyTip or accelerator key is pressed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="ribbonApplicationSplitMenuItem.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00f99-130">Compila la struttura ad albero visuale per <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" /> quando viene applicato un nuovo modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-130">Builds the visual tree for the <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" /> when a new template is applied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00f99-131">Il metodo viene richiamato tutte le volte che il codice dell'applicazione o un processo interno, ad esempio un passaggio di layout di ricompilazione, chiama il metodo <xref:System.Windows.FrameworkElement.ApplyTemplate%2A>.</span><span class="sxs-lookup"><span data-stu-id="00f99-131">This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="ribbonApplicationSplitMenuItem.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="00f99-132">Dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-132">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00f99-133">Fornisce la gestione della classe per l'evento <see cref="E:System.Windows.UIElement.KeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-133">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="ribbonApplicationSplitMenuItem.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="00f99-134">L'elemento utilizzato per visualizzare l'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-134">The element that is used to display the item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="00f99-135">Elemento da visualizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-135">The item to display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00f99-136">Prepara l'elemento specificato per visualizzare l'oggetto specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-136">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldApplyItemContainerStyle">
      <MemberSignature Language="C#" Value="protected override bool ShouldApplyItemContainerStyle (System.Windows.DependencyObject container, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ShouldApplyItemContainerStyle(class System.Windows.DependencyObject container, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldApplyItemContainerStyle (container As DependencyObject, item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ShouldApplyItemContainerStyle(System::Windows::DependencyObject ^ container, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.ShouldApplyItemContainerStyle : System.Windows.DependencyObject * obj -&gt; bool" Usage="ribbonApplicationSplitMenuItem.ShouldApplyItemContainerStyle (container, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="00f99-137">Elemento contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-137">The container element.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="00f99-138">L'elemento a cui è destinato il contenitore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-138">The item that the container is for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00f99-139">Restituisce un valore che indica se applicare lo stile dalla proprietà <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> o <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> all'elemento del contenitore dell'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-139">Returns a value that indicates whether to apply the style from the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> or <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> property to the container element of the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00f99-140">
            <see langword="false" /> se <paramref name="container" /> è un <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" /> o <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; altrimenti, il valore restituito dall'implementazione di base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00f99-140">
              <see langword="false" /> if <paramref name="container" /> is a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" />, or <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; otherwise, the value returned by the base implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>