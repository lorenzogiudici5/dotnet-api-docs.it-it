<Type Name="CivicAddressResolver" FullName="System.Device.Location.CivicAddressResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b03f59e5c7b26493d3ad6f443e86b49bf65458e2" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36743850" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CivicAddressResolver : System.Device.Location.ICivicAddressResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CivicAddressResolver extends System.Object implements class System.Device.Location.ICivicAddressResolver" />
  <TypeSignature Language="DocId" Value="T:System.Device.Location.CivicAddressResolver" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CivicAddressResolver&#xA;Implements ICivicAddressResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class CivicAddressResolver sealed : System::Device::Location::ICivicAddressResolver" />
  <TypeSignature Language="F#" Value="type CivicAddressResolver = class&#xA;    interface ICivicAddressResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Device</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Device.Location.ICivicAddressResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornisce la funzionalità per la risoluzione di un percorso basato sulle coordinate in un indirizzo civico.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Device.Location.CivicAddressResolver> classe fornisce un'implementazione di <xref:System.Device.Location.ICivicAddressResolver> che risolve un percorso basato su coordinate in un indirizzo civico se il provider di posizione vengono fornite le coordinate sia i dati di indirizzo civico.  
  
   
  
## Examples  
 Il programma seguente viene illustrato come chiamare <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> risolvere in modo sincrono un indirizzo civico.  
  
 [!code-csharp[System.Device.Location.ResolveCivicAddressSync#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/cs/resolvecivicaddresssync.cs#1)]
 [!code-vb[System.Device.Location.ResolveCivicAddressSync#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/vb/resolvecivicaddresssync.vb#1)]  
  
 Il programma seguente viene illustrato come chiamare <xref:System.Device.Location.CivicAddressResolver.ResolveAddressAsync%2A> risolvere in modo asincrono un indirizzo civico.  
  
 [!code-csharp[System.Device.Location.ResolveCivicAddressSync#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/cs/resolvecivicaddresssync.cs#1)]
 [!code-vb[System.Device.Location.ResolveCivicAddressSync#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/vb/resolvecivicaddresssync.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CivicAddressResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.CivicAddressResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CivicAddressResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Device.Location.CivicAddressResolver" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come inizializzare una nuova istanza della classe <xref:System.Device.Location.CivicAddressResolver>.  
  
```csharp  
CivicAddressResolver resolver = new CivicAddressResolver();  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveAddress">
      <MemberSignature Language="C#" Value="public System.Device.Location.CivicAddress ResolveAddress (System.Device.Location.GeoCoordinate coordinate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Device.Location.CivicAddress ResolveAddress(class System.Device.Location.GeoCoordinate coordinate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.CivicAddressResolver.ResolveAddress(System.Device.Location.GeoCoordinate)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveAddress (coordinate As GeoCoordinate) As CivicAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Device::Location::CivicAddress ^ ResolveAddress(System::Device::Location::GeoCoordinate ^ coordinate);" />
      <MemberSignature Language="F#" Value="abstract member ResolveAddress : System.Device.Location.GeoCoordinate -&gt; System.Device.Location.CivicAddress&#xA;override this.ResolveAddress : System.Device.Location.GeoCoordinate -&gt; System.Device.Location.CivicAddress" Usage="civicAddressResolver.ResolveAddress coordinate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Device.Location.ICivicAddressResolver.ResolveAddress(System.Device.Location.GeoCoordinate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Device.Location.CivicAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coordinate" Type="System.Device.Location.GeoCoordinate" />
      </Parameters>
      <Docs>
        <param name="coordinate">Oggetto <see cref="T:System.Device.Location.GeoCoordinate" /> contenente la posizione da risolvere in un indirizzo civico.</param>
        <summary>Risolve in modo sincrono un indirizzo civico da un percorso basato sulla latitudine e la longitudine. La chiamata non bloccherà l'esecuzione del thread chiamante mentre viene risolto l'indirizzo.</summary>
        <returns>Indirizzo civico risolto dal parametro <paramref name="coordinate" />. Se non è possibile risolvere l'indirizzo viene restituito <see cref="F:System.Device.Location.CivicAddress.Unknown" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted> evento viene generato al completamento dell'operazione di risoluzione indirizzi. Indirizzo civico risolto dal `coordinate` restituito dal parametro di <xref:System.Device.Location.ResolveAddressCompletedEventArgs.Address%2A> membro del <xref:System.Device.Location.ResolveAddressCompletedEventArgs> oggetto passato al gestore dell'evento.  
  
   
  
## Examples  
 Il programma seguente viene illustrato come chiamare <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> risolvere in modo sincrono un indirizzo civico.  
  
 [!code-csharp[System.Device.Location.ResolveCivicAddressSync#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/cs/resolvecivicaddresssync.cs#1)]
 [!code-vb[System.Device.Location.ResolveCivicAddressSync#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/vb/resolvecivicaddresssync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="coordinate" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="coordinate" /> non contiene valori validi di latitudine e longitudine.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAddressAsync">
      <MemberSignature Language="C#" Value="public void ResolveAddressAsync (System.Device.Location.GeoCoordinate coordinate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResolveAddressAsync(class System.Device.Location.GeoCoordinate coordinate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Device.Location.CivicAddressResolver.ResolveAddressAsync(System.Device.Location.GeoCoordinate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAddressAsync (coordinate As GeoCoordinate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResolveAddressAsync(System::Device::Location::GeoCoordinate ^ coordinate);" />
      <MemberSignature Language="F#" Value="abstract member ResolveAddressAsync : System.Device.Location.GeoCoordinate -&gt; unit&#xA;override this.ResolveAddressAsync : System.Device.Location.GeoCoordinate -&gt; unit" Usage="civicAddressResolver.ResolveAddressAsync coordinate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Device.Location.ICivicAddressResolver.ResolveAddressAsync(System.Device.Location.GeoCoordinate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coordinate" Type="System.Device.Location.GeoCoordinate" />
      </Parameters>
      <Docs>
        <param name="coordinate">Oggetto <see cref="T:System.Device.Location.GeoCoordinate" /> contenente la posizione da risolvere in un indirizzo civico.</param>
        <summary>Risolve un indirizzo in modo asincrono da una posizione basata su latitudine e longitudine. La chiamata non blocca l'esecuzione del thread chiamante mentre l'indirizzo viene risolto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Il programma seguente viene illustrato come chiamare <xref:System.Device.Location.CivicAddressResolver.ResolveAddressAsync%2A> risolvere in modo asincrono un indirizzo civico.  
  
 [!code-csharp[System.Device.Location.ResolveCivicAddressAsync#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.resolvecivicaddressasync/cs/resolvecivicaddressasync.cs#1)]
 [!code-vb[System.Device.Location.ResolveCivicAddressAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.resolvecivicaddressasync/vb/resolvecivicaddressasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="coordinate" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="coordinate" /> non contiene valori validi di latitudine e longitudine.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAddressCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Device.Location.ResolveAddressCompletedEventArgs&gt; ResolveAddressCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Device.Location.ResolveAddressCompletedEventArgs&gt; ResolveAddressCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Device.Location.CivicAddressResolver.ResolveAddressCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event ResolveAddressCompleted As EventHandler(Of ResolveAddressCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::Device::Location::ResolveAddressCompletedEventArgs ^&gt; ^ ResolveAddressCompleted;" />
      <MemberSignature Language="F#" Value="member this.ResolveAddressCompleted : EventHandler&lt;System.Device.Location.ResolveAddressCompletedEventArgs&gt; " Usage="member this.ResolveAddressCompleted : System.EventHandler&lt;System.Device.Location.ResolveAddressCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Device</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Device.Location.ResolveAddressCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando la risoluzione dell'indirizzo iniziata da una chiamata a <see cref="M:System.Device.Location.CivicAddressResolver.ResolveAddressAsync(System.Device.Location.GeoCoordinate)" /> viene completata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Il programma seguente viene illustrato come chiamare <xref:System.Device.Location.CivicAddressResolver.ResolveAddressAsync%2A> risolvere in modo asincrono un indirizzo civico.  
  
 [!code-csharp[System.Device.Location.ResolveCivicAddressAsync#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.resolvecivicaddressasync/cs/resolvecivicaddressasync.cs#1)]
 [!code-vb[System.Device.Location.ResolveCivicAddressAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.resolvecivicaddressasync/vb/resolvecivicaddressasync.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>