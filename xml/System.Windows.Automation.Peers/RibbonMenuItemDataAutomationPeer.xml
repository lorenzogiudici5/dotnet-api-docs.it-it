<Type Name="RibbonMenuItemDataAutomationPeer" FullName="System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c4d390858f1def2bb8731f84c24a190b6875e1cf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30610115" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RibbonMenuItemDataAutomationPeer : System.Windows.Automation.Peers.ItemAutomationPeer, System.Windows.Automation.Provider.IExpandCollapseProvider, System.Windows.Automation.Provider.IInvokeProvider, System.Windows.Automation.Provider.IToggleProvider, System.Windows.Automation.Provider.ITransformProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RibbonMenuItemDataAutomationPeer extends System.Windows.Automation.Peers.ItemAutomationPeer implements class System.Windows.Automation.Provider.IExpandCollapseProvider, class System.Windows.Automation.Provider.IInvokeProvider, class System.Windows.Automation.Provider.IToggleProvider, class System.Windows.Automation.Provider.ITransformProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />
  <TypeSignature Language="VB.NET" Value="Public Class RibbonMenuItemDataAutomationPeer&#xA;Inherits ItemAutomationPeer&#xA;Implements IExpandCollapseProvider, IInvokeProvider, IToggleProvider, ITransformProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class RibbonMenuItemDataAutomationPeer : System::Windows::Automation::Peers::ItemAutomationPeer, System::Windows::Automation::Provider::IExpandCollapseProvider, System::Windows::Automation::Provider::IInvokeProvider, System::Windows::Automation::Provider::IToggleProvider, System::Windows::Automation::Provider::ITransformProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.Peers.ItemAutomationPeer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IExpandCollapseProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IInvokeProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IToggleProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.ITransformProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Rappresenta i dati contenuti un oggetto <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RibbonMenuItemDataAutomationPeer (object item, System.Windows.Automation.Peers.ItemsControlAutomationPeer itemsControlPeer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object item, class System.Windows.Automation.Peers.ItemsControlAutomationPeer itemsControlPeer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item As Object, itemsControlPeer As ItemsControlAutomationPeer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RibbonMenuItemDataAutomationPeer(System::Object ^ item, System::Windows::Automation::Peers::ItemsControlAutomationPeer ^ itemsControlPeer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="itemsControlPeer" Type="System.Windows.Automation.Peers.ItemsControlAutomationPeer" />
      </Parameters>
      <Docs>
        <param name="item">Elemento associato a questo peer di automazione.</param>
        <param name="itemsControlPeer">Peer di automazione associato all'oggetto <see cref="T:System.Windows.Controls.ItemsControl" /> contenente <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationControlTypeCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationControlType GetAutomationControlTypeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Automation.Peers.AutomationControlType GetAutomationControlTypeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.GetAutomationControlTypeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAutomationControlTypeCore () As AutomationControlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationControlType GetAutomationControlTypeCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationControlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene il tipo di controllo per lâ€™oggetto <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> associato a <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />. Questo metodo viene chiamato da <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</summary>
        <returns>Il valore di enumerazione <see cref="F:System.Windows.Automation.Peers.AutomationControlType.MenuItem" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassNameCore">
      <MemberSignature Language="C#" Value="protected override string GetClassNameCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetClassNameCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.GetClassNameCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetClassNameCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetClassNameCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene il nome della classe di <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> associata a <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />. Questo metodo viene chiamato da <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</summary>
        <returns>Il nome della classe di <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> associato a <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPattern">
      <MemberSignature Language="C#" Value="public override object GetPattern (System.Windows.Automation.Peers.PatternInterface patternInterface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetPattern(valuetype System.Windows.Automation.Peers.PatternInterface patternInterface) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetPattern(System::Windows::Automation::Peers::PatternInterface patternInterface);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patternInterface" Type="System.Windows.Automation.Peers.PatternInterface" />
      </Parameters>
      <Docs>
        <param name="patternInterface">Enumerazione di valori che specifica il pattern di controllo.</param>
        <summary>Ottiene il pattern di controllo per l'oggetto <see cref="T:System.Windows.Controls.Ribbon.RibbonTab" /> associato a <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <returns>Oggetto che supporta il pattern di controllo se <paramref name="patternInterface" /> Ã¨ un valore supportato; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si verifica uno dei seguenti casi, questo metodo restituisce un oggetto che supporta il pattern di controllo specificato.  
  
-   `patternInterface` Ã¨ uguale a <xref:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse> e <xref:System.Windows.Controls.Ribbon.RibbonMenuItem> che Ã¨ associata a questo <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> dispone di oggetti figlio.  
  
-   `patternInterface` Ã¨ uguale a <xref:System.Windows.Automation.Peers.PatternInterface.Invoke> e <xref:System.Windows.Controls.Ribbon.RibbonMenuItem> che Ã¨ associata a questo <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> non dispone di oggetti figlio.  
  
-   `patternInterface` Ã¨ uguale a <xref:System.Windows.Automation.Peers.PatternInterface.Toggle> e <xref:System.Windows.Controls.Ribbon.RibbonMenuItem> che Ã¨ associata a questo <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> ha la proprietÃ  selezionabile impostata su `true`.  
  
-   `patternInterface` Ã¨ uguale a <xref:System.Windows.Automation.Peers.PatternInterface.Transform> e <xref:System.Windows.Controls.Ribbon.RibbonMenuItem> che Ã¨ associata a questo <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> puÃ² essere ridimensionata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse">
      <MemberSignature Language="C#" Value="void IExpandCollapseProvider.Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse" />
      <MemberSignature Language="VB.NET" Value="Sub Collapse () Implements IExpandCollapseProvider.Collapse" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse() = System::Windows::Automation::Provider::IExpandCollapseProvider::Collapse;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consente di nascondere tutti gli elementi che si trovano in <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> associato a <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro Ã¨ unâ€™implementazione esplicita di un membro di interfaccia. PuÃ² essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> a un'interfaccia <xref:System.Windows.Automation.Provider.IExpandCollapseProvider>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">La classe <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non Ã¨ abilitata.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> Ã¨ virtualizzato.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non contiene elementi.  
  
 oppure  
  
 <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non Ã¨ disponibile.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IExpandCollapseProvider.Expand">
      <MemberSignature Language="C#" Value="void IExpandCollapseProvider.Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.IExpandCollapseProvider.Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand" />
      <MemberSignature Language="VB.NET" Value="Sub Expand () Implements IExpandCollapseProvider.Expand" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Automation.Provider.IExpandCollapseProvider.Expand() = System::Windows::Automation::Provider::IExpandCollapseProvider::Expand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Automation.Provider.IExpandCollapseProvider.Expand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consente di visualizzare tutti gli elementi che si trovano in <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> associato a questo <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro Ã¨ unâ€™implementazione esplicita di un membro di interfaccia. PuÃ² essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> a un'interfaccia <xref:System.Windows.Automation.Provider.IExpandCollapseProvider>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">La classe <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non Ã¨ abilitata.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> Ã¨ virtualizzato.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non contiene elementi.  
  
 oppure  
  
 <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non Ã¨ disponibile.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState">
      <MemberSignature Language="C#" Value="System.Windows.Automation.ExpandCollapseState System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.ExpandCollapseState System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ExpandCollapseState As ExpandCollapseState Implements IExpandCollapseProvider.ExpandCollapseState" />
      <MemberSignature Language="C++ CLI" Value="property System::Windows::Automation::ExpandCollapseState System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState { System::Windows::Automation::ExpandCollapseState get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ExpandCollapseState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo stato espanso o compresso di <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> associato a <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <value>Stato dell'oggetto <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> associato all'oggetto <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" /> corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro Ã¨ unâ€™implementazione esplicita di un membro di interfaccia. PuÃ² essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> a un'interfaccia <xref:System.Windows.Automation.Provider.IExpandCollapseProvider>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> Ã¨ virtualizzato.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non Ã¨ disponibile.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IInvokeProvider.Invoke">
      <MemberSignature Language="C#" Value="void IInvokeProvider.Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.IInvokeProvider.Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke () Implements IInvokeProvider.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Automation.Provider.IInvokeProvider.Invoke() = System::Windows::Automation::Provider::IInvokeProvider::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Automation.Provider.IInvokeProvider.Invoke</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invia una richiesta per l'attivazione di <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> associato con <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro Ã¨ unâ€™implementazione esplicita di un membro di interfaccia. PuÃ² essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> a un'interfaccia <xref:System.Windows.Automation.Provider.IInvokeProvider>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">La classe <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non Ã¨ abilitata.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> Ã¨ virtualizzato.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non Ã¨ disponibile.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IToggleProvider.Toggle">
      <MemberSignature Language="C#" Value="void IToggleProvider.Toggle ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.IToggleProvider.Toggle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#Toggle" />
      <MemberSignature Language="VB.NET" Value="Sub Toggle () Implements IToggleProvider.Toggle" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Automation.Provider.IToggleProvider.Toggle() = System::Windows::Automation::Provider::IToggleProvider::Toggle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Automation.Provider.IToggleProvider.Toggle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Scorre gli stati selezionati di <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> associato a <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro Ã¨ unâ€™implementazione esplicita di un membro di interfaccia. PuÃ² essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> a un'interfaccia <xref:System.Windows.Automation.Provider.IToggleProvider>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">La classe <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non Ã¨ abilitata.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> Ã¨ virtualizzato.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non Ã¨ disponibile.  
  
 oppure  
  
 L'oggetto <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non puÃ² essere selezionato.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IToggleProvider.ToggleState">
      <MemberSignature Language="C#" Value="System.Windows.Automation.ToggleState System.Windows.Automation.Provider.IToggleProvider.ToggleState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.ToggleState System.Windows.Automation.Provider.IToggleProvider.ToggleState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#ToggleState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ToggleState As ToggleState Implements IToggleProvider.ToggleState" />
      <MemberSignature Language="C++ CLI" Value="property System::Windows::Automation::ToggleState System.Windows.Automation.Provider.IToggleProvider.ToggleState { System::Windows::Automation::ToggleState get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Automation.Provider.IToggleProvider.ToggleState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ToggleState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo stato selezionato di <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> associato a <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <value>Stato selezionato di <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> associato a <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro Ã¨ unâ€™implementazione esplicita di un membro di interfaccia. PuÃ² essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> a un'interfaccia <xref:System.Windows.Automation.Provider.IToggleProvider>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> Ã¨ virtualizzato.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non Ã¨ disponibile.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.CanMove">
      <MemberSignature Language="C#" Value="bool System.Windows.Automation.Provider.ITransformProvider.CanMove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.Automation.Provider.ITransformProvider.CanMove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CanMove As Boolean Implements ITransformProvider.CanMove" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Windows.Automation.Provider.ITransformProvider.CanMove { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Automation.Provider.ITransformProvider.CanMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se Ã¨ possibile spostare lâ€™elemento <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> associato a <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <value>
          <see langword="false" /> in tutti i casi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro Ã¨ unâ€™implementazione esplicita di un membro di interfaccia. PuÃ² essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> a un'interfaccia <xref:System.Windows.Automation.Provider.ITransformProvider>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.CanResize">
      <MemberSignature Language="C#" Value="bool System.Windows.Automation.Provider.ITransformProvider.CanResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.Automation.Provider.ITransformProvider.CanResize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CanResize As Boolean Implements ITransformProvider.CanResize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Windows.Automation.Provider.ITransformProvider.CanResize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Automation.Provider.ITransformProvider.CanResize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se Ã¨ possibile ridimensionare lâ€™elemento <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> associato a <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> associato a questo oggetto <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" /> puÃ² essere ridimensionato; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro Ã¨ unâ€™implementazione esplicita di un membro di interfaccia. PuÃ² essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> a un'interfaccia <xref:System.Windows.Automation.Provider.ITransformProvider>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.CanRotate">
      <MemberSignature Language="C#" Value="bool System.Windows.Automation.Provider.ITransformProvider.CanRotate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.Automation.Provider.ITransformProvider.CanRotate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CanRotate As Boolean Implements ITransformProvider.CanRotate" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Windows.Automation.Provider.ITransformProvider.CanRotate { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Automation.Provider.ITransformProvider.CanRotate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se Ã¨ possibile ruotare lâ€™elemento <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> associato a <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <value>
          <see langword="false" /> in tutti i casi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro Ã¨ unâ€™implementazione esplicita di un membro di interfaccia. PuÃ² essere utilizzato solo quando si esegue il cast dell'istanza <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> a un'interfaccia <xref:System.Windows.Automation.Provider.ITransformProvider>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.Move">
      <MemberSignature Language="C#" Value="void ITransformProvider.Move (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.ITransformProvider.Move(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Sub Move (x As Double, y As Double) Implements ITransformProvider.Move" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Automation.Provider.ITransformProvider.Move(double x, double y) = System::Windows::Automation::Provider::ITransformProvider::Move;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">API non implementata.</param>
        <param name="y">API non implementata.</param>
        <summary>API non implementata.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">In tutti i casi.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.Resize">
      <MemberSignature Language="C#" Value="void ITransformProvider.Resize (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.ITransformProvider.Resize(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Sub Resize (width As Double, height As Double) Implements ITransformProvider.Resize" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Automation.Provider.ITransformProvider.Resize(double width, double height) = System::Windows::Automation::Provider::ITransformProvider::Resize;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">API non implementata.</param>
        <param name="height">API non implementata.</param>
        <summary>API non implementata.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">La classe <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non Ã¨ abilitata.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non puÃ² essere ridimensionato.  
  
 oppure  
  
 L'oggetto <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> non puÃ² essere selezionato.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.Rotate">
      <MemberSignature Language="C#" Value="void ITransformProvider.Rotate (double degrees);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.ITransformProvider.Rotate(float64 degrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Sub Rotate (degrees As Double) Implements ITransformProvider.Rotate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Automation.Provider.ITransformProvider.Rotate(double degrees) = System::Windows::Automation::Provider::ITransformProvider::Rotate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="degrees" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="degrees">API non implementata.</param>
        <summary>API non implementata.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">In tutti i casi.</exception>
      </Docs>
    </Member>
  </Members>
</Type>