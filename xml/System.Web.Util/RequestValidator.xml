<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RequestValidator.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58b4c79fe59673d5d8a6ab4176cc578a2c36aec23.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b4c79fe59673d5d8a6ab4176cc578a2c36aec23</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Util.RequestValidator">
          <source>Defines base methods for custom request validation.</source>
          <target state="translated">Definisce i metodi base per la convalida delle richieste personalizzata.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Util.RequestValidator">
          <source>By default, ASP.NET does not validate requests until code explicitly requests a value from the request.</source>
          <target state="translated">Per impostazione predefinita, ASP.NET non convalida le richieste finché non codice richiede in modo esplicito un valore dalla richiesta.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Util.RequestValidator">
          <source>For example, ASP.NET does not validate query-string values until code accesses the <ph id="ph1">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> collection.</source>
          <target state="translated">Ad esempio, ASP.NET non convalida i valori di stringa di query fino a quando il codice accede il <ph id="ph1">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Util.RequestValidator">
          <source>By default, ASP.NET also does not validate some types of request data, such as form values, cookies, the names of files that have been uploaded using HTTP, and the value of the <ph id="ph1">&lt;xref:System.Web.HttpRequest.RawUrl%2A&gt;</ph> property.</source>
          <target state="translated">Per impostazione predefinita, ASP.NET non convalida alcuni tipi di dati della richiesta, ad esempio i valori del form, i cookie, i nomi dei file che sono stati caricati mediante HTTP e il valore di <ph id="ph1">&lt;xref:System.Web.HttpRequest.RawUrl%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Util.RequestValidator">
          <source>The <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> class is a base class that you can implement in order to provide custom request validation.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> classe è una classe di base che è possibile implementare per fornire la convalida delle richieste personalizzata.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Util.RequestValidator">
          <source>By implementing this class, you can determine when validation occurs and what type of request data to perform validation on.</source>
          <target state="translated">Implementando questa classe, è possibile determinare quando la convalida viene eseguita e il tipo di dati della richiesta per eseguire la convalida.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Util.RequestValidator">
          <source>By default, ASP.NET provides cross-site scripting (XSS) checks.</source>
          <target state="translated">Per impostazione predefinita, ASP.NET fornisce controlli cross-site scripting (XSS).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Util.RequestValidator">
          <source>However, you can supplement or replace the request validation logic that is provided in ASP.NET by creating a custom implementation of the XSS.</source>
          <target state="translated">Tuttavia, è possibile integrare o sostituire la logica di convalida richiesta che viene fornita in ASP.NET tramite la creazione di un'implementazione personalizzata di XSS.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Util.RequestValidator">
          <source>For example, you can write a custom request validation implementation that scans for SQL injection attacks in addition to checking for XSS attacks.</source>
          <target state="translated">Ad esempio, è possibile scrivere un'implementazione di convalida richiesta personalizzata che esegue l'analisi per gli attacchi SQL injection oltre a controllare per attacchi XSS.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Util.RequestValidator">
          <source>To create custom request validation, you write a custom class that derives from the <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> base class.</source>
          <target state="translated">Per creare la convalida delle richieste personalizzata, scrivere una classe personalizzata che deriva dalla <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> classe di base.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Util.RequestValidator">
          <source>You then configure ASP.NET to use the custom request validator in the application-level Web.config file.</source>
          <target state="translated">È quindi possibile configurare ASP.NET per utilizzare il validator personalizzato richiesta nel file Web. config a livello di applicazione.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Util.RequestValidator">
          <source>You can put the custom class in the App_Code folder, in a compiled class library in the Bin folder, or in a compiled class library in the GAC.</source>
          <target state="translated">È possibile inserire la classe personalizzata nella cartella App_Code, in una libreria di classi compilata nella cartella Bin, o in una libreria di classi compilata nella GAC.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Util.RequestValidator">
          <source>Only one custom request validation type can be configured for an application.</source>
          <target state="translated">Un solo tipo di convalida personalizzata richiesta configurabili per un'applicazione.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Util.RequestValidator">
          <source>It is not possible to configure a different request validation type for individual virtual paths or pages.</source>
          <target state="translated">Non è possibile configurare un tipo di convalida richiesta diverse per singoli percorsi virtuali o le pagine.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Util.RequestValidator">
          <source>The following example shows how to create a custom request validator that allows only a specific string to be used for query-string values.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come creare un validator personalizzato di richiesta che consente solo una stringa specifica da utilizzare per i valori di stringa di query.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Util.RequestValidator">
          <source>The following example shows how to configure ASP.NET to use the custom validator in the Web.config file for an application.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come configurare ASP.NET per utilizzare il validator personalizzato nel file Web. config per un'applicazione.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Util.RequestValidator" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Web.Util.RequestValidator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> class has a default constructor.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> classe ha un costruttore predefinito.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.#ctor">
          <source>When a new instance of the class is initialized, an internal method retrieves custom validation details from the application's configuration information.</source>
          <target state="translated">Quando viene inizializzata una nuova istanza della classe, un metodo interno recupera i dettagli di convalida personalizzati dalle informazioni di configurazione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.#ctor">
          <source>The configuration details are contained in the <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection&gt;</ph> section.</source>
          <target state="translated">Cui sono contenuti i dettagli di configurazione di <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection&gt;</ph> sezione.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.#ctor">
          <source>For more information, see <bpt id="p1">[</bpt>httpRuntime Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)</ept> and the <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A&gt;</ph> attribute.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>elemento httpRuntime (Schema delle impostazioni ASP.NET)<ept id="p1">](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)</ept> e <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A&gt;</ph> attributo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.#ctor">
          <source>During initialization, a single instance of the <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> class is created, and a reference to the instance is maintained in the <ph id="ph2">&lt;xref:System.Web.Util.RequestValidator.Current%2A&gt;</ph> property.</source>
          <target state="translated">Durante l'inizializzazione, una singola istanza del <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> classe viene creata e viene mantenuto un riferimento all'istanza di <ph id="ph2">&lt;xref:System.Web.Util.RequestValidator.Current%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.#ctor">
          <source>ASP.NET does not create a new request validator instance per request.</source>
          <target state="translated">ASP.NET non crea una nuova istanza di convalida richiesta per ogni richiesta.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.#ctor">
          <source>Therefore, custom implementations of the <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> class must be thread-safe.</source>
          <target state="translated">Pertanto, le implementazioni personalizzate della <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> classe deve essere thread-safe.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Web.Util.RequestValidator.Current">
          <source>Gets or sets a reference to the current <ph id="ph1">&lt;see cref="T:System.Web.Util.RequestValidator" /&gt;</ph> instance that will be used in an application.</source>
          <target state="translated">Ottiene o imposta un riferimento all'istanza <ph id="ph1">&lt;see cref="T:System.Web.Util.RequestValidator" /&gt;</ph> corrente che verrà utilizzato in un'applicazione.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Util.RequestValidator.Current">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Web.Util.RequestValidator" /&gt;</ph> class.</source>
          <target state="translated">Istanza della classe <ph id="ph1">&lt;see cref="T:System.Web.Util.RequestValidator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Util.RequestValidator.Current">
          <source>The <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator.Current%2A&gt;</ph> property maintains a reference to the single allowed instance of the <ph id="ph2">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> class.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator.Current%2A&gt;</ph> proprietà mantiene un riferimento a una sola istanza consentito della <ph id="ph2">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Util.RequestValidator.Current">
          <source>If no instance exists, a new one is created.</source>
          <target state="translated">Se non esiste alcuna istanza, viene creato uno nuovo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Util.RequestValidator.Current">
          <source>If an instance already exists, the current instance is returned.</source>
          <target state="translated">Se esiste già un'istanza, viene restituita l'istanza corrente.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Util.RequestValidator.Current">
          <source>During initialization, a single instance of the <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> class is created, and a reference to the instance is made available in the <ph id="ph2">&lt;xref:System.Web.Util.RequestValidator.Current%2A&gt;</ph> property.</source>
          <target state="translated">Durante l'inizializzazione, una singola istanza del <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> classe viene creata e diventa disponibile in un riferimento all'istanza di <ph id="ph2">&lt;xref:System.Web.Util.RequestValidator.Current%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Util.RequestValidator.Current">
          <source>ASP.NET does not create a new request validator instance per request.</source>
          <target state="translated">ASP.NET non crea una nuova istanza di convalida richiesta per ogni richiesta.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Util.RequestValidator.Current">
          <source>Therefore, custom implementations of the <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> class must be thread-safe.</source>
          <target state="translated">Pertanto, le implementazioni personalizzate della <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> classe deve essere thread-safe.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Util.RequestValidator.Current">
          <source>The <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator.Current%2A&gt;</ph> property is not thread-safe while the property is setting a reference to the current <ph id="ph2">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> class.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator.Current%2A&gt;</ph> proprietà non è thread-safe, mentre un riferimento all'oggetto corrente è l'impostazione della proprietà <ph id="ph2">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Web.Util.RequestValidator.Current">
          <source>The property is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La proprietà è <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>The HTTP context of the request.</source>
          <target state="translated">Contesto HTTP della richiesta.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>The HTTP request data to validate.</source>
          <target state="translated">Dati della richiesta HTTP da convalidare.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>An enumeration that represents the source of request data that is being validated.</source>
          <target state="translated">Enumerazione che rappresenta l'origine dei dati della richiesta che vengono sottoposti a convalida.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>The following are possible values for the enumeration:</source>
          <target state="translated">Di seguito sono indicati i valori possibili per l'enumerazione:</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>(Optional) The key in the request collection of the item to validate.</source>
          <target state="translated">(Facoltativo) Chiave nella raccolta di richieste dell'elemento da convalidare.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>This parameter is used if the data to validate is obtained from a collection.</source>
          <target state="translated">Questo parametro viene usato se i dati da convalidare sono ottenuti da una raccolta.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>If the data to validate is not from a collection, this parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">In caso contrario, il parametro può essere <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>When this method returns, indicates the zero-based starting point of the problematic or invalid text in the request collection.</source>
          <target state="translated">Quando restituisce il controllo, questo metodo indica il punto iniziale in base zero del testo problematico o non valido nella raccolta di richieste.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Questo parametro viene passato non inizializzato.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>Provides a public method that calls the protected <ph id="ph1">&lt;see cref="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)" /&gt;</ph> method in order to validate HTTP request data.</source>
          <target state="translated">Fornisce un metodo pubblico che chiama il metodo <ph id="ph1">&lt;see cref="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)" /&gt;</ph> protetto per convalidare i dati della richiesta HTTP.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the string to validate does not contain unencoded characters that could be used in a malicious scripting attack; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la stringa da convalidare non contiene caratteri non codificati che potrebbero essere usati in un attacco di scripting dannoso; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator.InvokeIsValidRequestString%2A&gt;</ph> method provides public access to the protected <ph id="ph2">&lt;xref:System.Web.Util.RequestValidator.IsValidRequestString%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator.InvokeIsValidRequestString%2A&gt;</ph> metodo fornisce l'accesso pubblico alle protetto <ph id="ph2">&lt;xref:System.Web.Util.RequestValidator.IsValidRequestString%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>This lets you create a custom wrapper class for the <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> class and call the <ph id="ph2">&lt;xref:System.Web.Util.RequestValidator.IsValidRequestString%2A&gt;</ph> method without having to inherit from the <ph id="ph3">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> class.</source>
          <target state="translated">Ciò consente di creare una classe wrapper personalizzata per il <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> classe e chiamare il <ph id="ph2">&lt;xref:System.Web.Util.RequestValidator.IsValidRequestString%2A&gt;</ph> metodo senza dover ereditare la <ph id="ph3">&lt;xref:System.Web.Util.RequestValidator&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>For information about request validation, see <ph id="ph1">&lt;xref:System.Web.UnvalidatedRequestValues&gt;</ph>.</source>
          <target state="translated">Per informazioni sulla convalida della richiesta, vedere <ph id="ph1">&lt;xref:System.Web.UnvalidatedRequestValues&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>The context of the current request.</source>
          <target state="translated">Contesto della richiesta corrente.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>The HTTP request data to validate.</source>
          <target state="translated">Dati della richiesta HTTP da convalidare.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>An enumeration that represents the source of request data that is being validated.</source>
          <target state="translated">Enumerazione che rappresenta l'origine dei dati della richiesta che vengono sottoposti a convalida.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>The following are possible values for the enumeration:</source>
          <target state="translated">Di seguito sono indicati i valori possibili per l'enumerazione:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>The key in the request collection of the item to validate.</source>
          <target state="translated">Chiave nella raccolta di richieste dell'elemento da convalidare.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>This parameter is optional.</source>
          <target state="translated">Questo parametro è facoltativo.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>This parameter is used if the data to validate is obtained from a collection.</source>
          <target state="translated">Questo parametro viene usato se i dati da convalidare sono ottenuti da una raccolta.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>If the data to validate is not from a collection, <bpt id="p1">&lt;c&gt;</bpt>collectionKey<ept id="p1">&lt;/c&gt;</ept> can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se i dati da convalidare non provengono da una raccolta, <bpt id="p1">&lt;c&gt;</bpt>collectionKey<ept id="p1">&lt;/c&gt;</ept> può essere <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>When this method returns, indicates the zero-based starting point of the problematic or invalid text in the request collection.</source>
          <target state="translated">Quando restituisce il controllo, questo metodo indica il punto iniziale in base zero del testo problematico o non valido nella raccolta di richieste.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Questo parametro viene passato non inizializzato.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>Validates a string that contains HTTP request data.</source>
          <target state="translated">Convalida una stringa che contiene i dati della richiesta HTTP.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the string to be validated is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la stringa da convalidare è valida. In caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>You implement this method to perform custom validation of request data.</source>
          <target state="translated">Implementare questo metodo per eseguire una convalida personalizzata dei dati di richiesta.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>The base behavior of the <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator.IsValidRequestString%28System.Web.HttpContext%2CSystem.String%2CSystem.Web.Util.RequestValidationSource%2CSystem.String%2CSystem.Int32%40%29&gt;</ph> method is like the behavior that ASP.NET implements internally to check for dangerous strings in cross-site scripting validation.</source>
          <target state="translated">Il comportamento di base di <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator.IsValidRequestString%28System.Web.HttpContext%2CSystem.String%2CSystem.Web.Util.RequestValidationSource%2CSystem.String%2CSystem.Int32%40%29&gt;</ph> metodo è simile a quello che ASP.NET implementa internamente per controllare le stringhe pericolose nella convalida di script tra siti.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>For more information, see <bpt id="p1">[</bpt>How To: Prevent Cross-Site Scripting in ASP.NET<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=178708)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>procedura: impedire Cross-Site Scripting in ASP.NET<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=178708)</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>If custom validation logic detects an error, this method should return <ph id="ph1">`false`</ph> and provide a value in <ph id="ph2">`validationFailureIndex`</ph> to indicate the starting point of the text that caused the error.</source>
          <target state="translated">Se la logica di convalida personalizzata rileva un errore, questo metodo deve restituire <ph id="ph1">`false`</ph> e specificare un valore in <ph id="ph2">`validationFailureIndex`</ph> per indicare il punto iniziale del testo che ha causato l'errore.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>The value in <ph id="ph1">`validationFailureIndex`</ph> must be 0 or a positive integer.</source>
          <target state="translated">Il valore in <ph id="ph1">`validationFailureIndex`</ph> deve essere 0 o un numero intero positivo.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>The logic in a request validation check proceeds as follows:</source>
          <target state="translated">La logica di un controllo di convalida richiesta procede nel modo seguente:</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class performs a null-character removal check on the incoming data.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> classe esegue un controllo di rimozione di caratteri null ai dati in arrivo.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class calls either the <ph id="ph2">&lt;xref:System.Web.Util.RequestValidator.IsValidRequestString%2A&gt;</ph> method (the default implementation of the base method) or calls a derived version of the method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> classe vengono richiamati i metodi di <ph id="ph2">&lt;xref:System.Web.Util.RequestValidator.IsValidRequestString%2A&gt;</ph> metodo (l'implementazione predefinita del metodo di base) o chiama una versione derivata del metodo.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
          <source>If <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator.IsValidRequestString%2A&gt;</ph> method returns <ph id="ph2">`false`</ph> to indicate a validation failure, ASP.NET constructs an error string (if necessary) and throws an <ph id="ph3">&lt;xref:System.Web.HttpRequestValidationException&gt;</ph> exception.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Web.Util.RequestValidator.IsValidRequestString%2A&gt;</ph> restituisce <ph id="ph2">`false`</ph> per indicare un errore di convalida, ASP.NET costruisce una stringa di errore (se necessario) e genera un <ph id="ph3">&lt;xref:System.Web.HttpRequestValidationException&gt;</ph> eccezione.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>