<Type Name="HttpEncoder" FullName="System.Web.Util.HttpEncoder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d9b7fd4528a7d53c8e18ba5e497c7f3d1f71a7ce" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52201040" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HttpEncoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Util.HttpEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpEncoder" />
  <TypeSignature Language="F#" Value="type HttpEncoder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce la logica di codifica e decodifica.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe contiene la codifica e decodifica per la logica che viene utilizzata dai metodi nelle classi, ad esempio <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, e <xref:System.Net.HttpResponseHeader>.  
  
 È possibile ereditare il <xref:System.Web.Util.HttpEncoder> classe e modificarne il comportamento per personalizzare il valore predefinito di codifica e decodifica il comportamento di ASP.NET. Impostare quindi le <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> proprietà del <xref:System.Web.Configuration.HttpRuntimeSection> classe per configurare la classe personalizzata.  
  
 Una classe personalizzata per la codifica e decodifica che deriva da <xref:System.Web.Util.HttpEncoder> possono eseguire l'override di ASP.NET predefinito di codifica e decodifica il comportamento o modifiche selezionati solo i diversi aspetti.  
  
 È possibile configurare il tipo di codifica personalizzato per ASP.NET per sostituire o integrare il comportamento di codifica seguente:  
  
-   La codifica HTML  
  
-   Codifica dell'attributo HTML  
  
-   Codifica URL  
  
-   Codifica del percorso URL  
  
-   Nome dell'intestazione HTTP e la codifica di valore di intestazione  
  
 Per impostazione predefinita, le applicazioni ASP.NET sono configurate per utilizzare il <xref:System.Web.Security.AntiXss.AntiXssEncoder> digitare per tutto l'output di codifica.  
  
 Nell'esempio seguente da un file Mostra Web. config a livello di applicazione come il <xref:System.Web.Security.AntiXss.AntiXssEncoder> tipo è impostato per un'applicazione ASP.NET:  
  
 `<httpRuntime requestValidationMode="4.5" encoderType="System.Web.Security.AntiXss.AntiXssEncoder, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>`  
  
 L'impostazione di configurazione nei set di esempio di <xref:System.Web.Security.AntiXss.AntiXssEncoder> per eseguire tutte le classi di output codifica nell'applicazione. Per altre informazioni, vedere il <xref:System.Web.Security.AntiXss.AntiXssEncoder> Cenni preliminari sulla classe.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Quando si crea una classe di codificatore personalizzato ed eseguire l'override dei metodi di base della classe di base, il codificatore derivato potrebbe generare un'eccezione da uno qualsiasi dei metodi sottoposti a override. Tuttavia, nei seguenti casi generare un'eccezione di questo tipo potrebbe causare un comportamento imprevisto in ASP.NET: 
-Se viene eseguito il rendering di una pagina di errore è causata da un'eccezione non gestita generata da un codificatore personalizzato di ASP.NET, ASP.NET non prova a codificare l'output degli errori effettuando chiamate al codificatore personalizzato. Ciò consente di evitare condizioni di errore ricorsiva.  
  
-Quando ASP.NET invia intestazioni HTTP in IIS, ASP.NET non dispone di alcun provisioning per le eccezioni non gestite. Pertanto, verrà visualizzata la pagina di errore ASP.NET standard (se le impostazioni di configurazione consente di visualizzare questa pagina).</para>
    </block>
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="T:System.Web.Configuration.HttpRuntimeSection" />
    <altmember cref="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Util.HttpEncoder" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Current" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Current { System::Web::Util::HttpEncoder ^ get(); void set(System::Web::Util::HttpEncoder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Web.Util.HttpEncoder with get, set" Usage="System.Web.Util.HttpEncoder.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo <see cref="T:System.Web.Util.HttpEncoder" /> che verrà utilizzato in un'applicazione.</summary>
        <value>Riferimento al tipo di codificatore/decodificatore che verrà utilizzato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un oggetto derivato <xref:System.Web.Util.HttpEncoder> tipo è specificato nel file di configurazione, il <xref:System.Web.Util.HttpEncoder.Current%2A> proprietà restituisce un riferimento al tipo personalizzato. Tuttavia, se non viene usato alcun codificatore personalizzato, la proprietà restituisce un riferimento all'impostazione predefinita ASP.NET <xref:System.Web.Util.HttpEncoder> istanza.  
  
 Il <xref:System.Web.Util.HttpEncoder.Current%2A> proprietà non è thread-safe. Impostare questa proprietà solo dell'applicazione `Application_Start` metodo, perché `Application_Start` viene eseguito in un singolo thread.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'istanza del codificatore assegnata alla proprietà è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Default { System::Web::Util::HttpEncoder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Web.Util.HttpEncoder" Usage="System.Web.Util.HttpEncoder.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un riferimento al codificatore predefinito per ASP.NET.</summary>
        <value>Riferimento al codificatore predefinito.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un problema di codifica più comune è che l'impostazione predefinita ASP.NET <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> comportamento converte gli spazi nel carattere "+". In passato, il carattere "+" è stata una convenzione di Internet per la codifica dei caratteri di spazio in un URL in modo più leggibile. Tuttavia, in base agli standard, il carattere spazio dovrebbe essere codificato come "% 20" e invece che come il carattere "+". ASP.NET consente di implementare un algoritmo di codifica conforme agli standard più.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderNameValueEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HeaderNameValueEncode (string headerName, string headerValue, out string encodedHeaderName, out string encodedHeaderValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HeaderNameValueEncode(string headerName, string headerValue, [out] string&amp; encodedHeaderName, [out] string&amp; encodedHeaderValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HeaderNameValueEncode (headerName As String, headerValue As String, ByRef encodedHeaderName As String, ByRef encodedHeaderValue As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HeaderNameValueEncode(System::String ^ headerName, System::String ^ headerValue, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderName, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderValue);" />
      <MemberSignature Language="F#" Value="abstract member HeaderNameValueEncode : string * string *  *  -&gt; unit&#xA;override this.HeaderNameValueEncode : string * string *  *  -&gt; unit" Usage="httpEncoder.HeaderNameValueEncode (headerName, headerValue, encodedHeaderName, encodedHeaderValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="headerValue" Type="System.String" />
        <Parameter Name="encodedHeaderName" Type="System.String" RefType="out" />
        <Parameter Name="encodedHeaderValue" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="headerName">Nome dell'intestazione HTTP da codificare.</param>
        <param name="headerValue">Valore dell'intestazione HTTP da codificare.</param>
        <param name="encodedHeaderName">Quando termina, questo metodo contiene il nome codificato da utilizzare per un'intestazione HTTP. Questo parametro viene passato non inizializzato.</param>
        <param name="encodedHeaderValue">Quando termina, questo metodo contiene il valore codificato da utilizzare per un'intestazione HTTP. Questo parametro viene passato non inizializzato.</param>
        <summary>Codifica il nome e il valore di un'intestazione in una stringa che può essere utilizzata come intestazione HTTP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> metodo accetta stringhe di input dal `headerName` e `headerValue` parametri e li codifica. Vengono restituiti i valori codificati come parametri di output.  
  
 Il <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> metodo utilizza la seguente logica per codificare i nomi di intestazioni e i valori:  
  
-   Il cui valore Unicode è minore di caratteri ASCII 32, ad eccezione di caratteri ASCII 9, tutti i caratteri vengono codificati in URL in un formato di `%NN` in cui il `N` caratteri rappresentano valori esadecimali.  
  
-   Carattere ASCII 9 (carattere di tabulazione orizzontale) non è codificato con URL.  
  
-   Il carattere ASCII 127 viene codificato come `%7F`.  
  
-   Tutti gli altri caratteri non vengono codificati.  
  
    > [!NOTE]
    >  Sebbene questo metodo può essere utilizzato per i valori Unicode, viene in genere utilizzato per i valori nell'intervallo ASCII.  
  
 L'implementazione predefinita del <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> metodo viene restituito il valore di `headerValue` nelle `encodedHeaderValue` se `headerValue` è `null` o è una stringa vuota. Analogamente, l'implementazione predefinita restituisce il valore del `headerName` nelle `encodedHeaderName` se `headerName` è `null` o è una stringa vuota.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlAttributeEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">Stringa da codificare.</param>
        <param name="output">Writer di testo in cui scrivere il valore codificato.</param>
        <summary>Codifica un valore in ingresso in una stringa che può essere inserita in un attributo HTML delimitato da virgolette singole o doppie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> metodo codifica i caratteri con entità HTML standard. Ad esempio, il `<` (parentesi uncinata) viene codificato come `&lt;` e il `\` (barra rovesciata) viene codificato come `&#92;`.  
  
 È possibile usare in sicurezza <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> negli attributi di virgolette singole e virgolette doppie. I valori devono essere racchiusi tra virgolette.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="output" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlDecode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">Stringa da decodificare.</param>
        <param name="output">Writer di testo in cui scrivere il valore decodificato.</param>
        <summary>Decodifica un valore da una stringa codificata in formato HTML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella seguente elenca le sequenze di caratteri che la logica di decodifica ASP.NET può decodificare.  
  
|Sequenza di caratteri|Regola|  
|------------------------|----------|  
|`&#NNN;` (decimali codici per i caratteri ASCII).|Decodificare come il carattere ASCII specificato. La sequenza di caratteri inizia in corrispondenza della prima cifra dopo il carattere # e completa il punto e virgola.|  
|`&#xZZ;` (codici esadecimali per i caratteri ASCII).|Decodificare come il carattere ASCII specificato. Il formato codificato specifica il carattere con caratteri esadecimali anziché un valore decimale. La sequenza di caratteri inizia in corrispondenza della prima cifra dopo il carattere # e completa il punto e virgola.|  
|Entità denominate HTML.|Decodificare come il carattere equivalente ASCII.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="output" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">Stringa da codificare.</param>
        <param name="output">Writer di testo in cui scrivere il valore codificato.</param>
        <summary>Codifica una stringa in una stringa codificata in HTML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La tabella seguente elenca le sequenze di caratteri che la logica di codifica di ASP.NET può decodificare.  
  
|Carattere|Codificato come|  
|---------------|----------------|  
|`<` (parentesi uncinata)|`&lt;`|  
|`>` (parentesi uncinate chiuse)|`&gt;`|  
|`"` (virgolette doppie)|`&quot;`|  
|`&` e commerciale (&)|`&amp;`|  
|`\` (barra rovesciata)|`&#92;`|  
|Caratteri ASCII da 160 a 255|`&#NNN;`, dove `NNN` è riportato il codice carattere decimale a tre cifre|  
  
 Se esegue l'override di <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> metodo, è necessario produrre output che è anche possibile negli attributi HTML racchiusi tra virgolette doppie o virgolette. Ciò consente l'analisi dal motore di Razor, in cui markup e codice possono essere combinati, ad esempio \<attr del tag = "@value" >. Inoltre, il @ operatore non è compatibile con contesto quando elaborato dal motore di Razor, pertanto chiama <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> anziché <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="output" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string JavaScriptStringEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string JavaScriptStringEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function JavaScriptStringEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ JavaScriptStringEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member JavaScriptStringEncode : string -&gt; string&#xA;override this.JavaScriptStringEncode : string -&gt; string" Usage="httpEncoder.JavaScriptStringEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Stringa da codificare.</param>
        <summary>Esegue la codifica di una stringa.</summary>
        <returns>Stringa codificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La codifica URL assicura che tutti i browser trasmettano correttamente testo in stringhe URL. Caratteri, ad esempio un punto interrogativo (?), e commerciale (&), barra (/) e spazi potrebbero essere troncati o danneggiati da alcuni browser. Pertanto, questi caratteri devono essere codificati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member UrlEncode : byte[] * int * int -&gt; byte[]&#xA;override this.UrlEncode : byte[] * int * int -&gt; byte[]" Usage="httpEncoder.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">Matrice di byte da codificare.</param>
        <param name="offset">Posizione nella matrice <paramref name="bytes" /> in corrispondenza della quale iniziare la codifica.</param>
        <param name="count">Numero di elementi nella matrice <paramref name="bytes" /> da codificare.</param>
        <summary>Codifica una matrice di caratteri non consentiti in un URL in un'entità carattere esadecimale equivalente.</summary>
        <returns>Matrice di caratteri codificati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> metodo viene chiamato da numerosi metodi di codifica URL nel <xref:System.Web.HttpUtility> classe.  
  
 Il <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> metodo consente di codificare in URL qualsiasi carattere non compreso nel set di caratteri ASCII che viene considerato per essere sicuri per gli URL. Gli spazi vengono codificati come ASCII "`+"` carattere. Caratteri ASCII sicuri per gli URL includono i caratteri ASCII (dalla alla Z e a-z), numeri (da 0 a 9) e alcuni segni di punteggiatura. La tabella seguente elenca i segni di punteggiatura che sono considerati caratteri sicuri per gli URL ASCII.  
  
|Carattere|Descrizione|  
|---------------|-----------------|  
|-|Trattino|  
|_|Carattere di sottolineatura|  
|.|Periodo (punto)|  
|!|Punto esclamativo|  
|*|Asterisco (star)|  
|(|Parentesi di apertura|  
|)|La parentesi di chiusura|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> è minore di zero o maggiore della lunghezza della matrice di <paramref name="bytes" />.  
  
oppure 
 <paramref name="count" /> è minore di zero o <paramref name="count" /> più <paramref name="offset" /> è maggiore della lunghezza della matrice di <paramref name="bytes" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="bytes" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member UrlPathEncode : string -&gt; string&#xA;override this.UrlPathEncode : string -&gt; string" Usage="httpEncoder.UrlPathEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Stringa da codificare.</param>
        <summary>Codifica una sottosezione di un URL.</summary>
        <returns>Stringa con codifica URL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> viene chiamato dal metodo <xref:System.Web.HttpUtility.UrlPathEncode%2A>. Il <xref:System.Web.HttpUtility.UrlPathEncode%2A> metodo esegue i passaggi seguenti:  
  
-   Si applica la logica di codifica del <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> metodo solo la parte di percorso dell'URL (che esclude la stringa di query). Il metodo presuppone che l'URL è codificato come stringa UTF-8.  
  
-   Codifica non spazi in modo che nella stringa con codifica risultante viene utilizzato solo un subset dei primi 128 caratteri ASCII. Tutti i caratteri valore Unicode 128 e versioni successive o 32 e minore di, vengono codificati in URL.  
  
-   Codifica spazi % 20.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>