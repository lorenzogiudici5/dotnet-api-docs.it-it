<Type Name="SpeechSynthesizer" FullName="System.Speech.Synthesis.SpeechSynthesizer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e5fe543c6b57ffe5a1278565226a9569112bf36" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39739368" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechSynthesizer sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SpeechSynthesizer = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="70ea2-101">Fornisce l'accesso alle funzionalità di un motore di sintesi vocale installato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="70ea2-101">Provides access to the functionality of an installed speech synthesis engine.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-102">Quando si crea un nuovo <xref:System.Speech.Synthesis.SpeechSynthesizer> dell'oggetto, Usa la voce di sistema predefinito.</span><span class="sxs-lookup"><span data-stu-id="70ea2-102">When you create a new <xref:System.Speech.Synthesis.SpeechSynthesizer> object, it uses the default system voice.</span></span> <span data-ttu-id="70ea2-103">Per configurare il <xref:System.Speech.Synthesis.SpeechSynthesizer> per usare una delle voci di sintesi vocale installato, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-103">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="70ea2-104">Per ottenere informazioni su quali sono installate voci, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodo e <xref:System.Speech.Synthesis.VoiceInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="70ea2-104">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 <span data-ttu-id="70ea2-105">Questa classe consente inoltre di controllare gli aspetti seguenti di sintesi vocale:</span><span class="sxs-lookup"><span data-stu-id="70ea2-105">This class also provides control over the following aspects of speech synthesis:</span></span>  
  
-   <span data-ttu-id="70ea2-106">Per configurare l'output per il <xref:System.Speech.Synthesis.SpeechSynthesizer> dell'oggetto, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, e <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-106">To configure the output for the <xref:System.Speech.Synthesis.SpeechSynthesizer> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
-   <span data-ttu-id="70ea2-107">Per generare il riconoscimento vocale, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-107">To generate speech, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="70ea2-108">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> può produrre vocale da testo, una <xref:System.Speech.Synthesis.Prompt> oppure <xref:System.Speech.Synthesis.PromptBuilder> oggetto, o da [linguaggio Markup sintesi della voce (SSML) versione 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="70ea2-108">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can produce speech from text, a <xref:System.Speech.Synthesis.Prompt> or <xref:System.Speech.Synthesis.PromptBuilder> object, or from [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span>  
  
-   <span data-ttu-id="70ea2-109">Per sospendere e riprendere la sintesi vocale, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> e <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-109">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
-   <span data-ttu-id="70ea2-110">Per aggiungere o rimuovere i dizionari, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> e <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-110">To add or remove lexicons, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> methods.</span></span> <span data-ttu-id="70ea2-111">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> può usare uno o più dizionari per guidare la pronuncia delle parole.</span><span class="sxs-lookup"><span data-stu-id="70ea2-111">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can use one or more lexicons to guide its pronunciation of words.</span></span>  
  
-   <span data-ttu-id="70ea2-112">Per modificare il recapito dell'output vocale, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> e <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="70ea2-112">To modify the delivery of speech output, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> properties.</span></span>  
  
 <span data-ttu-id="70ea2-113">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> genera eventi quando si verificano determinate funzionalità nei prompt: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, e <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span><span class="sxs-lookup"><span data-stu-id="70ea2-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises events when it encounters certain features in prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span></span> <span data-ttu-id="70ea2-114">Genera anche gli eventi che segnalano all'inizio (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) e di fine (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) di pronunciare le operazioni e sulla modifica della voce parlante (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span><span class="sxs-lookup"><span data-stu-id="70ea2-114">It also raises events that report on the start (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) and end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) of speak operations and on the change of the speaking voice (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70ea2-115">Chiamare sempre il metodo <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-115">Always call <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> before you release your last reference to the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="70ea2-116">In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Speech.Synthesis.SpeechSynthesizer> dell'oggetto <xref:System.Object.Finalize%2A> non viene richiamato dal Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="70ea2-116">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Speech.Synthesis.SpeechSynthesizer> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-117">Nell'esempio seguente fa parte di un'applicazione console che consente di inizializzare una <xref:System.Speech.Synthesis.SpeechSynthesizer> dell'oggetto e legge una stringa.</span><span class="sxs-lookup"><span data-stu-id="70ea2-117">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and speaks a string.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string.  
      synth.Speak("This example demonstrates a basic use of Speech Synthesizer");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="T:System.Speech.Synthesis.Prompt" />
    <altmember cref="T:System.Speech.Synthesis.PromptBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechSynthesizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-118">Inizializza una nuova istanza della classe <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-118">Initializes a new instance of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-119">Quando si inizializza un nuovo <xref:System.Speech.Synthesis.SpeechSynthesizer> istanza, Usa la voce di sistema predefinito.</span><span class="sxs-lookup"><span data-stu-id="70ea2-119">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, it uses the default system voice.</span></span> <span data-ttu-id="70ea2-120">Per configurare il <xref:System.Speech.Synthesis.SpeechSynthesizer> per usare una delle voci di sintesi vocale installato, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-120">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="70ea2-121">Per ottenere informazioni su quali sono installate voci, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodo e <xref:System.Speech.Synthesis.VoiceInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="70ea2-121">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public void AddLexicon (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLexicon(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLexicon(Uri ^ uri, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="member this.AddLexicon : Uri * string -&gt; unit" Usage="speechSynthesizer.AddLexicon (uri, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="70ea2-122">Il percorso delle informazioni del lessico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-122">The location of the lexicon information.</span>
          </span>
        </param>
        <param name="mediaType">
          <span data-ttu-id="70ea2-123">Tipo di supporto del lessico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-123">The media type of the lexicon.</span>
          </span>
          <span data-ttu-id="70ea2-124">Per i valori dei tipi di supporti non viene fatta la distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-124">Media type values are not case sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-125">Aggiunge un lessico all'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-125">Adds a lexicon to the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-126">Un lessico pronuncia è una raccolta di parole o frasi con le pronunce, costituiti da lettere e caratteri di un alfabeto fonetico supportato.</span><span class="sxs-lookup"><span data-stu-id="70ea2-126">A pronunciation lexicon is a collection of words or phrases together with their pronunciations, which consist of letters and characters from a supported phonetic alphabet.</span></span> <span data-ttu-id="70ea2-127">È possibile usare un lessico per specificare le pronunce personalizzate per il vocabolario specializzata nell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="70ea2-127">You can use a lexicon to specify custom pronunciations for specialized vocabulary in your application.</span></span>  
  
 <span data-ttu-id="70ea2-128">Le pronunce specificate in un file di lessico esterni hanno la precedenza sulla pronuncia del lessico interno o un dizionario di sintetizzatore vocale.</span><span class="sxs-lookup"><span data-stu-id="70ea2-128">Pronunciations specified in an external lexicon file take precedence over the pronunciations of the speech synthesizer's internal lexicon or dictionary.</span></span> <span data-ttu-id="70ea2-129">Tuttavia, le pronunce specificate inline in istruzioni create con uno qualsiasi dei <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, o <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> metodi hanno la precedenza sulle pronunce specificate in qualsiasi lessico.</span><span class="sxs-lookup"><span data-stu-id="70ea2-129">However, pronunciations specified inline in prompts created with any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods take precedence over pronunciations specified in any lexicon.</span></span> <span data-ttu-id="70ea2-130">Le pronunce inline si applicano solo a una singola occorrenza di una parola.</span><span class="sxs-lookup"><span data-stu-id="70ea2-130">Inline pronunciations apply only to a single occurrence of a word.</span></span> <span data-ttu-id="70ea2-131">Visualizzare [dizionari e alfabeti fonetici](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) per altre informazioni.</span><span class="sxs-lookup"><span data-stu-id="70ea2-131">See [Lexicons and Phonetic Alphabets](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) for more information.</span></span>  
  
 <span data-ttu-id="70ea2-132">È possibile aggiungere più dizionari per un <xref:System.Speech.Synthesis.SpeechSynthesizer> oggetto. Due valori sono attualmente supportati per il `mediaType` parametro:</span><span class="sxs-lookup"><span data-stu-id="70ea2-132">You can add multiple lexicons to a <xref:System.Speech.Synthesis.SpeechSynthesizer> object.Two values are currently supported for the `mediaType` parameter:</span></span>  
  
-   <span data-ttu-id="70ea2-133">Il valore `application/pls+xml` indica che è il lessico conforme per il [pronuncia lessico specifica (PLS) versione 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</span><span class="sxs-lookup"><span data-stu-id="70ea2-133">The value `application/pls+xml` indicates that the lexicon conforms to the [Pronunciation Lexicon Specification (PLS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</span></span> <span data-ttu-id="70ea2-134">Questo è il formato preferito da usare.</span><span class="sxs-lookup"><span data-stu-id="70ea2-134">This is the preferred format to use.</span></span>  
  
-   <span data-ttu-id="70ea2-135">Il valore `application/vdn.ms-sapi-lex` indica che il formato di lessico è lessico non compresso, ovvero un formato proprietaria Microsoft.</span><span class="sxs-lookup"><span data-stu-id="70ea2-135">The value `application/vdn.ms-sapi-lex` indicates that the lexicon format is Uncompressed Lexicon, which is a Microsoft-proprietary format.</span></span> <span data-ttu-id="70ea2-136">Si tratta di un formato legacy ed è consigliabile usare il formato PLS descritto in precedenza.</span><span class="sxs-lookup"><span data-stu-id="70ea2-136">This is a legacy format and we recommend that you use the PLS format described above.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-137">L'esempio seguente illustra l'effetto dell'aggiunta e rimozione di un dizionario che contiene una pronuncia personalizzata per la parola "blue".</span><span class="sxs-lookup"><span data-stu-id="70ea2-137">The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word "blue".</span></span> <span data-ttu-id="70ea2-138">Lessico definisce la pronuncia del "blue" sembrare "bleep".</span><span class="sxs-lookup"><span data-stu-id="70ea2-138">The lexicon defines the pronunciation of "blue" to sound like "bleep".</span></span> <span data-ttu-id="70ea2-139">Durante il caricamento di lessico, sintetizzatore vocale utilizza la pronuncia definita in lessico.</span><span class="sxs-lookup"><span data-stu-id="70ea2-139">While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Add a lexicon that changes the pronunciation of "blue".  
        synth.AddLexicon(new Uri("C:\\test\\Blue.pls"), "application/pls+xml");  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Remove the lexicon.  
        synth.RemoveLexicon(new Uri("C:\\test\\Blue.pls"));  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="70ea2-140">Ecco il contenuto del file di lessico Blue.pls:</span><span class="sxs-lookup"><span data-stu-id="70ea2-140">Following are the contents of the lexicon file Blue.pls:</span></span>  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
  
<lexicon version="1.0"   
      xmlns="http://www.w3.org/2005/01/pronunciation-lexicon"  
      alphabet="x-microsoft-ups" xml:lang="en-US">  
  
  <lexeme>  
    <grapheme> blue </grapheme>  
    <phoneme> B L I P </phoneme>  
  </lexeme>  
  
</lexicon>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of BookmarkReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::BookmarkReachedEventArgs ^&gt; ^ BookmarkReached;" />
      <MemberSignature Language="F#" Value="member this.BookmarkReached : EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; " Usage="member this.BookmarkReached : System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-141">Generato quando <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> rileva un segnalibro in un prompt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-141">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encounters a bookmark in a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-142">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> l'evento viene generato durante l'elaborazione di uno qualsiasi dei <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-142">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="70ea2-143">Per informazioni sui dati associati all'evento, vedere <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-143">For information about data associated with the event, see <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span></span>  
  
 <span data-ttu-id="70ea2-144">È possibile aggiungere segnalibri usando la <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-144">You can add bookmarks using the <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-145">L'esempio seguente crea una richiesta che include due segnalibri e invia l'output in un file WAV per la riproduzione.</span><span class="sxs-lookup"><span data-stu-id="70ea2-145">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="70ea2-146">Il gestore per il <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> eventi scrive il nome del segnalibro e la posizione nel flusso audio quando è stato generato l'evento nella console.</span><span class="sxs-lookup"><span data-stu-id="70ea2-146">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="speechSynthesizer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-147">Elimina l'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> e rilascia le risorse usate durante la sessione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-147">Disposes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object and releases resources used during the session.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SpeechSynthesizer ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="speechSynthesizer.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-148">Agisce da misura di sicurezza per la pulizia delle risorse nel caso in cui il metodo <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> non venga chiamato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-148">Acts as a safeguard to clean up resources in the event that the <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> method is not called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentlySpokenPrompt">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentlySpokenPrompt () As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ GetCurrentlySpokenPrompt();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentlySpokenPrompt : unit -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.GetCurrentlySpokenPrompt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-149">Ottiene il prompt che <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> sta parlando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-149">Gets the prompt that the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> is speaking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70ea2-150">Restituisce l'oggetto messaggio di richiesta attualmente pronunciato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-150">Returns the prompt object that is currently being spoken.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstalledVoices">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-151">Restituisce la raccolta di voci di sintesi attualmente installate nel sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-151">Returns the collection of speech synthesis (text-to-speech) voices that are currently installed on the system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-152">Quando un'applicazione chiama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, il metodo verifica che ognuna delle voci (motori di sintesi vocale) si trova nei Registro di sistema in uso soddisfi alcuni criteri minimi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-152">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices (engines for text-to-speech) it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="70ea2-153">Per qualsiasi voce che si verifica un errore di verifica <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> imposta relativi <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="70ea2-153">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="70ea2-154">Un'applicazione non è possibile selezionare una voce il cui <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> è di proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="70ea2-154">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="70ea2-155">In genere, le applicazioni non verranno impostata una voce <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="70ea2-155">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices () As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices();" />
      <MemberSignature Language="F#" Value="member this.GetInstalledVoices : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;" Usage="speechSynthesizer.GetInstalledVoices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-156">Restituisce tutte le voci di sintesi vocale installate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-156">Returns all of the installed speech synthesis (text-to-speech) voices.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70ea2-157">Restituisce una raccolta di sola lettura delle voci attualmente installate nel sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-157">Returns a read-only collection of the voices currently installed on the system.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-158">Una voce è un motore di sintesi vocale (sintesi vocale o TTS) installato nel sistema.</span><span class="sxs-lookup"><span data-stu-id="70ea2-158">A voice is an engine for speech synthesis (text-to-speech or TTS) that is installed on the system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-159">Nell'esempio seguente fa parte di un'applicazione console che consente di inizializzare una <xref:System.Speech.Synthesis.SpeechSynthesizer> dell'oggetto e genera output sulla console un elenco delle voci installate (motori per la sintesi vocale) e illustra le informazioni che sono disponibile per ogni voce.</span><span class="sxs-lookup"><span data-stu-id="70ea2-159">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices (culture As CultureInfo) As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.GetInstalledVoices : System.Globalization.CultureInfo -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;" Usage="speechSynthesizer.GetInstalledVoices culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="70ea2-160">Le impostazioni locali che la voce deve supportare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-160">The locale that the voice must support.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-161">Restituisce tutte le voci di sintesi vocale installate che supportano le impostazioni locali specifiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-161">Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70ea2-162">Restituisce una raccolta di sola lettura delle voci attualmente installate nel sistema che supportano le impostazioni locali specificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-162">Returns a read-only collection of the voices currently installed on the system that support the specified locale.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-163">Se nessuna parte del supporto di voci installate le impostazioni locali specificate, questo metodo restituisce una raccolta vuota.</span><span class="sxs-lookup"><span data-stu-id="70ea2-163">If none of the installed voices support the specified locale, this method returns an empty collection.</span></span>  
  
 <span data-ttu-id="70ea2-164">Microsoft Windows e l'API System. Speech accettare tutti i codici dei paesi di lingua validi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-164">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="70ea2-165">Per eseguire la sintesi vocale usando la lingua specificata nella proprietà delle impostazioni cultura, deve essere installato un motore di sintesi vocale che supporta codice paese di linguaggio.</span><span class="sxs-lookup"><span data-stu-id="70ea2-165">To perform text-to-speech using the language specified in the Culture property, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="70ea2-166">I motori di sintesi vocale fornita con Microsoft Windows 7 funzionano con i codici dei paesi di lingua seguenti:</span><span class="sxs-lookup"><span data-stu-id="70ea2-166">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="70ea2-167">en-US.</span><span class="sxs-lookup"><span data-stu-id="70ea2-167">en-US.</span></span> <span data-ttu-id="70ea2-168">Inglese (Stati Uniti)</span><span class="sxs-lookup"><span data-stu-id="70ea2-168">English (United States)</span></span>  
  
-   <span data-ttu-id="70ea2-169">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="70ea2-169">zh-CN.</span></span> <span data-ttu-id="70ea2-170">Cinese (Cina)</span><span class="sxs-lookup"><span data-stu-id="70ea2-170">Chinese (China)</span></span>  
  
-   <span data-ttu-id="70ea2-171">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="70ea2-171">zh-TW.</span></span> <span data-ttu-id="70ea2-172">Cinese (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="70ea2-172">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="70ea2-173">Sono inoltre consentiti i codici di lingua di due lettere, ad esempio "en".</span><span class="sxs-lookup"><span data-stu-id="70ea2-173">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-174">Nell'esempio seguente fa parte di un'applicazione console che consente di inizializzare una <xref:System.Speech.Synthesis.SpeechSynthesizer> e visualizza nella console un elenco delle voci installate che supportano le impostazioni locali en-US.</span><span class="sxs-lookup"><span data-stu-id="70ea2-174">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.</span></span>  
  
```csharp  
using System;  
using System.Globalization;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices that  
        // support the en-US locacale.   
        Console.WriteLine("Installed voices for the en-US locale:");  
        foreach (InstalledVoice voice in  
          synthesizer.GetInstalledVoices(new CultureInfo("en-US")))  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          OutputVoiceInfo(info);  
        }  
  
        // Output information about the current voice.  
        Console.WriteLine();  
        Console.WriteLine("Current voice:");  
        OutputVoiceInfo(synthesizer.Voice);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Display information about a synthesizer voice.  
    private static void OutputVoiceInfo(VoiceInfo info)  
    {  
      Console.WriteLine("  Name: {0}, culture: {1}, gender: {2}, age: {3}.",  
        info.Name, info.Culture, info.Gender, info.Age);  
      Console.WriteLine("    Description: {0}", info.Description);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="speechSynthesizer.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-175">Mette in pausa l'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-175">Pauses the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="PhonemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PhonemeReached As EventHandler(Of PhonemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::PhonemeReachedEventArgs ^&gt; ^ PhonemeReached;" />
      <MemberSignature Language="F#" Value="member this.PhonemeReached : EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; " Usage="member this.PhonemeReached : System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-176">Generato quando viene raggiunto un fonema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-176">Raised when a phoneme is reached.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-177">Un fonema è un componente di base del linguaggio scritto, in genere una lettera di un alfabeto (o la combinazione di due lettere) che rappresenta uno o più suoni distinti.</span><span class="sxs-lookup"><span data-stu-id="70ea2-177">A phoneme is a basic component of written language, typically a letter of an alphabet (or the combination of two letters) that represents one or more distinct sounds.</span></span> <span data-ttu-id="70ea2-178">Ad esempio, la lettera "c" è un fonema che possa sembrare, ad esempio "s" in "considerato", oppure come "k" in "catch".</span><span class="sxs-lookup"><span data-stu-id="70ea2-178">For example, the letter "c" is a phoneme that may sound like "s" in "cinder", or like "k" in "catch".</span></span> <span data-ttu-id="70ea2-179">Una parola scritta è una raccolta di fonemi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-179">A written word is an assemblage of phonemes.</span></span> <span data-ttu-id="70ea2-180">Modifica di una parola un fonema modificheranno l'ortografici.</span><span class="sxs-lookup"><span data-stu-id="70ea2-180">Changing a phoneme in a word will alter its spelling.</span></span>  
  
 <span data-ttu-id="70ea2-181">Oggetto <xref:System.Speech.Synthesis.SpeechSynthesizer> istanza genera un <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> evento per ogni parte di una parola che costituisce un fonema.</span><span class="sxs-lookup"><span data-stu-id="70ea2-181">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instance generates a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event for each portion of a word that constitutes a phoneme.</span></span> <span data-ttu-id="70ea2-182">Ad esempio, per la parola "tema" generano tre <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> eventi, una per l'audio "th", uno per l'audio "e" e uno per l'audio "m" (me).</span><span class="sxs-lookup"><span data-stu-id="70ea2-182">For example, for the word "theme" would generate three <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> events; one for the "th" sound, one for the "e" sound, and one for the "m" sound (me).</span></span>  
  
 <span data-ttu-id="70ea2-183">Per un esempio e informazioni relative ai dati associati all'evento, vedere <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-183">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rate { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Rate : int with get, set" Usage="System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-184">Ottiene o imposta la velocità di pronuncia dell'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-184">Gets or sets the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70ea2-185">Restituisce la velocità di pronuncia dell'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, da -10 a 10.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-185">Returns the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object, from -10 through 10.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="70ea2-186">Nell'esempio seguente legge una stringa con la velocità di pronuncia impostata su -2.</span><span class="sxs-lookup"><span data-stu-id="70ea2-186">The following example speaks a string with the speaking rate set to -2.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Set a value for the speaking rate.  
      synth.Rate = -2;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a text string synchronously.  
      synth.Speak("This example speaks a string with the speaking rate set to -2.");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }     
  }    
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.PromptStyle" />
        <altmember cref="T:System.Speech.Synthesis.PromptRate" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public void RemoveLexicon (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLexicon(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLexicon(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.RemoveLexicon : Uri -&gt; unit" Usage="speechSynthesizer.RemoveLexicon uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="70ea2-187">Il percorso del documento di lessico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-187">The location of the lexicon document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-188">Rimuove un lessico dall'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-188">Removes a lexicon from the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-189">Per un esempio, vedere <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-189">See <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="speechSynthesizer.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-190">Riprende l'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> dopo che è stato messo in pausa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-190">Resumes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object after it has been paused.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoice">
      <MemberSignature Language="C#" Value="public void SelectVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoice(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.SelectVoice : string -&gt; unit" Usage="speechSynthesizer.SelectVoice name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="70ea2-191">Nome della voce da selezionare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-191">The name of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-192">Seleziona una voce specifica per nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-192">Selects a specific voice by name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-193">Usare la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodo e <xref:System.Speech.Synthesis.VoiceInfo> per ottenere i nomi di classe installato voci di sintesi vocale (TTS) che è possibile selezionare.</span><span class="sxs-lookup"><span data-stu-id="70ea2-193">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="70ea2-194">Per selezionare una voce, passare l'intero contenuto del <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> proprietà come argomento per il <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-194">To select a voice, pass the entire contents of the <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> property as the argument for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span> <span data-ttu-id="70ea2-195">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> oggetto consente di selezionare la prima voce installata contenente `name` la voce <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="70ea2-195">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that contains `name` in the voice's <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="70ea2-196">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> esegue un confronto tra maiuscole e minuscole, sottostringa per determinare se la voce corrisponde il `name`.</span><span class="sxs-lookup"><span data-stu-id="70ea2-196">The <xref:System.Speech.Synthesis.SpeechSynthesizer> performs a case-sensitive, substring comparison to determine if the voice matches the `name`.</span></span>  
  
 <span data-ttu-id="70ea2-197">Quando un'applicazione chiama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, il metodo verifica che ognuna delle voci trova nel Registro di sistema soddisfa determinati criteri minimi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-197">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="70ea2-198">Per qualsiasi voce che si verifica un errore di verifica <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> imposta relativi <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="70ea2-198">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="70ea2-199">Un'applicazione non è possibile selezionare una voce il cui <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> è di proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="70ea2-199">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="70ea2-200">In genere, le applicazioni non verranno impostata una voce <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="70ea2-200">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="70ea2-201">Per selezionare una voce relativa al sesso, età o delle impostazioni locali, usare uno del <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-201">To select a voice by gender, age, or locale, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectVoiceByHints">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-202">Seleziona una voce con caratteristiche specifiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-202">Selects a voice with specific characteristics.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-203">Usare la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodo e <xref:System.Speech.Synthesis.VoiceInfo> per ottenere i nomi di classe installato voci di sintesi vocale (TTS) che è possibile selezionare.</span><span class="sxs-lookup"><span data-stu-id="70ea2-203">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="70ea2-204">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> oggetto consente di selezionare la prima voce installata che corrisponde alle caratteristiche specificate.</span><span class="sxs-lookup"><span data-stu-id="70ea2-204">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that matches the specified characteristics.</span></span>  
  
 <span data-ttu-id="70ea2-205">Quando un'applicazione chiama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, il metodo verifica che ognuna delle voci trova nel Registro di sistema soddisfa determinati criteri minimi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-205">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="70ea2-206">Per qualsiasi voce che si verifica un errore di verifica <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> imposta relativi <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="70ea2-206">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="70ea2-207">Un'applicazione non è possibile selezionare una voce il cui <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> è di proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="70ea2-207">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="70ea2-208">In genere, le applicazioni non verranno impostata una voce <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="70ea2-208">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="70ea2-209">Per selezionare una voce in base al nome, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (metodo)</span><span class="sxs-lookup"><span data-stu-id="70ea2-209">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints gender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="70ea2-210">Il genere della voce da selezionare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-210">The gender of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-211">Seleziona una voce con genere specifico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-211">Selects a voice with a specific gender.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-212">Usare la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodo e <xref:System.Speech.Synthesis.VoiceInfo> per ottenere i nomi di classe installato voci di sintesi vocale (TTS) che è possibile selezionare.</span><span class="sxs-lookup"><span data-stu-id="70ea2-212">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="70ea2-213">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> oggetto consente di selezionare la prima voce installata cui <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> corrispondenze di proprietà di `gender` parametro.</span><span class="sxs-lookup"><span data-stu-id="70ea2-213">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property matches the `gender` parameter.</span></span>  
  
 <span data-ttu-id="70ea2-214">Quando un'applicazione chiama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, il metodo verifica che ognuna delle voci trova nel Registro di sistema soddisfa determinati criteri minimi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-214">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="70ea2-215">Per qualsiasi voce che si verifica un errore di verifica <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> imposta relativi <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="70ea2-215">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="70ea2-216">Un'applicazione non è possibile selezionare una voce il cui <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> è di proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="70ea2-216">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="70ea2-217">In genere, le applicazioni non verranno impostata una voce <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="70ea2-217">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="70ea2-218">Per selezionare una voce in base ad altre caratteristiche, vedere l'altro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-218">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="70ea2-219">Per selezionare una voce in base al nome, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-219">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="70ea2-220">Il genere della voce da selezionare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-220">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="70ea2-221">L'età della voce da selezionare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-221">The age of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-222">Seleziona una voce con genere ed età specifici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-222">Selects a voice with a specific gender and age.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-223">Usare la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodo e <xref:System.Speech.Synthesis.VoiceInfo> per ottenere i nomi di classe installato voci di sintesi vocale (TTS) che è possibile selezionare.</span><span class="sxs-lookup"><span data-stu-id="70ea2-223">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="70ea2-224">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> oggetto consente di selezionare la voce installata prima la cui <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> e <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> proprietà corrispondenti di `gender` e `age` parametri.</span><span class="sxs-lookup"><span data-stu-id="70ea2-224">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span>  
  
 <span data-ttu-id="70ea2-225">Quando un'applicazione chiama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, il metodo verifica che ognuna delle voci trova nel Registro di sistema soddisfa determinati criteri minimi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-225">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="70ea2-226">Per qualsiasi voce che si verifica un errore di verifica <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> imposta relativi <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="70ea2-226">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="70ea2-227">Un'applicazione non è possibile selezionare una voce il cui <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> è di proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="70ea2-227">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="70ea2-228">In genere, le applicazioni non verranno impostata una voce <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="70ea2-228">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="70ea2-229">Per selezionare una voce in base ad altre caratteristiche, vedere l'altro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-229">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="70ea2-230">Per selezionare una voce in base al nome, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-230">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age, voiceAlternate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="70ea2-231">Il genere della voce da selezionare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-231">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="70ea2-232">L'età della voce da selezionare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-232">The age of the voice to select.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="70ea2-233">La posizione della voce da selezionare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-233">The position of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-234">Seleziona una voce con genere ed età specifici, in base alla posizione in cui le voci sono ordinate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-234">Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-235">Usare la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodo e <xref:System.Speech.Synthesis.VoiceInfo> per ottenere i nomi di classe installato voci di sintesi vocale (TTS) che è possibile selezionare.</span><span class="sxs-lookup"><span data-stu-id="70ea2-235">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="70ea2-236">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> dell'oggetto trova installato voices la cui proprietà <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> e <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> proprietà corrispondenti di `gender` e `age` parametri.</span><span class="sxs-lookup"><span data-stu-id="70ea2-236">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds installed voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span> <span data-ttu-id="70ea2-237">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> conta le corrispondenze che trova e restituisce la vocale quando il conteggio è uguale al `voiceAlternate` parametro.</span><span class="sxs-lookup"><span data-stu-id="70ea2-237">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="70ea2-238">Quando un'applicazione chiama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, il metodo verifica che ognuna delle voci trova nel Registro di sistema soddisfa determinati criteri minimi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-238">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="70ea2-239">Per qualsiasi voce che si verifica un errore di verifica <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> imposta relativi <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="70ea2-239">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="70ea2-240">Un'applicazione non è possibile selezionare una voce il cui <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> è di proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="70ea2-240">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="70ea2-241">In genere, le applicazioni non verranno impostata una voce <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="70ea2-241">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="70ea2-242">Per selezionare una voce in base ad altre caratteristiche, vedere l'altro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overload.</span><span class="sxs-lookup"><span data-stu-id="70ea2-242">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="70ea2-243">Per selezionare una voce in base al nome, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-243">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int * System.Globalization.CultureInfo -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age, voiceAlternate, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="70ea2-244">Il genere della voce da selezionare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-244">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="70ea2-245">L'età della voce da selezionare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-245">The age of the voice to select.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="70ea2-246">La posizione della voce da selezionare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-246">The position of the voice to select.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="70ea2-247">Le impostazioni locali della voce da selezionare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-247">The locale of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-248">Seleziona una voce con genere, età e impostazioni locali specifici, in base alla posizione in cui le voci sono ordinate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-248">Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-249">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> dell'oggetto trova voices la cui proprietà <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, e <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> proprietà corrispondenti di `gender`, `age`, e `culture` parametri.</span><span class="sxs-lookup"><span data-stu-id="70ea2-249">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, and <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> properties match the `gender`, `age`, and `culture` parameters.</span></span> <span data-ttu-id="70ea2-250">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> conta le corrispondenze che trova e restituisce la vocale quando il conteggio è uguale al `voiceAlternate` parametro.</span><span class="sxs-lookup"><span data-stu-id="70ea2-250">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="70ea2-251">Microsoft Windows e l'API System. Speech accettare tutti i codici dei paesi di lingua validi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-251">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="70ea2-252">Per eseguire la sintesi vocale usando la lingua specificata nel `culture` parametro, un motore di sintesi vocale che supporta che codice paese di linguaggio deve essere installato.</span><span class="sxs-lookup"><span data-stu-id="70ea2-252">To perform text-to-speech using the language specified in the `culture` parameter, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="70ea2-253">I motori di sintesi vocale fornita con Microsoft Windows 7 funzionano con i codici dei paesi di lingua seguenti:</span><span class="sxs-lookup"><span data-stu-id="70ea2-253">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="70ea2-254">en-US.</span><span class="sxs-lookup"><span data-stu-id="70ea2-254">en-US.</span></span> <span data-ttu-id="70ea2-255">Inglese (Stati Uniti)</span><span class="sxs-lookup"><span data-stu-id="70ea2-255">English (United States)</span></span>  
  
-   <span data-ttu-id="70ea2-256">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="70ea2-256">zh-CN.</span></span> <span data-ttu-id="70ea2-257">Cinese (Cina)</span><span class="sxs-lookup"><span data-stu-id="70ea2-257">Chinese (China)</span></span>  
  
-   <span data-ttu-id="70ea2-258">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="70ea2-258">zh-TW.</span></span> <span data-ttu-id="70ea2-259">Cinese (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="70ea2-259">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="70ea2-260">Sono inoltre consentiti i codici di lingua di due lettere, ad esempio "en".</span><span class="sxs-lookup"><span data-stu-id="70ea2-260">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 <span data-ttu-id="70ea2-261">Quando un'applicazione chiama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, il metodo verifica che ognuna delle voci trova nel Registro di sistema soddisfa determinati criteri minimi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-261">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="70ea2-262">Per qualsiasi voce che si verifica un errore di verifica <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> imposta relativi <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="70ea2-262">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="70ea2-263">Un'applicazione non è possibile selezionare una voce il cui <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> è di proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="70ea2-263">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="70ea2-264">In genere, le applicazioni non verranno impostata una voce <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="70ea2-264">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="70ea2-265">Per selezionare una voce in base ad altre caratteristiche, vedere l'altro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overload.</span><span class="sxs-lookup"><span data-stu-id="70ea2-265">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="70ea2-266">Per selezionare una voce in base al nome, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-266">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToAudioStream">
      <MemberSignature Language="C#" Value="public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToAudioStream(class System.IO.Stream audioDestination, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToAudioStream (audioDestination As Stream, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToAudioStream(System::IO::Stream ^ audioDestination, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToAudioStream : System.IO.Stream * System.Speech.AudioFormat.SpeechAudioFormatInfo -&gt; unit" Usage="speechSynthesizer.SetOutputToAudioStream (audioDestination, formatInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="audioDestination">
          <span data-ttu-id="70ea2-267">Flusso in cui aggiungere l'output di sintesi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-267">The stream to which to append synthesis output.</span>
          </span>
        </param>
        <param name="formatInfo">
          <span data-ttu-id="70ea2-268">Il formato da utilizzare per l'output di sintesi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-268">The format to use for the synthesis output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-269">Configura l'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> per aggiungere l'output a un flusso audio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-269">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to an audio stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-270">Chiamare <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> per rilasciare il <xref:System.Speech.Synthesis.SpeechSynthesizer>del riferimento al flusso.</span><span class="sxs-lookup"><span data-stu-id="70ea2-270">Call <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the stream.</span></span>  
  
 <span data-ttu-id="70ea2-271">Per altre opzioni di configurazione di output, vedere la <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, e <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-271">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToDefaultAudioDevice">
      <MemberSignature Language="C#" Value="public void SetOutputToDefaultAudioDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToDefaultAudioDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToDefaultAudioDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToDefaultAudioDevice();" />
      <MemberSignature Language="F#" Value="member this.SetOutputToDefaultAudioDevice : unit -&gt; unit" Usage="speechSynthesizer.SetOutputToDefaultAudioDevice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-272">Configura l'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> per inviare l'output al dispositivo audio predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-272">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to send output to the default audio device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-273">È possibile usare la **suono** finestra di Windows **Pannello di controllo** per configurare il dispositivo audio predefinito per il computer.</span><span class="sxs-lookup"><span data-stu-id="70ea2-273">You can use the  **Sound** window in the Windows **Control Panel** to configure the default audio device for the computer.</span></span>  
  
 <span data-ttu-id="70ea2-274">Per altre opzioni di configurazione di output, vedere la <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, e <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-274">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-275">L'esempio seguente usa al sintetizzatore di pronunciare una frase all'output audio predefinito.</span><span class="sxs-lookup"><span data-stu-id="70ea2-275">The following example uses the synthesizer to speak a phrase to the default audio output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the synthesizer to send output to the default audio device.  
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToNull">
      <MemberSignature Language="C#" Value="public void SetOutputToNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToNull();" />
      <MemberSignature Language="F#" Value="member this.SetOutputToNull : unit -&gt; unit" Usage="speechSynthesizer.SetOutputToNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-276">Configura l'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> per non inviare l'output dalle operazioni di sintesi di un dispositivo, file o flusso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-276">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to not send output from synthesis operations to a device, file, or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-277">Utilizzare questo metodo per rilasciare il <xref:System.Speech.Synthesis.SpeechSynthesizer> del riferimento a un flusso o file.</span><span class="sxs-lookup"><span data-stu-id="70ea2-277">Use this method to release the <xref:System.Speech.Synthesis.SpeechSynthesizer> ‘s reference to a file or stream.</span></span> <span data-ttu-id="70ea2-278">Per un esempio, vedere <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-278">See <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> for an example.</span></span>  
  
 <span data-ttu-id="70ea2-279">Per altre opzioni di configurazione di output, vedere la <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, e <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-279">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputToWaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-280">Configura l'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> per aggiungere l'output a un file in formato audio Waveform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-280">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-281">Per rilasciare il <xref:System.Speech.Synthesis.SpeechSynthesizer>del riferimento al file, riconfigurare il <xref:System.Speech.Synthesis.SpeechSynthesizer>di output, ad esempio, chiamando <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-281">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the file, reconfigure the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="70ea2-282">Per altre opzioni di configurazione di output, vedere la <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, e <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-282">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveFile : string -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="70ea2-283">Percorso del file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-283">The path to the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-284">Configura l'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> per aggiungere l'output a un file che contiene l'audio in formato Waveform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-284">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a file that contains Waveform format audio.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-285">Per configurare l'output e specificare il formato audio, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-285">To configure the output and specify the audio format, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-286">L'esempio seguente usa un'istanza di <xref:System.Media.SoundPlayer> per riprodurre una richiesta che è stata l'output a un file wav.</span><span class="sxs-lookup"><span data-stu-id="70ea2-286">The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file.</span></span> <span data-ttu-id="70ea2-287">Poiché il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> chiamata è asincrona, il <xref:System.Media.SoundPlayer> istanza viene creata (e il <xref:System.Media.SoundPlayer.Play%2A> metodo richiamato) nel gestore per il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> evento.</span><span class="sxs-lookup"><span data-stu-id="70ea2-287">Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToWaveFile(@"C:\Test\Sample.wav");  
  
      // Register for the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Build a prompt.  
      PromptBuilder builder = new PromptBuilder();  
      builder.AppendText("This sample asynchronously speaks a prompt to a WAVE file.");  
  
      // Speak the string asynchronously.  
      synth.SpeakAsync(builder);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Handle the SpeakCompleted event.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
  
      // Create a SoundPlayer instance to play the output audio file.  
      System.Media.SoundPlayer m_SoundPlayer =  
        new System.Media.SoundPlayer(@"C:\Test\Sample.wav");  
  
      //  Play the output file.  
      m_SoundPlayer.Play();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveFile : string * System.Speech.AudioFormat.SpeechAudioFormatInfo -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveFile (path, formatInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="70ea2-288">Percorso del file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-288">The path to the file.</span>
          </span>
        </param>
        <param name="formatInfo">
          <span data-ttu-id="70ea2-289">Informazioni sul formato audio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-289">The audio format information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-290">Configura l'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> per aggiungere l'output a un file in formato audio Waveform in un formato specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-290">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file in a specified format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="70ea2-291">Nell'esempio seguente specifica il formato dell'output di sintesi vocale e lo invia a un file WAV.</span><span class="sxs-lookup"><span data-stu-id="70ea2-291">The following example specifies the format of the output of speech synthesis and sends it to a WAV file.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveStream">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveStream (System.IO.Stream audioDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveStream(class System.IO.Stream audioDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveStream (audioDestination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveStream(System::IO::Stream ^ audioDestination);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveStream : System.IO.Stream -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveStream audioDestination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioDestination">
          <span data-ttu-id="70ea2-292">Flusso in cui aggiungere l'output di sintesi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-292">The stream to which to append synthesis output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-293">Configura l'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> per aggiungere l'output a un flusso che contiene l'audio in formato Waveform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-293">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a stream that contains Waveform format audio.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-294">Per rilasciare il <xref:System.Speech.Synthesis.SpeechSynthesizer>del riferimento per il flusso, reconfigure sintetizzatore l'output, ad esempio, chiamando <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-294">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s reference to the stream, reconfigure the synthesizer's output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="70ea2-295">Per altre opzioni di configurazione di output, vedere la <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, e <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-295">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-296">Nell'esempio seguente vengono restituite una frase in un flusso WAV.</span><span class="sxs-lookup"><span data-stu-id="70ea2-296">The following example outputs a phrase to a WAV stream.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      using (MemoryStream stream = new MemoryStream())  
      {  
  
        // Create a SoundPlayer instance to play the output audio file.  
        MemoryStream streamAudio = new MemoryStream();  
        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  
  
        // Configure the synthesizer to output to an audio stream.  
        synth.SetOutputToWaveStream(streamAudio);  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
        streamAudio.Position = 0;  
        m_SoundPlayer.Stream = streamAudio;  
        m_SoundPlayer.Play();  
  
        // Set the synthesizer output to null to release the stream.   
        synth.SetOutputToNull();  
  
        // Insert code to persist or process the stream contents here.  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Speak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-297">Genera l'output vocale in modo sincrono da una stringa, un oggetto <see cref="T:System.Speech.Synthesis.Prompt" /> o un oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-297">Generates speech output synchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-298">Il <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metodi generano il riconoscimento vocale in modo sincrono.</span><span class="sxs-lookup"><span data-stu-id="70ea2-298">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods generate speech synchronously.</span></span> <span data-ttu-id="70ea2-299">I metodi non restituiscono finché il contenuto di <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> istanza è stato completamente letto.</span><span class="sxs-lookup"><span data-stu-id="70ea2-299">The methods do not return until the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance has been completely spoken.</span></span> <span data-ttu-id="70ea2-300">Questo è il modo più semplice per generare il riconoscimento vocale.</span><span class="sxs-lookup"><span data-stu-id="70ea2-300">This is the simplest way to generate speech.</span></span> <span data-ttu-id="70ea2-301">Tuttavia, se l'applicazione deve eseguire le attività mentre si parla, ad esempio evidenziare il testo, l'animazione di disegno, i controlli di monitoraggio o altre attività, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> metodi o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metodo per generare il riconoscimento vocale in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="70ea2-301">However, if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method to generate speech asynchronously.</span></span>  
  
 <span data-ttu-id="70ea2-302">Durante una chiamata a questo metodo, il <xref:System.Speech.Synthesis.SpeechSynthesizer> può generare gli eventi seguenti:</span><span class="sxs-lookup"><span data-stu-id="70ea2-302">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="70ea2-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="70ea2-304">Generato quando cambia lo stato di pronuncia del sintetizzatore.</span><span class="sxs-lookup"><span data-stu-id="70ea2-304">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="70ea2-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="70ea2-306">Generato quando al sintetizzatore inizia la generazione del riconoscimento vocale.</span><span class="sxs-lookup"><span data-stu-id="70ea2-306">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="70ea2-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="70ea2-308">Generato ogni volta che al sintetizzatore raggiunge una lettera o una combinazione di lettere che costituiscono un suono discreto di riconoscimento vocale in un linguaggio.</span><span class="sxs-lookup"><span data-stu-id="70ea2-308">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="70ea2-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="70ea2-310">Generato ogni volta che al sintetizzatore completa a proposito di una parola.</span><span class="sxs-lookup"><span data-stu-id="70ea2-310">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="70ea2-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="70ea2-312">Generato ogni volta che l'output vocale richiede una modifica nella posizione di bocca o i muscoli più facciale utilizzati per produrre vocale.</span><span class="sxs-lookup"><span data-stu-id="70ea2-312">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="70ea2-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="70ea2-314">Generato quando al sintetizzatore rileva un segnalibro in un prompt dei comandi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-314">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="70ea2-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="70ea2-316">Generato quando cambia la voce per sintetizzatore.</span><span class="sxs-lookup"><span data-stu-id="70ea2-316">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="70ea2-317">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> non genera il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventi durante l'elaborazione di uno qualsiasi del <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-317">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.Speak : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.Speak prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="70ea2-318">Il contenuto da leggere a voce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-318">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-319">In modo sincrono sul contenuto di un oggetto di <see cref="T:System.Speech.Synthesis.Prompt" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-319">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-320">Da leggere a voce in modo asincrono il contenuto di un <xref:System.Speech.Synthesis.Prompt> dell'oggetto, usare <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-320">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-321">L'esempio seguente crea una <xref:System.Speech.Synthesis.Prompt> oggetto da una stringa e l'oggetto passato come argomento per il <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-321">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.Speak : System.Speech.Synthesis.PromptBuilder -&gt; unit" Usage="speechSynthesizer.Speak promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="70ea2-322">Il contenuto da leggere a voce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-322">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-323">In modo sincrono sul contenuto di un oggetto di <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-323">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-324">Da leggere a voce in modo asincrono il contenuto di un <xref:System.Speech.Synthesis.PromptBuilder> dell'oggetto, usare <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-324">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-325">L'esempio seguente crea una <xref:System.Speech.Synthesis.PromptBuilder> oggetto da una stringa e l'oggetto passato come argomento per il <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-325">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder song = new PromptBuilder();  
        song.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(song);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.Speak : string -&gt; unit" Usage="speechSynthesizer.Speak textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="70ea2-326">Testo da leggere a voce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-326">The text to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-327">In modo sincrono legge il contenuto di una stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-327">Synchronously speaks the contents of a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-328">Per parlare in modo sincrono una stringa che contiene il markup SSML, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-328">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="70ea2-329">Per presentare in modo asincrono i contenuti di una stringa, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-329">To asynchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-330">Come illustrato nell'esempio seguente il <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metodo fornisce il mezzo più semplice per generare il riconoscimento vocale in modo sincrono l'output.</span><span class="sxs-lookup"><span data-stu-id="70ea2-330">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method provides the simplest means to generate speech output synchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a string synchronously.  
        synth.Speak("What is your favorite color?");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SpeakAsync">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-331">Genera l'output vocale in modo asincrono da una stringa, un oggetto <see cref="T:System.Speech.Synthesis.Prompt" /> o un oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-331">Generates speech output asynchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-332">Il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> metodi generano il riconoscimento vocale in modo asincrono.</span><span class="sxs-lookup"><span data-stu-id="70ea2-332">The <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods generate speech asynchronously.</span></span> <span data-ttu-id="70ea2-333">I metodi restituiscono immediatamente senza attendere che il contenuto del <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> completamento parlando.</span><span class="sxs-lookup"><span data-stu-id="70ea2-333">The methods return immediately without waiting for the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> object to finish speaking.</span></span> <span data-ttu-id="70ea2-334">Usare <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> se l'applicazione deve eseguire le attività durante la pronuncia; ad esempio evidenziare il testo, disegnare animazione, i controlli di monitoraggio o altre attività.</span><span class="sxs-lookup"><span data-stu-id="70ea2-334">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks.</span></span>  
  
 <span data-ttu-id="70ea2-335">Durante una chiamata a questo metodo, il <xref:System.Speech.Synthesis.SpeechSynthesizer> può generare gli eventi seguenti:</span><span class="sxs-lookup"><span data-stu-id="70ea2-335">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="70ea2-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="70ea2-337">Generato quando cambia lo stato di pronuncia del sintetizzatore.</span><span class="sxs-lookup"><span data-stu-id="70ea2-337">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="70ea2-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="70ea2-339">Generato quando al sintetizzatore inizia la generazione del riconoscimento vocale.</span><span class="sxs-lookup"><span data-stu-id="70ea2-339">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="70ea2-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="70ea2-341">Generato ogni volta che al sintetizzatore raggiunge una lettera o una combinazione di lettere che costituiscono un suono discreto di riconoscimento vocale in un linguaggio.</span><span class="sxs-lookup"><span data-stu-id="70ea2-341">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="70ea2-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="70ea2-343">Generato ogni volta che al sintetizzatore completa a proposito di una parola.</span><span class="sxs-lookup"><span data-stu-id="70ea2-343">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="70ea2-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="70ea2-345">Generato ogni volta che l'output vocale richiede una modifica nella posizione di bocca o i muscoli più facciale utilizzati per produrre vocale.</span><span class="sxs-lookup"><span data-stu-id="70ea2-345">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="70ea2-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="70ea2-347">Generato quando al sintetizzatore rileva un segnalibro in un prompt dei comandi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-347">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="70ea2-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="70ea2-349">Generato quando cambia la voce per sintetizzatore.</span><span class="sxs-lookup"><span data-stu-id="70ea2-349">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="70ea2-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="70ea2-351">Generato quando viene completata al sintetizzatore un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operazione.</span><span class="sxs-lookup"><span data-stu-id="70ea2-351">Raised when the synthesizer finishes a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="70ea2-352">Se l'applicazione non è necessario eseguire attività mentre si parla, è possibile usare la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metodi o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> metodo per generare il riconoscimento vocale in modo sincrono.</span><span class="sxs-lookup"><span data-stu-id="70ea2-352">If your application does not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsync(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsync(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.SpeakAsync prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="70ea2-353">Il contenuto da leggere a voce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-353">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-354">In modo asincrono legge il contenuto di un oggetto di <see cref="T:System.Speech.Synthesis.Prompt" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-354">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-355">È possibile annullare la pronuncia asincrona di un prompt dei comandi con il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> o il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-355">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
 <span data-ttu-id="70ea2-356">Da leggere a voce in modo sincrono il contenuto di un <xref:System.Speech.Synthesis.Prompt> dell'oggetto, usare <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-356">To synchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-357">L'esempio seguente crea una <xref:System.Speech.Synthesis.Prompt> oggetto da una stringa e l'oggetto passato come argomento per il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-357">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a prompt from a string.  
      Prompt color = new Prompt("What is your favorite color?");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(color);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : System.Speech.Synthesis.PromptBuilder -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakAsync promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="70ea2-358">Il contenuto da leggere a voce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-358">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-359">In modo asincrono legge il contenuto di un oggetto di <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-359">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70ea2-360">Restituisce l'oggetto contenente il contenuto da leggere a voce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-360">Returns the object that contains the content to speak.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-361">Da leggere a voce in modo sincrono il contenuto di un <xref:System.Speech.Synthesis.PromptBuilder> dell'oggetto, usare <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-361">To synchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-362">L'esempio seguente crea una <xref:System.Speech.Synthesis.PromptBuilder> oggetto da una stringa e l'oggetto passato come argomento per il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-362">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a PromptBuilder object and append a text string.  
      PromptBuilder song = new PromptBuilder();  
      song.AppendText("Say the name of the song you want to hear");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(song);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : string -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakAsync textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="70ea2-363">Testo da leggere a voce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-363">The text to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-364">In modo asincrono legge il contenuto di una stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-364">Asynchronously speaks the contents of a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="70ea2-365">Restituisce l'oggetto contenente il contenuto da leggere a voce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-365">Returns the object that contains the content to speak.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-366">Per parlare in modo asincrono una stringa che contiene il markup SSML, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-366">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="70ea2-367">Per presentare in modo sincrono i contenuti di una stringa, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-367">To synchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span> <span data-ttu-id="70ea2-368">È possibile annullare la pronuncia asincrona di un prompt dei comandi con il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> o il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-368">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-369">Come illustrato nell'esempio seguente il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> metodo fornisce il mezzo più semplice per generare il riconoscimento vocale in modo asincrono di output.</span><span class="sxs-lookup"><span data-stu-id="70ea2-369">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method provides the simplest means to generate speech output asynchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancel">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancel(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancel(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsyncCancel : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.SpeakAsyncCancel prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="70ea2-370">Il contenuto per il quale annullare un'operazione Speak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-370">The content for which to cancel a speak operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-371">Annulla l'operazione asincrona di sintesi per una richiesta in coda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-371">Cancels the asynchronous synthesis operation for a queued prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-372">È anche possibile usare questo metodo per annullare un'asincrona parlano operazione per gli elementi seguenti:</span><span class="sxs-lookup"><span data-stu-id="70ea2-372">You can also use this method to cancel an asynchronous speak operation for the following:</span></span>  
  
-   <span data-ttu-id="70ea2-373">Il contenuto di un <xref:System.String> specificato da un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-373">The contents of a <xref:System.String> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="70ea2-374">Il contenuto di un <xref:System.Speech.Synthesis.PromptBuilder> specificato da un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-374">The contents of a <xref:System.Speech.Synthesis.PromptBuilder> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="70ea2-375">Il contenuto di un <xref:System.String> che contiene SSML specificato da un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-375">The contents of a <xref:System.String> containing SSML specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span>  
  
 <span data-ttu-id="70ea2-376">Quando si chiama <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, Speech crea una <xref:System.Speech.Synthesis.Prompt> dell'oggetto e lo popola con il contenuto del parametro del metodo e restituisce il <xref:System.Speech.Synthesis.Prompt> oggetto.</span><span class="sxs-lookup"><span data-stu-id="70ea2-376">When you call <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech creates a <xref:System.Speech.Synthesis.Prompt> object and populates it with the contents of the method's parameter, and returns the <xref:System.Speech.Synthesis.Prompt> object.</span></span> <span data-ttu-id="70ea2-377">Se si mantiene una copia del valore restituito <xref:System.Speech.Synthesis.Prompt>, è possibile passarlo <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> annullare pronuncia contenuto specificato in un <xref:System.String> o un <xref:System.Speech.Synthesis.PromptBuilder> oggetto.</span><span class="sxs-lookup"><span data-stu-id="70ea2-377">If you retain a copy of the returned <xref:System.Speech.Synthesis.Prompt>, you can pass it into <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> to cancel speaking content specified in a <xref:System.String> or a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancelAll">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancelAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancelAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancelAll();" />
      <MemberSignature Language="F#" Value="member this.SpeakAsyncCancelAll : unit -&gt; unit" Usage="speechSynthesizer.SpeakAsyncCancelAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-378">Annulla tutte le operazioni asincrone di sintesi vocale in coda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-378">Cancels all queued, asynchronous, speech synthesis operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="70ea2-379">Nell'esempio seguente mostra un uso <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> per annullare la pronuncia asincrona di un prompt dei comandi, in modo che un nuovo prompt dei comandi può essere presentato.</span><span class="sxs-lookup"><span data-stu-id="70ea2-379">The following example show a use of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken.</span></span> <span data-ttu-id="70ea2-380">Si noti che il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> evento viene attivato quando un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operazione è stata annullata.</span><span class="sxs-lookup"><span data-stu-id="70ea2-380">Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Threading;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the StateChanged event.  
      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
      // Subscribe to the SpeakProgress event.  
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Subscribe to the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Begin speaking a text string asynchronously.  
      synth.SpeakAsync("Speech is an effective and natural way for people to interact with applications, " +  
        "complementing or even replacing the use of mice, keyboards, controllers, and gestures.");  
  
      // Speak for four seconds.  
      Thread.Sleep(4000);  
  
      // Cancel the SpeakAsync operation and wait one second.  
      synth.SpeakAsyncCancelAll();  
      Thread.Sleep(1000);  
  
      // Speak a new text string.  
      synth.Speak("An urgent email message has arrived. Do you want to hear it?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write to the console when the SpeakAsync operation has been cancelled.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
      Console.WriteLine("\nThe SpeakAsync operation was cancelled!!");  
    }  
  
    // When it changes, write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("\nSynthesizer State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the text being spoken by the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }      
  }    
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakCompleted As EventHandler(Of SpeakCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakCompletedEventArgs ^&gt; ^ SpeakCompleted;" />
      <MemberSignature Language="F#" Value="member this.SpeakCompleted : EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; " Usage="member this.SpeakCompleted : System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-381">Generato quando <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completa la pronuncia di un prompt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-381">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completes the speaking of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-382">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> genera il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> evento per il completamento di uno qualsiasi delle <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-382">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event at the completion of any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> or  <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="70ea2-383">Il <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> classe non dispone di proprietà e non restituisce dati dal <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> evento.</span><span class="sxs-lookup"><span data-stu-id="70ea2-383">The <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span> <span data-ttu-id="70ea2-384">Viene fornito per consentire agli autori dell'applicazione scrivere i gestori eventi per il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> evento.</span><span class="sxs-lookup"><span data-stu-id="70ea2-384">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SpeakProgress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakProgress As EventHandler(Of SpeakProgressEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakProgressEventArgs ^&gt; ^ SpeakProgress;" />
      <MemberSignature Language="F#" Value="member this.SpeakProgress : EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; " Usage="member this.SpeakProgress : System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-385">Generato dopo la pronuncia di ogni singola parola di un prompt da parte di <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-385">Raised after the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> speaks each individual word of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-386">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> genera questo evento per ogni nuovo termine che parla in un prompt dei comandi usando uno dei <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-386">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="70ea2-387">Per un esempio e altre informazioni sui dati associati all'evento, vedere <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-387">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsml">
      <MemberSignature Language="C#" Value="public void SpeakSsml (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakSsml(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakSsml (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakSsml(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakSsml : string -&gt; unit" Usage="speechSynthesizer.SpeakSsml textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="70ea2-388">Stringa SSML da leggere a voce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-388">The SSML string to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-389">In modo sincrono legge un oggetto <see cref="T:System.String" /> che contiene il markup SSML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-389">Synchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-390">Il contenuto del `textToSpeak` parametro deve includere una `speak` elemento e devono essere conformi al [linguaggio Markup sintesi della voce (SSML) versione 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="70ea2-390">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="70ea2-391">Per altre informazioni, vedere [riferimenti al linguaggio di Markup sintesi vocale](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="70ea2-391">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="70ea2-392">Per parlare in modo asincrono una stringa che contiene il markup SSML, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-392">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="70ea2-393">È possibile usare <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> per avviare la pronuncia sincrona di una stringa che contiene il markup SSML.</span><span class="sxs-lookup"><span data-stu-id="70ea2-393">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> to initiate the synchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="70ea2-394">Durante una chiamata a questo metodo, il <xref:System.Speech.Synthesis.SpeechSynthesizer> può generare gli eventi seguenti:</span><span class="sxs-lookup"><span data-stu-id="70ea2-394">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="70ea2-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="70ea2-396">Generato quando cambia lo stato di pronuncia del sintetizzatore.</span><span class="sxs-lookup"><span data-stu-id="70ea2-396">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="70ea2-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="70ea2-398">Generato quando al sintetizzatore inizia la generazione del riconoscimento vocale.</span><span class="sxs-lookup"><span data-stu-id="70ea2-398">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="70ea2-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="70ea2-400">Generato ogni volta che al sintetizzatore raggiunge una lettera o una combinazione di lettere che costituiscono un suono discreto di riconoscimento vocale in un linguaggio.</span><span class="sxs-lookup"><span data-stu-id="70ea2-400">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="70ea2-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="70ea2-402">Generato ogni volta che al sintetizzatore completa a proposito di una parola.</span><span class="sxs-lookup"><span data-stu-id="70ea2-402">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="70ea2-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="70ea2-404">Generato ogni volta che l'output vocale richiede una modifica nella posizione di bocca o i muscoli più facciale utilizzati per produrre vocale.</span><span class="sxs-lookup"><span data-stu-id="70ea2-404">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="70ea2-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="70ea2-406">Generato quando al sintetizzatore rileva un segnalibro in un prompt dei comandi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-406">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="70ea2-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="70ea2-408">Generato quando cambia la voce per sintetizzatore.</span><span class="sxs-lookup"><span data-stu-id="70ea2-408">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="70ea2-409">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> non genera il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventi durante l'elaborazione di <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-409">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-410">Nell'esempio seguente viene eseguito il rendering della data 1/29 o 2009 come data, mese, giorno, order year.</span><span class="sxs-lookup"><span data-stu-id="70ea2-410">The following example renders the date 1/29/2009 as a date, in month, day, year order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsml(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakSsmlAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakSsmlAsync(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakSsmlAsync : string -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakSsmlAsync textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="70ea2-411">Il markup SMML da leggere a voce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-411">The SMML markup to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70ea2-412">In modo asincrono legge un <see cref="T:System.String" /> che contiene il markup SSML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-412">Asynchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-413">Il contenuto del `textToSpeak` parametro deve includere una `speak` elemento e devono essere conformi al [linguaggio Markup sintesi della voce (SSML) versione 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="70ea2-413">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="70ea2-414">Per altre informazioni, vedere [riferimenti al linguaggio di Markup sintesi vocale](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="70ea2-414">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="70ea2-415">Per parlare in modo sincrono una stringa che contiene il markup SSML, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-415">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="70ea2-416">È possibile usare <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> per avviare la pronuncia asincrona di una stringa che contiene il markup SSML.</span><span class="sxs-lookup"><span data-stu-id="70ea2-416">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> to initiate the asynchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="70ea2-417">Durante una chiamata a questo metodo, il <xref:System.Speech.Synthesis.SpeechSynthesizer> può generare gli eventi seguenti:</span><span class="sxs-lookup"><span data-stu-id="70ea2-417">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="70ea2-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="70ea2-419">Generato quando cambia lo stato di pronuncia del sintetizzatore.</span><span class="sxs-lookup"><span data-stu-id="70ea2-419">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="70ea2-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="70ea2-421">Generato quando al sintetizzatore inizia la generazione del riconoscimento vocale.</span><span class="sxs-lookup"><span data-stu-id="70ea2-421">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="70ea2-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="70ea2-423">Generato ogni volta che al sintetizzatore raggiunge una lettera o una combinazione di lettere che costituiscono un suono discreto di riconoscimento vocale in un linguaggio.</span><span class="sxs-lookup"><span data-stu-id="70ea2-423">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="70ea2-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="70ea2-425">Generato ogni volta che al sintetizzatore completa a proposito di una parola.</span><span class="sxs-lookup"><span data-stu-id="70ea2-425">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="70ea2-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="70ea2-427">Generato ogni volta che l'output vocale richiede una modifica nella posizione di bocca o i muscoli più facciale utilizzati per produrre vocale.</span><span class="sxs-lookup"><span data-stu-id="70ea2-427">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="70ea2-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="70ea2-429">Generato quando al sintetizzatore rileva un segnalibro in un prompt dei comandi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-429">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="70ea2-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="70ea2-431">Generato quando cambia la voce per sintetizzatore.</span><span class="sxs-lookup"><span data-stu-id="70ea2-431">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="70ea2-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="70ea2-433">Generato quando al sintetizzatore conclude l'elaborazione una <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operazione.</span><span class="sxs-lookup"><span data-stu-id="70ea2-433">Raised when the synthesizer finishes processing a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="70ea2-434">Se il dos di applicazione non necessario eseguire attività mentre si parla, è possibile usare la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> o il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> metodo per generare il riconoscimento vocale in modo sincrono.</span><span class="sxs-lookup"><span data-stu-id="70ea2-434">If your application dos not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
   
  
## Examples  
  
```  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsmlAsync(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakStarted As EventHandler(Of SpeakStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakStartedEventArgs ^&gt; ^ SpeakStarted;" />
      <MemberSignature Language="F#" Value="member this.SpeakStarted : EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; " Usage="member this.SpeakStarted : System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-435">Generato quando <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> inizia a pronunciare un prompt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-435">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> begins the speaking of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-436">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> genera questo evento quando inizia l'elaborazione di un prompt dei comandi usando uno dei <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-436">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when it begins processing a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="70ea2-437">Il <xref:System.Speech.Synthesis.SpeakStartedEventArgs> classe non dispone di proprietà e non restituisce dati dal <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> evento.</span><span class="sxs-lookup"><span data-stu-id="70ea2-437">The <xref:System.Speech.Synthesis.SpeakStartedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span> <span data-ttu-id="70ea2-438">Viene fornito per consentire agli autori dell'applicazione scrivere i gestori eventi per il <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> evento.</span><span class="sxs-lookup"><span data-stu-id="70ea2-438">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Speech.Synthesis.SynthesizerState" Usage="System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-439">Ottiene lo stato di pronuncia dell'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-439">Gets the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70ea2-440">Restituisce lo stato di pronuncia corrente dell'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-440">Returns the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-441">Per ottenere il nuovo stato del <xref:System.Speech.Synthesis.SpeechSynthesizer> dopo la modifica, usare il <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> proprietà del <xref:System.Speech.Synthesis.StateChangedEventArgs> classe.</span><span class="sxs-lookup"><span data-stu-id="70ea2-441">To get the new state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> after it changes, use the <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> property of the <xref:System.Speech.Synthesis.StateChangedEventArgs> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-442">L'esempio seguente illustra lo stato del <xref:System.Speech.Synthesis.SpeechSynthesizer> prima, durante e dopo la lettura di un prompt dei comandi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-442">The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.</span></span>  
  
```csharp  
using System;  
using System.Threading;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer() ;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the SpeakProgress event.         
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Write the state of the SpeechSynthesizer to the console.  
      Console.WriteLine("Current Synthesizer state: " + synth.State + "\n");  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      // Write the state of the SpeechSynthesizer to the console while it is speaking.  
      Thread.Sleep(1000);  
      Console.WriteLine("\n - Current Synthesizer state: " + synth.State + " - \n");  
  
      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  
      Thread.Sleep(2000);  
      Console.WriteLine("\nCurrent Synthesizer state: " + synth.State);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::StateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; " Usage="member this.StateChanged : System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-443">Generato alla modifica dello stato di <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-443">Raised when the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-444">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> genera questo evento quando la pronuncia <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> le modifiche.</span><span class="sxs-lookup"><span data-stu-id="70ea2-444">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when its speaking <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> changes.</span></span> <span data-ttu-id="70ea2-445">Per un esempio e altre informazioni sui dati associati all'evento, vedere <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-445">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span></span>  
  
 <span data-ttu-id="70ea2-446">Per sospendere e riprendere la sintesi vocale, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> e <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-446">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="VisemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReached As EventHandler(Of VisemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VisemeReachedEventArgs ^&gt; ^ VisemeReached;" />
      <MemberSignature Language="F#" Value="member this.VisemeReached : EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; " Usage="member this.VisemeReached : System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-447">Generato quando viene raggiunto un viseme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-447">Raised when a viseme is reached.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-448">Un viseme è la posizione di base del viso e bocca mentre un fonema si.</span><span class="sxs-lookup"><span data-stu-id="70ea2-448">A viseme is the basic position of the mouth and face when pronouncing a phoneme.</span></span> <span data-ttu-id="70ea2-449">Visemes sono rappresentazioni visive di fonemi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-449">Visemes are visual representations of phonemes.</span></span>  
  
 <span data-ttu-id="70ea2-450">Speech supporta 21 visemes per l'inglese Americano, ognuno dei quali corrisponde a uno o più fonemi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-450">System.Speech supports 21 visemes for US English, each of which corresponds to one or more phonemes.</span></span>  <span data-ttu-id="70ea2-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> gli eventi vengono generati quando si dispone di un fonema nuovo raggiunto un viseme corrispondente diverso rispetto a fonema precedente raggiunto.</span><span class="sxs-lookup"><span data-stu-id="70ea2-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> events are raised when a new phoneme reached has a different corresponding viseme than the previous phoneme reached.</span></span> <span data-ttu-id="70ea2-452">Poiché alcuni visemes rappresentare più fonemi, un <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> evento non viene generato se il fonema successivo raggiunto corrisponde a viseme stesso come il fonema precedente.</span><span class="sxs-lookup"><span data-stu-id="70ea2-452">Since some visemes represent more than one phoneme, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not generated if the next phoneme reached corresponds to the same viseme as the previous phoneme.</span></span> <span data-ttu-id="70ea2-453">Ad esempio, per le parole "quest'area", un <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> evento viene generato per la "s" in "this" e "z" in "zona".</span><span class="sxs-lookup"><span data-stu-id="70ea2-453">For example, for the spoken words "this zone", a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event is raised for the "s" in "this" and the "z" in "zone".</span></span> <span data-ttu-id="70ea2-454">Tuttavia, un <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> evento non viene generato per il valore di "z" in "zona" perché corrisponde alla stessa viseme come la "s" in "this".</span><span class="sxs-lookup"><span data-stu-id="70ea2-454">However, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not raised for the "z" in "zone" because it corresponds to the same viseme as the "s" in "this".</span></span>  
  
 <span data-ttu-id="70ea2-455">Di seguito è riportato un elenco dei gruppi di fonemi che corrispondono a un viseme in inglese Americano e 21 fonemi SAPI.</span><span class="sxs-lookup"><span data-stu-id="70ea2-455">The following is a list of the 21 SAPI phonemes and phoneme groups that correspond to a viseme in US English.</span></span>  
  
|<span data-ttu-id="70ea2-456">Viseme</span><span class="sxs-lookup"><span data-stu-id="70ea2-456">Viseme</span></span>|<span data-ttu-id="70ea2-457">Phoneme(s)</span><span class="sxs-lookup"><span data-stu-id="70ea2-457">Phoneme(s)</span></span>|  
|------------|------------------|  
|<span data-ttu-id="70ea2-458">0</span><span class="sxs-lookup"><span data-stu-id="70ea2-458">0</span></span>|<span data-ttu-id="70ea2-459">inattività</span><span class="sxs-lookup"><span data-stu-id="70ea2-459">silence</span></span>|  
|<span data-ttu-id="70ea2-460">1</span><span class="sxs-lookup"><span data-stu-id="70ea2-460">1</span></span>|<span data-ttu-id="70ea2-461">Always Encrypted, ax, ah</span><span class="sxs-lookup"><span data-stu-id="70ea2-461">ae, ax, ah</span></span>|  
|<span data-ttu-id="70ea2-462">2</span><span class="sxs-lookup"><span data-stu-id="70ea2-462">2</span></span>|<span data-ttu-id="70ea2-463">aa</span><span class="sxs-lookup"><span data-stu-id="70ea2-463">aa</span></span>|  
|<span data-ttu-id="70ea2-464">3</span><span class="sxs-lookup"><span data-stu-id="70ea2-464">3</span></span>|<span data-ttu-id="70ea2-465">AO</span><span class="sxs-lookup"><span data-stu-id="70ea2-465">ao</span></span>|  
|<span data-ttu-id="70ea2-466">4</span><span class="sxs-lookup"><span data-stu-id="70ea2-466">4</span></span>|<span data-ttu-id="70ea2-467">EY ti, eh, Oh</span><span class="sxs-lookup"><span data-stu-id="70ea2-467">ey, eh, uh</span></span>|  
|<span data-ttu-id="70ea2-468">5</span><span class="sxs-lookup"><span data-stu-id="70ea2-468">5</span></span>|<span data-ttu-id="70ea2-469">ER</span><span class="sxs-lookup"><span data-stu-id="70ea2-469">er</span></span>|  
|<span data-ttu-id="70ea2-470">6</span><span class="sxs-lookup"><span data-stu-id="70ea2-470">6</span></span>|<span data-ttu-id="70ea2-471">y, iy, quali, ix</span><span class="sxs-lookup"><span data-stu-id="70ea2-471">y, iy, ih, ix</span></span>|  
|<span data-ttu-id="70ea2-472">7</span><span class="sxs-lookup"><span data-stu-id="70ea2-472">7</span></span>|<span data-ttu-id="70ea2-473">w, uw</span><span class="sxs-lookup"><span data-stu-id="70ea2-473">w, uw</span></span>|  
|<span data-ttu-id="70ea2-474">8</span><span class="sxs-lookup"><span data-stu-id="70ea2-474">8</span></span>|<span data-ttu-id="70ea2-475">Ow</span><span class="sxs-lookup"><span data-stu-id="70ea2-475">ow</span></span>|  
|<span data-ttu-id="70ea2-476">9</span><span class="sxs-lookup"><span data-stu-id="70ea2-476">9</span></span>|<span data-ttu-id="70ea2-477">AW</span><span class="sxs-lookup"><span data-stu-id="70ea2-477">aw</span></span>|  
|<span data-ttu-id="70ea2-478">10</span><span class="sxs-lookup"><span data-stu-id="70ea2-478">10</span></span>|<span data-ttu-id="70ea2-479">Oy</span><span class="sxs-lookup"><span data-stu-id="70ea2-479">oy</span></span>|  
|<span data-ttu-id="70ea2-480">11</span><span class="sxs-lookup"><span data-stu-id="70ea2-480">11</span></span>|<span data-ttu-id="70ea2-481">AA</span><span class="sxs-lookup"><span data-stu-id="70ea2-481">ay</span></span>|  
|<span data-ttu-id="70ea2-482">12</span><span class="sxs-lookup"><span data-stu-id="70ea2-482">12</span></span>|<span data-ttu-id="70ea2-483">h</span><span class="sxs-lookup"><span data-stu-id="70ea2-483">h</span></span>|  
|<span data-ttu-id="70ea2-484">13</span><span class="sxs-lookup"><span data-stu-id="70ea2-484">13</span></span>|<span data-ttu-id="70ea2-485">f</span><span class="sxs-lookup"><span data-stu-id="70ea2-485">r</span></span>|  
|<span data-ttu-id="70ea2-486">14</span><span class="sxs-lookup"><span data-stu-id="70ea2-486">14</span></span>|<span data-ttu-id="70ea2-487">l</span><span class="sxs-lookup"><span data-stu-id="70ea2-487">l</span></span>|  
|<span data-ttu-id="70ea2-488">15</span><span class="sxs-lookup"><span data-stu-id="70ea2-488">15</span></span>|<span data-ttu-id="70ea2-489">s, z</span><span class="sxs-lookup"><span data-stu-id="70ea2-489">s, z</span></span>|  
|<span data-ttu-id="70ea2-490">16</span><span class="sxs-lookup"><span data-stu-id="70ea2-490">16</span></span>|<span data-ttu-id="70ea2-491">sh, ch, jh, zh</span><span class="sxs-lookup"><span data-stu-id="70ea2-491">sh, ch, jh, zh</span></span>|  
|<span data-ttu-id="70ea2-492">17</span><span class="sxs-lookup"><span data-stu-id="70ea2-492">17</span></span>|<span data-ttu-id="70ea2-493">th, gerarchia derivata</span><span class="sxs-lookup"><span data-stu-id="70ea2-493">th, dh</span></span>|  
|<span data-ttu-id="70ea2-494">18</span><span class="sxs-lookup"><span data-stu-id="70ea2-494">18</span></span>|<span data-ttu-id="70ea2-495">f, v</span><span class="sxs-lookup"><span data-stu-id="70ea2-495">f, v</span></span>|  
|<span data-ttu-id="70ea2-496">19</span><span class="sxs-lookup"><span data-stu-id="70ea2-496">19</span></span>|<span data-ttu-id="70ea2-497">d, t, n</span><span class="sxs-lookup"><span data-stu-id="70ea2-497">d, t, n</span></span>|  
|<span data-ttu-id="70ea2-498">20</span><span class="sxs-lookup"><span data-stu-id="70ea2-498">20</span></span>|<span data-ttu-id="70ea2-499">k, g o GN</span><span class="sxs-lookup"><span data-stu-id="70ea2-499">k, g, ng</span></span>|  
|<span data-ttu-id="70ea2-500">21</span><span class="sxs-lookup"><span data-stu-id="70ea2-500">21</span></span>|<span data-ttu-id="70ea2-501">p, b, m</span><span class="sxs-lookup"><span data-stu-id="70ea2-501">p, b, m</span></span>|  
  
 <span data-ttu-id="70ea2-502">Per informazioni sui dati associati con la `VisemeReached` eventi, vedere <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-502">For information about data associated with the `VisemeReached` event, see <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Voice">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo Voice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo Voice" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Voice As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ Voice { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Voice : System.Speech.Synthesis.VoiceInfo" Usage="System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-503">Ottiene informazioni sulla voce corrente dell'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-503">Gets information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70ea2-504">Restituisce informazioni sulla voce corrente dell'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-504">Returns information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-505">Quando si inizializza un nuovo <xref:System.Speech.Synthesis.SpeechSynthesizer>, Usa la voce di sistema predefinito.</span><span class="sxs-lookup"><span data-stu-id="70ea2-505">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer>, it uses the default system voice.</span></span> <span data-ttu-id="70ea2-506">Per configurare il <xref:System.Speech.Synthesis.SpeechSynthesizer> oggetto per usare una delle voci di sintesi vocale installato, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="70ea2-506">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> object to use one of the installed speech synthesis voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="70ea2-507">Per ottenere informazioni su quali sono installate voci, usare il <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodo e <xref:System.Speech.Synthesis.VoiceInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="70ea2-507">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70ea2-508">L'esempio seguente Inizializza un'istanza di <xref:System.Speech.Synthesis.SpeechSynthesizer> e ottiene informazioni sulla voce corrente.</span><span class="sxs-lookup"><span data-stu-id="70ea2-508">The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer> and gets information about the current voice.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Get information about supported audio formats.  
        string AudioFormats = "";  
        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  
        {  
          AudioFormats += String.Format("{0}\n",  
          fmt.EncodingFormat.ToString());  
        }  
  
        // Write information about the voice to the console.  
        Console.WriteLine(" Name:          " + synth.Voice.Name);  
        Console.WriteLine(" Culture:       " + synth.Voice.Culture);  
        Console.WriteLine(" Age:           " + synth.Voice.Age);  
        Console.WriteLine(" Gender:        " + synth.Voice.Gender);  
        Console.WriteLine(" Description:   " + synth.Voice.Description);  
        Console.WriteLine(" ID:            " + synth.Voice.Id);  
        if (synth.Voice.SupportedAudioFormats.Count != 0)  
        {  
          Console.WriteLine(" Audio formats: " + AudioFormats);  
        }  
        else  
        {  
          Console.WriteLine(" No supported audio formats found");  
        }  
  
        // Get additional information about the voice.  
        string AdditionalInfo = "";  
        foreach (string key in synth.Voice.AdditionalInfo.Keys)  
        {  
          AdditionalInfo += String.Format("  {0}: {1}\n",  
            key, synth.Voice.AdditionalInfo[key]);  
        }  
  
        Console.WriteLine(" Additional Info - " + AdditionalInfo);  
        Console.WriteLine();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </Member>
    <Member MemberName="VoiceChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VoiceChange As EventHandler(Of VoiceChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VoiceChangeEventArgs ^&gt; ^ VoiceChange;" />
      <MemberSignature Language="F#" Value="member this.VoiceChange : EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; " Usage="member this.VoiceChange : System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-509">Generato alla modifica della voce di <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-509">Raised when the voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70ea2-510">Per un esempio e informazioni relative ai dati associati all'evento, vedere <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="70ea2-510">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span></span>  
  
 <span data-ttu-id="70ea2-511">È possibile modificare la voce che il <xref:System.Speech.Synthesis.SpeechSynthesizer> viene utilizzato con uno qualsiasi dei <xref:System.Speech.Synthesis.PromptBuilder>del <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> metodi o il <xref:System.Speech.Synthesis.SpeechSynthesizer>del <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="70ea2-511">You can change the voice that the <xref:System.Speech.Synthesis.SpeechSynthesizer> uses with any of the <xref:System.Speech.Synthesis.PromptBuilder>'s <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Volume { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Volume : int with get, set" Usage="System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70ea2-512">Ottiene o imposta il volume di output dell'oggetto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-512">Get or sets the output volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70ea2-513">Restituisce il volume di <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, da 0 a 100.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70ea2-513">Returns the volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, from 0 through 100.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="70ea2-514">L'esempio seguente imposta il volume del <xref:System.Speech.Synthesis.SpeechSynthesizer>dell'audio di output per la voce sintetizzata e il file WAV.</span><span class="sxs-lookup"><span data-stu-id="70ea2-514">The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Set the volume of the SpeechSynthesizer's ouput.  
        synth.Volume = 60;  
  
        // Build a prompt containing recorded audio and synthesized speech.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendAudio("C:\\Test\\WelcomeToContosoRadio.wav");  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>