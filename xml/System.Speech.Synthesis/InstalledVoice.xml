<Type Name="InstalledVoice" FullName="System.Speech.Synthesis.InstalledVoice">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c91c3a6fc7b9c386ddbb83b586bb094739bb2a2e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36409053" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InstalledVoice" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstalledVoice extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.InstalledVoice" />
  <TypeSignature Language="VB.NET" Value="Public Class InstalledVoice" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstalledVoice" />
  <TypeSignature Language="F#" Value="type InstalledVoice = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{VoiceInfo.Name} [{Enabled ? "Enabled" : "Disabled"}]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contiene informazioni su una voce di sintesi vocale installata in Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa classe per ottenere informazioni su una voce installata, incluso il relativo delle impostazioni cultura, il nome, sesso, età, e se è abilitato.  
  
 Per eseguire sintesi vocale utilizzando la lingua specificata nel <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> proprietà, un motore di sintesi vocale che supporti che è necessario installare language-indicativo del paese. I motori di sintesi vocale forniti con Microsoft Windows 7 funzionano con i seguenti codici di lingua, paese:  
  
-   en-US. Inglese (Stati Uniti)  
  
-   zh-CN. Cinese (Cina)  
  
-   zh-TW. Cinese (Taiwan)  
  
 Sono inoltre consentiti i codici di lingua di due lettere, ad esempio "en".  
  
   
  
## Examples  
 Nell'esempio seguente fa parte di un'applicazione console che inizializza un <xref:System.Speech.Synthesis.SpeechSynthesizer> dell'oggetto e genera output sulla console un elenco delle voci installate (motori di sintesi vocale) e illustra le informazioni che sono disponibile per ogni voce.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.InstalledVoice.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Speech.Synthesis.InstalledVoice.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se una voce può essere usata per generare il riconoscimento vocale.</summary>
        <value>Restituisce un valore <see langword="bool" /> che rappresenta lo stato abilitato della voce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore di <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà `true` per impostazione predefinita. Quando un'applicazione chiama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, il metodo verifica che ciascuna delle voci trova nel Registro di sistema soddisfi determinati criteri minimi. Per qualsiasi voce che si verifica un errore di verifica <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> imposta il relativo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà `false`. Un'applicazione non è possibile selezionare una voce il cui <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà `false`. In genere, le applicazioni non verranno impostata una voce <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.InstalledVoice.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="installedVoice.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Oggetto di cui è possibile eseguire il cast a un'istanza di <see cref="T:System.Speech.Synthesis.InstalledVoice" />.</param>
        <summary>Determina se un oggetto specificato è un'istanza di <see cref="T:System.Speech.Synthesis.InstalledVoice" /> ed è uguale all'istanza corrente di <see cref="T:System.Speech.Synthesis.InstalledVoice" />.</summary>
        <returns>Restituisce <see langword="true" /> se l'istanza corrente di <see cref="T:System.Speech.Synthesis.InstalledVoice" /> e quella ottenuta mediante l'argomento <paramref name="obj" /> sono uguali; in caso contrario restituisce <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il metodo restituisce false se il <xref:System.Object> fornito per il `obj` argomento non è possibile eseguire il cast <xref:System.Speech.Synthesis.InstalledVoice>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.InstalledVoice.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="installedVoice.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Specifica un codice hash per un oggetto <c>InstalledVoice</c>.</summary>
        <returns>Codice hash per l'oggetto <see cref="T:System.Speech.Synthesis.InstalledVoice" /> corrente.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VoiceInfo">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo VoiceInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo VoiceInfo" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.InstalledVoice.VoiceInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VoiceInfo As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ VoiceInfo { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VoiceInfo : System.Speech.Synthesis.VoiceInfo" Usage="System.Speech.Synthesis.InstalledVoice.VoiceInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene informazioni su una voce, ad esempio impostazioni cultura, nome, genere ed età.</summary>
        <value>Informazioni su una voce installata.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>