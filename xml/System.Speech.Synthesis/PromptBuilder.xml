<Type Name="PromptBuilder" FullName="System.Speech.Synthesis.PromptBuilder">
  <TypeSignature Language="C#" Value="public class PromptBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PromptBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.PromptBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class PromptBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class PromptBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a059f-101">Crea un oggetto <see cref="T:System.Speech.Synthesis.Prompt" /> vuoto e fornisce metodi per l'aggiunta di contenuto, la selezione di voci, il controllo degli attributi vocali e il controllo della pronuncia delle parole.</span><span class="sxs-lookup"><span data-stu-id="a059f-101">Creates an empty <see cref="T:System.Speech.Synthesis.Prompt" /> object and provides methods for adding content, selecting voices, controlling voice attributes, and controlling the pronunciation of spoken words.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-102">Con <xref:System.Speech.Synthesis.PromptBuilder>, è possibile aggiungere un'ampia gamma di tipi di contenuto da un prompt dei comandi, inclusi testo, markup SSML (come una stringa o un file), registrata audio o anche un altro <xref:System.Speech.Synthesis.PromptBuilder> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a059f-102">With <xref:System.Speech.Synthesis.PromptBuilder>, you can add a variety of content types to a prompt, including plain text, SSML markup (as a string or a file), recorded audio, or even another <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 <span data-ttu-id="a059f-103">Per aggiungere testo a un <xref:System.Speech.Synthesis.PromptBuilder> dell'oggetto e, facoltativamente, controllo degli attributi vocali, ad esempio enfasi, velocità e volume, usare uno del <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="a059f-103">To append text to a <xref:System.Speech.Synthesis.PromptBuilder> object and optionally control voice attributes such as emphasis, rate, and volume, use one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> methods.</span></span>  <span data-ttu-id="a059f-104">È inoltre possibile controllare gli attributi vocali come un gruppo con il <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> e <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="a059f-104">You can also control voice attributes as a group with the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> and <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> methods.</span></span>  
  
 <span data-ttu-id="a059f-105">È possibile aggiungere testo e controllare ciò che viene pronunciata o come si è accentuato utilizzando il <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>, o <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="a059f-105">You can append text and control what is spoken or how it is pronounced using the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>,  <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> methods.</span></span>  
  
 <span data-ttu-id="a059f-106">Modificare la voce parlante attualmente selezionata nella finestra di richiesta utilizzando uno degli overload <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> metodi, una voce specifica per l'utilizzo o la specifica di denominazione necessari caratteristiche vocali, ad esempio età e sesso.</span><span class="sxs-lookup"><span data-stu-id="a059f-106">Change the currently selected speaking voice in the prompt using one of the overloaded <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods, naming a specific voice to use or specifying required voice characteristics, such as age and gender.</span></span>  
  
 <span data-ttu-id="a059f-107">Per generare il riconoscimento vocale da un <xref:System.Speech.Synthesis.PromptBuilder> dell'oggetto, passarlo come argomento per il <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a059f-107">To generate speech from a <xref:System.Speech.Synthesis.PromptBuilder> object, you can pass it as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
 <span data-ttu-id="a059f-108">Per ulteriori informazioni, vedere [costruzione Prompt complessi](http://msdn.microsoft.com/library/552cb356-7344-473e-b0f2-7a9983f8c1a4).</span><span class="sxs-lookup"><span data-stu-id="a059f-108">For more information, see [Constructing a Complex Prompt](http://msdn.microsoft.com/library/552cb356-7344-473e-b0f2-7a9983f8c1a4).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a059f-109">Crea una nuova istanza della classe <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-109">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PromptBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PromptBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a059f-110">Crea una nuova istanza della classe <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-110">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a059f-111">L'esempio seguente crea un nuovo <xref:System.Speech.Synthesis.PromptBuilder> istanza e aggiunge una stringa di testo.</span><span class="sxs-lookup"><span data-stu-id="a059f-111">The following example creates a new <xref:System.Speech.Synthesis.PromptBuilder> instance and adds a text string to it.</span></span>  
  
```csharp  
using System.Speech.Synthesis;  
  
public void MySimpleText ()  
{  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendText("Hello world!");  
}  
```  
  
 <span data-ttu-id="a059f-112">Di seguito viene illustrato l'equivalente in vocale sintesi Markup Language (SSML), (`xml:lang` è un attributo obbligatorio il `speak` elemento):</span><span class="sxs-lookup"><span data-stu-id="a059f-112">The following markup shows the equivalent in Speech Synthesis Markup Language (SSML), (`xml:lang` is a required attribute of the `speak` element):</span></span>  
  
```xml  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US">  
  Hello world!  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PromptBuilder (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.#ctor(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PromptBuilder(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="a059f-113">Fornisce informazioni su impostazioni cultura specifiche, ad esempio lingua, nome delle impostazioni cultura, sistema di scrittura, calendario usato e modalità di formattazione delle date e ordinamento delle stringhe.</span><span class="sxs-lookup"><span data-stu-id="a059f-113">Provides information about a specific culture, such as its language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="a059f-114">Crea una nuova istanza della classe <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e specifica le impostazioni cultura.</span><span class="sxs-lookup"><span data-stu-id="a059f-114">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class and specifies a culture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-115">Questo costruttore imposta il valore per il <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a059f-115">This constructor sets the value for the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="a059f-116">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> tenta di selezionare una voce installata che supporta il linguaggio specificato dall'oggetto di `culture` parametro per elaborare la richiesta.</span><span class="sxs-lookup"><span data-stu-id="a059f-116">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object will attempt to select an installed voice that supports the language specified by the `culture` parameter to process the prompt.</span></span> <span data-ttu-id="a059f-117">Se viene trovata una voce con le impostazioni cultura specificate, verrà utilizzato.</span><span class="sxs-lookup"><span data-stu-id="a059f-117">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="a059f-118">Se non viene trovata una voce con le impostazioni cultura specificate, verrà utilizzata la voce predefinita.</span><span class="sxs-lookup"><span data-stu-id="a059f-118">If a voice with the specified culture cannot be found, the default voice will be used.</span></span>  
  
 <span data-ttu-id="a059f-119">Per correttamente pronunciare le parole nella lingua specificata per il `culture` parametro, un motore di sintesi (sintesi vocale o TTS) vocale che supporta il linguaggio deve essere installato.</span><span class="sxs-lookup"><span data-stu-id="a059f-119">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="a059f-120">Un motore di sintesi vocale installata viene chiamato una voce.</span><span class="sxs-lookup"><span data-stu-id="a059f-120">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="a059f-121">Per ottenere informazioni su cui sono installate voci per una lingua specifica, utilizzare il <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a059f-121">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="a059f-122">Microsoft Windows e l'API Speech accettare tutti i codici di lingua, paese validi come valori per `culture`.</span><span class="sxs-lookup"><span data-stu-id="a059f-122">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="a059f-123">I motori di sintesi vocale forniti con Windows 7 supportano i seguenti codici di lingua, paese:</span><span class="sxs-lookup"><span data-stu-id="a059f-123">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="a059f-124">en-US.</span><span class="sxs-lookup"><span data-stu-id="a059f-124">en-US.</span></span> <span data-ttu-id="a059f-125">Inglese (Stati Uniti)</span><span class="sxs-lookup"><span data-stu-id="a059f-125">English (United States)</span></span>  
  
-   <span data-ttu-id="a059f-126">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="a059f-126">zh-CN.</span></span> <span data-ttu-id="a059f-127">Cinese (Cina)</span><span class="sxs-lookup"><span data-stu-id="a059f-127">Chinese (China)</span></span>  
  
-   <span data-ttu-id="a059f-128">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="a059f-128">zh-TW.</span></span> <span data-ttu-id="a059f-129">Cinese (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="a059f-129">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="a059f-130">Sono inoltre consentiti i codici di lingua di due lettere, ad esempio "en".</span><span class="sxs-lookup"><span data-stu-id="a059f-130">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-131">Nell'esempio che segue crea un <xref:System.Speech.Synthesis.PromptBuilder> istanza e specifica il <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-131">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> instance and specifies its <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>.</span></span>  
  
```csharp  
using System.Speech.Synthesis;  
  
public void MySimpleText ()  
{  
    PromptBuilder builder = new PromptBuilder(new System.Globalization.CultureInfo("en-US"));  
    builder.AppendText("Hello world!");  
}  
```  
  
 <span data-ttu-id="a059f-132">Di seguito viene illustrato l'elemento equivalente SSML:</span><span class="sxs-lookup"><span data-stu-id="a059f-132">The following markup shows the equivalent SSML:</span></span>  
  
```xml  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US">  
  Hello world!  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendAudio">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a059f-133">Aggiunge un file audio specificato a un oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-133">Appends a specified audio file to a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="a059f-134">Percorso completo al file audio.</span><span class="sxs-lookup"><span data-stu-id="a059f-134">A fully qualified path to the audio file.</span></span></param>
        <summary><span data-ttu-id="a059f-135">Aggiunge il file audio specificato a <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-135">Appends the specified audio file to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (Uri audioFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(class System.Uri audioFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (audioFile As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(Uri ^ audioFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="audioFile"><span data-ttu-id="a059f-136">URI per il file audio.</span><span class="sxs-lookup"><span data-stu-id="a059f-136">URI for the audio file.</span></span></param>
        <summary><span data-ttu-id="a059f-137">Aggiunge il file audio nell'URI specificato a <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-137">Appends the audio file at the specified URI to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a059f-138">Nell'esempio seguente Inizializza una nuova istanza di <xref:System.Speech.Synthesis.PromptBuilder> classe e quindi aggiungervi testo, seguito da un file audio.</span><span class="sxs-lookup"><span data-stu-id="a059f-138">The following example initializes a new instance of the <xref:System.Speech.Synthesis.PromptBuilder> class and then adds text to it, followed by an audio file.</span></span>  
  
```csharp  
using System.Speech.PromptBuilder;  
  
public void SimpleConcatenation()  
{  
    // Add a prompt fragment from a .wav file.  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendText("How are you today?");  
    builder.AppendAudio(new Uri ("http://www.speech.microsoft.com/ding.wav"));  
}  
```  
  
 <span data-ttu-id="a059f-139">Di seguito viene illustrato il markup SSML equivalente.</span><span class="sxs-lookup"><span data-stu-id="a059f-139">The following markup shows the equivalent SSML markup.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis"  
       xmlns:ms="http://www.microsoft.com/speech/synthesis" xml:lang="en">  
  
  How are you today?  
  <audio src="http://www.speech.microsoft.com/ding.wav" />  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (Uri audioFile, string alternateText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(class System.Uri audioFile, string alternateText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (audioFile As Uri, alternateText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(Uri ^ audioFile, System::String ^ alternateText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.Uri" />
        <Parameter Name="alternateText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="audioFile"><span data-ttu-id="a059f-140">URI per il file audio.</span><span class="sxs-lookup"><span data-stu-id="a059f-140">URI for the audio file.</span></span></param>
        <param name="alternateText"><span data-ttu-id="a059f-141">Stringa contenente testo alternativo che rappresenta l'audio.</span><span class="sxs-lookup"><span data-stu-id="a059f-141">A string containing alternate text representing the audio.</span></span></param>
        <summary><span data-ttu-id="a059f-142">Aggiunge il file audio specificato e il testo alternativo a <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-142">Appends the specified audio file and alternate text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-143">Il motore di sintesi vocale leggerà il testo alternativo se non è possibile riprodurre il file audio.</span><span class="sxs-lookup"><span data-stu-id="a059f-143">The speech synthesis engine will speak the alternate text if the audio file cannot be played.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-144">Nell'esempio seguente aggiunge un file audio per un <xref:System.Speech.Synthesis.PromptBuilder> istanza e il testo fare se non è possibile riprodurre il file audio.</span><span class="sxs-lookup"><span data-stu-id="a059f-144">The following examples adds an audio file to a <xref:System.Speech.Synthesis.PromptBuilder> instance and specifies text to speak if the audio file cannot be played.</span></span>  
  
```csharp  
using System.Speech.PromptBuilder;  
  
public void SimpleConcatenation()  
{  
  
    // Concatenate a prompt fragment from a .wav file.  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendAudio(new Uri ("C:\\OnHold.wav"), "Your call will be answered in the order it was received");  
}  
```  
  
 <span data-ttu-id="a059f-145">Di seguito viene illustrato il markup SSML equivalente.</span><span class="sxs-lookup"><span data-stu-id="a059f-145">The following markup shows the equivalent SSML markup.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis"  
       xmlns:ms="http://www.microsoft.com/speech/synthesis" xml:lang="en">  
  
  <audio src="C:\OnHold.wav"> Your call will be answered in the order it was received. </audio>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBookmark">
      <MemberSignature Language="C#" Value="public void AppendBookmark (string bookmarkName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBookmark(string bookmarkName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBookmark (bookmarkName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBookmark(System::String ^ bookmarkName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="a059f-146">Stringa contenente il nome del computer segnalibro aggiunto.</span><span class="sxs-lookup"><span data-stu-id="a059f-146">A string containing the name of the appended bookmark.</span></span></param>
        <summary><span data-ttu-id="a059f-147">Aggiunge un segnalibro all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-147">Appends a bookmark to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-148">Motore di sintesi vocale genererà un <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> evento se viene rilevato un segnalibro mentre si parla di un prompt dei comandi utilizzando uno del <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="a059f-148">A speech synthesis engine will generate a <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event if it encounters a bookmark while speaking a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-149">L'esempio seguente crea una richiesta che include due segnalibri e invia l'output a un file di formato per la riproduzione.</span><span class="sxs-lookup"><span data-stu-id="a059f-149">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="a059f-150">Il gestore per il <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> evento scrive il nome del segnalibro e la posizione nel flusso audio quando è stato generato l'evento nella console.</span><span class="sxs-lookup"><span data-stu-id="a059f-150">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendBreak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a059f-151">Inserisce un'interruzione (sospensione) nel contenuto di un oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-151">Inserts a break (pause) in the content of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a059f-152">Aggiunge un'interruzione all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-152">Appends a break to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-153">Questo metodo non specifica una durata per l'interruzione.</span><span class="sxs-lookup"><span data-stu-id="a059f-153">This method does not specify a duration for the break.</span></span> <span data-ttu-id="a059f-154">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> determina un valore di durata in base al contesto linguistico.</span><span class="sxs-lookup"><span data-stu-id="a059f-154">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will determine a duration value based on the linguistic context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-155">Nell'esempio seguente genera un messaggio che contiene due frasi, separate da un'interruzione di e pronuncia il prompt dei comandi per il dispositivo audio predefinito nel computer.</span><span class="sxs-lookup"><span data-stu-id="a059f-155">The following example builds a prompt containing two sentences separated by a break and speaks the prompt to the default audio device on the computer.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45.");  
        builder.AppendBreak();  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:30, and 9:15.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak (System.Speech.Synthesis.PromptBreak strength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak(valuetype System.Speech.Synthesis.PromptBreak strength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak (strength As PromptBreak)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak(System::Speech::Synthesis::PromptBreak strength);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strength" Type="System.Speech.Synthesis.PromptBreak" />
      </Parameters>
      <Docs>
        <param name="strength"><span data-ttu-id="a059f-156">Indica la durata dell'interruzione, con l'incremento di valori seguente:</span><span class="sxs-lookup"><span data-stu-id="a059f-156">Indicates the duration of the break, with the following increasing values:</span></span></param>
        <summary><span data-ttu-id="a059f-157">Aggiunge un'interruzione all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e ne specifica la durata.</span><span class="sxs-lookup"><span data-stu-id="a059f-157">Appends a break to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies its strength (duration).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-158">I valori di <xref:System.Speech.Synthesis.PromptBreak> enumerazione rappresentano un intervallo di intervalli di separazione (mette in pausa) tra i delimitatori di parola.</span><span class="sxs-lookup"><span data-stu-id="a059f-158">The values in the <xref:System.Speech.Synthesis.PromptBreak> enumeration represent a range of separation intervals (pauses) between word boundaries.</span></span> <span data-ttu-id="a059f-159">Il motore di sintesi vocale determina la durata dell'intervallo esatto.</span><span class="sxs-lookup"><span data-stu-id="a059f-159">The speech synthesis engine determines the exact duration of the interval.</span></span> <span data-ttu-id="a059f-160">Quando viene richiesta un'interruzione, uno di questi valori viene passato al motore di sintesi vocale (TTS), che contiene un mapping tra questi valori e i corrispondenti valori interruzione millisecondo.</span><span class="sxs-lookup"><span data-stu-id="a059f-160">When a break is requested, one of these values is passed to the text-to-speech (TTS) engine, which contains a mapping between these values and the corresponding millisecond break values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-161">Nell'esempio seguente genera un messaggio che contiene due frasi, separate da un'interruzione e invia l'output a un file di formato per la riproduzione.</span><span class="sxs-lookup"><span data-stu-id="a059f-161">The following example builds a prompt containing two sentences separated by a break and sends the output to a WAV file for playback.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45");  
        builder.AppendBreak(PromptBreak.Medium);  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak (TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak(valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak (duration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak(TimeSpan duration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="duration"><span data-ttu-id="a059f-162">Tempo in tick, in cui un tick è uguale a 100 nanosecondi.</span><span class="sxs-lookup"><span data-stu-id="a059f-162">The time in ticks, where one tick equals 100 nanoseconds.</span></span></param>
        <summary><span data-ttu-id="a059f-163">Aggiunge un'interruzione della durata specificata all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-163">Appends a break of the specified duration to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-164">Un'interruzione può essere utilizzata per controllare pause o altri limiti prosodica tra le parole.</span><span class="sxs-lookup"><span data-stu-id="a059f-164">A break can be used to control pauses or other prosodic boundaries between words.</span></span> <span data-ttu-id="a059f-165">Un'interruzione è facoltativa.</span><span class="sxs-lookup"><span data-stu-id="a059f-165">A break is optional.</span></span> <span data-ttu-id="a059f-166">Se non è presenta un'interruzione, il sintetizzatore determina l'interruzione tra le parole a seconda del contesto linguistico.</span><span class="sxs-lookup"><span data-stu-id="a059f-166">If a break is not present, the synthesizer determines the break between words depending on the linguistic context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-167">Nell'esempio seguente genera una richiesta contenente due frasi, separate da un'interruzione di segni di 15,000,000 graduazione (1,5 secondi) e legge il prompt dei comandi per il dispositivo audio predefinito nel computer.</span><span class="sxs-lookup"><span data-stu-id="a059f-167">The following example builds a prompt containing two sentences separated by a break of 15,000,000 ticks (1.5 seconds), and speaks the prompt to the default audio device on the computer.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45");  
        builder.AppendBreak(new TimeSpan(15000000));  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPromptBuilder">
      <MemberSignature Language="C#" Value="public void AppendPromptBuilder (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendPromptBuilder(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendPromptBuilder(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendPromptBuilder(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="a059f-168">Il contenuto da aggiungere.</span><span class="sxs-lookup"><span data-stu-id="a059f-168">The content to append.</span></span></param>
        <summary><span data-ttu-id="a059f-169">Aggiunge un oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> a un altro oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-169">Appends a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object to another <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a059f-170">Nell'esempio seguente vengono create due <xref:System.Speech.Synthesis.PromptBuilder> istanze e quindi li aggiunge a un terzo <xref:System.Speech.Synthesis.PromptBuilder>.</span><span class="sxs-lookup"><span data-stu-id="a059f-170">The example that follows creates two <xref:System.Speech.Synthesis.PromptBuilder> instances and then appends them to a third <xref:System.Speech.Synthesis.PromptBuilder>.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\showtimes.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\showtimes.wav");  
  
        // Build child prompts.  
        PromptBuilder theatreA = new PromptBuilder();  
        theatreA.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 9:30");  
        theatreA.AppendBreak(PromptBreak.Large);  
        PromptBuilder theatreB = new PromptBuilder();  
        theatreB.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Build the parent prompt and append the two child prompts.  
        PromptBuilder showTimes = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        showTimes.AppendText(  
          "The following are the show times for tonight's movies:");  
        showTimes.AppendPromptBuilder(theatreA);  
        showTimes.AppendPromptBuilder(theatreB);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(showTimes);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSsml">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a059f-171">Aggiunge un file SSML a un oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-171">Appends an SSML file to a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="a059f-172">Percorso completo al file SSML da aggiungere.</span><span class="sxs-lookup"><span data-stu-id="a059f-172">A fully qualified path to the SSML file to append.</span></span></param>
        <summary><span data-ttu-id="a059f-173">Aggiunge il file SSML nel percorso specificato all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-173">Appends the SSML file at the specified path to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-174">Il file SSML deve essere un file di formato XML conforme al [vocale sintesi Markup Language (SSML) versione 1.0](http://go.microsoft.com/fwlink/?LinkId=201763) specifica.</span><span class="sxs-lookup"><span data-stu-id="a059f-174">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763) specification.</span></span>  
  
 <span data-ttu-id="a059f-175">È anche possibile aggiungere il markup SSML come una stringa utilizzando <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-175">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-176">Nell'esempio che segue crea un <xref:System.Speech.Synthesis.PromptBuilder> dell'oggetto e aggiunge il contenuto di un file SSML usando il <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a059f-176">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends the contents of an SSML file using the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a file that defines an SSML prompt.  
        PromptBuilder ssmlFile = new PromptBuilder();  
        ssmlFile.AppendSsml("c:\\test\\Weather.ssml");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(ssmlFile);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 <span data-ttu-id="a059f-177">Di seguito è il file SSML che fa riferimento all'esempio precedente.</span><span class="sxs-lookup"><span data-stu-id="a059f-177">The following is the SSML file that the preceding example references.</span></span>  
  
```xml  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <s> The weather forecast for today is partly cloudy with some sun breaks. </s>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (Uri ssmlFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(class System.Uri ssmlFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (ssmlFile As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(Uri ^ ssmlFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlFile" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="ssmlFile"><span data-ttu-id="a059f-178">URI completo del file SSML da aggiungere.</span><span class="sxs-lookup"><span data-stu-id="a059f-178">A fully qualified URI to the SSML file to append.</span></span></param>
        <summary><span data-ttu-id="a059f-179">Aggiunge il file SSML nell'URI specificato all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-179">Appends the SSML file at the specified URI to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-180">Il file SSML deve essere un file di formato XML conforme al [vocale sintesi Markup Language (SSML) versione 1.0](https://www.w3.org/TR/speech-synthesis/) specifica.</span><span class="sxs-lookup"><span data-stu-id="a059f-180">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://www.w3.org/TR/speech-synthesis/) specification.</span></span>  
  
 <span data-ttu-id="a059f-181">È anche possibile aggiungere il markup SSML come una stringa utilizzando <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-181">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-182">Nell'esempio che segue crea un <xref:System.Speech.Synthesis.PromptBuilder> dell'oggetto e aggiunge il contenuto di un file SSML usando il <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a059f-182">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends the contents of an SSML file using the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a file that defines an SSML prompt.  
        PromptBuilder ssmlFile = new PromptBuilder();  
        ssmlFile.AppendSsml(new Uri("c:\\test\\Weather.ssml"));  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(ssmlFile);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="a059f-183">Di seguito è il file SSML che fa riferimento all'esempio precedente.</span><span class="sxs-lookup"><span data-stu-id="a059f-183">The following is the SSML file that the preceding example references.</span></span>  
  
```xml  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <s> The weather forecast for today is partly cloudy with some sun breaks. </s>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (System.Xml.XmlReader ssmlFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(class System.Xml.XmlReader ssmlFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (ssmlFile As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(System::Xml::XmlReader ^ ssmlFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlFile" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="ssmlFile"><span data-ttu-id="a059f-184">Nome completo del file XML da aggiungere.</span><span class="sxs-lookup"><span data-stu-id="a059f-184">A fully qualified name to the XML file to append.</span></span></param>
        <summary><span data-ttu-id="a059f-185">Aggiunge un oggetto <c>XMLReader</c> che fa riferimento a un prompt SSML all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-185">Appends an <c>XMLReader</c> object that references an SSML prompt to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-186">Il file SSML deve essere un file di formato XML conforme al [vocale sintesi Markup Language (SSML) versione 1.0](https://www.w3.org/TR/speech-synthesis/) specifica.</span><span class="sxs-lookup"><span data-stu-id="a059f-186">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://www.w3.org/TR/speech-synthesis/) specification.</span></span>  
  
 <span data-ttu-id="a059f-187">È anche possibile aggiungere il markup SSML come una stringa utilizzando <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-187">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-188">Nell'esempio seguente viene creato un <xref:System.Speech.Synthesis.PromptBuilder> dell'oggetto da un <xref:System.Xml.XmlReader> oggetto che fa riferimento a un file contenente il markup vocale sintesi Markup Language (SSML).</span><span class="sxs-lookup"><span data-stu-id="a059f-188">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from an <xref:System.Xml.XmlReader> object that references a file containing Speech Synthesis Markup Language (SSML) markup.</span></span>  
  
```csharp  
using System;  
using System.Xml;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Create the path to the SSML file.  
        string weatherFile = Path.GetFullPath("c:\\test\\Weather.xml");  
        PromptBuilder builder = null;  
  
        // Create an XML Reader from the file, create a PromptBuilder and   
        // append the XmlReader.  
        if (File.Exists(weatherFile))  
        {  
          XmlReader reader = XmlReader.Create(weatherFile);  
          builder = new PromptBuilder();  
          builder.AppendSsml(reader);  
          reader.Close();  
        }  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsmlMarkup">
      <MemberSignature Language="C#" Value="public void AppendSsmlMarkup (string ssmlMarkup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsmlMarkup(string ssmlMarkup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsmlMarkup (ssmlMarkup As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsmlMarkup(System::String ^ ssmlMarkup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlMarkup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ssmlMarkup"><span data-ttu-id="a059f-189">Stringa contenente markup SSML.</span><span class="sxs-lookup"><span data-stu-id="a059f-189">A string containing SSML markup.</span></span></param>
        <summary><span data-ttu-id="a059f-190">Aggiunge la stringa specificata che contiene il markup SSML all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-190">Appends the specified string containing SSML markup to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-191">È necessario utilizzare i caratteri di escape appropriata quando si accoda markup SSML.</span><span class="sxs-lookup"><span data-stu-id="a059f-191">You must use the appropriate escape characters when appending SSML markup.</span></span> <span data-ttu-id="a059f-192">Si noti il rovesciate precedono le virgolette che racchiudono il valore del `interpret-as` attributo nell'esempio seguente:</span><span class="sxs-lookup"><span data-stu-id="a059f-192">Notice the backward-slashes preceding the quotation marks enclosing the value of the `interpret-as` attribute in the following example:</span></span>  
  
```csharp  
builder.AppendSsmlMarkup("<say-as interpret-as = \"characters\"> chair </say-as>");  
```  
  
> [!NOTE]
>  <span data-ttu-id="a059f-193">La stringa utilizzata come argomento di <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> non può includere un `speak` elemento.</span><span class="sxs-lookup"><span data-stu-id="a059f-193">The string used as an argument to <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> cannot include a `speak` element.</span></span>  
  
 <span data-ttu-id="a059f-194">Quando si utilizza <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> per specificare la pronuncia inline in un `phoneme` elemento, è possibile utilizzare telefoni da uno qualsiasi dei seguenti alfabeti fonetico, forniti che supporti il motore di riconoscimento vocale corrente:</span><span class="sxs-lookup"><span data-stu-id="a059f-194">When using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> to specify inline pronunciations in a `phoneme` element, you can use phones from any of the following phonetic alphabets, provided that the current speech engine supports it:</span></span>  
  
-   <span data-ttu-id="a059f-195">Alfabeto fonetico internazionale (IPA)</span><span class="sxs-lookup"><span data-stu-id="a059f-195">International Phonetic Alphabet (IPA)</span></span>  
  
-   <span data-ttu-id="a059f-196">Set telefonico universale (UPS)</span><span class="sxs-lookup"><span data-stu-id="a059f-196">Universal Phone Set (UPS)</span></span>  
  
-   <span data-ttu-id="a059f-197">SAPI Phone Set</span><span class="sxs-lookup"><span data-stu-id="a059f-197">SAPI Phone Set</span></span>  
  
 <span data-ttu-id="a059f-198">Il nome di qualsiasi modulo vocale SSML conformi leggerà telefoni di IPA.</span><span class="sxs-lookup"><span data-stu-id="a059f-198">Any SSML-compliant speech engine will speak phones from the IPA.</span></span>  
  
 <span data-ttu-id="a059f-199">È anche possibile aggiungere un file contenente markup SSML utilizzando uno del <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="a059f-199">You can also append a file containing SSML markup using one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods.</span></span> <span data-ttu-id="a059f-200">Per aggiungere testo da leggere che non è formattato con il linguaggio di markup, utilizzare uno del <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, o <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="a059f-200">To append text to be spoken that is not formatted with markup language, use one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendText">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a059f-201">Aggiunge testo all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-201">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="a059f-202">Stringa contenente il testo da usare come input vocale.</span><span class="sxs-lookup"><span data-stu-id="a059f-202">A string containing the text to be spoken.</span></span></param>
        <summary><span data-ttu-id="a059f-203">Specifica il testo da aggiungere all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-203">Specifies text to append to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-204">Per aggiungere testo formattato come linguaggio di markup SSML, utilizzare <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-204">To append text that is formatted as SSML markup language, use <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-205">Nell'esempio che segue crea un <xref:System.Speech.Synthesis.PromptBuilder> dell'oggetto e aggiunge una stringa di testo utilizzando il <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a059f-205">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends a text string using the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder speakText = new PromptBuilder();  
        speakText.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt.  
        synth.Speak(speakText);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptEmphasis emphasis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptEmphasis emphasis) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, emphasis As PromptEmphasis)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptEmphasis emphasis);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="emphasis" Type="System.Speech.Synthesis.PromptEmphasis" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="a059f-206">Stringa contenente il testo da usare come input vocale.</span><span class="sxs-lookup"><span data-stu-id="a059f-206">A string containing the text to be spoken.</span></span></param>
        <param name="emphasis"><span data-ttu-id="a059f-207">Il valore per l'enfasi o l'accento da applicare al testo.</span><span class="sxs-lookup"><span data-stu-id="a059f-207">The value for the emphasis or stress to apply to the text.</span></span></param>
        <summary><span data-ttu-id="a059f-208">Aggiunge il testo all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e specifica il grado di enfasi per il testo.</span><span class="sxs-lookup"><span data-stu-id="a059f-208">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the degree of emphasis for the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-209">I motori di sintesi vocale in Windows non supportano il parametro di enfasi in questo momento.</span><span class="sxs-lookup"><span data-stu-id="a059f-209">The speech synthesis engines in Windows do not support the emphasis parameter at this time.</span></span> <span data-ttu-id="a059f-210">Impostazione dei valori per il parametro di enfasi non produrrà alcuna modifica acustico nell'output di sintesi vocale.</span><span class="sxs-lookup"><span data-stu-id="a059f-210">Setting values for the emphasis parameter will produce no audible change in the synthesized speech output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptRate rate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptRate rate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, rate As PromptRate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptRate rate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="rate" Type="System.Speech.Synthesis.PromptRate" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="a059f-211">Stringa contenente il testo da usare come input vocale.</span><span class="sxs-lookup"><span data-stu-id="a059f-211">A string containing the text to be spoken.</span></span></param>
        <param name="rate"><span data-ttu-id="a059f-212">Il valore per la velocità di pronuncia da applicare al testo.</span><span class="sxs-lookup"><span data-stu-id="a059f-212">The value for the speaking rate to apply to the text.</span></span></param>
        <summary><span data-ttu-id="a059f-213">Aggiunge il testo all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e specifica la velocità di pronuncia per il testo.</span><span class="sxs-lookup"><span data-stu-id="a059f-213">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the speaking rate for the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a059f-214">Nell'esempio seguente viene creato un <xref:System.Speech.Synthesis.PromptBuilder> dell'oggetto e aggiunge le stringhe di testo.</span><span class="sxs-lookup"><span data-stu-id="a059f-214">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends text strings.</span></span> <span data-ttu-id="a059f-215">Nell'esempio viene utilizzato il <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> per specificare una pronuncia lenta frequenza per la stringa da aggiungere, che enumera il contenuto di un ordine.</span><span class="sxs-lookup"><span data-stu-id="a059f-215">The example uses the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method to specify a slow speaking rate for the string being added, which enumerates the contents of an order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder speakRate = new PromptBuilder();  
        speakRate.AppendText("Your order for");  
        speakRate.AppendText("one kitchen sink and one faucet", PromptRate.Slow);  
        speakRate.AppendText("has been confirmed.");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(speakRate);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptVolume volume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptVolume volume) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, volume As PromptVolume)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptVolume volume);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="volume" Type="System.Speech.Synthesis.PromptVolume" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="a059f-216">Stringa contenente il testo da usare come input vocale.</span><span class="sxs-lookup"><span data-stu-id="a059f-216">A string containing the text to be spoken.</span></span></param>
        <param name="volume"><span data-ttu-id="a059f-217">Il valore per il volume della pronuncia da applicare al testo.</span><span class="sxs-lookup"><span data-stu-id="a059f-217">The value for the speaking volume (loudness) to apply to the text.</span></span></param>
        <summary><span data-ttu-id="a059f-218">Aggiunge il testo all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e specifica il volume della pronuncia del testo.</span><span class="sxs-lookup"><span data-stu-id="a059f-218">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the volume to speak the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-219">Il <xref:System.Speech.Synthesis.PromptVolume.Default> impostazione per <xref:System.Speech.Synthesis.PromptVolume> volume completo, ovvero lo stesso come <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span><span class="sxs-lookup"><span data-stu-id="a059f-219">The <xref:System.Speech.Synthesis.PromptVolume.Default> setting for <xref:System.Speech.Synthesis.PromptVolume> is full volume, which is the same as <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span></span> <span data-ttu-id="a059f-220">Le altre impostazioni di ridurre il volume dell'output vocale rispetto al volume pieno.</span><span class="sxs-lookup"><span data-stu-id="a059f-220">The other settings decrease the volume of speech output relative to full volume.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-221">L'esempio seguente usa il <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> per specificare le impostazioni del volume che di <xref:System.Speech.Synthesis.SpeechSynthesizer> deve applicare all'output vocale.</span><span class="sxs-lookup"><span data-stu-id="a059f-221">The following example uses the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method to specify volume settings that the <xref:System.Speech.Synthesis.SpeechSynthesizer> should apply to speech output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt that applies different volume settings.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is the default speaking volume.", PromptVolume.Default);  
        builder.AppendBreak();  
        builder.AppendText("This is the extra loud speaking volume.", PromptVolume.ExtraLoud);  
        builder.AppendBreak();  
        builder.AppendText("This is the medium speaking volume.", PromptVolume.Medium);  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithAlias">
      <MemberSignature Language="C#" Value="public void AppendTextWithAlias (string textToSpeak, string substitute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithAlias(string textToSpeak, string substitute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithAlias (textToSpeak As String, substitute As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithAlias(System::String ^ textToSpeak, System::String ^ substitute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="substitute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="a059f-222">Stringa contenente la rappresentazione del testo.</span><span class="sxs-lookup"><span data-stu-id="a059f-222">A string containing the text representation.</span></span></param>
        <param name="substitute"><span data-ttu-id="a059f-223">Stringa contenente il testo da usare come input vocale.</span><span class="sxs-lookup"><span data-stu-id="a059f-223">A string containing the text to be spoken.</span></span></param>
        <summary><span data-ttu-id="a059f-224">Aggiunge il testo all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e specifica il testo alias da pronunciare al posto del testo aggiunto.</span><span class="sxs-lookup"><span data-stu-id="a059f-224">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the alias text to be spoken in place of the appended text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-225">In questo modo il documento contenga un parlata sia un modulo scritto per una richiesta.</span><span class="sxs-lookup"><span data-stu-id="a059f-225">This allows a document to contain both a spoken and a written form for a prompt.</span></span> <span data-ttu-id="a059f-226">Ad esempio, la forma scritta potrebbe essere un acronimo, ad esempio SAPI, e la forma parlata potrebbe essere il testo per l'acronimo, in questo riconoscimento vocale Application Programming Interface case espanso.</span><span class="sxs-lookup"><span data-stu-id="a059f-226">For example, the written form could be an acronym, such as SAPI, and the spoken form could be the expanded text for the acronym, in this case Speech Application Programming Interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-227">Nell'esempio seguente aggiunge una stringa di testo ("vocale sintesi Markup Language") e il relativo alias "SSML (") a un <xref:System.Speech.Synthesis.PromptBuilder> oggetto.</span><span class="sxs-lookup"><span data-stu-id="a059f-227">The following example appends a text string ("Speech Synthesis Markup Language") and its alias ("SSML") to a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span> <span data-ttu-id="a059f-228">Il sintetizzatore verrà pronunciare "S S M L".</span><span class="sxs-lookup"><span data-stu-id="a059f-228">The synthesizer will pronounce "S S M L".</span></span>  
  
```  
PromptBuilder alias = new PromptBuilder();  
alias.AppendTextWithAlias("Speech Synthesis Markup Language","SSML");   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendTextWithHint">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a059f-229">Aggiunge il testo all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e specifica il tipo di contenuto del testo.</span><span class="sxs-lookup"><span data-stu-id="a059f-229">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the content type of the text.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendTextWithHint">
      <MemberSignature Language="C#" Value="public void AppendTextWithHint (string textToSpeak, System.Speech.Synthesis.SayAs sayAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithHint(string textToSpeak, valuetype System.Speech.Synthesis.SayAs sayAs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithHint(System::String ^ textToSpeak, System::Speech::Synthesis::SayAs sayAs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="sayAs" Type="System.Speech.Synthesis.SayAs" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="a059f-230">Stringa contenente il testo da usare come input vocale.</span><span class="sxs-lookup"><span data-stu-id="a059f-230">A string containing the text to be spoken.</span></span></param>
        <param name="sayAs"><span data-ttu-id="a059f-231">Tipo di contenuto del testo.</span><span class="sxs-lookup"><span data-stu-id="a059f-231">The content type of the text.</span></span></param>
        <summary><span data-ttu-id="a059f-232">Aggiunge il testo all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e specifica il tipo di contenuto con un membro dell'enumerazione <see cref="T:System.Speech.Synthesis.SayAs" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-232">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the content type using a member of the <see cref="T:System.Speech.Synthesis.SayAs" /> enumeration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-233">Il tipo di contenuto specificato da `sayAs` possono fornire linee guida per il motore di sintesi vocale sul pronunciare il contenuto di `textToSpeak`.</span><span class="sxs-lookup"><span data-stu-id="a059f-233">The content type specified by `sayAs` can provide guidance to the speech synthesis engine about how to pronounce the contents of `textToSpeak`.</span></span>  
  
   
  
## Examples  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and define the data types for some of the added strings.  
        PromptBuilder sayAs = new PromptBuilder();  
        sayAs.AppendText("Your");  
        sayAs.AppendTextWithHint("1st", SayAs.NumberOrdinal);  
        sayAs.AppendText("request was for");  
        sayAs.AppendTextWithHint("1", SayAs.NumberCardinal);  
        sayAs.AppendText("room, on");  
        sayAs.AppendTextWithHint("10/19/2012,", SayAs.MonthDayYear);  
        sayAs.AppendText("with early arrival at");  
        sayAs.AppendTextWithHint("12:35pm", SayAs.Time12);  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(sayAs);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithHint">
      <MemberSignature Language="C#" Value="public void AppendTextWithHint (string textToSpeak, string sayAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithHint(string textToSpeak, string sayAs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithHint (textToSpeak As String, sayAs As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithHint(System::String ^ textToSpeak, System::String ^ sayAs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="sayAs" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="a059f-234">Stringa contenente il testo da usare come input vocale.</span><span class="sxs-lookup"><span data-stu-id="a059f-234">A string containing the text to be spoken.</span></span></param>
        <param name="sayAs"><span data-ttu-id="a059f-235">Tipo di contenuto del testo.</span><span class="sxs-lookup"><span data-stu-id="a059f-235">The content type of the text.</span></span></param>
        <summary><span data-ttu-id="a059f-236">Aggiunge il testo all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e un elemento <see cref="T:System.String" /> che specifica il tipo di contenuto del testo.</span><span class="sxs-lookup"><span data-stu-id="a059f-236">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and a <see cref="T:System.String" /> that specifies the content type of the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-237">È possibile utilizzare questo metodo per specificare un tipo di contenuto che non sia presenti i <xref:System.Speech.Synthesis.SayAs> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="a059f-237">You can use this method to specify a content type that is not included in the <xref:System.Speech.Synthesis.SayAs> enumeration.</span></span> <span data-ttu-id="a059f-238">Tuttavia, il motore di sintesi vocale deve supportare il parametro specificato.</span><span class="sxs-lookup"><span data-stu-id="a059f-238">However, the TTS engine must support the parameter that you specify.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithPronunciation">
      <MemberSignature Language="C#" Value="public void AppendTextWithPronunciation (string textToSpeak, string pronunciation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithPronunciation(string textToSpeak, string pronunciation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithPronunciation (textToSpeak As String, pronunciation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithPronunciation(System::String ^ textToSpeak, System::String ^ pronunciation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="pronunciation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="a059f-239">Stringa contenente la forma scritta della parola che usa l'alfabeto convenzionale per una lingua.</span><span class="sxs-lookup"><span data-stu-id="a059f-239">A string containing the written form of the word using the conventional alphabet for a language.</span></span></param>
        <param name="pronunciation"><span data-ttu-id="a059f-240">Stringa contenente i fonemi da pronunciare in base all'alfabeto fonetico internazionale (IPA).</span><span class="sxs-lookup"><span data-stu-id="a059f-240">A string containing phones to be spoken from the International Phonetic Alphabet (IPA).</span></span></param>
        <summary><span data-ttu-id="a059f-241">Aggiunge il testo all'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e specifica la pronuncia per il testo.</span><span class="sxs-lookup"><span data-stu-id="a059f-241">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the pronunciation for the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-242">Il sintetizzatore legge il contenuto del `pronunciation` parametro, non il contenuto del `textToSpeak` parametro.</span><span class="sxs-lookup"><span data-stu-id="a059f-242">The synthesizer speaks the contents of the `pronunciation` parameter, not the contents of the `textToSpeak` parameter.</span></span>  
  
 <span data-ttu-id="a059f-243">Pronuncia specificati inline nelle istruzioni si applicano solo a singola occorrenza di una parola ed eseguire l'override di pronuncia del motore di riconoscimento vocale o uno qualsiasi dei relativi dizionari attualmente attivi.</span><span class="sxs-lookup"><span data-stu-id="a059f-243">Pronunciations specified inline in prompts apply only to the individual occurrence of a word and override pronunciations of the speech engine or any of its currently active lexicons.</span></span> <span data-ttu-id="a059f-244">In genere, si utilizzerà la pronuncia inline per personalizzato pronuncia delle parole esistente o per la pronuncia delle parole comuni, ad esempio nomi propri, che il motore di sintesi vocale non è possibile pronunciare come previsto.</span><span class="sxs-lookup"><span data-stu-id="a059f-244">Typically, you will use inline pronunciations for custom pronunciations of existing words or for pronunciation of uncommon words, such as proper names, which the speech synthesis engine may not pronounce as well as expected.</span></span>  
  
 <span data-ttu-id="a059f-245">Pronuncia inline deve essere specificata utilizzando telefoni da alfabeto fonetico internazionale (IPA).</span><span class="sxs-lookup"><span data-stu-id="a059f-245">Inline pronunciations must be specified using phones from the International Phonetic Alphabet (IPA).</span></span> <span data-ttu-id="a059f-246">Il telefono è una lettera o un carattere che rappresenta un suono discreto di riconoscimento vocale.</span><span class="sxs-lookup"><span data-stu-id="a059f-246">A phone is a letter or character that represents a discreet sound of speech.</span></span> <span data-ttu-id="a059f-247">Vocale che rispettano la [vocale sintesi Markup Language (SSML) versione 1.0](http://go.microsoft.com/fwlink/?LinkId=201763) specifica verrà pronunciare telefoni dal IPA.</span><span class="sxs-lookup"><span data-stu-id="a059f-247">Speech engines that comply with the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763) specification will pronounce phones from the IPA.</span></span> <span data-ttu-id="a059f-248">Per specificare la pronuncia inline utilizzando altri alfabeto fonetico, vedere <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-248">To specify inline pronunciations using other phonetic alphabets, see <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
 <span data-ttu-id="a059f-249">Pubblica il IPA un [grafico](http://go.microsoft.com/fwlink/?LinkId=58362) che elenca il telefoni e ne esegue il mapping a un numero Unicode.</span><span class="sxs-lookup"><span data-stu-id="a059f-249">The IPA publishes a [chart](http://go.microsoft.com/fwlink/?LinkId=58362) that lists its phones and maps them to Unicode numbers.</span></span>  
  
 <span data-ttu-id="a059f-250">Alcuni telefoni nell'alfabeto IPA hanno la stesse rappresentazioni come lettere dell'alfabeto latino.</span><span class="sxs-lookup"><span data-stu-id="a059f-250">Some phones in the IPA alphabet have the same representations as letters in the Latin alphabet.</span></span> <span data-ttu-id="a059f-251">In questi casi, è possibile digitare i caratteri latini e avere la rappresentazione corretta per un telefono.</span><span class="sxs-lookup"><span data-stu-id="a059f-251">In those cases, it is possible to type the Latin character and have the proper representation for a phone.</span></span> <span data-ttu-id="a059f-252">Poiché i caratteri latini viene comunemente utilizzati in testo non possono rappresentare diversi telefoni del set di phone IPA, semplicemente la digitazione di caratteri latini non potrebbe essere preciso telefono IPA desiderato.</span><span class="sxs-lookup"><span data-stu-id="a059f-252">Because the Latin characters as commonly used in text may represent several phones of the IPA phone set, simply typing the Latin character might not result in the precise IPA phone desired.</span></span> <span data-ttu-id="a059f-253">Altri telefoni della necessità di alfabeto IPA deve essere rappresentato nel codice come caratteri costituiti da una e commerciale (&), il simbolo di cancelletto (#), e un numero di Unicode per il telefono desiderato in formato esadecimale o decimale, tutti seguito da un punto e virgola (;).</span><span class="sxs-lookup"><span data-stu-id="a059f-253">Other phones of the IPA alphabet need to be represented in code as character references consisting of an ampersand (&), the number sign (#), and a Unicode number for the desired phone in hexadecimal or decimal, all followed by a semicolon (;).</span></span> <span data-ttu-id="a059f-254">Ad esempio, un schwa (&\#x0259;) sarebbe rappresentato da `&#x0259;`.</span><span class="sxs-lookup"><span data-stu-id="a059f-254">For example, a schwa (&\#x0259;) would be represented by `&#x0259;`.</span></span>  
  
 <span data-ttu-id="a059f-255">Per aggiungere la pronuncia nuova o personalizzata per più parole, ad esempio per express internazionali sottolinguaggi o per aggiungere nomi o un vocabolario è specifico di una disciplina didattico o medica, compilare un lessico e aggiungerla al <xref:System.Speech.Synthesis.SpeechSynthesizer> utilizzando <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-255">To add new or custom pronunciations for multiple words, for example to express regional dialects or to add proper names or vocabulary that is specific to an educational or medical discipline, build a lexicon and add it to the <xref:System.Speech.Synthesis.SpeechSynthesizer> using <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-256">Nell'esempio seguente Inizializza una nuova istanza di <xref:System.Speech.Synthesis.PromptBuilder> classe.</span><span class="sxs-lookup"><span data-stu-id="a059f-256">The following example initializes a new instance of the <xref:System.Speech.Synthesis.PromptBuilder> class.</span></span> <span data-ttu-id="a059f-257">Quindi aggiunge la stringa di testo "il mio nome è" per l'istanza.</span><span class="sxs-lookup"><span data-stu-id="a059f-257">It then appends the text string "My name is" to the instance.</span></span> <span data-ttu-id="a059f-258">Infine, aggiunge una stringa contenente il nome corretto di "DuBois" e specifica la pronuncia del nome.</span><span class="sxs-lookup"><span data-stu-id="a059f-258">Finally, it appends a string containing the proper name "DuBois" and specifies the pronunciation of the name.</span></span>  
  
```csharp  
public void ProperName()  
{  
    PromptBuilder builder = new PromptBuilder();  
    builder.AppendText("My name is");  
  
    // Add a proper name and its pronunciation.  
    builder.AppendTextWithPronunciation("DuBois", "duˈbwɑ");     
}  
```  
  
 <span data-ttu-id="a059f-259">Di seguito viene illustrato l'elemento SSML da questo <xref:System.Speech.Synthesis.PromptBuilder> oggetto genera l'errore.</span><span class="sxs-lookup"><span data-stu-id="a059f-259">The following markup shows the SSML that this <xref:System.Speech.Synthesis.PromptBuilder> object generates.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-us">  
  My name is <phoneme ph="duˈbwɑ"> DuBois </phoneme>  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContent">
      <MemberSignature Language="C#" Value="public void ClearContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.ClearContent" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a059f-260">Cancella il contenuto dell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-260">Clears the content from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PromptBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a059f-261">Ottiene o imposta le informazioni sulle impostazioni cultura per l'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-261">Gets or sets the culture information for the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-262">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> tenta di selezionare una voce installata che supporta il linguaggio specificato dall'oggetto di <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> proprietà per elaborare la richiesta.</span><span class="sxs-lookup"><span data-stu-id="a059f-262">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object will attempt to select an installed voice that supports the language specified by the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property to process the prompt.</span></span> <span data-ttu-id="a059f-263">Se viene trovata una voce con le impostazioni cultura specificate, verrà utilizzato.</span><span class="sxs-lookup"><span data-stu-id="a059f-263">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="a059f-264">Se non viene trovata una voce con le impostazioni cultura specificate, verrà utilizzata la voce predefinita.</span><span class="sxs-lookup"><span data-stu-id="a059f-264">If a voice with the specified culture cannot be found, the default voice will be used.</span></span>  
  
 <span data-ttu-id="a059f-265">È anche possibile specificare una lingua all'interno di prompt per distinte sezioni di contenuto mediante il <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, e <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="a059f-265">A culture may also be specified within the prompt for discreet sections of content using the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, and <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> methods.</span></span> <span data-ttu-id="a059f-266">Specificato per una parte del contenuto con uno dei metodi sopra riportati sostituiranno le impostazioni cultura di <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> proprietà mentre è in effetti e <xref:System.Speech.Synthesis.SpeechSynthesizer> tenterà di selezionare una voce installata che supporta la lingua specificata dal `culture` parametro del metodo.</span><span class="sxs-lookup"><span data-stu-id="a059f-266">A culture specified for a portion of content using one of the above methods will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property while in effect, and the <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter of the method.</span></span>  
  
 <span data-ttu-id="a059f-267">Per correttamente pronunciare le parole nella lingua specificata per il <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> proprietà, un motore di sintesi (sintesi vocale o TTS) vocale che supporta il linguaggio deve essere installato.</span><span class="sxs-lookup"><span data-stu-id="a059f-267">To correctly pronounce words in the language specified by the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="a059f-268">Un motore di sintesi vocale installata viene chiamato una voce.</span><span class="sxs-lookup"><span data-stu-id="a059f-268">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="a059f-269">Per ottenere informazioni su cui sono installate voci per una lingua specifica, utilizzare il <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a059f-269">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="a059f-270">Microsoft Windows e l'API Speech accettare tutti i codici di lingua, paese validi come valori per `culture`.</span><span class="sxs-lookup"><span data-stu-id="a059f-270">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="a059f-271">I motori di sintesi vocale forniti con Windows 7 supportano i seguenti codici di lingua, paese:</span><span class="sxs-lookup"><span data-stu-id="a059f-271">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="a059f-272">en-US.</span><span class="sxs-lookup"><span data-stu-id="a059f-272">en-US.</span></span> <span data-ttu-id="a059f-273">Inglese (Stati Uniti)</span><span class="sxs-lookup"><span data-stu-id="a059f-273">English (United States)</span></span>  
  
-   <span data-ttu-id="a059f-274">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="a059f-274">zh-CN.</span></span> <span data-ttu-id="a059f-275">Cinese (Cina)</span><span class="sxs-lookup"><span data-stu-id="a059f-275">Chinese (China)</span></span>  
  
-   <span data-ttu-id="a059f-276">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="a059f-276">zh-TW.</span></span> <span data-ttu-id="a059f-277">Cinese (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="a059f-277">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="a059f-278">Sono inoltre consentiti i codici di lingua di due lettere, ad esempio "en".</span><span class="sxs-lookup"><span data-stu-id="a059f-278">Two-letter language codes such as "en" are also permitted.</span></span>  <span data-ttu-id="a059f-279">Vedere [costanti di identificatore di lingua e le stringhe](http://msdn.microsoft.com/library/dd318693\(VS.85\).aspx) per un elenco completo dei codici lingua.</span><span class="sxs-lookup"><span data-stu-id="a059f-279">See [Language Identifier Constants and Strings](http://msdn.microsoft.com/library/dd318693\(VS.85\).aspx) for a comprehensive list of language codes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndParagraph">
      <MemberSignature Language="C#" Value="public void EndParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndParagraph() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndParagraph();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a059f-280">Specifica la fine di un paragrafo nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-280">Specifies the end of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-281">Richieste lungo possono essere visualizzate più simile voce umana se essi sono suddivisi in frasi e paragrafi.</span><span class="sxs-lookup"><span data-stu-id="a059f-281">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span> <span data-ttu-id="a059f-282">Per un esempio, vedere <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-282">See <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSentence">
      <MemberSignature Language="C#" Value="public void EndSentence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSentence() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndSentence" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSentence ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSentence();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a059f-283">Specifica la fine di un periodo nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-283">Specifies the end of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-284">Richieste lungo possono essere visualizzate più simile voce umana se essi sono suddivisi in frasi e paragrafi.</span><span class="sxs-lookup"><span data-stu-id="a059f-284">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span> <span data-ttu-id="a059f-285">Per un esempio, vedere <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-285">See <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndStyle">
      <MemberSignature Language="C#" Value="public void EndStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a059f-286">Specifica la fine di uno stile nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-286">Specifies the end of a style in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-287">Il <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> metodo arresta lo stile della voce corrente.</span><span class="sxs-lookup"><span data-stu-id="a059f-287">The <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> method stops the current speaking style.</span></span> <span data-ttu-id="a059f-288">Lo stile di pronuncia viene ripristinata l'impostazione che era attivo prima di <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> metodo avviato un nuovo stile pronuncia.</span><span class="sxs-lookup"><span data-stu-id="a059f-288">The speaking style reverts to the setting that was in effect before the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method initiated a new speaking style.</span></span> <span data-ttu-id="a059f-289">Per un esempio, vedere <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-289">See <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndVoice">
      <MemberSignature Language="C#" Value="public void EndVoice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndVoice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndVoice" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndVoice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndVoice();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a059f-290">Specifica la fine dell'uso di una voce nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-290">Specifies the end of use of a voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-291">Il <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A> metodo interrompe l'utilizzo della voce corrente per l'output vocale.</span><span class="sxs-lookup"><span data-stu-id="a059f-291">The <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A> method stops the use of the current voice for speech output.</span></span> <span data-ttu-id="a059f-292">La voce viene ripristinata l'impostazione che era attivo prima di <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> metodo avviata una nuova voce.</span><span class="sxs-lookup"><span data-stu-id="a059f-292">The voice reverts to the setting that was in effect before the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> method initiated a new voice.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PromptBuilder.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a059f-293">Ottiene un valore che indica se l'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> è vuoto.</span><span class="sxs-lookup"><span data-stu-id="a059f-293">Gets whether the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> is empty.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartParagraph">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a059f-294">Specifica l'inizio di un paragrafo nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e facoltativamente specifica una lingua.</span><span class="sxs-lookup"><span data-stu-id="a059f-294">Specifies the start of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object, and optionally specifies a language.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-295">Richieste lungo possono essere visualizzate più simile voce umana se essi sono suddivisi in frasi e paragrafi.</span><span class="sxs-lookup"><span data-stu-id="a059f-295">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartParagraph">
      <MemberSignature Language="C#" Value="public void StartParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartParagraph() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartParagraph();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a059f-296">Specifica l'inizio di un paragrafo nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-296">Specifies the start of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-297">Richieste lungo possono essere visualizzate più simile voce umana se essi sono suddivisi in frasi e paragrafi.</span><span class="sxs-lookup"><span data-stu-id="a059f-297">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-298">Nell'esempio seguente viene creato un <xref:System.Speech.Synthesis.PromptBuilder> oggetto aggiunge contenuto e consente di organizzare il contenuto in paragrafi e frasi.</span><span class="sxs-lookup"><span data-stu-id="a059f-298">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends content, and organizes the content into paragraphs and sentences.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content as paragraphs and sentences.  
        PromptBuilder parSent = new PromptBuilder();  
        parSent.StartParagraph();  
        parSent.StartSentence();  
        parSent.AppendText("Introducing the sentence element.");  
        parSent.EndSentence();  
        parSent.StartSentence();  
        parSent.AppendText("You can use it to mark individual sentences.");  
        parSent.EndSentence();  
        parSent.EndParagraph();  
        parSent.StartParagraph();  
        parSent.AppendText("Another simple paragraph. Sentence structure in this paragraph" +  
          "is not explicitly marked.");  
        parSent.EndParagraph();  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(parSent);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartParagraph">
      <MemberSignature Language="C#" Value="public void StartParagraph (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartParagraph(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartParagraph (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartParagraph(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="a059f-299">Fornisce informazioni su impostazioni cultura specifiche, ad esempio lingua, nome delle impostazioni cultura, sistema di scrittura, calendario usato e modalità di formattazione delle date e ordinamento delle stringhe.</span><span class="sxs-lookup"><span data-stu-id="a059f-299">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="a059f-300">Specifica l'inizio di un paragrafo nelle impostazioni cultura specificate nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-300">Specifies the start of a paragraph in the specified culture in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-301">Richieste lungo possono essere visualizzate più simile voce umana se essi sono suddivisi in frasi e paragrafi.</span><span class="sxs-lookup"><span data-stu-id="a059f-301">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 <span data-ttu-id="a059f-302">Il `culture` parametro per un paragrafo può essere diverso da quello di <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> proprietà del <xref:System.Speech.Synthesis.PromptBuilder> oggetto che lo contiene.</span><span class="sxs-lookup"><span data-stu-id="a059f-302">The `culture` parameter for a paragraph can be different than the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains it.</span></span> <span data-ttu-id="a059f-303">In effetti, mentre il valore del `culture` parametro sostituiranno il <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a059f-303">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="a059f-304">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> tenterà di selezionare una voce installata che supporta la lingua specificata dal `culture` parametro parlare di paragrafo.</span><span class="sxs-lookup"><span data-stu-id="a059f-304">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the paragraph.</span></span> <span data-ttu-id="a059f-305">Se viene trovata una voce con le impostazioni cultura specificate, verrà utilizzato.</span><span class="sxs-lookup"><span data-stu-id="a059f-305">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="a059f-306">Se non viene trovata una voce con le impostazioni cultura specificate, verrà utilizzata la voce predefinita.</span><span class="sxs-lookup"><span data-stu-id="a059f-306">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="a059f-307">Per smettere di usare la voce specificata da <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, chiamare <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-307">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>.</span></span>  
  
 <span data-ttu-id="a059f-308">Per correttamente pronunciare le parole nella lingua specificata per il `culture` parametro, un motore di sintesi (sintesi vocale o TTS) vocale che supporta il linguaggio deve essere installato.</span><span class="sxs-lookup"><span data-stu-id="a059f-308">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="a059f-309">Un motore di sintesi vocale installata viene chiamato una voce.</span><span class="sxs-lookup"><span data-stu-id="a059f-309">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="a059f-310">Per ottenere informazioni su cui sono installate voci per una lingua specifica, utilizzare il <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a059f-310">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="a059f-311">Microsoft Windows e l'API Speech accettare tutti i codici di lingua, paese validi come valori per `culture`.</span><span class="sxs-lookup"><span data-stu-id="a059f-311">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="a059f-312">I motori di sintesi vocale forniti con Windows 7 supportano i seguenti codici di lingua, paese:</span><span class="sxs-lookup"><span data-stu-id="a059f-312">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="a059f-313">en-US.</span><span class="sxs-lookup"><span data-stu-id="a059f-313">en-US.</span></span> <span data-ttu-id="a059f-314">Inglese (Stati Uniti)</span><span class="sxs-lookup"><span data-stu-id="a059f-314">English (United States)</span></span>  
  
-   <span data-ttu-id="a059f-315">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="a059f-315">zh-CN.</span></span> <span data-ttu-id="a059f-316">Cinese (Cina)</span><span class="sxs-lookup"><span data-stu-id="a059f-316">Chinese (China)</span></span>  
  
-   <span data-ttu-id="a059f-317">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="a059f-317">zh-TW.</span></span> <span data-ttu-id="a059f-318">Cinese (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="a059f-318">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="a059f-319">Sono inoltre consentiti i codici di lingua di due lettere, ad esempio "en".</span><span class="sxs-lookup"><span data-stu-id="a059f-319">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartSentence">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a059f-320">Specifica l'inizio di una frase nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e facoltativamente specifica una lingua.</span><span class="sxs-lookup"><span data-stu-id="a059f-320">Specifies the start of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object, and optionally specifies a language.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-321">Richieste lungo possono essere visualizzate più simile voce umana se essi sono suddivisi in frasi e paragrafi.</span><span class="sxs-lookup"><span data-stu-id="a059f-321">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartSentence">
      <MemberSignature Language="C#" Value="public void StartSentence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartSentence() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartSentence" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartSentence ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartSentence();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a059f-322">Specifica l'inizio di una frase nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-322">Specifies the start of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-323">Richieste lungo possono essere visualizzate più simile voce umana se essi sono suddivisi in frasi e paragrafi.</span><span class="sxs-lookup"><span data-stu-id="a059f-323">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-324">Nell'esempio seguente viene creato un <xref:System.Speech.Synthesis.PromptBuilder> oggetto aggiunge contenuto e consente di organizzare il contenuto in paragrafi e frasi.</span><span class="sxs-lookup"><span data-stu-id="a059f-324">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends content, and organizes the content into paragraphs and sentences.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content as paragraphs and sentences.  
        PromptBuilder parSent = new PromptBuilder();  
        parSent.StartParagraph();  
        parSent.StartSentence();  
        parSent.AppendText("Introducing the sentence element.");  
        parSent.EndSentence();  
        parSent.StartSentence();  
        parSent.AppendText("You can use it to mark individual sentences.");  
        parSent.EndSentence();  
        parSent.EndParagraph();  
        parSent.StartParagraph();  
        parSent.AppendText("Another simple paragraph. Sentence structure in this paragraph" +  
          "is not explicitly marked.");  
        parSent.EndParagraph();  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(parSent);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSentence">
      <MemberSignature Language="C#" Value="public void StartSentence (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartSentence(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartSentence (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartSentence(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="a059f-325">Fornisce informazioni su impostazioni cultura specifiche, ad esempio lingua, nome delle impostazioni cultura, sistema di scrittura, calendario usato e modalità di formattazione delle date e ordinamento delle stringhe.</span><span class="sxs-lookup"><span data-stu-id="a059f-325">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="a059f-326">Specifica l'inizio di una frase nelle impostazioni cultura specificate nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-326">Specifies the start of a sentence in the specified culture in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-327">Richieste lungo possono essere visualizzate più simile voce umana se essi sono suddivisi in frasi e paragrafi.</span><span class="sxs-lookup"><span data-stu-id="a059f-327">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 <span data-ttu-id="a059f-328">Il `culture` parametro di una frase può essere diverso da quello di `culture` parametro per il paragrafo contenente la frase o <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> proprietà del <xref:System.Speech.Synthesis.PromptBuilder> oggetto che li contiene.</span><span class="sxs-lookup"><span data-stu-id="a059f-328">The `culture` parameter for a sentence can be different than the `culture` parameter for the paragraph that contains the sentence or the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains them.</span></span>  
  
 <span data-ttu-id="a059f-329">In effetti, mentre il valore del `culture` parametro eseguirà l'override di <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> proprietà e `culture` parametro per il paragrafo contenente la frase.</span><span class="sxs-lookup"><span data-stu-id="a059f-329">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property and the `culture` parameter for the paragraph that contains the sentence.</span></span> <span data-ttu-id="a059f-330">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> tenterà di selezionare una voce installata che supporta la lingua specificata dal `culture` parametro pronuncia della frase.</span><span class="sxs-lookup"><span data-stu-id="a059f-330">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the sentence.</span></span> <span data-ttu-id="a059f-331">Se viene trovata una voce con le impostazioni cultura specificate, verrà utilizzato.</span><span class="sxs-lookup"><span data-stu-id="a059f-331">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="a059f-332">Se non viene trovata una voce con le impostazioni cultura specificate, verrà utilizzata la voce predefinita.</span><span class="sxs-lookup"><span data-stu-id="a059f-332">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="a059f-333">Per smettere di usare la voce specificata da <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>, chiamare <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-333">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A>.</span></span>  
  
 <span data-ttu-id="a059f-334">Per correttamente pronunciare le parole nella lingua specificata per il `culture` parametro, un motore di sintesi (sintesi vocale o TTS) vocale che supporta il linguaggio deve essere installato.</span><span class="sxs-lookup"><span data-stu-id="a059f-334">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="a059f-335">Un motore di sintesi vocale installata viene chiamato una voce.</span><span class="sxs-lookup"><span data-stu-id="a059f-335">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="a059f-336">Per ottenere informazioni su cui sono installate voci per una lingua specifica, utilizzare il <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a059f-336">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="a059f-337">Microsoft Windows e l'API Speech accettare tutti i codici di lingua, paese validi come valori per `culture`.</span><span class="sxs-lookup"><span data-stu-id="a059f-337">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="a059f-338">I motori di sintesi vocale forniti con Windows 7 supportano i seguenti codici di lingua, paese:</span><span class="sxs-lookup"><span data-stu-id="a059f-338">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="a059f-339">en-US.</span><span class="sxs-lookup"><span data-stu-id="a059f-339">en-US.</span></span> <span data-ttu-id="a059f-340">Inglese (Stati Uniti)</span><span class="sxs-lookup"><span data-stu-id="a059f-340">English (United States)</span></span>  
  
-   <span data-ttu-id="a059f-341">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="a059f-341">zh-CN.</span></span> <span data-ttu-id="a059f-342">Cinese (Cina)</span><span class="sxs-lookup"><span data-stu-id="a059f-342">Chinese (China)</span></span>  
  
-   <span data-ttu-id="a059f-343">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="a059f-343">zh-TW.</span></span> <span data-ttu-id="a059f-344">Cinese (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="a059f-344">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="a059f-345">Sono inoltre consentiti i codici di lingua di due lettere, ad esempio "en".</span><span class="sxs-lookup"><span data-stu-id="a059f-345">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartStyle">
      <MemberSignature Language="C#" Value="public void StartStyle (System.Speech.Synthesis.PromptStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartStyle(class System.Speech.Synthesis.PromptStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartStyle(System.Speech.Synthesis.PromptStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartStyle (style As PromptStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartStyle(System::Speech::Synthesis::PromptStyle ^ style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Speech.Synthesis.PromptStyle" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="a059f-346">Stile da avviare.</span><span class="sxs-lookup"><span data-stu-id="a059f-346">The style to start.</span></span></param>
        <summary><span data-ttu-id="a059f-347">Specifica l'inizio di uno stile nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-347">Specifies the start of a style in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-348">Il <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> metodo accetta un <xref:System.Speech.Synthesis.PromptStyle> oggetto come relativo argomento.</span><span class="sxs-lookup"><span data-stu-id="a059f-348">The <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method takes a <xref:System.Speech.Synthesis.PromptStyle> object as its argument.</span></span> <span data-ttu-id="a059f-349">È possibile utilizzare le proprietà del <xref:System.Speech.Synthesis.PromptStyle> per impostare l'enfasi, velocità di pronuncia e volume (sonorità) da applicare al riconoscimento vocale mentre lo stile è in corso di output.</span><span class="sxs-lookup"><span data-stu-id="a059f-349">You can use the properties of the <xref:System.Speech.Synthesis.PromptStyle> object to set the emphasis, speaking rate, and volume (loudness) to apply to speech output while the style is in effect.</span></span> <span data-ttu-id="a059f-350">Per arrestare utilizzando lo stile corrente, chiamare il <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a059f-350">To stop using the current style, call the <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> method.</span></span>  
  
> [!NOTE]
>  -   <span data-ttu-id="a059f-351">I motori di sintesi vocale in Windows non supportano il parametro di enfasi in questo momento.</span><span class="sxs-lookup"><span data-stu-id="a059f-351">The speech synthesis engines in Windows do not support the emphasis parameter at this time.</span></span> <span data-ttu-id="a059f-352">Impostazione dei valori per il parametro di enfasi non produrrà alcuna modifica acustico nell'output di sintesi vocale.</span><span class="sxs-lookup"><span data-stu-id="a059f-352">Setting values for the emphasis parameter will produce no audible change in the synthesized speech output.</span></span>  
> -   <span data-ttu-id="a059f-353">Il <xref:System.Speech.Synthesis.PromptVolume.Default> impostazione per <xref:System.Speech.Synthesis.PromptVolume> volume completo, ovvero lo stesso come <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span><span class="sxs-lookup"><span data-stu-id="a059f-353">The <xref:System.Speech.Synthesis.PromptVolume.Default> setting for <xref:System.Speech.Synthesis.PromptVolume> is full volume, which is the same as <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span></span> <span data-ttu-id="a059f-354">Le altre impostazioni di ridurre il volume dell'output vocale rispetto al volume pieno.</span><span class="sxs-lookup"><span data-stu-id="a059f-354">The other settings decrease the volume of speech output relative to full volume.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-355">Nell'esempio seguente viene creato un <xref:System.Speech.Synthesis.PromptBuilder> dell'oggetto e aggiunge le stringhe di testo.</span><span class="sxs-lookup"><span data-stu-id="a059f-355">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends text strings.</span></span> <span data-ttu-id="a059f-356">Nell'esempio viene utilizzato il <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> per specificare una pronuncia lenta frequenza per la stringa da aggiungere, che enumera il contenuto di un ordine.</span><span class="sxs-lookup"><span data-stu-id="a059f-356">The example uses the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method to specify a slow speaking rate for the string being added, which enumerates the contents of an order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder style = new PromptBuilder();  
        style.AppendText("Your order for");  
        style.StartStyle(new PromptStyle(PromptRate.Slow));  
        style.AppendText("one kitchen sink and one faucet");  
        style.EndStyle();  
        style.AppendText("has been confirmed.");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(style);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartVoice">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a059f-357">Indica al sintetizzatore di modificare la voce in un oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-357">Instructs the synthesizer to change the voice in a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-358">Una voce rappresenta un motore di sintesi vocale installata.</span><span class="sxs-lookup"><span data-stu-id="a059f-358">A voice represents an installed TTS engine.</span></span> <span data-ttu-id="a059f-359">Utilizzare il <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodi e <xref:System.Speech.Synthesis.VoiceInfo> installato di classe per ottenere i nomi e gli attributi di voci di sintesi vocale (TTS) che è possibile selezionare.</span><span class="sxs-lookup"><span data-stu-id="a059f-359">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="a059f-360">Quando un'applicazione chiama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, il metodo verifica che ciascuna delle voci nel Registro di sistema rileva soddisfi determinati criteri minimi.</span><span class="sxs-lookup"><span data-stu-id="a059f-360">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="a059f-361">Per qualsiasi voce che si verifica un errore di verifica, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> imposta relativo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="a059f-361">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="a059f-362">Un'applicazione non è possibile chiamare tutte le <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> metodi su una voce il cui <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà `False`.</span><span class="sxs-lookup"><span data-stu-id="a059f-362">An application cannot call any of the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods on a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="a059f-363">In genere, le applicazioni non verranno impostata una voce <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a059f-363">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="a059f-364">Fornisce informazioni su impostazioni cultura specifiche, ad esempio lingua, nome delle impostazioni cultura, sistema di scrittura, calendario usato e modalità di formattazione delle date e ordinamento delle stringhe.</span><span class="sxs-lookup"><span data-stu-id="a059f-364">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="a059f-365">Indica al sintetizzatore di modificare la voce nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e specifica le impostazioni cultura della nuova voce da usare.</span><span class="sxs-lookup"><span data-stu-id="a059f-365">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the culture of the voice to use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-366">Il `culture` parametro per <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> può essere diverso da quello di <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> proprietà del <xref:System.Speech.Synthesis.PromptBuilder> oggetto che lo contiene.</span><span class="sxs-lookup"><span data-stu-id="a059f-366">The `culture` parameter for <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> can be different than the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains it.</span></span>  <span data-ttu-id="a059f-367">In effetti, mentre il valore del `culture` parametro sostituiranno il <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="a059f-367">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="a059f-368">Il <xref:System.Speech.Synthesis.SpeechSynthesizer> tenterà di selezionare una voce installata che supporta la lingua specificata dal `culture` parametro parlare il contenuto racchiuso <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> e <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-368">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the content enclosed by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> and <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span> <span data-ttu-id="a059f-369">Se viene trovata una voce con le impostazioni cultura specificate, verrà utilizzato.</span><span class="sxs-lookup"><span data-stu-id="a059f-369">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="a059f-370">Se non viene trovata una voce con le impostazioni cultura specificate, verrà utilizzata la voce predefinita.</span><span class="sxs-lookup"><span data-stu-id="a059f-370">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="a059f-371">Per smettere di usare la voce specificata da <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, chiamare <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-371">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 <span data-ttu-id="a059f-372">Per correttamente pronunciare le parole nella lingua specificata per il `culture` parametro, un motore di sintesi (sintesi vocale o TTS) vocale che supporta il linguaggio deve essere installato.</span><span class="sxs-lookup"><span data-stu-id="a059f-372">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="a059f-373">Un motore di sintesi vocale installata viene chiamato una voce.</span><span class="sxs-lookup"><span data-stu-id="a059f-373">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="a059f-374">Per ottenere informazioni su cui sono installate voci per una lingua specifica, utilizzare il <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="a059f-374">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="a059f-375">Microsoft Windows e l'API Speech accettare tutti i codici di lingua, paese validi come valori per `culture`.</span><span class="sxs-lookup"><span data-stu-id="a059f-375">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="a059f-376">I motori di sintesi vocale forniti con Windows 7 supportano i seguenti codici di lingua, paese:</span><span class="sxs-lookup"><span data-stu-id="a059f-376">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="a059f-377">en-US.</span><span class="sxs-lookup"><span data-stu-id="a059f-377">en-US.</span></span> <span data-ttu-id="a059f-378">Inglese (Stati Uniti)</span><span class="sxs-lookup"><span data-stu-id="a059f-378">English (United States)</span></span>  
  
-   <span data-ttu-id="a059f-379">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="a059f-379">zh-CN.</span></span> <span data-ttu-id="a059f-380">Cinese (Cina)</span><span class="sxs-lookup"><span data-stu-id="a059f-380">Chinese (China)</span></span>  
  
-   <span data-ttu-id="a059f-381">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="a059f-381">zh-TW.</span></span> <span data-ttu-id="a059f-382">Cinese (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="a059f-382">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="a059f-383">Sono inoltre consentiti i codici di lingua di due lettere, ad esempio "en".</span><span class="sxs-lookup"><span data-stu-id="a059f-383">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="a059f-384">Il genere della voce da usare.</span><span class="sxs-lookup"><span data-stu-id="a059f-384">The gender of the voice to use.</span></span></param>
        <summary><span data-ttu-id="a059f-385">Indica al sintetizzatore di modificare la voce nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e specifica il genere della voce da usare.</span><span class="sxs-lookup"><span data-stu-id="a059f-385">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the gender of the voice to use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-386">Utilizzare il <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodi e <xref:System.Speech.Synthesis.VoiceInfo> installato di classe per ottenere i nomi e gli attributi di voci di sintesi vocale (TTS) che è possibile selezionare.</span><span class="sxs-lookup"><span data-stu-id="a059f-386">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="a059f-387">Per smettere di usare la voce specificata da <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> chiamare <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-387">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceInfo voice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(class System.Speech.Synthesis.VoiceInfo voice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (voice As VoiceInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceInfo ^ voice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="voice" Type="System.Speech.Synthesis.VoiceInfo" />
      </Parameters>
      <Docs>
        <param name="voice"><span data-ttu-id="a059f-388">I criteri per la voce da usare.</span><span class="sxs-lookup"><span data-stu-id="a059f-388">The criteria for the voice to use.</span></span></param>
        <summary><span data-ttu-id="a059f-389">Indica al sintetizzatore di modificare la voce nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e specifica i criteri per la nuova voce.</span><span class="sxs-lookup"><span data-stu-id="a059f-389">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies criteria for the new voice.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-390">Utilizzare il <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodi e <xref:System.Speech.Synthesis.VoiceInfo> installato di classe per ottenere i nomi e gli attributi di voci di sintesi vocale (TTS) che è possibile selezionare.</span><span class="sxs-lookup"><span data-stu-id="a059f-390">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="a059f-391">Per smettere di usare la voce specificata da <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> chiamare <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-391">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a059f-392">Nome della voce da usare.</span><span class="sxs-lookup"><span data-stu-id="a059f-392">The name of the voice to use.</span></span></param>
        <summary><span data-ttu-id="a059f-393">Indica al sintetizzatore di modificare la voce nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e specifica il nome della voce da usare.</span><span class="sxs-lookup"><span data-stu-id="a059f-393">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the name of the voice to use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-394">Per ottenere informazioni sulle voci installate, usare uno del <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="a059f-394">To get information about which voices are installed, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods.</span></span>  
  
 <span data-ttu-id="a059f-395">Per smettere di usare la voce specificata da <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> chiamare <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-395">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="a059f-396">Il genere della nuova voce da usare.</span><span class="sxs-lookup"><span data-stu-id="a059f-396">The gender of the new voice to use.</span></span></param>
        <param name="age"><span data-ttu-id="a059f-397">L'età della voce da usare.</span><span class="sxs-lookup"><span data-stu-id="a059f-397">The age of the voice to use.</span></span></param>
        <summary><span data-ttu-id="a059f-398">Indica al sintetizzatore di modificare la voce nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e specifica il genere e l'età della nuova voce.</span><span class="sxs-lookup"><span data-stu-id="a059f-398">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the gender and the age of the new voice.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-399">Utilizzare il <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodi e <xref:System.Speech.Synthesis.VoiceInfo> installato di classe per ottenere i nomi e gli attributi di voci di sintesi vocale (TTS) che è possibile selezionare.</span><span class="sxs-lookup"><span data-stu-id="a059f-399">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="a059f-400">Per smettere di usare la voce specificata da <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> chiamare <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-400">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="a059f-401">Il genere della voce da usare.</span><span class="sxs-lookup"><span data-stu-id="a059f-401">The gender of the voice to use.</span></span></param>
        <param name="age"><span data-ttu-id="a059f-402">L'età della voce da usare.</span><span class="sxs-lookup"><span data-stu-id="a059f-402">The age of the voice to use.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="a059f-403">Numero intero che specifica una voce preferita quando più voci corrispondono ai parametri <c>gender</c> e <c>age</c>.</span><span class="sxs-lookup"><span data-stu-id="a059f-403">An integer that specifies a preferred voice when more than one voice matches the <c>gender</c> and <c>age</c> parameters.</span></span></param>
        <summary><span data-ttu-id="a059f-404">Indica al sintetizzatore di modificare la voce nell'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> e specifica il genere, l'età e una voce preferita che corrisponde al genere e all'età specificati.</span><span class="sxs-lookup"><span data-stu-id="a059f-404">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies its gender, age, and a preferred voice that matches the specified gender and age.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-405">Motore di sintesi vocale conta le corrispondenze individua per i parametri specificati e restituisce la voce quando il conteggio è uguale al `voiceAlternate` parametro.</span><span class="sxs-lookup"><span data-stu-id="a059f-405">A speech synthesis engine counts the matches it finds for the specified parameters, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="a059f-406">Utilizzare il <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> metodi e <xref:System.Speech.Synthesis.VoiceInfo> installato di classe per ottenere i nomi e gli attributi di voci di sintesi vocale (TTS) che è possibile selezionare.</span><span class="sxs-lookup"><span data-stu-id="a059f-406">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="a059f-407">Per smettere di usare la voce specificata da <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> chiamare <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="a059f-407">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public string ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a059f-408">Restituisce l'elemento SSML generato dall'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a059f-408">Returns the SSML generated from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="a059f-409">Restituisce l'elemento SSML generato dall'oggetto <see cref="T:System.Speech.Synthesis.PromptBuilder" /> come singola riga.</span><span class="sxs-lookup"><span data-stu-id="a059f-409">Returns the SSML generated from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object as a single line.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a059f-410">Il <xref:System.Speech.Synthesis.PromptBuilder.ToXml%2A> metodo non effettua alcun tentativo di formattare l'elemento SSML restituito in alcun modo.</span><span class="sxs-lookup"><span data-stu-id="a059f-410">The <xref:System.Speech.Synthesis.PromptBuilder.ToXml%2A> method makes no attempt to format the returned SSML in any way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a059f-411">Nell'esempio seguente viene creato un <xref:System.Speech.Synthesis.PromptBuilder> oggetto, aggiunge il testo e quindi scrive l'equivalente SSML del prompt nella console prima di parlare il contenuto del messaggio.</span><span class="sxs-lookup"><span data-stu-id="a059f-411">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends text, and then writes the SSML equivalent of the prompt to the console before speaking the contents of the prompt.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder style = new PromptBuilder();  
        style.AppendText("Your order for");  
        style.StartStyle(new PromptStyle(PromptRate.Slow));  
        style.AppendText("one kitchen sink and one faucet");  
        style.EndStyle();  
        style.AppendText("has been confirmed.");  
  
        // Write the contents of the PromptBuilder object to the console as  
        // an SSML-compatible XML file.  
        string myXml = style.ToXml();  
        Console.WriteLine("This is the SSML equivalent of the PromptBuilder: \n\n" + myXml);  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(style);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>