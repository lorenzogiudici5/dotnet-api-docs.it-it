<Type Name="TimerEventSubscriptionCollection" FullName="System.Workflow.Runtime.TimerEventSubscriptionCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aa1a71bfbffb3c3007fbfa2ecbd18e6ce7f2c353" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51319153" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TimerEventSubscriptionCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TimerEventSubscriptionCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class TimerEventSubscriptionCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimerEventSubscriptionCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type TimerEventSubscriptionCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un elenco ordinato di oggetti <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Una classe <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> rappresenta la coda di oggetti <xref:System.Workflow.Runtime.TimerEventSubscription> associata a un'istanza del flusso di lavoro e fornisce i metodi per gestire questa coda. Le sottoscrizioni vengono ordinate nella coda in base ai relativi valori <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A>; quelle con i valori <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> inferiori si trovano prima delle sottoscrizioni con valori <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> superiori. È possibile utilizzare i metodi forniti da questa classe per gestire la raccolta di sottoscrizioni dell'evento del timer attive esposta da <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty> per ogni istanza del flusso di lavoro. È possibile utilizzare i metodi <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> o <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A> per aggiungere o rimuovere le sottoscrizioni dalla coda del timer. Ogni qualvolta il primo elemento nella coda del timer cambia, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> viene chiamato per annullare l'evento del timer che precedentemente si trovava all'inizio della coda e pianificare il nuovo evento del timer.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Workflow.Runtime.TimerEventSubscription item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Workflow.Runtime.TimerEventSubscription item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As TimerEventSubscription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Workflow::Runtime::TimerEventSubscription ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Workflow.Runtime.TimerEventSubscription -&gt; unit" Usage="timerEventSubscriptionCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.Runtime.TimerEventSubscription" />
      </Parameters>
      <Docs>
        <param name="item">Oggetto <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> da aggiungere alla coda del timer.</param>
        <summary>Aggiunge un oggetto <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> alla coda del timer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aggiunge l'oggetto <xref:System.Workflow.Runtime.TimerEventSubscription> alla coda del timer. Le sottoscrizioni nella coda vengono posizionate in base ai loro valori <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType>; quelle con i valori inferiori si trovano davanti alle sottoscrizioni con i valori superiori. Se la nuova sottoscrizione viene aggiunta all'inizio della coda, viene chiamato il metodo, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> per annullare l'evento del timer che si trovava precedentemente all'inizio della coda e il metodo <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> per pianificare il nuovo evento del timer. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> blocca <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> prima di aggiungere la nuova sottoscrizione ed è, pertanto, thread-safe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="item" /> è un riferimento null (<see langword="Nothing" /> in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="timerEventSubscriptionCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
        <param name="index">Indice in base zero in <c>array</c> in corrispondenza del quale ha inizio la copia.</param>
        <summary>Copia gli elementi di <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> in un oggetto <see cref="T:System.Array" /> unidimensionale esistente, partendo dall'indice della matrice specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A> è thread-safe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di oggetti <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> inclusi nella coda del timer.</summary>
        <value>Numero di oggetti <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> nella coda.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="timerEventSubscriptionCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> per l'oggetto <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'accesso a <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> è sincronizzato; tuttavia, l'enumerazione di una raccolta non è di per sé una procedura thread-safe. Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche. In caso di modifiche alla raccolta, ad esempio aggiunta, modifica o eliminazione di elementi, l'enumeratore sarà reso non valido in modo irreversibile e il comportamento corrispondente non sarà definito. L'enumeratore non dispone di accesso esclusivo alla raccolta, pertanto il processo di enumerazione di una raccolta non è di per sé thread-safe. Per garantire la sicurezza dei thread durante l'enumerazione, è possibile bloccare <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> durante l'intera enumerazione tramite <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'accesso alla classe <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> è sincronizzato (thread-safe).</summary>
        <value>Restituisce sempre <see langword="true" /> per indicare che l'accesso a <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> è sincronizzato (thread-safe).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'accesso a <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> è sincronizzato; tuttavia, l'enumerazione di una raccolta non è di per sé una procedura thread-safe. Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore. Per garantire la protezione dei thread durante l'enumerazione, è possibile bloccare la raccolta per l'intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> restituisce un oggetto che può essere utilizzato per sincronizzare l'accesso a <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.TimerEventSubscription Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.TimerEventSubscription Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As TimerEventSubscription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::TimerEventSubscription ^ Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; System.Workflow.Runtime.TimerEventSubscription" Usage="timerEventSubscriptionCollection.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.TimerEventSubscription</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'oggetto <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> all'inizio della coda del timer senza rimuoverlo.</summary>
        <returns>L'oggetto <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> all'inizio della coda del timer o un riferimento null (<see langword="Nothing" /> in Visual Basic) se la coda del timer è vuota.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A> è thread-safe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rimuove l'oggetto <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> specificato dalla coda del timer.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Guid timerSubscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(valuetype System.Guid timerSubscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (timerSubscriptionId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(Guid timerSubscriptionId);" />
      <MemberSignature Language="F#" Value="member this.Remove : Guid -&gt; unit" Usage="timerEventSubscriptionCollection.Remove timerSubscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerSubscriptionId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="timerSubscriptionId">
          <see cref="T:System.Guid" /> dell'oggetto <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> da rimuovere.</param>
        <summary>Rimuove l'oggetto <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> con l'ID di sottoscrizione specificato dalla coda del timer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rimuove l'oggetto <xref:System.Workflow.Runtime.TimerEventSubscription> con l'ID di sottoscrizione specificato dalla coda del timer. Le sottoscrizioni nella coda vengono posizionate in base ai loro valori <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType>; quelle con i valori inferiori si trovano davanti alle sottoscrizioni con i valori superiori. Se la sottoscrizione rimossa si trovava all'inizio della coda, viene chiamato il metodo <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> per annullare l'evento del timer associato a questa sottoscrizione e il metodo <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> per pianificare un evento del timer per la sottoscrizione che ora si trova all'inizio della coda. L'oggetto <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> è thread-safe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Workflow.Runtime.TimerEventSubscription item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Workflow.Runtime.TimerEventSubscription item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As TimerEventSubscription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Workflow::Runtime::TimerEventSubscription ^ item);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Workflow.Runtime.TimerEventSubscription -&gt; unit" Usage="timerEventSubscriptionCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.Runtime.TimerEventSubscription" />
      </Parameters>
      <Docs>
        <param name="item">Oggetto <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> da rimuovere dalla coda del timer.</param>
        <summary>Rimuove l'oggetto <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> dalla coda del timer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rimuove l'oggetto <xref:System.Workflow.Runtime.TimerEventSubscription> dalla coda del timer. Le sottoscrizioni nella coda vengono posizionate in base ai loro valori <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType>; quelle con i valori inferiori si trovano davanti alle sottoscrizioni con i valori superiori. Se la sottoscrizione rimossa si trovava all'inizio della coda, viene chiamato il metodo <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> per annullare l'evento del timer associato a questa sottoscrizione e il metodo <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> per pianificare un evento del timer per la sottoscrizione che ora si trova all'inizio della coda. L'oggetto <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> è thread-safe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="item" /> è un riferimento null (<see langword="Nothing" /> in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</summary>
        <value>Oggetto utilizzato per sincronizzare l'accesso alla classe <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> restituisce un oggetto che può essere utilizzato per sincronizzare l'accesso a <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.  
  
 L'accesso a <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> è sincronizzato; tuttavia, l'enumerazione di una raccolta non è di per sé una procedura thread-safe. Anche se una raccolta è sincronizzata, è possibile che venga modificata da altri thread, con conseguente generazione di un'eccezione da parte dell'enumeratore. Per garantire che una raccolta sia thread-safe durante l'enumerazione, è possibile bloccare <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> nel corso di tutta l'operazione mediante <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> oppure rilevare le eccezioni generate dalle modifiche apportate da altri thread.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimerCollectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty TimerCollectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty TimerCollectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TimerCollectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ TimerCollectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TimerCollectionProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La coda del timer associata a un'istanza del flusso di lavoro. Questa coda contiene oggetti <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> ordinati in base al tempo per un flusso di lavoro.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>