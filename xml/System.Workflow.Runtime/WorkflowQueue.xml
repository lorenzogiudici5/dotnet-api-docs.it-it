<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowQueue.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac503a6b76c696a73b1a8223453f6868b868e0c9400.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03a6b76c696a73b1a8223453f6868b868e0c9400</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowQueue">
          <source>Represents a workflow queue.</source>
          <target state="translated">Rappresenta una coda del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowQueue">
          <source>Workflow queues are used to pass messages between a host or host services and activities in a workflow.</source>
          <target state="translated">Le code del flusso di lavoro vengono utilizzate per passare messaggi tra gli host o i servizi host e un attività in un flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowQueue">
          <source>Any activity can create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> by calling <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=nameWithType&gt;</ph>, and a host, a service, or another activity can call <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A&gt;</ph> to add an item to that <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated">Qualsiasi attività può creare un oggetto <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> chiamando il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=nameWithType&gt;</ph> e un host, un servizio o un'altra attività possono chiamare il metodo <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A&gt;</ph> per aggiungere un elemento a tale <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowQueue">
          <source>You can subscribe to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable&gt;</ph> event to be notified when an item arrives on the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated">È possibile sottoscrivere l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable&gt;</ph> per ricevere una notifica quando un elemento arriva in <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowQueue">
          <source>You can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A&gt;</ph> to examine an item at the beginning of the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A&gt;</ph> to remove an item from the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated">È possibile utilizzare <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A&gt;</ph> per esaminare un elemento all'inizio di <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> e <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A&gt;</ph> per rimuovere un elemento da <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowQueue">
          <source>Each <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> is associated with a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService&gt;</ph> that you can use to perform other management operations on the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>, such as deleting the queue.</source>
          <target state="translated">Ogni <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> è associato a una classe <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService&gt;</ph> che è possibile utilizzare per eseguire altre operazioni di gestione su <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>, ad esempio l'eliminazione della coda.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowQueue">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A&gt;</ph> exposes the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A&gt;</ph> espone il <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService&gt;</ph> associato alla <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowQueue">
          <source>The following code example demonstrates how you can create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come creare una classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> chiamando il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowQueue">
          <source>It also uses the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Count%2A&gt;</ph> property to determine whether any messages exist in the current queue.</source>
          <target state="translated">Viene inoltre utilizzata la proprietà <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Count%2A&gt;</ph> per determinare se siano presenti messaggi nella coda corrente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowQueue">
          <source>Finally, the code uses the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A&gt;</ph> method to remove and return the first object in the queue.</source>
          <target state="translated">Infine, il codice utilizza il metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A&gt;</ph> per rimuovere e restituire il primo oggetto contenuto nella coda.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowQueue">
          <source>This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</source>
          <target state="translated">Questo esempio di codice fa parte dell'esempio SDK File Watcher Activity nel file FileSystemEvent.cs.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowQueue">
          <source>For more information, see <bpt id="p1">[</bpt>File System Watcher Activity<ept id="p1">](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>attività controllo del File System<ept id="p1">](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowQueue.Count">
          <source>Gets the number of items contained in the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated">Ottiene il numero di elementi contenuti nella classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowQueue.Count">
          <source>The number of items in the workflow queue.</source>
          <target state="translated">Numero di elementi nella coda del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowQueue.Count">
          <source>The following code example demonstrates how you can create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come creare una classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> chiamando il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowQueue.Count">
          <source>It also uses the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Count%2A&gt;</ph> property to determine whether any messages exist in the current queue.</source>
          <target state="translated">Viene inoltre utilizzata la proprietà <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Count%2A&gt;</ph> per determinare se siano presenti messaggi nella coda corrente.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowQueue.Count">
          <source>Finally, the code uses the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A&gt;</ph> method to remove and return the first object in the queue.</source>
          <target state="translated">Infine, il codice utilizza il metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A&gt;</ph> per rimuovere e restituire il primo oggetto contenuto nella coda.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowQueue.Count">
          <source>This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</source>
          <target state="translated">Questo esempio di codice fa parte dell'esempio SDK File Watcher Activity nel file FileSystemEvent.cs.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowQueue.Count">
          <source>For more information, see <bpt id="p1">[</bpt>File System Watcher Activity<ept id="p1">](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>attività controllo del File System<ept id="p1">](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.Dequeue">
          <source>Removes and returns the object at the beginning of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated">Consente di rimuovere e restituire l'oggetto all'inizio della <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.Dequeue">
          <source>The object that is removed from the beginning of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated">Oggetto rimosso dall'inizio della <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.Dequeue">
          <source>You can check <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Count%2A&gt;</ph> to determine whether the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> is empty before you call <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A&gt;</ph>, or you can catch the <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">È possibile controllare <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Count%2A&gt;</ph> per determinare se <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> è vuota prima di chiamare <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A&gt;</ph> oppure è possibile intercettare <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.Dequeue">
          <source>The following code example demonstrates how you can create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come creare una classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> chiamando il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.Dequeue">
          <source>It also uses the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Count%2A&gt;</ph> property to determine whether any messages exist in the current queue.</source>
          <target state="translated">Viene inoltre utilizzata la proprietà <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Count%2A&gt;</ph> per determinare se siano presenti messaggi nella coda corrente.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.Dequeue">
          <source>Finally, the code uses the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A&gt;</ph> method to remove and return the first object in the queue.</source>
          <target state="translated">Infine, il codice utilizza il metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A&gt;</ph> per rimuovere e restituire il primo oggetto contenuto nella coda.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.Dequeue">
          <source>This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</source>
          <target state="translated">Questo esempio di codice fa parte dell'esempio SDK File Watcher Activity nel file FileSystemEvent.cs.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.Dequeue">
          <source>For more information, see <bpt id="p1">[</bpt>File System Watcher Activity<ept id="p1">](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>attività controllo del File System<ept id="p1">](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.Dequeue">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> is empty.</source>
          <target state="translated">La classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> è vuota.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowQueue.Enabled">
          <source>Gets or sets a value that specifies whether the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> is enabled.</source>
          <target state="translated">Ottiene o imposta un valore che specifica se la classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> è abilitata.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowQueue.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> is enabled; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la classe <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> è abilitata; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.Enqueue(System.Object)">
          <source>The object to add to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated">Oggetto da aggiungere all'oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.Enqueue(System.Object)">
          <source>Adds an object to the end of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated">Aggiunge un oggetto alla fine di <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.Enqueue(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> is not enabled.</source>
          <target state="translated">La classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> non è abilitata.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.Peek">
          <source>Returns the object at the beginning of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> without removing it.</source>
          <target state="translated">Restituisce l'oggetto all'inizio della <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> senza rimuoverlo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.Peek">
          <source>The object at the beginning of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated">Oggetto all'inizio della <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.Peek">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A&gt;</ph> method, but <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A&gt;</ph> does not modify the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated">Questo metodo è analogo al metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A&gt;</ph>, ma <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A&gt;</ph> non modifica la <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.Peek">
          <source>You can check <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Count%2A&gt;</ph> to determine whether the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> is empty before you call <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A&gt;</ph>, or you can catch the <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">È possibile controllare <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Count%2A&gt;</ph> per determinare se <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> è vuota prima di chiamare <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A&gt;</ph> oppure è possibile intercettare <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.Peek">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> is empty.</source>
          <target state="translated">La classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> è vuota.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived">
          <source>Occurs when an item is delivered on this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated">Si verifica quando un elemento viene recapitato su questa <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived">
          <source>This event is only used for processing that must occur synchronously with event delivery to the workflow instance.</source>
          <target state="translated">Questo evento viene utilizzato solo per l'elaborazione che deve verificarsi in modo sincrono con il recapito dell'evento all'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived">
          <source>The event handler may execute on a non-workflow thread so access to any shared workflow object, for example, any <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject&gt;</ph>, must be protected.</source>
          <target state="translated">Il gestore eventi può essere eseguito su un thread non del flusso di lavoro in modo che l'accesso a qualsiasi oggetto del flusso di lavoro condiviso, ad esempio, qualsiasi <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.DependencyObject&gt;</ph>, sia protetto.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable">
          <source>Occurs when an item is available on this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated">Si verifica quando un elemento è disponibile su <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable&gt;</ph> event is raised in an asynchronous manner.</source>
          <target state="translated">L'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable&gt;</ph> viene generato in modo asincrono.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable">
          <source>The sender for the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable&gt;</ph> event will be the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext&gt;</ph> of the subscribing <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Activity&gt;</ph>.</source>
          <target state="translated">Il mittente dell'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable&gt;</ph> sarà la classe <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext&gt;</ph> dell'oggetto <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Activity&gt;</ph> di sottoscrizione.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowQueue.QueueName">
          <source>Gets the name of the workflow queue.</source>
          <target state="translated">Ottiene il nome della coda del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowQueue.QueueName">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated">Nome di <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowQueue.QueueName">
          <source>The name of the workflow queue is set by the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A&gt;</ph> method.</source>
          <target state="translated">Il nome della coda del flusso di lavoro viene impostato dal metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowQueue.QueuingService">
          <source>Gets the queuing service associated with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated">Ottiene il servizio di accodamento associato a questa classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowQueue.QueuingService">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueuingService" /&gt;</ph> that represents the queuing service associated with this <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueuingService" /&gt;</ph> che rappresenta il servizio di accodamento associato a questa classe <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>A subscriber for <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /&gt;</ph> that implements the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /&gt;</ph> interface.</source>
          <target state="translated">Sottoscrittore per un elemento <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /&gt;</ph> che implementa l'interfaccia <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>Registers a subscriber to the <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /&gt;</ph> event.</source>
          <target state="translated">Registra un sottoscrittore per l'evento <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowQueue">
          <source>Registers a subscriber to the <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /&gt;</ph> event.</source>
          <target state="translated">Registra un sottoscrittore per l'evento <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowQueue">
          <source>You can use the overloaded <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A&gt;</ph> methods to register a subscriber for the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable&gt;</ph> event.</source>
          <target state="translated">È possibile utilizzare i metodi <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A&gt;</ph> di overload per registrare un sottoscrittore per l'evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowQueue">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable&gt;</ph> event is used to notify subscribers that an item has been delivered (in an asynchronous manner) to this <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated">L'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable&gt;</ph> viene utilizzato per notificare ai sottoscrittori che un elemento è stato recapitato (in modo asincrono) a questa <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>A subscriber for <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /&gt;</ph> that implements the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /&gt;</ph> interface.</source>
          <target state="translated">Sottoscrittore per un elemento <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /&gt;</ph> che implementa l'interfaccia <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>Registers a subscriber to the <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /&gt;</ph> event.</source>
          <target state="translated">Registra un sottoscrittore per l'evento <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>The following code example demonstrates how you can create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come creare una classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> chiamando il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>It also uses the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A&gt;</ph> to register the specified listener.</source>
          <target state="translated">Utilizza anche il metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A&gt;</ph> per registrare il listener specificato.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</source>
          <target state="translated">Questo esempio di codice fa parte dell'esempio SDK File Watcher Activity nel file FileSystemEvent.cs.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>For more information, see <bpt id="p1">[</bpt>File System Watcher Activity<ept id="p1">](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>attività controllo del File System<ept id="p1">](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source><ph id="ph1">&lt;paramref name="eventListener" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventListener" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.String)">
          <source>A subscriber for <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /&gt;</ph> that implements the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /&gt;</ph> interface.</source>
          <target state="translated">Sottoscrittore per un elemento <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /&gt;</ph> che implementa l'interfaccia <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /&gt;</ph> of the activity that is subscribing to the <ph id="ph2">&lt;see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /&gt;</ph> event or a null reference (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /&gt;</ph> dell'attività che sta sottoscrivendo l'evento <ph id="ph2">&lt;see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /&gt;</ph> o un riferimento null (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.String)">
          <source>Registers a subscriber to the <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /&gt;</ph> event.</source>
          <target state="translated">Registra un sottoscrittore per l'evento <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.String)">
          <source>If the qualified name of the subscribing activity is supplied by <ph id="ph1">`subscriberQualifiedName`</ph>, it is returned in <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType&gt;</ph> of <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo&gt;</ph> associated with this queue when <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated">Se il nome completo dell'attività di sottoscrizione è fornito da <ph id="ph1">`subscriberQualifiedName`</ph>, viene restituito nella proprietà <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType&gt;</ph> della classe <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo&gt;</ph> associata a questa coda quando il metodo <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=nameWithType&gt;</ph> viene chiamato.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.String)">
          <source><ph id="ph1">&lt;paramref name="eventListener" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventListener" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>A subscriber for <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /&gt;</ph> that implements the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /&gt;</ph> interface.</source>
          <target state="translated">Sottoscrittore per un elemento <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /&gt;</ph> che implementa l'interfaccia <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>Unregisters a subscriber to the <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /&gt;</ph> event.</source>
          <target state="translated">Annulla la registrazione di un sottoscrittore per l'evento <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>This method is reserved for internal use only.</source>
          <target state="translated">Questo metodo è solo per uso interno.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source><ph id="ph1">&lt;paramref name="eventListener" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventListener" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>A subscriber for <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /&gt;</ph> that implements the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /&gt;</ph> interface.</source>
          <target state="translated">Sottoscrittore per un elemento <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /&gt;</ph> che implementa l'interfaccia <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>Unregisters a subscriber to the <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /&gt;</ph> event.</source>
          <target state="translated">Annulla la registrazione di un sottoscrittore per l'evento <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>The following code example demonstrates how you can create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come creare una classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> chiamando il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>It also uses the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable%2A&gt;</ph> to unregister the specified listener.</source>
          <target state="translated">Utilizza anche il metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable%2A&gt;</ph> per annullare la registrazione del listener specificato.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</source>
          <target state="translated">Questo esempio di codice fa parte dell'esempio SDK File Watcher Activity nel file FileSystemEvent.cs.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source>For more information, see <bpt id="p1">[</bpt>File System Watcher Activity<ept id="p1">](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>attività controllo del File System<ept id="p1">](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
          <source><ph id="ph1">&lt;paramref name="eventListener" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventListener" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>