<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowRuntime.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f9972d61b484762347fab0bc94315ae7a302abc41.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9972d61b484762347fab0bc94315ae7a302abc41</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>Represents the configurable execution environment provided by the workflow run-time engine for workflows.</source>
          <target state="translated">Rappresenta l'ambiente di esecuzione configurabile fornito dal motore di runtime del flusso di lavoro per i flussi di lavoro.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> exposes functionality required by a host application and services to configure and control the workflow run-time engine and to be notified of changes to both the workflow run-time engine and any of its workflow instances.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> espone la funzionalità richiesta da un'applicazione e dai servizi host per configurare e controllare il motore di runtime del flusso di lavoro e ricevere notifica delle modifiche al motore di runtime del flusso di lavoro e alle relative istanze del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>It provides examples of how to use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> constructor and the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> methods.</source>
          <target state="translated">Fornisce esempi di come utilizzare il costruttore <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> e i metodi <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>The code also shows the recommended way to create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object in a workflow host using the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method.</source>
          <target state="translated">Nel codice viene illustrato inoltre la modalità consigliata per creare un oggetto <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> in un host del flusso di lavoro utilizzando il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>It also shows how to set event handlers for the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph>, and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> events.</source>
          <target state="translated">Viene anche illustrato come impostare gestori eventi per gli eventi <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> e <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>l'annullamento di un flusso di lavoro<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>This type is thread safe.</source>
          <target state="translated">Questo tipo è thread-safe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> is initialized with the default property values and contains the default core services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> viene inizializzato con i valori predefiniti delle proprietà e contiene i servizi di base predefiniti.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>To additionally configure the workflow run-time engine, you can add and remove services by using <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph>, and you can set <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph>.</source>
          <target state="translated">Per configurare anche il motore di runtime del flusso di lavoro, è possibile aggiungere e rimuovere i servizi utilizzando <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph>, ed è possibile impostare <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>After the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> is configured, call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> to start the workflow run-time engine and its services.</source>
          <target state="translated">Dopo aver configurato <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, chiamare <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> per avviare il motore di runtime del flusso di lavoro e i relativi servizi.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> class.</source>
          <target state="translated">Nella tabella seguente vengono illustrati i valori iniziali delle proprietà di un'istanza della classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>Property</source>
          <target state="translated">Proprietà</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>Initial Value</source>
          <target state="translated">Valore iniziale</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>"WorkflowRuntime"</source>
          <target state="translated">"WorkflowRuntime"</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The default core services are <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph>.</source>
          <target state="translated">I servizi di base predefiniti sono: <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> e <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The following code example demonstrates how you can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>It provides an example of how to use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> constructor to create an instance of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and access its methods and events.</source>
          <target state="translated">Fornisce un esempio di come utilizzare il costruttore <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> per creare un'istanza di <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> e accedere ai relativi metodi ed eventi.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>l'annullamento di un flusso di lavoro<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>The name of a valid <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> section in the application configuration file.</source>
          <target state="translated">Nome di una sezione <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> valida nel file di configurazione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class by using the specified section of the application configuration file.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> tramite la sezione specificata del file di configurazione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> is initialized according to the settings in the section specified by <ph id="ph2">`configSectionName`</ph> in the application configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> viene inizializzata in base alle impostazioni nella sezione specificata da <ph id="ph2">`configSectionName`</ph> nel file di configurazione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source><ph id="ph1">`configSectionName`</ph> must correspond to a valid <ph id="ph2">`workflowSettings`</ph> section of a configuration file.</source>
          <target state="translated"><ph id="ph1">`configSectionName`</ph> deve corrispondere a un oggetto valido <ph id="ph2">`workflowSettings`</ph> sezione di un file di configurazione.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>When the workflow run-time engine is configured by using an application configuration file, it loads and instantiates classes of the types listed in the <ph id="ph1">`Services`</ph> section of the configuration file.</source>
          <target state="translated">Quando il motore di runtime del flusso di lavoro viene configurato tramite un file di configurazione dell'applicazione, carica e crea istanze di classi dei tipi elencati nel <ph id="ph1">`Services`</ph> sezione del file di configurazione.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</source>
          <target state="translated">Quando il motore di runtime del flusso di lavoro costruisce queste classi, cerca costruttori di classi con le firme seguenti nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service(WorkflowRuntime runtime, NameValueCollection parameters)</source>
          <target state="translated">Servizio (runtime di WorkflowRuntime, parametri NameValueCollection)</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service(WorkflowRuntime runtime)</source>
          <target state="translated">Servizio (runtime di WorkflowRuntime)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service(NameValueCollection parameters)</source>
          <target state="translated">Servizio (parametri NameValueCollection)</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service()</source>
          <target state="translated">Servizio()</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>All service classes that are loaded from a configuration file must implement at least one of these constructor signatures.</source>
          <target state="translated">Tutte le classi del servizio caricate da un file di configurazione devono implementare almeno una di queste firme del costruttore.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&gt;</ph>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="configSectionName" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="configSectionName" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>A valid <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> section could not be found in the application configuration file.</source>
          <target state="translated">Impossibile trovare una sezione <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> valida nel file di configurazione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> already exists for this application domain.</source>
          <target state="translated">Esiste già una classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> per questo dominio dell'applicazione.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class by using the settings in the specified <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph>.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> utilizzando le impostazioni nella classe <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph> specificata.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>This constructor provides a mechanism to configure the workflow run-time engine using a single method call for hosts that do not use an application configuration file.</source>
          <target state="translated">Questo costruttore fornisce un meccanismo per configurare il motore di runtime del flusso di lavoro utilizzando una sola chiamata al metodo per gli host che non utilizzano un file di configurazione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>There are many reasons for not using the application configuration file.</source>
          <target state="translated">La scelta di non utilizzare il file di configurazione dell'applicazione può essere dovuta a numerosi fattori.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>A host can run in an environment that does not allow using configuration files; for example, in trusted environments that do not allow reading from the application configuration file for security reasons.</source>
          <target state="translated">Un host può essere in esecuzione in un ambiente che non consente l'utilizzo dei file di configurazione; ad esempio, in ambienti attendibili che non consentono la lettura dal file di configurazione dell'applicazione per ragioni di sicurezza.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Also, a host can use a proprietary configuration mechanism; for example, the host can store the workflow run-time engine configuration settings in a SQL database.</source>
          <target state="translated">In altri casi, è possibile che un host utilizzi un meccanismo di configurazione proprietario; ad esempio, l'host può archiviare le impostazioni di configurazione del motore di runtime del flusso di lavoro in un database SQL.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>The workflow run-time engine loads and instantiates classes of the types contained in <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Il motore di runtime del flusso di lavoro carica e crea un'istanza delle classi dei tipi contenute in <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</source>
          <target state="translated">Quando il motore di runtime del flusso di lavoro costruisce queste classi, cerca costruttori di classi con le firme seguenti nell'ordine seguente:</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service(WorkflowRuntime runtime, NameValueCollection parameters)</source>
          <target state="translated">Servizio (runtime di WorkflowRuntime, parametri NameValueCollection)</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service(WorkflowRuntime runtime)</source>
          <target state="translated">Servizio (runtime di WorkflowRuntime)</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service(NameValueCollection parameters)</source>
          <target state="translated">Servizio (parametri NameValueCollection)</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service()</source>
          <target state="translated">Servizio()</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>All service classes that are specified in <ph id="ph1">`settings`</ph> must implement at least one of these constructor signatures.</source>
          <target state="translated">Tutte le classi di servizi specificate in <ph id="ph1">`settings`</ph> devono implementare almeno una delle firme del costruttore seguenti.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> already exists for this application domain.</source>
          <target state="translated">Esiste già una classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> per questo dominio dell'applicazione.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>An object that represents the service to add.</source>
          <target state="translated">Un oggetto che rappresenta il servizio da aggiungere.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>Adds the specified service to the workflow run-time engine.</source>
          <target state="translated">Aggiunge il servizio specificato al motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>You can configure the workflow run-time engine by adding core services.</source>
          <target state="translated">È possibile configurare il motore di runtime del flusso di lavoro aggiungendo servizi di base.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>Core services are those that derive from any of the following service base classes: the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">I servizi di base sono servizi derivati da una delle classi base del servizio seguenti: <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> e <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>Core services can only be added when the workflow run-time engine is not running; that is, when <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Servizi di base possono essere aggiunti solo quando il motore di runtime del flusso di lavoro non è in esecuzione. ovvero, quando <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> è <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> can also be used as a storage container for other services that can be used by other workflows or by applications running on a host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> può essere utilizzato anche come un contenitore dell'archivio per altri servizi che possono essere utilizzati da altri flussi di lavoro o da applicazioni in esecuzione su un host.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>If you add a non-core service that derives from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class after the workflow run-time engine has been started, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> calls the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method implemented by that service.</source>
          <target state="translated">Se si aggiunge un servizio non di base derivato dalla classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> dopo l'avvio del motore di runtime del flusso di lavoro, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> chiama il metodo <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> implementato da tale servizio.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> enforces the restriction that no two services of the same <ph id="ph2">&lt;xref:System.Type&gt;</ph> can be added to the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> applica una restrizione tale per cui non è possibile aggiungere due servizi dello stesso <ph id="ph2">&lt;xref:System.Type&gt;</ph> a <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>However, you can add multiple services that derive from the same base class.</source>
          <target state="translated">Tuttavia, è possibile aggiungere più servizi che derivano dalla stessa classe di base.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>There can be only one service derived from each of the following service base classes in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>: the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class.</source>
          <target state="translated">Può esistere solo un servizio derivato da ognuna delle classi base del servizio seguenti in <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>: <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> e <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>If you add multiple services derived from one of these classes, for example two persistence services, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se si aggiungono più servizi derivati da una di queste classi, ad esempio due servizi di persistenza, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> genera un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>It provides example of how to use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> method to add an <ph id="ph2">&lt;xref:System.Workflow.Activities.ExternalDataExchangeService&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> to the workflow run-time engine.</source>
          <target state="translated">Viene fornito un esempio di come utilizzare il metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> per aggiungere una classe <ph id="ph2">&lt;xref:System.Workflow.Activities.ExternalDataExchangeService&gt;</ph> e <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> al motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>This code example is part of the <bpt id="p1">[</bpt>Cancelling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>l'annullamento di un flusso di lavoro<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> viene eliminato.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is already registered with the workflow run-time engine.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> è già registrato nel motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is a core service and the workflow run-time engine is already running (<ph id="ph2">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> è un servizio di base e il motore di runtime del flusso di lavoro è già in esecuzione (<ph id="ph2">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> è <ph id="ph3">&lt;see langword="true" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">Crea un'istanza di flusso di lavoro utilizzando i parametri specificati.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>If the workflow run-time engine has not been started, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> methods call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</source>
          <target state="translated">Se il motore di runtime del flusso di lavoro non è stato avviato, i metodi <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> chiamano <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>See <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> for a list of possible exceptions.</source>
          <target state="translated">Per un elenco delle possibili eccezioni, vedere <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>After you create the workflow instance, call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType&gt;</ph> on the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method to begin its execution.</source>
          <target state="translated">Dopo avere creato l'istanza del flusso di lavoro, chiamare <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType&gt;</ph> sull'oggetto <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> restituito dal metodo <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> per iniziare l'esecuzione.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the workflow to create.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del flusso di lavoro da creare.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>Creates a new workflow instance by using the specified workflow <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Crea una nuova istanza del flusso di lavoro utilizzando l'oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del flusso di lavoro specificato.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>The created workflow instance.</source>
          <target state="translated">Istanza del flusso di lavoro creata.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Prima di essere creato, l'oggetto della classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> viene convalidato.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">Se si verificano errori di convalida, viene generata la classe <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Questa procedura si rivela adeguata per scenari semplici. Tuttavia, in un ambiente server, la riconvalida di un flusso di lavoro a ogni attivazione può comportare un sovraccarico non necessario.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> sulla disabilitazione della convalida, vedere <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>The following code example demonstrates the recommended way to create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object in a workflow host using the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrata la procedura consigliata per creare un oggetto <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> in un host del flusso di lavoro utilizzando il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>l'annullamento di un flusso di lavoro<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the workflow definition.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> contenente la definizione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>Creates a workflow instance by using the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Crea un'istanza del flusso di lavoro tramite l'elemento <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The created workflow instance.</source>
          <target state="translated">Istanza del flusso di lavoro creata.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The workflow instance is created from a XAML workflow definition file referenced by the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">L'istanza del flusso di lavoro viene creata da un file di definizione del flusso di lavoro XAML al quale fa riferimento la classe <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Prima di essere creato, l'oggetto della classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> viene convalidato.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">Se si verificano errori di convalida, viene generata la classe <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Questa procedura si rivela adeguata per scenari semplici. Tuttavia, in un ambiente server, la riconvalida di un flusso di lavoro a ogni attivazione può comportare un sovraccarico non necessario.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> sulla disabilitazione della convalida, vedere <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The following example demonstrates how to create a workflow given a XAML-based workflow definition.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come creare un flusso di lavoro in base a una definizione del flusso di lavoro XAML.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> viene eliminato.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the workflow to create.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del flusso di lavoro da creare.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by string that represents the arguments to the workflow.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> di oggetti con chiave impostata da una stringa che rappresenta gli argomenti per il flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Creates a workflow instance by using the specified workflow <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> and the arguments to the workflow contained in the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Crea un'istanza del flusso di lavoro utilizzando il flusso di lavoro <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> e gli elementi per il flusso di lavoro contenuto nell'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The created workflow instance.</source>
          <target state="translated">Istanza del flusso di lavoro creata.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Prima di essere creato, l'oggetto della classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> viene convalidato.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">Se si verificano errori di convalida, viene generata la classe <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Questa procedura si rivela adeguata per scenari semplici. Tuttavia, in un ambiente server, la riconvalida di un flusso di lavoro a ogni attivazione può comportare un sovraccarico non necessario.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> sulla disabilitazione della convalida, vedere <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157403)</ept>.</source>
          <target state="translated">Per un esempio di passaggio di parametri per <ph id="ph1">`CreateWorkflow`</ph>, vedere <bpt id="p1">[</bpt>esempio Workflow with Parameters<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157403)</ept>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the workflow to create.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del flusso di lavoro da creare.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> di oggetti con chiave impostata da una stringa che rappresenta gli argomenti per il flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the specific <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> to create.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> della classe <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> specifica da creare.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">Crea un'istanza di flusso di lavoro utilizzando i parametri specificati.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The created workflow instance.</source>
          <target state="translated">Istanza del flusso di lavoro creata.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Prima di essere creato, l'oggetto della classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> viene convalidato.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">Se si verificano errori di convalida, viene generata la classe <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Questa procedura si rivela adeguata per scenari semplici. Tuttavia, in un ambiente server, la riconvalida di un flusso di lavoro a ogni attivazione può comportare un sovraccarico non necessario.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> sulla disabilitazione della convalida, vedere <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The workflow <ph id="ph1">`instanceId`</ph> for any running workflows loaded by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> must be unique.</source>
          <target state="translated">Il flusso di lavoro <ph id="ph1">`instanceId`</ph> per qualsiasi flusso di lavoro in esecuzione caricato da <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> deve essere univoco.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If you pass an <ph id="ph1">`instanceId`</ph> to create a workflow and a running workflow is already using that <ph id="ph2">`instanceId`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Se si passa un <ph id="ph1">`instanceId`</ph> per creare un flusso di lavoro e un flusso di lavoro in esecuzione sta già utilizzando quel <ph id="ph2">`instanceId`</ph>, viene generata un'eccezione <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">Per un esempio di passaggio di parametri per <ph id="ph1">`CreateWorkflow`</ph>, vedere <bpt id="p1">[</bpt>esempio Workflow with Parameters<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the workflow definition.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> contenente la definizione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> di oggetti con chiave impostata da una stringa che rappresenta gli argomenti per il flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Creates a workflow instance by using the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> objects and the arguments contained in the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Crea un'istanza del flusso di lavoro utilizzando gli oggetti <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> specificati e gli argomenti contenuti nell'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The created workflow instance.</source>
          <target state="translated">Istanza del flusso di lavoro creata.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The workflow instance is created from the workflow definition referenced by the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> and the arguments supplied by <ph id="ph2">`namedArgumentValues`</ph>.</source>
          <target state="translated">L'istanza del flusso di lavoro viene creata dal file di definizione del flusso di lavoro al quale fa riferimento la classe <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> e gli argomenti forniti da <ph id="ph2">`namedArgumentValues`</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Prima di essere creato, l'oggetto della classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> viene convalidato.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">Se si verificano errori di convalida, viene generata la classe <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Questa procedura si rivela adeguata per scenari semplici. Tuttavia, in un ambiente server, la riconvalida di un flusso di lavoro a ogni attivazione può comportare un sovraccarico non necessario.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> sulla disabilitazione della convalida, vedere <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">Per un esempio di passaggio di parametri per <ph id="ph1">`CreateWorkflow`</ph>, vedere <bpt id="p1">[</bpt>esempio Workflow with Parameters<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For an example of using rules defined in XML, see <bpt id="p1">[</bpt>IfElse with Rules Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157404)</ept>.</source>
          <target state="translated">Per un esempio di utilizzo di regole definite in XML, vedere <bpt id="p1">[</bpt>IfElse con regole di esempio<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157404)</ept>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> viene eliminato.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the workflow definition.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> contenente la definizione del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> di oggetti con chiave impostata da una stringa che rappresenta gli argomenti per il flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the specific <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> to create.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> della classe <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> specifica da creare.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">Crea un'istanza di flusso di lavoro utilizzando i parametri specificati.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The created workflow instance.</source>
          <target state="translated">Istanza del flusso di lavoro creata.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Prima di essere creato, l'oggetto della classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> viene convalidato.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">Se si verificano errori di convalida, viene generata la classe <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Questa procedura si rivela adeguata per scenari semplici. Tuttavia, in un ambiente server, la riconvalida di un flusso di lavoro a ogni attivazione può comportare un sovraccarico non necessario.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> sulla disabilitazione della convalida, vedere <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The workflow <ph id="ph1">`instanceId`</ph> for any running workflows loaded by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> must be unique.</source>
          <target state="translated">Il flusso di lavoro <ph id="ph1">`instanceId`</ph> per qualsiasi flusso di lavoro in esecuzione caricato da <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> deve essere univoco.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If you pass an <ph id="ph1">`instanceId`</ph> to create a workflow and a running workflow is already using that <ph id="ph2">`instanceId`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Se si passa un <ph id="ph1">`instanceId`</ph> per creare un flusso di lavoro e un flusso di lavoro in esecuzione sta già utilizzando quel <ph id="ph2">`instanceId`</ph>, viene generata un'eccezione <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">Per un esempio di passaggio di parametri per <ph id="ph1">`CreateWorkflow`</ph>, vedere <bpt id="p1">[</bpt>esempio Workflow with Parameters<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For an example of using rules defined in XML, see <bpt id="p1">[</bpt>IfElse with Rules Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157404)</ept>.</source>
          <target state="translated">Per un esempio di utilizzo di regole definite in XML, vedere <bpt id="p1">[</bpt>IfElse con regole di esempio<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157404)</ept>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Rilascia le risorse usate da <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>To shut down the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> gracefully, you should only call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> after you have called <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</source>
          <target state="translated">Per arrestare normalmente <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, è necessario chiamare <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> solo dopo aver chiamato <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>This is because calling the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> method alone leaves the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> in an unusable state.</source>
          <target state="translated">Poiché se si chiama solamente il metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> si lascia <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> in una condizione di inutilizzabilità,</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> frees the resources used by the runtime by closing open file handles, database connections, and so on, but it does not unload workflow instances, stop services, or do any of the other actions that <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> does.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>  libera le risorse utilizzate dal runtime chiudendo gli handle di file aperti, le connessioni al database e così via, ma non scarica istanze del flusso di lavoro, non arresta i servizi o non esegue qualsiasi altra azione svolta da <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> should be called only when the host application must free the resources used by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> before they are automatically freed by the garbage collector.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> deve essere chiamato solo quando l'applicazione host deve liberare le risorse utilizzate da <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> prima che vengano liberate automaticamente dal Garbage Collector.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>For general information about <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Per informazioni generali su <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>implementazione di un metodo Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>The following example demonstrates how to call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come chiamare il metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> su un oggetto <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>In this sample, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> method is called from the FormClosing event handler for the main form of the application; this ensures that the objects created by the runtime are properly cleaned up when the application shuts down.</source>
          <target state="translated">In questo esempio, il metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> viene chiamato dal gestore eventi FormClosing per il form principale dell'applicazione, garantendo in tal modo che gli oggetti creati dal runtime vengano puliti correttamente all'arresto dell'applicazione.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>This sample is from the <bpt id="p1">[</bpt>Speech Application Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157405)</ept>.</source>
          <target state="translated">Questo esempio è disponibile il <bpt id="p1">[</bpt>esempio applicazione vocale<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157405)</ept>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that services must implement to be returned.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che i servizi devono implementare per essere restituiti.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Recupera tutti i servizi che vengono aggiunti al motore di runtime del flusso di lavoro, implementati o derivati dal <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>Services that implement or derive from the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Servizi implementati o derivati dal <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>An empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> indicates that no services that implement or derive from the specified <ph id="ph2">&lt;xref:System.Type&gt;</ph> have been added to the workflow run-time engine.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> vuoto indica che non sono stati aggiunti servizi al motore di runtime del flusso di lavoro che sono stati implementati o derivati dal <ph id="ph2">&lt;xref:System.Type&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>The following example demonstrates how to retrieve all services of a given type from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come recuperare tutti i servizi di un determinato tipo da un oggetto <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> viene eliminato.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>The service type.</source>
          <target state="translated">Tipo di servizio.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified generic type.</source>
          <target state="translated">Recupera tutti i servizi aggiunti al motore di runtime del flusso di lavoro che sono stati implementati o derivati dal tipo generico specificato.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>Services that implement or derive from the specified generic type.</source>
          <target state="translated">Servizi implementati o derivati dal tipo generico specificato.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>An empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> indicates that no services have been added to the workflow run-time engine that implement or derive from the specified generic type.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> vuoto indica che non sono stati aggiunti servizi al motore di runtime del flusso di lavoro che sono stati implementati o derivati dal tipo generico specificato.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>The following example demonstrates how to retrieve all services of a given type from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come recuperare tutti i servizi di un determinato tipo da un oggetto <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> viene eliminato.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>Gets a collection that contains all the workflow instances currently loaded in memory.</source>
          <target state="translated">Ottiene una raccolta che contiene tutte le istanze del flusso di lavoro attualmente caricate in memoria.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> object for each workflow instance currently loaded in memory.</source>
          <target state="translated">Un oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> per ogni istanza del flusso di lavoro attualmente caricata in memoria.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>Note that, unlike <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph>, this method does not throw a <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if the runtime is not started.</source>
          <target state="translated">Si noti che, diversamente da <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph>, questo metodo non genera un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> se il runtime non è stato avviato.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>The following example demonstrates how to retrieve a collection of loaded workflows from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come recuperare una raccolta di flussi di lavoro caricati da un oggetto <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> viene eliminato.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the service to retrieve.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del servizio da recuperare.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>Retrieves a service of the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> from the workflow run-time engine.</source>
          <target state="translated">Recupera un servizio del <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> specificato dal motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>The service of the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Servizio del <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if more than one service exists for the specified <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> genera un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> se esiste più di un servizio del <ph id="ph3">&lt;xref:System.Type&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>Therefore, you should use one of the overloaded methods of <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> if it is possible that multiple services of the specified type are present in the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">Pertanto, è necessario utilizzare uno dei metodi di overload di <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> se è possibile che più servizi del tipo specificato siano presenti in <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>For example, the workflow run-time engine may have multiple tracking services.</source>
          <target state="translated">Ad esempio, è possibile che il motore di runtime del flusso di lavoro disponga di più servizi di rilevamento.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>If you request a tracking service by specifying the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> base class, it is possible that an exception will be thrown.</source>
          <target state="translated">Se si richiede un servizio di rilevamento specificando la classe di base <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>, è possibile che venga generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is already disposed of.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> è già stato eliminato.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>More than one service of type <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> was found.</source>
          <target state="translated">È stato trovato più di un servizio del tipo <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>The service type.</source>
          <target state="translated">Tipo di servizio.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>Retrieves a service of the specified generic type from the workflow run-time engine.</source>
          <target state="translated">Recupera un servizio del tipo generico specificato dal motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>A single service of the specified generic type.</source>
          <target state="translated">Restituisce un singolo servizio del tipo generico specificato.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if more than one service exists for the specified generic type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> genera un'eccezione <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> se esiste più di un servizio del tipo generico specificato.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>Therefore, you should use one of the overloaded methods of <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> if it is possible that multiple services of the generic type are present in the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">Pertanto, è necessario utilizzare uno dei metodi di overload di <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> se è possibile che più servizi del tipo generico siano presenti in <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>For example, the workflow run-time engine may have multiple tracking services.</source>
          <target state="translated">Ad esempio, è possibile che il motore di runtime del flusso di lavoro disponga di più servizi di rilevamento.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>If you request a tracking service by specifying the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> base class, it is possible that an exception will be thrown.</source>
          <target state="translated">Se si richiede un servizio di rilevamento specificando la classe di base <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>, è possibile che venga generata un'eccezione.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>The following example demonstrates how to retrieve a single service from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object; in this case, a service of type <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come recuperare un singolo servizio da un oggetto <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>; in questo caso, un servizio di tipo <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>This example is from the <bpt id="p1">[</bpt>Workflow Threading Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157350)</ept>.</source>
          <target state="translated">Questo esempio è tratto di <bpt id="p1">[</bpt>esempio Threading Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157350)</ept>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> has already been disposed of.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> già eliminata.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>More than one service of the generic type was found.</source>
          <target state="translated">È stato trovato più di un servizio del tipo generico.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of a workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> di un'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>Retrieves the workflow instance that has the specified <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">Recupera l'istanza del flusso di lavoro che ha specificato <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> that has the specified <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> con il <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> specificato.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>If <ph id="ph1">`instanceId`</ph> specifies a workflow instance that is not currently in memory, the workflow instance is loaded into memory and scheduled for execution.</source>
          <target state="translated">Se <ph id="ph1">`instanceId`</ph> specifica un'istanza del flusso di lavoro che non è attualmente in memoria, l'istanza del flusso di lavoro viene caricata in memoria e pianificata per l'esecuzione.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>For example, after a workflow instance is aborted, you can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> to load the workflow instance back into memory.</source>
          <target state="translated">Ad esempio, dopo l'interruzione di un'istanza del flusso di lavoro, è possibile chiamare <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> per caricare di nuovo l'istanza del flusso di lavoro in memoria.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>In this case, the last persisted state of the workflow instance is loaded into memory by the persistence service.</source>
          <target state="translated">In questo caso, l'ultimo stato persistente dell'istanza del flusso di lavoro viene caricato in memoria dal servizio di persistenza.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The following code example demonstrates a <ph id="ph1">`ReloadWorkflow`</ph> method that calls the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato un metodo <ph id="ph1">`ReloadWorkflow`</ph> che chiama il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The <ph id="ph1">`ReloadWorkflow`</ph> method is part of a larger class that has a <ph id="ph2">`Runtime`</ph> property to access all of the methods, properties, and events of the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> class.</source>
          <target state="translated">Il metodo <ph id="ph1">`ReloadWorkflow`</ph> fa parte di una classe più grande che dispone di una proprietà <ph id="ph2">`Runtime`</ph> per accedere a tutti i metodi, le proprietà e gli eventi della classe <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157351)</ept> sample.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>esempio servizio di persistenza personalizzato<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157351)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>In the example, the call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> is redundant because both the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> methods use the same internal helper method to load the workflow instance into memory.</source>
          <target state="translated">Nell'esempio, la chiamata a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> è ridondante perché entrambi i metodi <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> utilizzano lo stesso metodo di supporto interno per caricare l'istanza del flusso di lavoro in memoria.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The workflow runtime is not started.</source>
          <target state="translated">Il runtime del flusso di lavoro non è stato avviato.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>Gets a value that indicates whether the workflow run-time engine has been started.</source>
          <target state="translated">Ottiene un valore che indica se il motore di runtime del flusso di lavoro è stato avviato.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow run-time engine has been started; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il motore di runtime del flusso di lavoro è stato avviato; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> indicates that the workflow run-time engine services are running.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> indica che i servizi del motore di runtime del flusso di lavoro sono in esecuzione.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph2">`false`</ph> until the host calls <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> è <ph id="ph2">`false`</ph> fino a quando l'host chiama <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>It remains <ph id="ph1">`true`</ph> until the host calls <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</source>
          <target state="translated">Rimane <ph id="ph1">`true`</ph> fino a quando l'host chiama <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>You cannot add core services to the workflow run-time engine while it is running.</source>
          <target state="translated">Non è possibile aggiungere servizi di base al motore di runtime del flusso di lavoro mentre è in esecuzione.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>Core services are services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">I servizi di base sono servizi derivati dalle classi <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> e <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>The following example demonstrates how to access the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come accedere alla proprietà <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> di un oggetto <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>In this example, if the runtime is started, a message is printed to the console.</source>
          <target state="translated">In questo esempio, se il runtime è avviato, viene visualizzato un messaggio sulla console.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>Gets or sets the name associated with the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Ottiene o imposta il nome associato a <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>The name associated with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Nome associato a questo oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> while the workflow run-time engine is running (<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph3">`true`</ph>).</source>
          <target state="translated">Non è possibile impostare <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> durante il flusso di lavoro è in esecuzione motore di run-time (<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> è <ph id="ph3">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>The following example demonstrates how to access the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come accedere alla proprietà <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> di un oggetto <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>In this example, the name of the runtime is set to "Main Runtime".</source>
          <target state="translated">In questo esempio, il nome del runtime è impostato su " Main Runtime".</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>An attempt to set <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> on a <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> that is disposed occurs.</source>
          <target state="translated">Si verifica un tentativo di impostare <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> su un <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> eliminato.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>An attempt to set <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> while the workflow run-time engine is running occurs.</source>
          <target state="translated">Si verifica un tentativo di impostare <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> mentre il motore di runtime del flusso di lavoro è in esecuzione.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>An object that represents the service to remove.</source>
          <target state="translated">Un oggetto che rappresenta il servizio da rimuovere.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>Removes the specified service from the workflow run-time engine.</source>
          <target state="translated">Rimuove il servizio specificato dal motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>You cannot remove a core service while the workflow run-time engine is running (<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph2">`true`</ph>).</source>
          <target state="translated">Non è possibile rimuovere un servizio di base, mentre è in esecuzione il motore di runtime del flusso di lavoro (<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> è <ph id="ph2">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>Core services are services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, or the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">I servizi di base sono servizi derivati dalle classi <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> o <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>If <ph id="ph1">`service`</ph> derives from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> calls the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method implemented by <ph id="ph5">`service`</ph>.</source>
          <target state="translated">Se <ph id="ph1">`service`</ph> deriva dalla classe <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> chiama il metodo <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> implementato da <ph id="ph5">`service`</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> is added and removed from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> viene aggiunto e rimosso da <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is already disposed of.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> è già stato eliminato.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>The workflow run-time engine has started (<ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>) and <ph id="ph3">&lt;paramref name="service" /&gt;</ph> is a core service.</source>
          <target state="translated">Il motore di runtime del flusso di lavoro è stato avviato (<ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> è <ph id="ph2">&lt;see langword="true" /&gt;</ph>) e <ph id="ph3">&lt;paramref name="service" /&gt;</ph> è un servizio di base.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> oppure -</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is not registered with the workflow run-time engine.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> non è registrato nel motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>Occurs when a service that is derived from the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> class calls <ph id="ph2">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" /&gt;</ph>.</source>
          <target state="translated">Si verifica quando un servizio derivato dalla classe <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> chiama il metodo <ph id="ph2">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>A service that is derived from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class can call the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> method to inform subscribers to the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> event that an exception that it was unable to handle occurred during its execution.</source>
          <target state="translated">Un servizio derivato dalla classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> può chiamare il metodo <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> per informare i sottoscrittori dell'evento <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> che si è verificata un'eccezione non gestibile durante l'esecuzione.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>You can subscribe to this event to implement a recovery mechanism.</source>
          <target state="translated">È possibile sottoscrivere questo evento per implementare un meccanismo di ripristino.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>This event is raised when a workflow instance has not been created yet by the workflow run-time engine and an exception occurs.</source>
          <target state="translated">Questo evento viene generato quando un'istanza del flusso di lavoro non è ancora stata creata dal motore di runtime del flusso di lavoro e si verifica un'eccezione.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>In this scenario, the only way to inform a host application that an exception occurred is to raise this event.</source>
          <target state="translated">In questo scenario, l'unico modo per informare un'applicazione host che si è verificata un'eccezione è generare questo evento.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>However, the workflow run-time engine does not call this directly.</source>
          <target state="translated">Tuttavia, il motore di runtime del flusso di lavoro non esegue direttamente questa operazione,</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>Instead, the workflow run-time engine either delivers an exception to the workflow instance or, if there is no instance, throws back to the caller, which in this case is actually the service that fires this event.</source>
          <target state="translated">bensì recapita un'eccezione all'istanza del flusso di lavoro o, se non sono disponibili istanze, rimanda di nuovo al chiamante che, in questo caso, è il servizio che genera questo evento.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>If you create your own persistence or scheduler service, you must implement this event yourself through the base <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> method.</source>
          <target state="translated">Se si crea un servizio di persistenza o Utilità di pianificazione, è necessario implementare questo evento tramite il metodo di base <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Guid&gt;</ph> of the workflow instance that was using the service and the <ph id="ph5">&lt;xref:System.Exception&gt;</ph> that could not be handled.</source>
          <target state="translated">Per l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph>, il mittente contiene <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> e <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contiene il <ph id="ph4">&lt;xref:System.Guid&gt;</ph> dell'istanza del flusso di lavoro che stava utilizzando il servizio e la <ph id="ph5">&lt;xref:System.Exception&gt;</ph> che non è stato possibile gestire.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> gestione degli eventi, vedere <bpt id="p1">[</bpt>utilizzo degli eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>The code associates <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> with an event handler, a method named <ph id="ph2">`OnExceptionNotHandled`</ph>.</source>
          <target state="translated">Il codice associa <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> a un gestore eventi, un metodo denominato <ph id="ph2">`OnExceptionNotHandled`</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>esempio servizio di persistenza personalizzato<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>Occurs when the workflow run-time engine is started.</source>
          <target state="translated">Si verifica quando il motore di runtime del flusso di lavoro viene avviato.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event after it has validated the core service configuration of the workflow run-time engine, has invoked the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method implemented by each of its services that derive from the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class, and has set <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to <ph id="ph6">`true`</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> metodo genera il <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> evento dopo la convalida la configurazione del servizio principale del motore di runtime del flusso di lavoro, è stato richiamato il <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> metodo implementato da ognuno dei servizi che derivano dal <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> (classe), e ha impostato <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> a <ph id="ph6">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>There is no guarantee about the order in which the services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class are started by the workflow run-time engine, and some of these workflow run-time engine services may depend on functionality supplied by other of these services to complete their startup tasks.</source>
          <target state="translated">Non è possibile garantire l'ordine con cui i servizi che derivano dalla classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> vengono avviati dal motore di runtime del flusso di lavoro e alcuni di questi servizi possono dipendere da funzionalità fornite da altri servizi per poter completare le attività di avvio.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>Workflow run-time engine services can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType&gt;</ph> method to perform any final startup tasks that require the support of other workflow run-time engine services when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event is raised.</source>
          <target state="translated">I servizi del motore di runtime del flusso di lavoro possono eseguire l'override del metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType&gt;</ph> per eseguire eventuali attività di avvio conclusive che richiedono il supporto di altri servizi del motore di runtime del flusso di lavoro quando viene generato l'evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> gestione degli eventi, vedere <bpt id="p1">[</bpt>utilizzo degli eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>In the following example, an event handler is added to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente un gestore eventi viene aggiunto all'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> di <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>In this example, the handler is an anonymous method that prints a simple message to the console.</source>
          <target state="translated">In questo esempio, il gestore è un metodo anonimo che visualizza un semplice messaggio sulla console.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>Starts the workflow run-time engine and the workflow run-time engine services.</source>
          <target state="translated">Avvia il motore di runtime del flusso di lavoro e i relativi servizi.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>This method verifies that a valid set of core services exists and then starts any services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">Questo metodo verifica che sia disponibile un set valido di servizi di base e quindi avvia qualsiasi servizio che deriva dalla classe <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There must be one and only one of each of the following core services: a workflow <ph id="ph1">`CommitWorkBatch`</ph> service derived from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> base class and a scheduler service derived from the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> base class.</source>
          <target state="translated">Deve essere uno e uno solo di ognuno dei servizi di base seguenti: un flusso di lavoro <ph id="ph1">`CommitWorkBatch`</ph> servizio derivato dal <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> classe di base e un servizio dell'utilità di pianificazione derivata dalla <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> classe di base.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>If either or both of these core services are missing, the workflow run-time engine supplies the appropriate default service: <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> for the workflow <ph id="ph2">`CommitWorkBatch`</ph> service and <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph> for the scheduler service.</source>
          <target state="translated">Se mancano uno o entrambi questi servizi di base, il motore di runtime del flusso di lavoro fornisce il servizio predefinito appropriato: <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> del flusso di lavoro <ph id="ph2">`CommitWorkBatch`</ph> servizio e <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph> per il servizio Utilità di pianificazione.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>A persistence service is optional, but there can be at most only one persistence service present.</source>
          <target state="translated">Un servizio di persistenza è facoltativo, ma può essere presente al massimo un solo servizio di persistenza.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>After it has validated the service configuration, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on all of the services that are derived from the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">Dopo la convalida della configurazione del servizio, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> chiama <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> su tutti i servizi derivati dalla classe <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>Finally, the workflow run-time engine sets <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> and raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event.</source>
          <target state="translated">Infine, il motore di runtime del flusso di lavoro imposta <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> e genera l'evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>You cannot add or remove core services after the workflow run-time engine is started.</source>
          <target state="translated">Non è possibile aggiungere o rimuovere servizi di base dopo l'avvio del motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>Core services are services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, or the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">I servizi di base sono servizi derivati dalle classi <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> o <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>If you call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> while the workflow run-time engine is running, no action is performed.</source>
          <target state="translated">Se si chiama <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> mentre il motore di runtime del flusso di lavoro è in esecuzione, non viene eseguita alcuna azione.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> after the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> creates a <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> instance and after it calls <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> to add services to the runtime.</source>
          <target state="translated">Il codice chiama <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> dopo che <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> crea un'istanza di <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> e dopo la chiamata a <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> per aggiungere servizi al runtime.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>It also calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> before any other processing occurs.</source>
          <target state="translated">Chiama anche <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> prima che si verifichi qualsiasi altra elaborazione.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>l'annullamento di un flusso di lavoro<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> viene eliminato.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There is more than one service workflow <ph id="ph1">&lt;see langword="CommitWorkBatch" /&gt;</ph> service registered with this <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Più di un servizio <ph id="ph1">&lt;see langword="CommitWorkBatch" /&gt;</ph> del flusso di lavoro è registrato in questo <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There is more than one scheduler service registered with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Più di un servizio Utilità di pianificazione è registrato in questo <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There is more than one persistence service registered with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Più di un servizio di persistenza è registrato in questo <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>Occurs when the workflow run-time engine is stopped.</source>
          <target state="translated">Si verifica quando il motore di runtime del flusso di lavoro viene arrestato.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event after it has invoked the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method implemented by each of its services that derive from the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">Il metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> genera l'evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> dopo aver richiamato il metodo <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> implementato da ognuno dei servizi che derivano dalla classe <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>There is no guarantee about the order in which these workflow run-time engine services are stopped, and some of these services may need to preserve some functionality that is relied on by other services until they too are stopped.</source>
          <target state="translated">Non è possibile garantire l'ordine con cui questi servizi del motore di runtime del flusso di lavoro vengono arrestati e alcuni di questi servizi possono dover mantenere alcune funzionalità da cui dipendono altri servizi fino a quando anche questi altri servizi verranno arrestati.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>Such services can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType&gt;</ph> method to perform any residual shutdown logic when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event is raised.</source>
          <target state="translated">Tali servizi possono eseguire l'override del metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType&gt;</ph> per eseguire l'eventuale logica di arresto rimanente quando viene generato l'evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> gestione degli eventi, vedere <bpt id="p1">[</bpt>utilizzo degli eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>In the following example, an event handler is added to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">Nell'esempio seguente un gestore eventi viene aggiunto all'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> di <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>In this example, the handler is an anonymous method that prints a simple message to the console.</source>
          <target state="translated">In questo esempio, il gestore è un metodo anonimo che visualizza un semplice messaggio sulla console.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>Stops the workflow run-time engine and the run-time services.</source>
          <target state="translated">Arresta il motore di runtime del flusso di lavoro e i servizi di runtime.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>This method causes the workflow run-time engine to unload each of its workflow instances, stop all of its services that are derived from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class, set <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to <ph id="ph3">`false`</ph>, and raise the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event.</source>
          <target state="translated">Questo metodo fa sì che il motore di runtime del flusso di lavoro arrestare tutti i servizi che derivano da scaricare ognuna delle istanze del flusso di lavoro di <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> , impostare <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> a <ph id="ph3">`false`</ph>e generare il <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>To shut down the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> gracefully, call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> before you call <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>.</source>
          <target state="translated">Per arrestare normalmente <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, chiamare <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> prima di chiamare <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> method.</source>
          <target state="translated">Per altre informazioni, vedere il metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> is called after the host has completed all other processing associated with the runtime.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> viene chiamato dopo che l'host ha completato ogni altra elaborazione associata al runtime.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>l'annullamento di un flusso di lavoro<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is already disposed of.</source>
          <target state="translated">L'oggetto <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> è già stato eliminato.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>Occurs when a workflow instance is aborted.</source>
          <target state="translated">Si verifica quando un'istanza del flusso di lavoro viene interrotta.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> occurs after all pending work for the workflow instance is cleared, but before the workflow instance is invalidated in memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> si verifica dopo che ogni lavoro in sospeso per l'istanza del flusso di lavoro è stato cancellato, ma prima che l'istanza del flusso di lavoro sia invalidata in memoria.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>You can abort a workflow instance by calling <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">È possibile interrompere un'istanza del flusso di lavoro chiamando <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Per questo evento, il mittente contiene <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> e <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contiene <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associata all'evento.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> gestione degli eventi, vedere <bpt id="p1">[</bpt>utilizzo degli eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowAborted`</ph>.</source>
          <target state="translated">Il codice associa <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> a un gestore eventi, un metodo denominato <ph id="ph2">`OnWorkflowAborted`</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>l'annullamento di un flusso di lavoro<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>Occurs when a workflow instance has completed.</source>
          <target state="translated">Si verifica quando un'istanza del flusso di lavoro viene completata.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> is raised after the workflow instance has completed but before the instance is invalidated in memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> viene generato dopo che ogni lavoro in sospeso per l'istanza del flusso di lavoro è stato completato, ma prima che l'istanza del flusso di lavoro sia invalidata in memoria.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> and its output parameters.</source>
          <target state="translated">Per l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph>, il mittente contiene <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> e <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;</ph> contiene <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> e i relativi parametri di output.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> gestione degli eventi, vedere <bpt id="p1">[</bpt>utilizzo degli eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowCompleted`</ph>.</source>
          <target state="translated">Il codice associa <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> a un gestore eventi, un metodo denominato <ph id="ph2">`OnWorkflowCompleted`</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>l'annullamento di un flusso di lavoro<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>Occurs when a workflow instance is created.</source>
          <target state="translated">Si verifica quando viene creata un'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> event after the workflow instance is completely constructed but before activities are processed.</source>
          <target state="translated">Il motore di runtime del flusso di lavoro genera l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> dopo che l'istanza del flusso di lavoro è stata completamente costruita ma prima che le attività vengano elaborate.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Per questo evento, il mittente contiene <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> e <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contiene <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associata all'evento.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> gestione degli eventi, vedere <bpt id="p1">[</bpt>utilizzo degli eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowCreated`</ph>.</source>
          <target state="translated">Il codice associa <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> a un gestore eventi, un metodo denominato <ph id="ph2">`OnWorkflowCreated`</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>esempio servizio di persistenza personalizzato<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>Occurs when a workflow instance enters the idle state.</source>
          <target state="translated">Si verifica quando un'istanza del flusso di lavoro entra nello stato inattivo.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event when the workflow instance enters an idle state; for example, when the workflow is waiting for a <ph id="ph2">&lt;xref:System.Workflow.Activities.DelayActivity&gt;</ph> activity to complete.</source>
          <target state="translated">Il motore di runtime del flusso di lavoro genera l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> quando l'istanza del flusso di lavoro entra in un stato inattivo; ad esempio, quando il flusso di lavoro è in attesa del completamento di un'attività <ph id="ph2">&lt;xref:System.Workflow.Activities.DelayActivity&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Per questo evento, il mittente contiene <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> e <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contiene <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associata all'evento.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> gestione degli eventi, vedere <bpt id="p1">[</bpt>NIB: utilizzo degli eventi<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowIdled`</ph>.</source>
          <target state="translated">Il codice associa <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> a un gestore eventi, un metodo denominato <ph id="ph2">`OnWorkflowIdled`</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>l'annullamento di un flusso di lavoro<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>Occurs when the workflow instance is loaded into memory.</source>
          <target state="translated">Si verifica quando l'istanza del flusso di lavoro viene caricata in memoria.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> occurs after the persistence service has restored the workflow instance, but before the workflow run-time engine begins to execute any activities.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> si verifica dopo che il servizio di persistenza ha ripristinato l'istanza del flusso di lavoro, ma prima che il motore di runtime del flusso di lavoro cominci a eseguire qualsiasi attività.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Per l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph>, il mittente contiene <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> e <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contiene <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associata all'evento.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> gestione degli eventi, vedere <bpt id="p1">[</bpt>utilizzo degli eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowLoad`</ph>.</source>
          <target state="translated">Il codice associa <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> a un gestore eventi, un metodo denominato <ph id="ph2">`OnWorkflowLoad`</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept> sample.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>Custom Persistence Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>Occurs when the state of a workflow instance is persisted.</source>
          <target state="translated">Si verifica quando lo stato di un'istanza del flusso di lavoro è persistente.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>The workflow instance can be persisted for many reasons.</source>
          <target state="translated">L'istanza del flusso di lavoro può essere persistente per molte ragioni.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>For example, the host can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph> on a workflow instance, or the workflow run-time engine can persist a workflow instance because the instance is idle or because an atomic scope has completed.</source>
          <target state="translated">Ad esempio, l'host può chiamare <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph> su un'istanza del flusso di lavoro o il motore di runtime del flusso di lavoro può rendere persistente un'istanza del flusso di lavoro perché l'istanza è inattiva o perché un ambito atomico è stato completato.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>If a persistence service is present in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> is raised by the runtime after the state of the workflow instance is saved to memory.</source>
          <target state="translated">Se un servizio di persistenza è presente in <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> è generato dal runtime dopo che lo stato dell'istanza del flusso di lavoro è stato salvato in memoria.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>If a persistence service is not present, the event is still raised but the instance state is not saved.</source>
          <target state="translated">Se un servizio di persistenza non è presente, l'evento viene generato ugualmente ma lo stato dell'istanza non viene salvato.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>If the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event occurs because the workflow instance is being unloaded, it is followed by a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event.</source>
          <target state="translated">Se si verifica l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> perché l'istanza del flusso di lavoro sta per essere scaricata, sarà seguito da un evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Per l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph>, il mittente contiene <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> e <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contiene <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associata all'evento.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> gestione degli eventi, vedere <bpt id="p1">[</bpt>utilizzo degli eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>The following code example demonstrates how you can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowPersisted`</ph>.</source>
          <target state="translated">Il codice associa <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> a un gestore eventi, un metodo denominato <ph id="ph2">`OnWorkflowPersisted`</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>esempio servizio di persistenza personalizzato<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>Occurs when execution of a workflow instance is resumed following a suspension.</source>
          <target state="translated">Si verifica quando l'esecuzione di un'istanza del flusso di lavoro riprende in seguito a una sospensione.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event just before the workflow instance is scheduled.</source>
          <target state="translated">Il motore di runtime del flusso di lavoro genera l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> poco prima della pianificazione dell'istanza del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event is usually raised because of an explicit call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">L'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> in genere viene generato a causa di una chiamata esplicita a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>However, the workflow run-time engine can temporarily suspend an instance to perform an operation, for example, to apply a workflow change.</source>
          <target state="translated">Comunque il motore di runtime del flusso di lavoro può sospendere temporaneamente un'istanza per eseguire un'operazione, ad esempio per applicare una modifica al flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event is raised when the runtime resumes execution of the workflow instance following the operation.</source>
          <target state="translated">In questo caso, l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> viene generato quando il runtime riprende l'esecuzione dell'istanza del flusso di lavoro che segue l'operazione.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Per l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph>, il mittente contiene <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> e <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contiene <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associata all'evento.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> gestione degli eventi, vedere <bpt id="p1">[</bpt>utilizzo degli eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The following code example demonstrates how you can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowResume`</ph>.</source>
          <target state="translated">Il codice associa <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> a un gestore eventi, un metodo denominato <ph id="ph2">`OnWorkflowResume`</ph>.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>This code example is part of the <bpt id="p1">[</bpt>Suspend and Terminate Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157402)</ept>.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>Suspend and Terminate esempio<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157402)</ept>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>Occurs when a workflow instance has been started.</source>
          <target state="translated">Si verifica quando un'istanza del flusso di lavoro viene avviata.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> event after the workflow instance is started by scheduling the root activity for execution.</source>
          <target state="translated">Il motore di runtime del flusso di lavoro genera l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> dopo che l'istanza del flusso di lavoro è stata avviata pianificando l'attività radice per l'esecuzione.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Per questo evento, il mittente contiene <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> e <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contiene <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associata all'evento.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> gestione degli eventi, vedere <bpt id="p1">[</bpt>utilizzo degli eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowStarted`</ph>.</source>
          <target state="translated">Il codice associa <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> a un gestore eventi, un metodo denominato <ph id="ph2">`OnWorkflowStarted`</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Host Communication Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157406)</ept>.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>Host comunicazione esempio<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157406)</ept>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>Occurs when a workflow instance is suspended.</source>
          <target state="translated">Si verifica quando un'istanza del flusso di lavoro viene sospesa.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>The workflow instance can be suspended by the host through a call to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph> method, by a <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.SuspendActivity&gt;</ph> activity, or implicitly by the workflow run-time engine.</source>
          <target state="translated">L'istanza del flusso di lavoro può essere sospesa dall'host tramite una chiamata al metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph>, da un'attività <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.SuspendActivity&gt;</ph> o implicitamente dal motore di runtime del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>For example, the workflow run-time engine temporarily suspends the instance when it applies dynamic changes to the instance.</source>
          <target state="translated">Ad esempio, il motore di runtime del flusso di lavoro sospende temporaneamente l'istanza quando applica modifiche dinamiche all'istanza.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> and a string that describes the reason the instance was suspended.</source>
          <target state="translated">Per l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph>, il mittente contiene <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> e <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph> contiene <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> e una stringa che descrive il motivo della sospensione dell'istanza.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> gestione degli eventi, vedere <bpt id="p1">[</bpt>utilizzo degli eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowSuspended`</ph>.</source>
          <target state="translated">Il codice associa <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> a un gestore eventi, un metodo denominato <ph id="ph2">`OnWorkflowSuspended`</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>This code example is part of the <bpt id="p1">[</bpt>Suspend and Terminate Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157402)</ept>.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>Suspend and Terminate esempio<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157402)</ept>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>Occurs when a workflow instance is terminated.</source>
          <target state="translated">Si verifica quando un'istanza del flusso di lavoro viene terminata.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The workflow can be terminated by the host through a call to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> method, by a <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.TerminateActivity&gt;</ph> activity, or by the workflow run-time engine when an unhandled exception occurs.</source>
          <target state="translated">L'istanza del flusso di lavoro può essere terminata dall'host tramite una chiamata al metodo <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph>, da un'attività <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.TerminateActivity&gt;</ph> o dal motore di runtime del flusso di lavoro quando si verifica un'eccezione non gestita.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> event after the workflow instance is terminated, but before it is invalidated in memory.</source>
          <target state="translated">Il motore di runtime del flusso di lavoro genera l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> dopo che l'istanza del flusso di lavoro è stata terminata ma prima che venga invalidata in memoria.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> and information about the reason the instance was terminated in the <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Per l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph>, il mittente contiene <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> e <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph> contiene <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> e le informazioni relative al motivo per cui l'istanza è stata terminata nella proprietà <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> gestione degli eventi, vedere <bpt id="p1">[</bpt>utilizzo degli eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowCompleted`</ph>.</source>
          <target state="translated">Il codice associa <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> a un gestore eventi, un metodo denominato <ph id="ph2">`OnWorkflowCompleted`</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>l'annullamento di un flusso di lavoro<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> esempio.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>Occurs when the workflow instance is unloaded from memory.</source>
          <target state="translated">Si verifica quando l'istanza del flusso di lavoro viene scaricata dalla memoria.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>A workflow instance can be unloaded from memory by an explicit call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph>, or implicitly by the workflow run-time engine according to its own semantics.</source>
          <target state="translated">Un'istanza del flusso di lavoro può essere scaricata dalla memoria mediante una chiamata esplicita a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> o implicitamente dal motore di runtime del flusso di lavoro in base alla relativa semantica.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>For example, the workflow run-time engine unloads a workflow instance if the instance becomes idle and the runtime has a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> added for which <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Ad esempio, il motore di runtime del flusso di lavoro viene scaricata un'istanza del flusso di lavoro se l'istanza diventa inattiva e il runtime ha un <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> aggiunto per il quale <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A&gt;</ph> è <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>The workflow run-time engine raises the</source>
          <target state="translated">Il motore di runtime del flusso di lavoro genera l'evento</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event after the state of the workflow instance has been successfully persisted but before the instance is invalidated in memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> dopo che lo stato dell'istanza del flusso di lavoro è stato reso persistente ma prima che l'istanza venga invalidata in memoria.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>Therefore, a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event precedes the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event.</source>
          <target state="translated">Pertanto, un evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> precede l'evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Per l'evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph>, il mittente contiene <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> e <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contiene <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associata all'evento.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> gestione degli eventi, vedere <bpt id="p1">[</bpt>utilizzo degli eventi<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come utilizzare una funzionalità <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> da un host del flusso di lavoro.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowUnload`</ph>.</source>
          <target state="translated">Il codice associa <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> a un gestore eventi, un metodo denominato <ph id="ph2">`OnWorkflowUnload`</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</source>
          <target state="translated">Questo esempio di codice fa parte di <bpt id="p1">[</bpt>esempio servizio di persistenza personalizzato<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>