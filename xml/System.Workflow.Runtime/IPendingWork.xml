<Type Name="IPendingWork" FullName="System.Workflow.Runtime.IPendingWork">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="13313edf9397ba6f96e3b2db9d3170e177e4d7a4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30685905" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPendingWork" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPendingWork" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.IPendingWork" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPendingWork" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPendingWork" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="73879-101">Fornisce i metodi per partecipare a un batch di lavoro.</span>
      <span class="sxs-lookup">
        <span data-stu-id="73879-101">Provides methods to participate in a work batch.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="73879-102">L'interfaccia <xref:System.Workflow.Runtime.IPendingWork> viene fornita per i servizi che vogliono partecipare al meccanismo di inclusione in batch del motore di runtime del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="73879-102">The <xref:System.Workflow.Runtime.IPendingWork> interface is provided for services that want to participate in the workflow runtime engine batching mechanism.</span></span> <span data-ttu-id="73879-103">Il meccanismo di inclusione in batch è particolarmente utile per i servizi che utilizzano un archivio durevole.</span><span class="sxs-lookup"><span data-stu-id="73879-103">The batching mechanism is especially useful for services that use a durable store.</span></span> <span data-ttu-id="73879-104">È importante in questi casi mantenere la coerenza tra l'archivio durevole utilizzato dal servizio e lo stato interno del motore di runtime del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="73879-104">It is often important in these cases to maintain consistency between the durable store used by the service and the internal state of the workflow runtime engine.</span></span>  
  
 <span data-ttu-id="73879-105">Se si desidera che il servizio partecipi all'inclusione in batch delle transazioni del flusso di lavoro fornita da <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, è necessario implementare i metodi definiti dall'interfaccia <xref:System.Workflow.Runtime.IPendingWork>.</span><span class="sxs-lookup"><span data-stu-id="73879-105">If you want your service to participate in workflow transaction batching provided by the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, you must implement the methods defined by the <xref:System.Workflow.Runtime.IPendingWork> interface.</span></span> <span data-ttu-id="73879-106">Il motore di runtime del flusso di lavoro chiamerà il metodo <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> sul servizio per eseguire il commit del batch.</span><span class="sxs-lookup"><span data-stu-id="73879-106">The workflow runtime engine will call the <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method on your service to commit the batch.</span></span>  
  
 <span data-ttu-id="73879-107">La classe <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> implementa l'interfaccia <xref:System.Workflow.Runtime.IPendingWork>.</span><span class="sxs-lookup"><span data-stu-id="73879-107">The <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class implements the <xref:System.Workflow.Runtime.IPendingWork> interface.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Transaction transaction, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Transaction ^ transaction, System::Collections::ICollection ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="transaction">
          <span data-ttu-id="73879-108">
            <see cref="T:System.Transactions.Transaction" /> associato al lavoro in sospeso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73879-108">The <see cref="T:System.Transactions.Transaction" /> associated with the pending work.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="73879-109">Elementi di lavoro di cui eseguire il commit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73879-109">The work items to be committed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73879-110">Esegue il commit dell'elenco di elementi di lavoro utilizzando l'oggetto <see cref="T:System.Transactions.Transaction" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73879-110">Commits the list of work items by using the specified <see cref="T:System.Transactions.Transaction" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73879-111">Il motore di runtime del flusso di lavoro chiama il metodo <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> quando la semantica stabilisce che deve essere eseguito il commit del lavoro in sospeso nel batch di lavoro.</span><span class="sxs-lookup"><span data-stu-id="73879-111">The workflow runtime engine calls the <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method when its semantics dictate that the pending work in the work batch should be committed.</span></span> <span data-ttu-id="73879-112">Quando raggiunge un punto di commit, il motore di runtime del flusso di lavoro chiama il metodo <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> su ogni oggetto <xref:System.Workflow.Runtime.IPendingWork> nel batch di lavoro; il motore di runtime del flusso di lavoro passa al metodo <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> la raccolta di elementi associati a quell'oggetto <xref:System.Workflow.Runtime.IPendingWork>.</span><span class="sxs-lookup"><span data-stu-id="73879-112">When it reaches a commit point, the workflow runtime engine calls the <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method on each <xref:System.Workflow.Runtime.IPendingWork> object in its work batch; the workflow runtime engine passes the <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method the collection of items associated with that <xref:System.Workflow.Runtime.IPendingWork> object.</span></span> <span data-ttu-id="73879-113">Tutto il lavoro in un batch deve essere eseguito correttamente altrimenti l'intero batch avrà esito negativo.</span><span class="sxs-lookup"><span data-stu-id="73879-113">Either all of the work in a batch succeeds or none of it succeeds.</span></span> <span data-ttu-id="73879-114">È necessario generare un'eccezione se non è possibile eseguire il commit di qualsiasi elemento di lavoro passato al metodo <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> nell'implementazione.</span><span class="sxs-lookup"><span data-stu-id="73879-114">You should throw an exception if any of the work items passed to the <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method in your implementation cannot be committed.</span></span> <span data-ttu-id="73879-115">A seconda dell'implementazione, può essere necessario eseguire il rollback nel metodo <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> se non è possibile eseguire il commit degli elementi di lavoro.</span><span class="sxs-lookup"><span data-stu-id="73879-115">Depending on your implementation, you may want to perform some rollback in your <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method if it cannot commit its work items.</span></span> <span data-ttu-id="73879-116">Se il motore di runtime del flusso di lavoro esegue correttamente il commit di tutto il lavoro nel batch di lavoro, chiama <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> con il parametro `succeeded` impostato su `true`; in caso contrario, chiama <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> con `succeeded` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="73879-116">If the workflow runtime engine successfully commits all of the work in the work batch, it calls <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> with the `succeeded` parameter set to `true`; otherwise, it calls <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> with `succeeded` set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete (bool succeeded, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete(bool succeeded, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete (succeeded As Boolean, items As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete(bool succeeded, System::Collections::ICollection ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="succeeded" Type="System.Boolean" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="succeeded">
          <span data-ttu-id="73879-117">
            <see langword="true" /> se la transazione ha esito positivo. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73879-117">
              <see langword="true" /> if the transaction succeeded; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="73879-118">
            <see cref="T:System.Collections.ICollection" /> di elementi di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73879-118">An <see cref="T:System.Collections.ICollection" /> of work items.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73879-119">Chiamato quando la transazione è stata completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73879-119">Called when the transaction has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73879-120">Se `succeeded` è `true`, la transazione ha esito positivo e qualsiasi risorsa utilizzata dal batch di lavoro può essere rilasciata.</span><span class="sxs-lookup"><span data-stu-id="73879-120">If `succeeded` is `true`, the transaction succeeded and any resources used by the work batch may be released.</span></span> <span data-ttu-id="73879-121">Se `succeeded` è `false`, la transazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="73879-121">If `succeeded` is `false`, the transaction failed.</span></span> <span data-ttu-id="73879-122">A seconda dell'implementazione, è possibile eseguire le operazioni di rollback appropriate sul lavoro nel batch di lavoro quando la transazione ha esito negativo.</span><span class="sxs-lookup"><span data-stu-id="73879-122">Depending on your implementation, you can perform any appropriate roll back on the work in the work batch when the transaction fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustCommit">
      <MemberSignature Language="C#" Value="public bool MustCommit (System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MustCommit(class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function MustCommit (items As ICollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MustCommit(System::Collections::ICollection ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="73879-123">
            <see cref="T:System.Collections.ICollection" /> di elementi di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73879-123">An <see cref="T:System.Collections.ICollection" /> of work items.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73879-124">Consente agli elementi nel batch di lavoro di dichiarare se devono eseguire il commit immediatamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73879-124">Allows the items in the work batch to assert whether they must commit immediately.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73879-125">È <see langword="true" /> se deve essere eseguito immediatamente il commit degli elementi nella raccolta. In caso contrario è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73879-125">
              <see langword="true" /> if any item in the collection must be committed immediately; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73879-126">Se <xref:System.Workflow.Runtime.IPendingWork.MustCommit%2A> restituisce `false`, il lavoro può essere posticipato a un punto di commit successivo.</span><span class="sxs-lookup"><span data-stu-id="73879-126">If <xref:System.Workflow.Runtime.IPendingWork.MustCommit%2A> returns `false`, the work can be postponed to a future commit point.</span></span> <span data-ttu-id="73879-127">Se deve essere eseguito il commit di uno degli elementi, restituire `true` e il commit di tutti gli elementi verrà eseguito al punto di commit corrente.</span><span class="sxs-lookup"><span data-stu-id="73879-127">If any of the items must be committed, then return `true` and all items will be committed at the current commit point.</span></span> <span data-ttu-id="73879-128">Per una discussione sui possibili punti di commit, vedere la classe <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>.</span><span class="sxs-lookup"><span data-stu-id="73879-128">For a discussion about possible commit points, see the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>