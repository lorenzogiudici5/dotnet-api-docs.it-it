<Type Name="IPendingWork" FullName="System.Workflow.Runtime.IPendingWork">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="21bad8fa34f94f0b49becc96a7261028f63c4298" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39786689" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPendingWork" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPendingWork" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.IPendingWork" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPendingWork" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPendingWork" />
  <TypeSignature Language="F#" Value="type IPendingWork = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce i metodi per partecipare a un batch di lavoro.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 L'interfaccia <xref:System.Workflow.Runtime.IPendingWork> viene fornita per i servizi che vogliono partecipare al meccanismo di inclusione in batch del motore di runtime del flusso di lavoro. Il meccanismo di inclusione in batch è particolarmente utile per i servizi che utilizzano un archivio durevole. È importante in questi casi mantenere la coerenza tra l'archivio durevole utilizzato dal servizio e lo stato interno del motore di runtime del flusso di lavoro.  
  
 Se si desidera che il servizio partecipi all'inclusione in batch delle transazioni del flusso di lavoro fornita da <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, è necessario implementare i metodi definiti dall'interfaccia <xref:System.Workflow.Runtime.IPendingWork>. Il motore di runtime del flusso di lavoro chiamerà il metodo <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> sul servizio per eseguire il commit del batch.  
  
 La classe <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> implementa l'interfaccia <xref:System.Workflow.Runtime.IPendingWork>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Transaction transaction, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Transaction ^ transaction, System::Collections::ICollection ^ items);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Transaction * System.Collections.ICollection -&gt; unit" Usage="iPendingWork.Commit (transaction, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="transaction">
          <see cref="T:System.Transactions.Transaction" /> associato al lavoro in sospeso.</param>
        <param name="items">Elementi di lavoro di cui eseguire il commit.</param>
        <summary>Esegue il commit dell'elenco di elementi di lavoro utilizzando l'oggetto <see cref="T:System.Transactions.Transaction" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il motore di runtime del flusso di lavoro chiama il metodo <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> quando la semantica stabilisce che deve essere eseguito il commit del lavoro in sospeso nel batch di lavoro. Quando raggiunge un punto di commit, il motore di runtime del flusso di lavoro chiama il metodo <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> su ogni oggetto <xref:System.Workflow.Runtime.IPendingWork> nel batch di lavoro; il motore di runtime del flusso di lavoro passa al metodo <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> la raccolta di elementi associati a quell'oggetto <xref:System.Workflow.Runtime.IPendingWork>. Tutto il lavoro in un batch deve essere eseguito correttamente altrimenti l'intero batch avrà esito negativo. È necessario generare un'eccezione se non è possibile eseguire il commit di qualsiasi elemento di lavoro passato al metodo <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> nell'implementazione. A seconda dell'implementazione, può essere necessario eseguire il rollback nel metodo <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> se non è possibile eseguire il commit degli elementi di lavoro. Se il motore di runtime del flusso di lavoro esegue correttamente il commit di tutto il lavoro nel batch di lavoro, chiama <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> con il parametro `succeeded` impostato su `true`; in caso contrario, chiama <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> con `succeeded` impostato su `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete (bool succeeded, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete(bool succeeded, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete (succeeded As Boolean, items As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete(bool succeeded, System::Collections::ICollection ^ items);" />
      <MemberSignature Language="F#" Value="abstract member Complete : bool * System.Collections.ICollection -&gt; unit" Usage="iPendingWork.Complete (succeeded, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="succeeded" Type="System.Boolean" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="succeeded">
          <see langword="true" /> se la transazione ha esito positivo. In caso contrario, <see langword="false" />.</param>
        <param name="items">
          <see cref="T:System.Collections.ICollection" /> di elementi di lavoro.</param>
        <summary>Chiamato quando la transazione è stata completata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `succeeded` è `true`, la transazione ha esito positivo e qualsiasi risorsa utilizzata dal batch di lavoro può essere rilasciata. Se `succeeded` è `false`, la transazione ha esito negativo. A seconda dell'implementazione, è possibile eseguire le operazioni di rollback appropriate sul lavoro nel batch di lavoro quando la transazione ha esito negativo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustCommit">
      <MemberSignature Language="C#" Value="public bool MustCommit (System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MustCommit(class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function MustCommit (items As ICollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MustCommit(System::Collections::ICollection ^ items);" />
      <MemberSignature Language="F#" Value="abstract member MustCommit : System.Collections.ICollection -&gt; bool" Usage="iPendingWork.MustCommit items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="items">
          <see cref="T:System.Collections.ICollection" /> di elementi di lavoro.</param>
        <summary>Consente agli elementi nel batch di lavoro di dichiarare se devono eseguire il commit immediatamente.</summary>
        <returns>È <see langword="true" /> se deve essere eseguito immediatamente il commit degli elementi nella raccolta. In caso contrario è <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.Workflow.Runtime.IPendingWork.MustCommit%2A> restituisce `false`, il lavoro può essere posticipato a un punto di commit successivo. Se deve essere eseguito il commit di uno degli elementi, restituire `true` e il commit di tutti gli elementi verrà eseguito al punto di commit corrente. Per una discussione sui possibili punti di commit, vedere la classe <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>