<Type Name="WorkflowInstance" FullName="System.Workflow.Runtime.WorkflowInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5d6a178da4ca5a70d9c3b8a15f0604cf360da09c" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48594426" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowInstance" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowInstance sealed" />
  <TypeSignature Language="F#" Value="type WorkflowInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="85b47-101">Rappresenta un'istanza del flusso di lavoro.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85b47-101">Represents a workflow instance.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="85b47-102">La classe <xref:System.Workflow.Runtime.WorkflowInstance> espone metodi e proprietà che possono essere utilizzati per controllare l'esecuzione di un'istanza del flusso di lavoro; essenzialmente è un proxy dell'istanza del flusso di lavoro effettiva utilizzato dal motore di runtime del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="85b47-102">The <xref:System.Workflow.Runtime.WorkflowInstance> class exposes methods and properties that can be used to control the execution of a workflow instance; it is essentially a proxy to the actual workflow instance used by the workflow runtime engine.</span></span> <span data-ttu-id="85b47-103">Un host o un servizio possono specificare al motore di runtime del flusso di lavoro di eseguire azioni su un'istanza del flusso di lavoro chiamando i metodi adatti contenuti nella classe <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="85b47-103">A host or a service can instruct the workflow runtime engine to perform actions on a workflow instance by calling the appropriate methods that are contained in the <xref:System.Workflow.Runtime.WorkflowInstance> class.</span></span>  <span data-ttu-id="85b47-104">Se l'azione richiesta non è valida, ad esempio, se l'host chiama il metodo <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> su un'istanza del flusso di lavoro che è già stata completata, il motore di runtime del flusso di lavoro genererà un'eccezione adatta.</span><span class="sxs-lookup"><span data-stu-id="85b47-104">If the requested action is not valid, for example, if the host calls <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> on a workflow instance that has already completed, the workflow runtime engine will raise an appropriate exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85b47-105">Se un'istanza del flusso di lavoro non risponde perché una chiamata sull'applicazione host non viene restituita, l'unico modo per recuperare l'istanza è riavviare il runtime.</span><span class="sxs-lookup"><span data-stu-id="85b47-105">If a workflow instance becomes unresponsive because a call on the host application does not return, the only way to recover the instance is to restart the runtime.</span></span> <span data-ttu-id="85b47-106">Tuttavia, se l'istanza è stata forzatamente scaricata, interrotta o sospesa, può essere ripresa chiamando il metodo <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="85b47-106">However, if the instance has been forcibly unloaded, aborted, or suspended, it can be continued by calling the <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b47-107">Nell'esempio di codice seguente viene illustrato come creare e avviare una <xref:System.Workflow.Runtime.WorkflowInstance> in un host del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="85b47-107">The following code example demonstrates how you can create and start a <xref:System.Workflow.Runtime.WorkflowInstance> in a workflow host.</span></span> <span data-ttu-id="85b47-108">Il codice crea un'istanza di <xref:System.Workflow.Runtime.WorkflowRuntime>, aggiunge servizi al runtime e quindi dimostra la modalità consigliata per creare un oggetto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="85b47-108">The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="85b47-109">Il codice inizializza <xref:System.Workflow.Runtime.WorkflowInstance> chiamando il metodo <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> e passando il tipo precedentemente creato a tale metodo.</span><span class="sxs-lookup"><span data-stu-id="85b47-109">The code initializes <xref:System.Workflow.Runtime.WorkflowInstance> by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it.</span></span> <span data-ttu-id="85b47-110">L'oggetto <xref:System.Workflow.Runtime.WorkflowInstance> viene avviato con la chiamata al metodo <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A>.</span><span class="sxs-lookup"><span data-stu-id="85b47-110">The <xref:System.Workflow.Runtime.WorkflowInstance> is started with the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method call.</span></span>  
  
 <span data-ttu-id="85b47-111">Questo esempio di codice fa parte dell'esempio SDK Canceling a Workflow nel file Program.cs.</span><span class="sxs-lookup"><span data-stu-id="85b47-111">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="85b47-112">Per altre informazioni, vedere [annullamento di un flusso di lavoro](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="85b47-112">For more information, see [Canceling a Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="85b47-113">Questo tipo è thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85b47-113">This type is thread safe.</span>
      </span>
    </threadsafe>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)">
      <span data-ttu-id="85b47-114">Annullamento di un flusso di lavoro</span>
      <span class="sxs-lookup">
        <span data-stu-id="85b47-114">Canceling a Workflow</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="workflowInstance.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85b47-115">Interrompe l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-115">Aborts the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-116">L'istanza del flusso di lavoro viene interrotta in modo sincrono; ovvero, il metodo viene restituito dopo l'interruzione dell'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="85b47-116">The workflow instance is aborted in a synchronous manner; that is, the method returns after the workflow instance has been aborted.</span></span> <span data-ttu-id="85b47-117">Il motore di runtime del flusso di lavoro invalida l'istanza del flusso di lavoro in memoria e cancella la proprietà <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span><span class="sxs-lookup"><span data-stu-id="85b47-117">The workflow runtime engine invalidates the workflow instance in memory and clears the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span> <span data-ttu-id="85b47-118">Se l'istanza del flusso di lavoro ha utilizzato un servizio di persistenza, tutto il lavoro eseguito dall'ultimo punto di persistenza viene eliminato.</span><span class="sxs-lookup"><span data-stu-id="85b47-118">If a persistence service was used by your workflow instance, all work performed since the last persistence point is thrown away.</span></span> <span data-ttu-id="85b47-119">Dopo l'interruzione dell'istanza del flusso di lavoro, il motore di runtime del flusso di lavoro genera l'evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted>.</span><span class="sxs-lookup"><span data-stu-id="85b47-119">After it aborts the workflow instance, the workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> event.</span></span> <span data-ttu-id="85b47-120">È possibile chiamare il metodo <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> per ricaricare l'istanza del flusso di lavoro e avviarla dall'ultimo punto di persistenza.</span><span class="sxs-lookup"><span data-stu-id="85b47-120">You can call <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> to reload the workflow instance and start from its last persistence point.</span></span>  
  
 <span data-ttu-id="85b47-121">`Abort` è diverso dal metodo <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> poiché mentre `Abort` cancella l'istanza del flusso di lavoro in memoria e può essere riavviato dall'ultimo punto di persistenza, Terminate cancella l'istanza del flusso di lavoro in memoria e informa il servizio di persistenza che l'istanza è stata cancellata dalla memoria.</span><span class="sxs-lookup"><span data-stu-id="85b47-121">`Abort` is different from <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> in that while `Abort` simply clears the in-memory workflow instance and can be restarted from the last persistence point, Terminate clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</span></span> <span data-ttu-id="85b47-122">Per <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, questo vuole dire che ogni informazione sullo stato dell'istanza del flusso di lavoro viene eliminata dal database al momento della chiusura.</span><span class="sxs-lookup"><span data-stu-id="85b47-122">For the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, this means that all state information for that workflow instance is deleted from the database upon termination.</span></span> <span data-ttu-id="85b47-123">Non sarà possibile ricaricare l'istanza del flusso di lavoro da un punto di persistenza precedentemente archiviato.</span><span class="sxs-lookup"><span data-stu-id="85b47-123">You will not be able to reload the workflow instance from a previously stored persistence point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b47-124">Nell'esempio seguente viene illustrata la chiamata ad Abort su un'istanza del flusso di lavoro di tipo Workflow1.</span><span class="sxs-lookup"><span data-stu-id="85b47-124">The following example demonstrates calling Abort on a workflow instance of type Workflow1.</span></span>  
  
 [!code-csharp[WF_Samples#13](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#13)]
 [!code-vb[WF_Samples#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85b47-125">Il motore di runtime del flusso di lavoro non è in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-125">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyWorkflowChanges">
      <MemberSignature Language="C#" Value="public void ApplyWorkflowChanges (System.Workflow.ComponentModel.WorkflowChanges workflowChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyWorkflowChanges(class System.Workflow.ComponentModel.WorkflowChanges workflowChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyWorkflowChanges(System::Workflow::ComponentModel::WorkflowChanges ^ workflowChanges);" />
      <MemberSignature Language="F#" Value="member this.ApplyWorkflowChanges : System.Workflow.ComponentModel.WorkflowChanges -&gt; unit" Usage="workflowInstance.ApplyWorkflowChanges workflowChanges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowChanges" Type="System.Workflow.ComponentModel.WorkflowChanges" />
      </Parameters>
      <Docs>
        <param name="workflowChanges">
          <span data-ttu-id="85b47-126">Un oggetto <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> che specifica aggiornamenti dinamici per l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-126">A <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> specifying dynamic updates for the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85b47-127">Applica modifiche all'istanza del flusso di lavoro specificata dall'oggetto <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-127">Applies changes to the workflow instance specified by the <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-128">Se l'istanza del flusso di lavoro non è già stata sospesa, il motore di runtime del flusso di lavoro sospende temporaneamente l'istanza prima di applicare le modifiche.</span><span class="sxs-lookup"><span data-stu-id="85b47-128">If the workflow instance is not already suspended, the workflow runtime engine temporarily suspends the instance before applying the changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b47-129">Nell'esempio di codice seguente viene illustrata la chiamata a ApplyWorkflowChanges per un oggetto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="85b47-129">The following example demonstrates calling ApplyWorkflowChanges to a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  <span data-ttu-id="85b47-130">Questo esempio di codice fa parte dell'esempio SDK Ordering State Machine nel file Mainform.cs.</span><span class="sxs-lookup"><span data-stu-id="85b47-130">This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</span></span>  <span data-ttu-id="85b47-131">Per altre informazioni, vedere la [ordinamento esempio di macchina a stati](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="85b47-131">For more information, see the [Ordering State Machine Sample](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[WF_Samples#89](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#89)]
 [!code-vb[WF_Samples#89](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#89)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85b47-132">Il motore di runtime del flusso di lavoro non è in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-132">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnqueueItem">
      <MemberSignature Language="C#" Value="public void EnqueueItem (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnqueueItem(class System.IComparable queueName, object item, class System.Workflow.Runtime.IPendingWork pendingWork, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnqueueItem (queueName As IComparable, item As Object, pendingWork As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnqueueItem(IComparable ^ queueName, System::Object ^ item, System::Workflow::Runtime::IPendingWork ^ pendingWork, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.EnqueueItem : IComparable * obj * System.Workflow.Runtime.IPendingWork * obj -&gt; unit" Usage="workflowInstance.EnqueueItem (queueName, item, pendingWork, workItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="pendingWork" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queueName">
          <span data-ttu-id="85b47-133">Nome di <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-133">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="85b47-134">Oggetto da accodare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-134">The object to enqueue.</span>
          </span>
        </param>
        <param name="pendingWork">
          <span data-ttu-id="85b47-135">
            <see cref="T:System.Workflow.Runtime.IPendingWork" /> che consente al mittente di ricevere una notifica quando <c>item</c> viene recapitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-135">An <see cref="T:System.Workflow.Runtime.IPendingWork" /> that allows the sender to be notified when <c>item</c> is delivered.</span>
          </span>
        </param>
        <param name="workItem">
          <span data-ttu-id="85b47-136">Oggetto da passare ai metodi <see cref="T:System.Workflow.Runtime.IPendingWork" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-136">An object to be passed to the <see cref="T:System.Workflow.Runtime.IPendingWork" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85b47-137">Inserisce un messaggio in modo sincrono nella coda del flusso di lavoro specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-137">Posts a message to the specified workflow queue synchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-138">Invia l'oggetto `item` alla classe <xref:System.Workflow.Runtime.WorkflowQueue> specificata.</span><span class="sxs-lookup"><span data-stu-id="85b47-138">Sends the `item` to the specified <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="85b47-139">Se si desidera ricevere una notifica quando il messaggio viene recapitato, è possibile implementare <xref:System.Workflow.Runtime.IPendingWork> nel servizio e passare un `workItem` e un oggetto <xref:System.Workflow.Runtime.IPendingWork> a <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="85b47-139">If you want to be notified when the message is delivered, you can implement <xref:System.Workflow.Runtime.IPendingWork> in your service and pass a `workItem` and an <xref:System.Workflow.Runtime.IPendingWork> object to <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="85b47-140">Se non si desidera tale notifica, è possibile passare un riferimento null (`Nothing` in Visual Basic) per `pendingWork` e `workItem`.</span><span class="sxs-lookup"><span data-stu-id="85b47-140">If you do not want such notification, you can pass a null reference (`Nothing` in Visual Basic) for `pendingWork` and `workItem`.</span></span>  
  
 <span data-ttu-id="85b47-141">Quando si usa questo metodo con un lavoro macchina a stati, è possibile ricevere un'eccezione con il messaggio "coda '{0}' non è abilitato."</span><span class="sxs-lookup"><span data-stu-id="85b47-141">When using this method with a state machine workflow, you might get an exception with the message "Queue '{0}' is not enabled."</span></span> <span data-ttu-id="85b47-142">Ciò accade quando lo stato corrente della macchina a stati non sa come gestire un evento specifico.</span><span class="sxs-lookup"><span data-stu-id="85b47-142">This happens when the current state of the state machine does not know how to handle a specific event.</span></span> <span data-ttu-id="85b47-143">Ad esempio, quando uno stato diverso da quello corrente contiene il <xref:System.Workflow.Activities.EventDrivenActivity> che contiene il <xref:System.Workflow.Activities.HandleExternalEventActivity> che è rappresentato dalla coda '{0}'.</span><span class="sxs-lookup"><span data-stu-id="85b47-143">For example, when some state other than the current state contains the <xref:System.Workflow.Activities.EventDrivenActivity> that contains the <xref:System.Workflow.Activities.HandleExternalEventActivity> that is represented by the queue '{0}'.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85b47-144">Non è garantito che i messaggi vengano ricevuti dall'istanza del flusso di lavoro nell'ordine in cui sono inviati.</span><span class="sxs-lookup"><span data-stu-id="85b47-144">Messages are not guaranteed to be received by the workflow instance in the order that they were sent.</span></span> <span data-ttu-id="85b47-145">Ad esempio, se la ricezione di un messaggio in una coda esistente (Coda A) fa sì che un flusso di lavoro crei un'altra coda (Coda B), che quindi è in ascolto per un altro messaggio inviato dopo il primo messaggio, è possibile che il secondo messaggio arrivi per primo e non venga ricevuto poiché la coda non è ancora stata creata.</span><span class="sxs-lookup"><span data-stu-id="85b47-145">For example, if receiving a message in an existing queue (Queue A) causes a workflow to create another queue (Queue B), which then listens for another message sent after the first message, it is possible that the second message will arrive first, and will not be received due to its queue not being created yet.</span></span> <span data-ttu-id="85b47-146">Per evitare questo problema, il secondo messaggio non deve essere inviato fino a quando la presenza della seconda coda viene verificata (mediante il metodo <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>).</span><span class="sxs-lookup"><span data-stu-id="85b47-146">To prevent this issue, the second message should not be sent until the presence of the second queue is verified (using <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b47-147">Nell'esempio di codice seguente viene illustrato come utilizzare <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="85b47-147">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="85b47-148">Quando si verifica l'evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> viene chiamato il metodo `OnWorkflowIdled` definito in questo esempio.</span><span class="sxs-lookup"><span data-stu-id="85b47-148">When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called.</span></span> <span data-ttu-id="85b47-149">Determina quale flusso di lavoro venga reso inattivo mediante la proprietà <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> e quindi ottiene una raccolta di elementi in coda per l'istanza del flusso di lavoro chiamando il metodo <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.</span><span class="sxs-lookup"><span data-stu-id="85b47-149">It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method.</span></span> <span data-ttu-id="85b47-150">Il codice scorre la raccolta per determinare quale attività è in attesa dell'evento che ha sospeso il flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="85b47-150">The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</span></span> <span data-ttu-id="85b47-151">Invia quindi un'eccezione alla coda del flusso di lavoro mediante il metodo <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> insieme al nome dell'elemento in coda dell'evento.</span><span class="sxs-lookup"><span data-stu-id="85b47-151">It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.</span></span>  
  
 <span data-ttu-id="85b47-152">Questo esempio di codice fa parte dell'esempio SDK Canceling a Workflow nel file Program.cs.</span><span class="sxs-lookup"><span data-stu-id="85b47-152">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="85b47-153">Per altre informazioni, vedere [annullamento di un flusso di lavoro](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="85b47-153">For more information, see [Canceling a Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85b47-154">
            <paramref name="queueName" /> è un riferimento null (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-154">
              <paramref name="queueName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85b47-155">Il motore di runtime del flusso di lavoro non è in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-155">The workflow runtime engine is not running.</span>
          </span>
          <span data-ttu-id="85b47-156">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-156">-or-</span>
          </span>
          <span data-ttu-id="85b47-157">La classe <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specificata da <paramref name="queueName" /> non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-157">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> does not exist.</span>
          </span>
          <span data-ttu-id="85b47-158">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-158">-or-</span>
          </span>
          <span data-ttu-id="85b47-159">La classe <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specificata da <paramref name="queueName" /> non è abilitata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-159">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> is not enabled.</span>
          </span>
        </exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)">
          <span data-ttu-id="85b47-160">Annullamento di un flusso di lavoro</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-160">Canceling a Workflow</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="EnqueueItemOnIdle">
      <MemberSignature Language="C#" Value="public void EnqueueItemOnIdle (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnqueueItemOnIdle(class System.IComparable queueName, object item, class System.Workflow.Runtime.IPendingWork pendingWork, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnqueueItemOnIdle (queueName As IComparable, item As Object, pendingWork As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnqueueItemOnIdle(IComparable ^ queueName, System::Object ^ item, System::Workflow::Runtime::IPendingWork ^ pendingWork, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.EnqueueItemOnIdle : IComparable * obj * System.Workflow.Runtime.IPendingWork * obj -&gt; unit" Usage="workflowInstance.EnqueueItemOnIdle (queueName, item, pendingWork, workItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="pendingWork" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queueName">
          <span data-ttu-id="85b47-161">Nome di <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-161">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="85b47-162">Oggetto da accodare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-162">The object to enqueue.</span>
          </span>
        </param>
        <param name="pendingWork">
          <span data-ttu-id="85b47-163">
            <see cref="T:System.Workflow.Runtime.IPendingWork" /> che consente al mittente di ricevere una notifica quando <c>item</c> viene recapitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-163">An <see cref="T:System.Workflow.Runtime.IPendingWork" /> that allows the sender to be notified when <c>item</c> is delivered.</span>
          </span>
        </param>
        <param name="workItem">
          <span data-ttu-id="85b47-164">Oggetto da passare ai metodi <see cref="T:System.Workflow.Runtime.IPendingWork" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-164">An object to be passed to the <see cref="T:System.Workflow.Runtime.IPendingWork" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85b47-165">Inserisce un messaggio in modo sincrono nella coda del flusso di lavoro quando il flusso di lavoro è inattivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-165">Posts a message to the specified workflow queue when the workflow is idle.</span>
          </span>
          <span data-ttu-id="85b47-166">
            <see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /> attende che il flusso di lavoro raggiunga un punto inattivo e lo inserisce in una coda dopo avere verificato che l'Utilità di pianificazione del flusso di lavoro sia inattiva (ovvero, nessuna operazione attiva è in esecuzione).</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-166">
              <see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /> waits until the workflow reaches an idle point and enqueues after verifying that the workflow scheduler is idle (that is, no active operation is being executed).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-167">Aspetta che l'istanza del flusso di lavoro diventi inattiva e quindi invia l'oggetto `item` alla classe <xref:System.Workflow.Runtime.WorkflowQueue> specificata.</span><span class="sxs-lookup"><span data-stu-id="85b47-167">Waits for the workflow instance to become idle and then sends the `item` to the specified <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="85b47-168">Se si chiama <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A> mentre l'istanza del flusso di lavoro è sospesa, il motore di runtime del flusso di lavoro genererà un'eccezione <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="85b47-168">If you call <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A> while the workflow instance is suspended, the workflow runtime engine will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="85b47-169">Se si desidera ricevere una notifica quando il messaggio viene recapitato, è possibile implementare <xref:System.Workflow.Runtime.IPendingWork> nel servizio e passare un `workItem` e un oggetto <xref:System.Workflow.Runtime.IPendingWork> a <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="85b47-169">If you want to be notified when the message is delivered, you can implement <xref:System.Workflow.Runtime.IPendingWork> in your service and pass a `workItem` and an <xref:System.Workflow.Runtime.IPendingWork> object to <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="85b47-170">Se non si desidera tale notifica, è possibile passare un riferimento null (`Nothing` in Visual Basic) per `pendingWork` e `workItem`.</span><span class="sxs-lookup"><span data-stu-id="85b47-170">If you do not want such notification, you can pass a null reference (`Nothing` in Visual Basic) for `pendingWork` and `workItem`.</span></span>  
  
 <span data-ttu-id="85b47-171">Quando si usa questo metodo con un lavoro macchina a stati, è possibile ricevere un'eccezione che contiene il messaggio "coda '{0}' non è abilitato."</span><span class="sxs-lookup"><span data-stu-id="85b47-171">When you are using this method with a state machine workflow, you might get an exception that contains the message "Queue '{0}' is not enabled."</span></span> <span data-ttu-id="85b47-172">Ciò accade quando lo stato corrente della macchina a stati non sa come gestire un evento specifico.</span><span class="sxs-lookup"><span data-stu-id="85b47-172">This occurs when the current state of the state machine does not know how to handle a specific event.</span></span> <span data-ttu-id="85b47-173">Ad esempio, quando uno stato diverso da quello corrente contiene il <xref:System.Workflow.Activities.EventDrivenActivity> che contiene il <xref:System.Workflow.Activities.HandleExternalEventActivity> che è rappresentato dalla coda '{0}'.</span><span class="sxs-lookup"><span data-stu-id="85b47-173">For example, when some state other than the current state contains the <xref:System.Workflow.Activities.EventDrivenActivity> that contains the <xref:System.Workflow.Activities.HandleExternalEventActivity> that is represented by the queue '{0}'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b47-174">Nell'esempio seguente viene illustrato l'invio di informazioni a un'istanza del flusso di lavoro utilizzando il metodo `EnqueueItemOnIdle`.</span><span class="sxs-lookup"><span data-stu-id="85b47-174">The following example demonstrates sending information to a workflow instance using the `EnqueueItemOnIdle` method.</span></span> <span data-ttu-id="85b47-175">Prima viene creato e avviato un oggetto WorkflowInstance; quindi viene creato un oggetto che implementa l'interfaccia <xref:System.Workflow.Runtime.IPendingWork>.</span><span class="sxs-lookup"><span data-stu-id="85b47-175">First, a WorkflowInstance object is created and started; next, an object that implements the <xref:System.Workflow.Runtime.IPendingWork> interface is created.</span></span> <span data-ttu-id="85b47-176">In seguito viene chiamato `EnqueueItemOnIdle`, passando valori stringa per il nome della coda, l'elemento accodato e l'elemento di lavoro da passare ai metodi dell'oggetto pendingWork.</span><span class="sxs-lookup"><span data-stu-id="85b47-176">`EnqueueItemOnIdle` is then called, passing in string values for the queue name, the enqueued item, and the work item to be passed to the methods of the pendingWork object.</span></span>  
  
 [!code-csharp[WF_Samples#12](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#12)]
 [!code-vb[WF_Samples#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85b47-177">
            <paramref name="queueName" /> è un riferimento null (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-177">
              <paramref name="queueName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85b47-178">Il motore di runtime del flusso di lavoro non è in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-178">The workflow runtime engine is not running.</span>
          </span>
          <span data-ttu-id="85b47-179">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-179">-or-</span>
          </span>
          <span data-ttu-id="85b47-180">L'istanza del flusso di lavoro è sospesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-180">The workflow instance is suspended.</span>
          </span>
          <span data-ttu-id="85b47-181">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-181">-or-</span>
          </span>
          <span data-ttu-id="85b47-182">La classe <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specificata da <paramref name="queueName" /> non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-182">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> does not exist.</span>
          </span>
          <span data-ttu-id="85b47-183">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-183">-or-</span>
          </span>
          <span data-ttu-id="85b47-184">La classe <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specificata da <paramref name="queueName" /> non è abilitata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-184">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> is not enabled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="workflowInstance.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="85b47-185">Oggetto da confrontare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-185">The object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85b47-186">Restituisce un valore che indica se l'oggetto specificato è uguale a <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-186">Returns a value that indicates whether the specified object is equal to the <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85b47-187">
            <see langword="true" /> se l'oggetto specificato è uguale a <see cref="T:System.Workflow.Runtime.WorkflowInstance" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-187">
              <see langword="true" /> if the specified object is equal to this <see cref="T:System.Workflow.Runtime.WorkflowInstance" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-188">L'oggetto deve essere un'istanza della classe <xref:System.Workflow.Runtime.WorkflowInstance> ed avere lo stesso <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> di questa classe <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="85b47-188">The object must be an instance of the <xref:System.Workflow.Runtime.WorkflowInstance> class and have the same <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> as this <xref:System.Workflow.Runtime.WorkflowInstance>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="workflowInstance.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85b47-189">Restituisce il codice hash per l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-189">Returns the hash code for this workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85b47-190">Codice hash per <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-190">The hash code for this <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-191"><xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A> restituisce un codice hash calcolato in base al valore di <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</span><span class="sxs-lookup"><span data-stu-id="85b47-191"><xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A> returns a hash code based on the value of <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowDefinition">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity GetWorkflowDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Activity GetWorkflowDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowDefinition () As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Activity ^ GetWorkflowDefinition();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowDefinition : unit -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowInstance.GetWorkflowDefinition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85b47-192">Recupera l'attività radice per questa istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-192">Retrieves the root activity for this workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85b47-193">Oggetto <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-193">An <see cref="T:System.Workflow.ComponentModel.Activity" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-194">È possibile utilizzare l'attività radice per spostarsi nella gerarchia di attività del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="85b47-194">You can use the root activity to navigate the activity hierarchy of the workflow.</span></span>  
  
 <span data-ttu-id="85b47-195">Questo metodo non è thread-safe e pertanto l'host deve sincronizzare le relative chiamate effettuate a questo metodo.</span><span class="sxs-lookup"><span data-stu-id="85b47-195">This method is not thread safe, so the host should synchronize its calls to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b47-196">Nell'esempio seguente viene illustrato il recupero della definizione del flusso di lavoro da un'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="85b47-196">The following example demonstrates retrieving the workflow definition from a workflow instance.</span></span>  <span data-ttu-id="85b47-197">Questo esempio di codice fa parte dell'esempio SDK Ordering State Machine nel file Mainform.cs.</span><span class="sxs-lookup"><span data-stu-id="85b47-197">This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</span></span>  <span data-ttu-id="85b47-198">Per altre informazioni, vedere la [ordinamento esempio di macchina a stati](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="85b47-198">For more information, see the [Ordering State Machine Sample](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[WF_Samples#86](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#86)]
 [!code-vb[WF_Samples#86](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#86)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowNextTimerExpiration">
      <MemberSignature Language="C#" Value="public DateTime GetWorkflowNextTimerExpiration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetWorkflowNextTimerExpiration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowNextTimerExpiration () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetWorkflowNextTimerExpiration();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowNextTimerExpiration : unit -&gt; DateTime" Usage="workflowInstance.GetWorkflowNextTimerExpiration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85b47-199">Restituisce il momento successivo in cui deve essere recapitato un messaggio del timer a questa classe <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-199">Returns the next point in time that this <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> is scheduled to be delivered a timer message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85b47-200">Valore Datetime che rappresenta la successiva ora <see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /> in cui a <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> verrà recapitato un messaggio del timer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-200">A DateTime value that represents the next <see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /> time this <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> will be delivered a timer message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="85b47-201">Nell'esempio seguente viene illustrato l'utilizzo del metodo <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A> per determinare se vengono accodati più messaggi del timer del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="85b47-201">The following example demonstrates using the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A> method to determine if more workflow timer messages are enqueued.</span></span> <span data-ttu-id="85b47-202">Questo esempio è tratto dall'esempio SDK WorkflowThreading nel file Program.cs.</span><span class="sxs-lookup"><span data-stu-id="85b47-202">This example is from the WorkflowThreading SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="85b47-203">Per altre informazioni, vedere [esempio Workflow Threading](http://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9).</span><span class="sxs-lookup"><span data-stu-id="85b47-203">For more information, see [Workflow Threading Sample](http://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9).</span></span>  
  
 [!code-csharp[WF_Samples#284](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#284)]
 [!code-vb[WF_Samples#284](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#284)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Workflow.Runtime.TimerEventSubscription" />
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowQueueData">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt; GetWorkflowQueueData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.Runtime.WorkflowQueueInfo&gt; GetWorkflowQueueData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowQueueData () As ReadOnlyCollection(Of WorkflowQueueInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::Runtime::WorkflowQueueInfo ^&gt; ^ GetWorkflowQueueData();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowQueueData : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt;" Usage="workflowInstance.GetWorkflowQueueData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85b47-204">Ottiene una raccolta di oggetti <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> che contiene gli elementi in sospeso e le attività sottoscritte per le code del flusso di lavoro associate a questa istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-204">Gets a collection of <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> objects that contains the pending items and subscribed activities for the workflow queues associated with this workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85b47-205">Oggetto <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> di oggetti <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-205">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-206"><xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> restituisce una raccolta di oggetti <xref:System.Workflow.Runtime.WorkflowQueueInfo>, ognuno dei quali contiene informazioni sullo stato di una delle code del flusso di lavoro associate a questa istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="85b47-206"><xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> returns a collection of <xref:System.Workflow.Runtime.WorkflowQueueInfo> objects, each of which contains information about the state of one of the workflow queues associated with this workflow instance.</span></span> <span data-ttu-id="85b47-207"><xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType> contiene gli elementi in sospeso per un oggetto <xref:System.Workflow.Runtime.WorkflowQueue> e <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> contiene un elenco delle attività sottoscritte per il recapito di elementi su un oggetto <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="85b47-207"><xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType> contains the pending items for a <xref:System.Workflow.Runtime.WorkflowQueue> and <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> contains a list of the activities that are subscribed for item delivery on a <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b47-208">Nell'esempio di codice seguente viene illustrato come utilizzare il metodo <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> per ottenere informazioni sullo stato di tutte le code del flusso di lavoro associate a un oggetto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="85b47-208">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method to obtain information about the state of all workflow queues associated with a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="85b47-209">Quando si verifica l'evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> viene chiamato il metodo `OnWorkflowIdled` definito in questo esempio.</span><span class="sxs-lookup"><span data-stu-id="85b47-209">When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called.</span></span> <span data-ttu-id="85b47-210">Determina quale flusso di lavoro venga reso inattivo mediante la proprietà <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> e quindi ottiene una raccolta di elementi in coda per l'istanza del flusso di lavoro chiamando il metodo <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.</span><span class="sxs-lookup"><span data-stu-id="85b47-210">It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method.</span></span> <span data-ttu-id="85b47-211">Il codice scorre la raccolta per determinare quale attività è in attesa dell'evento che ha sospeso il flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="85b47-211">The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</span></span> <span data-ttu-id="85b47-212">Invia quindi un'eccezione alla coda del flusso di lavoro mediante il metodo <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> insieme al nome dell'elemento in coda dell'evento.</span><span class="sxs-lookup"><span data-stu-id="85b47-212">It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.</span></span>  
  
 <span data-ttu-id="85b47-213">Questo esempio di codice fa parte dell'esempio SDK Canceling a Workflow nel file Program.cs.</span><span class="sxs-lookup"><span data-stu-id="85b47-213">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="85b47-214">Per altre informazioni, vedere [annullamento di un flusso di lavoro](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="85b47-214">For more information, see [Canceling a Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85b47-215">Il motore di runtime del flusso di lavoro non è in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-215">The workflow runtime engine is not running.</span>
          </span>
        </exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)">
          <span data-ttu-id="85b47-216">Annullamento di un flusso di lavoro</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-216">Canceling a Workflow</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public Guid InstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowInstance.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid InstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : Guid" Usage="System.Workflow.Runtime.WorkflowInstance.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85b47-217">Ottiene l'identificatore univoco per l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-217">Gets the unique identifier for the workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85b47-218">
            <see cref="T:System.Guid" /> di istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-218">The <see cref="T:System.Guid" /> of the workflow instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-219">Per fare riferimento all'istanza del flusso di lavoro, è possibile utilizzare <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</span><span class="sxs-lookup"><span data-stu-id="85b47-219">You can use <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> to reference the workflow instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b47-220">Nell'esempio di codice seguente viene illustrato come utilizzare la proprietà <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> per ottenere informazioni su un oggetto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="85b47-220">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property to obtain information about a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="85b47-221">Il primo frammento di codice crea una variabile <xref:System.Workflow.Runtime.WorkflowInstance> denominata `instanceId`.</span><span class="sxs-lookup"><span data-stu-id="85b47-221">The first code snippet creates a <xref:System.Workflow.Runtime.WorkflowInstance> variable named `instanceId`.</span></span>  
  
 [!code-csharp[WF_Samples#210](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#210)]
 [!code-vb[WF_Samples#210](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#210)]  
  
 <span data-ttu-id="85b47-222">Il secondo frammento utilizza la proprietà <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> come primo oggetto in una chiamata al costruttore `OrderEventArgs` quando viene chiamato il metodo `CallBackForApproval`.</span><span class="sxs-lookup"><span data-stu-id="85b47-222">The second snippet uses the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property as the first object in an `OrderEventArgs` constructor call when the `CallBackForApproval` method is called.</span></span>  
  
 <span data-ttu-id="85b47-223">Questo esempio di codice fa parte dell'esempio SDK Listen del file OrderServiceImple.cs.</span><span class="sxs-lookup"><span data-stu-id="85b47-223">This code example is part of the Listen SDK Sample from the OrderServiceImple.cs file.</span></span> <span data-ttu-id="85b47-224">Per altre informazioni, vedere [esempio di ascolto](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="85b47-224">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#211](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#211)]
 [!code-vb[WF_Samples#211](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#211)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)">
          <span data-ttu-id="85b47-225">Esempio di ascolto</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-225">Listen Sample</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberSignature Language="F#" Value="member this.Load : unit -&gt; unit" Usage="workflowInstance.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85b47-226">Carica un'istanza del flusso di lavoro precedentemente scaricata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-226">Loads a previously unloaded workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-227"><xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> è sincrono; se l'istanza del flusso di lavoro può essere caricata, <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> verrà restituito dopo che l'istanza del flusso di lavoro è stata caricata in memoria e pianificata dal motore di runtime del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="85b47-227"><xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is synchronous; if the workflow instance can be loaded, <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> will return after the workflow instance has been loaded into memory and scheduled by the workflow runtime engine.</span></span> <span data-ttu-id="85b47-228">Il runtime genera l'evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> dopo che il servizio di persistenza ha ripristinato l'istanza del flusso di lavoro in memoria, ma prima che il motore di runtime del flusso di lavoro pianifichi l'istanza.</span><span class="sxs-lookup"><span data-stu-id="85b47-228">The runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> event after the persistence service has restored the workflow instance in memory, but before the workflow runtime engine schedules the instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b47-229">Nell'esempio di codice riportato di seguito viene illustrato come caricare un oggetto <xref:System.Workflow.Runtime.WorkflowInstance> precedentemente scaricato.</span><span class="sxs-lookup"><span data-stu-id="85b47-229">The following example demonstrates how to load a previously unloaded <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#10](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#10)]
 [!code-vb[WF_Samples#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85b47-230">Il motore di runtime del flusso di lavoro non è in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-230">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReloadTrackingProfiles">
      <MemberSignature Language="C#" Value="public void ReloadTrackingProfiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReloadTrackingProfiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadTrackingProfiles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReloadTrackingProfiles();" />
      <MemberSignature Language="F#" Value="member this.ReloadTrackingProfiles : unit -&gt; unit" Usage="workflowInstance.ReloadTrackingProfiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85b47-231">Ricarica i profili di rilevamento per l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-231">Reload the tracking profiles for this workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-232">L'infrastruttura di rilevamento di runtime ricaricherà ogni <xref:System.Workflow.Runtime.Tracking.TrackingProfile> per questa istanza del flusso di lavoro associata ai canali di rilevamento.</span><span class="sxs-lookup"><span data-stu-id="85b47-232">The runtime tracking infrastructure will reload each <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for this workflow instance associated with its tracking channels.</span></span> <span data-ttu-id="85b47-233">Se non è già in un stato sospeso, il flusso di lavoro viene temporaneamente sospeso dall'infrastruttura di rilevamento di runtime mentre i profili di rilevamento vengono ricaricati.</span><span class="sxs-lookup"><span data-stu-id="85b47-233">If it is not already in a suspended state, the workflow is temporarily suspended by the runtime tracking infrastructure while the tracking profiles are reloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85b47-234">Il motore di runtime del flusso di lavoro non è in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-234">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="workflowInstance.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85b47-235">Riprende l'esecuzione di un'istanza del flusso di lavoro precedentemente sospesa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-235">Resumes execution of a previously suspended workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-236">L'host può chiamare <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A> per riprendere l'esecuzione di un'istanza del flusso di lavoro precedentemente sospesa.</span><span class="sxs-lookup"><span data-stu-id="85b47-236">The host can call <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A> to resume execution of a workflow instance that has been previously suspended.</span></span> <span data-ttu-id="85b47-237">Se l'istanza del flusso di lavoro non è nello stato sospeso, non viene eseguita alcune azione.</span><span class="sxs-lookup"><span data-stu-id="85b47-237">If the workflow instance is not in the suspended state, no action is taken.</span></span> <span data-ttu-id="85b47-238">Il runtime genera l'evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> poco prima della ripresa dell'esecuzione dell'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="85b47-238">The runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event just before execution of the workflow instance is resumed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b47-239">Nell'esempio seguente viene illustrata la chiamata a Resume su un'istanza del flusso di lavoro precedentemente sospesa.</span><span class="sxs-lookup"><span data-stu-id="85b47-239">The following example demonstrates calling Resume on a previously suspended workflow instance.</span></span>  <span data-ttu-id="85b47-240">Questo esempio è tratto dall'esempio SDK Suspend and Terminate.</span><span class="sxs-lookup"><span data-stu-id="85b47-240">This example is from the Suspend and Terminate SDK sample.</span></span>  <span data-ttu-id="85b47-241">Per altre informazioni, vedere [Suspend and Terminate esempio](http://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517).</span><span class="sxs-lookup"><span data-stu-id="85b47-241">For more information, see [Suspend and Terminate Sample](http://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517).</span></span>  
  
 [!code-csharp[WF_Samples#172](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#172)]
 [!code-vb[WF_Samples#172](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#172)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85b47-242">Il motore di runtime del flusso di lavoro non è in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-242">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="workflowInstance.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85b47-243">Avvia l'esecuzione dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-243">Starts the execution of the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-244"><xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> chiama <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> sull'attività radice di questa istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="85b47-244"><xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> calls <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> on the root activity of this workflow instance.</span></span> <span data-ttu-id="85b47-245">Se <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> rileva un'eccezione, termina l'istanza del flusso di lavoro chiamando <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> con la proprietà <xref:System.Exception.Message%2A> dell'eccezione passata come motivo della chiusura.</span><span class="sxs-lookup"><span data-stu-id="85b47-245">If <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> encounters an exception, it terminates the workflow instance by calling <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> with the <xref:System.Exception.Message%2A> property of the exception passed as the reason for the termination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b47-246">Nell'esempio di codice seguente viene illustrato come utilizzare il metodo <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> per avviare una classe <xref:System.Workflow.Runtime.WorkflowInstance> in un host del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="85b47-246">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method to start a <xref:System.Workflow.Runtime.WorkflowInstance> in a workflow host.</span></span> <span data-ttu-id="85b47-247">Il codice crea un'istanza di <xref:System.Workflow.Runtime.WorkflowRuntime>, aggiunge servizi al runtime e quindi dimostra la modalità consigliata per creare un oggetto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="85b47-247">The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="85b47-248">Crea un oggetto <xref:System.Type> e ne esegue il cast a uno degli oggetti del flusso di lavoro al quale l'host è associato.</span><span class="sxs-lookup"><span data-stu-id="85b47-248">It creates a <xref:System.Type> object and casts it to one of the workflow objects with which the host is associated.</span></span> <span data-ttu-id="85b47-249">Il codice inizializza quindi <xref:System.Workflow.Runtime.WorkflowInstance> chiamando il metodo <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> e passando il tipo precedentemente creato a tale metodo.</span><span class="sxs-lookup"><span data-stu-id="85b47-249">The code next initializes <xref:System.Workflow.Runtime.WorkflowInstance> by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it.</span></span> <span data-ttu-id="85b47-250">L'oggetto <xref:System.Workflow.Runtime.WorkflowInstance> viene avviato con la chiamata al metodo <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A>.</span><span class="sxs-lookup"><span data-stu-id="85b47-250">The <xref:System.Workflow.Runtime.WorkflowInstance> is started with the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method call.</span></span>  
  
 <span data-ttu-id="85b47-251">Questo esempio di codice fa parte dell'esempio SDK Canceling a Workflow nel file Program.cs.</span><span class="sxs-lookup"><span data-stu-id="85b47-251">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="85b47-252">Per altre informazioni, vedere [annullamento di un flusso di lavoro](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="85b47-252">For more information, see [Canceling a Workflow](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85b47-253">Il motore di runtime del flusso di lavoro non è in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-253">The workflow runtime engine is not running.</span>
          </span>
          <span data-ttu-id="85b47-254">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-254">-or-</span>
          </span>
          <span data-ttu-id="85b47-255">L'istanza del flusso di lavoro è già stata avviata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-255">The workflow instance has already been started.</span>
          </span>
        </exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)">
          <span data-ttu-id="85b47-256">Annullamento di un flusso di lavoro</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-256">Canceling a Workflow</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public void Suspend (string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Suspend(string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Suspend (error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Suspend(System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.Suspend : string -&gt; unit" Usage="workflowInstance.Suspend error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error">
          <span data-ttu-id="85b47-257">Descrizione del motivo della sospensione dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-257">A description of the reason for suspending the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85b47-258">Sospende l'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-258">Suspends the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-259">L'istanza del flusso di lavoro viene sospesa in modo sincrono.</span><span class="sxs-lookup"><span data-stu-id="85b47-259">The workflow instance is suspended in a synchronous manner.</span></span> <span data-ttu-id="85b47-260">Se l'istanza del flusso di lavoro è già sospesa, non viene eseguita alcuna azione; in caso contrario, il motore di runtime del flusso di lavoro sospende l'istanza del flusso di lavoro, genera l'evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> e passa `reason` in una classe <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="85b47-260">If the workflow instance is already suspended, no action is taken; otherwise, the workflow runtime engine suspends the workflow instance, raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> event and passes `reason` in a <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85b47-261"><xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> non scarica l'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="85b47-261"><xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> does not unload the workflow instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b47-262">Nell'esempio di codice seguente viene illustrata la chiamata a Suspend su un oggetto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="85b47-262">The following code example demonstrates calling Suspend on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#9](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#9)]
 [!code-vb[WF_Samples#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85b47-263">Il motore di runtime del flusso di lavoro non è in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-263">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.Terminate : string -&gt; unit" Usage="workflowInstance.Terminate error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error">
          <span data-ttu-id="85b47-264">Descrizione del motivo della chiusura dell'istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-264">A description of the reason for terminating the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85b47-265">Termina l'istanza del flusso di lavoro in modo sincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-265">Terminates the workflow instance in a synchronous manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-266">L'istanza del flusso di lavoro viene chiusa in modo sincrono.</span><span class="sxs-lookup"><span data-stu-id="85b47-266">The workflow instance is terminated in a synchronous manner.</span></span> <span data-ttu-id="85b47-267">L'host chiama il metodo <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> per terminare l'istanza del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="85b47-267">The host calls <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> to terminate the workflow instance.</span></span> <span data-ttu-id="85b47-268">Il motore di runtime del flusso di lavoro cancella l'istanza del flusso di lavoro in memoria e informa il servizio di persistenza che l'istanza è stata cancellata dalla memoria.</span><span class="sxs-lookup"><span data-stu-id="85b47-268">The workflow runtime engine clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</span></span> <span data-ttu-id="85b47-269">Per <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, questo vuole dire che ogni informazione sullo stato dell'istanza del flusso di lavoro viene eliminata dal database al momento della chiusura.</span><span class="sxs-lookup"><span data-stu-id="85b47-269">For the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, this means that all state information for that workflow instance is deleted from the database upon termination.</span></span> <span data-ttu-id="85b47-270">Non sarà possibile ricaricare l'istanza del flusso di lavoro da un punto di persistenza precedentemente archiviato.</span><span class="sxs-lookup"><span data-stu-id="85b47-270">You will not be able to reload the workflow instance from a previously stored persistence point.</span></span>  
  
 <span data-ttu-id="85b47-271">Dopo che l'istanza del flusso di lavoro in memoria è stata cancellata e il servizio di persistenza è stato informato della chiusura, il metodo `Terminate` genera l'evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> e passa `reason` nella proprietà <xref:System.Exception.Message%2A> di una classe <xref:System.Workflow.ComponentModel.WorkflowTerminatedException> contenuta in <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="85b47-271">After the in-memory workflow instance is cleared and the persistence service is informed of the termination, the `Terminate` method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event and passes `reason` in the <xref:System.Exception.Message%2A> property of a <xref:System.Workflow.ComponentModel.WorkflowTerminatedException> contained in the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.</span></span>  
  
 <span data-ttu-id="85b47-272">`Terminate` è diverso dal metodo <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> poiché mentre Terminate cancella l'istanza del flusso di lavoro in memoria e informa il servizio di persistenza della chiusura, `Abort` cancella semplicemente l'istanza del flusso di lavoro in memoria, che può quindi essere riavviata dall'ultimo punto di persistenza.</span><span class="sxs-lookup"><span data-stu-id="85b47-272">`Terminate` is different from <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> in that while Terminate clears the in-memory workflow instance and informs the persistence service of the termination, `Abort` simply clears the in-memory workflow instance, which can then be restarted from the last persistence point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b47-273">Nell'esempio di codice seguente viene illustrata la chiamata a Terminate su un oggetto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="85b47-273">The following code example demonstrates calling Terminate on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#8](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#8)]
 [!code-vb[WF_Samples#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85b47-274">Il motore di runtime del flusso di lavoro non è in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-274">The workflow runtime engine is not running.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryUnload">
      <MemberSignature Language="C#" Value="public bool TryUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.TryUnload" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUnload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryUnload();" />
      <MemberSignature Language="F#" Value="member this.TryUnload : unit -&gt; bool" Usage="workflowInstance.TryUnload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85b47-275">Scarica l'istanza del flusso di lavoro dalla memoria all'archivio di persistenza quando l'istanza viene sospesa o è inattiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-275">Unloads the workflow instance from memory to the persistence store when the instance is suspended or idle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85b47-276">
            <see langword="true" /> se l'istanza del flusso di lavoro è stata scaricata; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-276">
              <see langword="true" /> if the workflow instance was unloaded; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-277">Se l'istanza del flusso di lavoro è inattiva o sospesa, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> utilizza il servizio di persistenza per rimuovere l'istanza del flusso di lavoro dalla memoria e renderla persistente in un archivio dati.</span><span class="sxs-lookup"><span data-stu-id="85b47-277">If the workflow instance is idle or suspended, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> uses the persistence service to remove the workflow instance from memory and persist it to a data store.</span></span> <span data-ttu-id="85b47-278">Se nessun servizio di persistenza è registrato con <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> genera un'eccezione <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="85b47-278">If there is no persistence service registered with the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="85b47-279">Se l'istanza del flusso di lavoro è stata resa persistente, il runtime genera l'evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> e restituisce `true`.</span><span class="sxs-lookup"><span data-stu-id="85b47-279">If the workflow instance is successfully persisted, the runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event, and returns `true`.</span></span> <span data-ttu-id="85b47-280"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> restituisce `false` se l'istanza del flusso di lavoro è già stata scaricata, è stata terminata, è stata interrotta o è già stata completata.</span><span class="sxs-lookup"><span data-stu-id="85b47-280"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> returns `false` if the workflow instance has already been unloaded, has been terminated, has been aborted, or has already completed.</span></span>  
  
 <span data-ttu-id="85b47-281">L'host può utilizzare il metodo <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> per recuperare risorse di sistema da un flusso di lavoro inattivo.</span><span class="sxs-lookup"><span data-stu-id="85b47-281">The host can use <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> to reclaim system resources from an idle workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b47-282">Nell'esempio seguente è dimostrato l'utilizzo del metodo TryUnload per scaricare un flusso di lavoro quando l'evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> viene generato.</span><span class="sxs-lookup"><span data-stu-id="85b47-282">The following example demonstrates using the TryUnload method to unload a workflow when the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event fires.</span></span> <span data-ttu-id="85b47-283">Questo esempio è tratto dall'esempio SDK Using Persistence Services nel file Program.cs.</span><span class="sxs-lookup"><span data-stu-id="85b47-283">This example is from the Using Persistence Services SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="85b47-284">Per altre informazioni, vedere [Using Persistence Services Sample](http://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6).</span><span class="sxs-lookup"><span data-stu-id="85b47-284">For more information, see [Using Persistence Services Sample](http://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6).</span></span>  
  
 [!code-csharp[WF_Samples#280](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#280)]
 [!code-vb[WF_Samples#280](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#280)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85b47-285">Nessun servizio di persistenza è registrato nel motore di runtime del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-285">There is no persistence service registered with the workflow runtime engine.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; unit" Usage="workflowInstance.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85b47-286">Scarica l'istanza del flusso di lavoro dalla memoria all'archivio di persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-286">Unloads the workflow instance from memory to the persistence store.</span>
          </span>
          <span data-ttu-id="85b47-287">Questa chiamata rimane bloccata fino al termine del lavoro attualmente pianificato o alla fine di un ambito della transazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-287">This call blocks until after the currently scheduled work is finished, or the end of a transaction scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b47-288">Il metodo <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> è sincrono; ovvero viene restituito dopo il completamento delle azioni eseguite.</span><span class="sxs-lookup"><span data-stu-id="85b47-288"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> is synchronous; that is, it returns after completing any action that it performs.</span></span> <span data-ttu-id="85b47-289">Se l'istanza del flusso di lavoro non è inattiva, il runtime attende fino a quando l'istanza può essere interrotta.</span><span class="sxs-lookup"><span data-stu-id="85b47-289">If the workflow instance is not idle, the runtime waits until the instance can be interrupted.</span></span> <span data-ttu-id="85b47-290">Un'istanza può essere interrotta solo dopo che l'elemento di lavoro attualmente pianificato viene completato. In genere ciò avviene quando l'attività attualmente in esecuzione viene restituita dal metodo <xref:System.Workflow.ComponentModel.Activity.Execute%2A>.</span><span class="sxs-lookup"><span data-stu-id="85b47-290">An instance can only be interrupted after the currently scheduled work item completes; this is typically when the currently running Activity returns from its <xref:System.Workflow.ComponentModel.Activity.Execute%2A> method.</span></span> <span data-ttu-id="85b47-291">Tuttavia, se l'istanza sta eseguendo un oggetto <xref:System.Workflow.ComponentModel.TransactionScopeActivity>, l'esecuzione dell'ambito della transazione deve essere completata prima che l'istanza possa essere interrotta.</span><span class="sxs-lookup"><span data-stu-id="85b47-291">However, if the instance is executing a <xref:System.Workflow.ComponentModel.TransactionScopeActivity>, the transaction scope must complete execution before the instance can be interrupted.</span></span> <span data-ttu-id="85b47-292">Unload utilizza quindi il servizio di persistenza per rimuovere l'istanza del flusso di lavoro dalla memoria e lo rende persistente in un archivio dati.</span><span class="sxs-lookup"><span data-stu-id="85b47-292">Unload then uses the persistence service to remove the workflow instance from memory and persists it to a data store.</span></span> <span data-ttu-id="85b47-293">Se nessun servizio di persistenza è registrato con <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> genera un'eccezione <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="85b47-293">If there is no persistence service registered with the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="85b47-294">Se l'istanza del flusso di lavoro è stata resa persistente, il runtime genera l'evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>.</span><span class="sxs-lookup"><span data-stu-id="85b47-294">If the workflow instance is successfully persisted, the runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
 <span data-ttu-id="85b47-295">L'host può utilizzare il metodo <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> per recuperare risorse di sistema da un flusso di lavoro inattivo.</span><span class="sxs-lookup"><span data-stu-id="85b47-295">The host can use <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> to reclaim system resources from an idle workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b47-296">Nell'esempio seguente viene illustrato come chiamare <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> su un oggetto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="85b47-296">The following example demonstrates calling <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#11](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#11)]
 [!code-vb[WF_Samples#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="85b47-297">Nessun servizio di persistenza è registrato nel motore di runtime del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-297">There is no persistence service registered with the workflow runtime engine.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WorkflowRuntime">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowRuntime WorkflowRuntime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowRuntime WorkflowRuntime" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkflowRuntime As WorkflowRuntime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::WorkflowRuntime ^ WorkflowRuntime { System::Workflow::Runtime::WorkflowRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowRuntime : System.Workflow.Runtime.WorkflowRuntime" Usage="System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85b47-298">Ottiene la classe <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> per questa istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-298">Gets the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> for this workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85b47-299">Una classe <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> che rappresenta l'ambiente di esecuzione nel quale è in esecuzione questa istanza del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b47-299">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> that represents the execution environment in which this workflow instance is running.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="85b47-300">Nell'esempio riportato di seguito viene illustrato l'accesso e l'esecuzione di una classe <xref:System.Workflow.Runtime.WorkflowRuntime> di un oggetto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="85b47-300">The following example demonstrates accessing the executing <xref:System.Workflow.Runtime.WorkflowRuntime> of a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#7](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#7)]
 [!code-vb[WF_Samples#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>