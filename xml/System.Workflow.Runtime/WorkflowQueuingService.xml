<Type Name="WorkflowQueuingService" FullName="System.Workflow.Runtime.WorkflowQueuingService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d8ee032c57585a1033f16adde9d175d3a45e1af" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37734322" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowQueuingService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowQueuingService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowQueuingService" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowQueuingService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowQueuingService" />
  <TypeSignature Language="F#" Value="type WorkflowQueuingService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce i servizi per la gestione degli oggetti <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.Runtime.WorkflowQueuingService> fornisce i metodi che è possibile utilizzare per gestire le code del flusso di lavoro associate a un'istanza del flusso di lavoro.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato un metodo, denominato `CreateQueue`, che inizializza un oggetto <xref:System.Workflow.Runtime.WorkflowQueuingService> chiamando il metodo <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType>. Il codice quindi utilizza il metodo <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> per determinare se esiste una classe <xref:System.Workflow.Runtime.WorkflowQueue> con un nome specificato. Se non esiste, il codice chiama il metodo <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>, altrimenti chiama il metodo <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A>.  
  
 Questo esempio di codice fa parte dell'esempio SDK File Watcher Activity nel file FileSystemEvent.cs. Per altre informazioni, vedere [attività Watcher del File System](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateWorkflowQueue">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueue CreateWorkflowQueue (IComparable queueName, bool transactional);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowQueue CreateWorkflowQueue(class System.IComparable queueName, bool transactional) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue(System.IComparable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflowQueue (queueName As IComparable, transactional As Boolean) As WorkflowQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowQueue ^ CreateWorkflowQueue(IComparable ^ queueName, bool transactional);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflowQueue : IComparable * bool -&gt; System.Workflow.Runtime.WorkflowQueue" Usage="workflowQueuingService.CreateWorkflowQueue (queueName, transactional)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="transactional" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="queueName">Nome della coda.</param>
        <param name="transactional">Un valore che specifica se l'oggetto <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> è visibile all'esterno dell'ambito della transazione corrente.</param>
        <summary>Crea un oggetto <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> utilizzando il nome e l'ambito transazionale specificati.</summary>
        <returns>Un oggetto <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viene creato un oggetto <xref:System.Workflow.Runtime.WorkflowQueue> con il valore `queueName` specificato. Se l'ambito transazionale è `true`, l'oggetto <xref:System.Workflow.Runtime.WorkflowQueue> è visibile solo all'interno della transazione corrente.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato un metodo, denominato `CreateQueue`, che inizializza un oggetto <xref:System.Workflow.Runtime.WorkflowQueuingService> chiamando il metodo <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType>. Il codice quindi utilizza il metodo <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> per determinare se esiste una classe <xref:System.Workflow.Runtime.WorkflowQueue> con un nome specificato. Se non esiste, il codice chiama il metodo <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>, altrimenti chiama il metodo <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A>.  
  
 Questo esempio di codice fa parte dell'esempio SDK File Watcher Activity nel file FileSystemEvent.cs. Per altre informazioni, vedere [attività Watcher del File System](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> è un riferimento null (<see langword="Nothing" /> in Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Un oggetto <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> con il nome specificato da <paramref name="queueName" /> esiste già.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteWorkflowQueue">
      <MemberSignature Language="C#" Value="public void DeleteWorkflowQueue (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteWorkflowQueue(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteWorkflowQueue (queueName As IComparable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteWorkflowQueue(IComparable ^ queueName);" />
      <MemberSignature Language="F#" Value="member this.DeleteWorkflowQueue : IComparable -&gt; unit" Usage="workflowQueuingService.DeleteWorkflowQueue queueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">Nome dell'oggetto <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> da eliminare.</param>
        <summary>Elimina l'oggetto <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio di codice seguente è illustrato un metodo che scrive una stringa nella console e crea un'istanza di <xref:System.Workflow.Runtime.WorkflowQueuingService> chiamando il metodo <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType>. Infine, il codice chiama il metodo <xref:System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue%2A> per eliminare la coda associata a una proprietà `QueueName` sul flusso di lavoro corrente.  
  
 Questo esempio di codice fa parte dell'esempio SDK File Watcher Activity nel file FileSystemEvent.cs. Per altre informazioni, vedere [attività Watcher del File System](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  
  
 [!code-csharp[WF_Samples#224](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#224)]
 [!code-vb[WF_Samples#224](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#224)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> è un riferimento null (<see langword="Nothing" /> in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Exists(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.Exists(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Function Exists (queueName As IComparable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Exists(IComparable ^ queueName);" />
      <MemberSignature Language="F#" Value="member this.Exists : IComparable -&gt; bool" Usage="workflowQueuingService.Exists queueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">Nome di <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</param>
        <summary>Verifica l'esistenza dell'oggetto <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specificato.</summary>
        <returns>
          <see langword="true" /> se <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> esiste; in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio di codice seguente viene illustrato un metodo, denominato `CreateQueue`, che inizializza un oggetto <xref:System.Workflow.Runtime.WorkflowQueuingService> chiamando il metodo <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType>. Il codice quindi utilizza il metodo <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> per determinare se esiste una classe <xref:System.Workflow.Runtime.WorkflowQueue> con un nome specificato. Se non esiste, il codice chiama il metodo <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>, altrimenti chiama il metodo <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A>.  
  
 Questo esempio di codice fa parte dell'esempio SDK File Watcher Activity nel file FileSystemEvent.cs. Per altre informazioni, vedere [attività Watcher del File System](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> è un riferimento null (<see langword="Nothing" /> in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowQueue">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueue GetWorkflowQueue (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowQueue GetWorkflowQueue(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowQueue (queueName As IComparable) As WorkflowQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowQueue ^ GetWorkflowQueue(IComparable ^ queueName);" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowQueue : IComparable -&gt; System.Workflow.Runtime.WorkflowQueue" Usage="workflowQueuingService.GetWorkflowQueue queueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">Nome dell'oggetto <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> da recuperare.</param>
        <summary>Recupera l'oggetto <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specificato.</summary>
        <returns>Un oggetto <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio di codice seguente viene illustrato un metodo, denominato `CreateQueue`, che inizializza un oggetto <xref:System.Workflow.Runtime.WorkflowQueuingService> chiamando il metodo <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType>. Il codice quindi utilizza il metodo <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> per determinare se esiste una classe <xref:System.Workflow.Runtime.WorkflowQueue> con un nome specificato. Se non esiste, il codice chiama il metodo <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>, altrimenti chiama il metodo <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A>.  
  
 Questo esempio di codice fa parte dell'esempio SDK File Watcher Activity nel file FileSystemEvent.cs. Per altre informazioni, vedere [attività Watcher del File System](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> è un riferimento null (<see langword="Nothing" /> in Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specificato non è stato trovato.</exception>
      </Docs>
    </Member>
    <Member MemberName="PendingMessagesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty PendingMessagesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty PendingMessagesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PendingMessagesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ PendingMessagesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PendingMessagesProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene gli elementi non utilizzati nelle code del flusso di lavoro associate a questo <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un'istanza del flusso di lavoro completa o termina tutti gli elementi non utilizzati nelle code del flusso di lavoro associate a questo <xref:System.Workflow.Runtime.WorkflowQueuingService>, tali elementi vengono trasferiti a <xref:System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>