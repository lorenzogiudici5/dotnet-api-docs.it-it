<Type Name="ISimplexSessionRouter" FullName="System.ServiceModel.Routing.ISimplexSessionRouter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="539d4adee1846784defc5e6d19dd0e4b01ecdde7" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39810761" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISimplexSessionRouter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISimplexSessionRouter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.ISimplexSessionRouter" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISimplexSessionRouter" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISimplexSessionRouter" />
  <TypeSignature Language="F#" Value="type ISimplexSessionRouter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://schemas.microsoft.com/netfx/2009/05/routing", SessionMode=System.ServiceModel.SessionMode.Required)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definisce l'interfaccia richiesta per elaborare i messaggi dai canali della sessione simplex.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo contratto ha le seguenti impostazioni:  
  
-   Le sessioni sono richieste.  
  
-   Messaggi unidirezionali.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginProcessMessage">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginProcessMessage(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginProcessMessage(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginProcessMessage : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="iSimplexSessionRouter.BeginProcessMessage (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ServiceModel.OperationContract(Action="*", AsyncPattern=true, IsOneWay=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">Messaggio da elaborare.</param>
        <param name="callback">Delegato di callback asincrono richiamato quando l'elaborazione del messaggio è stata completata.</param>
        <param name="state">Oggetto di stato definito dall'utente e passato alla routine di callback.</param>
        <summary>Avvia l'elaborazione asincrona del messaggio.</summary>
        <returns>Risultato asincrono che può essere utilizzato per eseguire il polling, attendere i risultati o entrambe le cose; questo valore è necessario anche per richiamare <see cref="M:System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(System.IAsyncResult)" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndProcessMessage">
      <MemberSignature Language="C#" Value="public void EndProcessMessage (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndProcessMessage(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndProcessMessage (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndProcessMessage(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndProcessMessage : IAsyncResult -&gt; unit" Usage="iSimplexSessionRouter.EndProcessMessage result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Risultato asincrono restituito dalla chiamata all'oggetto <see cref="M:System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termina l'esecuzione asincrona dell'elaborazione del messaggio.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>