<Type Name="RoutingService" FullName="System.ServiceModel.Routing.RoutingService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2d3f1b7c4779ded46e8f047f8707f2975729ebe1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30519205" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RoutingService : IDisposable, System.ServiceModel.Routing.IDuplexSessionRouter, System.ServiceModel.Routing.IRequestReplyRouter, System.ServiceModel.Routing.ISimplexDatagramRouter, System.ServiceModel.Routing.ISimplexSessionRouter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RoutingService extends System.Object implements class System.IDisposable, class System.ServiceModel.Routing.IDuplexSessionRouter, class System.ServiceModel.Routing.IRequestReplyRouter, class System.ServiceModel.Routing.ISimplexDatagramRouter, class System.ServiceModel.Routing.ISimplexSessionRouter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.RoutingService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RoutingService&#xA;Implements IDisposable, IDuplexSessionRouter, IRequestReplyRouter, ISimplexDatagramRouter, ISimplexSessionRouter" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoutingService sealed : IDisposable, System::ServiceModel::Routing::IDuplexSessionRouter, System::ServiceModel::Routing::IRequestReplyRouter, System::ServiceModel::Routing::ISimplexDatagramRouter, System::ServiceModel::Routing::ISimplexSessionRouter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Routing.IDuplexSessionRouter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Routing.IRequestReplyRouter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Routing.ISimplexDatagramRouter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Routing.ISimplexSessionRouter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Allowed)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(AddressFilterMode=System.ServiceModel.AddressFilterMode.Any, InstanceContextMode=System.ServiceModel.InstanceContextMode.PerSession, UseSynchronizationContext=false, ValidateMustUnderstand=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3a2a2-101">Definisce il servizio di routing responsabile per indirizzare messaggi tra gli endpoint basati sui criteri di filtro.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3a2a2-101">Defines the routing service, which is responsible for routing messages between endpoints based on filter criteria.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a2a2-102">Esegue attività definite dall'applicazione, come rilasciare o reimpostare risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-102">Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage">
      <MemberSignature Language="C#" Value="IAsyncResult IDuplexSessionRouter.BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.IAsyncResult System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value=" virtual IAsyncResult ^ System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state) = System::ServiceModel::Routing::IDuplexSessionRouter::BeginProcessMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationBehavior(Impersonation=System.ServiceModel.ImpersonationOption.Allowed)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3a2a2-103">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> da elaborare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-103">The <see cref="T:System.ServiceModel.Channels.Message" /> to be processed.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3a2a2-104">Delegato <see cref="T:System.AsyncCallback" /> richiamato quando l'elaborazione del messaggio è stata completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-104">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the message processing has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3a2a2-105">Oggetto di stato definito dall'utente e passato alla routine di callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-105">A user-defined state object that is passed to the callback procedure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a2a2-106">Avvia l'elaborazione asincrona del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-106">Begins the asynchronous processing of the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a2a2-107">Oggetto <see cref="T:System.IAsyncResult" /> che può essere utilizzato per eseguire il polling, attendere i risultati o entrambe le cose; questo valore è necessario anche per richiamare <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-107">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a2a2-108">Per ulteriori informazioni sull'utilizzo del contratto IDuplexSessionRouter, vedere <xref:System.ServiceModel.Routing.IDuplexSessionRouter>.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-108">For more information on using the IDuplexSessionRouter contract, see <xref:System.ServiceModel.Routing.IDuplexSessionRouter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage">
      <MemberSignature Language="C#" Value="void IDuplexSessionRouter.EndProcessMessage (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Sub EndProcessMessage (result As IAsyncResult) Implements IDuplexSessionRouter.EndProcessMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult ^ result) = System::ServiceModel::Routing::IDuplexSessionRouter::EndProcessMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="3a2a2-109">Oggetto <see cref="T:System.IAsyncResult" /> restituito dalla chiamata all'oggetto <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-109">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a2a2-110">Completa l'esecuzione asincrona dell'elaborazione del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-110">Completes the asynchronous execution of message processing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a2a2-111">Per ulteriori informazioni sull'utilizzo del contratto IDuplexSessionRouter, vedere <xref:System.ServiceModel.Routing.IDuplexSessionRouter>.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-111">For more information on using the IDuplexSessionRouter contract, see <xref:System.ServiceModel.Routing.IDuplexSessionRouter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest">
      <MemberSignature Language="C#" Value="IAsyncResult IRequestReplyRouter.BeginProcessRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.IAsyncResult System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value=" virtual IAsyncResult ^ System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state) = System::ServiceModel::Routing::IRequestReplyRouter::BeginProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationBehavior(Impersonation=System.ServiceModel.ImpersonationOption.Allowed)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3a2a2-112">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> da elaborare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-112">The <see cref="T:System.ServiceModel.Channels.Message" /> to be processed.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3a2a2-113">Delegato <see cref="T:System.AsyncCallback" /> richiamato quando l'elaborazione del messaggio è stata completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-113">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the message processing has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3a2a2-114">Oggetto di stato definito dall'utente e passato alla routine di callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-114">A user-defined state object that is passed to the callback procedure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a2a2-115">Avvia l'elaborazione asincrona del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-115">Initiates the asynchronous processing of the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a2a2-116">Oggetto <see cref="T:System.IAsyncResult" /> che può essere utilizzato per eseguire il polling, attendere i risultati o entrambe le cose; questo valore è necessario anche per richiamare <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-116">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a2a2-117">Per ulteriori informazioni sull'utilizzo del contratto IDuplexSessionRouter, vedere <xref:System.ServiceModel.Routing.IRequestReplyRouter>.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-117">For more information on using the IRequestReplyRouter contract, see <xref:System.ServiceModel.Routing.IRequestReplyRouter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest">
      <MemberSignature Language="C#" Value="System.ServiceModel.Channels.Message IRequestReplyRouter.EndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ServiceModel.Channels.Message System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Function EndProcessRequest (result As IAsyncResult) As Message Implements IRequestReplyRouter.EndProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ServiceModel::Channels::Message ^ System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult ^ result) = System::ServiceModel::Routing::IRequestReplyRouter::EndProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="3a2a2-118">Oggetto <see cref="T:System.IAsyncResult" /> restituito dalla chiamata all'oggetto <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-118">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a2a2-119">Termina l'esecuzione asincrona dell'elaborazione del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-119">Finishes asynchronous execution of message processing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a2a2-120">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> contenente la risposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-120">A <see cref="T:System.ServiceModel.Channels.Message" /> that contains the reply.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a2a2-121">Per ulteriori informazioni sull'utilizzo del contratto IDuplexSessionRouter, vedere <xref:System.ServiceModel.Routing.IRequestReplyRouter>.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-121">For more information on using the IRequestReplyRouter contract, see <xref:System.ServiceModel.Routing.IRequestReplyRouter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage">
      <MemberSignature Language="C#" Value="IAsyncResult ISimplexDatagramRouter.BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.IAsyncResult System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value=" virtual IAsyncResult ^ System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state) = System::ServiceModel::Routing::ISimplexDatagramRouter::BeginProcessMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationBehavior(Impersonation=System.ServiceModel.ImpersonationOption.Allowed)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3a2a2-122">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> da elaborare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-122">The <see cref="T:System.ServiceModel.Channels.Message" /> to be processed.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3a2a2-123">Delegato <see cref="T:System.AsyncCallback" /> richiamato quando l'elaborazione del messaggio è stata completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-123">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the message processing has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3a2a2-124">Oggetto di stato definito dall'utente e passato alla routine di callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-124">A user-defined state object that is passed to the callback procedure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a2a2-125">Avvia l'elaborazione asincrona del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-125">Initiates the asynchronous processing of the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a2a2-126">Oggetto <see cref="T:System.IAsyncResult" /> che può essere utilizzato per eseguire il polling, attendere i risultati o entrambe le cose; questo valore è necessario anche per richiamare <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-126">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a2a2-127">Per ulteriori informazioni sull'utilizzo del contratto ISimplexDatagramRouter, vedere <xref:System.ServiceModel.Routing.ISimplexDatagramRouter>.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-127">For more information on using the ISimplexDatagramRouter contract, see <xref:System.ServiceModel.Routing.ISimplexDatagramRouter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage">
      <MemberSignature Language="C#" Value="void ISimplexDatagramRouter.EndProcessMessage (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Sub EndProcessMessage (result As IAsyncResult) Implements ISimplexDatagramRouter.EndProcessMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult ^ result) = System::ServiceModel::Routing::ISimplexDatagramRouter::EndProcessMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="3a2a2-128">Oggetto <see cref="T:System.IAsyncResult" /> restituito dalla chiamata all'oggetto <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-128">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a2a2-129">Termina l'esecuzione asincrona dell'elaborazione del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-129">Finishes asynchronous execution of message processing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a2a2-130">Per ulteriori informazioni sull'utilizzo del contratto ISimplexDatagramRouter, vedere <xref:System.ServiceModel.Routing.ISimplexDatagramRouter>.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-130">For more information on using the ISimplexDatagramRouter contract, see <xref:System.ServiceModel.Routing.ISimplexDatagramRouter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage">
      <MemberSignature Language="C#" Value="IAsyncResult ISimplexSessionRouter.BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.IAsyncResult System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value=" virtual IAsyncResult ^ System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state) = System::ServiceModel::Routing::ISimplexSessionRouter::BeginProcessMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationBehavior(Impersonation=System.ServiceModel.ImpersonationOption.Allowed)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3a2a2-131">Oggetto <see cref="T:System.ServiceModel.Channels.Message" /> da elaborare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-131">The <see cref="T:System.ServiceModel.Channels.Message" /> to be processed.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3a2a2-132">Delegato <see cref="T:System.AsyncCallback" /> richiamato quando l'elaborazione del messaggio è stata completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-132">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the message processing has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3a2a2-133">Oggetto di stato definito dall'utente e passato alla routine di callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-133">A user-defined state object that is passed to the callback procedure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a2a2-134">Avvia l'elaborazione asincrona del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-134">Initiates the asynchronous processing of the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a2a2-135">Oggetto <see cref="T:System.IAsyncResult" /> che può essere utilizzato per eseguire il polling, attendere i risultati o entrambe le cose; questo valore è necessario anche per richiamare <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-135">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a2a2-136">Per ulteriori informazioni sull'utilizzo del contratto ISimplexSessionRouter, vedere <xref:System.ServiceModel.Routing.ISimplexSessionRouter>.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-136">For more information on using the ISimplexSessionRouter contract, see <xref:System.ServiceModel.Routing.ISimplexSessionRouter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage">
      <MemberSignature Language="C#" Value="void ISimplexSessionRouter.EndProcessMessage (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Sub EndProcessMessage (result As IAsyncResult) Implements ISimplexSessionRouter.EndProcessMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult ^ result) = System::ServiceModel::Routing::ISimplexSessionRouter::EndProcessMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="3a2a2-137">Oggetto <see cref="T:System.IAsyncResult" /> restituito dalla chiamata all'oggetto <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-137">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a2a2-138">Termina l'esecuzione asincrona dell'elaborazione del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a2a2-138">Finishes asynchronous execution of message processing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a2a2-139">Per ulteriori informazioni sull'utilizzo del contratto ISimplexSessionRouter, vedere <xref:System.ServiceModel.Routing.ISimplexSessionRouter>.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-139">For more information on using the ISimplexSessionRouter contract, see <xref:System.ServiceModel.Routing.ISimplexSessionRouter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>