<Type Name="IMemberCreationService" FullName="System.Workflow.ComponentModel.Design.IMemberCreationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="485e0b8c2e8804017072be9e26f23e745b312a66" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37737669" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMemberCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMemberCreationService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.IMemberCreationService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMemberCreationService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMemberCreationService" />
  <TypeSignature Language="F#" Value="type IMemberCreationService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6ddc9-101">Definisce metodi che consentono di creare, aggiornare e rimuovere dinamicamente elementi di codice per un tipo in fase di progettazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6ddc9-101">Defines methods to dynamically create, update and remove code elements for a type at design time.</span>
      </span>
      <span data-ttu-id="6ddc9-102">Vengono inoltre forniti metodi che consentono di visualizzare il codice in fase di progettazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6ddc9-102">Methods are also provided that allow you to display code at design time.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public void CreateEvent (string className, string eventName, Type eventType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateEvent(string className, string eventName, class System.Type eventType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateEvent(System.String,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateEvent (className As String, eventName As String, eventType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateEvent(System::String ^ className, System::String ^ eventName, Type ^ eventType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty);" />
      <MemberSignature Language="F#" Value="abstract member CreateEvent : string * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool -&gt; unit" Usage="iMemberCreationService.CreateEvent (className, eventName, eventType, attributes, emitDependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="6ddc9-103">Stringa contenente il nome della classe alla quale aggiungere l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-103">A string that contains the class name to add the event to.</span>
          </span>
        </param>
        <param name="eventName">
          <span data-ttu-id="6ddc9-104">Stringa che definisce il nome dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-104">A string that defines the name of the event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="6ddc9-105">
            <see cref="T:System.Type" /> assegnato all'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-105">The <see cref="T:System.Type" /> assigned to the event.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="6ddc9-106">Matrice <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> contenente informazioni su tutti gli attributi da assegnare all'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-106">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the event.</span>
          </span>
        </param>
        <param name="emitDependencyProperty">
          <span data-ttu-id="6ddc9-107">
            <see langword="true" /> per creare qualsiasi propriet√† di dipendenza associata all'evento; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-107">
              <see langword="true" /> to emit any dependency properties associated with the event; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ddc9-108">Crea un evento nella classe indicata utilizzando il nome di evento, il tipo di evento e gli attributi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-108">Creates an event on the specified class by using the specified event name, event type and attributes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="public void CreateField (string className, string fieldName, Type fieldType, Type[] genericParameterTypes, System.CodeDom.MemberAttributes attributes, System.CodeDom.CodeSnippetExpression initializationExpression, bool overwriteExisting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateField(string className, string fieldName, class System.Type fieldType, class System.Type[] genericParameterTypes, valuetype System.CodeDom.MemberAttributes attributes, class System.CodeDom.CodeSnippetExpression initializationExpression, bool overwriteExisting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateField(System.String,System.String,System.Type,System.Type[],System.CodeDom.MemberAttributes,System.CodeDom.CodeSnippetExpression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateField (className As String, fieldName As String, fieldType As Type, genericParameterTypes As Type(), attributes As MemberAttributes, initializationExpression As CodeSnippetExpression, overwriteExisting As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateField(System::String ^ className, System::String ^ fieldName, Type ^ fieldType, cli::array &lt;Type ^&gt; ^ genericParameterTypes, System::CodeDom::MemberAttributes attributes, System::CodeDom::CodeSnippetExpression ^ initializationExpression, bool overwriteExisting);" />
      <MemberSignature Language="F#" Value="abstract member CreateField : string * string * Type * Type[] * System.CodeDom.MemberAttributes * System.CodeDom.CodeSnippetExpression * bool -&gt; unit" Usage="iMemberCreationService.CreateField (className, fieldName, fieldType, genericParameterTypes, attributes, initializationExpression, overwriteExisting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="fieldName" Type="System.String" />
        <Parameter Name="fieldType" Type="System.Type" />
        <Parameter Name="genericParameterTypes" Type="System.Type[]" />
        <Parameter Name="attributes" Type="System.CodeDom.MemberAttributes" />
        <Parameter Name="initializationExpression" Type="System.CodeDom.CodeSnippetExpression" />
        <Parameter Name="overwriteExisting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="6ddc9-109">Stringa che definisce il nome della classe in cui aggiungere il campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-109">A string that defines the name of the class to add the field.</span>
          </span>
        </param>
        <param name="fieldName">
          <span data-ttu-id="6ddc9-110">Stringa che definisce il nome del campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-110">A string that defines the name of the field.</span>
          </span>
        </param>
        <param name="fieldType">
          <span data-ttu-id="6ddc9-111">
            <see cref="T:System.Type" /> del nuovo campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-111">The <see cref="T:System.Type" /> of the new field.</span>
          </span>
        </param>
        <param name="genericParameterTypes">
          <span data-ttu-id="6ddc9-112">Matrice <see cref="T:System.Type" /> di qualsiasi parametro associato al campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-112">A <see cref="T:System.Type" /> array of any parameters associated with the field.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="6ddc9-113">Enumerazione <see cref="T:System.CodeDom.MemberAttributes" /> che definisce l'identificatore dell'attributo Member per il campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-113">A <see cref="T:System.CodeDom.MemberAttributes" /> that defines the member attribute identifier for the field.</span>
          </span>
        </param>
        <param name="initializationExpression">
          <span data-ttu-id="6ddc9-114">Classe <see cref="T:System.CodeDom.CodeSnippetExpression" /> contenente l'espressione letterale del campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-114">A <see cref="T:System.CodeDom.CodeSnippetExpression" /> that contains the literal expression of the field.</span>
          </span>
        </param>
        <param name="overwriteExisting">
          <span data-ttu-id="6ddc9-115">
            <see langword="true" /> per eliminare qualsiasi campo esistente in <c>className</c> quando si crea il nuovo campo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-115">
              <see langword="true" /> to delete any existing fields on <c>className</c> when creating the new field; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ddc9-116">Crea un campo nella classe indicata utilizzando il nome di campo, il tipo di campo, i tipi di parametro, gli attributi e l'espressione di inizializzazione letterale specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-116">Creates a field on the specified class by using the specified field name, field type, parameter types, attributes and literal initialization expression.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public void CreateProperty (string className, string propertyName, Type propertyType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty, bool isAttached, Type ownerType, bool isReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateProperty(string className, string propertyName, class System.Type propertyType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty, bool isAttached, class System.Type ownerType, bool isReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateProperty(System.String,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean,System.Boolean,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateProperty (className As String, propertyName As String, propertyType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean, isMetaProperty As Boolean, isAttached As Boolean, ownerType As Type, isReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateProperty(System::String ^ className, System::String ^ propertyName, Type ^ propertyType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty, bool isMetaProperty, bool isAttached, Type ^ ownerType, bool isReadOnly);" />
      <MemberSignature Language="F#" Value="abstract member CreateProperty : string * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool * bool * bool * Type * bool -&gt; unit" Usage="iMemberCreationService.CreateProperty (className, propertyName, propertyType, attributes, emitDependencyProperty, isMetaProperty, isAttached, ownerType, isReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
        <Parameter Name="isMetaProperty" Type="System.Boolean" />
        <Parameter Name="isAttached" Type="System.Boolean" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="isReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="6ddc9-117">Stringa che definisce il nome della classe in cui aggiungere il campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-117">A string that defines the name of the class to add the field.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="6ddc9-118">Stringa che definisce il nome del campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-118">A string that defines the name of the field.</span>
          </span>
        </param>
        <param name="propertyType">
          <span data-ttu-id="6ddc9-119">
            <see cref="T:System.Type" /> della nuova propriet√†.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-119">The <see cref="T:System.Type" /> of the new property.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="6ddc9-120">Matrice <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> contenente informazioni su tutti gli attributi da assegnare alla propriet√†.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-120">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the property.</span>
          </span>
        </param>
        <param name="emitDependencyProperty">
          <span data-ttu-id="6ddc9-121">
            <see langword="true" /> per creare qualsiasi propriet√† di dipendenza associata alla propriet√†; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-121">
              <see langword="true" /> to emit any dependency properties associated with the property; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isMetaProperty">
          <span data-ttu-id="6ddc9-122">
            <see langword="true" /> per creare la propriet√† come metapropriet√†; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-122">
              <see langword="true" /> to create the property as a meta property; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isAttached">
          <span data-ttu-id="6ddc9-123">
            <see langword="true" /> per indicare che la propriet√† <see cref="P:System.Workflow.ComponentModel.DependencyProperty.IsAttached" /> della propriet√† di dipendenza creata √® impostata su <see langword="true" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-123">
              <see langword="true" /> to indicate that the emitted dependency property has its <see cref="P:System.Workflow.ComponentModel.DependencyProperty.IsAttached" /> property set to <see langword="true" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="ownerType">
          <span data-ttu-id="6ddc9-124">
            <see cref="T:System.Type" /> che dichiara la propriet√† di dipendenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-124">The <see cref="T:System.Type" /> that is declaring the dependency property.</span>
          </span>
        </param>
        <param name="isReadOnly">
          <span data-ttu-id="6ddc9-125">
            <see langword="true" /> per creare la propriet√† come propriet√† di sola lettura; <see langword="false" /> per creare la propriet√† come propriet√† di lettura e scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-125">
              <see langword="true" /> to create the property as a read-only property; <see langword="false" /> to create the property as a read-write property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ddc9-126">Crea una propriet√† nella classe indicata utilizzando il nome di propriet√†, il tipo di propriet√† e gli attributi specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-126">Creates a property on the specified class by using the specified property name, property type and attributes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEvent">
      <MemberSignature Language="C#" Value="public void RemoveEvent (string className, string eventName, Type eventType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEvent(string className, string eventName, class System.Type eventType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.RemoveEvent(System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEvent (className As String, eventName As String, eventType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEvent(System::String ^ className, System::String ^ eventName, Type ^ eventType);" />
      <MemberSignature Language="F#" Value="abstract member RemoveEvent : string * string * Type -&gt; unit" Usage="iMemberCreationService.RemoveEvent (className, eventName, eventType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="6ddc9-127">Stringa contenente il nome della classe dalla quale rimuovere l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-127">A string that contains the name of the class from which to remove the event.</span>
          </span>
        </param>
        <param name="eventName">
          <span data-ttu-id="6ddc9-128">Stringa contenente il nome dell'evento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-128">A string that contains the name of the event to remove.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="6ddc9-129">
            <see cref="T:System.Type" /> associato all'evento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-129">The <see cref="T:System.Type" /> associated with the event to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ddc9-130">Rimuove l'evento specificato dalla classe indicata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-130">Removes the specified event from the specified class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public void RemoveProperty (string className, string propertyName, Type propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveProperty(string className, string propertyName, class System.Type propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.RemoveProperty(System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveProperty (className As String, propertyName As String, propertyType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveProperty(System::String ^ className, System::String ^ propertyName, Type ^ propertyType);" />
      <MemberSignature Language="F#" Value="abstract member RemoveProperty : string * string * Type -&gt; unit" Usage="iMemberCreationService.RemoveProperty (className, propertyName, propertyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="6ddc9-131">Stringa contenente il nome della classe dalla quale rimuovere la propriet√†.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-131">A string that contains the name of the class from which to remove the property.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="6ddc9-132">Stringa contenente il nome della propriet√† da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-132">A string that contains the name of the property to remove.</span>
          </span>
        </param>
        <param name="propertyType">
          <span data-ttu-id="6ddc9-133">
            <see cref="T:System.Type" /> della propriet√† da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-133">The <see cref="T:System.Type" /> of the property to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ddc9-134">Rimuove la propriet√† specificata dalla classe indicata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-134">Removes the specified property from the specified class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowCode">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6ddc9-135">Visualizza il codice del nuovo membro in un'area di progettazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-135">Displays code for the new member on a workflow design surface.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public void ShowCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.ShowCode" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowCode ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowCode();" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : unit -&gt; unit" Usage="iMemberCreationService.ShowCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ddc9-136">Visualizza il codice del nuovo membro in un'area di progettazione del flusso di lavoro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-136">Displays code for the new member on a workflow design surface.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public void ShowCode (System.Workflow.ComponentModel.Activity activity, string methodName, Type delegateType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowCode(class System.Workflow.ComponentModel.Activity activity, string methodName, class System.Type delegateType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.ShowCode(System.Workflow.ComponentModel.Activity,System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowCode(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ methodName, Type ^ delegateType);" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : System.Workflow.ComponentModel.Activity * string * Type -&gt; unit" Usage="iMemberCreationService.ShowCode (activity, methodName, delegateType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="delegateType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="6ddc9-137">Oggetto <see cref="T:System.Workflow.ComponentModel.Activity" /> associato al codice da visualizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-137">The <see cref="T:System.Workflow.ComponentModel.Activity" /> associated with the code to display.</span>
          </span>
        </param>
        <param name="methodName">
          <span data-ttu-id="6ddc9-138">Nome del metodo da visualizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-138">The name of the method to display.</span>
          </span>
        </param>
        <param name="delegateType">
          <span data-ttu-id="6ddc9-139">
            <see cref="T:System.Type" /> del delegato associato al metodo da visualizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-139">The <see cref="T:System.Type" /> of the delegate associated with the method to display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ddc9-140">Visualizza il codice del nuovo membro in un'area di progettazione del flusso di lavoro utilizzando la classe <see cref="T:System.Workflow.ComponentModel.Activity" />, il metodo e il tipo delegato specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-140">Displays code for the new member on a workflow design surface by using the specified <see cref="T:System.Workflow.ComponentModel.Activity" />, the specified method and the specified delegate type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBaseType">
      <MemberSignature Language="C#" Value="public void UpdateBaseType (string className, Type baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateBaseType(string className, class System.Type baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateBaseType(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateBaseType (className As String, baseType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateBaseType(System::String ^ className, Type ^ baseType);" />
      <MemberSignature Language="F#" Value="abstract member UpdateBaseType : string * Type -&gt; unit" Usage="iMemberCreationService.UpdateBaseType (className, baseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="baseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="6ddc9-141">Stringa contenente il nome della classe da aggiornare con un nuovo tipo di base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-141">A string that contains the name of the class to update with a new base type.</span>
          </span>
        </param>
        <param name="baseType">
          <span data-ttu-id="6ddc9-142">
            <see cref="T:System.Type" /> da utilizzare come nuovo tipo di base per la classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-142">The <see cref="T:System.Type" /> to be the new base type for the class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ddc9-143">Aggiorna il tipo di base da associare alla classe specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-143">Updates the base type to associate with the specified class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateEvent">
      <MemberSignature Language="C#" Value="public void UpdateEvent (string className, string oldEventName, Type oldEventType, string newEventName, Type newEventType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateEvent(string className, string oldEventName, class System.Type oldEventType, string newEventName, class System.Type newEventType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateEvent(System.String,System.String,System.Type,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateEvent (className As String, oldEventName As String, oldEventType As Type, newEventName As String, newEventType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean, isMetaProperty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateEvent(System::String ^ className, System::String ^ oldEventName, Type ^ oldEventType, System::String ^ newEventName, Type ^ newEventType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="F#" Value="abstract member UpdateEvent : string * string * Type * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool * bool -&gt; unit" Usage="iMemberCreationService.UpdateEvent (className, oldEventName, oldEventType, newEventName, newEventType, attributes, emitDependencyProperty, isMetaProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="oldEventName" Type="System.String" />
        <Parameter Name="oldEventType" Type="System.Type" />
        <Parameter Name="newEventName" Type="System.String" />
        <Parameter Name="newEventType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
        <Parameter Name="isMetaProperty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="6ddc9-144">Stringa contenente il nome della classe che contiene l'evento da aggiornare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-144">A string that contains the name of the class that contains the event to update.</span>
          </span>
        </param>
        <param name="oldEventName">
          <span data-ttu-id="6ddc9-145">Stringa contenente il nome dell'evento esistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-145">A string that contains the name of the existing event.</span>
          </span>
        </param>
        <param name="oldEventType">
          <span data-ttu-id="6ddc9-146">
            <see cref="T:System.Type" /> associato all'evento esistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-146">The <see cref="T:System.Type" /> associated with the existing event.</span>
          </span>
        </param>
        <param name="newEventName">
          <span data-ttu-id="6ddc9-147">Stringa contenente il nuovo nome dell'evento aggiornato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-147">A string that contains the new name of the updated event.</span>
          </span>
        </param>
        <param name="newEventType">
          <span data-ttu-id="6ddc9-148">
            <see cref="T:System.Type" /> da associare all'evento aggiornato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-148">The <see cref="T:System.Type" /> to associate with the updated event.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="6ddc9-149">Matrice <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> contenente informazioni su tutti gli attributi da assegnare all'evento aggiornato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-149">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the updated event.</span>
          </span>
        </param>
        <param name="emitDependencyProperty">
          <span data-ttu-id="6ddc9-150">
            <see langword="true" /> per aggiornare l'evento in modo che crei una propriet√† di dipendenza; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-150">
              <see langword="true" /> to update the event to emit a dependency property; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isMetaProperty">
          <span data-ttu-id="6ddc9-151">
            <see langword="true" /> per impostare l'evento come metapropriet√†; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-151">
              <see langword="true" /> to set the event as a meta property; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ddc9-152">Imposta un nome e un tipo nuovi su un evento esistente nella classe specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-152">Sets a new name and type to an existing event on the specified class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateProperty">
      <MemberSignature Language="C#" Value="public void UpdateProperty (string className, string oldPropertyName, Type oldPropertyType, string newPropertyName, Type newPropertyType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateProperty(string className, string oldPropertyName, class System.Type oldPropertyType, string newPropertyName, class System.Type newPropertyType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateProperty(System.String,System.String,System.Type,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateProperty (className As String, oldPropertyName As String, oldPropertyType As Type, newPropertyName As String, newPropertyType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean, isMetaProperty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateProperty(System::String ^ className, System::String ^ oldPropertyName, Type ^ oldPropertyType, System::String ^ newPropertyName, Type ^ newPropertyType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="F#" Value="abstract member UpdateProperty : string * string * Type * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool * bool -&gt; unit" Usage="iMemberCreationService.UpdateProperty (className, oldPropertyName, oldPropertyType, newPropertyName, newPropertyType, attributes, emitDependencyProperty, isMetaProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="oldPropertyName" Type="System.String" />
        <Parameter Name="oldPropertyType" Type="System.Type" />
        <Parameter Name="newPropertyName" Type="System.String" />
        <Parameter Name="newPropertyType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
        <Parameter Name="isMetaProperty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="6ddc9-153">Stringa contenente il nome della classe in cui risiede la propriet√† da aggiornare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-153">A string that contains the name of the class on which the property to update resides.</span>
          </span>
        </param>
        <param name="oldPropertyName">
          <span data-ttu-id="6ddc9-154">Stringa contenente il nome esistente della propriet√†.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-154">A string that contains the existing name of the property.</span>
          </span>
        </param>
        <param name="oldPropertyType">
          <span data-ttu-id="6ddc9-155">
            <see cref="T:System.Type" /> associato alla propriet√† esistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-155">The <see cref="T:System.Type" /> associated with the existing property.</span>
          </span>
        </param>
        <param name="newPropertyName">
          <span data-ttu-id="6ddc9-156">Stringa contenente il nuovo nome della propriet√†.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-156">A string that contains the new name of the property.</span>
          </span>
        </param>
        <param name="newPropertyType">
          <span data-ttu-id="6ddc9-157">
            <see cref="T:System.Type" /> da associare alla versione aggiornata della propriet√†.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-157">The <see cref="T:System.Type" /> to associate with the updated version of the property.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="6ddc9-158">Matrice <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> contenente informazioni su tutti gli attributi da assegnare alla propriet√† aggiornata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-158">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the updated property.</span>
          </span>
        </param>
        <param name="emitDependencyProperty">
          <span data-ttu-id="6ddc9-159">
            <see langword="true" /> per aggiornare la propriet√† in modo che crei una propriet√† di dipendenza; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-159">
              <see langword="true" /> to update the property emit a dependency property; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isMetaProperty">
          <span data-ttu-id="6ddc9-160">
            <see langword="true" /> per impostare la propriet√† come metapropriet√†; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-160">
              <see langword="true" /> to set the property as a meta property; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ddc9-161">Imposta un nome e un tipo nuovi su una propriet√† nella classe specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-161">Sets a new name and type to a property on the specified class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTypeName">
      <MemberSignature Language="C#" Value="public void UpdateTypeName (string oldClassName, string newClassName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateTypeName(string oldClassName, string newClassName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateTypeName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateTypeName (oldClassName As String, newClassName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateTypeName(System::String ^ oldClassName, System::String ^ newClassName);" />
      <MemberSignature Language="F#" Value="abstract member UpdateTypeName : string * string -&gt; unit" Usage="iMemberCreationService.UpdateTypeName (oldClassName, newClassName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldClassName" Type="System.String" />
        <Parameter Name="newClassName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldClassName">
          <span data-ttu-id="6ddc9-162">Stringa contenente il nome esistente della classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-162">A string that contains the existing name of the class.</span>
          </span>
        </param>
        <param name="newClassName">
          <span data-ttu-id="6ddc9-163">Stringa contenente il nuovo nome da assegnare alla classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-163">A string that contains the new name to assign to the class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ddc9-164">Aggiorna il nome della classe specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ddc9-164">Updates the name of the specified class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>