<Type Name="ITypeFilterProvider" FullName="System.Workflow.ComponentModel.Design.ITypeFilterProvider">
  <TypeSignature Language="C#" Value="public interface ITypeFilterProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeFilterProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeFilterProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeFilterProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="64dea-101">Fornisce i membri utilizzati dalle classi per filtrare i tipi visualizzati nelle finestre di dialogo del browser visualizzate dall'utilità di progettazione del flusso di lavoro.</span><span class="sxs-lookup"><span data-stu-id="64dea-101">Provides members that classes use to filter types that are displayed in class browser dialog boxes that are displayed by the workflow designer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanFilterType">
      <MemberSignature Language="C#" Value="public bool CanFilterType (Type type, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanFilterType(class System.Type type, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanFilterType(Type ^ type, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="64dea-102"><see cref="T:System.Type" /> di cui verificare il filtro.</span><span class="sxs-lookup"><span data-stu-id="64dea-102">The <see cref="T:System.Type" /> to check for filtering.</span></span></param>
        <param name="throwOnError">
          <span data-ttu-id="64dea-103"><see langword="true" /> per generare un'eccezione quando viene elaborato <see cref="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)" />; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="64dea-103"><see langword="true" /> to throw an exception when the <see cref="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)" /> is processed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="64dea-104">Restituisce un valore che indica se è possibile filtrare il tipo specificato.</span><span class="sxs-lookup"><span data-stu-id="64dea-104">Returns a value that indicates whether the specified type can be filtered.</span></span></summary>
        <returns>
          <span data-ttu-id="64dea-105"><see langword="true" /> se il tipo specificato può essere filtrato; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="64dea-105"><see langword="true" /> if the specified type can be filtered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterDescription">
      <MemberSignature Language="C#" Value="public string FilterDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterDescription" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterDescription { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="64dea-106">Ottiene la descrizione per il filtro da visualizzare nella finestra di dialogo del browser di classi.</span><span class="sxs-lookup"><span data-stu-id="64dea-106">Gets the description for the filter to be displayed on the class browser dialog box.</span></span></summary>
        <value><span data-ttu-id="64dea-107">Valore stringa che contiene la descrizione del filtro.</span><span class="sxs-lookup"><span data-stu-id="64dea-107">A string value that contains the description of the filter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>