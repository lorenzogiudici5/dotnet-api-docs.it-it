<Type Name="PublishLicense" FullName="System.Security.RightsManagement.PublishLicense">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed80a727610000eb6e91e4b54487d4b2fc65f0e2" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48621744" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PublishLicense" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PublishLicense extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.PublishLicense" />
  <TypeSignature Language="VB.NET" Value="Public Class PublishLicense" />
  <TypeSignature Language="C++ CLI" Value="public ref class PublishLicense" />
  <TypeSignature Language="F#" Value="type PublishLicense = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta una licenza di pubblicazione protetta da Rights Management.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.PublishLicense> Definisce i dati di sicurezza relativi diritti, gli utenti e altre informazioni relative alla sicurezza.  La licenza definisce come un utente specifico in un computer specifico può utilizzare contenuto specificato rights Management.  
  
 Inizia il processo di pubblicazione dall'autore del documento, che definisce le informazioni sui diritti in un <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  Successivamente, l'autore crea un oggetto firmato <xref:System.Security.RightsManagement.PublishLicense> chiamando il <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> metodo il <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  Forma serializzata dell'oggetto firmato <xref:System.Security.RightsManagement.PublishLicense> può quindi essere fornito agli utenti finali che può usare per acquisire una <xref:System.Security.RightsManagement.UseLicense> chiamando il <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> metodo il <xref:System.Security.RightsManagement.PublishLicense>.  L'oggetto restituito <xref:System.Security.RightsManagement.UseLicense> consente quindi l'applicazione client di esercitare i diritti che sono state concesse all'utente.  
  
 Come con gli altri <xref:System.Security.RightsManagement> i tipi, <xref:System.Security.RightsManagement.PublishLicense> è disponibile solo nelle applicazioni con attendibilità totale.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come inizializzare un <xref:System.Security.RightsManagement.PublishLicense> utilizzando il <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> (metodo).  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PublishLicense (string signedPublishLicense);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string signedPublishLicense) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signedPublishLicense As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PublishLicense(System::String ^ signedPublishLicense);" />
      <MemberSignature Language="F#" Value="new System.Security.RightsManagement.PublishLicense : string -&gt; System.Security.RightsManagement.PublishLicense" Usage="new System.Security.RightsManagement.PublishLicense signedPublishLicense" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signedPublishLicense" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="signedPublishLicense">Oggetto licenza di pubblicazione firmato e serializzato.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.PublishLicense" /> da un oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" /> specifico, serializzato e firmato.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="signedPublishLicense" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">La licenza non è valida.</exception>
        <altmember cref="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)" />
      </Docs>
    </Member>
    <Member MemberName="AcquireUseLicense">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UseLicense AcquireUseLicense (System.Security.RightsManagement.SecureEnvironment secureEnvironment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UseLicense AcquireUseLicense(class System.Security.RightsManagement.SecureEnvironment secureEnvironment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UseLicense ^ AcquireUseLicense(System::Security::RightsManagement::SecureEnvironment ^ secureEnvironment);" />
      <MemberSignature Language="F#" Value="member this.AcquireUseLicense : System.Security.RightsManagement.SecureEnvironment -&gt; System.Security.RightsManagement.UseLicense" Usage="publishLicense.AcquireUseLicense secureEnvironment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UseLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secureEnvironment" Type="System.Security.RightsManagement.SecureEnvironment" />
      </Parameters>
      <Docs>
        <param name="secureEnvironment">Ambiente protetto per l'attivazione e l'associazione di licenze.</param>
        <summary>Tenta di acquisire un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> per un utente o un gruppo di utenti in un oggetto <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> specificato.</summary>
        <returns>
          <see cref="T:System.Security.RightsManagement.UseLicense" /> per un utente o un gruppo di utenti nell'oggetto <paramref name="secureEnvironment" />specificato.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="secureEnvironment" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">L'autenticazione non è riuscita.</exception>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      </Docs>
    </Member>
    <Member MemberName="AcquireUseLicenseNoUI">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UseLicense AcquireUseLicenseNoUI (System.Security.RightsManagement.SecureEnvironment secureEnvironment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UseLicense AcquireUseLicenseNoUI(class System.Security.RightsManagement.SecureEnvironment secureEnvironment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UseLicense ^ AcquireUseLicenseNoUI(System::Security::RightsManagement::SecureEnvironment ^ secureEnvironment);" />
      <MemberSignature Language="F#" Value="member this.AcquireUseLicenseNoUI : System.Security.RightsManagement.SecureEnvironment -&gt; System.Security.RightsManagement.UseLicense" Usage="publishLicense.AcquireUseLicenseNoUI secureEnvironment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UseLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secureEnvironment" Type="System.Security.RightsManagement.SecureEnvironment" />
      </Parameters>
      <Docs>
        <param name="secureEnvironment">Ambiente protetto per l'attivazione e l'associazione di licenze.</param>
        <summary>Tenta di acquisire un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" /> per un utente o un gruppo di utenti in un oggetto <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> specificato.</summary>
        <returns>
          <see cref="T:System.Security.RightsManagement.UseLicense" /> per un utente o un gruppo di utenti nell'oggetto <paramref name="secureEnvironment" />specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> metodo elimina la finestra di dialogo di autenticazione di rete di Windows. Se la richiesta di licenza è negata perché l'utente non dispone dell'autorizzazione, <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> impedisce la visualizzazione nella finestra di dialogo di autenticazione di rete. Utilizzare acquisizione invisibile all'utente durante il tentativo di ottenere le licenze in un'attività in background o in una non di interfaccia utente che potrebbero essere visualizzati poco chiaro le finestre di dialogo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="secureEnvironment" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">L'autenticazione non è riuscita.</exception>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      </Docs>
    </Member>
    <Member MemberName="ContentId">
      <MemberSignature Language="C#" Value="public Guid ContentId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ContentId" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.ContentId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ContentId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentId : Guid" Usage="System.Security.RightsManagement.PublishLicense.ContentId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'identificatore di contenuto creato dall'autore.</summary>
        <value>Identificatore di contenuto creato dall'autore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I server di pubblicazione creare una <xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A> per identificare il contenuto protetto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptUnsignedPublishLicense">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UnsignedPublishLicense DecryptUnsignedPublishLicense (System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UnsignedPublishLicense DecryptUnsignedPublishLicense(class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UnsignedPublishLicense ^ DecryptUnsignedPublishLicense(System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="member this.DecryptUnsignedPublishLicense : System.Security.RightsManagement.CryptoProvider -&gt; System.Security.RightsManagement.UnsignedPublishLicense" Usage="publishLicense.DecryptUnsignedPublishLicense cryptoProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UnsignedPublishLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="cryptoProvider">Servizio Rights Management da utilizzare per decrittografare la licenza.</param>
        <summary>Restituisce una versione <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> decrittografata dell'oggetto <see cref="T:System.Security.RightsManagement.PublishLicense" />firmato.</summary>
        <returns>Versione decrittografata non firmata della licenza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense%2A> metodo consente al proprietario della licenza e gli utenti che sono state concesse <xref:System.Security.RightsManagement.ContentRight.ViewRightsData> per estrarre le informazioni originale che è stato crittografato quando i <xref:System.Security.RightsManagement.PublishLicense> è stato creato.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cryptoProvider" /> è <see langword="null" />.</exception>
        <altmember cref="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)" />
      </Docs>
    </Member>
    <Member MemberName="ReferralInfoName">
      <MemberSignature Language="C#" Value="public string ReferralInfoName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReferralInfoName" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferralInfoName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReferralInfoName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferralInfoName : string" Usage="System.Security.RightsManagement.PublishLicense.ReferralInfoName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome di contatto del creatore o autore del contenuto.</summary>
        <value>Nome di contatto del creatore o autore del contenuto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La stringa restituita dal <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoName%2A> proprietà non vengono crittografata e sono accessibili anche quando l'utente non ha ancora un <xref:System.Security.RightsManagement.UseLicense>.  La stringa restituita permette agli utenti di contattare il server di pubblicazione per richiedere un <xref:System.Security.RightsManagement.UseLicense>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri" />
      </Docs>
    </Member>
    <Member MemberName="ReferralInfoUri">
      <MemberSignature Language="C#" Value="public Uri ReferralInfoUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ReferralInfoUri" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferralInfoUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ReferralInfoUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferralInfoUri : Uri" Usage="System.Security.RightsManagement.PublishLicense.ReferralInfoUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] di contatto del creatore o autore del contenuto.</summary>
        <value>[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] di contatto del creatore o autore del contenuto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La stringa restituita dal <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoUri%2A> proprietà non vengono crittografata e sono accessibili anche quando l'utente non ha ancora un <xref:System.Security.RightsManagement.UseLicense>.  La stringa restituita permette agli utenti di contattare il server di pubblicazione per richiedere un <xref:System.Security.RightsManagement.UseLicense>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="publishLicense.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce la stringa [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] serializzata usata per creare questa licenza.</summary>
        <returns>Stringa [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] serializzata usata per creare questa licenza.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLicenseAcquisitionUrl">
      <MemberSignature Language="C#" Value="public Uri UseLicenseAcquisitionUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UseLicenseAcquisitionUrl" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseLicenseAcquisitionUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UseLicenseAcquisitionUrl { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UseLicenseAcquisitionUrl : Uri" Usage="System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] da utilizzare per l'acquisizione di un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
        <value>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] da utilizzare per l'acquisizione di un oggetto <see cref="T:System.Security.RightsManagement.UseLicense" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl%2A> proprietà viene utilizzata per il <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> metodo quando un utente acquisisce un <xref:System.Security.RightsManagement.UseLicense>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
  </Members>
</Type>