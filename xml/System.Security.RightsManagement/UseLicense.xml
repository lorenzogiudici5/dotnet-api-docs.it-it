<Type Name="UseLicense" FullName="System.Security.RightsManagement.UseLicense">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="803db9a829116ebfa9f031814373e17787b4eb6d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30498645" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UseLicense" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UseLicense extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.UseLicense" />
  <TypeSignature Language="VB.NET" Value="Public Class UseLicense" />
  <TypeSignature Language="C++ CLI" Value="public ref class UseLicense" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta una licenza che consente l'accesso a contenuto protetto.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Come con gli altri <xref:System.Security.RightsManagement> tipi, <xref:System.Security.RightsManagement.UseLicense> è disponibile solo in applicazioni con attendibilità totale.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare questa classe per inizializzare un <xref:System.Security.RightsManagement.PublishLicense>.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UseLicense (string useLicense);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string useLicense) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (useLicense As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UseLicense(System::String ^ useLicense);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="useLicense" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="useLicense">Contratto di licenza con l'utente finale nel modulo [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] serializzato.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="useLicense" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">
          <paramref name="useLicense" /> non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationData">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; ApplicationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; ApplicationData" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.UseLicense.ApplicationData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationData As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ ApplicationData { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il dizionario dei dati dell'applicazione contenente le coppie chiave/valore passate dall'applicazione di pubblicazione all'applicazione di utilizzo.</summary>
        <value>Dizionario dei dati dell'applicazione contenente le coppie chiave/valore passate dall'applicazione di pubblicazione all'applicazione di utilizzo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Coppia chiave/valore di dati che viene elaborato da un server Rights Management Services (RMS) è la coppia di stringhe "Allow_Server_Editing" / "True".  Quando il rilascio delle licenze "Allow_Server_Editing" / "True" è impostata, il servizio o un servizio attendibile, è possibile riutilizzare la chiave simmetrica.  
  
 La coppia chiave/valore "NOLICCACHE" / "1" Controlla la licenza d'uso dei criteri di utilizzo di applicazioni di incorporamento.  Quando "NOLICCACHE" / "1" è impostata, le applicazioni devono non incorporare la licenza d'uso all'interno di documento di rights Management.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.CryptoProvider Bind (System.Security.RightsManagement.SecureEnvironment secureEnvironment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.CryptoProvider Bind(class System.Security.RightsManagement.SecureEnvironment secureEnvironment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::CryptoProvider ^ Bind(System::Security::RightsManagement::SecureEnvironment ^ secureEnvironment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.CryptoProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secureEnvironment" Type="System.Security.RightsManagement.SecureEnvironment" />
      </Parameters>
      <Docs>
        <param name="secureEnvironment">Ambiente a cui associare la licenza.</param>
        <summary>Associa la licenza a un oggetto <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> specificato.</summary>
        <returns>Istanza <see cref="T:System.Security.RightsManagement.CryptoProvider" /> se l'associazione della licenza ha avuto esito positivo; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopo la licenza è associata a un ambiente sicuro, l'applicazione è possibile esaminare ed esercitare i diritti concessi dalla licenza.  
  
 L'oggetto restituito <xref:System.Security.RightsManagement.CryptoProvider> istanza fornisce l'accesso per il contenuto protetto e la decrittografia.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare questo metodo per inizializzare un <xref:System.Security.RightsManagement.CryptoProvider>.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="secureEnvironment" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContentId">
      <MemberSignature Language="C#" Value="public Guid ContentId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ContentId" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.UseLicense.ContentId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ContentId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'identificatore di contenuto creato dal server di pubblicazione.</summary>
        <value>Identificatore di contenuto creato dal server di pubblicazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.UseLicense.ContentId%2A> viene creato dal server di pubblicazione e può essere usato per confrontare il contenuto di un <xref:System.Security.RightsManagement.UseLicense> e <xref:System.Security.RightsManagement.PublishLicense>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object x);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (x As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">Licenza da confrontare.</param>
        <summary>Indica se questa licenza è equivalente a un'altra licenza specificata.</summary>
        <returns>
          <see langword="true" /> se le due licenze sono equivalenti; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.UseLicense.Equals%2A> verifica l'equivalenza confrontando l'oggetto serializzato [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] stringhe specificate per il <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> costruttori.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.RightsManagement.UseLicense.ToString" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.UseLicense.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce il codice hash associato a questa licenza.</summary>
        <returns>Codice hash per la licenza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il codice hash restituito è basato su serializzato [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] stringa passata per il <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> costruttore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.ContentUser Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.RightsManagement.ContentUser Owner" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.UseLicense.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As ContentUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::RightsManagement::ContentUser ^ Owner { System::Security::RightsManagement::ContentUser ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.ContentUser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il proprietario della licenza.</summary>
        <value>Proprietario della licenza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il proprietario della licenza viene ottenuto da serializzato [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] stringa passata per il <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> costruttore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.UseLicense.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce la stringa [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] serializzata utilizzata per creare questa licenza.</summary>
        <returns>Stringa [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] serializzata originariamente passata al costruttore <see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>