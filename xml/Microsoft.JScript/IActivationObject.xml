<Type Name="IActivationObject" FullName="Microsoft.JScript.IActivationObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f0b49fd0009371b3625bb559e38f4d70953f7f7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36663336" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IActivationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActivationObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IActivationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IActivationObject" />
  <TypeSignature Language="F#" Value="type IActivationObject = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="faef1-101">Definisce metodi per la risoluzione dell'ambito.</span>
      <span class="sxs-lookup">
        <span data-stu-id="faef1-101">Defines methods for resolving scope.</span>
      </span>
      <span data-ttu-id="faef1-102">Questa interfaccia viene implementata da tutti gli oggetti che fanno parte di una gerarchia di ambiti.</span>
      <span class="sxs-lookup">
        <span data-stu-id="faef1-102">This interface is implemented by all objects that take part in a scope hierarchy.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.ActivationObject" />
    <altmember cref="T:Microsoft.JScript.ScriptObject" />
    <altmember cref="T:Microsoft.JScript.GlobalScope" />
    <altmember cref="T:System.Reflection.FieldInfo" />
  </Docs>
  <Members>
    <Member MemberName="GetDefaultThisObject">
      <MemberSignature Language="C#" Value="public object GetDefaultThisObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetDefaultThisObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetDefaultThisObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultThisObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetDefaultThisObject();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultThisObject : unit -&gt; obj" Usage="iActivationObject.GetDefaultThisObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="faef1-103">Quando viene implementato in una classe, ottiene l'ambito predefinito corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-103">When implemented in a class, gets the current default scope.</span>
          </span>
          <span data-ttu-id="faef1-104">Oggetto contenuto dell'ambito di un'istruzione <see langword="with" /> oppure l'ambito globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-104">Either the contained object of a <see langword="with" /> statement scope, or the global scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="faef1-105">Ambito predefinito corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-105">The current default scope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, int lexLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, int32 lexLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, lexLevel As Integer) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, int lexLevel);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * int -&gt; System.Reflection.FieldInfo" Usage="iActivationObject.GetField (name, lexLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="faef1-106">Nome del campo da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-106">The name of the field to search for.</span>
          </span>
        </param>
        <param name="lexLevel">
          <span data-ttu-id="faef1-107">Il livello lessicale da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-107">The lexical level to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faef1-108">Quando viene implementato in una classe, restituisce un campo avente il nome specificato eseguendo una ricerca nella gerarchia degli ambiti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-108">When implemented in a class, returns a field that has the specified name by searching the scope hierarchy.</span>
          </span>
          <span data-ttu-id="faef1-109">Questo metodo consente di eseguire ricerche solo nell'ambito specificato dal livello lessicale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-109">This method searches only the scope that is specified by the lexical level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="faef1-110">Oggetto <see cref="T:System.Reflection.FieldInfo" /> avente il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-110">A <see cref="T:System.Reflection.FieldInfo" /> object that has the specified name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faef1-111">Questo metodo si applica ai campi che non possono essere risolti in fase di compilazione.</span><span class="sxs-lookup"><span data-stu-id="faef1-111">This method applies to fields that cannot be resolved at compile time.</span></span> <span data-ttu-id="faef1-112">Questo errore si verifica quando un `eval` espressione fa riferimento a un campo nell'ambito esterno.</span><span class="sxs-lookup"><span data-stu-id="faef1-112">This happens when an `eval` expression refers to a field in the outer scope.</span></span> <span data-ttu-id="faef1-113">Poiché il `eval` espressione può dichiarare un campo locale con lo stesso nome, il campo non può essere l'associazione anticipata per il campo ambito esterno.</span><span class="sxs-lookup"><span data-stu-id="faef1-113">Because the `eval` expression can declare a local field with the same name, the field cannot be early bound to the outer scope field.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.GlobalScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.GlobalScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::GlobalScope ^ GetGlobalScope();" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalScope : unit -&gt; Microsoft.JScript.GlobalScope" Usage="iActivationObject.GetGlobalScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="faef1-114">Quando viene implementato in una classe, ottiene l'ambito globale eseguendo una ricerca nella gerarchia degli ambiti fino a trovare un ambito che include variabili statiche, ad esempio, un ambito di modulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-114">When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="faef1-115">Ambito globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-115">The global scope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetLocalField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetLocalField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetLocalField(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetLocalField : string -&gt; System.Reflection.FieldInfo" Usage="iActivationObject.GetLocalField name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="faef1-116">Nome del campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-116">The name of the field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faef1-117">Quando viene implementato in una classe, ottiene la dichiarazione locale di un campo avente il nome specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-117">When implemented in a class, gets the local declaration of a field that has the specified name.</span>
          </span>
          <span data-ttu-id="faef1-118">Viene utilizzato in fase di compilazione per il controllo degli errori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-118">This is used at compile time for error checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="faef1-119">Dichiarazione locale del campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-119">The local declaration of the field.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetMemberValue">
      <MemberSignature Language="C#" Value="public object GetMemberValue (string name, int lexlevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetMemberValue(string name, int32 lexlevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemberValue (name As String, lexlevel As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetMemberValue(System::String ^ name, int lexlevel);" />
      <MemberSignature Language="F#" Value="abstract member GetMemberValue : string * int -&gt; obj" Usage="iActivationObject.GetMemberValue (name, lexlevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexlevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="faef1-120">Nome del membro da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-120">The name of the member to search for.</span>
          </span>
        </param>
        <param name="lexlevel">
          <span data-ttu-id="faef1-121">Il livello lessicale da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-121">The lexical level to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faef1-122">Quando viene implementato in una classe, ottiene il valore del membro specificato eseguendo una ricerca nella gerarchia degli ambiti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-122">When implemented in a class, gets the value of the specified member by searching the scope hierarchy.</span>
          </span>
          <span data-ttu-id="faef1-123">Questo metodo consente di eseguire ricerche solo nell'ambito specificato dal livello lessicale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-123">This method searches only the scope that is specified by the lexical level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="faef1-124">Valore del membro <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faef1-124">The value of the member <paramref name="name" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faef1-125">Questo metodo si applica ai membri che non possono essere risolti in fase di compilazione.</span><span class="sxs-lookup"><span data-stu-id="faef1-125">This method applies to members that cannot be resolved at compile time.</span></span> <span data-ttu-id="faef1-126">Questo errore si verifica quando un `eval` espressione fa riferimento a un membro nell'ambito esterno.</span><span class="sxs-lookup"><span data-stu-id="faef1-126">This occurs when an `eval` expression refers to a member in the outer scope.</span></span> <span data-ttu-id="faef1-127">Poiché il `eval` espressione può dichiarare un membro con lo stesso nome locale, il membro non può essere l'associazione anticipata per il membro ambito esterno.</span><span class="sxs-lookup"><span data-stu-id="faef1-127">Because the `eval` expression can declare a local member with the same name, the member cannot be early bound to the outer scope member.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
  </Members>
</Type>