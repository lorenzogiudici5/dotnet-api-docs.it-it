<Type Name="IEngine2" FullName="Microsoft.JScript.IEngine2">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00cec088e6708211a14558c10d9ac6fa063efcf7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEngine2" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEngine2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IEngine2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEngine2" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEngine2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("BFF6C97F-0705-4394-88B8-A03A4B8B4CD7")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d34e2-101">Definisce funzionalità supplementari necessarie a un host IActiveScript.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d34e2-101">Defines extra functionality that is needed by an IActiveScript host.</span>
      </span>
      <span data-ttu-id="d34e2-102">Implementato dal motore <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d34e2-102">Implemented by the <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> engine.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.Vsa.IJSVsaEngine Clone (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.Vsa.IJSVsaEngine Clone(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Clone(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (domain As AppDomain) As IJSVsaEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::Vsa::IJSVsaEngine ^ Clone(AppDomain ^ domain);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.IJSVsaEngine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="d34e2-103">Dominio applicazione in cui creare il nuovo motore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-103">The application domain in which to create the new engine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d34e2-104">Se implementato in una classe, crea un nuovo identico motore che viene eseguito in un nuovo dominio applicazione, con uguale stato compilato ed elementi denominati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-104">When implemented in a class, creates a new identical engine that runs in a new application domain, with the same compiled state and named items.</span>
          </span>
          <span data-ttu-id="d34e2-105">Non implementato in JScript.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-105">This is not implemented in JScript.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d34e2-106">Nuovo motore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-106">The new engine.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="CompileEmpty">
      <MemberSignature Language="C#" Value="public bool CompileEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompileEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.CompileEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Function CompileEmpty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CompileEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d34e2-107">Se implementato in una classe, genera la compilazione dello stato corrente del motore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-107">When implemented in a class, triggers compilation of all the state currently in the engine.</span>
          </span>
          <span data-ttu-id="d34e2-108">Tutti i riferimenti, gli elementi di codice, gli elementi host e le risorse sono eseguiti mediante il compilatore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-108">All references, code items, host items, and resources are run through the compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d34e2-109">
            <see langword="true" /> se la compilazione è stata completata. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-109">
              <see langword="true" /> if the compilation was successful, otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="ConnectEvents">
      <MemberSignature Language="C#" Value="public void ConnectEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.ConnectEvents" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConnectEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ConnectEvents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d34e2-110">Se implementato in una classe, comunica al motore che è possibile connettere tutte le origini degli eventi registrati che hanno gli eventi nei gestori eventi globali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-110">When implemented in a class, communicates to the engine that it can connect any registered event sources that have events to any global event handlers.</span>
          </span>
          <span data-ttu-id="d34e2-111">Non implementato in JScript.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-111">This is not implemented in JScript.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="DisconnectEvents">
      <MemberSignature Language="C#" Value="public void DisconnectEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.DisconnectEvents" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisconnectEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisconnectEvents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d34e2-112">Se implementato in una classe, indica al motore di scollegare le origini degli eventi dai gestori eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-112">When implemented in a class, directs the engine to unhook event sources from event handlers.</span>
          </span>
          <span data-ttu-id="d34e2-113">Non implementato in JScript.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-113">This is not implemented in JScript.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.GetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetAssembly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d34e2-114">Se implementato in una classe, ottiene l'assembly compilato prodotto dal passaggio di compilazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-114">When implemented in a class, gets the compiled assembly that is produced by the compilation step.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d34e2-115">Assembly compilato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-115">The compiled assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.IVsaScriptScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.IVsaScriptScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalScope () As IVsaScriptScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::IVsaScriptScope ^ GetGlobalScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.IVsaScriptScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d34e2-116">Se implementato in una classe, ottiene l'oggetto di ambito globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-116">When implemented in a class, gets the global scope object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d34e2-117">Oggetto di ambito globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-117">The global scope object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module GetModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.GetModule" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModule () As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ GetModule();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d34e2-118">Se implementato in una classe, ottiene il modulo di codice dall'assembly compilato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-118">When implemented in a class, gets the code module from the compiled assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d34e2-119">Modulo di codice dall'assembly compilato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-119">The code module from the compiled assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="InitVsaEngine">
      <MemberSignature Language="C#" Value="public void InitVsaEngine (string rootMoniker, Microsoft.JScript.Vsa.IJSVsaSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitVsaEngine(string rootMoniker, class Microsoft.JScript.Vsa.IJSVsaSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.InitVsaEngine(System.String,Microsoft.JScript.Vsa.IJSVsaSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitVsaEngine (rootMoniker As String, site As IJSVsaSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitVsaEngine(System::String ^ rootMoniker, Microsoft::JScript::Vsa::IJSVsaSite ^ site);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootMoniker" Type="System.String" />
        <Parameter Name="site" Type="Microsoft.JScript.Vsa.IJSVsaSite" />
      </Parameters>
      <Docs>
        <param name="rootMoniker">
          <span data-ttu-id="d34e2-120">Moniker radice del motore di script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-120">The root moniker of the script engine.</span>
          </span>
          <span data-ttu-id="d34e2-121">Per ulteriori informazioni, vedere <see cref="P:Microsoft.Vsa.IVsaEngine.RootMoniker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-121">For more information, see <see cref="P:Microsoft.Vsa.IVsaEngine.RootMoniker" />.</span>
          </span>
        </param>
        <param name="site">
          <span data-ttu-id="d34e2-122">Oggetto <see cref="T:Microsoft.Vsa.IVsaSite" /> implementato dall'host, utilizzato dal motore di script per comunicare con l'host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-122">The host-implemented <see cref="T:Microsoft.Vsa.IVsaSite" /> object that is used by the script engine to communicate with the host.</span>
          </span>
          <span data-ttu-id="d34e2-123">Per ulteriori informazioni, vedere <see cref="P:Microsoft.Vsa.IVsaEngine.Site" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-123">For more information, see <see cref="P:Microsoft.Vsa.IVsaEngine.Site" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d34e2-124">Se implementato in una classe, inizializza l'oggetto <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-124">When implemented in a class, initializes the <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="Interrupt">
      <MemberSignature Language="C#" Value="public void Interrupt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Interrupt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Interrupt" />
      <MemberSignature Language="VB.NET" Value="Public Sub Interrupt ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Interrupt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d34e2-125">Se implementato in una classe, chiama <see cref="M:System.Threading.Thread.Abort" /> sul thread che esegue il codice di script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-125">When implemented in a class, calls <see cref="M:System.Threading.Thread.Abort" /> on the thread that is running the script code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d34e2-126">Questo metodo non deve essere chiamato sul thread che viene utilizzato per eseguire il codice.</span><span class="sxs-lookup"><span data-stu-id="d34e2-126">This method should not be called on the thread that is used to run code.</span></span> <span data-ttu-id="d34e2-127">In questo caso, si arresta il thread.</span><span class="sxs-lookup"><span data-stu-id="d34e2-127">If you do this, you stop your own thread.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="RegisterEventSource">
      <MemberSignature Language="C#" Value="public void RegisterEventSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterEventSource(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.RegisterEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterEventSource (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterEventSource(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d34e2-128">Nome di un elemento aggiunto che fornisce eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-128">The name of an added item that provides events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d34e2-129">Se implementato in una classe, specifica il nome di un elemento contrassegnato come origine dell'evento, in modo che il metodo <see cref="M:Microsoft.JScript.IEngine2.ConnectEvents" /> possa determinare gli eventi da connettere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-129">When implemented in a class, specifies the name of an item that is marked as an event source, so that the <see cref="M:Microsoft.JScript.IEngine2.ConnectEvents" /> method can determine which events to connect.</span>
          </span>
          <span data-ttu-id="d34e2-130">Non implementato in JScript.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-130">This is not implemented in JScript.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d34e2-131">Se implementato in una classe, questo metodo viene chiamato dal debugger quando è necessario reimpostare il motore su uno stato originario prima di valutare una nuova espressione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-131">When implemented in a class, this method is called by the debugger when it has to reset the engine to a clean state before evaluating a new expression.</span>
          </span>
          <span data-ttu-id="d34e2-132">Il metodo reimposta gli elementi aggiunti e ripristina lo stato originale dell'ambito globale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-132">The method resets the added items and the global scope back to their original state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Run(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Run(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (domain As AppDomain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(AppDomain ^ domain);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="d34e2-133">Dominio applicazione in cui eseguire il codice compilato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-133">The application domain in which to run the compiled code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d34e2-134">Se implementato in una classe, esegue il codice compilato nel dominio applicazione specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-134">When implemented in a class, runs the compiled code in the specified application domain.</span>
          </span>
          <span data-ttu-id="d34e2-135">Non implementato in JScript perché i motori gestiti non supportano l'esecuzione del codice nei domini applicazione forniti dall'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-135">This is not implemented in JScript because managed engines do not support running code in user-provided application domains.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="RunEmpty">
      <MemberSignature Language="C#" Value="public void RunEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.RunEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d34e2-136">Se implementato in una classe, esegue il codice compilato nell'oggetto <see cref="T:System.AppDomain" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34e2-136">When implemented in a class, runs the compiled code in the current <see cref="T:System.AppDomain" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
  </Members>
</Type>