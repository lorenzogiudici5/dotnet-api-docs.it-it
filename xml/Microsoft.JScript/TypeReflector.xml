<Type Name="TypeReflector" FullName="Microsoft.JScript.TypeReflector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32a72b8b8d39bcb810b366421b224cc6965f1483" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36729832" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TypeReflector : Microsoft.JScript.ScriptObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeReflector extends Microsoft.JScript.ScriptObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.TypeReflector" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeReflector&#xA;Inherits ScriptObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeReflector sealed : Microsoft::JScript::ScriptObject" />
  <TypeSignature Language="F#" Value="type TypeReflector = class&#xA;    inherit ScriptObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.ScriptObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7b447-101">Fornisce un'implementazione di <see cref="M:Microsoft.JScript.TypeReflector.GetMember(System.String,System.Reflection.BindingFlags)" /> più rapida di <see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7b447-101">Provides an implementation of <see cref="M:Microsoft.JScript.TypeReflector.GetMember(System.String,System.Reflection.BindingFlags)" /> that is faster than <see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.ScriptObject" />
    <altmember cref="T:System.Type" />
  </Docs>
  <Members>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypeReflector.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="typeReflector.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7b447-102">Nome del membro da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b447-102">The name of the member to search for.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="7b447-103">Combinazione bit per bit dei valori di enumerazione che specificano la modalità di ricerca di membri e tipi mediante l'operazione di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b447-103">A bitwise combination of the enumeration values that specify the way in which the search for members and types is conducted by the reflection operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b447-104">Cerca il membro specificato, utilizzando i vincoli di associazione specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b447-104">Searches for the specified member, using the specified binding constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b447-105">Matrice di oggetti <see cref="T:System.Reflection.MemberInfo" /> che rappresentano i membri pubblici con il nome specificato, se disponibili. In caso contrario, matrice vuota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b447-105">An array of <see cref="T:System.Reflection.MemberInfo" /> objects that represents the public members that have the specified name, if found; otherwise, an empty array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypeReflector.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="typeReflector.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="7b447-106">Combinazione bit per bit dei valori di enumerazione che specificano la modalità di ricerca di membri e tipi mediante l'operazione di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b447-106">A bitwise combination of the enumeration values that specify the way in which the search for members and types is conducted by the reflection operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b447-107">Genera un'eccezione <see cref="T:Microsoft.JScript.JScriptException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b447-107">Throws a <see cref="T:Microsoft.JScript.JScriptException" /> exception in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b447-108">Genera un'eccezione <see cref="T:Microsoft.JScript.JScriptException" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b447-108">Throws a <see cref="T:Microsoft.JScript.JScriptException" /> exception in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Type" />
        <altmember cref="F:Microsoft.JScript.JSError.InternalError" />
      </Docs>
    </Member>
  </Members>
</Type>