<Type Name="JScriptCodeProvider" FullName="Microsoft.JScript.JScriptCodeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fba8380cc082263ebc3cb03329477ff40ef237de" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36662807" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class JScriptCodeProvider : System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit JScriptCodeProvider extends System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.JScriptCodeProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JScriptCodeProvider&#xA;Inherits CodeDomProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class JScriptCodeProvider sealed : System::CodeDom::Compiler::CodeDomProvider" />
  <TypeSignature Language="F#" Value="type JScriptCodeProvider = class&#xA;    inherit CodeDomProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.Compiler.CodeDomProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="258a2-101">Consente di accedere alle istanze del generatore e del compilatore di codice JScript.</span>
      <span class="sxs-lookup">
        <span data-stu-id="258a2-101">Provides access to instances of the JScript code generator and code compiler.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
    <altmember cref="T:System.CodeDom.Compiler.ICodeCompiler" />
    <altmember cref="T:System.CodeDom.Compiler.CodeCompiler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JScriptCodeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.JScriptCodeProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JScriptCodeProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="258a2-102">Inizializza una nuova istanza della classe <see cref="T:Microsoft.JScript.JScriptCodeProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="258a2-102">Initializes a new instance of the <see cref="T:Microsoft.JScript.JScriptCodeProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
        <altmember cref="T:System.CodeDom.Compiler.ICodeCompiler" />
        <altmember cref="T:System.CodeDom.Compiler.CodeCompiler" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateCompiler">
      <MemberSignature Language="C#" Value="public override System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.JScriptCodeProvider.CreateCompiler" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCompiler () As ICodeCompiler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::Compiler::ICodeCompiler ^ CreateCompiler();" />
      <MemberSignature Language="F#" Value="abstract member CreateCompiler : unit -&gt; System.CodeDom.Compiler.ICodeCompiler&#xA;override this.CreateCompiler : unit -&gt; System.CodeDom.Compiler.ICodeCompiler" Usage="jScriptCodeProvider.CreateCompiler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeCompiler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="258a2-103">Restituisce un'istanza del compilatore di codice JScript.</span>
          <span class="sxs-lookup">
            <span data-stu-id="258a2-103">Returns an instance of the JScript code compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="258a2-104">Istanza del compilatore di codice JScript.</span>
          <span class="sxs-lookup">
            <span data-stu-id="258a2-104">An instance of the JScript code compiler.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
        <altmember cref="T:System.CodeDom.Compiler.CodeCompiler" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public override System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.JScriptCodeProvider.CreateGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateGenerator () As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator();" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : unit -&gt; System.CodeDom.Compiler.ICodeGenerator&#xA;override this.CreateGenerator : unit -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="jScriptCodeProvider.CreateGenerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="258a2-105">Restituisce un'istanza del generatore di codice JScript.</span>
          <span class="sxs-lookup">
            <span data-stu-id="258a2-105">Returns an instance of the JScript code generator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="258a2-106">Istanza del generatore di codice JScript.</span>
          <span class="sxs-lookup">
            <span data-stu-id="258a2-106">An instance of the JScript code generator.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.CodeDom.Compiler.ICodeCompiler" />
        <altmember cref="T:System.CodeDom.Compiler.CodeCompiler" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public override string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.JScriptCodeProvider.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExtension : string" Usage="Microsoft.JScript.JScriptCodeProvider.FileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="258a2-107">Ottiene l'estensione dei file di codice JScript.</span>
          <span class="sxs-lookup">
            <span data-stu-id="258a2-107">Gets the file name extension for JScript code files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="258a2-108">Stringa letterale "js".</span>
          <span class="sxs-lookup">
            <span data-stu-id="258a2-108">The string literal "js".</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
        <altmember cref="T:System.CodeDom.Compiler.ICodeCompiler" />
        <altmember cref="T:System.CodeDom.Compiler.CodeCompiler" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
  </Members>
</Type>