<Type Name="IDebugVsaScriptCodeItem" FullName="Microsoft.JScript.IDebugVsaScriptCodeItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cce45358f7fea281ef60cb94ac2eab8bdbafa99c" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48668076" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDebugVsaScriptCodeItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IDebugVsaScriptCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDebugVsaScriptCodeItem" />
  <TypeSignature Language="F#" Value="type IDebugVsaScriptCodeItem = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="584e2-101">Definisce i metodi che valutano le espressioni e analizzano le stringhe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="584e2-101">Defines methods that evaluate expressions and parse strings.</span>
      </span>
      <span data-ttu-id="584e2-102">Questa interfaccia viene in genere implementata da un oggetto che rappresenta un blocco di codice e viene in genere chiamata da un debugger.</span>
      <span class="sxs-lookup">
        <span data-stu-id="584e2-102">This interface is typically implemented by an object that represents a code block, and it is typically called by a debugger.</span>
      </span>
      <span data-ttu-id="584e2-103">Questa interfaccia fornisce funzionalità supplementari necessarie a un host IActiveScript.</span>
      <span class="sxs-lookup">
        <span data-stu-id="584e2-103">This interface provides extra functionality that is needed by an IActiveScript host.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate();" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : unit -&gt; obj" Usage="iDebugVsaScriptCodeItem.Evaluate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="584e2-104">Se viene implementata in una classe, valuta il blocco, l'espressione o l'istruzione rappresentata dall'elemento di codice e restituisce il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-104">When implemented in a class, evaluates the block, expression, or statement represented by the code item and returns the value.</span>
          </span>
          <span data-ttu-id="584e2-105">Solitamente viene chiamato da un debugger che richiede di valutare un'espressione, ad esempio in una finestra Espressioni di controllo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-105">It is typically called by a debugger that needs to evaluate an expression (in a Watch window, for example).</span>
          </span>
          <span data-ttu-id="584e2-106">Per le espressioni, il valore è il risultato dell'espressione,</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-106">For expressions, the value is the result of the expression.</span>
          </span>
          <span data-ttu-id="584e2-107">mentre per i blocchi e le istruzioni, l'espressione risultante è l'ultima espressione calcolata dal blocco o dall'istruzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-107">For blocks and statements, the resulting expression is the last expression calculated by the block or statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="584e2-108">Restituisce un valore che rappresenta la valutazione dell'istruzione, dell'espressione o del blocco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-108">Returns a value that represents the evaluation of the statement, expression, or block.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="584e2-109">Si noti che il <xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A> metodo è funzionalmente identico al <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="584e2-109">Note that the <xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A> method is functionally identical to the <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> method.</span></span> <span data-ttu-id="584e2-110">Solo gli attributi di marshalling sono diversi.</span><span class="sxs-lookup"><span data-stu-id="584e2-110">Only the marshaling attributes differ.</span></span> <span data-ttu-id="584e2-111">Questa versione dell'interfaccia consente a un debugger gestito ottenere il valore restituito come un `IUnknown` puntatore anziché un `VARIANT`.</span><span class="sxs-lookup"><span data-stu-id="584e2-111">This version of the interface allows an unmanaged debugger to obtain the return value as an `IUnknown` pointer rather than a `VARIANT`.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ParseNamedBreakPoint">
      <MemberSignature Language="C#" Value="public bool ParseNamedBreakPoint (string input, out string functionName, out int nargs, out string arguments, out string returnType, out ulong offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ParseNamedBreakPoint(string input, [out] string&amp; functionName, [out] int32&amp; nargs, [out] string&amp; arguments, [out] string&amp; returnType, [out] unsigned int64&amp; offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseNamedBreakPoint (input As String, ByRef functionName As String, ByRef nargs As Integer, ByRef arguments As String, ByRef returnType As String, ByRef offset As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ParseNamedBreakPoint(System::String ^ input, [Runtime::InteropServices::Out] System::String ^ % functionName, [Runtime::InteropServices::Out] int % nargs, [Runtime::InteropServices::Out] System::String ^ % arguments, [Runtime::InteropServices::Out] System::String ^ % returnType, [Runtime::InteropServices::Out] System::UInt64 % offset);" />
      <MemberSignature Language="F#" Value="abstract member ParseNamedBreakPoint : string *  *  *  *  *  -&gt; bool" Usage="iDebugVsaScriptCodeItem.ParseNamedBreakPoint (input, functionName, nargs, arguments, returnType, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="functionName" Type="System.String" RefType="out" />
        <Parameter Name="nargs" Type="System.Int32" RefType="out" />
        <Parameter Name="arguments" Type="System.String" RefType="out" />
        <Parameter Name="returnType" Type="System.String" RefType="out" />
        <Parameter Name="offset" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="584e2-112">Formato corretto della stringa del punto di interruzione denominato, con una funzione, un elenco degli argomenti facoltativo e l'offset IL facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-112">A well-formed named breakpoint string giving a function, optional argument list, and optional IL offset.</span>
          </span>
        </param>
        <param name="functionName">
          <span data-ttu-id="584e2-113">Parametro out che restituisce il nome della funzione analizzata al di fuori della stringa di input oppure la stringa vuota se il formato della stringa di input non è corretto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-113">Out parameter returning the name of the function parsed out of the input string, or the empty string if the input string is not well formed.</span>
          </span>
        </param>
        <param name="nargs">
          <span data-ttu-id="584e2-114">Parametro out che restituisce il numero di argomenti nell'elenco degli argomenti facoltativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-114">Out parameter returning the number of arguments in the optional argument list.</span>
          </span>
          <span data-ttu-id="584e2-115">Restituisce zero se non esiste alcun elenco di argomenti o se il formato della stringa non è corretto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-115">Returns zero if there is no arguments list or if the string is not well formed.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="584e2-116">Parametro out che restituisce un elenco separato da spazi dei nomi dei tipi di tutti gli argomenti nell'elenco degli argomenti oppure una stringa vuota se l'elenco degli argomenti manca o il formato della stringa di input non è corretto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-116">Out parameter returning a space-separated list of the names of the types of all the arguments in the arguments list, or an empty string if the arguments list was missing or the input string was not well formed.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="584e2-117">Parametro out che restituisce una stringa contenente il tipo restituito della funzione denominata nell'input oppure la stringa vuota se il tipo restituito manca o il formato della stringa di input non è corretto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-117">Out parameter returning a string containing the return type of the function named in the input, or the empty string if the return type was missing or the input string was not well formed.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="584e2-118">Valore long integer senza segno che fornisce l'offset IL dalla stringa di input oppure zero se non esiste alcun offset IL o il formato della stringa non è corretto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-118">Unsigned long integer giving the IL offset from the input string, or zero if there was no IL offset or the string was not well formed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="584e2-119">Se viene implementato in una classe, analizza le stringhe e restituisce le informazioni ricavate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-119">When implemented in a class, parses strings and returns the parsed-out information.</span>
          </span>
          <span data-ttu-id="584e2-120">Questo metodo solitamente viene chiamato da un debugger che richiede di analizzare le informazioni su un punto di interruzione rappresentato come una <see langword="string" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-120">This method is typically called by a debugger that needs to parse information about a breakpoint that is represented as a <see langword="string" />.</span>
          </span>
          <span data-ttu-id="584e2-121">È possibile che nel debugger sia presente un punto di interruzione digitato dall'utente nel formato *functionname-arguments-ILoffset*.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-121">The debugger might have a breakpoint typed in by the user in the form *functionname-arguments-ILoffset*.</span>
          </span>
          <span data-ttu-id="584e2-122">Una stringa di interruzione denominata può avere un formato complesso, ad esempio, <c>F.B(C.D[], int, arg : double ) : C.Abc + 123.</c></span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-122">A named breakpoint string can have a complex format, for example, <c>F.B(C.D[], int, arg : double ) : C.Abc + 123.</c></span>
          </span>
          <span data-ttu-id="584e2-123">L'elenco di parametri è facoltativo, così come l'offset IL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-123">The parameter list is optional, as is the IL offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="584e2-124">Restituisce <see langword="true" /> se il punto di interruzione denominato non è stato analizzato correttamente, in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="584e2-124">Returns <see langword="true" /> if the named breakpoint is successfully parsed, <see langword="false" /> otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>