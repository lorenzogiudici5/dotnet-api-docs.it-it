<Type Name="IDebugVsaScriptCodeItem" FullName="Microsoft.JScript.IDebugVsaScriptCodeItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66e914a30fcef7a41bbb9be46f214cbcc40fd42e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39832497" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDebugVsaScriptCodeItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IDebugVsaScriptCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDebugVsaScriptCodeItem" />
  <TypeSignature Language="F#" Value="type IDebugVsaScriptCodeItem = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.Guid("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definisce i metodi che valutano le espressioni e analizzano le stringhe. Questa interfaccia viene in genere implementata da un oggetto che rappresenta un blocco di codice e viene in genere chiamata da un debugger. Questa interfaccia fornisce funzionalità supplementari necessarie a un host IActiveScript.</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate();" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : unit -&gt; obj" Usage="iDebugVsaScriptCodeItem.Evaluate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se viene implementata in una classe, valuta il blocco, l'espressione o l'istruzione rappresentata dall'elemento di codice e restituisce il valore. Solitamente viene chiamato da un debugger che richiede di valutare un'espressione, ad esempio in una finestra Espressioni di controllo. Per le espressioni, il valore è il risultato dell'espressione, mentre per i blocchi e le istruzioni, l'espressione risultante è l'ultima espressione calcolata dal blocco o dall'istruzione.</summary>
        <returns>Restituisce un valore che rappresenta la valutazione dell'istruzione, dell'espressione o del blocco.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si noti che il <xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A> metodo è funzionalmente identico al <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> (metodo). Solo gli attributi di marshalling sono diversi. Questa versione dell'interfaccia consente a un debugger gestito ottenere il valore restituito come un `IUnknown` puntatore anziché un `VARIANT`.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ParseNamedBreakPoint">
      <MemberSignature Language="C#" Value="public bool ParseNamedBreakPoint (string input, out string functionName, out int nargs, out string arguments, out string returnType, out ulong offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ParseNamedBreakPoint(string input, [out] string&amp; functionName, [out] int32&amp; nargs, [out] string&amp; arguments, [out] string&amp; returnType, [out] unsigned int64&amp; offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseNamedBreakPoint (input As String, ByRef functionName As String, ByRef nargs As Integer, ByRef arguments As String, ByRef returnType As String, ByRef offset As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ParseNamedBreakPoint(System::String ^ input, [Runtime::InteropServices::Out] System::String ^ % functionName, [Runtime::InteropServices::Out] int % nargs, [Runtime::InteropServices::Out] System::String ^ % arguments, [Runtime::InteropServices::Out] System::String ^ % returnType, [Runtime::InteropServices::Out] System::UInt64 % offset);" />
      <MemberSignature Language="F#" Value="abstract member ParseNamedBreakPoint : string *  *  *  *  *  -&gt; bool" Usage="iDebugVsaScriptCodeItem.ParseNamedBreakPoint (input, functionName, nargs, arguments, returnType, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="functionName" Type="System.String" RefType="out" />
        <Parameter Name="nargs" Type="System.Int32" RefType="out" />
        <Parameter Name="arguments" Type="System.String" RefType="out" />
        <Parameter Name="returnType" Type="System.String" RefType="out" />
        <Parameter Name="offset" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Formato corretto della stringa del punto di interruzione denominato, con una funzione, un elenco degli argomenti facoltativo e l'offset IL facoltativo.</param>
        <param name="functionName">Parametro out che restituisce il nome della funzione analizzata al di fuori della stringa di input oppure la stringa vuota se il formato della stringa di input non è corretto.</param>
        <param name="nargs">Parametro out che restituisce il numero di argomenti nell'elenco degli argomenti facoltativo. Restituisce zero se non esiste alcun elenco di argomenti o se il formato della stringa non è corretto.</param>
        <param name="arguments">Parametro out che restituisce un elenco separato da spazi dei nomi dei tipi di tutti gli argomenti nell'elenco degli argomenti oppure una stringa vuota se l'elenco degli argomenti manca o il formato della stringa di input non è corretto.</param>
        <param name="returnType">Parametro out che restituisce una stringa contenente il tipo restituito della funzione denominata nell'input oppure la stringa vuota se il tipo restituito manca o il formato della stringa di input non è corretto.</param>
        <param name="offset">Valore long integer senza segno che fornisce l'offset IL dalla stringa di input oppure zero se non esiste alcun offset IL o il formato della stringa non è corretto.</param>
        <summary>Se viene implementato in una classe, analizza le stringhe e restituisce le informazioni ricavate. Questo metodo solitamente viene chiamato da un debugger che richiede di analizzare le informazioni su un punto di interruzione rappresentato come una <see langword="string" />. È possibile che nel debugger sia presente un punto di interruzione digitato dall'utente nel formato *functionname-arguments-ILoffset*. Una stringa di interruzione denominata può avere un formato complesso, ad esempio, <c>F.B(C.D[], int, arg : double ) : C.Abc + 123.</c> L'elenco di parametri è facoltativo, così come l'offset IL.</summary>
        <returns>Restituisce <see langword="true" /> se il punto di interruzione denominato non è stato analizzato correttamente, in caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>