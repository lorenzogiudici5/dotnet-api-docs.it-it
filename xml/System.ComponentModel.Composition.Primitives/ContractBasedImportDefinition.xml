<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ContractBasedImportDefinition.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac524a0730b6443233fb1c5a32d9e46899efc097195.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24a0730b6443233fb1c5a32d9e46899efc097195</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition">
          <source>Represents an import that is required by a <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> object and that can specify both a contract name and metadata.</source>
          <target state="translated">Rappresenta un'importazione richiesta da un oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> che può specificare sia un nome di contratto sia i metadati.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source>The contract name of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> object required by the import definition.</source>
          <target state="translated">Il nome di contratto dell'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> richiesto dalla definizione dell'importazione.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source>The type identity of the export type expected.</source>
          <target state="translated">Identità del tipo di esportazione previsto.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /&gt;</ph> method to generate a type identity for a given type.</source>
          <target state="translated">Utilizzare il metodo <ph id="ph1">&lt;see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /&gt;</ph> per generare un'identità del tipo per un tipo specificato.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source>If no specific type is required, use <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se non viene richiesto un tipo specifico, utilizzare <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source>A collection of key/value pairs that contain the metadata names and types required by the import definition; or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to set the <ph id="ph2">&lt;see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" /&gt;</ph> property to an empty <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> collection.</source>
          <target state="translated">Raccolta di coppie chiave/valore che contengono i nomi e i tipi di metadati richiesti dalla definizione di impostazione oppure <ph id="ph1">&lt;see langword="null" /&gt;</ph> per impostare la proprietà <ph id="ph2">&lt;see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" /&gt;</ph> in una raccolta <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> vuota.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source>One of the enumeration values that indicates the cardinality of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects required by the import definition.</source>
          <target state="translated">Uno dei valori di enumerazione che indica la cardinalità degli oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> richiesti dalla definizione di importazione.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the import definition can be satisfied multiple times throughout the lifetime of a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per specificare che la definizione di importazione può essere soddisfatto più volte nell'arco della durata di <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the import definition is required to be satisfied before a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> can start producing exported objects; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per specificare che la definizione di importazione deve essere soddisfatto prima che un oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> possa iniziare a produrre oggetti esportati; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source>A value that indicates that the importer requires a specific creation policy for the exports used to satisfy this import.</source>
          <target state="translated">Valore che indica che l'utilità di importazione richiede criteri di creazione specifici per le esportazioni utilizzate per soddisfare questa importazione.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source>If no specific creation policy is needed, the default is <ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" /&gt;</ph>.</source>
          <target state="translated">Se non è necessario alcun criterio di creazione, l'impostazione predefinita è <ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph> class with the specified contract name, required type identity, required metadata, cardinality, and creation policy, and indicates whether the import definition is recomposable or a prerequisite.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph> con il nome di contratto, l'identità del tipo richiesta, i metadati obbligatori, la cardinalità e i criteri di creazione specificati. Indica se la definizione dell'importazione è ricomponibile o è un prerequisito.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source><ph id="ph1">&lt;paramref name="contractName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="contractName" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source><ph id="ph1">&lt;paramref name="contractName" /&gt;</ph> is an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="contractName" /&gt;</ph> è una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source><ph id="ph1">&lt;paramref name="requiredMetadata" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requiredMetadata" /&gt;</ph> contiene un elemento <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)">
          <source><ph id="ph1">&lt;paramref name="cardinality" /&gt;</ph> is not one of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cardinality" /&gt;</ph> non è uno dei valori di <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The contract name of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> object required by the import definition.</source>
          <target state="translated">Il nome di contratto dell'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> richiesto dalla definizione dell'importazione.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The type identity of the export type expected.</source>
          <target state="translated">Identità del tipo di esportazione previsto.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /&gt;</ph> method to generate a type identity for a given type.</source>
          <target state="translated">Utilizzare il metodo <ph id="ph1">&lt;see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /&gt;</ph> per generare un'identità del tipo per un tipo specificato.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>If no specific type is required, use <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se non viene richiesto un tipo specifico, utilizzare <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>A collection of key/value pairs that contain the metadata names and types required by the import definition; or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to set the <ph id="ph2">&lt;see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" /&gt;</ph> property to an empty <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> collection.</source>
          <target state="translated">Raccolta di coppie chiave/valore che contengono i nomi e i tipi di metadati richiesti dalla definizione di impostazione oppure <ph id="ph1">&lt;see langword="null" /&gt;</ph> per impostare la proprietà <ph id="ph2">&lt;see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" /&gt;</ph> in una raccolta <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> vuota.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>One of the enumeration values that indicates the cardinality of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects required by the import definition.</source>
          <target state="translated">Uno dei valori di enumerazione che indica la cardinalità degli oggetti <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> richiesti dalla definizione di importazione.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the import definition can be satisfied multiple times throughout the lifetime of a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per specificare che la definizione di importazione può essere soddisfatto più volte nell'arco della durata di <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph>; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the import definition is required to be satisfied before a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> can start producing exported objects; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per specificare che la definizione di importazione deve essere soddisfatto prima che un oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> possa iniziare a produrre oggetti esportati; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>A value that indicates that the importer requires a specific creation policy for the exports used to satisfy this import.</source>
          <target state="translated">Valore che indica che l'utilità di importazione richiede criteri di creazione specifici per le esportazioni utilizzate per soddisfare questa importazione.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>If no specific creation policy is needed, the default is <ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" /&gt;</ph>.</source>
          <target state="translated">Se non è necessario alcun criterio di creazione, l'impostazione predefinita è <ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The metadata associated with this import.</source>
          <target state="translated">Metadati associati a questa importazione.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph> class with the specified contract name, required type identity, required and optional metadata, cardinality, and creation policy, and indicates whether the import definition is recomposable or a prerequisite.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph> con il nome di contratto, l'identità del tipo richiesta, i metadati obbligatori e facoltativi, la cardinalità e i criteri di creazione specificati. Indica se la definizione dell'importazione è ricomponibile o è un prerequisito.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="contractName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="contractName" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="contractName" /&gt;</ph> is an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="contractName" /&gt;</ph> è una stringa vuota ("").</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="requiredMetadata" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requiredMetadata" /&gt;</ph> contiene un elemento <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="cardinality" /&gt;</ph> is not one of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cardinality" /&gt;</ph> non è uno dei valori di <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint">
          <source>Gets an expression that defines conditions that must be matched to satisfy the import described by this import definition.</source>
          <target state="translated">Ottiene un'espressione che definisce le condizioni che devono essere corrisposte per soddisfare l'importazione descritta da questa definizione di importazione.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint">
          <source>An expression that contains a <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> object that defines the conditions that must be matched for the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> to be satisfied by an <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph>.</source>
          <target state="translated">Espressione che contiene un oggetto <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> che definisce le condizioni che devono essere corrisposte affinché l'oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> sia soddisfatto da <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)">
          <source>The export definition to test.</source>
          <target state="translated">Definizione di esportazione da testare.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)">
          <source>Returns a value indicating whether the constraint represented by this object is satisfied by the export represented by the given export definition.</source>
          <target state="translated">Restituisce un valore che indica se il vincolo rappresentato da questo oggetto è soddisfatto dall'esportazione rappresentata dalla definizione di esportazione specificata.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the constraint is satisfied; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il vincolo viene soddisfatto. In caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy">
          <source>Gets or sets a value that indicates that the importer requires a specific <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.CreationPolicy" /&gt;</ph> for the exports used to satisfy this import.</source>
          <target state="translated">Ottiene o imposta un valore che indica che l'utilità di importazione richiede un oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.CreationPolicy" /&gt;</ph> specifico per le esportazioni utilizzate per soddisfare questa importazione.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy">
          <source>One of the following values:</source>
          <target state="translated">Uno dei valori seguenti:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy">
          <source><ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" /&gt;</ph>, if the importer does not require a specific <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.CreationPolicy" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" /&gt;</ph>, se l'utilità di importazione non richiede un oggetto <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.CreationPolicy" /&gt;</ph> specifico.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy">
          <source><ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /&gt;</ph> to require that all exports used should be shared by all importers in the container.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /&gt;</ph> per richiedere che tutte le esportazioni utilizzate siano condivise da tutte le utilità di importazione nel contenitore.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy">
          <source><ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /&gt;</ph> to require that all exports used should be non-shared in the container.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /&gt;</ph> per richiedere che tutte le esportazioni utilizzate siano non condivise nel contenitore.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy">
          <source>In this case, each importer receives a separate instance.</source>
          <target state="translated">In questo caso, ogni utilità di importazione riceve un'istanza separata.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata">
          <source>Gets the metadata names of the export required by the import definition.</source>
          <target state="translated">Ottiene i nomi di metadati dell'esportazione richiesti dalla definizione di importazione.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> objects that contain the metadata names of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects required by the <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph>.</source>
          <target state="translated">Raccolta di oggetti <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> che contengono i nomi di metadati degli oggetti <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> richiesti da <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata">
          <source>The default is an empty <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> collection.</source>
          <target state="translated">Il valore predefinito è una raccolta <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> vuota.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata">
          <source>Overrides of this property should never return <ph id="ph1">`null`</ph> or return an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection that contains an element that is <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Esegue l'override di questa proprietà non devono mai restituire <ph id="ph1">`null`</ph> o restituire un <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> raccolta che contiene un elemento che è <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata">
          <source>If the definition does not contain required metadata, return an empty <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection instead.</source>
          <target state="translated">Se la definizione non contiene i metadati necessari, restituire un oggetto vuoto <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> raccolta invece.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity">
          <source>Gets the expected type of the export that matches this <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph>.</source>
          <target state="translated">Ottiene il tipo previsto dell'esportazione che corrisponde a <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity">
          <source>A string that is generated by calling the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /&gt;</ph> method on the type that this import expects.</source>
          <target state="translated">Stringa generata chiamando il metodo <ph id="ph1">&lt;see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /&gt;</ph> sul tipo previsto da questa importazione.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity">
          <source>If the value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, this import does not expect a particular type.</source>
          <target state="translated">Se il valore è <ph id="ph1">&lt;see langword="null" /&gt;</ph>, questa importazione non prevede un tipo specifico.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString">
          <source>Returns the string representation of this <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph> object.</source>
          <target state="translated">Restituisce la rappresentazione di stringa dell'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph> object.</source>
          <target state="translated">Rappresentazione di stringa dell'oggetto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>