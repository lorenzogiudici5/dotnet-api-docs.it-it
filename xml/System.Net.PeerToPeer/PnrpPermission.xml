<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66595da3de98ede979e14cf91995cf8f2b5988b7" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49147234" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PnrpPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="05f7c-101">Specifica i valori che vengono utilizzati nelle autorizzazioni per gli oggetti di <see cref="N:System.Net.PeerToPeer" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="05f7c-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05f7c-102">Le autorizzazioni predefinite consentano tutte le applicazioni dell'area Intranet di accedere ai servizi PNRP e locale.</span><span class="sxs-lookup"><span data-stu-id="05f7c-102">The default permissions allow all local and Intranet zone applications to access PNRP services.</span></span> <span data-ttu-id="05f7c-103">Se le autorizzazioni predefinite non vengono modificate, tutte le applicazioni locali al collegamento e del sito locale possono accedere ai servizi Peer-to-Peer, ma di applicazioni globali (internet) non hanno accesso.</span><span class="sxs-lookup"><span data-stu-id="05f7c-103">If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</span></span>  
  
 <span data-ttu-id="05f7c-104">Istanze di questo tipo dispongono di due stati di autorizzazione: non hanno accesso alle risorse protette dall'autorizzazione o avere accesso completo senza restrizioni a tali risorse.</span><span class="sxs-lookup"><span data-stu-id="05f7c-104">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink?LinkID=92731">
      <span data-ttu-id="05f7c-105">API del Provider di PNRP Namespace</span>
      <span class="sxs-lookup">
        <span data-stu-id="05f7c-105">PNRP Namespace Provider API</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PnrpPermission : System.Security.Permissions.PermissionState -&gt; System.Net.PeerToPeer.PnrpPermission" Usage="new System.Net.PeerToPeer.PnrpPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="05f7c-106">Uno dei valori dell'enumerazione <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-106">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05f7c-107">Inizializza una nuova istanza della classe <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> con lo stato di autorizzazione iniziale fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-107">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05f7c-108">Istanze di questo tipo dispongono di due stati di autorizzazione: non hanno accesso alle risorse protette dall'autorizzazione o avere accesso completo senza restrizioni a tali risorse.</span><span class="sxs-lookup"><span data-stu-id="05f7c-108">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="05f7c-109">Se `state` Ã¨ senza restrizioni, l'istanza di PnrpPermission passa tutte le richieste.</span><span class="sxs-lookup"><span data-stu-id="05f7c-109">If `state` is Unrestricted, the PnrpPermission instance passes all demands.</span></span> <span data-ttu-id="05f7c-110">Se `state` contiene qualsiasi altro valore, l'istanza di PnrpPermission ha esito negativo di tutte le richieste.</span><span class="sxs-lookup"><span data-stu-id="05f7c-110">If `state` contains any other value, the PnrpPermission instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="pnrpPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05f7c-111">Crea e restituisce una copia identica dell'oggetto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-111">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05f7c-112">Oggetto avente un'interfaccia IPermission la cui istanza contiene una copia dell'istanza corrente di <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-112">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05f7c-113">Una copia di un'autorizzazione rappresenta lo stesso accesso alle risorse come autorizzazione per l'originale.</span><span class="sxs-lookup"><span data-stu-id="05f7c-113">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
 <span data-ttu-id="05f7c-114">Istanze di questo tipo dispongono di due stati di autorizzazione: non hanno accesso alle risorse protette dall'autorizzazione o avere accesso completo senza restrizioni a tali risorse.</span><span class="sxs-lookup"><span data-stu-id="05f7c-114">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="05f7c-115">- Il parametro non Ã¨ un elemento <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-115">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span>
          </span>
          <span data-ttu-id="05f7c-116">- Il numero di versione del parametro non Ã¨ supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-116">-   The parameter's version number is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="05f7c-117">Il parametro Ã¨ un riferimento <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-117">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink?LinkID=92731">
          <span data-ttu-id="05f7c-118">API del Provider di PNRP Namespace</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-118">PNRP Namespace Provider API</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="pnrpPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="05f7c-119">Codifica XML da usare per ricostruire l'autorizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-119">The XML encoding to use to reconstruct the permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05f7c-120">Ricostruisce un oggetto di sicurezza con uno stato specificato da una codifica XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-120">Reconstructs a security object with a specified state from an XML encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05f7c-121">Rappresenta il modello a oggetti XML per la codifica di oggetti di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="05f7c-121">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="05f7c-122">Questa classe non puÃ² essere ereditata.</span><span class="sxs-lookup"><span data-stu-id="05f7c-122">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="05f7c-123">Questa classe Ã¨ destinata a un'implementazione pratica di un modello a oggetti XML semplice da utilizzare all'interno del sistema di sicurezza e non per essere utilizzato come un modello a oggetti XML generale.</span><span class="sxs-lookup"><span data-stu-id="05f7c-123">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="05f7c-124">- Il parametro non Ã¨ un elemento <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-124">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span>
          </span>
          <span data-ttu-id="05f7c-125">- Il numero di versione del parametro non Ã¨ supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-125">-   The parameter's version number is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="05f7c-126">Il parametro Ã¨ un riferimento <see langword="null" /> (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-126">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="05f7c-127">Autorizzazione da intersecare con l'autorizzazione corrente tramite il metodo <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-127">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span>
          </span>
          <span data-ttu-id="05f7c-128">Deve essere dello stesso tipo dell'autorizzazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-128">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05f7c-129">Crea e restituisce un'autorizzazione che rappresenta l'intersezione tra l'oggetto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> corrente e l'autorizzazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-129">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05f7c-130">Nuova autorizzazione che rappresenta l'intersezione fra l'oggetto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> corrente e l'autorizzazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-130">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
          <span data-ttu-id="05f7c-131">Se lâintersezione Ã¨ vuota, la nuova autorizzazione Ã¨ un riferimento <see langword="null" />, ovvero <see langword="Nothing" /> in Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-131">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05f7c-132">L'intersezione delle due autorizzazioni Ã¨ un'autorizzazione che descrive il set di operazioni che hanno in comune.</span><span class="sxs-lookup"><span data-stu-id="05f7c-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="05f7c-133">Solo una richiesta che supera entrambe le autorizzazioni originali passerÃ  l'intersezione.</span><span class="sxs-lookup"><span data-stu-id="05f7c-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="05f7c-134">Le istruzioni seguenti sono necessarie per essere `true` per tutte le implementazioni del metodo Intersect.</span><span class="sxs-lookup"><span data-stu-id="05f7c-134">The following statements are required to be `true` for all implementations of the Intersect method.</span></span> <span data-ttu-id="05f7c-135">X e Y rappresentano <xref:System.Security.IPermission> riferimenti a oggetti che non sono un `null` riferimento (Nothing in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="05f7c-135">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (Nothing in Visual Basic).</span></span>  
  
-   <span data-ttu-id="05f7c-136">Intersect (x) restituisce un valore pari a X.</span><span class="sxs-lookup"><span data-stu-id="05f7c-136">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="05f7c-137">Intersect restituisce lo stesso valore Intersect.</span><span class="sxs-lookup"><span data-stu-id="05f7c-137">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="05f7c-138">X. Intersect (un `null` riferimento (`Nothing` in Visual Basic)) restituisce una `null` riferimento (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="05f7c-138">X.Intersect(a `null` reference (`Nothing` in Visual Basic)) returns a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="05f7c-139">Il parametro di destinazione non Ã¨ un riferimento <see langword="null" /> (ovvero <see langword="Nothing" /> in Visual Basic) e non Ã¨ un'istanza della classe dell'autorizzazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-139">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="pnrpPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="05f7c-140">Autorizzazione da testare per la relazione del subset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-140">A permission that is to be tested for the subset relationship.</span>
          </span>
          <span data-ttu-id="05f7c-141">Questa autorizzazione deve essere dello stesso tipo di quella corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-141">This permission must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05f7c-142">Determina se l'oggetto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> corrente Ã¨ un sottoinsieme dell'autorizzazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-142">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05f7c-143">
            <see langword="True" /> se l'oggetto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> corrente Ã¨ un sottoinsieme dell'autorizzazione specificata. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-143">
              <see langword="True" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05f7c-144">Corrente <xref:System.Net.PeerToPeer.PnrpPermission> Ã¨ un subset dell'autorizzazione specificata, se l'autorizzazione corrente specifica un set di operazioni che Ã¨ completamente contenuto all'autorizzazione specificata.</span><span class="sxs-lookup"><span data-stu-id="05f7c-144">The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="05f7c-145">Ad esempio, un'autorizzazione che rappresenta l'accesso a "*C:\example.txt*"Ã¨ un subset di un'autorizzazione che rappresenta l'accesso a"*c:.\\*".</span><span class="sxs-lookup"><span data-stu-id="05f7c-145">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="05f7c-146">Se questo metodo restituisce `true`, l'autorizzazione corrente non rappresenta un accesso alla risorsa protetta rispetto all'autorizzazione specificata.</span><span class="sxs-lookup"><span data-stu-id="05f7c-146">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="05f7c-147">Le istruzioni seguenti sono necessarie per essere `true` per tutte le implementazioni del metodo IsSubsetOf.</span><span class="sxs-lookup"><span data-stu-id="05f7c-147">The following statements are required to be `true` for all implementations of the IsSubsetOf method.</span></span> <span data-ttu-id="05f7c-148">X, Y e Z rappresentano <xref:System.Security.IPermission> gli oggetti che non sono un `null` riferimento (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="05f7c-148">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="05f7c-149">IsSubsetOf (x) restituisce `true`.</span><span class="sxs-lookup"><span data-stu-id="05f7c-149">X.IsSubsetOf(X) returns `true`.</span></span>  
  
-   <span data-ttu-id="05f7c-150">IsSubsetOf (y) restituisce lo stesso valore IsSubsetOf se e solo se X e Y rappresentano lo stesso set di autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="05f7c-150">X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="05f7c-151">Se IsSubsetOf (y) e y restituiscono entrambi `true`, IsSubsetOf (z) restituisce `true`.</span><span class="sxs-lookup"><span data-stu-id="05f7c-151">If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return `true`, X.IsSubsetOf(Z) returns `true`.</span></span>  
  
-  
  
 <span data-ttu-id="05f7c-152">Se X rappresenta un oggetto vuoto IPermission con uno stato di autorizzazione *None* e Y rappresenta un oggetto IPermission che Ã¨ un `null` riferimento (`Nothing` in Visual Basic), IsSubsetOf (y) restituisce `true`.</span><span class="sxs-lookup"><span data-stu-id="05f7c-152">If X represents an empty IPermission object with a permission state of *None* and Y represents an IPermission object that is a `null` reference (`Nothing` in Visual Basic), X.IsSubsetOf(Y) returns `true`.</span></span> <span data-ttu-id="05f7c-153">Se Z Ã¨ anche un'autorizzazione vuota, l'impostazione composta operazione insiemistica. IsSubsetOf (y) restituisce inoltre `true` perchÃ© il <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> delle due autorizzazioni vuote Ã¨ un'autorizzazione vuota.</span><span class="sxs-lookup"><span data-stu-id="05f7c-153">If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="05f7c-154">Il parametro di destinazione non Ã¨ un riferimento <see langword="null" /> (ovvero <see langword="Nothing" /> in Visual Basic) e non Ã¨ un'istanza della classe dell'autorizzazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-154">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="pnrpPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05f7c-155">Restituisce un valore che specifica se l'oggetto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> corrente Ã¨ senza restrizioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-155">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05f7c-156">
            <see langword="True" /> se l'autorizzazione corrente Ã¨ senza restrizioni; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-156">
              <see langword="True" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05f7c-157">Un'autorizzazione senza restrizioni rappresenta l'accesso a tutte le risorse protette dall'autorizzazione.</span><span class="sxs-lookup"><span data-stu-id="05f7c-157">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="pnrpPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05f7c-158">Crea una codifica XML dell'oggetto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> e del relativo stato corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-158">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05f7c-159">Oggetto <see cref="T:System.Security.SecurityElement" /> contenente una codifica XML dell'autorizzazione che include le eventuali informazioni sullo stato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-159">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="05f7c-160">Autorizzazione da combinare con quella corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-160">A permission to combine with the current permission.</span>
          </span>
          <span data-ttu-id="05f7c-161">Deve essere dello stesso tipo dell'autorizzazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-161">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05f7c-162">Crea un'autorizzazione che rappresenta l'unione tra l'oggetto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> corrente e l'autorizzazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-162">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05f7c-163">Nuova autorizzazione che rappresenta l'unione fra l'oggetto <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> corrente e l'autorizzazione specificata tramite il metodo <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-163">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05f7c-164">Il risultato di una chiamata a <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> Ã¨ un'autorizzazione che rappresenta tutte le operazioni indicate da corrente <xref:System.Net.PeerToPeer.PnrpPermission> e l'autorizzazione specificata.</span><span class="sxs-lookup"><span data-stu-id="05f7c-164">The result of a call to <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.PnrpPermission> and the specified permission.</span></span> <span data-ttu-id="05f7c-165">Qualsiasi richiesta che supera una di queste autorizzazioni passa l'unione.</span><span class="sxs-lookup"><span data-stu-id="05f7c-165">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="05f7c-166">Le istruzioni seguenti sono necessarie per essere `true` per tutte le implementazioni del metodo Union.</span><span class="sxs-lookup"><span data-stu-id="05f7c-166">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="05f7c-167">X e Y rappresentano <xref:System.Security.IPermission> gli oggetti che non sono un `null` riferimento (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="05f7c-167">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="05f7c-168">Union (x) restituisce un oggetto che ha lo stesso valore X.</span><span class="sxs-lookup"><span data-stu-id="05f7c-168">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="05f7c-169">X.Union(Y) restituisce un oggetto che ha lo stesso valore dell'oggetto restituito da Union (x).</span><span class="sxs-lookup"><span data-stu-id="05f7c-169">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="05f7c-170">X. Union (un `null` riferimento (`Nothing` in Visual Basic)) restituisce un oggetto che ha lo stesso valore X.</span><span class="sxs-lookup"><span data-stu-id="05f7c-170">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="05f7c-171">Il parametro <paramref name="target" /> non Ã¨ valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05f7c-171">
              <paramref name="target" /> parameter is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>