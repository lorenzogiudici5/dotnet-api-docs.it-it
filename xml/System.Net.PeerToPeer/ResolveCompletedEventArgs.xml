<Type Name="ResolveCompletedEventArgs" FullName="System.Net.PeerToPeer.ResolveCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb8d300c8d83189282dddde3e76716923e00b8c2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36473592" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResolveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResolveCompletedEventArgs extends System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ResolveCompletedEventArgs&#xA;Inherits AsyncCompletedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResolveCompletedEventArgs : System::ComponentModel::AsyncCompletedEventArgs" />
  <TypeSignature Language="F#" Value="type ResolveCompletedEventArgs = class&#xA;    inherit AsyncCompletedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.AsyncCompletedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Used in conjunction with the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event, which is signaled when a resolve request for a specific <see cref="T:System.Net.PeerToPeer.PeerName" /> has completed.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per utilizzare l'oggetto ResolveCompletedEventArgs, creare un'istanza di un <xref:System.Net.PeerToPeer.PeerNameResolver> dell'oggetto e utilizzare uno dei metodi Resolve. Per l'elaborazione asincrona, utilizzare il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> metodo.  
  
 Quando il sistema di risoluzione ha raggiunto la fine di altri cloud per eseguire query per il <xref:System.Net.PeerToPeer.PeerName>, o raggiunto il numero massimo di registrare le voci per il <xref:System.Net.PeerToPeer.PeerNameRecordCollection> sta costruendo, viene generato l'evento per completare il processo di risoluzione e il delegato associato fa sì che ResolveAsync completamento. L'evento può essere generato anche completamenti anomali, che non restituiscono una raccolta di.  
  
 Questo evento viene generato solo una volta quando sono stati trovati tutti gli endpoint.  
  
 Tutti i riferimenti a questa istanza dell'oggetto di sistema di risoluzione vengano coordinati con un token fornito, ovvero un identificatore univoco e determinato dallo sviluppatore per la richiesta di risoluzione asincrona.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveCompletedEventArgs (System.Net.PeerToPeer.PeerNameRecordCollection peerNameRecordCollection, Exception error, bool canceled, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerNameRecordCollection peerNameRecordCollection, class System.Exception error, bool canceled, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecordCollection,System.Exception,System.Boolean,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveCompletedEventArgs(System::Net::PeerToPeer::PeerNameRecordCollection ^ peerNameRecordCollection, Exception ^ error, bool canceled, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.ResolveCompletedEventArgs : System.Net.PeerToPeer.PeerNameRecordCollection * Exception * bool * obj -&gt; System.Net.PeerToPeer.ResolveCompletedEventArgs" Usage="new System.Net.PeerToPeer.ResolveCompletedEventArgs (peerNameRecordCollection, error, canceled, userToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="peerNameRecordCollection" Type="System.Net.PeerToPeer.PeerNameRecordCollection" />
        <Parameter Name="error" Type="System.Exception" />
        <Parameter Name="canceled" Type="System.Boolean" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerNameRecordCollection">The collection associated with the peer name that was resolved.</param>
        <param name="error">Returns an exception if an error occurred.</param>
        <param name="canceled">
          <see langword="True" /> if the <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation was cancelled, otherwise <see langword="False" />.</param>
        <param name="userToken">The user token specified when a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation was started.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeerNameRecordCollection">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection PeerNameRecordCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerNameRecordCollection PeerNameRecordCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerNameRecordCollection As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerNameRecordCollection ^ PeerNameRecordCollection { System::Net::PeerToPeer::PeerNameRecordCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerNameRecordCollection : System.Net.PeerToPeer.PeerNameRecordCollection" Usage="System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> object to resolve.</summary>
        <value>Il <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> oggetto da risolvere è quello trovato in risposta a un <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operazione su una specifica <see cref="T:System.Net.PeerToPeer.PeerName" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato quando è stata eseguita in tutti i cloud per il nome del peer o quando il numero massimo di record di nomi peer è stato recuperato. Viene generato inserendo la raccolta di record di nome peer nel <xref:System.Net.PeerToPeer.ResolveCompletedEventArgs> argomento dell'evento per cui è in attesa il metodo OnResolveCompleted.  La modifica dello stato si attiva il processo.  
  
 A meno che non venga specificato esplicitamente, il valore predefinito per tutte le proprietà viene `null` per i tipi di riferimento e zero (0) per le proprietà di tipo `int`. Se non sono stati trovati record, `null` viene restituito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>