<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="716f004155c4cf69a79273a19ac1629cb7bf93d0" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48724938" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameResolver" />
  <TypeSignature Language="F#" Value="type PeerNameResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="40a35-101">Specifica i valori che risolvono un <see cref="T:System.Net.PeerToPeer.PeerName" /> in un <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> utilizzando il protocollo dell'API del provider dello spazio dei nomi PNRP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="40a35-101">Specifies the values that resolve a <see cref="T:System.Net.PeerToPeer.PeerName" /> to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP Namespace Provider API protocol.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-102">Oggetto <xref:System.Net.PeerToPeer.PeerNameRecord> che contiene tutte le informazioni per il <xref:System.Net.PeerToPeer.PeerName> che è stato pubblicato nel <xref:System.Net.PeerToPeer.Cloud> o sottoposte a query durante il processo di risoluzione.</span><span class="sxs-lookup"><span data-stu-id="40a35-102">A <xref:System.Net.PeerToPeer.PeerNameRecord> which contains all the information for the <xref:System.Net.PeerToPeer.PeerName> that was published in the <xref:System.Net.PeerToPeer.Cloud> or cloud(s) that were queried during the resolve process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="40a35-103">Inizializza una nuova istanza predefinita della classe <see cref="T:System.Net.PeerToPeer.PeerNameResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-103">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-104">Quando viene risolto correttamente una <xref:System.Net.PeerToPeer.PeerName>, il <xref:System.Net.PeerToPeer.PeerNameRecord> contiene tutte le informazioni per l'oggetto specificato <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> che è stato pubblicato in sottoposte a query durante la <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operazione.</span><span class="sxs-lookup"><span data-stu-id="40a35-104">After successfully resolving a <xref:System.Net.PeerToPeer.PeerName>, the <xref:System.Net.PeerToPeer.PeerNameRecord> contains all the information for the specified <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> that was published in the cloud(s) that were queried during the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveCompleted (e As ResolveCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveCompleted(System::Net::PeerToPeer::ResolveCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveCompleted : System.Net.PeerToPeer.ResolveCompletedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="40a35-105">Oggetto <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> che contiene i dati restituiti dall'evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-105">The <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> object that contains the data returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40a35-106">Restituisce i dati sullo stato della risoluzione dei nomi peer dopo la generazione dell'evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-106">Returns peer resolution data after the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is raised.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-107">Questo metodo è una richiamata asincrona usata per elaborare i dati di risoluzione del nome peer dopo la risoluzione dei peer è stata completata.</span><span class="sxs-lookup"><span data-stu-id="40a35-107">This method is an asynchronous callback used to process peer name resolution data after peer resolution has completed.</span></span>  
  
 <span data-ttu-id="40a35-108">I tipi derivati possono eseguire l'override di questo metodo per eseguire altre attività quando il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento viene generato dall'oggetto resolver peer.</span><span class="sxs-lookup"><span data-stu-id="40a35-108">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised by the peer resolver object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveProgressChanged (e As ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveProgressChanged(System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveProgressChanged : System.Net.PeerToPeer.ResolveProgressChangedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="40a35-109">Oggetto <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> che contiene informazioni sullo stato della risoluzione dei nomi peer restituite dall'evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-109">
              <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> object that contains peer name resolution progress information returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40a35-110">Restituisce i dati sullo stato della risoluzione dei nomi peer quando viene generato l'evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-110">Returns peer resolution progress data when the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event is raised.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-111">Questo metodo è un callback asincrono utilizzato per elaborare i dati di risoluzione dei peer dopo che lo stato di avanzamento di peer la risoluzione è stato richiesto.</span><span class="sxs-lookup"><span data-stu-id="40a35-111">This method is an asynchronous callback used to process peer resolution data after peer resolution progress has been requested.</span></span>  
  
 <span data-ttu-id="40a35-112">I tipi derivati possono eseguire l'override di questo metodo per eseguire altre attività quando il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento si verifica.</span><span class="sxs-lookup"><span data-stu-id="40a35-112">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="40a35-113">Quando si esegue l'override di questo metodo in un tipo derivato, assicurarsi di chiamare il tipo di base <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="40a35-113">When overriding this method in a derived type, be sure to call the base type's <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="40a35-114">Risolve un oggetto <see cref="T:System.Net.PeerToPeer.PeerName" /> in un <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> utilizzando il protocollo PNRP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-114">Resolves a <see cref="T:System.Net.PeerToPeer.PeerName" /> object to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-115">Questo metodo consente di associare i nomi di peer a cloud.</span><span class="sxs-lookup"><span data-stu-id="40a35-115">This method associates peer names to clouds.</span></span> <span data-ttu-id="40a35-116">Chiama il <xref:System.Net.PeerToPeer.PeerNameResolver> metodo è simile alla chiamata il <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> metodo per ciascun record di nome peer nel <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span><span class="sxs-lookup"><span data-stu-id="40a35-116">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="40a35-117">Si noti che usando il metodo di risoluzione in un record di nome peer singoli non invalida la risoluzione di più nomi di peer.</span><span class="sxs-lookup"><span data-stu-id="40a35-117">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="40a35-118">Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> metodo, è un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-118">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="40a35-119">Sono identici nei parametri che vengono passati, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema nell'elenco dei parametri per la gestione degli eventi asincroni.</span><span class="sxs-lookup"><span data-stu-id="40a35-119">They are identical in the parameters they are passed, except that the ResolveAsync method includes a system token in its parameter list for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="40a35-120">Se il <xref:System.Net.PeerToPeer.Cloud> parametro viene omesso, il metodo Usa il <xref:System.Net.PeerToPeer.Cloud.Available> scelta rapida per specificare i parametri di cloud.</span><span class="sxs-lookup"><span data-stu-id="40a35-120">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  <span data-ttu-id="40a35-121">Se il `maxRecords` manca il parametro, il valore predefinito zero comporta un <xref:System.ArgumentOutOfRangeException> dell'eccezione.</span><span class="sxs-lookup"><span data-stu-id="40a35-121">If the `maxRecords` parameter is missing, the default value of zero causes an <xref:System.ArgumentOutOfRangeException> exception to be thrown.</span></span>  
  
 <span data-ttu-id="40a35-122">Questo evento verrà generato anche se l'operazione di risoluzione viene completata in errore o viene annullata.</span><span class="sxs-lookup"><span data-stu-id="40a35-122">This event will also be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="40a35-123">Oggetto <see cref="T:System.Net.PeerToPeer.PeerName" /> da risolvere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-123">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40a35-124">Risolve l'oggetto <see cref="T:System.Net.PeerToPeer.PeerName" /> specificato contenuto in tutte le aree note al peer chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-124">Resolves the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40a35-125">Oggetto <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> contenente tutti i record di nome peer (rappresentati come oggetti <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />) associati al nome peer specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-125">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span>
          </span>
          <span data-ttu-id="40a35-126">Un <see cref="T:System.Net.PeerToPeer.PeerName" /> non protetto può essere registrato da più utenti nello stesso oggetto <see cref="T:System.Net.PeerToPeer.Cloud" /> e associato a endpoint distinti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-126">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-127">Questo metodo associa un nome di peer a cloud.</span><span class="sxs-lookup"><span data-stu-id="40a35-127">This method associates a peer name to clouds.</span></span> <span data-ttu-id="40a35-128">Tutti i cloud vengono sottoposti a query per il <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="40a35-128">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="40a35-129">Se il nome peer non può essere risolto o viene `null`, un <xref:System.Net.PeerToPeer.PeerToPeerException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="40a35-129">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="40a35-130">Per i nomi di peer non protetti, lo stesso nome può essere registrato (e associato con endpoint diversi) dai peer diversi nell'ambito del cloud stesso.</span><span class="sxs-lookup"><span data-stu-id="40a35-130">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="40a35-131">Chiama il <xref:System.Net.PeerToPeer.PeerNameResolver> metodo è simile alla chiamata il <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> metodo per ciascun record di nome peer nel <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span><span class="sxs-lookup"><span data-stu-id="40a35-131">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="40a35-132">Si noti che usando il metodo di risoluzione in un record di nome peer singoli non invalida la risoluzione di più nomi di peer.</span><span class="sxs-lookup"><span data-stu-id="40a35-132">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="40a35-133">Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> metodo, è un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-133">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="40a35-134">Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni.</span><span class="sxs-lookup"><span data-stu-id="40a35-134">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="40a35-135">Se il <xref:System.Net.PeerToPeer.Cloud> parametro viene omesso, il metodo Usa il <xref:System.Net.PeerToPeer.Cloud.Available> scelta rapida per specificare i parametri di cloud.</span><span class="sxs-lookup"><span data-stu-id="40a35-135">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 <span data-ttu-id="40a35-136">Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento verrà generato se l'operazione di risoluzione viene completata in errore o viene annullata.</span><span class="sxs-lookup"><span data-stu-id="40a35-136">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40a35-137">L'esempio di codice seguente illustra come risolvere un <xref:System.Net.PeerToPeer.PeerName> pubblicate in una qualsiasi <xref:System.Net.PeerToPeer.Cloud>.</span><span class="sxs-lookup"><span data-stu-id="40a35-137">The following code example illustrates how to resolve a <xref:System.Net.PeerToPeer.PeerName> published in any <xref:System.Net.PeerToPeer.Cloud>.</span></span>  
  
 [!code-csharp[NCLPNRPPeerNameResolver#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40a35-138">Il parametro <paramref name="peerName" /> viene impostato su <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-138">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="40a35-139">Non è stato possibile risolvere il nome peer specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-139">The peer name specified cannot be resolved.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="40a35-140">Oggetto <see cref="T:System.Net.PeerToPeer.PeerName" /> da risolvere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-140">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="40a35-141">Numero massimo di oggetti <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> da ottenere da tutti gli oggetti <see cref="T:System.Net.PeerToPeer.Cloud" /> relativi all'oggetto <c>peerName</c> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-141">The maximum number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects to obtain from all <see cref="T:System.Net.PeerToPeer.Cloud" /> objects for the supplied <c>peerName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40a35-142">Risolve il nome peer specificato in tutte le aree note al peer chiamante, restituendo al massimo il numero specificato di oggetti <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-142">Resolves the specified peer name in all clouds known to the calling peer, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40a35-143">Oggetto <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> contenente un numero di voci minore o uguale al valore specificato in <paramref name="maxRecords" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-143">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span>
          </span>
          <span data-ttu-id="40a35-144">Questo insieme contiene i record di nome peer associati all'oggetto <see cref="T:System.Net.PeerToPeer.PeerName" /> risolto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-144">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-145">Questo metodo associa un nome di peer a cloud.</span><span class="sxs-lookup"><span data-stu-id="40a35-145">This method associates a peer name to clouds.</span></span> <span data-ttu-id="40a35-146">Tutti i cloud vengono interrogati per il nome peer.</span><span class="sxs-lookup"><span data-stu-id="40a35-146">All clouds are queried for the peer name.</span></span> <span data-ttu-id="40a35-147">Per i nomi di peer non protetti, lo stesso nome di peer può essere registrato da utenti diversi nello stesso <xref:System.Net.PeerToPeer.Cloud>e associato con endpoint diversi.</span><span class="sxs-lookup"><span data-stu-id="40a35-147">For unsecured peer names, the same peer name can be registered by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints.</span></span> <span data-ttu-id="40a35-148">Se il <xref:System.Net.PeerToPeer.PeerName> non può essere risolto (ad esempio, il nome peer non è pubblicato) un <xref:System.Net.PeerToPeer.PeerToPeerException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="40a35-148">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (for example, the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="40a35-149">Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> metodo, è un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-149">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="40a35-150">Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni.</span><span class="sxs-lookup"><span data-stu-id="40a35-150">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="40a35-151">Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento verrà generato se l'operazione di risoluzione viene completata in errore o viene annullata.</span><span class="sxs-lookup"><span data-stu-id="40a35-151">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40a35-152">Il parametro <paramref name="peerName" /> viene impostato su <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-152">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="40a35-153">Il parametro <paramref name="maxRecords" /> è minore o uguale a zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-153">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="40a35-154">Non è stato possibile risolvere il nome peer fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-154">The supplied peer name cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="40a35-155">Oggetto <see cref="T:System.Net.PeerToPeer.PeerName" /> da risolvere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-155">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="40a35-156">Oggetto <see cref="T:System.Net.PeerToPeer.Cloud" /> contenente il nome peer da risolvere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-156">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the peer name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40a35-157">Risolve l'oggetto <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> specificato contenuto nell'oggetto <see cref="T:System.Net.PeerToPeer.Cloud" /> indicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-157">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40a35-158">Oggetto <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> contenente tutti i record di nome peer (rappresentati come oggetti <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />) associati al nome peer specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-158">
              <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span>
          </span>
          <span data-ttu-id="40a35-159">Un <see cref="T:System.Net.PeerToPeer.PeerName" /> non protetto può essere registrato da più utenti nello stesso oggetto <see cref="T:System.Net.PeerToPeer.Cloud" /> e associato a endpoint distinti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-159">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-160">Se il <xref:System.Net.PeerToPeer.PeerName> non può essere risolto (ad esempio, il nome peer non è pubblicato) un <xref:System.Net.PeerToPeer.PeerToPeerException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="40a35-160">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (i.e., the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="40a35-161">Per i nomi di peer non protetti, lo stesso nome può essere registrato (e associato con endpoint diversi) dai peer diversi nell'ambito del cloud stesso.</span><span class="sxs-lookup"><span data-stu-id="40a35-161">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="40a35-162">Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> metodo, è un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-162">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="40a35-163">Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni.</span><span class="sxs-lookup"><span data-stu-id="40a35-163">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="40a35-164">Se il <xref:System.Net.PeerToPeer.Cloud> parametro è `null`, il <xref:System.Net.PeerToPeer.PeerNameResolver> utilizza il <xref:System.Net.PeerToPeer.Cloud.Available> scelta rapida per inserire il <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="40a35-164">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="40a35-165">Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento verrà generato se l'operazione di risoluzione viene completata in errore o viene annullata.</span><span class="sxs-lookup"><span data-stu-id="40a35-165">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40a35-166">Il parametro <paramref name="peerName" /> viene impostato su <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-166">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="40a35-167">Non è stato possibile risolvere il nome peer fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-167">The supplied peer name cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="40a35-168">Oggetto <see cref="T:System.Net.PeerToPeer.PeerName" /> da risolvere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-168">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="40a35-169">Oggetto <see cref="T:System.Net.PeerToPeer.Cloud" /> nel quale risolvere <c>peerName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-169">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <c>peerName</c>.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="40a35-170">Numero massimo di oggetti record di nome peer da ottenere dall'area specificata per l'oggetto <c>peerName</c> indicato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-170">The maximum number of peer name record objects to obtain from the specified cloud for the specified <c>peerName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40a35-171">Risolve l'oggetto <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> specificato contenuto nell'oggetto <see cref="T:System.Net.PeerToPeer.Cloud" /> indicato, restituendo al massimo il numero specificato di oggetti <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-171">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40a35-172">Oggetto <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> contenente un numero di voci minore o uguale al valore specificato in <paramref name="maxRecords" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-172">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span>
          </span>
          <span data-ttu-id="40a35-173">Questo insieme contiene i record di nome peer associati all'oggetto <see cref="T:System.Net.PeerToPeer.PeerName" /> risolto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-173">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-174">Per i nomi di peer non protetti, lo stesso nome può essere registrato (e associato con endpoint diversi) dai peer diversi nell'ambito del cloud stesso.</span><span class="sxs-lookup"><span data-stu-id="40a35-174">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="40a35-175">Se il nome peer non può essere risolto, un <xref:System.Net.PeerToPeer.PeerToPeerException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="40a35-175">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="40a35-176">Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> metodo, è un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-176">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="40a35-177">Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni.</span><span class="sxs-lookup"><span data-stu-id="40a35-177">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="40a35-178">Se il <xref:System.Net.PeerToPeer.Cloud> parametro è `null`, il <xref:System.Net.PeerToPeer.PeerNameResolver> utilizza il <xref:System.Net.PeerToPeer.Cloud.Available> scelta rapida per inserire il <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="40a35-178">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="40a35-179">Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento verrà generato se l'operazione di risoluzione viene completata in errore o viene annullata.</span><span class="sxs-lookup"><span data-stu-id="40a35-179">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40a35-180">Il parametro <paramref name="peerName" /> viene impostato su <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-180">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="40a35-181">Il parametro <paramref name="maxRecords" /> è minore o uguale a zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-181">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="40a35-182">Non è stato possibile risolvere il nome peer fornito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-182">The supplied peer name cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="40a35-183">Questi metodi avviano un'operazione di risoluzione asincrona per l'oggetto <see cref="T:System.Net.PeerToPeer.PeerName" /> specificato in tutte le aree note al peer chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-183">These methods begin an asynchronous resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-184">Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> metodo, è un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> metodo, che viene usato quando è necessaria l'elaborazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="40a35-184">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, which is used when asynchronous processing is required.</span></span>  <span data-ttu-id="40a35-185">Sono identici nei parametri che vengono passati, ad eccezione del fatto che ResolveAsync include un token di sistema nell'elenco dei parametri per la gestione degli eventi.</span><span class="sxs-lookup"><span data-stu-id="40a35-185">They are identical in the parameters they are passed, except that ResolveAsync includes a system token in its parameter list for event handling.</span></span>  
  
 <span data-ttu-id="40a35-186">Se si verifica una mancata corrispondenza del parametro tra il metodo di risoluzione e il metodo ResolveAsync e il <xref:System.Net.PeerToPeer.Cloud> parametro viene omesso, il metodo Usa il <xref:System.Net.PeerToPeer.Cloud.Available> scelta rapida per specificare i parametri di cloud.</span><span class="sxs-lookup"><span data-stu-id="40a35-186">If a parameter mismatch occurs between the Resolve method and the ResolveAsync method, and the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="40a35-187">Oggetto <see cref="T:System.Net.PeerToPeer.PeerName" /> da risolvere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-187">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="40a35-188">Oggetto definito dall'utente che contiene le informazioni sullo stato dell'operazione di risoluzione del nome peer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-188">A user-defined object that contains state information about the peer name resolution operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40a35-189">Inizia un'operazione asincrona di risoluzione del nome peer per l'oggetto <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> specificato in tutte le aree cloud note al peer chiamante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-189">Begins an asynchronous peer name resolution operation for the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in all clouds known to the calling peer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-190">Questo metodo associa in modo asincrono un nome di peer a cloud.</span><span class="sxs-lookup"><span data-stu-id="40a35-190">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="40a35-191">Tutti i cloud vengono sottoposti a query per il <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="40a35-191">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="40a35-192">Genera il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, che richiama la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-192">It raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="40a35-193">In alternativa, genera il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, che richiama il il <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-193">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="40a35-194">Se il nome peer non può essere risolto, un <xref:System.Net.PeerToPeer.PeerToPeerException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="40a35-194">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="40a35-195">Per i nomi di peer non protetti, lo stesso nome può essere registrato (e associato con endpoint diversi) dai peer diversi nell'ambito del cloud stesso.</span><span class="sxs-lookup"><span data-stu-id="40a35-195">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="40a35-196">Chiama il <xref:System.Net.PeerToPeer.PeerNameResolver> metodo è simile alla chiamata il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> metodo per ciascun record di nome peer nel <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span><span class="sxs-lookup"><span data-stu-id="40a35-196">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="40a35-197">Si noti che usando il metodo di risoluzione in un record di nome peer singoli non invalida la risoluzione di più nomi di peer.</span><span class="sxs-lookup"><span data-stu-id="40a35-197">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="40a35-198">Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> metodo, è un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-198">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="40a35-199">Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni e il metodo di risoluzione è pensato per l'elaborazione sincrona.</span><span class="sxs-lookup"><span data-stu-id="40a35-199">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="40a35-200">Tutti i riferimenti asincroni per l'oggetto di sistema di risoluzione sono coordinati con un token di identificatore univoco.</span><span class="sxs-lookup"><span data-stu-id="40a35-200">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="40a35-201">Ciò `userState` token o identificatore di messaggio consente a un sistema operativo recapitare un messaggio a un singolo processo ricevente dopo che il messaggio è stato inserito nella coda di messaggi.</span><span class="sxs-lookup"><span data-stu-id="40a35-201">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="40a35-202">Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento verrà generato se l'operazione di risoluzione viene completata in errore o viene annullata.</span><span class="sxs-lookup"><span data-stu-id="40a35-202">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40a35-203">Uno o entrambi i parametri <paramref name="peerName" /> e <paramref name="userState" /> sono impostati su <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-203">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="40a35-204">Oggetto <see cref="T:System.Net.PeerToPeer.PeerName" /> da risolvere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-204">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="40a35-205">Numero massimo di record da ottenere per il nome peer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-205">The maximum number of records to obtain for the Peer Name.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="40a35-206">Oggetto definito dall'utente che contiene informazioni sull'operazione di risoluzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-206">A user-defined object that contains information about the resolve operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40a35-207">Inizia un'operazione asincrona di risoluzione del nome peer per l'oggetto <see cref="T:System.Net.PeerToPeer.PeerName" /> specificato in tutte le aree cloud note al peer chiamante, restituendo un numero di voci per il nome peer non superiore al valore <paramref name="maxRecords" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-207">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer, returning no more than <paramref name="maxRecords" /> entries for the peer name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-208">Questo metodo associa in modo asincrono un nome di peer a cloud.</span><span class="sxs-lookup"><span data-stu-id="40a35-208">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="40a35-209">Tutti i cloud vengono sottoposti a query per il <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="40a35-209">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="40a35-210">Per i nomi di peer non protetti, lo stesso nome può essere registrato (e associato con endpoint diversi) dai peer diversi nell'ambito del cloud stesso.</span><span class="sxs-lookup"><span data-stu-id="40a35-210">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="40a35-211">Se il nome peer non può essere risolto o viene `null`, un <xref:System.Net.PeerToPeer.PeerToPeerException> viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="40a35-211">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="40a35-212">Questo metodo genera le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, che richiama la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-212">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="40a35-213">In alternativa, genera il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, che richiama il il <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-213">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="40a35-214">Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> metodo, è un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-214">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="40a35-215">Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni e il metodo di risoluzione è pensato per l'elaborazione sincrona.</span><span class="sxs-lookup"><span data-stu-id="40a35-215">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="40a35-216">Tutti i riferimenti asincroni per l'oggetto di sistema di risoluzione sono coordinati con un token di identificatore univoco <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="40a35-216">All asynchronous references to the resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="40a35-217">Ciò `userState` token o identificatore di messaggio consente a un sistema operativo recapitare un messaggio a un singolo processo ricevente dopo che il messaggio è stato inserito nella coda di messaggi.</span><span class="sxs-lookup"><span data-stu-id="40a35-217">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="40a35-218">Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento verrà generato se l'operazione di risoluzione viene completata in errore o viene annullata.</span><span class="sxs-lookup"><span data-stu-id="40a35-218">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40a35-219">Uno o entrambi i parametri <paramref name="peerName" /> e <paramref name="userState" /> sono impostati su <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-219">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="40a35-220">Il parametro <paramref name="maxRecords" /> è minore o uguale a zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-220">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="40a35-221">Oggetto <see cref="T:System.Net.PeerToPeer.PeerName" /> da risolvere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-221">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="40a35-222">Oggetto <see cref="T:System.Net.PeerToPeer.Cloud" /> nel quale risolvere <c>peerName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-222">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <c>peerName</c>.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="40a35-223">Istanza di <see cref="T:System.Object" /> definita dall'utente che contiene le informazioni sull'operazione di risoluzione del nome peer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-223">A user-defined <see cref="T:System.Object" /> that contains information about the peer name resolution operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40a35-224">Inizia un'operazione asincrona di risoluzione del nome peer per l'oggetto <see cref="T:System.Net.PeerToPeer.PeerName" /> specificato nel <see cref="T:System.Net.PeerToPeer.Cloud" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-224">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-225">Questo metodo genera le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, che richiama la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-225">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="40a35-226">In alternativa, genera il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, che richiama il il <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-226">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="40a35-227">Per i nomi di peer non protetti, lo stesso nome può essere registrato (e associato con endpoint diversi) dai peer diversi nell'ambito del cloud stesso.</span><span class="sxs-lookup"><span data-stu-id="40a35-227">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="40a35-228">Se il <xref:System.Net.PeerToPeer.Cloud> parametro è `null`, il nome viene risolto usando la <xref:System.Net.PeerToPeer.Cloud.Available> collegamento, in cui Inizializza i valori predefiniti per il <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="40a35-228">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="40a35-229">Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> metodo, è un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-229">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="40a35-230">Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni e il metodo di risoluzione è pensato per l'elaborazione sincrona.</span><span class="sxs-lookup"><span data-stu-id="40a35-230">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="40a35-231">Tutti i riferimenti asincroni per l'oggetto di sistema di risoluzione sono coordinati con un token di identificatore univoco.</span><span class="sxs-lookup"><span data-stu-id="40a35-231">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="40a35-232">Ciò `userState` token o identificatore di messaggio consente a un sistema operativo recapitare un messaggio a un singolo processo ricevente dopo che il messaggio è stato inserito nella coda di messaggi.</span><span class="sxs-lookup"><span data-stu-id="40a35-232">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="40a35-233">Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento verrà generato se l'operazione di risoluzione viene completata in errore o viene annullata.</span><span class="sxs-lookup"><span data-stu-id="40a35-233">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40a35-234">Uno o entrambi i parametri <paramref name="peerName" /> e <paramref name="userState" /> sono impostati su <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-234">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="40a35-235">Elemento <c>peerName</c> da risolvere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-235">The <c>peerName</c> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="40a35-236">Elemento <c>cloud</c> nel quale risolvere <c>peerName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-236">The <c>cloud</c> in which to resolve <c>peerName</c>.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="40a35-237">Numero massimo di record da ottenere da <c>cloud</c> per <c>peerName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-237">The maximum number of records to obtain from <c>cloud</c> for <c>peerName</c>.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="40a35-238">Oggetto definito dall'utente che contiene le informazioni sullo stato dell'operazione di risoluzione del nome peer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-238">A user-defined object that contains information about the peer name resolution operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40a35-239">Inizia un'operazione asincrona di risoluzione del nome peer per l'oggetto <see cref="T:System.Net.PeerToPeer.PeerName" /> specificato nel <see cref="T:System.Net.PeerToPeer.Cloud" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-239">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
          <span data-ttu-id="40a35-240">L'operazione risolverà non più di <paramref name="maxRecords" /> voci per il nome peer specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-240">The resolution operation will resolve no more than <paramref name="maxRecords" /> entries for the specified peer name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-241">Per i nomi di peer non protetti, lo stesso nome può essere registrato (e associato con endpoint diversi) dai peer diversi nell'ambito del cloud stesso.</span><span class="sxs-lookup"><span data-stu-id="40a35-241">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="40a35-242">Questo metodo genera le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, che richiama la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-242">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="40a35-243">In alternativa, genera il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, che richiama il il <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-243">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="40a35-244">Se il <xref:System.Net.PeerToPeer.Cloud> parametro è `null`, il nome viene risolto usando la <xref:System.Net.PeerToPeer.Cloud.Available> collegamento, in cui Inizializza i valori predefiniti per il <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="40a35-244">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="40a35-245">Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> metodo, è un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="40a35-245">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="40a35-246">Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni e il metodo di risoluzione è pensato per l'elaborazione sincrona.</span><span class="sxs-lookup"><span data-stu-id="40a35-246">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="40a35-247">Tutti i riferimenti asincroni per l'oggetto resolver del peer vengono coordinati con un token di identificatore univoco <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="40a35-247">All asynchronous references to the peer resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="40a35-248">Ciò `userState` token o identificatore di messaggio consente a un sistema operativo recapitare un messaggio a un singolo processo ricevente dopo che il messaggio è stato inserito nella coda di messaggi.</span><span class="sxs-lookup"><span data-stu-id="40a35-248">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="40a35-249">Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento verrà generato se l'operazione di risoluzione viene completata in errore o viene annullata.</span><span class="sxs-lookup"><span data-stu-id="40a35-249">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40a35-250">Uno o entrambi i parametri <paramref name="peerName" /> e <paramref name="userState" /> sono impostati su <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-250">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="40a35-251">Uno o più parametri specificati non sono validi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-251">One or more supplied parameters are invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="40a35-252">Il completamento di questa operazione richiede almeno un gestore eventi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-252">Successful completion of this operation requires at least one event handler.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="40a35-253">Il parametro <paramref name="maxRecords" /> è minore o uguale a zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-253">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsyncCancel (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsyncCancel(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsyncCancel : obj -&gt; unit" Usage="peerNameResolver.ResolveAsyncCancel userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">
          <span data-ttu-id="40a35-254">Oggetto fornito all'istanza del metodo <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> che ha avviato l'operazione di risoluzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-254">The object provided to the <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> method instance which started the resolve operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40a35-255">Annulla la richiesta di risoluzione del nome peer asincrona specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-255">Cancels the specified asynchronous peer name resolution request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-256">Chiamare questo metodo garantisce che il sistema non tenterà di ottenere il record aggiuntivi per l'oggetto specificato <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="40a35-256">Calling this method guarantees the system will not attempt to obtain additional records for the specified <xref:System.Net.PeerToPeer.PeerName>.</span></span>  <span data-ttu-id="40a35-257">Se questo metodo viene chiamato quando un'operazione di risoluzione del nome peer asincrona non è in attesa, funge da "Nessuna operazione" (NO OP).</span><span class="sxs-lookup"><span data-stu-id="40a35-257">If this method is called when an asynchronous peer name resolution operation is not outstanding, it acts as a "no operation" (NO OP).</span></span>  
  
 <span data-ttu-id="40a35-258">Il `userState` oggetto deve essere fornito perché è usato per tenere traccia di una chiamata asincrona specifica quando sono più chiamate in corso.</span><span class="sxs-lookup"><span data-stu-id="40a35-258">The `userState` object must be provided since it is used to track a specific asynchronous call when multiple calls are in progress.</span></span> <span data-ttu-id="40a35-259">L'oggetto fornito dal chiamante è univoco per ogni richiesta di risoluzione del nome peer.</span><span class="sxs-lookup"><span data-stu-id="40a35-259">This caller-supplied object is unique for each peer name resolution request.</span></span>  
  
 <span data-ttu-id="40a35-260">Questo metodo restituirà immediatamente, ma l'operazione potrebbe o non potrebbero essere annullati immediatamente.</span><span class="sxs-lookup"><span data-stu-id="40a35-260">This method will return immediately, but the operation may or may not immediately cancel.</span></span> <span data-ttu-id="40a35-261">Gli argomenti dell'evento restituiti dal <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento contiene un campo che può essere sottoposto a polling dai client per determinare se si è verificato l'annullamento.</span><span class="sxs-lookup"><span data-stu-id="40a35-261">The event arguments returned by the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event contains a field which can be polled by clients to determine whether cancellation occurred.</span></span>  
  
 <span data-ttu-id="40a35-262">Chiamare questo metodo assicura che l'evento ResolveCompleted verrà segnalato quanto prima con l'argomento dell'evento <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="40a35-262">Calling this method ensures the ResolveCompleted event will be signaled as soon as possible with the event argument <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40a35-263">I parametri <paramref name="userState" /> non possono essere <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-263">The <paramref name="userState" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompleted As EventHandler(Of ResolveCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveCompletedEventArgs ^&gt; ^ ResolveCompleted;" />
      <MemberSignature Language="F#" Value="member this.ResolveCompleted : EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " Usage="member this.ResolveCompleted : System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40a35-264">L'evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> viene segnalato al completamento di una richiesta di risoluzione del nome peer per una proprietà <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> specifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-264">The <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is signaled when a peer name resolution request for a specific <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-265">Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento verrà generato una volta per ogni endpoint è stato trovato e questo evento verrà generato solo una volta quando sono stati trovati tutti gli endpoint.</span><span class="sxs-lookup"><span data-stu-id="40a35-265">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event will be raised once for each endpoint found, and this event will be raised only once when all endpoints have been found.</span></span>  
  
 <span data-ttu-id="40a35-266">Questo evento verrà generato anche se il <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operazione viene completata in errore o viene annullata.</span><span class="sxs-lookup"><span data-stu-id="40a35-266">This event will also be raised if the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveProgressChanged As EventHandler(Of ResolveProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^&gt; ^ ResolveProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ResolveProgressChanged : EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " Usage="member this.ResolveProgressChanged : System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40a35-267">Questo evento viene segnalato ogni volta che un oggetto <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> viene trovato in risposta a un'operazione <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> per uno specifico <see cref="T:System.Net.PeerToPeer.PeerName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40a35-267">This event is signaled whenever a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object is found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation for a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40a35-268">Se più <xref:System.Net.PeerToPeer.PeerName> esistono oggetti di sottoposte, questo evento viene segnalato una sola volta per ogni <xref:System.Net.PeerToPeer.PeerNameRecord> trovato.</span><span class="sxs-lookup"><span data-stu-id="40a35-268">If multiple <xref:System.Net.PeerToPeer.PeerName> objects exist in the cloud(s) being queried, this event is signaled once for each <xref:System.Net.PeerToPeer.PeerNameRecord> found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>