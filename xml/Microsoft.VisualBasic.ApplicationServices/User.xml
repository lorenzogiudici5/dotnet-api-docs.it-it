<Type Name="User" FullName="Microsoft.VisualBasic.ApplicationServices.User">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f13b0cc78a13a6a24c031fc6dfa4c006c336f6e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37714994" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class User" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi User extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.User" />
  <TypeSignature Language="VB.NET" Value="Public Class User" />
  <TypeSignature Language="C++ CLI" Value="public ref class User" />
  <TypeSignature Language="F#" Value="type User = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce l'accesso alle informazioni sull'utente corrente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le proprietà e metodi esposti dal `My.User` oggetto forniscono accesso alle informazioni sull'utente corrente. Il significato di "utente corrente" si differenzia leggermente tra le applicazioni Windows e Web. In un'applicazione Windows, l'utente corrente è l'utente che esegue l'applicazione. In un'applicazione Web, l'utente corrente è l'utente che accede all'applicazione.  
  
 Il `My.User` proprietà fornisce inoltre l'accesso per il <xref:System.Security.Principal.IPrincipal> per l'utente corrente. Un oggetto principal rappresenta il contesto di sicurezza dell'utente, compresa l'identità dell'utente e tutti i ruoli a cui appartiene l'utente.  
  
 Per le applicazioni di Windows, questa proprietà fornisce la stessa funzionalità di <xref:System.Threading.Thread.CurrentPrincipal%2A> proprietà. Per le applicazioni Web, questa proprietà fornisce la stessa funzionalità di <xref:System.Web.HttpContext.User%2A> proprietà dell'oggetto restituito dal <xref:System.Web.HttpContext.Current%2A> proprietà.  
  
> [!NOTE]
>  Per le applicazioni di Windows, solo i progetti compilati **applicazione di Windows** initialize modello il `My.User` oggetto per impostazione predefinita. In tutti gli altri tipi di progetto di Windows, è necessario inizializzare il `My.User` chiamando il <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A> metodo in modo esplicito o assegnando un valore a <xref:System.Threading.Thread.CurrentPrincipal%2A>.  
  
> [!NOTE]
>  Il `My.User` oggetto non è possibile restituire informazioni relative all'utente di Windows corrente quando viene eseguito in Windows 95 e Windows 98, perché questi sistemi operativi non supportano il concetto di un utente connesso. È necessario implementare l'autenticazione personalizzata per utilizzare il `My.User` oggetti in questi sistemi operativi.  
  
   
  
## Examples  
 In questo esempio controlla se l'applicazione utilizza l'autenticazione personalizzata o Windows e Usa tali informazioni per analizzare il `My.User.Name` proprietà.  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="P:System.Web.HttpContext.User" />
    <altmember cref="P:System.Web.HttpContext.Current" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public User ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; User();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le proprietà e metodi esposti dal `My.User` oggetto forniscono accesso alle informazioni sull'utente corrente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal CurrentPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ CurrentPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto Principal corrente (per la sicurezza basata sui ruoli).</summary>
        <value>Interfaccia <see cref="T:System.Security.Principal.IPrincipal" /> che rappresenta il contesto per la sicurezza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile impostare il `My.User.CurrentPrincipal` proprietà a un oggetto che implementa il <xref:System.Security.Principal.IPrincipal> interfaccia per abilitare l'autenticazione personalizzata.  
  
 Nella maggior parte dei tipi di progetto, questa proprietà ottiene e imposta l'oggetto principal del thread corrente. In un'applicazione ASP.NET, questa proprietà ottiene e imposta le informazioni di sicurezza per l'identità utente della richiesta HTTP corrente.  
  
 Si tratta di un membro avanzato. non è visibile in IntelliSense a meno che non si fa clic sul **tutti** scheda.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|**Sì**|  
|Servizio Windows|**Sì**|  
|Sito Web|**Sì**|  
  
   
  
## Examples  
 In questo esempio controlla se l'applicazione utilizza l'autenticazione personalizzata o Windows e Usa tali informazioni per analizzare `My.User.Name` proprietà.  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Il chiamante non ha l'autorizzazione necessaria per impostare l'entità.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Descrive un set di autorizzazioni di sicurezza applicato al codice. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
      </Docs>
    </Member>
    <Member MemberName="InitializeWithWindowsUser">
      <MemberSignature Language="C#" Value="public void InitializeWithWindowsUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void InitializeWithWindowsUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeWithWindowsUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeWithWindowsUser();" />
      <MemberSignature Language="F#" Value="member this.InitializeWithWindowsUser : unit -&gt; unit" Usage="user.InitializeWithWindowsUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imposta l'oggetto Principal corrente del thread sull'utente di Windows che ha avviato l'applicazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare il `My.User.InitializeWithWindowsUser` metodo per impostare l'oggetto principal del thread corrente per l'utente di Windows che ha avviato l'applicazione. Per impostazione predefinita, il modello di applicazione Visual Basic in un'applicazione Windows chiama questo metodo all'avvio. In altri tipi di progetto, è necessario impostare l'oggetto principal del thread corrente chiamando questo metodo in modo esplicito o assegnando un valore a <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>.  
  
 Nei progetti di Windows, il `My.User` oggetto si basa sull'oggetto principal del thread corrente; pertanto, questo metodo può modificare le informazioni `My.User` restituisce. In un'applicazione ASP.NET, il `My.User` oggetto basata sull'identità utente della richiesta HTTP corrente e non è interessato da questo metodo.  
  
> [!NOTE]
>  Il comportamento esatto del `My.User` oggetto dipende dal tipo di applicazione e il sistema operativo in cui viene eseguita l'applicazione. Per altre informazioni, vedere il <xref:Microsoft.VisualBasic.ApplicationServices.User> Cenni preliminari sulla classe.  
  
 Si tratta di un membro avanzato. non è visibile in IntelliSense a meno che non si fa clic sul **tutti** scheda.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|**Sì**|  
|Servizio Windows|**Sì**|  
|Sito Web|**Sì**|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Descrive un set di autorizzazioni di sicurezza applicato al codice. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="InternalPrincipal">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal InternalPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property InternalPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::Principal::IPrincipal ^ InternalPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InternalPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto Principal che rappresenta l'utente corrente.</summary>
        <value>Oggetto <see cref="T:System.Security.Principal.IPrincipal" /> che rappresenta l'utente corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nel <xref:Microsoft.VisualBasic.ApplicationServices.User> dell'oggetto, questa proprietà esegue il wrapping di <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> proprietà. L'override del metodo in una classe derivata per fornire un comportamento diverso. Ad esempio, il <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=nameWithType> proprietà esegue l'override di questa proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se l'utente è stato autenticato.</summary>
        <value>
          <see langword="True" /> se l'utente è stato autenticato; in caso contrario, <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.User.IsAuthenticated` proprietà consente al codice determinare se è stato autenticato l'utente corrente.  
  
> [!NOTE]
>  Il comportamento esatto della `My.User` oggetto dipende dal tipo di applicazione e il sistema operativo in cui viene eseguita l'applicazione. Per altre informazioni, vedere il <xref:Microsoft.VisualBasic.ApplicationServices.User> Cenni preliminari sulla classe.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|**Sì**|  
|Servizio Windows|**Sì**|  
|Sito Web|**Sì**|  
  
   
  
## Examples  
 In questo esempio verifica che l'utente è stato autenticato prima di accedere a una risorsa.  
  
 [!code-vb[VbVbalrMyUser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Descrive un set di autorizzazioni di sicurezza applicato al codice. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsInRole">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se l'utente corrente appartiene al ruolo specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(valuetype Microsoft.VisualBasic.ApplicationServices.BuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As BuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(Microsoft::VisualBasic::ApplicationServices::BuiltInRole role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : Microsoft.VisualBasic.ApplicationServices.BuiltInRole -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
      </Parameters>
      <Docs>
        <param name="role">Ruolo Windows predefinito per cui verificare l'appartenenza.</param>
        <summary>Determina se l'utente corrente appartiene al ruolo specificato.</summary>
        <returns>
          <see langword="True" /> se l'utente corrente è un membro del ruolo specificato; in caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.User.IsInRole` metodo consente al codice determinare se l'utente corrente è un membro del ruolo specificato.  
  
 L'overload dei metodi di `My.User.IsInRole` metodo che accetta una stringa consente di accedere facilmente al <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metodo dell'oggetto principal corrente.  
  
 L'overload dei metodi di `My.User.IsInRole` metodo che accetta un `BuiltInRole` enumerazione si comporta in modo diverso, in base all'oggetto principal corrente. Se si tratta di un'entità utente di Windows (<xref:System.Security.Principal.WindowsPrincipal>), questa funzione converte `role` nell'equivalente <xref:System.Security.Principal.WindowsBuiltInRole> enumerazione e restituisce il risultato della chiamata al metodo <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>. Se l'oggetto principal corrente è un'altra entità, questa funzione passa il nome del valore di enumerazione `role` all'entità <xref:System.Security.Principal.IPrincipal.IsInRole%2A> (metodo).  
  
> [!NOTE]
>  Il comportamento esatto del `My.User` oggetto dipende dal tipo di applicazione e il sistema operativo in cui viene eseguita l'applicazione. Per altre informazioni, vedere il <xref:Microsoft.VisualBasic.ApplicationServices.User> Cenni preliminari sulla classe.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|**Sì**|  
|Servizio Windows|**Sì**|  
|Sito Web|**Sì**|  
  
   
  
## Examples  
 Questo esempio controlla se l'utente è un amministratore prima di accedere a una risorsa.  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Descrive un set di autorizzazioni di sicurezza applicato al codice. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : string -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">Nome del ruolo per il quale verificare l'appartenenza.</param>
        <summary>Determina se l'utente corrente appartiene al ruolo specificato.</summary>
        <returns>
          <see langword="True" /> se l'utente corrente è un membro del ruolo specificato; in caso contrario, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `My.User.IsInRole` metodo consente al codice determinare se l'utente corrente è un membro del ruolo specificato.  
  
 L'overload dei metodi di `My.User.IsInRole` metodo che accetta una stringa consente di accedere facilmente al <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metodo dell'oggetto principal corrente.  
  
 L'overload dei metodi di `My.User.IsInRole` metodo che accetta un `BuiltInRole` enumerazione si comporta in modo diverso, in base all'oggetto principal corrente. Se si tratta di un'entità utente di Windows (<xref:System.Security.Principal.WindowsPrincipal>), questa funzione converte `role` nell'equivalente <xref:System.Security.Principal.WindowsBuiltInRole> enumerazione e restituisce il risultato della chiamata al metodo <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>. Se l'oggetto principal corrente è un'altra entità, questa funzione passa il nome del valore di enumerazione `role` all'entità <xref:System.Security.Principal.IPrincipal.IsInRole%2A> (metodo).  
  
> [!NOTE]
>  Il comportamento esatto del `My.User` oggetto dipende dal tipo di applicazione e il sistema operativo in cui viene eseguita l'applicazione. Per altre informazioni, vedere il <xref:Microsoft.VisualBasic.ApplicationServices.User> Cenni preliminari sulla classe.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|**Sì**|  
|Servizio Windows|**Sì**|  
|Sito Web|**Sì**|  
  
   
  
## Examples  
 Questo esempio controlla se l'utente è un amministratore prima di accedere a una risorsa.  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Descrive un set di autorizzazioni di sicurezza applicato al codice. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome dell'utente corrente.</summary>
        <value>
          <see langword="String" />. Nome dell'utente corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare il `My.User` oggetto per ottenere informazioni sull'utente corrente.  
  
 L'entità che autentica l'utente controlla anche il formato del nome utente. Per impostazione predefinita, un'applicazione utilizza l'autenticazione di Windows e il nome dell'utente ha il formato dominio\nome utente. Un'implementazione personalizzata dell'entità di non usare necessariamente lo stesso formato.  
  
> [!NOTE]
>  Il `My.User.Name` proprietà restituisce una stringa vuota quando viene eseguita in Windows 95 e Windows 98, poiché tali sistemi operativi non riconoscono i nomi utente.  
  
> [!NOTE]
>  Il comportamento esatto del `My.User` oggetto dipende dal tipo di applicazione e il sistema operativo in cui viene eseguita l'applicazione. Per altre informazioni, vedere il <xref:Microsoft.VisualBasic.ApplicationServices.User> Cenni preliminari sulla classe.  
  
## <a name="availability-by-project-type"></a>Disponibilità dal tipo di progetto  
  
|Tipo di progetto|Disponibile|  
|-|-|  
|Applicazione Windows|**Sì**|  
|Libreria di classi|**Sì**|  
|Applicazione console|**Sì**|  
|Libreria di controlli Windows|**Sì**|  
|Libreria di controlli Web|**Sì**|  
|Servizio Windows|**Sì**|  
|Sito Web|**Sì**|  
  
   
  
## Examples  
 In questo esempio controlla se l'applicazione utilizza l'autenticazione personalizzata o Windows e Usa tali informazioni per analizzare il `My.User.Name` proprietà.  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Descrive un set di autorizzazioni di sicurezza applicato al codice. Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
      </Docs>
    </Member>
  </Members>
</Type>