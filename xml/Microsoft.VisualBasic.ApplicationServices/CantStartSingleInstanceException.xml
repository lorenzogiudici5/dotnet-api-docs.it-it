<Type Name="CantStartSingleInstanceException" FullName="Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="705588cc6ef2b7cd68cbce8e4df43d54add3cd4a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30339165" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CantStartSingleInstanceException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable CantStartSingleInstanceException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" />
  <TypeSignature Language="VB.NET" Value="Public Class CantStartSingleInstanceException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class CantStartSingleInstanceException : Exception" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Questa eccezione viene generata quando un'istanza successiva di un'applicazione a istanza singola non è in grado di connettersi alla prima istanza dell'applicazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'applicazione a istanza singola è diverso da un'applicazione normale che è possibile eseguire solo un'istanza dell'applicazione alla volta. Quando viene avviata un'istanza di applicazione successivo, tenta di contattare la prima istanza dell'applicazione per passare gli argomenti della riga di comando. Se la prima istanza non può essere contattata, il <xref:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException> viene generato nell'istanza successiva dell'applicazione. Il modello di applicazione Visual Basic non fornisce informazioni di contesto nell'eccezione.  
  
 Per ulteriori informazioni, vedere [Panoramica del modello di applicazione Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" />.</summary>
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CantStartSingleInstanceException ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CantStartSingleInstanceException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un'applicazione a istanza singola è diverso da un'applicazione normale che è possibile eseguire solo un'istanza dell'applicazione alla volta. Quando viene avviata un'istanza di applicazione successivo, tenta di contattare la prima istanza dell'applicazione per passare gli argomenti della riga di comando. Se la prima istanza non può essere contattata, il <xref:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException> viene generato nell'istanza successiva dell'applicazione. Per ulteriori informazioni, vedere [Panoramica del modello di applicazione Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <xref:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException>.  
  
|Proprietà|Valore|  
|-|-|  
|<xref:System.Exception.InnerException%2A>|Riferimento null (`Nothing` in Visual Basic).|  
|<xref:System.Exception.Message%2A>|Stringa del messaggio di errore localizzato.|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CantStartSingleInstanceException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CantStartSingleInstanceException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Messaggio in cui viene descritto l'errore,</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> con un messaggio di errore specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il contenuto del parametro `message` deve essere facilmente comprensibile. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.  
  
 <xref:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException> eredita da <xref:System.Exception>. Questo costruttore imposta le proprietà del <xref:System.Exception> dell'oggetto come illustrato nella tabella seguente.  
  
|Proprietà|Valore|  
|-|-|  
|<xref:System.Exception.InnerException%2A>|Riferimento null (`Nothing` in Visual Basic)|  
|<xref:System.Exception.Message%2A>|Il `message` stringa.|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CantStartSingleInstanceException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CantStartSingleInstanceException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati di oggetto serializzati relativi all'eccezione generata.</param>
        <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente le informazioni contestuali sull'origine o sulla destinazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> con dati serializzati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore viene chiamato durante la deserializzazione per ricostituire l'oggetto eccezione trasmesso su un flusso.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CantStartSingleInstanceException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CantStartSingleInstanceException(System::String ^ message, Exception ^ inner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Oggetto <see cref="T:System.String" /> che descrive l'errore.</param>
        <param name="inner">Oggetto <see cref="T:System.Exception" /> che rappresenta la causa dell'eccezione corrente. Se il parametro <see cref="P:System.Exception.InnerException" /> non è un riferimento null (<see langword="Nothing" /> in Visual Basic), l'eccezione corrente viene generata in un blocco <see langword="Catch" /> che gestisce l'eccezione interna.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il contenuto del parametro `message` deve essere facilmente comprensibile. Il chiamante del costruttore deve garantire che la stringa sia stata localizzata in base alle impostazioni cultura correnti del sistema.  
  
 Un'eccezione generata come risultato diretto di un'eccezione precedente deve includere un riferimento all'eccezione precedente nella proprietà <xref:System.Exception.InnerException%2A>. Il <xref:System.Exception.InnerException%2A> proprietà restituisce lo stesso valore passato al costruttore o un riferimento null se il <xref:System.Exception.InnerException%2A> proprietà non fornisce il valore di eccezione interna al costruttore.  
  
 Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un'istanza di <xref:System.ApplicationException>.  
  
|Proprietà|Valore|  
|-|-|  
|<xref:System.Exception.InnerException%2A>|Il `inner` riferimento.|  
|<xref:System.Exception.Message%2A>|Il `message` stringa.|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
      </Docs>
    </Member>
  </Members>
</Type>