<Type Name="CredentialCache" FullName="System.Net.CredentialCache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e0c5e280601f7a78ee29c5ab50f3d5101860e329" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30469935" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CredentialCache : System.Collections.IEnumerable, System.Net.ICredentials, System.Net.ICredentialsByHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CredentialCache extends System.Object implements class System.Collections.IEnumerable, class System.Net.ICredentials, class System.Net.ICredentialsByHost" />
  <TypeSignature Language="DocId" Value="T:System.Net.CredentialCache" />
  <TypeSignature Language="VB.NET" Value="Public Class CredentialCache&#xA;Implements ICredentials, ICredentialsByHost, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CredentialCache : System::Collections::IEnumerable, System::Net::ICredentials, System::Net::ICredentialsByHost" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentials</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentialsByHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornisce l'archiviazione per più credenziali.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Net.CredentialCache> classe archivia le credenziali per più risorse Internet. Le applicazioni che devono accedere alle risorse più possono archiviare le credenziali per le risorse in un <xref:System.Net.CredentialCache> istanza che fornisce quindi il set corretto di credenziali alla risorsa Internet quando necessario. Quando il <xref:System.Net.CredentialCache.GetCredential%2A> metodo viene chiamato, che confronta l'identificatore URI (Uniform Resource) e il tipo di autenticazione fornito con quelli memorizzati nella cache e restituisce il primo set di credenziali corrispondenti.  
  
 Il <xref:System.Net.CredentialCache.DefaultCredentials%2A> proprietà contiene le credenziali di sistema del contesto di sicurezza corrente. Per le applicazioni client rappresentano il nome utente, password e dominio dell'utente attualmente connesso. Per le applicazioni ASP.NET, le credenziali predefinite sono le credenziali dell'utente connesso o l'utente rappresentato.  
  
   
  
## Examples  
 Nell'esempio di codice viene inizializzato un <xref:System.Net.CredentialCache> con più credenziali di sicurezza e vengono utilizzate con un <xref:System.Net.WebRequest>.  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.ICredentials" />
    <altmember cref="P:System.Net.WebRequest.Credentials" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CredentialCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CredentialCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Net.CredentialCache" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il costruttore crea un <xref:System.Net.CredentialCache> istanza.  
  
   
  
## Examples  
 Nell'esempio di codice viene inizializzato un <xref:System.Net.CredentialCache> con più credenziali di sicurezza e vengono utilizzate con un <xref:System.Net.WebRequest>.  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge un'istanza di <see cref="T:System.Net.NetworkCredential" /> alla cache delle credenziali.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Uri uriPrefix, string authType, System.Net.NetworkCredential cred);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Uri uriPrefix, string authType, class System.Net.NetworkCredential cred) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (uriPrefix As Uri, authType As String, cred As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Uri ^ uriPrefix, System::String ^ authType, System::Net::NetworkCredential ^ cred);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
        <Parameter Name="cred" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">Un <see cref="T:System.Uri" /> che specifica il prefisso URI delle risorse a cui la credenziale concede l'accesso.</param>
        <param name="authType">Lo schema di autenticazione usato dalla risorsa specificata in <c>uriPrefix</c>.</param>
        <param name="cred">La <see cref="T:System.Net.NetworkCredential" /> da aggiungere alla cache delle credenziali.</param>
        <summary>Aggiunge un'istanza di <see cref="T:System.Net.NetworkCredential" /> alla cache delle credenziali da utilizzare con protocolli diversi da SMTP e la associa a un prefisso URI (Uniform Resource Identifier) e a un protocollo di autenticazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.CredentialCache.Add%2A> metodo inserisce un <xref:System.Net.NetworkCredential> istanza da utilizzare con protocolli diversi da SMTP nel <xref:System.Net.CredentialCache>. La cache memorizza le credenziali nell'ordine in cui vengono aggiunti a esso. Quando il <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> metodo viene chiamato, restituisce il corrispondente <xref:System.Net.NetworkCredential> istanza.  
  
   
  
## Examples  
 Nell'esempio di codice viene inizializzato un <xref:System.Net.CredentialCache> con più credenziali di sicurezza e vengono utilizzate con un <xref:System.Net.WebRequest>.  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriPrefix" /> è <see langword="null" />.  
  
 oppure  
  
 <paramref name="authType" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Le stesse credenziali vengono aggiunte più volte.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string host, int port, string authenticationType, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string host, int32 port, string authenticationType, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (host As String, port As Integer, authenticationType As String, credential As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ host, int port, System::String ^ authenticationType, System::Net::NetworkCredential ^ credential);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="host">Oggetto <see cref="T:System.String" /> che identifica il computer host.</param>
        <param name="port">Elemento <see cref="T:System.Int32" /> che specifica la porta per connettersi a un <c>host</c>.</param>
        <param name="authenticationType">Elemento <see cref="T:System.String" /> che identifica lo schema di autenticazione usato in caso di connessione a <c>host</c> tramite <c>cred</c>.</param>
        <param name="credential">La <see cref="T:System.Net.NetworkCredential" /> da aggiungere alla cache delle credenziali.</param>
        <summary>Aggiunge un'istanza <see cref="T:System.Net.NetworkCredential" /> da utilizzare con SMTP alla cache delle credenziali e la associa a un computer host, a una porta e a un protocollo di autenticazione. Le credenziali aggiunte con questo metodo sono valide solo per SMTP. Questo metodo non funziona per le richieste HTTP o FTP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo inserisce un <xref:System.Net.NetworkCredential> istanza da utilizzare con SMTP nel <xref:System.Net.CredentialCache>. La cache memorizza le credenziali nell'ordine in cui vengono aggiunti a esso. Quando il <xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29> metodo viene chiamato, restituisce un <xref:System.Net.NetworkCredential> istanza selezionata abbinando il `host`, `port`, e `authType`. Il confronto avviene soggetti.  
  
 I valori supportati per `authType` sono "NTLM", "Digest", "Kerberos" e "Negotiate".  
  
 Le credenziali aggiunte con questo metodo sono valide solo per uso con SMTP. Questo metodo non funziona per i protocolli HTTP o FTP.  
  
   
  
## Examples  
 Nell'esempio di codice viene inizializzato un <xref:System.Net.CredentialCache> con più credenziali di sicurezza per SMTP che utilizza uno di tali credenziali con un <xref:System.Net.Mail.SmtpClient>.  
  
 [!code-cpp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/CPP/source.cpp#1)]
 [!code-csharp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/cs/source.cs#1)]
 [!code-vb[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> è <see langword="null" />.  
  
 oppure  
  
 <paramref name="authType" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="authType" /> non è un valore accettato.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="port" /> è minore di zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentials DefaultCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentials DefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultCredentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentials ^ DefaultCredentials { System::Net::ICredentials ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera le credenziali di sistema dell'applicazione.</summary>
        <value>
          <see cref="T:System.Net.ICredentials" /> che rappresenta le credenziali di sistema dell'applicazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.CredentialCache.DefaultCredentials%2A> proprietà si applica solo a NTLM, con negoziazione e l'autenticazione basata su Kerberos.  
  
 <xref:System.Net.CredentialCache.DefaultCredentials%2A> rappresenta le credenziali di sistema per il contesto di sicurezza corrente in cui è in esecuzione l'applicazione. Per un'applicazione sul lato client, si tratta in genere le credenziali di Windows (nome utente, password e dominio) dell'utente che esegue l'applicazione. Per le applicazioni ASP.NET, le credenziali predefinite sono le credenziali dell'utente connesso o l'utente rappresentato.  
  
 Per ottenere le credenziali come un <xref:System.Net.NetworkCredential> dell'istanza, utilizzare il <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> proprietà.  
  
 I valori supportati per `authType` sono "NTLM", "Digest", "Kerberos" e "Negotiate". Questo metodo non funziona per i protocolli HTTP o FTP.  
  
> [!NOTE]
>  Il <xref:System.Net.ICredentials> istanza restituita dalla <xref:System.Net.CredentialCache.DefaultCredentials%2A> non può essere utilizzato per visualizzare il nome utente, password o dominio del contesto di sicurezza corrente.  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Net.CredentialCache.DefaultCredentials%2A> proprietà da ottenere le credenziali di sistema dell'applicazione.  
  
 [!code-cpp[CredentialCache_DefaultCredentials#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CPP/credentialcache_defaultcredentials.cpp#1)]
 [!code-csharp[CredentialCache_DefaultCredentials#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CS/credentialcache_defaultcredentials.cs#1)]
 [!code-vb[CredentialCache_DefaultCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/VB/credentialcache_defaultcredentials.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">per leggere la variabile di ambiente nome utente. Enumerazione associata: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultNetworkCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkCredential DefaultNetworkCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.NetworkCredential DefaultNetworkCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultNetworkCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultNetworkCredentials As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::NetworkCredential ^ DefaultNetworkCredentials { System::Net::NetworkCredential ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le credenziali di rete del contesto di sicurezza corrente.</summary>
        <value>Classe <see cref="T:System.Net.NetworkCredential" /> che rappresenta le credenziali di rete dell'utente corrente o dell'applicazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le credenziali restituite dal <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> proprietà è applicabile solo a NTLM, con negoziazione e l'autenticazione basata su Kerberos.  
  
 Le credenziali restituite dalla <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> rappresenta le credenziali di autenticazione per il contesto di sicurezza corrente in cui è in esecuzione l'applicazione. Per un'applicazione sul lato client, si tratta in genere le credenziali di Windows (nome utente, password e dominio) dell'utente che esegue l'applicazione. Per le applicazioni ASP.NET, le credenziali di rete predefinite sono le credenziali dell'utente connesso o l'utente rappresentato.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">per leggere la variabile di ambiente nome utente. Enumerazione associata: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCredential">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce un'istanza di <see cref="T:System.Net.NetworkCredential" /> associata a un URI (Uniform Resource Identifier) oppure a un host e a un tipo di autenticazione specificati.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredential (uriPrefix As Uri, authType As String) As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkCredential ^ GetCredential(Uri ^ uriPrefix, System::String ^ authType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentials.GetCredential(System.Uri,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">Un <see cref="T:System.Uri" /> che specifica il prefisso URI delle risorse a cui la credenziale concede l'accesso.</param>
        <param name="authType">Lo schema di autenticazione usato dalla risorsa specificata in <c>uriPrefix</c>.</param>
        <summary>Restituisce l'istanza <see cref="T:System.Net.NetworkCredential" /> associata al tipo di autenticazione e all'URI specificati.</summary>
        <returns>Una <see cref="T:System.Net.NetworkCredential" /> oppure <see langword="null" /> se non esistono credenziali corrispondenti nella cache.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> metodo cerca il <xref:System.Net.CredentialCache> e restituisce il <xref:System.Net.NetworkCredential> istanza per il tipo di autorizzazione e l'URI specificato. Se il <xref:System.Net.CredentialCache> non contiene non corrisponde ad alcuna <xref:System.Net.NetworkCredential> istanza, `null` viene restituito.  
  
 <xref:System.Net.CredentialCache.GetCredential%2A> utilizza il prefisso corrispondente più lungo di URI nella cache per determinare il set di credenziali da restituire per un tipo di autorizzazione. Nella tabella seguente vengono illustrati esempi.  
  
|Prefisso URI|Corrispondenze|  
|----------------|-------------|  
|`http://www.contoso.com/portal/news.htm`|Le richieste per la pagina Web specifica `news.htm`.|  
|`http://www.contoso.com/portal/`|Le richieste per tutto il contenuto di `portal` percorso, tranne che nella pagina `news.htm`.|  
|`http://www.contoso.com/`|Le richieste per tutte le risorse in `www.contoso.com`, ad eccezione di quelle nel `portal` percorso.|  
  
   
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> per restituire il <xref:System.Net.NetworkCredential> istanza associata al tipo di autenticazione e all'URI specificato.  
  
 [!code-cpp[CredentialCache_GetCredential#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetCredential/CPP/credentialcache_getcredential.cpp#1)]
 [!code-csharp[CredentialCache_GetCredential#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetCredential/CS/credentialcache_getcredential.cs#1)]
 [!code-vb[CredentialCache_GetCredential#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetCredential/VB/credentialcache_getcredential.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriPrefix" /> o <paramref name="authType" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredential (host As String, port As Integer, authenticationType As String) As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkCredential ^ GetCredential(System::String ^ host, int port, System::String ^ authenticationType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">Oggetto <see cref="T:System.String" /> che identifica il computer host.</param>
        <param name="port">Elemento <see cref="T:System.Int32" /> che specifica la porta per connettersi a un <c>host</c>.</param>
        <param name="authenticationType">Elemento <see cref="T:System.String" /> che identifica lo schema di autenticazione usato in caso di connessione a <c>host</c>.</param>
        <summary>Restituisce l'istanza di <see cref="T:System.Net.NetworkCredential" /> associata all'host, alla porta e al protocollo di autenticazione specificati.</summary>
        <returns>Una <see cref="T:System.Net.NetworkCredential" /> oppure <see langword="null" /> se non esistono credenziali corrispondenti nella cache.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo cerca il <xref:System.Net.CredentialCache> e restituisce il <xref:System.Net.NetworkCredential> istanza per l'host specificato, porta e il tipo di autorizzazione. Il `host`, `port`, e `authType` valori passati a questo metodo sono soggetti rispetto ai valori specificati quando si aggiunge la credenziale di <xref:System.Net.CredentialCache> utilizzando il <xref:System.Net.CredentialCache.Add%2A> metodi.  
  
 I valori supportati per `authType` sono "NTLM", "Digest", "Kerberos" e "Negotiate".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> è <see langword="null" />.  
  
 oppure  
  
 <paramref name="authType" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="authType" /> non è un valore accettato.  
  
 oppure  
  
 <paramref name="host" /> è uguale alla stringa vuota ("").</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="port" /> è minore di zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un enumeratore che consente di scorrere l'istanza di <see cref="T:System.Net.CredentialCache" />.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> per l'oggetto <see cref="T:System.Net.CredentialCache" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio di codice viene illustrato come utilizzare il <xref:System.Net.CredentialCache.GetEnumerator%2A> per restituire un enumeratore che può scorrere il <xref:System.Net.CredentialCache> istanza.  
  
 [!code-cpp[CredentialCache_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CPP/credentialcache_getenumerator.cpp#1)]
 [!code-csharp[CredentialCache_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CS/credentialcache_getenumerator.cs#1)]
 [!code-vb[CredentialCache_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetEnumerator/VB/credentialcache_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Elimina un'istanza di <see cref="T:System.Net.NetworkCredential" /> dalla cache.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (uriPrefix As Uri, authType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(Uri ^ uriPrefix, System::String ^ authType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">Un <see cref="T:System.Uri" /> che specifica il prefisso URI delle risorse per le quali è utilizzata la credenziale.</param>
        <param name="authType">Lo schema di autenticazione usato dall'host specificato in <c>uriPrefix</c>.</param>
        <summary>Elimina un'istanza <see cref="T:System.Net.NetworkCredential" /> dalla cache se associata al prefisso dell'URI e al protocollo di autenticazione specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo rimuove un <xref:System.Net.NetworkCredential> istanza il <xref:System.Net.CredentialCache> se il protocollo di autenticazione e al prefisso URI specificato corrisponda a quelli associati alla credenziale. Più chiamate al metodo di <xref:System.Net.CredentialCache.Remove%2A> metodo per lo stesso <xref:System.Net.NetworkCredential> non hanno alcun effetto.  
  
 Se `authType` è `null` o `uriPrefix` è `null`, o Nessuna credenziale corrispondente è presente nella cache, questo metodo non esegue alcuna operazione.  
  
   
  
## Examples  
 Esempio di codice seguente usa questo metodo per eliminare un <xref:System.Net.NetworkCredential> istanza dalla cache.  
  
 [!code-cpp[CredentialCache_Add_Remove#3](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CPP/credentialcache_add_remove.cpp#3)]
 [!code-csharp[CredentialCache_Add_Remove#3](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CS/credentialcache_add_remove.cs#3)]
 [!code-vb[CredentialCache_Add_Remove#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_Add_Remove/VB/credentialcache_add_remove.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (host As String, port As Integer, authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ host, int port, System::String ^ authenticationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">Oggetto <see cref="T:System.String" /> che identifica il computer host.</param>
        <param name="port">Elemento <see cref="T:System.Int32" /> che specifica la porta per connettersi a un <c>host</c>.</param>
        <param name="authenticationType">Elemento <see cref="T:System.String" /> che identifica lo schema di autenticazione usato in caso di connessione a <c>host</c>.</param>
        <summary>Elimina un'istanza di <see cref="T:System.Net.NetworkCredential" /> dalla cache se associata all'host, alla porta e al protocollo di autenticazione specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo rimuove un <xref:System.Net.NetworkCredential> istanza il <xref:System.Net.CredentialCache> se il protocollo di autenticazione host e porta specificato corrisponda a quelli associati alla credenziale. Più chiamate al metodo di <xref:System.Net.CredentialCache.Remove%2A> metodo per lo stesso <xref:System.Net.NetworkCredential> non hanno alcun effetto.  
  
 Se `authType` è `null` o `uriPrefix` è `null`, o Nessuna credenziale corrispondente è presente nella cache, questo metodo non esegue alcuna operazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>