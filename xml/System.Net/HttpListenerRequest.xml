<Type Name="HttpListenerRequest" FullName="System.Net.HttpListenerRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f61c51e43decaf4c046020886055904c7ddfa5aa" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37643513" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListenerRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpListenerRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="eeab5-101">Describes an incoming HTTP request to an <see cref="T:System.Net.HttpListener" /> object.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eeab5-101">Describes an incoming HTTP request to an <see cref="T:System.Net.HttpListener" /> object.</span>
      </span>
      <span data-ttu-id="eeab5-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eeab5-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-103">Quando un client effettua una richiesta a un identificatore URI (Uniform Resource) gestite da un <xref:System.Net.HttpListener> oggetti, il <xref:System.Net.HttpListener> fornisce un <xref:System.Net.HttpListenerContext> oggetto contenente le informazioni sul mittente, la richiesta e risposta che viene inviata al client.</span><span class="sxs-lookup"><span data-stu-id="eeab5-103">When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client.</span></span> <span data-ttu-id="eeab5-104">Il <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> proprietà restituisce il <xref:System.Net.HttpListenerRequest> oggetto che descrive la richiesta.</span><span class="sxs-lookup"><span data-stu-id="eeab5-104">The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request.</span></span>  
  
 <span data-ttu-id="eeab5-105">Il <xref:System.Net.HttpListenerRequest> oggetto contiene informazioni sulla richiesta, ad esempio la richiesta <xref:System.Net.HttpListenerRequest.HttpMethod%2A> stringa <xref:System.Net.HttpListenerRequest.UserAgent%2A> stringa e i dati del corpo della richiesta (vedere il <xref:System.Net.HttpListenerRequest.InputStream%2A> proprietà).</span><span class="sxs-lookup"><span data-stu-id="eeab5-105">The <xref:System.Net.HttpListenerRequest> object contains information about the request, such as the request <xref:System.Net.HttpListenerRequest.HttpMethod%2A> string, <xref:System.Net.HttpListenerRequest.UserAgent%2A> string, and request body data (see the <xref:System.Net.HttpListenerRequest.InputStream%2A> property).</span></span>  
  
 <span data-ttu-id="eeab5-106">Per rispondere alla richiesta, è necessario ottenere la risposta associato usando la <xref:System.Net.HttpListenerContext.Response%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-106">To reply to the request, you must get the associated response using the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-107">Esempio di codice seguente viene illustrato come ricevere e rispondere a un <xref:System.Net.HttpListenerRequest>.</span><span class="sxs-lookup"><span data-stu-id="eeab5-107">The following code example demonstrates how to receive and respond to a <xref:System.Net.HttpListenerRequest>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerContext" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-108">Gets the MIME types accepted by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-108">Gets the MIME types accepted by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-109">Oggetto <see cref="T:System.String" /> matrice che contiene i nomi dei tipi specificati della richiesta <see langword="Accept" /> intestazione oppure <see langword="null" /> se la richiesta del client non include un <see langword="Accept" /> intestazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-109">A <see cref="T:System.String" /> array that contains the type names specified in the request's <see langword="Accept" /> header or <see langword="null" /> if the client request did not include an <see langword="Accept" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-110">Il `Accept` intestazione è una stringa di nomi di tipi MIME Multipurpose Internet Mail Extensions () separati da spazi (ad esempio, `image/jpeg`), che indicano i tipi MIME che il client è pronto ad accettare ed elaborare in una risposta.</span><span class="sxs-lookup"><span data-stu-id="eeab5-110">The `Accept` header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, `image/jpeg`), which indicate the MIME types that the client is prepared to accept and process in a response.</span></span> <span data-ttu-id="eeab5-111">Il `*/*` indica che il client accetta qualsiasi tipo MIME.</span><span class="sxs-lookup"><span data-stu-id="eeab5-111">The `*/*` entry indicates that the client accepts any MIME type.</span></span> <span data-ttu-id="eeab5-112">Per una descrizione dettagliata del `Accept` intestazione, vedere il documento RFC 2616, disponibile all'indirizzo [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="eeab5-112">For a detailed description of the `Accept` header, see RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="eeab5-113">Per un elenco completo di intestazioni di richiesta, vedere il <xref:System.Net.HttpRequestHeader> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="eeab5-113">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-114">Esempio di codice seguente illustra l'uso di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-114">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetClientCertificate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetClientCertificate(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetClientCertificate (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetClientCertificate(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetClientCertificate : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListenerRequest.BeginGetClientCertificate (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback">
          <span data-ttu-id="eeab5-115">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-115">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="eeab5-116">A user-defined object that contains information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-116">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="eeab5-117">This object is passed to the callback delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-117">This object is passed to the callback delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeab5-118">Begins an asynchronous request for the client's X.509 v.3 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-118">Begins an asynchronous request for the client's X.509 v.3 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeab5-119">An <see cref="T:System.IAsyncResult" /> that indicates the status of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-119">An <see cref="T:System.IAsyncResult" /> that indicates the status of the operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateError">
      <MemberSignature Language="C#" Value="public int ClientCertificateError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClientCertificateError" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificateError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClientCertificateError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateError : int" Usage="System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-120">Gets an error code that identifies a problem with the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> provided by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-120">Gets an error code that identifies a problem with the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> provided by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-121">Un <see cref="T:System.Int32" /> valore contenente un codice di errore di Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-121">An <see cref="T:System.Int32" /> value that contains a Windows error code.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-122">Questa proprietà contiene un codice di errore Windows restituito dal Secure Channel (Schannel) Provider interfaccia SSPI (Security Support), che viene usato per convalidare il certificato.</span><span class="sxs-lookup"><span data-stu-id="eeab5-122">This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate.</span></span> <span data-ttu-id="eeab5-123">Per altre informazioni sul supporto SSPI per Schannel, vedere "Creazione di una connessione protetta con Schannel" nella documentazione di sicurezza [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).</span><span class="sxs-lookup"><span data-stu-id="eeab5-123">For more information about SSPI support for Schannel, see "Creating a Secure Connection Using Schannel" in the Security documentation at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-124">L'esempio di codice seguente controlla questa proprietà per determinare se la richiesta include un certificato client valido.</span><span class="sxs-lookup"><span data-stu-id="eeab5-124">The following code example checks this property to determine whether the request includes a valid client certificate.</span></span>  
  
 [!code-csharp[NCLListener#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#3)]
 [!code-vb[NCLListener#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eeab5-125">The client certificate has not been initialized yet by a call to the <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> or <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> methods  -or -  The operation is still in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-125">The client certificate has not been initialized yet by a call to the <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> or <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> methods  -or -  The operation is still in progress.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding" Usage="System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-126">Gets the content encoding that can be used with data sent with the request</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-126">Gets the content encoding that can be used with data sent with the request</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-127">Un' <see cref="T:System.Text.Encoding" /> adatto per l'uso con i dati nell'oggetto di <see cref="P:System.Net.HttpListenerRequest.InputStream" /> proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-127">An <see cref="T:System.Text.Encoding" /> object suitable for use with the data in the <see cref="P:System.Net.HttpListenerRequest.InputStream" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-128">Un <xref:System.Text.Encoding> oggetto può essere utilizzato per convertire le sequenze di byte in caratteri in sequenze di byte e i set di caratteri (codici).</span><span class="sxs-lookup"><span data-stu-id="eeab5-128">An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.</span></span> <span data-ttu-id="eeab5-129">Questa proprietà Usa il valore di set di caratteri dal `Content-Type` intestazione per determinare la codifica.</span><span class="sxs-lookup"><span data-stu-id="eeab5-129">This property uses the charset value from the `Content-Type` header to determine the encoding.</span></span> <span data-ttu-id="eeab5-130">Se tali informazioni non sono disponibile, questa proprietà restituisce <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eeab5-130">If that information is not available, this property returns <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-131">Esempio di codice seguente illustra l'uso di <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-131">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength64">
      <MemberSignature Language="C#" Value="public long ContentLength64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength64" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentLength64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentLength64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength64 : int64" Usage="System.Net.HttpListenerRequest.ContentLength64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-132">Gets the length of the body data included in the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-132">Gets the length of the body data included in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-133">Il valore della richiesta <see langword="Content-Length" /> intestazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-133">The value from the request's <see langword="Content-Length" /> header.</span>
          </span>
          <span data-ttu-id="eeab5-134">Questo valore è -1 se la lunghezza del contenuto non è noto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-134">This value is -1 if the content length is not known.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-135">Il `Content-Length` intestazione esprime la lunghezza, espressa in byte, dei dati del corpo che accompagna la richiesta.</span><span class="sxs-lookup"><span data-stu-id="eeab5-135">The `Content-Length` header expresses the length, in bytes, of the body data that accompanies the request.</span></span>  
  
 <span data-ttu-id="eeab5-136">Per un elenco completo di intestazioni di richiesta, vedere il <xref:System.Net.HttpRequestHeader> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="eeab5-136">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-137">Il codice seguente viene illustrato come utilizzare il <xref:System.Net.HttpListenerRequest.ContentLength64%2A> proprietà durante l'elaborazione dei dati del corpo.</span><span class="sxs-lookup"><span data-stu-id="eeab5-137">The following code example uses the <xref:System.Net.HttpListenerRequest.ContentLength64%2A> property while processing body data.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.Net.HttpListenerRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-138">Gets the MIME type of the body data included in the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-138">Gets the MIME type of the body data included in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-139">Oggetto <see cref="T:System.String" /> che contiene il testo della richiesta <see langword="Content-Type" /> intestazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-139">A <see cref="T:System.String" /> that contains the text of the request's <see langword="Content-Type" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-140">Se un client include i dati del corpo in una richiesta, dichiara il tipo MIME Multipurpose Internet Mail Extensions () dei dati del corpo nel `Content-Type` intestazione.</span><span class="sxs-lookup"><span data-stu-id="eeab5-140">If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the `Content-Type` header.</span></span> <span data-ttu-id="eeab5-141">Ad esempio, il tipo MIME predefinito dei dati restituiti da un Web form mediante la `POST` metodo `application/x-www-form-urlencoded`.</span><span class="sxs-lookup"><span data-stu-id="eeab5-141">For example, the default MIME type of data returned from a Web form using the `POST` method is `application/x-www-form-urlencoded`.</span></span>  
  
 <span data-ttu-id="eeab5-142">Per un elenco completo di intestazioni di richiesta, vedere la <xref:System.Net.HttpRequestHeader> enumerazione e la specifica RFC 2616, disponibile all'indirizzo [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="eeab5-142">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration and RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="eeab5-143">Il <xref:System.Net.HttpListenerRequest.ContentType%2A> è null quando è presente alcun `Content-Type` intestazione nella richiesta.</span><span class="sxs-lookup"><span data-stu-id="eeab5-143">The <xref:System.Net.HttpListenerRequest.ContentType%2A> is null when there is no `Content-Type` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-144">Esempio di codice seguente viene illustrato come utilizzare questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-144">The following code example demonstrates how to use this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As CookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieCollection ^ Cookies { System::Net::CookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Net.CookieCollection" Usage="System.Net.HttpListenerRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-145">Gets the cookies sent with the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-145">Gets the cookies sent with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-146">Oggetto <see cref="T:System.Net.CookieCollection" /> che contiene i cookie associati alla richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-146">A <see cref="T:System.Net.CookieCollection" /> that contains cookies that accompany the request.</span>
          </span>
          <span data-ttu-id="eeab5-147">Questa proprietà restituisce una raccolta vuota se la richiesta non contiene i cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-147">This property returns an empty collection if the request does not contain cookies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-148">Un cookie è dati di testo Nome/valore da un server Web che viene archiviato nel computer locale (client).</span><span class="sxs-lookup"><span data-stu-id="eeab5-148">A cookie is name/value text data from a Web server that is stored on the local (client) computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-149">Esempio di codice seguente consente di visualizzare i valori dei cookie inviati con la richiesta.</span><span class="sxs-lookup"><span data-stu-id="eeab5-149">The following code example displays the values of cookies sent with the request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#18](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="EndGetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetClientCertificate (asyncResult As IAsyncResult) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ EndGetClientCertificate(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetClientCertificate : IAsyncResult -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.EndGetClientCertificate asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="eeab5-150">The pending request for the certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-150">The pending request for the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eeab5-151">Ends an asynchronous request for the client's X.509 v.3 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-151">Ends an asynchronous request for the client's X.509 v.3 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeab5-152">The <see cref="T:System.IAsyncResult" /> object that is returned when the operation started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-152">The <see cref="T:System.IAsyncResult" /> object that is returned when the operation started.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eeab5-153">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-153">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eeab5-154">
            <paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-154">
              <paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eeab5-155">This method was already called for the operation identified by <paramref name="asyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-155">This method was already called for the operation identified by <paramref name="asyncResult" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificate () As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ GetClientCertificate();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificate : unit -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.GetClientCertificate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-156">Retrieves the client's X.509 v.3 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-156">Retrieves the client's X.509 v.3 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeab5-157">A <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-157">A <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-158">Questo metodo si blocca fino a quando non viene recuperato il certificato.</span><span class="sxs-lookup"><span data-stu-id="eeab5-158">This method blocks until the certificate is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eeab5-159">A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-159">A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</span>
          </span>
        </exception>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificateAsync () As Task(Of X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ GetClientCertificateAsync();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificateAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" Usage="httpListenerRequest.GetClientCertificateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-160">Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-160">Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eeab5-161">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-161">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="eeab5-162">The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-162">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="eeab5-163">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-163">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-164">Questa operazione non verrà bloccata.</span><span class="sxs-lookup"><span data-stu-id="eeab5-164">This operation will not block.</span></span> <span data-ttu-id="eeab5-165">L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata quando il certificato è stato recuperato.</span><span class="sxs-lookup"><span data-stu-id="eeab5-165">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved.</span></span>  
  
 <span data-ttu-id="eeab5-166">Se una chiamata a questo metodo per recuperare certificato X.509 v.3 del client è in corso, quindi un'altra chiamata a questo metodo non è possibile prevedere.</span><span class="sxs-lookup"><span data-stu-id="eeab5-166">If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="HasEntityBody">
      <MemberSignature Language="C#" Value="public bool HasEntityBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasEntityBody As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasEntityBody { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEntityBody : bool" Usage="System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-167">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request has associated body data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-167">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request has associated body data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-168">
            <see langword="true" /> Se la richiesta è associati i dati del corpo; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-168">
              <see langword="true" /> if the request has associated body data; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-169">Una richiesta che invia dati al server usando il `POST` metodo, ad esempio, deve avere un corpo dell'entità.</span><span class="sxs-lookup"><span data-stu-id="eeab5-169">A request that sends data to the server using the `POST` method, for example, should have an entity body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-170">Esempio di codice seguente illustra l'uso di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-170">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-171">Gets the collection of header name/value pairs sent in the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-171">Gets the collection of header name/value pairs sent in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-172">Oggetto <see cref="T:System.Net.WebHeaderCollection" /> che contiene le intestazioni HTTP incluse nella richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-172">A <see cref="T:System.Net.WebHeaderCollection" /> that contains the HTTP headers included in the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-173">Intestazioni della richiesta contengono informazioni sui metadati.</span><span class="sxs-lookup"><span data-stu-id="eeab5-173">Request headers contain metadata information.</span></span> <span data-ttu-id="eeab5-174">Ad esempio, le intestazioni possono contenere l'identificatore URI (Uniform Resource) della risorsa cui fa riferimento il client al server, l'identità dell'agente utente utilizzata dal client e MIME accettabile tipi per i dati nel corpo della risposta.</span><span class="sxs-lookup"><span data-stu-id="eeab5-174">For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.</span></span>  
  
 <span data-ttu-id="eeab5-175">Per un elenco completo di intestazioni di richiesta, vedere il <xref:System.Net.HttpRequestHeader> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="eeab5-175">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-176">Esempio di codice seguente consente di visualizzare tutte le informazioni contenute in un determinato <xref:System.Net.WebHeaderCollection> oggetto.</span><span class="sxs-lookup"><span data-stu-id="eeab5-176">The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Net.HttpListenerRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-177">Gets the HTTP method specified by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-177">Gets the HTTP method specified by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-178">Oggetto <see cref="T:System.String" /> che contiene il metodo utilizzato nella richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-178">A <see cref="T:System.String" /> that contains the method used in the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-179">Il metodo HTTP è in genere GET o POST, a seconda dell'azione scelta dal client.</span><span class="sxs-lookup"><span data-stu-id="eeab5-179">The HTTP method is typically GET or POST, depending on the action desired by the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-180">Esempio di codice seguente illustra l'uso di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-180">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Net.HttpListenerRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-181">Gets a stream that contains the body data sent by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-181">Gets a stream that contains the body data sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-182">Leggibile <see cref="T:System.IO.Stream" /> oggetto che contiene i byte inviati dal client nel corpo della richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-182">A readable <see cref="T:System.IO.Stream" /> object that contains the bytes sent by the client in the body of the request.</span>
          </span>
          <span data-ttu-id="eeab5-183">Questa proprietà restituisce <see cref="F:System.IO.Stream.Null" /> se con la richiesta viene inviato alcun dato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-183">This property returns <see cref="F:System.IO.Stream.Null" /> if no data is sent with the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-184">Se il client trasmette i dati (ad esempio, tramite il protocollo HTTP `POST` metodo), il flusso restituito da questo metodo contiene i dati.</span><span class="sxs-lookup"><span data-stu-id="eeab5-184">If the client transmits data (for example, using the HTTP `POST` method), the stream returned by this method contains that data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eeab5-185">La richiesta di chiusura non chiude il flusso restituito da questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-185">Closing the request does not close the stream returned by this property.</span></span> <span data-ttu-id="eeab5-186">Quando non è più necessario il flusso, è necessario chiuderlo chiamando il <xref:System.IO.Stream.Close%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="eeab5-186">When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-187">Esempio di codice seguente illustra l'uso di questa proprietà per leggere i dati inviati con una richiesta.</span><span class="sxs-lookup"><span data-stu-id="eeab5-187">The following code example demonstrates using this property to read the data sent with a request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="eeab5-188">
            <para>Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [traccia di rete in Framework](~/docs/framework/network-programming/network-tracing.md) di .NET.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-188">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Always returns false")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-189">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client sending this request is authenticated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-189">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client sending this request is authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-190">
            <see langword="true" /> Se il client è stato autenticato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-190">
              <see langword="true" /> if the client was authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-191">L'applicazione richiede l'autenticazione client tramite il <xref:System.Net.HttpListener.AuthenticationSchemes%2A> o <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-191">Your application requests client authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> or <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="eeab5-192">L'applicazione non riceve un <xref:System.Net.HttpListenerContext> per le richieste dai client che non saranno state autenticate.</span><span class="sxs-lookup"><span data-stu-id="eeab5-192">Your application does not receive an <xref:System.Net.HttpListenerContext> for requests from clients that are not successfully authenticated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-193">Esempio di codice seguente consente di visualizzare il valore della <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-193">The following code example displays the value of the <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Net.HttpListenerRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-194">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request is sent from the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-194">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request is sent from the local computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-195">
            <see langword="true" /> Se la richiesta ha avuto origine nello stesso computer come le <see cref="T:System.Net.HttpListener" /> oggetto che ha fornito la richiesta; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-195">
              <see langword="true" /> if the request originated on the same computer as the <see cref="T:System.Net.HttpListener" /> object that provided the request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-196">Le applicazioni possono utilizzare questa proprietà per eseguire un'elaborazione speciale quando vengono richieste dal computer locale.</span><span class="sxs-lookup"><span data-stu-id="eeab5-196">Applications can use this property to perform special processing when requests are from the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-197">Esempio di codice seguente illustra l'uso di <xref:System.Net.HttpListenerRequest.IsLocal%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-197">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsLocal%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-198">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-198">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-199">
            <see langword="true" /> Se la connessione TCP utilizza SSL. in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-199">
              <see langword="true" /> if the TCP connection is using SSL; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-200">Per richiedere una connessione sicura, la richiesta del client utilizza <xref:System.Uri.UriSchemeHttps> invece di <xref:System.Uri.UriSchemeHttp>.</span><span class="sxs-lookup"><span data-stu-id="eeab5-200">To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>.</span></span> <span data-ttu-id="eeab5-201">Se non viene stabilita la connessione mediante SSL, il client riceve un <xref:System.Net.WebException> che fornisce informazioni sull'errore.</span><span class="sxs-lookup"><span data-stu-id="eeab5-201">If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-202">Esempio di codice seguente illustra l'uso di <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-202">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebSocketRequest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequest : bool" Usage="System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-203">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection was  a WebSocket request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-203">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection was  a WebSocket request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-204">Restituisce <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-204">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="eeab5-205">
            <see langword="true" /> Se la connessione TCP è una richiesta WebSocket. in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-205">
              <see langword="true" /> if the TCP connection is a WebSocket request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool" Usage="System.Net.HttpListenerRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-206">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client requests a persistent connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-206">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client requests a persistent connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-207">
            <see langword="true" /> Se la connessione deve essere tenuta aperta; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-207">
              <see langword="true" /> if the connection should be kept open; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-208">Se un client HTTP e server prevede di scambiare i dati più volte in un breve periodo di tempo, una connessione permanente di velocizzare le comunicazioni, consentendo loro di evitare il sovraccarico richiesto per aprire e chiudere una connessione TCP per ogni messaggio.</span><span class="sxs-lookup"><span data-stu-id="eeab5-208">If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.</span></span> <span data-ttu-id="eeab5-209">Per i client che usano HTTP/1.1, il valore predefinito per questa proprietà è `true`.</span><span class="sxs-lookup"><span data-stu-id="eeab5-209">For clients using HTTP/1.1, the default value for this property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-210">Esempio di codice seguente illustra l'uso di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-210">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint LocalEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint LocalEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ LocalEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-211">Get the server IP address and port number to which the request is directed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-211">Get the server IP address and port number to which the request is directed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-212">Un <see cref="T:System.Net.IPEndPoint" /> che rappresenta l'indirizzo IP che la richiesta viene inviata a.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-212">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address that the request is sent to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-213">Questa proprietà è utile quando si desidera rispondere alle richieste in base al modo in cui che sono state risolte.</span><span class="sxs-lookup"><span data-stu-id="eeab5-213">This property is useful when you want to respond to requests based on the way they are addressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-214">Esempio di codice seguente illustra l'uso di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-214">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : Version" Usage="System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-215">Gets the HTTP version used by the requesting client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-215">Gets the HTTP version used by the requesting client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-216">Oggetto <see cref="T:System.Version" /> che identifica la versione del client HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-216">A <see cref="T:System.Version" /> that identifies the client's version of HTTP.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-217">Le funzionalità di versioni diverse di HTTP sono specificate nei documenti disponibile all'indirizzo [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="eeab5-217">The capabilities of different HTTP versions are specified in the documents available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-218">Esempio di codice seguente illustra l'uso di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-218">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-219">Gets the query string included in the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-219">Gets the query string included in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-220">Oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> oggetto che contiene i dati di query inclusi nella richiesta <see cref="P:System.Net.HttpListenerRequest.Url" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-220">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the query data included in the request <see cref="P:System.Net.HttpListenerRequest.Url" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-221">In un URL, le informazioni della query sono separate dalle informazioni di percorso da un punto interrogativo (?).</span><span class="sxs-lookup"><span data-stu-id="eeab5-221">In a URL, the query information is separated from the path information by a question mark (?).</span></span> <span data-ttu-id="eeab5-222">Coppie nome/valore sono separate da un segno di uguale (=).</span><span class="sxs-lookup"><span data-stu-id="eeab5-222">Name/value pairs are separated by an equals sign (=).</span></span> <span data-ttu-id="eeab5-223">Per accedere ai dati di query come un'unica stringa, Ottieni la <xref:System.Uri.Query%2A> valore della proprietà dal <xref:System.Uri> oggetto restituito da <xref:System.Net.HttpListenerRequest.Url%2A>.</span><span class="sxs-lookup"><span data-stu-id="eeab5-223">To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eeab5-224">Le query senza un segno di uguale (esempio: [ http://www.contoso.com/query.htm?Name ](http://www.contoso.com/query.htm?Name) ) vengono aggiunti al `null` chiave nel <xref:System.Collections.Specialized.NameValueCollection>.</span><span class="sxs-lookup"><span data-stu-id="eeab5-224">Queries without an equal sign (example: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) are added to the `null` key in the <xref:System.Collections.Specialized.NameValueCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-225">Esempio di codice seguente illustra l'uso di <xref:System.Net.HttpListenerRequest.QueryString%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-225">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.QueryString%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Net.HttpListenerRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-226">Gets the URL information (without the host and port) requested by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-226">Gets the URL information (without the host and port) requested by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-227">Oggetto <see cref="T:System.String" /> che contiene l'URL non elaborato per questa richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-227">A <see cref="T:System.String" /> that contains the raw URL for this request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-228">L'URL non elaborato è definito come parte dell'URL che segue le informazioni di dominio.</span><span class="sxs-lookup"><span data-stu-id="eeab5-228">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="eeab5-229">Nella stringa dell'URL `http://www.contoso.com/articles/recent.aspx`, l'URL non elaborato è `/articles/recent.aspx`.</span><span class="sxs-lookup"><span data-stu-id="eeab5-229">In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is `/articles/recent.aspx`.</span></span> <span data-ttu-id="eeab5-230">L'URL non elaborato include la stringa di query, se presente.</span><span class="sxs-lookup"><span data-stu-id="eeab5-230">The raw URL includes the query string, if present.</span></span>  
  
 <span data-ttu-id="eeab5-231">Per ottenere le informazioni host e la porta, utilizzare il <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-231">To obtain the host and port information, use the <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-232">Esempio di codice seguente illustra l'uso di <xref:System.Net.HttpListenerRequest.RawUrl%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-232">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint RemoteEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ RemoteEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-233">Gets the client IP address and port number from which the request originated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-233">Gets the client IP address and port number from which the request originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-234">Un <see cref="T:System.Net.IPEndPoint" /> che rappresenta il numero di porta e indirizzo IP da cui ha origine la richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-234">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address and port number from which the request originated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eeab5-235">Esempio di codice seguente illustra l'uso di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-235">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RequestTraceIdentifier">
      <MemberSignature Language="C#" Value="public Guid RequestTraceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid RequestTraceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestTraceIdentifier As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid RequestTraceIdentifier { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestTraceIdentifier : Guid" Usage="System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Always returns Guid.Empty")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-236">Gets the request identifier of the incoming HTTP request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-236">Gets the request identifier of the incoming HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-237">Oggetto <see cref="T:System.Guid" /> oggetto che contiene l'identificatore della richiesta HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-237">A <see cref="T:System.Guid" /> object that contains the identifier of the HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string" Usage="System.Net.HttpListenerRequest.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-238">Gets the Service Provider Name (SPN) that the client sent on the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-238">Gets the Service Provider Name (SPN) that the client sent on the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-239">Oggetto <see cref="T:System.String" /> che contiene il nome SPN del client inviato nella richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-239">A <see cref="T:System.String" /> that contains the SPN the client sent on the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-240">Un'applicazione può utilizzare il <xref:System.Net.HttpListenerRequest.ServiceName%2A> proprietà per eseguire la convalida di nome forniscono servizio (SPN) personalizzato.</span><span class="sxs-lookup"><span data-stu-id="eeab5-240">An application could use the <xref:System.Net.HttpListenerRequest.ServiceName%2A> property to perform custom Service Provide Name (SPN) validation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.TransportContext" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransportContext : System.Net.TransportContext" Usage="System.Net.HttpListenerRequest.TransportContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-241">Gets the <see cref="T:System.Net.TransportContext" /> for the client request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-241">Gets the <see cref="T:System.Net.TransportContext" /> for the client request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-242">Oggetto <see cref="T:System.Net.TransportContext" /> oggetto per la richiesta del client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-242">A <see cref="T:System.Net.TransportContext" /> object for the client request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-243">Il <xref:System.Net.TransportContext> proprietà può essere utilizzata per recuperare il token di associazione di canale (CBT) per un <xref:System.Net.HttpListenerRequest> cui è stato inviato tramite HTTPS.</span><span class="sxs-lookup"><span data-stu-id="eeab5-243">The <xref:System.Net.TransportContext> property can be used to retrieve the channel binding token (CBT) for an <xref:System.Net.HttpListenerRequest> which was sent using HTTPS.</span></span>  
  
 <span data-ttu-id="eeab5-244">Un'applicazione può usare la <xref:System.Net.TransportContext> proprietà per eseguire l'autenticazione personalizzata tramite le chiamate a Win32 native [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021) (funzione).</span><span class="sxs-lookup"><span data-stu-id="eeab5-244">An application could use the <xref:System.Net.TransportContext> property to perform custom authentication using calls to the native Win32 [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021) function.</span></span>  
  
 <span data-ttu-id="eeab5-245">Se un'applicazione tenta di recuperare il token di associazione di canale (CBT) da questo <xref:System.Net.HttpListenerRequest.TransportContext%2A> proprietà usando la <xref:System.Net.TransportContext.GetChannelBinding%2A> metodo e il <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> non è <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, il <xref:System.Net.HttpListenerRequest> genererà <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="eeab5-245">If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="eeab5-246">Il <xref:System.Net.HttpListenerRequest> esegue l'override di <xref:System.Net.TransportContext.GetChannelBinding%2A> metodo con un'implementazione interna.</span><span class="sxs-lookup"><span data-stu-id="eeab5-246">The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.ServiceName" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Net.HttpListenerRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-247">Gets the <see cref="T:System.Uri" /> object requested by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-247">Gets the <see cref="T:System.Uri" /> object requested by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-248">Oggetto <see cref="T:System.Uri" /> oggetto che identifica la risorsa richiesta dal client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-248">A <see cref="T:System.Uri" /> object that identifies the resource requested by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-249">Il <xref:System.Net.HttpListenerRequest.Url%2A> proprietà consente di ottenere tutte le informazioni disponibili da un <xref:System.Uri> oggetto.</span><span class="sxs-lookup"><span data-stu-id="eeab5-249">The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object.</span></span> <span data-ttu-id="eeab5-250">Se è necessario conoscere solo il testo non elaborato della richiesta URI, è consigliabile usare il <xref:System.Net.HttpListenerRequest.RawUrl%2A> proprietà invece.</span><span class="sxs-lookup"><span data-stu-id="eeab5-250">If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead.</span></span>  
  
 <span data-ttu-id="eeab5-251">Il <xref:System.Net.HttpListenerRequest.Url%2A> proprietà è null se il <xref:System.Uri> dal client nelze analyzovat.</span><span class="sxs-lookup"><span data-stu-id="eeab5-251">The <xref:System.Net.HttpListenerRequest.Url%2A> property is null if the <xref:System.Uri> from the client could not be parsed.</span></span>  
  
 <span data-ttu-id="eeab5-252">Il <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> proprietà indica se <xref:System.Net.HttpListener> Usa l'URI senza codice di escape non elaborato anziché l'URI convertito in cui vengono convertiti i valori codificati in percentuale e vengono eseguiti altri passaggi di normalizzazione.</span><span class="sxs-lookup"><span data-stu-id="eeab5-252">The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</span></span>  
  
 <span data-ttu-id="eeab5-253">Quando un <xref:System.Net.HttpListener> istanza riceve una richiesta tramite il `http.sys` servizio, crea un'istanza della stringa URI fornita dal `http.sys`e lo espone come il <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-253">When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="eeab5-254">Il `http.sys` servizio espone due stringhe URI richiesta:</span><span class="sxs-lookup"><span data-stu-id="eeab5-254">The `http.sys` service exposes two request URI strings:</span></span>  
  
-   <span data-ttu-id="eeab5-255">URI non elaborato</span><span class="sxs-lookup"><span data-stu-id="eeab5-255">Raw URI</span></span>  
  
-   <span data-ttu-id="eeab5-256">URI convertito</span><span class="sxs-lookup"><span data-stu-id="eeab5-256">Converted URI</span></span>  
  
 <span data-ttu-id="eeab5-257">L'URI non elaborato è il <xref:System.Uri?displayProperty=nameWithType> fornito nella riga della richiesta di una richiesta HTTP:</span><span class="sxs-lookup"><span data-stu-id="eeab5-257">The raw URI is the <xref:System.Uri?displayProperty=nameWithType> provided in the request line of a HTTP request:</span></span>  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 <span data-ttu-id="eeab5-258">L'URI non elaborato fornito dal `http.sys` per è indicato in precedenza, la richiesta di "percorso /".</span><span class="sxs-lookup"><span data-stu-id="eeab5-258">The raw URI provided by `http.sys` for the request mentioned above, is "/path/".</span></span> <span data-ttu-id="eeab5-259">Rappresenta la stringa che segue il verbo HTTP, come è stato inviato in rete.</span><span class="sxs-lookup"><span data-stu-id="eeab5-259">This represents the string following the HTTP verb as it was sent over the network.</span></span>  
  
 <span data-ttu-id="eeab5-260">Il `http.sys` servizio crea un URI convertito dalle informazioni fornite nella richiesta usando l'URI fornito nella riga della richiesta HTTP e l'intestazione Host per determinare il server di origine della richiesta deve essere inoltrato a.</span><span class="sxs-lookup"><span data-stu-id="eeab5-260">The `http.sys` service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</span></span> <span data-ttu-id="eeab5-261">Questa operazione viene eseguita confrontando le informazioni della richiesta con un set di prefissi URI registrati.</span><span class="sxs-lookup"><span data-stu-id="eeab5-261">This is done by comparing the information from the request with a set of registered URI prefixes.</span></span> <span data-ttu-id="eeab5-262">Per poter essere in grado di confrontare tali valori, deve essere eseguita la normalizzazione della richiesta.</span><span class="sxs-lookup"><span data-stu-id="eeab5-262">In order to be able to compare those values, some normalization to the request needs to be done.</span></span> <span data-ttu-id="eeab5-263">Nell'esempio precedente l'URI convertito sarà come segue:</span><span class="sxs-lookup"><span data-stu-id="eeab5-263">For the sample above the converted URI would be as follows:</span></span>  
  
 `http://www.contoso.com/path/`  
  
 <span data-ttu-id="eeab5-264">Il `http.sys` service combina il <xref:System.Uri.Host%2A?displayProperty=nameWithType> valore della proprietà e la stringa nella riga della richiesta per creare un URI convertito.</span><span class="sxs-lookup"><span data-stu-id="eeab5-264">The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=nameWithType> property value and the string in the request line to create a converted URI.</span></span> <span data-ttu-id="eeab5-265">È inoltre `http.sys` e il <xref:System.Uri?displayProperty=nameWithType> classe anche eseguire le operazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="eeab5-265">In addition, `http.sys` and the <xref:System.Uri?displayProperty=nameWithType> class also do the following:</span></span>  
  
-   <span data-ttu-id="eeab5-266">Escape di annullare la percentuale di tutti i valori codificati.</span><span class="sxs-lookup"><span data-stu-id="eeab5-266">Un-escapes all percent encoded values.</span></span>  
  
-   <span data-ttu-id="eeab5-267">Caratteri non ASCII converte codificato in percentuale in una rappresentazione di caratteri UTF-16.</span><span class="sxs-lookup"><span data-stu-id="eeab5-267">Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</span></span> <span data-ttu-id="eeab5-268">Si noti che i caratteri DBCS/ANSI e UTF-8 sono supportati anche i caratteri Unicode (codifica Unicode utilizzando il formato uXXXX %).</span><span class="sxs-lookup"><span data-stu-id="eeab5-268">Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</span></span>  
  
-   <span data-ttu-id="eeab5-269">Esegue gli altri passaggi di normalizzazione, ad esempio la compressione del percorso.</span><span class="sxs-lookup"><span data-stu-id="eeab5-269">Executes other normalization steps, like path compression.</span></span>  
  
 <span data-ttu-id="eeab5-270">Poiché la richiesta non contiene alcuna informazione sulla codifica usata per i valori codificati in percentuale, potrebbe non essere possibile determinare la codifica corretta appena analizzando i valori codificati in percentuale.</span><span class="sxs-lookup"><span data-stu-id="eeab5-270">Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</span></span>  
  
 <span data-ttu-id="eeab5-271">Di conseguenza `http.sys` vengono fornite due chiavi del Registro di sistema per la modifica del processo:</span><span class="sxs-lookup"><span data-stu-id="eeab5-271">Therefore `http.sys` provides two registry keys for modifying the process:</span></span>  
  
|<span data-ttu-id="eeab5-272">Chiave del Registro di sistema</span><span class="sxs-lookup"><span data-stu-id="eeab5-272">Registry Key</span></span>|<span data-ttu-id="eeab5-273">Valore predefinito</span><span class="sxs-lookup"><span data-stu-id="eeab5-273">Default Value</span></span>|<span data-ttu-id="eeab5-274">Descrizione</span><span class="sxs-lookup"><span data-stu-id="eeab5-274">Description</span></span>|  
|------------------|-------------------|-----------------|  
|<span data-ttu-id="eeab5-275">EnableNonUTF8</span><span class="sxs-lookup"><span data-stu-id="eeab5-275">EnableNonUTF8</span></span>|<span data-ttu-id="eeab5-276">1</span><span class="sxs-lookup"><span data-stu-id="eeab5-276">1</span></span>|<span data-ttu-id="eeab5-277">Se è zero, `http.sys` accetta solo gli URL con codifica UTF-8.</span><span class="sxs-lookup"><span data-stu-id="eeab5-277">If zero, `http.sys` accepts only UTF-8-encoded URLs.</span></span><br /><br /> <span data-ttu-id="eeab5-278">Se diverso da zero, `http.sys` accetta anche un URL con codifica ANSI o con codifica DBCS nelle richieste.</span><span class="sxs-lookup"><span data-stu-id="eeab5-278">If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.</span></span>|  
|<span data-ttu-id="eeab5-279">FavorUTF8</span><span class="sxs-lookup"><span data-stu-id="eeab5-279">FavorUTF8</span></span>|<span data-ttu-id="eeab5-280">1</span><span class="sxs-lookup"><span data-stu-id="eeab5-280">1</span></span>|<span data-ttu-id="eeab5-281">Se diverso da zero, `http.sys` sempre prova a decodificare un URL come UTF-8 per primo; se tale conversione non riesce ed EnableNonUTF8 è diverso da zero, HTTP. sys quindi prova a decodificare come ANSI o DBCS.</span><span class="sxs-lookup"><span data-stu-id="eeab5-281">If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</span></span><br /><br /> <span data-ttu-id="eeab5-282">Se è zero (ed EnableNonUTF8 è diverso da zero), `http.sys` prova a decodificare come ANSI o DBCS; se non riesce, ritenta una conversione UTF-8.</span><span class="sxs-lookup"><span data-stu-id="eeab5-282">If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</span></span>|  
  
 <span data-ttu-id="eeab5-283">Quando <xref:System.Net.HttpListener> riceve una richiesta, Usa l'URI convertito da `http.sys` come input per il <xref:System.Net.HttpListenerRequest.Url%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-283">When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 <span data-ttu-id="eeab5-284">È necessario per il supporto di caratteri oltre ai caratteri e numeri negli URI.</span><span class="sxs-lookup"><span data-stu-id="eeab5-284">There is a need for supporting characters besides characters and numbers in URIs.</span></span> <span data-ttu-id="eeab5-285">Un esempio è l'URI seguente, che consente di recuperare informazioni sui clienti per cliente numero "1/3812":</span><span class="sxs-lookup"><span data-stu-id="eeab5-285">An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</span></span>  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 <span data-ttu-id="eeab5-286">Si noti la barra nell'Uri (% 2F) codificati in percentuale.</span><span class="sxs-lookup"><span data-stu-id="eeab5-286">Note the percent-encoded slash in the Uri (%2F).</span></span> <span data-ttu-id="eeab5-287">Ciò è necessario, poiché in questo caso il carattere di barra rappresenta i dati e non un delimitatore di percorso.</span><span class="sxs-lookup"><span data-stu-id="eeab5-287">This is necessary, since in this case the slash character represents data and not a path delimiter.</span></span>  
  
 <span data-ttu-id="eeab5-288">Passare la stringa al costruttore Uri causerà l'URI seguente:</span><span class="sxs-lookup"><span data-stu-id="eeab5-288">Passing the string to Uri constructor will lead to the following URI:</span></span>  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 <span data-ttu-id="eeab5-289">Suddividendo il percorso in segmenti comporta i seguenti elementi:</span><span class="sxs-lookup"><span data-stu-id="eeab5-289">Splitting the path into its segments would result in the following elements:</span></span>  
  
 `Customer('1`  
  
 `3812')`  
  
 <span data-ttu-id="eeab5-290">Non è questo lo scopo del mittente della richiesta.</span><span class="sxs-lookup"><span data-stu-id="eeab5-290">This is not the intent of the sender of the request.</span></span>  
  
 <span data-ttu-id="eeab5-291">Se il <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> proprietà è impostata su false, quindi quando il <xref:System.Net.HttpListener> riceve una richiesta, Usa l'URI non elaborato anziché l'URI convertito dal `http.sys` come input per il <xref:System.Net.HttpListenerRequest.Url%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-291">If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-292">Esempio di codice seguente illustra l'uso di <xref:System.Net.HttpListenerRequest.Url%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-292">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-293">Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-293">Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-294">Oggetto <see cref="T:System.Uri" /> oggetto che contiene il testo della richiesta <see cref="F:System.Net.HttpRequestHeader.Referer" /> intestazione, o <see langword="null" /> se l'intestazione non è stato incluso nella richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-294">A <see cref="T:System.Uri" /> object that contains the text of the request's <see cref="F:System.Net.HttpRequestHeader.Referer" /> header, or <see langword="null" /> if the header was not included in the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-295">Se un client ha seguito un collegamento ipertestuale all'URI richiesto, la richiesta potrebbe contenere un `Referrer` intestazione che identifica l'URI della risorsa che conteneva il collegamento ipertestuale.</span><span class="sxs-lookup"><span data-stu-id="eeab5-295">If a client has followed a hyperlink to the requested URI, its request might contain a `Referrer` header that identifies the URI of the resource that contained the hyperlink.</span></span>  
  
 <span data-ttu-id="eeab5-296">I client possono falsificare o scegliere di non presentare una <xref:System.Net.HttpRequestHeader.Referer> intestazione.</span><span class="sxs-lookup"><span data-stu-id="eeab5-296">Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header.</span></span> <span data-ttu-id="eeab5-297">Pertanto, mentre il <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> proprietà può essere utile per identificare le tendenze di base del traffico Web, è consigliabile usarlo come parte di uno schema di autorizzazione per controllare l'accesso ai dati.</span><span class="sxs-lookup"><span data-stu-id="eeab5-297">Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.</span></span>  
  
 <span data-ttu-id="eeab5-298">Per un elenco completo di intestazioni di richiesta, vedere il <xref:System.Net.HttpRequestHeader> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="eeab5-298">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="eeab5-299">Il <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> è null quando è presente alcun `Referrer` intestazione nella richiesta o quando il `Referrer` intestazione è presente nella richiesta ma non viene analizzato come un valore valido <xref:System.Uri>.</span><span class="sxs-lookup"><span data-stu-id="eeab5-299">The <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> is null when there is no `Referrer` header in the request or when the `Referrer` header is present in the request but does not parse to a valid <xref:System.Uri>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-300">Esempio di codice seguente illustra l'uso di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-300">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Net.HttpListenerRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-301">Gets the user agent presented by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-301">Gets the user agent presented by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-302">Oggetto <see cref="T:System.String" /> oggetto che contiene il testo della richiesta <see langword="User-Agent" /> intestazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-302">A <see cref="T:System.String" /> object that contains the text of the request's <see langword="User-Agent" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-303">Il `User-Agent` intestazione contiene in genere il testo che identifica il nome e numero di versione del software utilizzato per generare la richiesta.</span><span class="sxs-lookup"><span data-stu-id="eeab5-303">The `User-Agent` header typically contains text that identifies the name and version number of the software used to generate the request.</span></span>  
  
 <span data-ttu-id="eeab5-304">Per un elenco completo di intestazioni di richiesta, vedere il <xref:System.Net.HttpRequestHeader> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="eeab5-304">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="eeab5-305">Il <xref:System.Net.HttpListenerRequest.UserAgent%2A> è null quando è presente alcun `User-Agent` intestazione nella richiesta.</span><span class="sxs-lookup"><span data-stu-id="eeab5-305">The <xref:System.Net.HttpListenerRequest.UserAgent%2A> is null when there is no `User-Agent` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-306">Esempio di codice seguente illustra l'uso di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-306">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-307">Gets the server IP address and port number to which the request is directed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-307">Gets the server IP address and port number to which the request is directed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-308">Oggetto <see cref="T:System.String" /> che contiene le informazioni sull'indirizzo host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-308">A <see cref="T:System.String" /> that contains the host address information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-309">Le informazioni restituite da questa proprietà sono disponibile in anche il <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-309">The information returned by this property is also available in the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-310">Esempio di codice seguente visualizza il valore di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-310">The following code example displays the value of this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Net.HttpListenerRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-311">Gets the DNS name and, if provided, the port number specified by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-311">Gets the DNS name and, if provided, the port number specified by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-312">Oggetto <see cref="T:System.String" /> valore che contiene il testo della richiesta <see langword="Host" /> intestazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-312">A <see cref="T:System.String" /> value that contains the text of the request's <see langword="Host" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-313">Il `Host` intestazione contiene il nome host del server richiesto e il numero di porta, se specificato, separati da due punti (ad esempio, `www.contoso.com:8080`).</span><span class="sxs-lookup"><span data-stu-id="eeab5-313">The `Host` header contains the requested server host name and port number, if specified, separated by a colon (for example, `www.contoso.com:8080`).</span></span>  
  
 <span data-ttu-id="eeab5-314">È possibile usare questa proprietà restituiscano risposte differenti in base al nome host specificato nella richiesta.</span><span class="sxs-lookup"><span data-stu-id="eeab5-314">You can use this property to return different responses depending on the host name specified in the request.</span></span>  
  
 <span data-ttu-id="eeab5-315">Per un elenco completo di intestazioni di richiesta, vedere il <xref:System.Net.HttpRequestHeader> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="eeab5-315">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-316">Esempio di codice seguente illustra l'uso di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="eeab5-316">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Net.HttpListenerRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eeab5-317">Gets the natural languages that are preferred for the response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-317">Gets the natural languages that are preferred for the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eeab5-318">Oggetto <see cref="T:System.String" /> matrice che contiene le lingue specificate della richiesta <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> intestazione oppure <see langword="null" /> se la richiesta del client non include un <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> intestazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eeab5-318">A <see cref="T:System.String" /> array that contains the languages specified in the request's <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header or <see langword="null" /> if the client request did not include an <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eeab5-319">Per una descrizione dettagliata del `Accept-Language` intestazione, vedere RFC 2616, sezione 14,4, disponibile all'indirizzo [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="eeab5-319">For a detailed description of the `Accept-Language` header, see RFC 2616 Section 14.4, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="eeab5-320">Per un elenco completo di intestazioni di richiesta, vedere il <xref:System.Net.HttpRequestHeader> enumerazione.</span><span class="sxs-lookup"><span data-stu-id="eeab5-320">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eeab5-321">Esempio di codice seguente consente di visualizzare le lingue della richiesta `Accept-Language` intestazione.</span><span class="sxs-lookup"><span data-stu-id="eeab5-321">The following code example displays the languages from the request's `Accept-Language` header.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
  </Members>
</Type>