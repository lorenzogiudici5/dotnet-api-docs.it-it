<Type Name="Dns" FullName="System.Net.Dns">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="27a611ff497cc87d2a8e14f957382a77895c3470" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37643692" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Dns" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Dns extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Dns" />
  <TypeSignature Language="VB.NET" Value="Public Class Dns" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dns abstract sealed" />
  <TypeSignature Language="F#" Value="type Dns = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NameResolution</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce la funzionalità di risoluzione semplice dei nomi di dominio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Dns> una classe statica che consente di recuperare informazioni su un host specifico dall'Internet sistema DNS (Domain Name).  
  
 Le informazioni sull'host della query DNS viene restituiti in un'istanza del <xref:System.Net.IPHostEntry> classe. Se l'host specificato contiene più di una voce nel database DNS, <xref:System.Net.IPHostEntry> contiene più indirizzi IP e gli alias.  
  
   
  
## Examples  
 Nell'esempio seguente esegue una query nel database DNS per informazioni sull'host www.contoso.com.  
  
 [!code-cpp[Classic Dns Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Dns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Dns Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Dns Example/CS/source.cs#1)]
 [!code-vb[Classic Dns Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Dns Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGetHostAddresses">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostAddresses (string hostNameOrAddress, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostAddresses(string hostNameOrAddress, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostAddresses (hostNameOrAddress As String, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostAddresses(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostAddresses : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostAddresses (hostNameOrAddress, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nome dell'host o indirizzo IP da risolvere.</param>
        <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
        <param name="state">Oggetto definito dall'utente che contiene informazioni sull'operazione. Questo oggetto viene passato al delegato <c>requestCallback</c> al completamento dell'operazione.</param>
        <summary>Restituisce in modo asincrono gli indirizzi IP (Internet Protocol) per l'host specificato.</summary>
        <returns>Istanza di <see cref="T:System.IAsyncResult" /> che fa riferimento alla richiesta asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Dns.BeginGetHostAddresses%2A> metodo esegue una query in modo asincrono un server DNS per gli indirizzi IP associati a un nome host. Se `hostNameOrAddress` è un indirizzo IP, questo indirizzo viene restituito senza eseguire una query server DNS.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Se una stringa vuota viene passata come il `hostNameOrAddress` argomento, quindi questo metodo restituisce gli indirizzi IPv4 e IPv6 dell'host locale.
  
 Asincrona <xref:System.Net.Dns.BeginGetHostAddresses%2A> operazione deve essere completata chiamando il <xref:System.Net.Dns.EndGetHostAddresses%2A> (metodo). In genere, il metodo viene richiamato dal `requestCallback` delegare.  
  
 Questo metodo non blocca fino al completamento dell'operazione. Per bloccare fino al completamento dell'operazione, usare il <xref:System.Net.Dns.GetHostAddresses%2A> (metodo).  
  
 Per altre informazioni sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza del parametro <paramref name="hostNameOrAddress" /> è maggiore di 255 caratteri.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante la risoluzione del parametro <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> è un indirizzo IP non valido.</exception>
        <permission cref="T:System.Net.DnsPermission">per l'accesso alle informazioni DNS. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostByName">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostByName (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostByName(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostByName (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostByName(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostByName : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostByName (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName">Nome DNS dell'host.</param>
        <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
        <param name="stateObject">Oggetto definito dall'utente che contiene informazioni sull'operazione. Questo oggetto viene passato al delegato <c>requestCallback</c> al completamento dell'operazione.</param>
        <summary>Avvia una richiesta asincrona di informazioni <see cref="T:System.Net.IPHostEntry" /> sul nome host DNS specificato.</summary>
        <returns>Istanza di <see cref="T:System.IAsyncResult" /> che fa riferimento alla richiesta asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asincrona <xref:System.Net.Dns.BeginGetHostByName%2A> operazione deve essere completata chiamando il <xref:System.Net.Dns.EndGetHostByName%2A> (metodo). In genere, il metodo viene richiamato dal `requestCallback` delegare.  
  
 Questo metodo non blocca fino al completamento dell'operazione. Per bloccare fino al completamento dell'operazione, usare il <xref:System.Net.Dns.GetHostByName%2A> (metodo).  
  
 Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante l'esecuzione della query DNS.</exception>
        <permission cref="T:System.Net.DnsPermission">per l'accesso alle informazioni DNS. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Risolve in modo asincrono un nome host o un indirizzo IP in un'istanza di <see cref="T:System.Net.IPHostEntry" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (System.Net.IPAddress address, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(class System.Net.IPAddress address, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (address As IPAddress, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::Net::IPAddress ^ address, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : System.Net.IPAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (address, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Indirizzo IP da risolvere.</param>
        <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
        <param name="stateObject">Oggetto definito dall'utente che contiene informazioni sull'operazione. Questo oggetto viene passato al delegato <c>requestCallback</c> al completamento dell'operazione.</param>
        <summary>Risolve in modo asincrono un indirizzo IP in un'istanza di <see cref="T:System.Net.IPHostEntry" />.</summary>
        <returns>Istanza di <see cref="T:System.IAsyncResult" /> che fa riferimento alla richiesta asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Dns.BeginGetHostEntry%2A> metodo esegue una query in modo asincrono un server DNS per gli indirizzi IP e degli alias associati un indirizzo IP.  
  
 **Nota** questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Asincrona <xref:System.Net.Dns.BeginGetHostEntry%2A> operazione deve essere completata chiamando il <xref:System.Net.Dns.EndGetHostEntry%2A> (metodo). In genere, il metodo viene richiamato dal `requestCallback` delegare.  
  
 Questo metodo non blocca fino al completamento dell'operazione. Per bloccare fino al completamento dell'operazione, usare il <xref:System.Net.Dns.GetHostEntry%2A> (metodo).  
  
 Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Net.Dns.BeginGetHostEntry%2A> metodo per risolvere un indirizzo IP indirizzo a un <xref:System.Net.IPHostEntry> istanza.  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante la risoluzione del parametro <paramref name="address" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> è un indirizzo IP non valido.</exception>
        <permission cref="T:System.Net.DnsPermission">per l'accesso alle informazioni DNS. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (string hostNameOrAddress, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(string hostNameOrAddress, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (hostNameOrAddress As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (hostNameOrAddress, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nome dell'host o indirizzo IP da risolvere.</param>
        <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
        <param name="stateObject">Oggetto definito dall'utente che contiene informazioni sull'operazione. Questo oggetto viene passato al delegato <c>requestCallback</c> al completamento dell'operazione.</param>
        <summary>Risolve in modo asincrono un nome host o un indirizzo IP in un'istanza di <see cref="T:System.Net.IPHostEntry" />.</summary>
        <returns>Istanza di <see cref="T:System.IAsyncResult" /> che fa riferimento alla richiesta asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Dns.BeginGetHostEntry%2A> metodo in un server DNS per l'indirizzo IP associato a un nome host o indirizzo IP.  
  
 **Nota** questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Asincrona <xref:System.Net.Dns.BeginGetHostEntry%2A> operazione deve essere completata chiamando il <xref:System.Net.Dns.EndGetHostEntry%2A> (metodo). In genere, il metodo viene richiamato dal `requestCallback` delegare.  
  
 Questo metodo non blocca fino al completamento dell'operazione. Per bloccare fino al completamento dell'operazione, usare il <xref:System.Net.Dns.GetHostEntry%2A> (metodo).  
  
 Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Net.Dns.BeginGetHostEntry%2A> metodo per risolvere un indirizzo IP indirizzo a un <xref:System.Net.IPHostEntry> istanza.  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza del parametro <paramref name="hostNameOrAddress" /> è maggiore di 255 caratteri.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante la risoluzione del parametro <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> è un indirizzo IP non valido.</exception>
        <permission cref="T:System.Net.DnsPermission">per l'accesso alle informazioni DNS. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginResolve (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName">Nome DNS dell'host.</param>
        <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
        <param name="stateObject">Oggetto definito dall'utente che contiene informazioni sull'operazione. Questo oggetto viene passato al delegato <c>requestCallback</c> al completamento dell'operazione.</param>
        <summary>Avvia una richiesta asincrona per risolvere un nome host DNS o un indirizzo IP in un'istanza di <see cref="T:System.Net.IPAddress" />.</summary>
        <returns>Istanza di <see cref="T:System.IAsyncResult" /> che fa riferimento alla richiesta asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asincrona <xref:System.Net.Dns.BeginResolve%2A> operazione deve essere completata chiamando il <xref:System.Net.Dns.EndResolve%2A> (metodo). In genere, il metodo viene richiamato dal `requestCallback` delegare.  
  
 Questo metodo non blocca fino al completamento dell'operazione. Per bloccare fino al completamento dell'operazione, usare il <xref:System.Net.Dns.Resolve%2A> (metodo).  
  
 Per altre informazioni sull'uso del modello di programmazione asincrono, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 L'esempio seguente usa <xref:System.Net.Dns.BeginResolve%2A> per risolvere un nome host DNS per un <xref:System.Net.IPAddress>.  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Il chiamante non dispone delle autorizzazioni per accedere alle informazioni DNS.</exception>
        <permission cref="T:System.Net.DnsPermission">per l'accesso alle informazioni DNS. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] EndGetHostAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] EndGetHostAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostAddresses (asyncResult As IAsyncResult) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ EndGetHostAddresses(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostAddresses : IAsyncResult -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.EndGetHostAddresses asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Istanza di <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termina una richiesta asincrona di informazioni DNS.</summary>
        <returns>Matrice di tipo <see cref="T:System.Net.IPAddress" /> contenente gli indirizzi IP per l'host specificato dal parametro <paramref name="hostNameOrAddress" /> del metodo <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Dns.BeginGetHostAddresses%2A> metodo in un server DNS per gli indirizzi IP associati a un nome host. Se `hostNameOrAddress` è un indirizzo IP, questo indirizzo viene restituito senza eseguire una query server DNS.  
  
 Se una stringa vuota viene passata come il `hostNameOrAddress` argomento, quindi questo metodo restituisce gli indirizzi IPv4 e IPv6 dell'host locale.
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostByName (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostByName(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostByName (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostByName(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostByName : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostByName asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Istanza di <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termina una richiesta asincrona di informazioni DNS.</summary>
        <returns>Oggetto <see cref="T:System.Net.IPHostEntry" /> contenente informazioni DNS su un host.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo si blocca fino a quando l'operazione è completata.  
  
 Per eseguire questa operazione in modo sincrono, usare il <xref:System.Net.Dns.GetHostByName%2A> (metodo).  
  
 Se il <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> è impostata su `true`, il <xref:System.Net.IPHostEntry.Aliases%2A> proprietà del <xref:System.Net.IPHostEntry> istanza restituita non viene popolato da questo metodo e sarà sempre vuoto.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostEntry (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostEntry(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostEntry (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostEntry(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostEntry : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostEntry asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Istanza di <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="Overload:System.Net.Dns.BeginGetHostEntry" />.</param>
        <summary>Termina una richiesta asincrona di informazioni DNS.</summary>
        <returns>Istanza di <see cref="T:System.Net.IPHostEntry" /> contenente informazioni di indirizzo sull'host.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo si blocca fino a quando l'operazione è completata.  
  
 Il <xref:System.Net.IPHostEntry.Aliases%2A> proprietà del <xref:System.Net.IPHostEntry> istanza restituita non viene popolato da questo metodo e sarà sempre vuoto.  
  
 Per eseguire questa operazione in modo sincrono, usare un <xref:System.Net.Dns.GetHostEntry%2A> (metodo).  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndResolve (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndResolve(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndResolve(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndResolve asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Istanza di <see cref="T:System.IAsyncResult" /> restituita da una chiamata al metodo <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termina una richiesta asincrona di informazioni DNS.</summary>
        <returns>Oggetto <see cref="T:System.Net.IPHostEntry" /> contenente informazioni DNS su un host.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo si blocca fino a quando l'operazione è completata.  
  
 Se il <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> è impostata su `true`, il <xref:System.Net.IPHostEntry.Aliases%2A> proprietà del <xref:System.Net.IPHostEntry> istanza restituita non viene popolato da questo metodo e sarà sempre vuoto.  
  
 Per eseguire questa operazione in modo sincrono, usare il <xref:System.Net.Dns.Resolve%2A> (metodo).  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Nell'esempio seguente termina una richiesta asincrona per informazioni sull'host DNS.  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] GetHostAddresses (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] GetHostAddresses(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddresses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddresses (hostNameOrAddress As String) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ GetHostAddresses(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddresses : string -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.GetHostAddresses hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nome dell'host o indirizzo IP da risolvere.</param>
        <summary>Restituisce gli indirizzi IP (Internet Protocol) per l'host specificato.</summary>
        <returns>Matrice di tipo <see cref="T:System.Net.IPAddress" /> contenente gli indirizzi IP per l'host specificato dal parametro <paramref name="hostNameOrAddress" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Dns.GetHostAddresses%2A> metodo in un server DNS per gli indirizzi IP associati a un nome host. Se `hostNameOrAddress` è un indirizzo IP, questo indirizzo viene restituito senza eseguire una query server DNS.  
  
 Se una stringa vuota viene passata come il `hostNameOrAddress` argomento, quindi questo metodo restituisce gli indirizzi IPv4 e IPv6 dell'host locale.
  
 Gli indirizzi IPv6 sono filtrati dai risultati del <xref:System.Net.Dns.GetHostAddresses%2A> metodo se il computer locale non ha installato IPv6. Di conseguenza, è possibile ottenere un oggetto vuoto <xref:System.Net.IPAddress> dell'istanza se solo IPv6 risultati disponibili per il `hostNameOrAddress`parametro.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Net.Dns.GetHostAddresses%2A> metodo per risolvere un indirizzo IP a una matrice di tipo <xref:System.Net.IPAddress>.  
  
 [!code-cpp[System.Net.Dns#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#3)]
 [!code-csharp[System.Net.Dns#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#3)]
 [!code-vb[System.Net.Dns#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza del parametro <paramref name="hostNameOrAddress" /> è maggiore di 255 caratteri.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante la risoluzione del parametro <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> è un indirizzo IP non valido.</exception>
        <permission cref="T:System.Net.DnsPermission">per l'accesso alle informazioni DNS. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddressesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt; GetHostAddressesAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPAddress[]&gt; GetHostAddressesAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddressesAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddressesAsync (hostNameOrAddress As String) As Task(Of IPAddress())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;cli::array &lt;System::Net::IPAddress ^&gt; ^&gt; ^ GetHostAddressesAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddressesAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;" Usage="System.Net.Dns.GetHostAddressesAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nome dell'host o indirizzo IP da risolvere.</param>
        <summary>Restituisce gli indirizzi IP (Internet Protocol) per l'host specificato come operazione asincrona.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice di tipo <see cref="T:System.Net.IPAddress" /> che contiene gli indirizzi IP per l'host che è specificato dal parametro <paramref name="hostNameOrAddress" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata dopo il `hostNameOrAddress` è stato risolto.  
  
 Questo metodo in un server DNS per gli indirizzi IP associati a un nome host. Se `hostNameOrAddress` è un indirizzo IP, questo indirizzo viene restituito senza eseguire una query server DNS.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza del parametro <paramref name="hostNameOrAddress" /> è maggiore di 255 caratteri.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante la risoluzione del parametro <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> è un indirizzo IP non valido.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostByAddress">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ottiene le informazioni sull'host DNS per un indirizzo IP. Questi metodi sono ora obsoleti.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">Oggetto <see cref="T:System.Net.IPAddress" />.</param>
        <summary>Crea un'istanza di <see cref="T:System.Net.IPHostEntry" /> dal <see cref="T:System.Net.IPAddress" /> specificato.</summary>
        <returns>Oggetto <see cref="T:System.Net.IPHostEntry" />.  Istanza di <see cref="T:System.Net.IPHostEntry" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 L'esempio seguente crea una <xref:System.Net.IPHostEntry> da un <xref:System.Net.IPAddress>.  
  
 [!code-cpp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CPP/dns_gethostbyaddress_ipaddress.cpp#1)]
 [!code-csharp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CS/dns_gethostbyaddress_ipaddress.cs#1)]
 [!code-vb[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/VB/dns_gethostbyaddress_ipaddress.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante la risoluzione del parametro <paramref name="address" />.</exception>
        <permission cref="T:System.Net.DnsPermission">per l'accesso alle informazioni DNS. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Indirizzo IP.</param>
        <summary>Crea un'istanza di <see cref="T:System.Net.IPHostEntry" /> da un indirizzo IP.</summary>
        <returns>Istanza di <see cref="T:System.Net.IPHostEntry" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante la risoluzione del parametro <paramref name="address" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> non è un indirizzo IP valido.</exception>
        <permission cref="T:System.Net.DnsPermission">per l'accesso alle informazioni DNS. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByName (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByName(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByName (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByName(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member GetHostByName : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByName hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">Nome DNS dell'host.</param>
        <summary>Ottiene le informazioni DNS per il nome host DNS specificato.</summary>
        <returns>Oggetto <see cref="T:System.Net.IPHostEntry" /> contenente informazioni sull'host per l'indirizzo specificato nel parametro <paramref name="hostName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Dns.GetHostByName%2A> metodo esegue query nel server DNS Internet per le informazioni sull'host. Se si passa una stringa vuota come nome host, questo metodo recupera il nome host standard per il computer locale.  
  
 Per l'accesso asincrono alle informazioni DNS, usare il <xref:System.Net.Dns.BeginGetHostByName%2A> e <xref:System.Net.Dns.EndGetHostByName%2A> metodi.  
  
 Se il <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> è impostata su `true`, il <xref:System.Net.IPHostEntry.Aliases%2A> proprietà del <xref:System.Net.IPHostEntry> istanza restituita non viene popolato da questo metodo e sarà sempre vuoto.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Net.Dns.GetHostByName%2A> metodo per ottenere le informazioni DNS per il nome host DNS specificato.  
  
 [!code-cpp[Dns_GetHostByName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByName/CPP/dns_gethostbyname.cpp#1)]
 [!code-csharp[Dns_GetHostByName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByName/CS/dns_gethostbyname.cs#1)]
 [!code-vb[Dns_GetHostByName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByName/VB/dns_gethostbyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza del parametro <paramref name="hostName" /> è maggiore di 255 caratteri.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante la risoluzione del parametro <paramref name="hostName" />.</exception>
        <permission cref="T:System.Net.DnsPermission">per l'accesso alle informazioni DNS. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Risolve un nome host o un indirizzo IP in un'istanza di <see cref="T:System.Net.IPHostEntry" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">Indirizzo IP.</param>
        <summary>Risolve un indirizzo IP in un'istanza di <see cref="T:System.Net.IPHostEntry" />.</summary>
        <returns>Istanza di <see cref="T:System.Net.IPHostEntry" /> contenente informazioni di indirizzo sull'host specificato in <paramref name="address" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Dns.GetHostEntry%2A> metodo in un server DNS per gli indirizzi IP e degli alias associati un indirizzo IP.  
  
 Gli indirizzi IPv6 sono filtrati dai risultati del <xref:System.Net.Dns.GetHostEntry%2A> metodo se il computer locale non ha installato IPv6. Di conseguenza, è possibile ottenere un oggetto vuoto <xref:System.Net.IPHostEntry> dell'istanza se solo IPv6 risultati disponibili per il `address` parametro.  
  
 Il <xref:System.Net.IPHostEntry.Aliases%2A> proprietà del <xref:System.Net.IPHostEntry> istanza restituita non viene popolato da questo metodo e sarà sempre vuoto.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  

## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Net.Dns.GetHostEntry%2A> metodo per risolvere un indirizzo IP indirizzo a un <xref:System.Net.IPHostEntry> istanza.  
  
 [!code-cpp[System.Net.Dns#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#4)]
 [!code-csharp[System.Net.Dns#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#4)]
 [!code-vb[System.Net.Dns#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante la risoluzione del parametro <paramref name="address" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> è un indirizzo IP non valido.</exception>
        <permission cref="T:System.Net.DnsPermission">per l'accesso alle informazioni DNS. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (hostNameOrAddress As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nome dell'host o indirizzo IP da risolvere.</param>
        <summary>Risolve un nome host o un indirizzo IP in un'istanza di <see cref="T:System.Net.IPHostEntry" />.</summary>
        <returns>Istanza di <see cref="T:System.Net.IPHostEntry" /> contenente informazioni di indirizzo sull'host specificato in <paramref name="hostNameOrAddress" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Dns.GetHostEntry%2A> metodo in un server DNS per l'indirizzo IP associato a un nome host o indirizzo IP.  
  
 Se una stringa vuota viene passata come il `hostNameOrAddress` argomento, quindi questo metodo restituisce gli indirizzi IPv4 e IPv6 dell'host locale.
  
 Se non è stato possibile trovare il nome host, il <xref:System.Net.Sockets.SocketException> viene restituita l'eccezione con un valore di 11001 (errore di Windows Sockets WSAHOST_NOT_FOUND). Questa eccezione può essere restituita se il server DNS non risponde. Questa eccezione può essere restituita anche se il nome non è un nome host ufficiale o un alias, o non viene trovato nel database sottoposti a query.  
  
 Il <xref:System.ArgumentException> eccezione viene restituita anche se il `hostNameOrAddress` parametro contiene <xref:System.Net.IPAddress.Any> o <xref:System.Net.IPAddress.IPv6Any>.  
  
 Il <xref:System.Net.Dns.GetHostEntry%2A> metodo presuppone che se viene passata una stringa letterale IP il `hostNameOrAddress` parametro, l'applicazione richieda un <xref:System.Net.IPHostEntry> istanza restituita con tutte le proprietà impostate. Queste proprietà includono il <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, e <xref:System.Net.IPHostEntry.HostName%2A>. Di conseguenza, l'implementazione del <xref:System.Net.Dns.GetHostEntry%2A> metodo mostra il comportamento seguente quando viene passato un valore letterale stringa IP:  
  
1.  Il metodo tenta di analizzare l'indirizzo. Se il `hostNameOrAddress` parametro contiene un valore letterale stringa IP valido, quindi ha esito positivo della prima fase.  
  
2.  Per ottenere il nome host viene tentata una ricerca inversa usando l'indirizzo IP del valore letterale stringa IP. Questo risultato viene impostato come il <xref:System.Net.IPHostEntry.HostName%2A> proprietà.  
  
3.  Il nome host da questa ricerca inversa viene usato anche in questo caso per ottenere tutti i possibili indirizzi IP associato al nome e impostare come il <xref:System.Net.IPHostEntry.AddressList%2A> proprietà.  
  
 Per una stringa di IPv4 letterale, potrebbero avere esito positivo di tutti i tre passaggi precedenti. Ma è possibile che un record DNS non aggiornato per un indirizzo IPv4 effettivamente appartenente a un host diverso da restituire. Ciò potrebbe causare il passaggio 3 # per esito negativo e genererà un'eccezione (è un record PTR DNS per l'indirizzo IPv4, ma nessun record A DNS per l'indirizzo IPv4).  
  
 Per IPv6, passaggio #2 riportato sopra può avere esito negativo, poiché la maggior parte delle distribuzioni di IPv6 non registrano il record (PTR) inverso per un indirizzo IPv6. Pertanto questo metodo può restituire la stringa di IPv6 letterale come nome host di dominio completo (FQDN) nella <xref:System.Net.IPHostEntry.HostName%2A> proprietà.  
  
 Il <xref:System.Net.Dns.GetHostAddresses%2A> metodo ha un comportamento diverso rispetto a valori letterali IP. Se il passaggio #1 ha esito positivo (flag analizza correttamente come indirizzo IP), che l'indirizzo viene immediatamente restituito come risultato. Non vi è alcun tentativo di una ricerca inversa.  
  
 Gli indirizzi IPv6 sono filtrati dai risultati del <xref:System.Net.Dns.GetHostEntry%2A> metodo se il computer locale non ha installato IPv6. Di conseguenza, è possibile ottenere un oggetto vuoto <xref:System.Net.IPHostEntry> dell'istanza se solo IPv6 risultati disponibili per il `hostNameOrAddress`parametro.  
  
 Il <xref:System.Net.IPHostEntry.Aliases%2A> proprietà del <xref:System.Net.IPHostEntry> istanza restituita non viene popolato da questo metodo e sarà sempre vuoto.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Net.Dns.GetHostEntry%2A> metodo per risolvere un indirizzo IP indirizzo a un <xref:System.Net.IPHostEntry> istanza.  
  
 [!code-cpp[System.Net.Dns#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#1)]
 [!code-csharp[System.Net.Dns#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#1)]
 [!code-vb[System.Net.Dns#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="hostNameOrAddress" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza del parametro <paramref name="hostNameOrAddress" /> supera i 255 caratteri.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore nella risoluzione del parametro <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="hostNameOrAddress" /> è un indirizzo IP non valido.</exception>
        <permission cref="T:System.Net.DnsPermission">per l'accesso alle informazioni DNS. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntryAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Risolve un nome host o un indirizzo IP in un'istanza di <see cref="T:System.Net.IPHostEntry" /> come un'operazione asincrona.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (address As IPAddress) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : System.Net.IPAddress -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">Indirizzo IP.</param>
        <summary>Risolve un nome host o un indirizzo IP in un'istanza di <see cref="T:System.Net.IPHostEntry" /> come un'operazione asincrona.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà di <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce un'istanza di <see cref="T:System.Net.IPHostEntry" /> che contiene informazioni di indirizzo sull'host specificato in <paramref name="address" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata dopo il `address` è stato risolto.  
  
 Questo metodo in un server DNS per gli indirizzi IP e degli alias associati un indirizzo IP.  
  
 Gli indirizzi IPv6 vengono filtrati dal risultati di questo metodo se il computer locale non ha installato IPv6. Di conseguenza, è possibile ottenere un oggetto vuoto <xref:System.Net.IPHostEntry> dell'istanza se solo IPv6 risultati disponibili per il `address` parametro.  
  
 Il <xref:System.Net.IPHostEntry.Aliases%2A> proprietà del <xref:System.Net.IPHostEntry> istanza restituita non viene popolato da questo metodo e sarà sempre vuoto.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante la risoluzione del parametro <paramref name="address" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> è un indirizzo IP non valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (hostNameOrAddress As String) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nome dell'host o indirizzo IP da risolvere.</param>
        <summary>Risolve un nome host o un indirizzo IP in un'istanza di <see cref="T:System.Net.IPHostEntry" /> come un'operazione asincrona.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà di <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce un'istanza di <see cref="T:System.Net.IPHostEntry" /> che contiene informazioni di indirizzo sull'host specificato in <paramref name="hostNameOrAddress" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata dopo il `hostNameOrAddress` è stato risolto.  
  
 Questo metodo in un server DNS per l'indirizzo IP associato a un nome host o indirizzo IP.  
  
 Se una stringa vuota viene passata come il `hostNameOrAddress` argomento, quindi questo metodo restituisce gli indirizzi IPv4 e IPv6 dell'host locale.
  
 Se non è stato possibile trovare il nome host, il <xref:System.Net.Sockets.SocketException> viene restituita l'eccezione con un valore di 11001 (errore di Windows Sockets WSAHOST_NOT_FOUND). Questa eccezione può essere restituita se il server DNS non risponde. Questa eccezione può essere restituita anche se il nome non è un nome host ufficiale o un alias, o non viene trovato nel database sottoposti a query.  
  
 Il <xref:System.ArgumentException> eccezione viene restituita anche se il `hostNameOrAddress` parametro contiene <xref:System.Net.IPAddress.Any> o <xref:System.Net.IPAddress.IPv6Any>.  
  
 Questo metodo presuppone che se una stringa letterale IP viene passata il `hostNameOrAddress` parametro, l'applicazione richieda un <xref:System.Net.IPHostEntry> istanza restituita con tutte le proprietà impostate. Queste proprietà includono il <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, e <xref:System.Net.IPHostEntry.HostName%2A>. Di conseguenza, l'implementazione di questo metodo presenta il seguente comportamento quando viene passato un valore letterale stringa IP:  
  
1.  Il metodo tenta di analizzare l'indirizzo. Se il `hostNameOrAddress` parametro contiene un valore letterale stringa IP valido, quindi ha esito positivo della prima fase.  
  
2.  Per ottenere il nome host viene tentata una ricerca inversa usando l'indirizzo IP del valore letterale stringa IP. Questo risultato viene impostato come il <xref:System.Net.IPHostEntry.HostName%2A> proprietà.  
  
3.  Il nome host da questa ricerca inversa viene usato anche in questo caso per ottenere tutti i possibili indirizzi IP associato al nome e impostare come il <xref:System.Net.IPHostEntry.AddressList%2A> proprietà.  
  
 Per una stringa di IPv4 letterale, potrebbero avere esito positivo di tutti i tre passaggi precedenti. Ma è possibile che un record DNS non aggiornato per un indirizzo IPv4 effettivamente appartenente a un host diverso da restituire. Ciò potrebbe causare il passaggio 3 # per esito negativo e genererà un'eccezione (è un record PTR DNS per l'indirizzo IPv4, ma nessun record A DNS per l'indirizzo IPv4).  
  
 Per IPv6, passaggio #2 riportato sopra può avere esito negativo, poiché la maggior parte delle distribuzioni di IPv6 non registrano il record (PTR) inverso per un indirizzo IPv6. Pertanto questo metodo può restituire la stringa di IPv6 letterale come nome host di dominio completo (FQDN) nella <xref:System.Net.IPHostEntry.HostName%2A> proprietà.  
  
 Il <xref:System.Net.Dns.GetHostAddresses%2A> metodo ha un comportamento diverso rispetto a valori letterali IP. Se il passaggio #1 ha esito positivo (flag analizza correttamente come indirizzo IP), che l'indirizzo viene immediatamente restituito come risultato. Non vi è alcun tentativo di una ricerca inversa.  
  
 Gli indirizzi IPv6 vengono filtrati dal risultati di questo metodo se il computer locale non ha installato IPv6. Di conseguenza, è possibile ottenere un oggetto vuoto <xref:System.Net.IPHostEntry> dell'istanza se solo IPv6 risultati disponibili per il `hostNameOrAddress`parametro.  
  
 Il <xref:System.Net.IPHostEntry.Aliases%2A> proprietà del <xref:System.Net.IPHostEntry> istanza restituita non viene popolato da questo metodo e sarà sempre vuoto.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="hostNameOrAddress" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza del parametro <paramref name="hostNameOrAddress" /> supera i 255 caratteri.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore nella risoluzione del parametro <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="hostNameOrAddress" /> è un indirizzo IP non valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostName">
      <MemberSignature Language="C#" Value="public static string GetHostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHostName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetHostName();" />
      <MemberSignature Language="F#" Value="static member GetHostName : unit -&gt; string" Usage="System.Net.Dns.GetHostName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene il nome host del computer locale.</summary>
        <returns>Stringa contenente il nome host DNS del computer locale.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente usa il <xref:System.Net.Dns.GetHostName%2A> metodo per ottenere il nome host del computer locale.  
  
 [!code-cpp[Dns_GetHostName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostName/CPP/dns_gethostname.cpp#1)]
 [!code-csharp[Dns_GetHostName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostName/CS/dns_gethostname.cs#1)]
 [!code-vb[Dns_GetHostName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostName/VB/dns_gethostname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore nella risoluzione del nome host locale.</exception>
        <permission cref="T:System.Net.DnsPermission">per l'accesso alle informazioni DNS. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry Resolve (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry Resolve(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ Resolve(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member Resolve : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.Resolve hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">Nome host di tipo DNS o indirizzo IP.</param>
        <summary>Risolve un nome host DNS o un indirizzo IP in un'istanza di <see cref="T:System.Net.IPHostEntry" />.</summary>
        <returns>Istanza di <see cref="T:System.Net.IPHostEntry" /> contenente informazioni di indirizzo sull'host specificato in <paramref name="hostName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.Dns.Resolve%2A> metodo in un server DNS per l'indirizzo IP associato a un indirizzo IP o nome host.  
  
 Quando si `hostName` è un nome host di tipo DNS associato a più indirizzi IP, viene restituito solo il primo indirizzo IP viene risolta in tale nome host.  
  
 Se il <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> è impostata su `true`, il <xref:System.Net.IPHostEntry.Aliases%2A> proprietà del <xref:System.Net.IPHostEntry> istanza restituita non viene popolato da questo metodo e sarà sempre vuoto.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Net.Dns.Resolve%2A> metodo per risolvere un indirizzo IP indirizzo a un <xref:System.Net.IPHostEntry> istanza.  
  
 [!code-cpp[Dns_Resolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Resolve/CPP/dns_resolve.cpp#1)]
 [!code-csharp[Dns_Resolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Resolve/CS/dns_resolve.cs#1)]
 [!code-vb[Dns_Resolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Resolve/VB/dns_resolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La lunghezza del parametro <paramref name="hostName" /> è maggiore di 255 caratteri.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Si è verificato un errore durante la risoluzione del parametro <paramref name="hostName" />.</exception>
        <permission cref="T:System.Net.DnsPermission">per l'accesso alle informazioni DNS. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>