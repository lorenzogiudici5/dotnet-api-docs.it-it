<Type Name="WebClient" FullName="System.Net.WebClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49592ccff67aa36f2aeb8df20a7422809f161b6b" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48617597" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebClient : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebClient extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebClient" />
  <TypeSignature Language="VB.NET" Value="Public Class WebClient&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebClient : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type WebClient = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.WebClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Vengono forniti metodi comuni per l'invio e la ricezione di dati da una risorsa identificata da un URI.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient> classe fornisce metodi comuni per l'invio o ricezione dei dati da qualsiasi locale, intranet o della risorsa Internet identificata da un URI.  
  
 Il <xref:System.Net.WebClient> classe Usa il <xref:System.Net.WebRequest> classe per fornire l'accesso alle risorse. <xref:System.Net.WebClient> le istanze possono accedere ai dati con una qualsiasi <xref:System.Net.WebRequest> discendente registrato con il <xref:System.Net.WebRequest.RegisterPrefix%2A?displayProperty=nameWithType> (metodo).  
  
> [!NOTE]
>  Per impostazione predefinita, .NET Framework supporta gli URI che iniziano con `http:`, `https:`, `ftp:`, e `file:` identificatori di schema.  
  
 La tabella seguente descrive <xref:System.Net.WebClient> metodi per caricare dati in una risorsa.  
  
|Metodo|Descrizione|  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenWrite%2A>|Recupera un <xref:System.IO.Stream> usate per inviare dati alla risorsa.|  
|<xref:System.Net.WebClient.OpenWriteAsync%2A>|Recupera un <xref:System.IO.Stream> usate per inviare dati alla risorsa, senza bloccare il thread chiamante.|  
|<xref:System.Net.WebClient.UploadData%2A>|Invia una matrice di byte per la risorsa e restituisce un <xref:System.Byte> matrice contenente una risposta.|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|Invia un <xref:System.Byte> matrice in cui la risorsa, senza bloccare il thread chiamante.|  
|<xref:System.Net.WebClient.UploadFile%2A>|Invia un file locale alla risorsa e restituisce un <xref:System.Byte> matrice contenente una risposta.|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|Invia un file locale alla risorsa, senza bloccare il thread chiamante.|  
|<xref:System.Net.WebClient.UploadValues%2A>|Invia un <xref:System.Collections.Specialized.NameValueCollection> alla risorsa e restituisce un <xref:System.Byte> matrice contenente una risposta.|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|Invia un <xref:System.Collections.Specialized.NameValueCollection> alla risorsa e restituisce un <xref:System.Byte> matrice contenente una risposta, senza bloccare il thread chiamante.|  
|<xref:System.Net.WebClient.UploadString%2A>|Invia un <xref:System.String> alla risorsa, senza bloccare il thread chiamante.|  
|<xref:System.Net.WebClient.UploadStringAsync%2A>|Invia un <xref:System.String> alla risorsa, senza bloccare il thread chiamante.|  
  
 La tabella seguente descrive <xref:System.Net.WebClient> metodi per il download dei dati da una risorsa.  
  
|Metodo|Descrizione|  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenRead%2A>|Restituisce i dati da una risorsa come una <xref:System.IO.Stream>.|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|Restituisce i dati da una risorsa, senza bloccare il thread chiamante.|  
|<xref:System.Net.WebClient.DownloadData%2A>|Scarica i dati da una risorsa e restituisce un <xref:System.Byte> matrice.|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|Scarica i dati da una risorsa e restituisce un <xref:System.Byte> matrice, senza bloccare il thread chiamante.|  
|<xref:System.Net.WebClient.DownloadFile%2A>|Scarica i dati da una risorsa in un file locale.|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|Scarica i dati da una risorsa in un file locale, senza bloccare il thread chiamante.|  
|<xref:System.Net.WebClient.DownloadString%2A>|Download di un <xref:System.String> da una risorsa e restituisce un <xref:System.String>.|  
|<xref:System.Net.WebClient.DownloadStringAsync%2A>|Scarica un <xref:System.String> da una risorsa, senza bloccare il thread chiamante.|  
  
 È possibile usare il <xref:System.Net.WebClient.CancelAsync%2A> metodo per annullare operazioni asincrone che non sono state completate.  
  
 Oggetto <xref:System.Net.WebClient> istanza non inviare intestazioni HTTP facoltative per impostazione predefinita. Se la richiesta deve essere un'intestazione facoltativa, è necessario aggiungere l'intestazione per il <xref:System.Net.WebClient.Headers%2A> raccolta. Ad esempio, per mantenere le query nella risposta, è necessario aggiungere un'intestazione user-agent. Inoltre, i server vengano restituiti 500 (errore Server interno) se manca l'intestazione agente utente.  
  
 <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> è impostato su `true` in <xref:System.Net.WebClient> istanze.  
  
   
  
## Examples  
 Esempio di codice seguente accetta l'URI di una risorsa, li recupera e Visualizza la risposta.  
  
 [!code-cpp[NCLWebClientUserAgent#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientUserAgent/CPP/useragent.cpp#1)]
 [!code-csharp[NCLWebClientUserAgent#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientUserAgent/CS/useragent.cs#1)]
 [!code-vb[NCLWebClientUserAgent#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientUserAgent/VB/useragent.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">Per accedere a qualsiasi URI che la richiesta viene reindirizzata a o l'URI richiesto. Enumerazione associata: <see cref="F:System.Net.NetworkAccess.Connect" />.</permission>
    <block subset="none" type="overrides">
      <para>Le classi derivate devono chiamare l'implementazione della classe base <see cref="T:System.Net.WebClient" /> per assicurarsi che la classe derivata funziona come previsto.</para>
    </block>
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.HttpWebRequest" />
    <altmember cref="T:System.Net.HttpWebResponse" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.WebClient" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il costruttore predefinito crea una nuova istanza di <xref:System.Net.WebClient> classe. Il metodo HTTP predefinito è GET. Il metodo FTP predefinito è RETR. Il valore predefinito di <xref:System.Net.WebClient.Encoding%2A> è <xref:System.Text.Encoding.Default%2A>. Il valore predefinito di <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> è `true`.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Net.WebClient> dell'istanza e lo usa per scaricare i dati da un server e visualizzarlo sulla console di sistema, per scaricare i dati da un server e scriverli in un file e per caricare i valori del form in un server e ricevere la risposta.  
  
 [!code-cpp[WebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient/CPP/webclient.cpp#1)]
 [!code-csharp[WebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient/CS/webclient.cs#1)]
 [!code-vb[WebClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient/VB/webclient.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReadStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowReadStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReadStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowReadStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowReadStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowReadStreamBuffering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReadStreamBuffering : bool with get, set" Usage="System.Net.WebClient.AllowReadStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se memorizzare nel buffer i dati letti dalla risorsa Internet per un'istanza di <see cref="T:System.Net.WebClient" />.</summary>
        <value>Restituisce <see cref="T:System.Boolean" />.  
  
 <see langword="true" /> per abilitare il buffering dei dati ricevuti dalla risorsa Internet; <see langword="false" /> per disabilitare il buffering. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando la <xref:System.Net.WebClient.AllowReadStreamBuffering%2A> è di proprietà `true`, i dati viene memorizzato nel buffer in memoria affinché sia pronto per essere lette dall'app.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWriteStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowWriteStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWriteStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowWriteStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWriteStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWriteStreamBuffering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowWriteStreamBuffering : bool with get, set" Usage="System.Net.WebClient.AllowWriteStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se memorizzare nel buffer i dati scritti nella risorsa Internet per un'istanza di <see cref="T:System.Net.WebClient" />.</summary>
        <value>Restituisce <see cref="T:System.Boolean" />.  
  
 <see langword="true" /> per abilitare la memorizzazione nel buffer dei dati scritti nella risorsa Internet; <see langword="false" /> per disabilitarla. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando la <xref:System.Net.WebClient.AllowWriteStreamBuffering%2A> è di proprietà `true`, i dati viene memorizzato nel buffer in memoria, in modo che può essere scritta in modo più efficiente per la risorsa Internet in blocchi più grandi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public string BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseAddress : string with get, set" Usage="System.Net.WebClient.BaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o imposta l'URI di base per richieste effettuate da un oggetto <see cref="T:System.Net.WebClient" />.</summary>
        <value>Classe <see cref="T:System.String" /> contenente l'URI di base per le richieste fatte da una classe <see cref="T:System.Net.WebClient" /> o da un campo <see cref="F:System.String.Empty" /> nel caso non sia stato specificato l'indirizzo di base.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.BaseAddress%2A> proprietà contiene un URI di base che viene combinato con un indirizzo relativo. Quando si chiama un metodo che consente di caricare o Scarica dati, il <xref:System.Net.WebClient> oggetto combina questo URI di base con il relativo indirizzo specificato nella chiamata al metodo. Se si specifica un URI assoluto <xref:System.Net.WebClient> non utilizza il <xref:System.Net.WebClient.BaseAddress%2A> valore della proprietà.  
  
 Per rimuovere un impostato in precedenza valore, impostare questa proprietà su `null` o una stringa vuota ("").  
  
   
  
## Examples  
 Esempio di codice seguente Scarica i dati da un server Internet e lo visualizza nella console. Si presuppone che l'indirizzo del server (ad esempio http://www.contoso.com) le novità `hostUri` e che il percorso della risorsa (ad esempio /default.htm) sia `uriSuffix`.  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#1)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#1)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> è impostato su un URI non valido. L'eccezione interna può contenere le informazioni utili per individuare l'errore.</exception>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebClient.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta i criteri della cache dell'applicazione per le risorse ottenute da questa istanza di WebClient mediante gli oggetti <see cref="T:System.Net.WebRequest" />.</summary>
        <value>Oggetto <see cref="T:System.Net.Cache.RequestCachePolicy" /> che rappresenta i requisiti di cache dell'applicazione.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="webClient.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annulla un'operazione asincrona in sospeso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un'operazione è in sospeso, questo metodo chiama <xref:System.Net.WebRequest.Abort%2A> sottostante <xref:System.Net.WebRequest>.  
  
 Quando si chiama <xref:System.Net.WebClient.CancelAsync%2A>, l'applicazione riceve comunque l'evento di completamento associato all'operazione. Ad esempio, quando si chiama <xref:System.Net.WebClient.CancelAsync%2A> per annullare una <xref:System.Net.WebClient.DownloadStringAsync%2A> operazione, se è stato specificato un gestore eventi per il <xref:System.Net.WebClient.DownloadStringCompleted> evento, il gestore eventi riceve la notifica che l'operazione è stata terminata. Per informazioni su se l'operazione è stata completata, controllare la <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> proprietà sulla classe di base di <xref:System.Net.DownloadDataCompletedEventArgs> nell'evento oggetto dati passato al gestore dell'evento.  
  
 Se nessuna operazione asincrona è in corso, questo metodo non esegue alcuna operazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.WebClient.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le credenziali di rete inviate all'host e utilizzate per l'autenticazione della richiesta.</summary>
        <value>Un oggetto <see cref="T:System.Net.ICredentials" /> contenente le credenziali di autenticazione per la richiesta. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.Credentials%2A> proprietà contiene le credenziali di autenticazione usate per accedere a una risorsa in un host. Nella maggior parte degli scenari client-side, è consigliabile utilizzare il <xref:System.Net.CredentialCache.DefaultCredentials%2A>, quali sono le credenziali dell'utente attualmente connesso. A questo scopo, impostare il <xref:System.Net.WebClient.UseDefaultCredentials%2A> proprietà `true` invece di impostare questa proprietà.  
  
 Se il <xref:System.Net.WebClient> classe viene utilizzata in un'applicazione di livello intermedio, ad esempio un'applicazione ASP.NET, il <xref:System.Net.CredentialCache.DefaultCredentials%2A> appartenere all'account di esecuzione della pagina ASP (credenziali sul lato server). In genere, impostare questa proprietà per le credenziali del client per il quale viene effettuata la richiesta.  
  
 Per motivi di sicurezza quando automaticamente seguito reindirizzamenti, archiviare le credenziali che si desidera includere nel reindirizzamento in un <xref:System.Net.CredentialCache> e assegnarla a questa proprietà. Questa proprietà è imposterà automaticamente su `null` durante il reindirizzamento se contiene qualsiasi elemento tranne una <xref:System.Net.CredentialCache>. Questo valore di proprietà impostato automaticamente su `null` in tali condizioni impedisce le credenziali vengano inviate a qualunque destinazione impreviste.
  
## Examples  
 Esempio di codice seguente usa le credenziali dell'utente del sistema per autenticare una richiesta.  
  
 [!code-cpp[WebClientAuthentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClientAuthentication/CPP/webclientauth.cpp#1)]
 [!code-csharp[WebClientAuthentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClientAuthentication/CS/webclientauth.cs#1)]
 [!code-vb[WebClientAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClientAuthentication/VB/webclientauth.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.WebRequest.Credentials" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scarica la risorsa come una matrice <see cref="T:System.Byte" /> dall'URI specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadData (address As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DownloadData(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadData : string -&gt; byte[]" Usage="webClient.DownloadData address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI da cui eseguire il download dei dati.</param>
        <summary>Scarica la risorsa come una matrice <see cref="T:System.Byte" /> dall'URI specificato.</summary>
        <returns>Matrice <see cref="T:System.Byte" /> contenente la risorsa scaricata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.DownloadData%2A> metodo scarica la risorsa con l'URI specificato da di `address` parametro. Questo metodo si blocca durante il download della risorsa. Per scaricare una risorsa e continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.DownloadDataAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente richiede dati da un server e visualizza i dati restituiti. Si presuppone che `remoteUri` contiene un URI valido per i dati richiesti.  
  
 [!code-cpp[WebClient_DownloadData#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadData/CPP/webclient_downloaddata.cpp#1)]
 [!code-csharp[WebClient_DownloadData#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadData/CS/webclient_downloaddata.cs#1)]
 [!code-vb[WebClient_DownloadData#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadData/VB/webclient_downloaddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download dei dati.</exception>
        <exception cref="T:System.NotSupportedException">Questo metodo è stato chiamato simultaneamente su più thread.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadData (address As Uri) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DownloadData(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadData : Uri -&gt; byte[]" Usage="webClient.DownloadData address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI rappresentato dall'oggetto <see cref="T:System.Uri" />, da cui eseguire il download dei dati.</param>
        <summary>Scarica la risorsa come una matrice <see cref="T:System.Byte" /> dall'URI specificato.</summary>
        <returns>Matrice <see cref="T:System.Byte" /> contenente la risorsa scaricata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.DownloadData%2A> metodo scarica la risorsa con l'URI specificato da di `address` parametro. Questo metodo si blocca durante il download della risorsa. Per scaricare una risorsa e continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.DownloadDataAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
 **Nota** questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadDataAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scarica la risorsa come matrice <see cref="T:System.Byte" /> dall'URI specificato come operazione asincrona. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadDataAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadDataAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataAsync : Uri -&gt; unit" Usage="webClient.DownloadDataAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Classe <see cref="T:System.Uri" /> contenente l'URI da scaricare.</param>
        <summary>Scarica la risorsa come matrice <see cref="T:System.Byte" /> dall'URI specificato come operazione asincrona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di recuperare la risorsa specificata utilizzando il metodo predefinito per il protocollo associato con lo schema URI specificato in `address`. I dati vengono scaricati in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Questo metodo non blocca il thread chiamante durante il download della risorsa. Per scaricare una risorsa e un blocco durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.DownloadData%2A> metodi. Al termine del download, il <xref:System.Net.WebClient.DownloadDataCompleted> viene generato l'evento. L'applicazione deve gestire questo evento per ricevere una notifica. I dati scaricati sono disponibili nel <xref:System.Net.DownloadDataCompletedEventArgs.Result%2A> proprietà.  
  
 È possibile usare il <xref:System.Net.WebClient.CancelAsync%2A> metodo per annullare operazioni asincrone che non sono state completate.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadDataAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadDataAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataAsync : Uri * obj -&gt; unit" Usage="webClient.DownloadDataAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Classe <see cref="T:System.Uri" /> contenente l'URI da scaricare.</param>
        <param name="userToken">Oggetto definito dall'utente passato al metodo richiamato al completamento dell'operazione asincrona.</param>
        <summary>Scarica la risorsa come matrice <see cref="T:System.Byte" /> dall'URI specificato come operazione asincrona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo consente di recuperare la risorsa specificata utilizzando il metodo predefinito per il protocollo associato con lo schema URI specificato in `address`. I dati vengono scaricati in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Questo metodo non blocca il thread chiamante durante il download della risorsa. Per scaricare una risorsa e un blocco durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.DownloadData%2A> metodi. Al termine del download, il <xref:System.Net.WebClient.DownloadDataCompleted> viene generato l'evento. L'applicazione deve gestire questo evento per ricevere una notifica. I dati scaricati sono disponibili nel <xref:System.Net.DownloadDataCompletedEventArgs.Result%2A> proprietà.  
  
 È possibile usare il <xref:System.Net.WebClient.CancelAsync%2A> metodo per annullare operazioni asincrone che non sono state completate.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadDataCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadDataCompleted As DownloadDataCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadDataCompletedEventHandler ^ DownloadDataCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadDataCompleted : System.Net.DownloadDataCompletedEventHandler " Usage="member this.DownloadDataCompleted : System.Net.DownloadDataCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica al completamento di un'operazione asincrona di download di dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato ogni volta che viene completata un'operazione di download asincrone dei dati. Download di dati asincroni vengono avviate chiamando il <xref:System.Net.WebClient.DownloadDataAsync%2A> metodi.  
  
 Il <xref:System.Net.DownloadDataCompletedEventHandler> è il delegato per questo evento. Il <xref:System.Net.DownloadDataCompletedEventArgs> classe fornisce il gestore eventi con i dati dell'evento.  
  
 Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'impostazione di un gestore eventi per questo evento.  
  
 [!code-cpp[NCLWebClientAsync#21](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#21)]
 [!code-csharp[NCLWebClientAsync#21](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#21)]
 [!code-vb[NCLWebClientAsync#21](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadDataTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scarica la risorsa come matrice <see cref="T:System.Byte" /> dall'URI specificato come operazione asincrona utilizzando un oggetto attività. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadDataTaskAsync (address As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ DownloadDataTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.DownloadDataTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa di cui eseguire il download.</param>
        <summary>Scarica la risorsa come matrice <see cref="T:System.Byte" /> dall'URI specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> che contiene la risorsa scaricata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che la risorsa di dati è stata scaricata.  
  
 Questo metodo consente di recuperare la risorsa specificata utilizzando il metodo predefinito per il protocollo associato con lo schema URI specificato nel `address` parametro. I dati vengono scaricati in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Esempio di codice seguente richiede dati da un server e visualizza i dati restituiti. Si presuppone che `remoteUri` contiene un URI valido per i dati richiesti.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadDataTaskAsync (address As Uri) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ DownloadDataTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.DownloadDataTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa di cui eseguire il download.</param>
        <summary>Scarica la risorsa come matrice <see cref="T:System.Byte" /> dall'URI specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> che contiene la risorsa scaricata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che la risorsa di dati è stata scaricata.  
  
 Questo metodo consente di recuperare la risorsa specificata utilizzando il metodo predefinito per il protocollo associato con lo schema URI specificato nel `address` parametro. I dati vengono scaricati in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
 **Nota** questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Esegue il download, su un file locale, della risorsa con l'URI specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="webClient.DownloadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI da cui eseguire il download dei dati.</param>
        <param name="fileName">Il nome del file locale per ricevere i dati.</param>
        <summary>Esegue il download, su un file locale, della risorsa con l'URI specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.DownloadFile%2A> metodo scarica in un file locale i dati dall'URI specificato da di `address` parametro. Questo metodo si blocca durante il download della risorsa. Per scaricare una risorsa e continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.DownloadFileAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Quando si usa questo metodo in un'applicazione di livello intermedio, ad esempio una pagina ASP.NET, si riceverà un errore se l'account in cui viene eseguita l'applicazione non dispone dell'autorizzazione per accedere al file.  
  
   
  
## Examples  
 Esempio di codice seguente scarica un file da http://www.contoso.com sul disco rigido locale.  
  
 [!code-cpp[WebClient_DownloadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadFile/CPP/webclient_downloadfile.cpp#1)]
 [!code-csharp[WebClient_DownloadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadFile/CS/webclient_downloadfile.cs#1)]
 [!code-vb[WebClient_DownloadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadFile/VB/webclient_downloadfile.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="filename" /> è <see langword="null" /> o <see cref="F:System.String.Empty" />.  
  
oppure 
Il file specificato non esiste.  
  
-oppure- Si è verificato un errore durante il download dei dati.</exception>
        <exception cref="T:System.NotSupportedException">Questo metodo è stato chiamato simultaneamente su più thread.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per scrivere il file <paramref name="fileName" />. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="webClient.DownloadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI specificato come classe <see cref="T:System.String" /> da cui eseguire il download dei dati.</param>
        <param name="fileName">Il nome del file locale per ricevere i dati.</param>
        <summary>Esegue il download, su un file locale, della risorsa con l'URI specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.DownloadFile%2A> metodo scarica in un file locale i dati dall'URI specificato da di `address` parametro. Questo metodo si blocca durante il download della risorsa. Per scaricare una risorsa e continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.DownloadFileAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Quando si usa questo metodo in un'applicazione di livello intermedio, ad esempio una pagina ASP.NET, si riceverà un errore se l'account in cui viene eseguita l'applicazione non dispone dell'autorizzazione per accedere al file.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="filename" /> è <see langword="null" /> o <see cref="F:System.String.Empty" />.  
  
oppure 
Il file specificato non esiste.  
  
oppure 
Si è verificato un errore durante il download dei dati.</exception>
        <exception cref="T:System.NotSupportedException">Questo metodo è stato chiamato simultaneamente su più thread.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">per scrivere il file <paramref name="fileName" />. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scarica la risorsa specificata in un file locale come operazione asincrona e restituisce un oggetto attività. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileAsync (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileAsync : Uri * string -&gt; unit" Usage="webClient.DownloadFileAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa di cui eseguire il download.</param>
        <param name="fileName">Il nome del file da posizionare nel computer locale.</param>
        <summary>Esegue il download, su un file locale, della risorsa con l'URI specificato. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo scarica la risorsa nell'URI specificato nel `address` parametro. Quando il download viene completato correttamente, il file scaricato viene denominato `fileName` nel computer locale. Il file viene scaricato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread. Per ricevere notifica quando il file è disponibile, aggiungere un gestore eventi per il <xref:System.Net.WebClient.DownloadFileCompleted> evento.  
  
 Questo metodo non blocca il thread chiamante mentre viene scaricata la risorsa. Per bloccare durante l'attesa del completamento del download, usare uno del <xref:System.Net.WebClient.DownloadFile%2A> metodi.  
  
 È possibile usare il <xref:System.Net.WebClient.CancelAsync%2A> metodo per annullare operazioni asincrone che non sono state completate.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non specifica un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Quando si usa questo metodo in una pagina ASP.NET, si riceverà un errore se l'account che la pagina viene eseguita in non dispone dell'autorizzazione per accedere al file locale.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.</exception>
        <exception cref="T:System.InvalidOperationException">Il file locale specificato da <paramref name="fileName" /> è utilizzato da un altro thread.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileAsync (address As Uri, fileName As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileAsync(Uri ^ address, System::String ^ fileName, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileAsync : Uri * string * obj -&gt; unit" Usage="webClient.DownloadFileAsync (address, fileName, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa di cui eseguire il download.</param>
        <param name="fileName">Il nome del file da posizionare nel computer locale.</param>
        <param name="userToken">Oggetto definito dall'utente passato al metodo richiamato al completamento dell'operazione asincrona.</param>
        <summary>Esegue il download, su un file locale, della risorsa con l'URI specificato. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo scarica la risorsa nell'URI specificato nel `address` parametro. Quando il download viene completato correttamente, il file scaricato viene denominato `fileName` nel computer locale. Il file viene scaricato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread. Per ricevere notifica quando il file è disponibile, aggiungere un gestore eventi per il <xref:System.Net.WebClient.DownloadFileCompleted> evento.  
  
 Questo metodo non blocca il thread chiamante mentre viene scaricata la risorsa. Per bloccare durante l'attesa del completamento del download, usare uno del <xref:System.Net.WebClient.DownloadFile%2A> metodi.  
  
 È possibile usare il <xref:System.Net.WebClient.CancelAsync%2A> metodo per annullare operazioni asincrone che non sono state completate.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non specifica un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Quando si usa questo metodo in una pagina ASP.NET, si riceverà un errore se l'account che la pagina viene eseguita in non dispone dell'autorizzazione per accedere al file locale.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.</exception>
        <exception cref="T:System.InvalidOperationException">Il file locale specificato da <paramref name="fileName" /> è utilizzato da un altro thread.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadFileCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ DownloadFileCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.DownloadFileCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica al completamento di un'operazione asincrona di download di file.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato ogni volta che viene completata un'operazione di download di file asincrono. Download di file asincrono vengono avviate chiamando il <xref:System.Net.WebClient.DownloadFileAsync%2A> metodi.  
  
 Il <xref:System.ComponentModel.AsyncCompletedEventHandler> è il delegato per questo evento. Il <xref:System.ComponentModel.AsyncCompletedEventArgs> classe fornisce il gestore eventi con i dati dell'evento.  
  
 Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'impostazione di un gestore eventi per questo evento.  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scarica la risorsa specificata in un file locale come operazione asincrona utilizzando un oggetto attività. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadFileTaskAsync (address As String, fileName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DownloadFileTaskAsync(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileTaskAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="webClient.DownloadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa di cui eseguire il download.</param>
        <param name="fileName">Il nome del file da posizionare nel computer locale.</param>
        <summary>Scarica la risorsa specificata in un file locale come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task> oggetto verrà completato dopo che la risorsa di dati è stata scaricata.  
  
 Questo metodo scarica la risorsa nell'URI specificato nel `address` parametro. Quando il download viene completato correttamente, il file scaricato viene denominato `fileName` nel computer locale. Il file viene scaricato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 È possibile usare il <xref:System.Net.WebClient.CancelAsync%2A> metodo per annullare operazioni asincrone che non sono state completate.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non specifica un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Quando si usa questo metodo in una pagina ASP.NET, si riceverà un errore se l'account che la pagina viene eseguita in non dispone dell'autorizzazione per accedere al file locale.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.</exception>
        <exception cref="T:System.InvalidOperationException">Il file locale specificato da <paramref name="fileName" /> è utilizzato da un altro thread.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadFileTaskAsync (address As Uri, fileName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DownloadFileTaskAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task" Usage="webClient.DownloadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa di cui eseguire il download.</param>
        <param name="fileName">Il nome del file da posizionare nel computer locale.</param>
        <summary>Scarica la risorsa specificata in un file locale come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task> oggetto verrà completato dopo che la risorsa di dati è stata scaricata.  
  
 Questo metodo scarica la risorsa nell'URI specificato nel `address` parametro. Quando il download viene completato correttamente, il file scaricato viene denominato `fileName` nel computer locale. Il file viene scaricato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 È possibile usare il <xref:System.Net.WebClient.CancelAsync%2A> metodo per annullare operazioni asincrone che non sono state completate.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non specifica un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Quando si usa questo metodo in una pagina ASP.NET, si riceverà un errore se l'account che la pagina viene eseguita in non dispone dell'autorizzazione per accedere al file locale.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.</exception>
        <exception cref="T:System.InvalidOperationException">Il file locale specificato da <paramref name="fileName" /> è utilizzato da un altro thread.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadProgressChanged As DownloadProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadProgressChangedEventHandler ^ DownloadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadProgressChanged : System.Net.DownloadProgressChangedEventHandler " Usage="member this.DownloadProgressChanged : System.Net.DownloadProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando un'operazione asincrona di download trasferisce correttamente alcuni o tutti i dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato ogni volta che un download asincrono rende lo stato di avanzamento. Questo evento viene generato quando vengono avviati download usando uno dei metodi seguenti.  
  
|Metodo|Descrizione|  
|------------|-----------------|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|Scarica i dati da una risorsa e restituisce un <xref:System.Byte> matrice, senza bloccare il thread chiamante.|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|Scarica i dati da una risorsa in un file locale, senza bloccare il thread chiamante.|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|Restituisce i dati da una risorsa, senza bloccare il thread chiamante.|  
  
 Il <xref:System.Net.DownloadProgressChangedEventHandler> è il delegato per questo evento. Il <xref:System.Net.DownloadProgressChangedEventArgs> classe fornisce il gestore eventi con i dati dell'evento.  
  
 Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
> [!NOTE]
>  Un trasferimento di file FTP passivo mostreranno sempre una percentuale di avanzamento pari a zero, poiché il server non ha inviato le dimensioni del file. Per visualizzare lo stato di avanzamento, è possibile modificare la connessione FTP a active eseguendo l'override di <xref:System.Net.WebClient.GetWebRequest%2A> metodo virtuale:  
  
```csharp  
internal class MyWebClient : WebClient
{  
    protected override WebRequest GetWebRequest(Uri address)
    {  
        FtpWebRequest req = (FtpWebRequest)base.GetWebRequest(address);  
        req.UsePassive = false;  
        return req;  
    }  
}  
```  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'impostazione di un gestore eventi per questo evento.  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 Esempio di codice seguente viene illustrata un'implementazione di un gestore per questo evento.  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scarica la risorsa richiesta come oggetto <see cref="T:System.String" />. La risorsa da scaricare può essere specificata come <see cref="T:System.String" /> contenente l'URI o come <see cref="T:System.Uri" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadString (address As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DownloadString(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadString : string -&gt; string" Usage="webClient.DownloadString address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Classe <see cref="T:System.String" /> contenente l'URI da scaricare.</param>
        <summary>Scarica la risorsa richiesta come oggetto <see cref="T:System.String" />. La risorsa da scaricare viene specificata come <see cref="T:System.String" /> contenente l'URI.</summary>
        <returns>
          <see cref="T:System.String" /> contenente la risorsa richiesta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo recupera la risorsa specificata. Dopo aver scaricato la risorsa, il metodo utilizza la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà da convertire la risorsa a un <xref:System.String>. Questo metodo si blocca durante il download della risorsa. Per scaricare una risorsa e continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.DownloadStringAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come chiamare questo metodo.  
  
 [!code-cpp[NCLWebClientAsync#25](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#25)]
 [!code-csharp[NCLWebClientAsync#25](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#25)]
 [!code-vb[NCLWebClientAsync#25](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.</exception>
        <exception cref="T:System.NotSupportedException">Questo metodo è stato chiamato simultaneamente su più thread.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadString (address As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DownloadString(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadString : Uri -&gt; string" Usage="webClient.DownloadString address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Oggetto <see cref="T:System.Uri" /> contenente l'URI da scaricare.</param>
        <summary>Scarica la risorsa richiesta come oggetto <see cref="T:System.String" />. La risorsa da scaricare viene specificata come classe <see cref="T:System.Uri" />.</summary>
        <returns>
          <see cref="T:System.String" /> contenente la risorsa richiesta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo recupera la risorsa specificata. Dopo aver scaricato la risorsa, il metodo utilizza la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà da convertire la risorsa a un <xref:System.String>. Questo metodo si blocca durante il download della risorsa. Per scaricare una risorsa e continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.DownloadStringAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.</exception>
        <exception cref="T:System.NotSupportedException">Questo metodo è stato chiamato simultaneamente su più thread.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadStringAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Esegue il download della risorsa specificata come classe <see cref="T:System.String" /> o <see cref="T:System.Uri" />. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadStringAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadStringAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringAsync : Uri -&gt; unit" Usage="webClient.DownloadStringAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Classe <see cref="T:System.Uri" /> contenente l'URI da scaricare.</param>
        <summary>Scarica la risorsa specificata come classe <see cref="T:System.Uri" />. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La risorsa viene scaricata in modo asincrono usando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Dopo aver scaricato la risorsa, questo metodo Usa la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà da convertire la risorsa a un <xref:System.String>. Questo metodo non blocca il thread chiamante durante il download della risorsa. Per scaricare una risorsa e un blocco durante l'attesa di risposta del server, usare il <xref:System.Net.WebClient.DownloadString%2A> (metodo). Al termine del download, il <xref:System.Net.WebClient.DownloadStringCompleted> viene generato l'evento. L'applicazione deve gestire questo evento per ricevere una notifica. È disponibile in stringa scaricata il <xref:System.Net.DownloadStringCompletedEventArgs.Result%2A> proprietà.  
  
 È possibile usare il <xref:System.Net.WebClient.CancelAsync%2A> metodo per annullare operazioni asincrone che non sono state completate.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadStringAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadStringAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringAsync : Uri * obj -&gt; unit" Usage="webClient.DownloadStringAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Classe <see cref="T:System.Uri" /> contenente l'URI da scaricare.</param>
        <param name="userToken">Oggetto definito dall'utente passato al metodo richiamato al completamento dell'operazione asincrona.</param>
        <summary>Esegue il download della stringa specificata nella risorsa specificata. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La risorsa viene scaricata in modo asincrono usando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Dopo aver scaricato la risorsa, questo metodo Usa la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà da convertire la risorsa a un <xref:System.String>. Questo metodo non blocca il thread chiamante durante il download della risorsa. Per scaricare una risorsa e un blocco durante l'attesa di risposta del server, usare il <xref:System.Net.WebClient.DownloadString%2A> (metodo). Al termine del download, il <xref:System.Net.WebClient.DownloadStringCompleted> viene generato l'evento. L'applicazione deve gestire questo evento per ricevere una notifica. È disponibile in stringa scaricata il <xref:System.Net.DownloadStringCompletedEventArgs.Result%2A> proprietà.  
  
 È possibile usare il <xref:System.Net.WebClient.CancelAsync%2A> metodo per annullare operazioni asincrone che non sono state completate.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadStringCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadStringCompleted As DownloadStringCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadStringCompletedEventHandler ^ DownloadStringCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadStringCompleted : System.Net.DownloadStringCompletedEventHandler " Usage="member this.DownloadStringCompleted : System.Net.DownloadStringCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica al completamento di un'operazione asincrona di download di risorse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato ogni volta che viene completata un'operazione asincrona per scaricare una risorsa come stringa. Queste operazioni vengono avviate chiamando il <xref:System.Net.WebClient.DownloadStringAsync%2A> metodi.  
  
 Il <xref:System.Net.DownloadStringCompletedEventHandler> è il delegato per questo evento. Il <xref:System.Net.DownloadStringCompletedEventArgs> classe fornisce il gestore eventi con i dati dell'evento.  
  
 Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'impostazione di un gestore eventi per questo evento.  
  
 [!code-cpp[NCLWebClientAsync#28](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#28)]
 [!code-csharp[NCLWebClientAsync#28](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#28)]
 [!code-vb[NCLWebClientAsync#28](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadStringTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scarica la risorsa come matrice <see cref="T:System.String" /> dall'URI specificato come operazione asincrona utilizzando un oggetto attività.  Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadStringTaskAsync (address As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ DownloadStringTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.DownloadStringTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa di cui eseguire il download.</param>
        <summary>Scarica la risorsa come matrice <see cref="T:System.String" /> dall'URI specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> che contiene la risorsa scaricata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che la risorsa di dati è stata scaricata.  La risorsa viene scaricata in modo asincrono usando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Dopo aver scaricato la risorsa, questo metodo Usa la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà da convertire la risorsa a un <xref:System.String>. Questo metodo non blocca il thread chiamante durante il download della risorsa.  
  
 È possibile usare il <xref:System.Net.WebClient.CancelAsync%2A> metodo per annullare operazioni asincrone che non sono state completate.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
 Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadStringTaskAsync (address As Uri) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ DownloadStringTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.DownloadStringTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa di cui eseguire il download.</param>
        <summary>Scarica la risorsa come matrice <see cref="T:System.String" /> dall'URI specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> che contiene la risorsa scaricata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che la risorsa di dati è stata scaricata. La risorsa viene scaricata in modo asincrono usando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Dopo aver scaricato la risorsa, questo metodo Usa la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà da convertire la risorsa a un <xref:System.String>. Questo metodo non blocca il thread chiamante durante il download della risorsa.  
  
 È possibile usare il <xref:System.Net.WebClient.CancelAsync%2A> metodo per annullare operazioni asincrone che non sono state completate.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
 Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Net.WebClient.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene e imposta l'oggetto <see cref="T:System.Text.Encoding" /> utilizzato per caricare e scaricare stringhe.</summary>
        <value>Oggetto <see cref="T:System.Text.Encoding" /> utilizzato per codificare stringhe. Il valore predefinito di questa proprietà è la codifica restituita dalla proprietà <see cref="P:System.Text.Encoding.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.UploadString%2A> e <xref:System.Net.WebClient.UploadStringAsync%2A> metodi utilizzano questa proprietà per convertire la stringa specificata in un <xref:System.Byte> matrice prima di caricare la stringa. Per altre informazioni, vedere il <xref:System.Text.Encoding.GetBytes%2A> (metodo).  
  
 Quando una stringa viene scaricata usando il <xref:System.Net.WebClient.DownloadString%2A> o <xref:System.Net.WebClient.DownloadStringAsync%2A> metodi <xref:System.Net.WebClient> utilizza il <xref:System.Text.Encoding> restituito da questa opzione per convertire il file <xref:System.Byte> matrice in una stringa. Per altre informazioni, vedere il <xref:System.Text.Encoding.GetString%2A> (metodo).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'impostazione il valore di questa proprietà.  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebRequest GetWebRequest (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebRequest(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebRequest (address As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebRequest ^ GetWebRequest(Uri ^ address);" />
      <MemberSignature Language="F#" Value="abstract member GetWebRequest : Uri -&gt; System.Net.WebRequest&#xA;override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="webClient.GetWebRequest address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Oggetto <see cref="T:System.Uri" /> che identifica la risorsa da richiedere.</param>
        <summary>Restituisce un oggetto <see cref="T:System.Net.WebRequest" /> per la risorsa specificata.</summary>
        <returns>Nuovo oggetto <see cref="T:System.Net.WebRequest" /> per la risorsa specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo copia esistente <xref:System.Net.WebClient.Headers%2A>, <xref:System.Net.WebClient.Credentials%2A>e il metodo appena creata <xref:System.Net.WebRequest> oggetto.  
  
 Questo metodo può essere chiamato solo dalle classi che ereditano da <xref:System.Net.WebClient>. Viene fornito per concedere l'accesso gli eredi sottostante <xref:System.Net.WebRequest> oggetto. Le classi derivate devono chiamare l'implementazione della classe base <xref:System.Net.WebClient.GetWebRequest%2A> per assicurarsi che il metodo funziona come previsto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione di questo metodo che può essere personalizzato da una classe derivata da <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#1)]
 [!code-csharp[NCLCustomWebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetWebResponse">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Restituisce l'oggetto <see cref="T:System.Net.WebResponse" /> per l'oggetto <see cref="T:System.Net.WebRequest" /> specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse" Usage="webClient.GetWebResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
      </Parameters>
      <Docs>
        <param name="request">Oggetto <see cref="T:System.Net.WebRequest" /> utilizzato per ottenere la risposta.</param>
        <summary>Restituisce l'oggetto <see cref="T:System.Net.WebResponse" /> per l'oggetto <see cref="T:System.Net.WebRequest" /> specificato.</summary>
        <returns>Oggetto <see cref="T:System.Net.WebResponse" /> contenente la risposta per l'oggetto <see cref="T:System.Net.WebRequest" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto restituito da questo metodo viene ottenuto chiamando il <xref:System.Net.WebRequest.GetResponse%2A> metodo sull'oggetto specificato <xref:System.Net.WebRequest> oggetto.  
  
 Questo metodo può essere chiamato solo dalle classi che ereditano da <xref:System.Net.WebClient>. Viene fornito per concedere l'accesso gli eredi sottostante <xref:System.Net.WebResponse> oggetto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione di questo metodo che può essere personalizzato da una classe derivata da <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#2)]
 [!code-csharp[NCLCustomWebClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest, result As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request, IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse" Usage="webClient.GetWebResponse (request, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="request">Oggetto <see cref="T:System.Net.WebRequest" /> utilizzato per ottenere la risposta.</param>
        <param name="result">Oggetto <see cref="T:System.IAsyncResult" /> ottenuto da una chiamata precedente al metodo <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</param>
        <summary>Restituisce l'oggetto <see cref="T:System.Net.WebResponse" /> per l'oggetto <see cref="T:System.Net.WebRequest" /> specificato utilizzando l'oggetto <see cref="T:System.IAsyncResult" /> specificato.</summary>
        <returns>Oggetto <see cref="T:System.Net.WebResponse" /> contenente la risposta per l'oggetto <see cref="T:System.Net.WebRequest" /> specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto restituito da questo metodo viene ottenuto chiamando il <xref:System.Net.WebRequest.EndGetResponse%2A> metodo sull'oggetto specificato <xref:System.Net.WebRequest> oggetto.  
  
 Questo metodo può essere chiamato solo dalle classi che ereditano da <xref:System.Net.WebClient>. Viene fornito per concedere l'accesso gli eredi sottostante <xref:System.Net.WebResponse> oggetto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione di questo metodo che può essere personalizzato da una classe derivata da <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#3)]
 [!code-csharp[NCLCustomWebClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.WebClient.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una raccolta di coppie nome/valore di intestazione associate alla richiesta.</summary>
        <value>Oggetto <see cref="T:System.Net.WebHeaderCollection" /> contenente coppie nome/valore di intestazione associate alla richiesta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.Headers%2A> proprietà contiene un <xref:System.Net.WebHeaderCollection> istanza contenente le intestazioni di protocollo che i <xref:System.Net.WebClient> Invia con la richiesta.  
  
 Alcune intestazioni comuni vengono considerate limitate e sono protette dal sistema e non può essere impostato o modificato un <xref:System.Net.WebHeaderCollection> oggetto. Qualsiasi tentativo di impostare una di queste intestazioni con restrizioni nel <xref:System.Net.WebHeaderCollection> oggetto associato a un <xref:System.Net.WebClient> oggetto verrà generata un'eccezione in un secondo momento durante il tentativo di inviare il <xref:System.Net.WebClient> richiesta.  
  
 Includeranno le intestazioni con restrizioni protette dal sistema ma non sono limitate a quanto segue:  
  
-   Data  
  
-   Host  
  
 Inoltre, alcune altre intestazioni sono limitate quando si usa un <xref:System.Net.WebClient> oggetto. Queste intestazioni con restrizioni includono, ma non sono limitate a quanto segue:  
  
-   Accettare  
  
-   Connessione  
  
-   Content-Length  
  
-   Previsto (quando il valore è impostato su "100-continuare"  
  
-   If-Modified-Since  
  
-   Intervallo  
  
-   Codifica di trasferimento  
  
 Il <xref:System.Net.HttpWebRequest> classe presenta proprietà per l'impostazione di alcune delle intestazioni precedenti. Se è importante per un'applicazione impostare le intestazioni, il <xref:System.Net.HttpWebRequest> classe deve essere usata al posto di <xref:System.Net.WebRequest> classe.  
  
 Non si deve presupporre che i valori di intestazione rimarrà invariati, poiché le cache e i server Web possono modificare o aggiungere intestazioni a una richiesta Web.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Net.WebClient.Headers%2A> raccolta per impostare il protocollo HTTP `Content-Type` intestazione `application/x-www-form-urlencoded,` per notificare il server che costituiscono i dati sono allegati al post.  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.WebRequest.Headers" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.Net.WebClient.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene se è in corso una richiesta Web.</summary>
        <value>
          <see langword="true" /> se la richiesta Web è ancora in corso; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadDataCompleted (System.Net.DownloadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadDataCompleted(class System.Net.DownloadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadDataCompleted (e As DownloadDataCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadDataCompleted(System::Net::DownloadDataCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadDataCompleted : System.Net.DownloadDataCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadDataCompleted : System.Net.DownloadDataCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadDataCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadDataCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Net.DownloadDataCompletedEventArgs" /> contenente i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Net.WebClient.DownloadDataCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che ereditano da questa classe possono eseguire l'override di questo metodo per eseguire altre attività quando il <xref:System.Net.WebClient.DownloadDataCompleted> evento si verifica.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md)  
  
 Il metodo <xref:System.Net.WebClient.OnDownloadDataCompleted%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione di questo metodo che può essere personalizzato da una classe derivata da <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#4)]
 [!code-csharp[NCLCustomWebClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadFileCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadFileCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadFileCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadFileCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadFileCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadFileCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadFileCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> contenente i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Net.WebClient.DownloadFileCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che ereditano da questa classe possono eseguire l'override di questo metodo per eseguire altre attività quando il <xref:System.Net.WebClient.DownloadFileCompleted> evento si verifica.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Net.WebClient.OnDownloadFileCompleted%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione di questo metodo che può essere personalizzato da una classe derivata da <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#5)]
 [!code-csharp[NCLCustomWebClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadProgressChanged (System.Net.DownloadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadProgressChanged(class System.Net.DownloadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadProgressChanged (e As DownloadProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadProgressChanged(System::Net::DownloadProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadProgressChanged : System.Net.DownloadProgressChangedEventArgs -&gt; unit&#xA;override this.OnDownloadProgressChanged : System.Net.DownloadProgressChangedEventArgs -&gt; unit" Usage="webClient.OnDownloadProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Net.DownloadProgressChangedEventArgs" /> contenente i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Net.WebClient.DownloadProgressChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che ereditano da questa classe possono eseguire l'override di questo metodo per eseguire altre attività quando il <xref:System.Net.WebClient.DownloadProgressChanged> evento si verifica.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Net.WebClient.OnDownloadProgressChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione di questo metodo che può essere personalizzato da una classe derivata da <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#12)]
 [!code-csharp[NCLCustomWebClient#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadStringCompleted (System.Net.DownloadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadStringCompleted(class System.Net.DownloadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadStringCompleted (e As DownloadStringCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadStringCompleted(System::Net::DownloadStringCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadStringCompleted : System.Net.DownloadStringCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadStringCompleted : System.Net.DownloadStringCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadStringCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadStringCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Net.DownloadStringCompletedEventArgs" /> contenente i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Net.WebClient.DownloadStringCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che ereditano da questa classe possono eseguire l'override di questo metodo per eseguire altre attività quando il <xref:System.Net.WebClient.DownloadStringCompleted> evento si verifica.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Net.WebClient.OnDownloadStringCompleted%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione di questo metodo che può essere personalizzato da una classe derivata da <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#6)]
 [!code-csharp[NCLCustomWebClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenReadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenReadCompleted (System.Net.OpenReadCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenReadCompleted(class System.Net.OpenReadCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpenReadCompleted (e As OpenReadCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpenReadCompleted(System::Net::OpenReadCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpenReadCompleted : System.Net.OpenReadCompletedEventArgs -&gt; unit&#xA;override this.OnOpenReadCompleted : System.Net.OpenReadCompletedEventArgs -&gt; unit" Usage="webClient.OnOpenReadCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenReadCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Net.OpenReadCompletedEventArgs" /> contenente i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Net.WebClient.OpenReadCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che ereditano da questa classe possono eseguire l'override di questo metodo per eseguire altre attività quando il <xref:System.Net.WebClient.OpenReadCompleted> evento si verifica.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Net.WebClient.OnOpenReadCompleted%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione di questo metodo che può essere personalizzato da una classe derivata da <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#7)]
 [!code-csharp[NCLCustomWebClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenWriteCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenWriteCompleted (System.Net.OpenWriteCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenWriteCompleted(class System.Net.OpenWriteCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpenWriteCompleted (e As OpenWriteCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpenWriteCompleted(System::Net::OpenWriteCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpenWriteCompleted : System.Net.OpenWriteCompletedEventArgs -&gt; unit&#xA;override this.OnOpenWriteCompleted : System.Net.OpenWriteCompletedEventArgs -&gt; unit" Usage="webClient.OnOpenWriteCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenWriteCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Net.OpenWriteCompletedEventArgs" /> contenente i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Net.WebClient.OpenWriteCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che ereditano da questa classe possono eseguire l'override di questo metodo per eseguire altre attività quando il <xref:System.Net.WebClient.OpenWriteCompleted> evento si verifica.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Net.WebClient.OnOpenWriteCompleted%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione di questo metodo che può essere personalizzato da una classe derivata da <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#8)]
 [!code-csharp[NCLCustomWebClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadDataCompleted (System.Net.UploadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadDataCompleted(class System.Net.UploadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadDataCompleted (e As UploadDataCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadDataCompleted(System::Net::UploadDataCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadDataCompleted : System.Net.UploadDataCompletedEventArgs -&gt; unit&#xA;override this.OnUploadDataCompleted : System.Net.UploadDataCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadDataCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadDataCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Net.UploadDataCompletedEventArgs" /> contenente i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Net.WebClient.UploadDataCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che ereditano da questa classe possono eseguire l'override di questo metodo per eseguire altre attività quando il <xref:System.Net.WebClient.UploadDataCompleted> evento si verifica.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Net.WebClient.OnUploadDataCompleted%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione di questo metodo che può essere personalizzato da una classe derivata da <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#9)]
 [!code-csharp[NCLCustomWebClient#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#9)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadFileCompleted (System.Net.UploadFileCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadFileCompleted(class System.Net.UploadFileCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadFileCompleted (e As UploadFileCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadFileCompleted(System::Net::UploadFileCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadFileCompleted : System.Net.UploadFileCompletedEventArgs -&gt; unit&#xA;override this.OnUploadFileCompleted : System.Net.UploadFileCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadFileCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadFileCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Net.UploadFileCompletedEventArgs" /> contenente i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Net.WebClient.UploadFileCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che ereditano da questa classe possono eseguire l'override di questo metodo per eseguire altre attività quando il <xref:System.Net.WebClient.UploadFileCompleted> evento si verifica.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Net.WebClient.OnUploadFileCompleted%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione di questo metodo che può essere personalizzato da una classe derivata da <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#10)]
 [!code-csharp[NCLCustomWebClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#10)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadProgressChanged (System.Net.UploadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadProgressChanged(class System.Net.UploadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadProgressChanged (e As UploadProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadProgressChanged(System::Net::UploadProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadProgressChanged : System.Net.UploadProgressChangedEventArgs -&gt; unit&#xA;override this.OnUploadProgressChanged : System.Net.UploadProgressChangedEventArgs -&gt; unit" Usage="webClient.OnUploadProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Net.UploadProgressChangedEventArgs" /> contenente i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Net.WebClient.UploadProgressChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che ereditano da questa classe possono eseguire l'override di questo metodo per eseguire altre attività quando il <xref:System.Net.WebClient.UploadProgressChanged> evento si verifica.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Net.WebClient.OnUploadProgressChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione di questo metodo che può essere personalizzato da una classe derivata da <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#13)]
 [!code-csharp[NCLCustomWebClient#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#13)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadStringCompleted (System.Net.UploadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadStringCompleted(class System.Net.UploadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadStringCompleted (e As UploadStringCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadStringCompleted(System::Net::UploadStringCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadStringCompleted : System.Net.UploadStringCompletedEventArgs -&gt; unit&#xA;override this.OnUploadStringCompleted : System.Net.UploadStringCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadStringCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadStringCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Net.UploadStringCompletedEventArgs" /> contenente i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Net.WebClient.UploadStringCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che ereditano da questa classe possono eseguire l'override di questo metodo per eseguire altre attività quando il <xref:System.Net.WebClient.UploadStringCompleted> evento si verifica.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Net.WebClient.OnUploadStringCompleted%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione di questo metodo che può essere personalizzato da una classe derivata da <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#11)]
 [!code-csharp[NCLCustomWebClient#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadValuesCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadValuesCompleted (System.Net.UploadValuesCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadValuesCompleted(class System.Net.UploadValuesCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadValuesCompleted (e As UploadValuesCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadValuesCompleted(System::Net::UploadValuesCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadValuesCompleted : System.Net.UploadValuesCompletedEventArgs -&gt; unit&#xA;override this.OnUploadValuesCompleted : System.Net.UploadValuesCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadValuesCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadValuesCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Net.UploadValuesCompletedEventArgs" /> contenente i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Net.WebClient.UploadValuesCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che ereditano da questa classe possono eseguire l'override di questo metodo per eseguire altre attività quando il <xref:System.Net.WebClient.UploadValuesCompleted> evento si verifica.  
  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Net.WebClient.OnUploadValuesCompleted%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata un'implementazione di questo metodo che può essere personalizzato da una classe derivata da <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#14)]
 [!code-csharp[NCLCustomWebClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#14)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnWriteStreamClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnWriteStreamClosed (System.Net.WriteStreamClosedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteStreamClosed(class System.Net.WriteStreamClosedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnWriteStreamClosed(System.Net.WriteStreamClosedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWriteStreamClosed (e As WriteStreamClosedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWriteStreamClosed(System::Net::WriteStreamClosedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWriteStreamClosed : System.Net.WriteStreamClosedEventArgs -&gt; unit&#xA;override this.OnWriteStreamClosed : System.Net.WriteStreamClosedEventArgs -&gt; unit" Usage="webClient.OnWriteStreamClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.WriteStreamClosedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Oggetto <see cref="T:System.Net.WriteStreamClosedEventArgs" /> contenente i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Net.WebClient.WriteStreamClosed" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenRead">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Apre un flusso in lettura per i dati scaricati da una risorsa con l' URI specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead (address As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenRead(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenRead : string -&gt; System.IO.Stream" Usage="webClient.OpenRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI specificato come classe <see cref="T:System.String" /> da cui eseguire il download dei dati.</param>
        <summary>Apre un flusso in lettura per i dati scaricati da una risorsa con l' URI specificato come classe <see cref="T:System.String" />.</summary>
        <returns>Un <see cref="T:System.IO.Stream" /> utilizzato per leggere dati da una risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.OpenRead%2A> metodo crea un <xref:System.IO.Stream> usato per leggere il contenuto della risorsa specificata dall'istanza di `address` parametro. Questo metodo si blocca durante l'apertura del flusso. Per continuare l'esecuzione durante l'attesa per il flusso, utilizzare uno del <xref:System.Net.WebClient.OpenReadAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è `null`, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  È necessario chiamare <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> dopo aver utilizzato la <xref:System.IO.Stream> per evitare di esaurire le risorse di sistema.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente consente di aprire la risorsa identificata dal `uriString` e visualizza i risultati nella console di sistema. Si noti che il <xref:System.IO.Stream> restituito da <xref:System.Net.WebClient.OpenRead%2A> viene chiuso quando i dati sono stati letti.  
  
 [!code-cpp[WebClient_OpenRead#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenRead/CPP/webclient_openread.cpp#1)]
 [!code-csharp[WebClient_OpenRead#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenRead/CS/webclient_openread.cs#1)]
 [!code-vb[WebClient_OpenRead#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenRead/VB/webclient_openread.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download dei dati.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead (address As Uri) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenRead(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenRead : Uri -&gt; System.IO.Stream" Usage="webClient.OpenRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">L'URI specificato come classe <see cref="T:System.Uri" /> da cui eseguire il download dei dati.</param>
        <summary>Apre un flusso in lettura per i dati scaricati da una risorsa con l' URI specificato come classe <see cref="T:System.Uri" />.</summary>
        <returns>Un <see cref="T:System.IO.Stream" /> utilizzato per leggere dati da una risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.OpenRead%2A> metodo crea un <xref:System.IO.Stream> usato per leggere il contenuto della risorsa specificata dall'istanza di `address` parametro. Questo metodo si blocca durante l'apertura del flusso. Per continuare l'esecuzione durante l'attesa per il flusso, utilizzare uno del <xref:System.Net.WebClient.OpenReadAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è `null`, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  È necessario chiamare <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> dopo aver utilizzato la <xref:System.IO.Stream> per evitare di esaurire le risorse di sistema.  
  
 **Nota** questo membro genera informazioni di traccia quando si abilita la traccia di rete nell'applicazione. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante il download dei dati.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReadAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Apre un flusso in lettura contenente la risorsa specificata. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenReadAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenReadAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadAsync : Uri -&gt; unit" Usage="webClient.OpenReadAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa da recuperare.</param>
        <summary>Apre un flusso in lettura contenente la risorsa specificata. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo recupera un <xref:System.IO.Stream> usato per accedere alla risorsa specificata dall'istanza di `address` parametro. Il flusso viene ottenuto utilizzando le risorse del thread allocate automaticamente dal pool di thread. Per ricevere notifica quando il flusso è disponibile, aggiungere un gestore eventi per il <xref:System.Net.WebClient.OpenReadCompleted> evento.  
  
> [!NOTE]
>  È necessario chiamare <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> al termine con il <xref:System.IO.Stream> per evitare di esaurire le risorse di sistema.  
  
 Questo metodo non blocca il thread chiamante mentre viene aperto il flusso. Per bloccare l'attesa per il flusso, utilizzare il <xref:System.Net.WebClient.OpenReadAsync%2A> (metodo).  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non specifica un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto della risorsa richiesta. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è `null`, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione della proprietà <see cref="P:System.Net.WebClient.BaseAddress" /> con l'indirizzo non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenReadAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenReadAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.OpenReadAsync : Uri * obj -&gt; unit" Usage="webClient.OpenReadAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa da recuperare.</param>
        <param name="userToken">Oggetto definito dall'utente passato al metodo richiamato al completamento dell'operazione asincrona.</param>
        <summary>Apre un flusso in lettura contenente la risorsa specificata. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo recupera un <xref:System.IO.Stream> usato per accedere alla risorsa specificata dall'istanza di `address` parametro. Il flusso viene ottenuto utilizzando le risorse del thread allocate automaticamente dal pool di thread. Per ricevere notifica quando il flusso è disponibile, aggiungere un gestore eventi per il <xref:System.Net.WebClient.OpenReadCompleted> evento.  
  
> [!NOTE]
>  È necessario chiamare <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> al termine con il <xref:System.IO.Stream> per evitare di esaurire le risorse di sistema.  
  
 Questo metodo non blocca il thread chiamante mentre viene aperto il flusso. Per bloccare l'attesa per il flusso, utilizzare il <xref:System.Net.WebClient.OpenRead%2A> (metodo).  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non specifica un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto della risorsa richiesta. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è `null`, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione della proprietà <see cref="P:System.Net.WebClient.BaseAddress" /> con l'indirizzo non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenReadCompletedEventHandler OpenReadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenReadCompletedEventHandler OpenReadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenReadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OpenReadCompleted As OpenReadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::OpenReadCompletedEventHandler ^ OpenReadCompleted;" />
      <MemberSignature Language="F#" Value="member this.OpenReadCompleted : System.Net.OpenReadCompletedEventHandler " Usage="member this.OpenReadCompleted : System.Net.OpenReadCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenReadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica al completamento di un'operazione asincrona di apertura di un flusso contenente una risorsa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato ogni volta che viene completata un'operazione asincrona per aprire un flusso che contiene una risorsa. Queste operazioni vengono avviate chiamando il <xref:System.Net.WebClient.OpenReadAsync%2A> metodi.  
  
 Il <xref:System.Net.OpenReadCompletedEventHandler> è il delegato per questo evento. Il <xref:System.Net.OpenReadCompletedEventArgs> classe fornisce il gestore eventi con i dati dell'evento.  
  
 Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'impostazione di un gestore eventi per questo evento.  
  
 [!code-cpp[NCLWebClientAsync#30](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#30)]
 [!code-csharp[NCLWebClientAsync#30](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#30)]
 [!code-vb[NCLWebClientAsync#30](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReadTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Apre un flusso leggibile contenente la risorsa specificata come operazione asincrona utilizzando un oggetto attività. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenReadTaskAsync (address As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenReadTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenReadTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa da recuperare.</param>
        <summary>Apre un flusso leggibile contenente la risorsa specificata come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce l'oggetto <see cref="T:System.IO.Stream" /> utilizzato per leggere i dati da una risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata dopo il flusso leggibile per la risorsa di dati è stata aperta. Questo metodo non blocca il thread chiamante mentre viene aperto il flusso.  
  
 Questo metodo recupera un <xref:System.IO.Stream> usato per accedere alla risorsa specificata dall'istanza di `address` parametro. Il flusso viene ottenuto utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
> [!NOTE]
>  È necessario chiamare <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> al termine con il <xref:System.IO.Stream> per evitare di esaurire le risorse di sistema.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non specifica un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto della risorsa richiesta. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è `null`, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione della proprietà <see cref="P:System.Net.WebClient.BaseAddress" /> con l'indirizzo non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenReadTaskAsync (address As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenReadTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenReadTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa da recuperare.</param>
        <summary>Apre un flusso leggibile contenente la risorsa specificata come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce l'oggetto <see cref="T:System.IO.Stream" /> utilizzato per leggere i dati da una risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata dopo il flusso leggibile per la risorsa di dati è stata aperta. Questo metodo non blocca il thread chiamante mentre viene aperto il flusso.  
  
 Questo metodo recupera un <xref:System.IO.Stream> usato per accedere alla risorsa specificata dall'istanza di `address` parametro. Il flusso viene ottenuto utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
> [!NOTE]
>  È necessario chiamare <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> al termine con il <xref:System.IO.Stream> per evitare di esaurire le risorse di sistema.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non specifica un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto della risorsa richiesta. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è `null`, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando RETR per scaricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo GET.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione della proprietà <see cref="P:System.Net.WebClient.BaseAddress" /> con l'indirizzo non è valido.  
  
oppure 
Si è verificato un errore durante il download della risorsa.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWrite">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Apre un flusso per la scrittura di dati su una risorsa con l'URI specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : string -&gt; System.IO.Stream" Usage="webClient.OpenWrite address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <summary>Apre un flusso per la scrittura di dati nella risorsa specificata.</summary>
        <returns>Un <see cref="T:System.IO.Stream" /> utilizzato per scrivere i dati nella risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.OpenWrite%2A> metodo restituisce un flusso scrivibile che viene usato per inviare dati a una risorsa. Questo metodo si blocca durante l'apertura del flusso. Per continuare l'esecuzione durante l'attesa per il flusso, utilizzare uno del <xref:System.Net.WebClient.OpenWriteAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente legge i dati dalla riga di comando e Usa <xref:System.Net.WebClient.OpenWrite%2A> per ottenere un flusso per la scrittura dei dati. Si noti che il <xref:System.IO.Stream> restituito da <xref:System.Net.WebClient.OpenWrite%2A> viene chiusa dopo l'invio dei dati.  
  
 [!code-cpp[WebClient_OpenWrite2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite2/CPP/webclient_openwrite2.cpp#1)]
 [!code-csharp[WebClient_OpenWrite2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite2/CS/webclient_openwrite2.cs#1)]
 [!code-vb[WebClient_OpenWrite2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite2/VB/webclient_openwrite2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As Uri) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : Uri -&gt; System.IO.Stream" Usage="webClient.OpenWrite address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <summary>Apre un flusso per la scrittura di dati nella risorsa specificata.</summary>
        <returns>Un <see cref="T:System.IO.Stream" /> utilizzato per scrivere i dati nella risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.OpenWrite%2A> metodo restituisce un flusso scrivibile che viene usato per inviare dati a una risorsa. Questo metodo si blocca durante l'apertura del flusso. Per continuare l'esecuzione durante l'attesa per il flusso, utilizzare uno del <xref:System.Net.WebClient.OpenWriteAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As String, method As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(System::String ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : string * string -&gt; System.IO.Stream" Usage="webClient.OpenWrite (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="method">Il metodo utilizzato per inviare i dati alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <summary>Apre un flusso per la scrittura dei dati nella risorsa specificata utilizzando il metodo specificato.</summary>
        <returns>Un <see cref="T:System.IO.Stream" /> utilizzato per scrivere i dati nella risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.OpenWrite%2A> metodo restituisce un flusso scrivibile che viene usato per inviare dati a una risorsa. La richiesta sottostante viene eseguita con il metodo specificato nel `method` parametro. I dati vengono inviati al server quando si chiude il flusso. Questo metodo si blocca durante l'apertura del flusso. Per continuare l'esecuzione durante l'attesa per il flusso, utilizzare uno del <xref:System.Net.WebClient.OpenWriteAsync%2A> metodi.  
  
 Se il `method` parametro specifica un metodo che non è accettato dal server, le classi del protocollo sottostante è determineranno il risultato. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non specifica un indirizzo assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente legge i dati dalla riga di comando e Usa <xref:System.Net.WebClient.OpenWrite%2A> per ottenere un flusso usato per scrivere i dati. Si noti che il <xref:System.IO.Stream> restituito da <xref:System.Net.WebClient.OpenWrite%2A> deve essere chiuso per inviare i dati.  
  
 [!code-cpp[WebClient_OpenWrite#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite/CPP/webclient_openwrite.cpp#1)]
 [!code-csharp[WebClient_OpenWrite#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite/CS/webclient_openwrite.cs#1)]
 [!code-vb[WebClient_OpenWrite#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite/VB/webclient_openwrite.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As Uri, method As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : Uri * string -&gt; System.IO.Stream" Usage="webClient.OpenWrite (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="method">Il metodo utilizzato per inviare i dati alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <summary>Apre un flusso per la scrittura dei dati nella risorsa specificata utilizzando il metodo specificato.</summary>
        <returns>Un <see cref="T:System.IO.Stream" /> utilizzato per scrivere i dati nella risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.OpenWrite%2A> metodo restituisce un flusso scrivibile che viene usato per inviare dati a una risorsa. Questo metodo si blocca durante l'apertura del flusso. Per continuare l'esecuzione durante l'attesa per il flusso, utilizzare uno del <xref:System.Net.WebClient.OpenWriteAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWriteAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Apre un flusso per la scrittura di dati nella risorsa specificata. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri -&gt; unit" Usage="webClient.OpenWriteAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <summary>Apre un flusso per la scrittura di dati nella risorsa specificata. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo recupera un flusso scrivibile che viene usato per inviare dati a una risorsa. Il flusso viene recuperato utilizzando le risorse di thread che vengono allocate automaticamente dal pool di thread. Per ricevere notifica quando il flusso è disponibile, aggiungere un gestore eventi per il <xref:System.Net.WebClient.OpenWriteCompleted> evento. Quando si chiude il flusso, il thread si blocca fino a quando la richiesta viene inviata a `address` e viene ricevuta una risposta.  
  
 Questo metodo non blocca il thread chiamante durante il flusso viene aperto. Per bloccare l'attesa per il flusso, usare uno del <xref:System.Net.WebClient.OpenWrite%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri, method As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri * string -&gt; unit" Usage="webClient.OpenWriteAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="method">Il metodo utilizzato per inviare i dati alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <summary>Apre un flusso per la scrittura di dati nella risorsa specificata. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo recupera un flusso scrivibile che viene usato per inviare dati a una risorsa. Il flusso viene recuperato utilizzando le risorse di thread che vengono allocate automaticamente dal pool di thread. Per ricevere notifica quando il flusso è disponibile, aggiungere un gestore eventi per il <xref:System.Net.WebClient.OpenWriteCompleted> evento. Quando si chiude il flusso, il thread si blocca fino a quando la richiesta viene inviata a `address` e viene ricevuta una risposta.  
  
 Questo metodo non blocca il thread chiamante durante il flusso viene aperto. Per bloccare l'attesa per il flusso, usare uno del <xref:System.Net.WebClient.OpenWrite%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri, method As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address, System::String ^ method, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri * string * obj -&gt; unit" Usage="webClient.OpenWriteAsync (address, method, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="method">Il metodo utilizzato per inviare i dati alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="userToken">Oggetto definito dall'utente passato al metodo richiamato al completamento dell'operazione asincrona</param>
        <summary>Apre un flusso per la scrittura dei dati nella risorsa specificata utilizzando il metodo specificato. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo recupera un flusso scrivibile che viene usato per inviare dati a una risorsa. Il flusso viene recuperato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread. Per ricevere notifica quando il flusso è disponibile, aggiungere un gestore eventi per il <xref:System.Net.WebClient.OpenWriteCompleted> evento. Il contenuto del flusso viene inviato al server quando si chiude il flusso.  
  
 Se il `method` parametro specifica un metodo che non è accettato dal server, le classi del protocollo sottostante è determineranno il risultato. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Questo metodo non blocca il thread chiamante durante il flusso viene aperto. Per bloccare l'attesa per il flusso, usare uno del <xref:System.Net.WebClient.OpenWrite%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenWriteCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OpenWriteCompleted As OpenWriteCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::OpenWriteCompletedEventHandler ^ OpenWriteCompleted;" />
      <MemberSignature Language="F#" Value="member this.OpenWriteCompleted : System.Net.OpenWriteCompletedEventHandler " Usage="member this.OpenWriteCompleted : System.Net.OpenWriteCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenWriteCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica al completamento di un'operazione asincrona di apertura di un flusso per la scrittura in una risorsa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato ogni volta che viene completata un'operazione asincrona per aprire un flusso che viene usato per inviare dati a una risorsa. Queste operazioni vengono avviate chiamando il <xref:System.Net.WebClient.OpenWriteAsync%2A> metodi.  
  
 Il <xref:System.Net.OpenWriteCompletedEventHandler> è il delegato per questo evento. Il <xref:System.Net.OpenWriteCompletedEventArgs> classe fornisce il gestore eventi con i dati dell'evento.  
  
 Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'impostazione di un gestore eventi per questo evento.  
  
 [!code-cpp[NCLWebClientAsync#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#14)]
 [!code-csharp[NCLWebClientAsync#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#14)]
 [!code-vb[NCLWebClientAsync#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWriteTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Apre un flusso per la scrittura di dati alla risorsa specificata come operazione asincrona utilizzando un oggetto attività. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <summary>Apre un flusso per la scrittura di dati alla risorsa specificata come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce un oggetto <see cref="T:System.IO.Stream" /> utilizzato per scrivere i dati in una risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata dopo di un flusso accessibile in scrittura alla risorsa di dati è stata aperta. Questo metodo non blocca il thread chiamante mentre viene aperto il flusso.  
  
 Questo metodo recupera un <xref:System.IO.Stream> utilizzato per scrivere i dati alla risorsa specificata dall'istanza di `address` parametro. Il flusso viene ottenuto utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
> [!NOTE]
>  È necessario chiamare <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> al termine con il <xref:System.IO.Stream> per evitare di esaurire le risorse di sistema.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
 Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <summary>Apre un flusso per la scrittura di dati alla risorsa specificata come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce un oggetto <see cref="T:System.IO.Stream" /> utilizzato per scrivere i dati in una risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata dopo di un flusso accessibile in scrittura alla risorsa di dati è stata aperta. Questo metodo non blocca il thread chiamante mentre viene aperto il flusso.  
  
 Questo metodo recupera un <xref:System.IO.Stream> utilizzato per scrivere i dati alla risorsa specificata dall'istanza di `address` parametro. Il flusso viene ottenuto utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
> [!NOTE]
>  È necessario chiamare <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> al termine con il <xref:System.IO.Stream> per evitare di esaurire le risorse di sistema.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
 Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As String, method As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(System::String ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="method">Il metodo utilizzato per inviare i dati alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <summary>Apre un flusso per la scrittura di dati alla risorsa specificata come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce un oggetto <see cref="T:System.IO.Stream" /> utilizzato per scrivere i dati in una risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata dopo di un flusso accessibile in scrittura alla risorsa di dati è stata aperta. Questo metodo non blocca il thread chiamante mentre viene aperto il flusso.  
  
 Questo metodo recupera un <xref:System.IO.Stream> utilizzato per scrivere i dati alla risorsa specificata dall'istanza di `address` parametro. Il flusso viene ottenuto utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
> [!NOTE]
>  È necessario chiamare <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> al termine con il <xref:System.IO.Stream> per evitare di esaurire le risorse di sistema.  
  
 Se il `method` parametro specifica un metodo che non è accettato dal server, le classi del protocollo sottostante è determineranno il risultato. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
 Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As Uri, method As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="method">Il metodo utilizzato per inviare i dati alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <summary>Apre un flusso per la scrittura di dati alla risorsa specificata come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce un oggetto <see cref="T:System.IO.Stream" /> utilizzato per scrivere i dati in una risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata dopo di un flusso accessibile in scrittura alla risorsa di dati è stata aperta. Questo metodo non blocca il thread chiamante mentre viene aperto il flusso.  
  
 Questo metodo recupera un <xref:System.IO.Stream> utilizzato per scrivere i dati alla risorsa specificata dall'istanza di `address` parametro. Il flusso viene ottenuto utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
> [!NOTE]
>  È necessario chiamare <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> al termine con il <xref:System.IO.Stream> per evitare di esaurire le risorse di sistema.  
  
 Se il `method` parametro specifica un metodo che non è accettato dal server, le classi del protocollo sottostante è determineranno il risultato. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
 Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebClient.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il proxy utilizzato da questo oggetto <see cref="T:System.Net.WebClient" />.</summary>
        <value>Istanza di <see cref="T:System.Net.IWebProxy" /> utilizzata per l'invio delle richieste.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.Proxy%2A> identificata dalla proprietà di <xref:System.Net.IWebProxy> che comunica con i server remoti per conto di questa istanza <xref:System.Net.WebClient> oggetto. Il proxy è impostato dal sistema tramite i file di configurazione e le impostazioni di rete locale di Internet Explorer. Per specificare che non deve essere utilizzato alcun proxy, impostare il <xref:System.Net.WebClient.Proxy%2A> proprietà `null`.  
  
 Per informazioni sul rilevamento automatico del proxy, vedere [rilevamento automatico Proxy](~/docs/framework/network-programming/automatic-proxy-detection.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Net.WebClient.Proxy" /> è impostato su <see langword="null" />.</exception>
        <permission cref="T:System.Net.WebPermission">che è senza restrizioni. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Net.HttpWebResponse" />
        <altmember cref="T:System.Net.FtpWebRequest" />
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
        <altmember cref="T:System.Net.WebProxy" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); void set(System::Collections::Specialized::NameValueCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection with get, set" Usage="System.Net.WebClient.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera o imposta un insieme di coppie nome/valore di query associate alla richiesta.</summary>
        <value>Un <see cref="T:System.Collections.Specialized.NameValueCollection" /> contenente le coppie nome/valore di query associate alla richiesta. Se non sono presenti coppie associate alla richiesta, il valore è una classe <see cref="T:System.Collections.Specialized.NameValueCollection" /> vuota.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.QueryString%2A> proprietà contiene un <xref:System.Collections.Specialized.NameValueCollection> istanza contenente le coppie nome/valore aggiunte all'URI come stringa di query. Il contenuto del <xref:System.Net.WebClient.QueryString%2A> proprietà preceduto da un punto interrogativo (?) e le coppie nome/valore sono separate tra loro da una e commerciale (&).  
  
   
  
## Examples  
 Esempio di codice seguente accetta l'input dell'utente dalla riga di comando e compila un <xref:System.Collections.Specialized.NameValueCollection> che viene assegnato al <xref:System.Net.WebClient.QueryString%2A> proprietà. Scarica quindi la risposta dal server in un file locale.  
  
 [!code-cpp[WebClient_QueryString#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_QueryString/CPP/webclient_querystring.cpp#1)]
 [!code-csharp[WebClient_QueryString#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_QueryString/CS/webclient_querystring.cs#1)]
 [!code-vb[WebClient_QueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_QueryString/VB/webclient_querystring.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseHeaders">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection ResponseHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection ResponseHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.ResponseHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResponseHeaders As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ ResponseHeaders { System::Net::WebHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResponseHeaders : System.Net.WebHeaderCollection" Usage="System.Net.WebClient.ResponseHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera una raccolta di coppie nome/valore di intestazione associate alla risposta.</summary>
        <value>Classe <see cref="T:System.Net.WebHeaderCollection" /> contenente le coppie nome/valore di intestazione associate alla risposta oppure <see langword="null" /> se non è stata ricevuta alcuna risposta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.ResponseHeaders%2A> proprietà contiene un <xref:System.Net.WebHeaderCollection> istanza contenente le informazioni sull'intestazione di <xref:System.Net.WebClient> riceve la risposta.  
  
   
  
## Examples  
 Esempio di codice seguente Scarica e visualizza il <xref:System.Net.WebClient.ResponseHeaders%2A> restituita da un server.  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#2)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#2)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica un buffer di dati in una risorsa con l'URI specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(System::String ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="data">Il buffer di dati da inviare alla risorsa.</param>
        <summary>Carica un buffer di dati in una risorsa identificata da un URI.</summary>
        <returns>Matrice <see cref="T:System.Byte" /> contenente il corpo della risposta dalla risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.UploadData%2A> metodo invia un buffer di dati a una risorsa.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST. Se la richiesta sottostante non viene accettata dal server, le classi del protocollo sottostante determinano ciò che accade. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Il <xref:System.Net.WebClient.UploadData%2A> metodo invia il contenuto di `data` al server senza alcuna codifica. Questo metodo si blocca durante il caricamento dei dati. Per continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadDataAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente converte una stringa immessa dalla console per un <xref:System.Byte> matrice e viene inviata al server specificato utilizzando il <xref:System.Net.WebClient.UploadData%2A>. Ogni risposta dal server viene visualizzata nella console.  
  
 [!code-cpp[WebClient_UpLoadData2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData2/CPP/webclient_uploaddata2.cpp#1)]
 [!code-csharp[WebClient_UpLoadData2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData2/CS/webclient_uploaddata2.cs#1)]
 [!code-vb[WebClient_UpLoadData2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData2/VB/webclient_uploaddata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="data" /> è <see langword="null" />.  
  
oppure 
Si è verificato un errore durante l'invio dei dati.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As Uri, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : Uri * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="data">Il buffer di dati da inviare alla risorsa.</param>
        <summary>Carica un buffer di dati in una risorsa identificata da un URI.</summary>
        <returns>Matrice <see cref="T:System.Byte" /> contenente il corpo della risposta dalla risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.UploadData%2A> metodo invia un buffer di dati a una risorsa.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST. Se la richiesta sottostante non viene accettata dal server, le classi del protocollo sottostante determinano ciò che accade. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Il <xref:System.Net.WebClient.UploadData%2A> metodo invia il contenuto di `data` al server senza alcuna codifica. Questo metodo si blocca durante il caricamento dei dati. Per continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadDataAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="data" /> è <see langword="null" />.  
  
oppure 
Si è verificato un errore durante l'invio dei dati.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As String, method As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(System::String ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : string * string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="method">Il metodo HTTP utilizzato per inviare i dati alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">Il buffer di dati da inviare alla risorsa.</param>
        <summary>Esegue l'upload del buffer di dati nella risorsa specificata utilizzando il metodo specificato.</summary>
        <returns>Matrice <see cref="T:System.Byte" /> contenente il corpo della risposta dalla risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.UploadData%2A> metodo invia un buffer di dati a una risorsa tramite il metodo HTTP specificato nella `method` parametro e restituisce una risposta dal server. Questo metodo si blocca durante il caricamento dei dati. Per continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadDataAsync%2A> metodi.  
  
 Il <xref:System.Net.WebClient.UploadData%2A> metodo invia il contenuto di `data` al server senza alcuna codifica.  
  
 Se il `method` parametro specifica un verbo che non è accettato dal server, le classi del protocollo sottostante è determineranno il risultato. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente converte una stringa immessa dalla console di in una matrice di byte e viene inviata al server specificato utilizzando il <xref:System.Net.WebClient.UploadData%2A>. Ogni risposta dal server viene visualizzata nella console.  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="data" /> è <see langword="null" />.  
  
oppure 
Si è verificato un errore durante l'upload dei dati.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As Uri, method As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : Uri * string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="method">Il metodo HTTP utilizzato per inviare i dati alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">Il buffer di dati da inviare alla risorsa.</param>
        <summary>Esegue l'upload del buffer di dati nella risorsa specificata utilizzando il metodo specificato.</summary>
        <returns>Matrice <see cref="T:System.Byte" /> contenente il corpo della risposta dalla risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.UploadData%2A> metodo invia un buffer di dati a una risorsa tramite il metodo HTTP specificato nella `method` parametro e restituisce una risposta dal server. Questo metodo si blocca durante il caricamento dei dati. Per continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadDataAsync%2A> metodi.  
  
 Il <xref:System.Net.WebClient.UploadData%2A> metodo invia il contenuto di `data` al server senza alcuna codifica.  
  
 Se il `method` parametro specifica un verbo che non è accettato dal server, le classi del protocollo sottostante è determineranno il risultato. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="data" /> è <see langword="null" />.  
  
oppure 
Si è verificato un errore durante l'upload dei dati.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadDataAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica un buffer di dati in una risorsa identificata da un URI. Questo metodo non blocca il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * byte[] -&gt; unit" Usage="webClient.UploadDataAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="data">Il buffer di dati da inviare alla risorsa.</param>
        <summary>Carica un buffer di dati in una risorsa identificata da un URI utilizzando il metodo POST. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo invia un buffer di dati a una risorsa. Il buffer di dati verrà inviato in modo asincrono usando le risorse del thread allocate automaticamente dal pool di thread. I dati non viene codificati. Per ricevere notifica quando viene completato il caricamento dei dati, aggiungere un gestore eventi per il <xref:System.Net.WebClient.UploadDataCompleted> evento.  
  
 Questo metodo non blocca il thread chiamante durante l'invio dei dati. Per inviare i dati e blocco durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadData%2A> metodi.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, method As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * string * byte[] -&gt; unit" Usage="webClient.UploadDataAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="method">Il metodo utilizzato per inviare i dati alla risorsa. Se <see langword="null" /> l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">Il buffer di dati da inviare alla risorsa.</param>
        <summary>Carica un buffer di dati in una risorsa identificata da un URI, utilizzando il metodo specificato. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo invia un buffer di dati a una risorsa. Il buffer di dati verrà inviato in modo asincrono usando le risorse del thread allocate automaticamente dal pool di thread. I dati non viene codificati. Per ricevere notifica quando viene completato il caricamento dei dati, aggiungere un gestore eventi per il <xref:System.Net.WebClient.UploadDataCompleted> evento.  
  
 Questo metodo non blocca il thread chiamante durante l'invio dei dati. Per inviare i dati e blocco durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadData%2A> metodi.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, method As String, data As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * string * byte[] * obj -&gt; unit" Usage="webClient.UploadDataAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="method">Il metodo utilizzato per inviare i dati alla risorsa. Se <see langword="null" /> l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">Il buffer di dati da inviare alla risorsa.</param>
        <param name="userToken">Oggetto definito dall'utente passato al metodo richiamato al completamento dell'operazione asincrona.</param>
        <summary>Carica un buffer di dati in una risorsa identificata da un URI, utilizzando il metodo specificato e un token di identificazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo invia un buffer di dati a una risorsa. Il buffer di dati verrà inviato in modo asincrono usando le risorse del thread allocate automaticamente dal pool di thread. I dati non viene codificati. Per ricevere notifica quando viene completato il caricamento dei dati, aggiungere un gestore eventi per il <xref:System.Net.WebClient.UploadDataCompleted> evento.  
  
 Questo metodo non blocca il thread chiamante durante l'invio dei dati. Per inviare i dati e blocco durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadData%2A> metodi.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadDataCompletedEventHandler UploadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadDataCompletedEventHandler UploadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadDataCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadDataCompleted As UploadDataCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadDataCompletedEventHandler ^ UploadDataCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadDataCompleted : System.Net.UploadDataCompletedEventHandler " Usage="member this.UploadDataCompleted : System.Net.UploadDataCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica al completamento di un'operazione asincrona di upload di dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato ogni volta che viene completata un'operazione di caricamento asincrona dei dati. Caricamenti di dati asincroni vengono avviati chiamando il <xref:System.Net.WebClient.UploadDataAsync%2A> metodi.  
  
 Il <xref:System.Net.UploadDataCompletedEventHandler> è il delegato per questo evento. Il <xref:System.Net.UploadDataCompletedEventArgs> classe fornisce il gestore eventi con i dati dell'evento.  
  
 Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'impostazione di un gestore eventi per questo evento.  
  
 [!code-cpp[NCLWebClientAsync#36](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#36)]
 [!code-csharp[NCLWebClientAsync#36](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#36)]
 [!code-vb[NCLWebClientAsync#36](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadDataTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica un buffer di dati che contiene una matrice <see cref="T:System.Byte" /> nell'URI specificato come operazione asincrona utilizzando un oggetto attività.  Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(System::String ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="data">Il buffer di dati da inviare alla risorsa.</param>
        <summary>Carica un buffer di dati che contiene una matrice <see cref="T:System.Byte" /> nell'URI specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> contenente il corpo della risposta ricevuta dalla risorsa dopo il caricamento del buffer di dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata dopo l'un buffer di dati è stato caricato nella risorsa.  
  
 Questo metodo invia un buffer di dati a una risorsa. Il buffer di dati verrà inviato in modo asincrono usando le risorse del thread allocate automaticamente dal pool di thread. I dati non viene codificati.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As Uri, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : Uri * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="data">Il buffer di dati da inviare alla risorsa.</param>
        <summary>Carica un buffer di dati che contiene una matrice <see cref="T:System.Byte" /> nell'URI specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> contenente il corpo della risposta ricevuta dalla risorsa dopo il caricamento del buffer di dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata dopo l'un buffer di dati è stato caricato nella risorsa.  
  
 Questo metodo invia un buffer di dati a una risorsa. Il buffer di dati verrà inviato in modo asincrono usando le risorse del thread allocate automaticamente dal pool di thread. I dati non viene codificati.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As String, method As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(System::String ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : string * string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="method">Il metodo utilizzato per inviare i dati alla risorsa. Se <see langword="null" /> l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">Il buffer di dati da inviare alla risorsa.</param>
        <summary>Carica un buffer di dati che contiene una matrice <see cref="T:System.Byte" /> nell'URI specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> contenente il corpo della risposta ricevuta dalla risorsa dopo il caricamento del buffer di dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata dopo l'un buffer di dati è stato caricato nella risorsa.  
  
 Questo metodo invia un buffer di dati a una risorsa. Il buffer di dati verrà inviato in modo asincrono usando le risorse del thread allocate automaticamente dal pool di thread. I dati non viene codificati.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As Uri, method As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : Uri * string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere i dati.</param>
        <param name="method">Il metodo utilizzato per inviare i dati alla risorsa. Se <see langword="null" /> l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">Il buffer di dati da inviare alla risorsa.</param>
        <summary>Carica un buffer di dati che contiene una matrice <see cref="T:System.Byte" /> nell'URI specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> contenente il corpo della risposta ricevuta dalla risorsa dopo il caricamento del buffer di dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata dopo l'un buffer di dati è stato caricato nella risorsa.  
  
 Questo metodo invia un buffer di dati a una risorsa. Il buffer di dati verrà inviato in modo asincrono usando le risorse del thread allocate automaticamente dal pool di thread. I dati non viene codificati.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica un file locale su una risorsa con l'URI specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; byte[]" Usage="webClient.UploadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere il file. Ad esempio, ftp://localhost/samplefile.txt.</param>
        <param name="fileName">Il file da inviare alla risorsa. Ad esempio, "samplefile.txt".</param>
        <summary>Carica il file locale specificato in una risorsa con l'URI specificato.</summary>
        <returns>Matrice <see cref="T:System.Byte" /> contenente il corpo della risposta dalla risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.UploadFile%2A> metodo invia un file locale a una risorsa. Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
 Questo metodo si blocca durante il caricamento del file. Per continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadFileAsync%2A> metodi.  
  
 Il `POST` metodo è definito da HTTP. Se la richiesta sottostante non Usa HTTP e `POST` non accettato dal server, le classi del protocollo sottostante è determineranno il risultato. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente carica il file specificato per l'URI specificato utilizzando <xref:System.Net.WebClient.UploadFile%2A>. Qualsiasi risposta restituita dal server viene visualizzato nella console.  
  
 [!code-cpp[WebClient_UpLoadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile/CPP/webclient_uploadfile.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile/CS/webclient_uploadfile.cs#1)]
 [!code-vb[WebClient_UpLoadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile/VB/webclient_uploadfile.vb#1)]  
  
 Esempio di codice seguente mostra una pagina ASP.NET che può accettare file inseriti ed è adatto per l'uso con il <xref:System.Net.WebClient.UploadFile%2A> (metodo). La pagina deve risiedere in un server Web. Il relativo indirizzo fornisce il valore per il `address` parametro il <xref:System.Net.WebClient.UploadFile%2A> (metodo).  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="fileName" /> è <see langword="null" />, è <see cref="F:System.String.Empty" />, contiene caratteri non validi o non esiste.  
  
oppure 
Si è verificato un errore durante l'upload del file.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
L'intestazione <see langword="Content-type" /> inizia con <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere al file locale. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As Uri, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : Uri * string -&gt; byte[]" Usage="webClient.UploadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere il file. Ad esempio, ftp://localhost/samplefile.txt.</param>
        <param name="fileName">Il file da inviare alla risorsa. Ad esempio, "samplefile.txt".</param>
        <summary>Carica il file locale specificato in una risorsa con l'URI specificato.</summary>
        <returns>Matrice <see cref="T:System.Byte" /> contenente il corpo della risposta dalla risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.UploadFile%2A> metodo invia un file locale a una risorsa. Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
 Questo metodo si blocca durante il caricamento del file. Per continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadFileAsync%2A> metodi.  
  
 Il `POST` metodo è definito da HTTP. Se la richiesta sottostante non Usa HTTP e `POST` non accettato dal server, le classi del protocollo sottostante è determineranno il risultato. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="fileName" /> è <see langword="null" />, è <see cref="F:System.String.Empty" />, contiene caratteri non validi o non esiste.  
  
oppure 
Si è verificato un errore durante l'upload del file.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
L'intestazione <see langword="Content-type" /> inizia con <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere al file locale. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As String, method As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(System::String ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string -&gt; byte[]" Usage="webClient.UploadFile (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere il file.</param>
        <param name="method">Il metodo utilizzato per inviare il file alla risorsa. Se <see langword="null" /> l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="fileName">Il file da inviare alla risorsa.</param>
        <summary>Carica il file locale specificato sulla risorsa specificata utilizzando il metodo specificato.</summary>
        <returns>Matrice <see cref="T:System.Byte" /> contenente il corpo della risposta dalla risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'indirizzo specifica una risorsa HTTP, il <xref:System.Net.WebClient.UploadFile%2A> metodo invia un file locale a una risorsa tramite il metodo HTTP specificato nella `method` parametro e restituisce una risposta dal server. Questo metodo si blocca durante il caricamento del file. Per continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadFileAsync%2A> metodi.  
  
 Se il `method` parametro specifica un verbo non riconosciuto dal server o il `address` risorsa, le classi del protocollo sottostante è determineranno il risultato. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente carica il file specificato per l'URI specificato utilizzando <xref:System.Net.WebClient.UploadFile%2A>. Qualsiasi risposta restituita dal server viene visualizzato nella console.  
  
 [!code-cpp[WebClient_UpLoadFile2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CPP/webclient_uploadfile2.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CS/webclient_uploadfile2.cs#1)]
 [!code-vb[WebClient_UpLoadFile2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile2/VB/webclient_uploadfile2.vb#1)]  
  
 Esempio di codice seguente mostra una pagina ASP.NET che può accettare file inseriti ed è adatto per l'uso con il <xref:System.Net.WebClient.UploadFile%2A> (metodo). La pagina deve risiedere in un server Web. Il relativo indirizzo fornisce il valore per il `address` parametro il <xref:System.Net.WebClient.UploadFile%2A> (metodo).  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="fileName" /> è <see langword="null" />, è <see cref="F:System.String.Empty" />, contiene caratteri non validi o non esiste.  
  
oppure 
Si è verificato un errore durante l'upload del file.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
L'intestazione <see langword="Content-type" /> inizia con <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere al file locale. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As Uri, method As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : Uri * string * string -&gt; byte[]" Usage="webClient.UploadFile (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere il file.</param>
        <param name="method">Il metodo utilizzato per inviare il file alla risorsa. Se <see langword="null" /> l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="fileName">Il file da inviare alla risorsa.</param>
        <summary>Carica il file locale specificato sulla risorsa specificata utilizzando il metodo specificato.</summary>
        <returns>Matrice <see cref="T:System.Byte" /> contenente il corpo della risposta dalla risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'indirizzo specifica una risorsa HTTP, il <xref:System.Net.WebClient.UploadFile%2A> metodo invia un file locale a una risorsa tramite il metodo HTTP specificato nella `method` parametro e restituisce una risposta dal server. Questo metodo si blocca durante il caricamento del file. Per continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadFileAsync%2A> metodi.  
  
 Se il `method` parametro specifica un verbo non riconosciuto dal server o il `address` risorsa, le classi del protocollo sottostante è determineranno il risultato. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="fileName" /> è <see langword="null" />, è <see cref="F:System.String.Empty" />, contiene caratteri non validi o non esiste.  
  
oppure 
Si è verificato un errore durante l'upload del file.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
L'intestazione <see langword="Content-type" /> inizia con <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere al file locale. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFileAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica il file locale specificato nella risorsa specificata. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string -&gt; unit" Usage="webClient.UploadFileAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere il file. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="fileName">Il file da inviare alla risorsa.</param>
        <summary>Carica il file locale specificato sulla risorsa specificata utilizzando il metodo POST. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il file viene inviato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread. Per ricevere notifica quando viene completato il caricamento del file, aggiungere un gestore eventi per il <xref:System.Net.WebClient.UploadFileCompleted> evento.  
  
 Questo metodo non blocca il thread chiamante mentre viene inviato il file. Per inviare un file e un blocco durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadFile%2A> metodi.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="fileName" /> è <see langword="null" />, è <see cref="F:System.String.Empty" />, contiene caratteri non validi oppure il percorso specificato del file non esiste.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
L'intestazione <see langword="Content-type" /> inizia con <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere al file locale. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, method As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string * string -&gt; unit" Usage="webClient.UploadFileAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere il file. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="method">Il metodo utilizzato per inviare i dati alla risorsa. Se <see langword="null" /> l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="fileName">Il file da inviare alla risorsa.</param>
        <summary>Carica il file locale specificato sulla risorsa specificata utilizzando il metodo POST. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il file viene inviato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread. Per ricevere notifica quando viene completato il caricamento del file, aggiungere un gestore eventi per il <xref:System.Net.WebClient.UploadFileCompleted> evento.  
  
 Questo metodo non blocca il thread chiamante mentre viene inviato il file. Per inviare un file e un blocco durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadFile%2A> metodi.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="fileName" /> è <see langword="null" />, è <see cref="F:System.String.Empty" />, contiene caratteri non validi oppure il percorso specificato del file non esiste.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
L'intestazione <see langword="Content-type" /> inizia con <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere al file locale. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, method As String, fileName As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ method, System::String ^ fileName, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string * string * obj -&gt; unit" Usage="webClient.UploadFileAsync (address, method, fileName, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere il file. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="method">Il metodo utilizzato per inviare i dati alla risorsa. Se <see langword="null" /> l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="fileName">Il file da inviare alla risorsa.</param>
        <param name="userToken">Oggetto definito dall'utente passato al metodo richiamato al completamento dell'operazione asincrona.</param>
        <summary>Carica il file locale specificato sulla risorsa specificata utilizzando il metodo POST. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il file viene inviato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread. Per ricevere notifica quando viene completato il caricamento del file, aggiungere un gestore eventi per il <xref:System.Net.WebClient.UploadFileCompleted> evento.  
  
 Questo metodo non blocca il thread chiamante mentre viene inviato il file. Per inviare un file e un blocco durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadFile%2A> metodi.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="fileName" /> è <see langword="null" />, è <see cref="F:System.String.Empty" />, contiene caratteri non validi oppure il percorso specificato del file non esiste.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
L'intestazione <see langword="Content-type" /> inizia con <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Per accedere al file locale. Enumerazione associata: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadFileCompletedEventHandler UploadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadFileCompletedEventHandler UploadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadFileCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadFileCompleted As UploadFileCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadFileCompletedEventHandler ^ UploadFileCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadFileCompleted : System.Net.UploadFileCompletedEventHandler " Usage="member this.UploadFileCompleted : System.Net.UploadFileCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadFileCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica al completamento di un'operazione asincrona di upload di file.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato ogni volta che viene completata un'operazione di caricamento di file asincrono. Caricamenti di file asincrono vengono avviati chiamando il <xref:System.Net.WebClient.UploadFileAsync%2A> metodi.  
  
 Il <xref:System.Net.UploadFileCompletedEventHandler> è il delegato per questo evento. Il <xref:System.Net.UploadFileCompletedEventArgs> classe fornisce il gestore eventi con i dati dell'evento.  
  
 Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'impostazione di un gestore eventi per questo evento.  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFileTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica nella risorsa il file locale specificato come operazione asincrona utilizzando un oggetto attività. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere il file. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="fileName">Il file locale da inviare alla risorsa.</param>
        <summary>Carica nella risorsa il file locale specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> contenente il corpo della risposta ricevuta dalla risorsa dopo il caricamento del file.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che il file è stato caricato nella risorsa. Il file viene inviato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="fileName" /> è <see langword="null" />, è <see cref="F:System.String.Empty" />, contiene caratteri non validi oppure il percorso specificato del file non esiste.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
L'intestazione <see langword="Content-type" /> inizia con <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As Uri, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere il file. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="fileName">Il file locale da inviare alla risorsa.</param>
        <summary>Carica nella risorsa il file locale specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> contenente il corpo della risposta ricevuta dalla risorsa dopo il caricamento del file.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che il file è stato caricato nella risorsa. Il file viene inviato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="fileName" /> è <see langword="null" />, è <see cref="F:System.String.Empty" />, contiene caratteri non validi oppure il percorso specificato del file non esiste.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
L'intestazione <see langword="Content-type" /> inizia con <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As String, method As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(System::String ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : string * string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere il file. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="method">Il metodo utilizzato per inviare i dati alla risorsa. Se <see langword="null" /> l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="fileName">Il file locale da inviare alla risorsa.</param>
        <summary>Carica nella risorsa il file locale specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> contenente il corpo della risposta ricevuta dalla risorsa dopo il caricamento del file.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che il file è stato caricato nella risorsa. Il file viene inviato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Per impostazione predefinita, questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="fileName" /> è <see langword="null" />, è <see cref="F:System.String.Empty" />, contiene caratteri non validi oppure il percorso specificato del file non esiste.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
L'intestazione <see langword="Content-type" /> inizia con <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As Uri, method As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : Uri * string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere il file. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="method">Il metodo utilizzato per inviare i dati alla risorsa. Se <see langword="null" /> l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="fileName">Il file locale da inviare alla risorsa.</param>
        <summary>Carica nella risorsa il file locale specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> contenente il corpo della risposta ricevuta dalla risorsa dopo il caricamento del file.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che il file è stato caricato nella risorsa. Il file viene inviato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Per impostazione predefinita, questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="fileName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="fileName" /> è <see langword="null" />, è <see cref="F:System.String.Empty" />, contiene caratteri non validi oppure il percorso specificato del file non esiste.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
L'intestazione <see langword="Content-type" /> inizia con <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.UploadProgressChangedEventHandler UploadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadProgressChangedEventHandler UploadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadProgressChanged As UploadProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadProgressChangedEventHandler ^ UploadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.UploadProgressChanged : System.Net.UploadProgressChangedEventHandler " Usage="member this.UploadProgressChanged : System.Net.UploadProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica quando un'operazione asincrona di caricamento trasferisce correttamente alcuni o tutti i dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato ogni volta che un'operazione di caricamento asincrona rende lo stato di avanzamento. Questo evento viene generato quando vengono avviati caricamenti usando uno dei metodi seguenti.  
  
|Metodo|Descrizione|  
|------------|-----------------|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|Invia un <xref:System.Byte> matrice in cui la risorsa, senza bloccare il thread chiamante.|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|Invia un file locale alla risorsa, senza bloccare il thread chiamante.|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|Invia un <xref:System.Collections.Specialized.NameValueCollection> alla risorsa e restituisce un <xref:System.Byte> matrice contenente una risposta, senza bloccare il thread chiamante.|  
  
 Il <xref:System.Net.UploadProgressChangedEventHandler> è il delegato per questo evento. Il <xref:System.Net.UploadProgressChangedEventArgs> classe fornisce il gestore eventi con i dati dell'evento.  
  
 Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'impostazione di un gestore eventi per questo evento.  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 Esempio di codice seguente viene illustrata un'implementazione di un gestore per questo evento.  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica la stringa specificata nella risorsa specificata.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(System::String ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : string * string -&gt; string" Usage="webClient.UploadString (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere la stringa. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="data">Stringa da caricare.</param>
        <summary>Carica la stringa specificata sulla risorsa specificata utilizzando il metodo POST.</summary>
        <returns>Classe <see cref="T:System.String" /> contenente la risposta inviata dal server.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prima di caricare la stringa, questo metodo lo converte in un <xref:System.Byte> matrice usando la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà. Questo metodo si blocca durante la trasmissione della stringa. Per inviare una stringa e continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadStringAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come chiamare questo metodo.  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As Uri, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : Uri * string -&gt; string" Usage="webClient.UploadString (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere la stringa. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="data">Stringa da caricare.</param>
        <summary>Carica la stringa specificata sulla risorsa specificata utilizzando il metodo POST.</summary>
        <returns>Classe <see cref="T:System.String" /> contenente la risposta inviata dal server.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prima di caricare la stringa, questo metodo lo converte in un <xref:System.Byte> matrice usando la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà. Questo metodo si blocca durante la trasmissione della stringa. Per inviare una stringa e continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadStringAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota (""), e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As String, method As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(System::String ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : string * string * string -&gt; string" Usage="webClient.UploadString (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere la stringa. Questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo <c>method</c>.</param>
        <param name="method">Il metodo HTTP utilizzato per inviare la stringa alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">Stringa da caricare.</param>
        <summary>Carica la stringa specificata sulla risorsa specificata utilizzando il metodo specificato.</summary>
        <returns>Classe <see cref="T:System.String" /> contenente la risposta inviata dal server.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prima di caricare la stringa, questo metodo lo converte in un <xref:System.Byte> matrice usando la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà. Questo metodo si blocca durante la trasmissione della stringa. Per inviare una stringa e continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadStringAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come chiamare questo metodo.  
  
 [!code-cpp[NCLWebClientAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#2)]
 [!code-csharp[NCLWebClientAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#2)]
 [!code-vb[NCLWebClientAsync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
 Non è possibile utilizzare <paramref name="method" /> per inviare contenuto.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As Uri, method As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : Uri * string * string -&gt; string" Usage="webClient.UploadString (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere la stringa. Questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo <c>method</c>.</param>
        <param name="method">Il metodo HTTP utilizzato per inviare la stringa alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">Stringa da caricare.</param>
        <summary>Carica la stringa specificata sulla risorsa specificata utilizzando il metodo specificato.</summary>
        <returns>Classe <see cref="T:System.String" /> contenente la risposta inviata dal server.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prima di caricare la stringa, questo metodo lo converte in un <xref:System.Byte> matrice usando la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà. Questo metodo si blocca durante la trasmissione della stringa. Per inviare una stringa e continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadStringAsync%2A> metodi.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
 Non è possibile utilizzare <paramref name="method" /> per inviare contenuto.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadStringAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica la stringa specificata nella risorsa specificata. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string -&gt; unit" Usage="webClient.UploadStringAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere la stringa. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="data">Stringa da caricare.</param>
        <summary>Carica la stringa specificata nella risorsa specificata. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo invia una stringa a una risorsa. La stringa viene inviata in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread. Prima di caricare la stringa, questo metodo lo converte in un <xref:System.Byte> matrice usando la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà. Per ricevere notifica quando viene completato il caricamento di stringa, è possibile aggiungere un gestore eventi per il <xref:System.Net.WebClient.UploadStringCompleted> evento.  
  
 Questo metodo non blocca il thread chiamante durante l'invio della stringa. Per inviare una stringa e un blocco durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadString%2A> metodi.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, method As String, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string * string -&gt; unit" Usage="webClient.UploadStringAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere la stringa. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="method">Il metodo HTTP utilizzato per inviare il file alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">Stringa da caricare.</param>
        <summary>Carica la stringa specificata nella risorsa specificata. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo invia una stringa a una risorsa. La stringa viene inviata in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread. Prima di caricare la stringa, questo metodo lo converte in un <xref:System.Byte> matrice usando la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà. Per ricevere notifica quando viene completato il caricamento di stringa, è possibile aggiungere un gestore eventi per il <xref:System.Net.WebClient.UploadStringCompleted> evento.  
  
 Questo metodo non blocca il thread chiamante durante l'invio della stringa. Per inviare una stringa e un blocco durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadString%2A> metodi.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 Non è possibile utilizzare <paramref name="method" /> per inviare contenuto.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, method As String, data As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ method, System::String ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string * string * obj -&gt; unit" Usage="webClient.UploadStringAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere la stringa. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="method">Il metodo HTTP utilizzato per inviare il file alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">Stringa da caricare.</param>
        <param name="userToken">Oggetto definito dall'utente passato al metodo richiamato al completamento dell'operazione asincrona.</param>
        <summary>Carica la stringa specificata nella risorsa specificata. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo invia una stringa a una risorsa. La stringa viene inviata in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread. Prima di caricare la stringa, questo metodo lo converte in un <xref:System.Byte> matrice usando la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà. Per ricevere notifica quando viene completato il caricamento di stringa, è possibile aggiungere un gestore eventi per il <xref:System.Net.WebClient.UploadStringCompleted> evento.  
  
 Questo metodo non blocca il thread chiamante durante l'invio della stringa. Per inviare una stringa e un blocco durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadString%2A> metodi.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 Non è possibile utilizzare <paramref name="method" /> per inviare contenuto.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadStringCompletedEventHandler UploadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadStringCompletedEventHandler UploadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadStringCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadStringCompleted As UploadStringCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadStringCompletedEventHandler ^ UploadStringCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadStringCompleted : System.Net.UploadStringCompletedEventHandler " Usage="member this.UploadStringCompleted : System.Net.UploadStringCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica al completamento di un'operazione asincrona di caricamento di stringhe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato ogni volta che viene completata un'operazione di caricamento asincrona stringa. I caricamenti asincroni stringa vengono avviati chiamando il <xref:System.Net.WebClient.UploadStringAsync%2A> metodi.  
  
 Il <xref:System.Net.UploadStringCompletedEventHandler> è il delegato per questo evento. Il <xref:System.Net.UploadStringCompletedEventArgs> classe fornisce il gestore eventi con i dati dell'evento.  
  
 Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'impostazione di un gestore eventi per questo evento.  
  
 [!code-cpp[NCLWebClientAsync#38](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#38)]
 [!code-csharp[NCLWebClientAsync#38](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#38)]
 [!code-vb[NCLWebClientAsync#38](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadStringTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica la stringa specificata nella risorsa specificata come operazione asincrona utilizzando un oggetto attività. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(System::String ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere la stringa. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="data">Stringa da caricare.</param>
        <summary>Carica la stringa specificata nella risorsa specificata come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce un oggetto <see cref="T:System.String" /> contenente la risposta inviata dal server.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che la stringa è stata caricata nella risorsa. La stringa viene inviata in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Prima di caricare la stringa, questo metodo lo converte in un <xref:System.Byte> matrice usando la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà. Questo metodo si blocca durante la trasmissione della stringa.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As Uri, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere la stringa. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="data">Stringa da caricare.</param>
        <summary>Carica la stringa specificata nella risorsa specificata come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce un oggetto <see cref="T:System.String" /> contenente la risposta inviata dal server.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che la stringa è stata caricata nella risorsa. La stringa viene inviata in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Prima di caricare la stringa, questo metodo lo converte in un <xref:System.Byte> matrice usando la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà. Questo metodo si blocca durante la trasmissione della stringa.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As String, method As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(System::String ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : string * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere la stringa. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="method">Il metodo HTTP utilizzato per inviare il file alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">Stringa da caricare.</param>
        <summary>Carica la stringa specificata nella risorsa specificata come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce un oggetto <see cref="T:System.String" /> contenente la risposta inviata dal server.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che la stringa è stata caricata nella risorsa. La stringa viene inviata in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Prima di caricare la stringa, questo metodo lo converte in un <xref:System.Byte> matrice usando la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà. Questo metodo si blocca durante la trasmissione della stringa.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 Non è possibile utilizzare <paramref name="method" /> per inviare contenuto.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As Uri, method As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : Uri * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere la stringa. Per le risorse HTTP, questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo POST, ad esempio uno script o una pagina ASP.</param>
        <param name="method">Il metodo HTTP utilizzato per inviare il file alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">Stringa da caricare.</param>
        <summary>Carica la stringa specificata nella risorsa specificata come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce un oggetto <see cref="T:System.String" /> contenente la risposta inviata dal server.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che la stringa è stata caricata nella risorsa. La stringa viene inviata in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Prima di caricare la stringa, questo metodo lo converte in un <xref:System.Byte> matrice usando la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà. Questo metodo si blocca durante la trasmissione della stringa.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 Non è possibile utilizzare <paramref name="method" /> per inviare contenuto.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValues">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica un insieme nome/valore su una risorsa con l'URI specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(System::String ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere l'insieme.</param>
        <param name="data">L'oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> da inviare alla risorsa.</param>
        <summary>Carica l'insieme nome/valore specificato nella risorsa identificata dall'URI specificato.</summary>
        <returns>Matrice <see cref="T:System.Byte" /> contenente il corpo della risposta dalla risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.UploadValues%2A> metodo invia un <xref:System.Collections.Specialized.NameValueCollection> a un server. Questo metodo si blocca durante il caricamento dei dati. Per continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadValuesAsync%2A> metodi.  
  
 Se la richiesta sottostante non viene accettata dal server, le classi del protocollo sottostante determinano ciò che accade. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Se l'intestazione Content-type `null`, il <xref:System.Net.WebClient.UploadValues%2A> metodo lo imposta su "application/x-www-form-urlencoded".  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Il codice seguente consente di raccogliere informazioni da parte dell'utente (nome, età e indirizzo) e invia i valori al server usando <xref:System.Net.WebClient.UploadValues%2A>. Ogni risposta dal server viene visualizzata nella console.  
  
 [!code-cpp[WebClient_UploadValues#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues/CPP/webclient_uploadvalues.cpp#1)]
 [!code-csharp[WebClient_UploadValues#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues/CS/webclient_uploadvalues.cs#1)]
 [!code-vb[WebClient_UploadValues#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues/VB/webclient_uploadvalues.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="data" /> è <see langword="null" />.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
L'intestazione <see langword="Content-type" /> non è <see langword="null" /> o "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As Uri, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : Uri * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere l'insieme.</param>
        <param name="data">L'oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> da inviare alla risorsa.</param>
        <summary>Carica l'insieme nome/valore specificato nella risorsa identificata dall'URI specificato.</summary>
        <returns>Matrice <see cref="T:System.Byte" /> contenente il corpo della risposta dalla risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.UploadValues%2A> metodo invia un <xref:System.Collections.Specialized.NameValueCollection> a un server. Questo metodo si blocca durante il caricamento dei dati. Per continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadValuesAsync%2A> metodi.  
  
 Se la richiesta sottostante non viene accettata dal server, le classi del protocollo sottostante determinano ciò che accade. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Se l'intestazione Content-type `null`, il <xref:System.Net.WebClient.UploadValues%2A> metodo lo imposta su "application/x-www-form-urlencoded".  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="data" /> è <see langword="null" />.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
L'intestazione <see langword="Content-type" /> non è <see langword="null" /> o "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As String, method As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(System::String ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : string * string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere l'insieme.</param>
        <param name="method">Il metodo HTTP utilizzato per inviare il file alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">L'oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> da inviare alla risorsa.</param>
        <summary>Carica l'insieme nome/valore specificato nella risorsa identificata dall'URI specificato utilizzando il metodo specificato.</summary>
        <returns>Matrice <see cref="T:System.Byte" /> contenente il corpo della risposta dalla risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.UploadValues%2A> metodo invia una <xref:System.Collections.Specialized.NameValueCollection> a una risorsa tramite il metodo specificato nel `method` parametro e restituisce una risposta dal server. Questo metodo si blocca durante il caricamento dei dati. Per continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadValuesAsync%2A> metodi.  
  
 Se il `Content-type` intestazione viene `null`, il <xref:System.Net.WebClient.UploadValues%2A> metodo lo imposta su `application/x-www-form-urlencoded`.  
  
 Se il `method` parametro specifica un verbo che non è accettato dal server, le classi del protocollo sottostante è determineranno il risultato. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Il codice seguente consente di raccogliere informazioni da parte dell'utente (nome, età e indirizzo) e invia i valori al server usando <xref:System.Net.WebClient.UploadValues%2A>. Ogni risposta dal server viene visualizzata nella console.  
  
 [!code-cpp[WebClient_UploadValues2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues2/CPP/webclient_uploadvalues2.cpp#1)]
 [!code-csharp[WebClient_UploadValues2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues2/CS/webclient_uploadvalues2.cs#1)]
 [!code-vb[WebClient_UploadValues2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues2/VB/webclient_uploadvalues2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="data" /> è <see langword="null" />.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
Il valore dell'intestazione <see langword="Content-type" /> non è <see langword="null" /> e non è <see langword="application/x-www-form-urlencoded" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As Uri, method As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere l'insieme.</param>
        <param name="method">Il metodo HTTP utilizzato per inviare il file alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">L'oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> da inviare alla risorsa.</param>
        <summary>Carica l'insieme nome/valore specificato nella risorsa identificata dall'URI specificato utilizzando il metodo specificato.</summary>
        <returns>Matrice <see cref="T:System.Byte" /> contenente il corpo della risposta dalla risorsa.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebClient.UploadValues%2A> metodo invia una <xref:System.Collections.Specialized.NameValueCollection> a una risorsa tramite il metodo specificato nel `method` parametro e restituisce una risposta dal server. Questo metodo si blocca durante il caricamento dei dati. Per continuare l'esecuzione durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadValuesAsync%2A> metodi.  
  
 Se il `Content-type` intestazione viene `null`, il <xref:System.Net.WebClient.UploadValues%2A> metodo lo imposta su `application/x-www-form-urlencoded`.  
  
 Se il `method` parametro specifica un verbo che non è accettato dal server, le classi del protocollo sottostante è determineranno il risultato. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 <paramref name="data" /> è <see langword="null" />.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
Il valore dell'intestazione <see langword="Content-type" /> non è <see langword="null" /> e non è <see langword="application/x-www-form-urlencoded" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValuesAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica l'insieme nome/valore specificato nella risorsa identificata dall'URI specificato. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, data As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="webClient.UploadValuesAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere l'insieme. L'URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo predefinito.</param>
        <param name="data">L'oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> da inviare alla risorsa.</param>
        <summary>Esegue l'upload dei dati nell'insieme nome/valore specificato nella risorsa identificata dall'URI specificato. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo invia una stringa a una risorsa. La stringa viene inviata in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread. Prima di caricare la stringa, questo metodo lo converte in un <xref:System.Byte> matrice usando la codifica specificata nella <xref:System.Net.WebClient.Encoding%2A> proprietà. Per ricevere notifica quando viene completato il caricamento di stringa, è possibile aggiungere un gestore eventi per il <xref:System.Net.WebClient.UploadStringCompleted> evento.  
  
 Questo metodo non blocca il thread chiamante durante l'invio della stringa. Per inviare una stringa e un blocco durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadString%2A> metodi.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, method As String, data As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="webClient.UploadValuesAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere l'insieme. Questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo <c>method</c>.</param>
        <param name="method">Il metodo utilizzato per inviare la stringa alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">L'oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> da inviare alla risorsa.</param>
        <summary>Carica i dati nell'insieme nome/valore specificato nella risorsa identificata dall'URI specificato utilizzando il metodo specificato. Questo metodo non blocca il thread chiamante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo invia i dati contenuti in un <xref:System.Collections.Specialized.NameValueCollection> per il `address` risorsa. Usare questo metodo per inviare i dati del modulo a un URI per l'elaborazione. I dati vengono inviati utilizzando il tipo di supporto di form-urlencoded; il valore dell'intestazione Content-Type deve essere impostato su "application/x-www-form-urlencoded". L'intestazione è impostata correttamente per impostazione predefinita. Il <xref:System.Net.WebClient.UploadValuesAsync%2A> metodi generano un' <xref:System.Net.WebException> se si chiama questo metodo con un diverso set di valore dell'intestazione Content-Type nel <xref:System.Net.WebClient.Headers%2A> raccolta.  
  
 Se il `method` (metodo) non è accettato dal server, le classi del protocollo sottostante è determineranno il risultato. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Il <xref:System.Collections.Specialized.NameValueCollection> viene inviato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread. Per ricevere notifica al termine dell'operazione di caricamento, aggiungere un gestore eventi per il <xref:System.Net.WebClient.UploadValuesCompleted> evento.  
  
 Questo metodo non blocca il thread chiamante durante l'invio della stringa. Per inviare una stringa e un blocco durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadValues%2A> metodi.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
 Non è possibile utilizzare <paramref name="method" /> per inviare contenuto.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, method As String, data As NameValueCollection, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * string * System.Collections.Specialized.NameValueCollection * obj -&gt; unit" Usage="webClient.UploadValuesAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere l'insieme. Questo URI deve identificare una risorsa che può accettare una richiesta inviata con il metodo <c>method</c>.</param>
        <param name="method">Il metodo HTTP utilizzato per inviare la stringa alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">L'oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> da inviare alla risorsa.</param>
        <param name="userToken">Oggetto definito dall'utente passato al metodo richiamato al completamento dell'operazione asincrona.</param>
        <summary>Carica i dati nell'insieme nome/valore specificato nella risorsa identificata dall'URI specificato utilizzando il metodo specificato. Questo metodo non blocca il thread chiamante e consente al chiamante di passare un oggetto al metodo richiamato al completamento dell'operazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo invia i dati contenuti in un <xref:System.Collections.Specialized.NameValueCollection> per il `address` risorsa. Usare questo metodo per inviare i dati del modulo a un URI per l'elaborazione. I dati vengono inviati utilizzando il tipo di supporto di form-urlencoded; il valore dell'intestazione Content-Type deve essere impostato su "application/x-www-form-urlencoded". L'intestazione è impostata correttamente per impostazione predefinita. Il <xref:System.Net.WebClient.UploadValuesAsync%2A> metodi generano un' <xref:System.Net.WebException> se si chiama questo metodo con un diverso set di valore dell'intestazione Content-Type nel <xref:System.Net.WebClient.Headers%2A> raccolta.  
  
 Se il `method` (metodo) non è accettato dal server, le classi del protocollo sottostante è determineranno il risultato. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Il <xref:System.Collections.Specialized.NameValueCollection> viene inviato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread. Per ricevere notifica al termine dell'operazione di caricamento, aggiungere un gestore eventi per il <xref:System.Net.WebClient.UploadValuesCompleted> evento.  
  
 Questo metodo non blocca il thread chiamante durante l'invio della stringa. Per inviare una stringa e un blocco durante l'attesa di risposta del server, usare uno del <xref:System.Net.WebClient.UploadValues%2A> metodi.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è vuota, questo viene aggiunto a `address`.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI ottenuto combinando <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
 Non è possibile utilizzare <paramref name="method" /> per inviare contenuto.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadValuesCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadValuesCompleted As UploadValuesCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadValuesCompletedEventHandler ^ UploadValuesCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadValuesCompleted : System.Net.UploadValuesCompletedEventHandler " Usage="member this.UploadValuesCompleted : System.Net.UploadValuesCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadValuesCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica al completamento dell'upload asincrono di un insieme nome/valore.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato ogni volta che un'operazione di caricamento asincrono di un <xref:System.Collections.Specialized.NameValueCollection> completa dei dati dell'oggetto. I caricamenti vengono avviati chiamando il <xref:System.Net.WebClient.UploadValuesAsync%2A> metodi.  
  
 Il <xref:System.Net.UploadValuesCompletedEventHandler> è il delegato per questo evento. Il <xref:System.Net.UploadValuesCompletedEventArgs> classe fornisce il gestore eventi con i dati dell'evento.  
  
 Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValuesTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Carica la raccolta di nomi/valori specificata nella risorsa identificata dall'URI specificato come operazione asincrona utilizzando un oggetto attività. Questi metodi non bloccano il thread chiamante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(System::String ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere l'insieme.</param>
        <param name="data">L'oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> da inviare alla risorsa.</param>
        <summary>Carica la raccolta di nomi/valori specificata nella risorsa identificata dall'URI specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> che contiene la risposta inviata dal server.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che l'insieme nome/valore è stato caricato nella risorsa. L'insieme nome/valore viene inviato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se la richiesta sottostante non viene accettata dal server, le classi del protocollo sottostante determinano ciò che accade. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Se l'intestazione Content-type è `null`, questo metodo lo imposta su "application/x-www-form-urlencoded".  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
L'intestazione <see langword="Content-type" /> non è <see langword="null" /> o "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As Uri, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : Uri * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere l'insieme.</param>
        <param name="data">L'oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> da inviare alla risorsa.</param>
        <summary>Carica la raccolta di nomi/valori specificata nella risorsa identificata dall'URI specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> che contiene la risposta inviata dal server.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che l'insieme nome/valore è stato caricato nella risorsa. L'insieme nome/valore viene inviato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se la richiesta sottostante non viene accettata dal server, le classi del protocollo sottostante determinano ciò che accade. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Se l'intestazione Content-type è `null`, questo metodo lo imposta su "application/x-www-form-urlencoded".  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
Il valore dell'intestazione <see langword="Content-type" /> non è <see langword="null" /> e non è <see langword="application/x-www-form-urlencoded" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As String, method As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(System::String ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : string * string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere l'insieme.</param>
        <param name="method">Il metodo HTTP utilizzato per inviare la raccolta alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">L'oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> da inviare alla risorsa.</param>
        <summary>Carica la raccolta di nomi/valori specificata nella risorsa identificata dall'URI specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> che contiene la risposta inviata dal server.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che l'insieme nome/valore è stato caricato nella risorsa. L'insieme nome/valore viene inviato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se la richiesta sottostante non viene accettata dal server, le classi del protocollo sottostante determinano ciò che accade. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Se l'intestazione Content-type è `null`, questo metodo lo imposta su "application/x-www-form-urlencoded".  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 Non è possibile utilizzare <paramref name="method" /> per inviare contenuto.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
L'intestazione <see langword="Content-type" /> non è <see langword="null" /> o "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As Uri, method As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">L'URI della risorsa per ricevere l'insieme.</param>
        <param name="method">Il metodo HTTP utilizzato per inviare la raccolta alla risorsa. Se il valore è null, l'impostazione predefinita sarà POST per http e STOR per ftp.</param>
        <param name="data">L'oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> da inviare alla risorsa.</param>
        <summary>Carica la raccolta di nomi/valori specificata nella risorsa identificata dall'URI specificato come operazione asincrona utilizzando un oggetto attività.</summary>
        <returns>Restituisce <see cref="T:System.Threading.Tasks.Task`1" />.  
  
Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce una matrice <see cref="T:System.Byte" /> che contiene la risposta inviata dal server.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che l'insieme nome/valore è stato caricato nella risorsa. L'insieme nome/valore viene inviato in modo asincrono utilizzando le risorse del thread allocate automaticamente dal pool di thread.  
  
 Operazioni asincrone che non sono stati completati possono essere annullate utilizzando il <xref:System.Net.WebClient.CancelAsync%2A> (metodo).  
  
 Se la richiesta sottostante non viene accettata dal server, le classi del protocollo sottostante determinano ciò che accade. In genere, un <xref:System.Net.WebException> viene generata un'eccezione con il <xref:System.Net.WebException.Status%2A> proprietà impostata per indicare l'errore.  
  
 Se l'intestazione Content-type è `null`, questo metodo lo imposta su "application/x-www-form-urlencoded".  
  
 Se il <xref:System.Net.WebClient.BaseAddress%2A> proprietà non è una stringa vuota ("") e `address` non contiene un URI assoluto `address` deve essere un URI relativo che viene combinato con <xref:System.Net.WebClient.BaseAddress%2A> in modo da formare l'URI assoluto dei dati richiesti. Se il <xref:System.Net.WebClient.QueryString%2A> proprietà non è una stringa vuota, questo viene aggiunto a `address`.  
  
 Questo metodo Usa il comando STOR per caricare una risorsa di FTP. Per una risorsa HTTP, viene utilizzato il metodo POST.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="address" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="data" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">L'URI composto dalla combinazione di <see cref="P:System.Net.WebClient.BaseAddress" /> e <paramref name="address" /> non è valido.  
  
oppure 
 Non è possibile utilizzare <paramref name="method" /> per inviare contenuto.  
  
oppure 
Nessuna risposta dal server che ospita la risorsa.  
  
oppure 
Si è verificato un errore durante l'apertura del flusso.  
  
oppure 
L'intestazione <see langword="Content-type" /> non è <see langword="null" /> o "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.WebClient.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che controlla se insieme alle richieste viene inviata la proprietà <see cref="P:System.Net.CredentialCache.DefaultCredentials" />.</summary>
        <value>
          <see langword="true" /> se vengono usate le credenziali predefinite; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare questa proprietà su `true` quando le richieste effettuate da questa <xref:System.Net.WebClient> oggetto deve, se richiesto dal server, essere autenticato utilizzando le credenziali predefinite dell'utente attualmente connesso. Per le applicazioni client, questo è il comportamento desiderato nella maggior parte degli scenari. Per le applicazioni di livello intermedio, ad esempio le applicazioni ASP.NET, invece di usare questa proprietà, in genere è necessario impostare il <xref:System.Net.WebClient.Credentials%2A> proprietà alle credenziali del client per il quale viene effettuata la richiesta.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'impostazione di questa proprietà.  
  
 [!code-cpp[NCLWebClientAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#3)]
 [!code-csharp[NCLWebClientAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#3)]
 [!code-vb[NCLWebClientAsync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStreamClosed">
      <MemberSignature Language="C#" Value="public event System.Net.WriteStreamClosedEventHandler WriteStreamClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.WriteStreamClosedEventHandler WriteStreamClosed" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.WriteStreamClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WriteStreamClosed As WriteStreamClosedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::WriteStreamClosedEventHandler ^ WriteStreamClosed;" />
      <MemberSignature Language="F#" Value="member this.WriteStreamClosed : System.Net.WriteStreamClosedEventHandler " Usage="member this.WriteStreamClosed : System.Net.WriteStreamClosedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WriteStreamClosedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica alla chiusura di un'operazione asincrona di scrittura di dati in una risorsa utilizzando un flusso di scrittura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo evento viene generato ogni volta che un'operazione asincrona utilizzata per scrivere dati in una risorsa con un flusso di scrittura viene chiuso. Queste operazioni risultanti dal chiamate al <xref:System.Net.WebClient.OpenWriteTaskAsync%2A> metodi.  
  
 Il <xref:System.Net.WriteStreamClosedEventHandler> è il delegato per questo evento. Il <xref:System.Net.WriteStreamClosedEventArgs> classe fornisce il gestore eventi con i dati dell'evento.  
  
 Per altre informazioni su come gestire gli eventi, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>