<Type Name="WebRequest" FullName="System.Net.WebRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b7adbafa75eb510ecc590f90854c11f33013f8d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30470685" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebRequest : MarshalByRefObject, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit WebRequest extends System.MarshalByRefObject implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebRequest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebRequest&#xA;Inherits MarshalByRefObject&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebRequest abstract : MarshalByRefObject, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Esegue una richiesta a un URI (Uniform Resource Identifier). Questa è una classe <see langword="abstract" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest> è la `abstract` classe di base. Modello di richiesta/risposta della rete per l'accesso ai dati da Internet. Un'applicazione che utilizza il modello di richiesta/risposta può richiedere dati da Internet in modo indipendente dal protocollo, in cui l'applicazione funziona con le istanze del <xref:System.Net.WebRequest> classe mentre le classi derivate specifiche del protocollo eseguono i dettagli di la richiesta.  
  
 Le richieste vengono inviate da un'applicazione a un particolare URI, ad esempio una pagina Web in un server. L'URI determina la classe discendente appropriata per creare un elenco dei <xref:System.Net.WebRequest> discendenti registrate per l'applicazione. <xref:System.Net.WebRequest> i discendenti vengono in genere registrati per gestire un protocollo specifico, ad esempio HTTP o FTP, ma possono essere registrati per gestire una richiesta di un server specifico o un percorso in un server.  
  
 Il <xref:System.Net.WebRequest> classe genera un <xref:System.Net.WebException> quando si verificano errori durante l'accesso a una risorsa Internet. Il <xref:System.Net.WebException.Status%2A> proprietà è una del <xref:System.Net.WebExceptionStatus> valori che indica l'origine dell'errore. Quando <xref:System.Net.WebException.Status%2A> è <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>, <xref:System.Net.WebException.Response%2A> proprietà contiene il <xref:System.Net.WebResponse> ricevuti dalla risorsa Internet.  
  
 Poiché il <xref:System.Net.WebRequest> classe è un `abstract` classe, il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita da <xref:System.Net.WebRequest.Create%2A> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Utilizzare il <xref:System.Net.WebRequest.Create%2A> metodo per inizializzare nuovi <xref:System.Net.WebRequest> istanze. Non utilizzare il <xref:System.Net.WebRequest> costruttore.  
  
> [!NOTE]
>  Se l'applicazione che crea l'oggetto WebRequest viene eseguito con le credenziali di un utente normale, l'applicazione non sarà in grado di accedere ai certificati installati nell'archivio del computer locale, a meno che l'autorizzazione è stata assegnata in modo esplicito all'utente a tale scopo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un <xref:System.Net.WebRequest> istanza e restituire la risposta.  
  
 [!code-cpp[NclWebRequestSimple#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#1)]
 [!code-csharp[NclWebRequestSimple#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#1)]
 [!code-vb[NclWebRequestSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">Per accedere all'URI richiesto o qualsiasi URI a cui viene reindirizzata la richiesta. Enumerazione associata: <see cref="F:System.Net.NetworkAccess.Connect" />.</permission>
    <block subset="none" type="overrides">
      <para>Quando si eredita da <see cref="T:System.Net.WebRequest" />, è necessario eseguire l'override dei seguenti membri: <see cref="P:System.Net.WebRequest.Method" />, <see cref="P:System.Net.WebRequest.RequestUri" />, <see cref="P:System.Net.WebRequest.Headers" />, <see cref="P:System.Net.WebRequest.ContentLength" />, <see cref="P:System.Net.WebRequest.ContentType" />, <see cref="P:System.Net.WebRequest.Credentials" />, <see cref="P:System.Net.WebRequest.PreAuthenticate" />, <see cref="M:System.Net.WebRequest.GetRequestStream" />, <see cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" /> , <see cref="M:System.Net.WebRequest.GetResponse" />, <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />, e <see cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />. Inoltre, è necessario fornire un'implementazione del <see cref="T:System.Net.IWebRequestCreate" /> interfaccia che definisce il <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> metodo utilizzato quando si chiama <see cref="M:System.Net.WebRequest.Create(System.Uri)" />. È necessario registrare la classe che implementa il <see cref="T:System.Net.IWebRequestCreate" /> interfaccia, utilizzando il <see cref="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" /> metodo o il file di configurazione.</para>
    </block>
    <altmember cref="T:System.Net.HttpWebRequest" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.WebRequest" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.WebRequest" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Net.WebRequest.Create%2A> metodo per inizializzare nuovi <xref:System.Net.WebRequest> istanze. Non utilizzare il costruttore.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un <xref:System.Net.WebRequest> istanza chiamando il <xref:System.Net.WebRequest.Create%2A> metodo la <xref:System.Net.WebRequest> classe.  
  
 [!code-cpp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CS/source.cs#1)]
 [!code-vb[Classic WebRequest.WebRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare la nuova istanza di <see cref="T:System.Net.WebRequest" />.</param>
        <param name="streamingContext">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che indica l'origine del flusso serializzato associato alla nuova istanza di <see cref="T:System.Net.WebRequest" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.WebRequest" /> dalle istanze specificate delle classi <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene implementato da una classe discendente, questo costruttore implementa il <xref:System.Runtime.Serialization.ISerializable> interfaccia per il <xref:System.Net.WebRequest> discendenti.  
  
 Si noti che un'applicazione deve essere eseguita in modalità di attendibilità quando si usa la serializzazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo di accedere al costruttore quando quest'ultimo non è sottoposto a override in una classe discendente.</exception>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public virtual void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interrompe la richiesta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.Abort%2A> metodo annulla le richieste asincrone alle risorse Internet avviate con il <xref:System.Net.WebRequest.BeginGetResponse%2A> metodo.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo di accedere al metodo quando quest'ultimo non è sottoposto a override in una classe discendente.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.AuthenticationLevel AuthenticationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.AuthenticationLevel AuthenticationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.AuthenticationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationLevel As AuthenticationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::AuthenticationLevel AuthenticationLevel { System::Net::Security::AuthenticationLevel get(); void set(System::Net::Security::AuthenticationLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.AuthenticationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta i valori che indicano il livello di autenticazione e di rappresentazione usati per la richiesta.</summary>
        <value>Combinazione bit per bit dei valori di <see cref="T:System.Net.Security.AuthenticationLevel" />. Il valore predefinito è <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />.  
  
 Nell'autenticazione reciproca il client e il server presentano entrambi credenziali per definire la propria identità. I valori <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> e <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> sono rilevanti per l'autenticazione Kerberos. L'autenticazione Kerberos può essere supportata direttamente oppure può essere usata se per selezionare il protocollo di sicurezza effettivo viene impiegato il protocollo di sicurezza Negotiate. Per ulteriori informazioni sui protocolli di autenticazione, vedere [l'autenticazione Internet](http://msdn.microsoft.com/library/d342e87c-f672-4660-a513-41a2f2b80c4a).  
  
 Per determinare se è stata effettuata l'autenticazione reciproca, verificare la proprietà <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" />.  
  
 Se si specifica il valore del flag di autenticazione <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> e non si verifica l'autenticazione reciproca, l'applicazione riceverà un'eccezione <see cref="T:System.IO.IOException" /> con un'eccezione interna <see cref="T:System.Net.ProtocolViolationException" /> che indica che l'autenticazione reciproca non è riuscita.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente imposta il valore di questa proprietà.  
  
 [!code-cpp[NclCredPolicy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#1)]
 [!code-csharp[NclCredPolicy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
        <param name="state">Oggetto contenente le informazioni di stato per la richiesta asincrona.</param>
        <summary>Quando ne viene eseguito l'override in una classe discendente, fornisce una versione asincrona del metodo <see cref="M:System.Net.WebRequest.GetRequestStream" />.</summary>
        <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla richiesta asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.BeginGetRequestStream%2A> metodo avvia una richiesta asincrona di un flusso usato per inviare dati a una risorsa Internet. Il metodo di callback che implementa il <xref:System.AsyncCallback> delegato utilizza il <xref:System.Net.WebRequest.EndGetRequestStream%2A> per restituire il flusso di richiesta.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Net.WebRequest.BeginGetRequestStream%2A> per ottenere in modo asincrono il flusso di richiesta.  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo di accedere al metodo quando quest'ultimo non è sottoposto a override in una classe discendente.</exception>
        <altmember cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Delegato <see cref="T:System.AsyncCallback" />.</param>
        <param name="state">Oggetto contenente le informazioni di stato per la richiesta asincrona.</param>
        <summary>Quando ne viene eseguito l'override in una classe discendente, avvia una richiesta asincrona per una risorsa Internet.</summary>
        <returns>Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento alla richiesta asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.BeginGetResponse%2A> metodo avvia una richiesta asincrona di una risposta. Il metodo di callback che implementa il <xref:System.AsyncCallback> delegato utilizza il <xref:System.Net.WebRequest.EndGetResponse%2A> per restituire il <xref:System.Net.WebResponse> dalla risorsa Internet.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Se viene generata un'eccezione WebException, utilizzare il <xref:System.Net.WebException.Response%2A> e <xref:System.Net.WebException.Status%2A> le proprietà dell'eccezione per determinare la risposta dal server.  
  
   
  
## Examples  
 L'esempio seguente usa <xref:System.Net.WebRequest.BeginGetResponse%2A> per richiedere in modo asincrono la risorsa di destinazione. Quando la risorsa è stata ottenuta, verrà eseguito il metodo di callback specificato.  
  
 [!code-cpp[WebRequest_BeginGetResponse#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#2)]
 [!code-csharp[WebRequest_BeginGetResponse#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#2)]
 [!code-vb[WebRequest_BeginGetResponse#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo di accedere al metodo quando quest'ultimo non è sottoposto a override in una classe discendente.</exception>
        <altmember cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
        <altmember cref="M:System.Net.WebRequest.GetResponse" />
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public virtual System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta i criteri della cache per la richiesta.</summary>
        <value>Oggetto <see cref="T:System.Net.Cache.RequestCachePolicy" /> che definisce i criteri della cache.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I criteri della cache corrente e la presenza della risorsa richiesta nella cache di determinare se una risposta può essere recuperata dalla cache. Utilizzando in genere risposte memorizzate nella cache migliora le prestazioni dell'applicazione, ma è possibile che la risposta nella cache non corrisponde alla risposta del server.  
  
 Criteri predefiniti della cache possono essere specificato nel file di configurazione Machine. config o impostando la <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> proprietà per le richieste che utilizzano lo schema URI di protocollo HTTP (Hypertext Transfer) o Secure Hypertext Transfer Protocol (HTTPS).  
  
 Una copia di una risorsa viene aggiunta solo alla cache se il flusso di risposta per la risorsa viene recuperato e leggere fino alla fine del flusso. Un'altra richiesta per la stessa risorsa potrebbe usare una copia memorizzata nella cache, a seconda del livello di criteri di cache per la richiesta.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'impostazione di criteri di cache per una richiesta Web.  
  
 [!code-cpp[NCLSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]
 [!code-csharp[NCLSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.DefaultCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public virtual string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe discendente, ottiene o imposta il nome del gruppo di connessione usato per la richiesta.</summary>
        <value>Nome del gruppo di connessione per la richiesta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.ConnectionGroupName%2A> proprietà associa richieste specifiche all'interno di un'applicazione a uno o più pool di connessioni.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo per ottenere o impostare la proprietà quando quest'ultima non è sottoposta a override in una classe discendente.</exception>
        <block subset="none" type="overrides">
          <para>Il <see cref="P:System.Net.WebRequest.ConnectionGroupName" /> proprietà associa in genere un gruppo di richieste che condividono un insieme di credenziali con una connessione a una risorsa Internet per evitare potenziali errori di sicurezza.</para>
        </block>
        <altmember cref="P:System.Net.Configuration.ConnectionManagementElement.MaxConnection" />
        <altmember cref="P:System.Net.HttpWebRequest.ConnectionGroupName" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public virtual long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe discendente, ottiene o imposta la lunghezza dei dati inviati per la richiesta.</summary>
        <value>Numero di byte di dati della richiesta inviata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.ContentLength%2A> proprietà contiene il numero di byte di dati inviati alla risorsa Internet da parte di <xref:System.Net.WebRequest> istanza.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L'esempio seguente imposta la <xref:System.Net.WebRequest.ContentLength%2A> proprietà per la quantità di byte nel buffer di byte in uscita.  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo per ottenere o impostare la proprietà quando quest'ultima non è sottoposta a override in una classe discendente.</exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public virtual string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe discendente, ottiene o imposta il tipo di contenuto dei dati inviati per la richiesta.</summary>
        <value>Tipo di contenuto dei dati della richiesta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.ContentType%2A> proprietà contiene il tipo di supporto della richiesta. Si tratta in genere MIME codifica del contenuto.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L'esempio seguente imposta la <xref:System.Net.WebRequest.ContentType%2A> proprietà al tipo di supporto appropriato.  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo per ottenere o impostare la proprietà quando quest'ultima non è sottoposta a override in una classe discendente.</exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza un nuovo oggetto <see cref="T:System.Net.WebRequest" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUriString As String) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(System::String ^ requestUriString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUriString">URI che identifica la risorsa Internet.</param>
        <summary>Inizializza una nuova istanza di <see cref="T:System.Net.WebRequest" /> per lo schema URI specificato.</summary>
        <returns>Oggetto <see cref="T:System.Net.WebRequest" /> discendente per lo schema URI specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.Create%2A> il metodo restituisce un discendente del <xref:System.Net.WebRequest> classe determinato in fase di esecuzione come la corrispondenza più vicina registrata per `requestUri`.  
  
 Ad esempio, quando un URI che comincia con `http://` o `https://` viene passato `requestUri`, un <xref:System.Net.HttpWebRequest> restituito da <xref:System.Net.WebRequest.Create%2A>. Se un URI che comincia con `ftp://` , invece, viene passato il <xref:System.Net.WebRequest.Create%2A> metodo restituirà un <xref:System.Net.FtpWebRequest> istanza. Se un URI che comincia con `file://` , invece, viene passato il <xref:System.Net.WebRequest.Create%2A> metodo restituirà un <xref:System.Net.FileWebRequest> istanza.  
  
 Di seguito sono indicati i tipi di riserva pre-registrati già registrati:  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 Include il supporto per .NET di `http://`, `https://`, `ftp://`, e `file://` schemi URI. Custom <xref:System.Net.WebRequest> discendenti per gestire le altre richieste sono registrati con il <xref:System.Net.WebRequest.RegisterPrefix%2A> metodo.  
  
 Il <xref:System.Net.WebRequest.Create%2A> metodo utilizza il `requestUriString` parametro per creare un <xref:System.Uri> istanza che passa al nuovo <xref:System.Net.WebRequest>.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [ &#91; \<topic://conUsingNetworkTracing >&#93;](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804).  
  
   
  
## Examples  
 L'esempio seguente usa <xref:System.Net.WebRequest.Create%2A> per creare un'istanza di un <xref:System.Net.HttpWebRequest> istanza. Una stringa che rappresenta l'URL di destinazione viene utilizzata come parametro del costruttore.  
  
 [!code-cpp[WebResponse_ResponseUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebResponse_ResponseUri/CPP/webresponse_responseuri.cpp#1)]
 [!code-csharp[WebResponse_ResponseUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebResponse_ResponseUri/CS/webresponse_responseuri.cs#1)]
 [!code-vb[WebResponse_ResponseUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebResponse_ResponseUri/VB/webresponse_responseuri.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Lo schema di richiesta specificato in <paramref name="requestUriString" /> non è stato registrato.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestUriString" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione per connettersi all'URI richiesto o a un URI a cui viene reindirizzata la richiesta.</exception>
        <exception cref="T:System.UriFormatException">
          <block subset="none" type="note">
            <para>  
 In [.NET per app di Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) o nella [libreria di classi portabile](http://msdn.microsoft.com/library/c31e1663-c164-4e65-b66d-d3aa8750a154) rilevare invece l'eccezione della classe di base, <see cref="T:System.FormatException" />.  
  
</para>
          </block>  
  
 L'URI specificato in <paramref name="requestUriString" /> non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">Oggetto <see cref="T:System.Uri" /> contenente l'URI della risorsa richiesta.</param>
        <summary>Inizializza una nuova istanza di <see cref="T:System.Net.WebRequest" /> per lo schema URI specificato.</summary>
        <returns>Oggetto <see cref="T:System.Net.WebRequest" /> discendente per lo schema URI specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.Create%2A> il metodo restituisce un discendente del <xref:System.Net.WebRequest> classe determinato in fase di esecuzione come la corrispondenza più vicina registrata per `requestUri`.  
  
 Ad esempio, se si crea un <xref:System.Net.WebRequest> discendente Handler1 per gestire le richieste a `http://www.contoso.com/text/` e un altro denominato Handler2 per gestire le richieste a `http://www.contoso.com/code/`, è possibile utilizzare <xref:System.Net.WebRequest.Create%2A> per restituire il discendente WebRequest associato a uno URI specificato.  
  
 Per restituire un discendente del <xref:System.Net.WebRequest> classe basata su solo la parte dello schema di un URI, utilizzare il <xref:System.Net.WebRequest.CreateDefault%2A> metodo.  
  
 Ad esempio, quando un URI che comincia con `http://` o `https://` viene passato `requestUri`, un <xref:System.Net.HttpWebRequest> restituito da <xref:System.Net.WebRequest.Create%2A>. Se un URI che comincia con `ftp://` , invece, viene passato il <xref:System.Net.WebRequest.Create%2A> metodo restituirà un <xref:System.Net.FileWebRequest> istanza. Se un URI che comincia con `file://` , invece, viene passato il <xref:System.Net.WebRequest.Create%2A> metodo restituirà un <xref:System.Net.FileWebRequest> istanza.  
  
 Di seguito sono indicati i tipi di riserva pre-registrati già registrati:  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 Include il supporto per .NET di `http://`, `https://`, `ftp://`, e `file://` schemi URI. Custom <xref:System.Net.WebRequest> discendenti per gestire le altre richieste sono registrati con il <xref:System.Net.WebRequest.RegisterPrefix%2A> metodo.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [ &#91; \<topic://conUsingNetworkTracing >&#93;](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804).  
  
   
  
## Examples  
 L'esempio seguente usa <xref:System.Net.WebRequest.Create%2A> per creare un'istanza di un <xref:System.Net.HttpWebRequest> istanza. Un Uri che rappresenta l'URL di destinazione viene utilizzato come parametro del costruttore.  
  
 [!code-cpp[WebRequest_Create#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Create/CPP/webrequest_create.cpp#1)]
 [!code-csharp[WebRequest_Create#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Create/CS/webrequest_create.cs#1)]
 [!code-vb[WebRequest_Create#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Create/VB/webrequest_create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Lo schema di richiesta specificato in <paramref name="requestUri" /> non è stato registrato.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestUri" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione per connettersi all'URI richiesto o a un URI a cui viene reindirizzata la richiesta.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest CreateDefault (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest CreateDefault(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateDefault(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefault (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ CreateDefault(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">Oggetto <see cref="T:System.Uri" /> contenente l'URI della risorsa richiesta.</param>
        <summary>Inizializza una nuova istanza di <see cref="T:System.Net.WebRequest" /> per lo schema URI specificato.</summary>
        <returns>Oggetto <see cref="T:System.Net.WebRequest" /> discendente per lo schema URI specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.CreateDefault%2A> metodo restituisce un <xref:System.Net.WebRequest> istanza discendente in base solo la parte dello schema di un URI.  
  
 Ad esempio, quando un URI che comincia con `http://` viene passato `requestUri`, un <xref:System.Net.HttpWebRequest> restituito da <xref:System.Net.WebRequest.CreateDefault%2A>. Se un URI che comincia con `file://` , invece, viene passato il <xref:System.Net.WebRequest.CreateDefault%2A> metodo restituirà un <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per ulteriori informazioni, vedere [traccia di rete in .NET](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Lo schema di richiesta specificato in <paramref name="requestUri" /> non è stato registrato.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestUri" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione per connettersi all'URI richiesto o a un URI a cui viene reindirizzata la richiesta.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateHttp">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza di <see cref="T:System.Net.HttpWebRequest" /> per l'URI specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUriString As String) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(System::String ^ requestUriString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUriString">Stringa URI che identifica la risorsa Internet.</param>
        <summary>Inizializza una nuova istanza di <see cref="T:System.Net.HttpWebRequest" /> per la stinga URI specificata.</summary>
        <returns>Istanza di <see cref="T:System.Net.HttpWebRequest" /> per la stringa URI specifica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.CreateHttp%28System.String%29> il metodo restituisce un'istanza del <xref:System.Net.HttpWebRequest> classe per il `requestUriString`.  
  
 Quando un URI che inizia con `http://` o `http://` viene passato il `requestUriString` parametro, un <xref:System.Net.HttpWebRequest> restituito da <xref:System.Net.WebRequest.CreateHttp%28System.String%29>. Un altro altro schema genererà un <xref:System.NotSupportedException>.  
  
 Il <xref:System.Net.WebRequest.CreateHttp%28System.String%29> metodo utilizza il `requestUriString` parametro per creare un <xref:System.Uri> istanza che passa al nuovo <xref:System.Net.HttpWebRequest>. Se il metodo ha esito positivo, il <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> proprietà sull'oggetto restituito <xref:System.Net.HttpWebRequest> istanza è impostata su `false`.  
  
 Include il supporto per .NET di `http://` e `https://` schemi URI. Custom <xref:System.Net.WebRequest> discendenti per gestire le altre richieste sono registrati con il <xref:System.Net.WebRequest.RegisterPrefix%2A> metodo. Il <xref:System.Net.WebRequest.Create%28System.String%29> metodo può essere utilizzato per creare un discendente della <xref:System.Net.WebRequest> classe per altri schemi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Lo schema di richiesta specificato in <paramref name="requestUriString" /> è lo schema https o http.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestUriString" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione per connettersi all'URI richiesto o a un URI a cui viene reindirizzata la richiesta.</exception>
        <exception cref="T:System.UriFormatException">L'URI specificato in <paramref name="requestUriString" /> non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUri As Uri) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">URI che identifica la risorsa Internet.</param>
        <summary>Inizializza una nuova istanza di <see cref="T:System.Net.HttpWebRequest" /> per l'URI specificato.</summary>
        <returns>Istanza di <see cref="T:System.Net.HttpWebRequest" /> per la stringa URI specifica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> il metodo restituisce un'istanza del <xref:System.Net.HttpWebRequest> classe per il `requestUri`.  
  
 Quando un URI che inizia con `http://` o `http://` viene passato il `requestUri` parametro, un <xref:System.Net.HttpWebRequest> restituito da <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29>. Un altro altro schema genererà un <xref:System.NotSupportedException>.  
  
 Il <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> metodo utilizza il `requestUri` parametro per creare un nuovo <xref:System.Net.HttpWebRequest> istanza. Se il metodo ha esito positivo, il <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> proprietà sull'oggetto restituito <xref:System.Net.HttpWebRequest> istanza è impostata su `false`.  
  
 Include il supporto per .NET di `http://` e `https://` schemi URI. Custom <xref:System.Net.WebRequest> discendenti per gestire le altre richieste sono registrati con il <xref:System.Net.WebRequest.RegisterPrefix%2A> metodo. Il <xref:System.Net.WebRequest.Create%28System.Uri%29> metodo può essere utilizzato per creare un discendente della <xref:System.Net.WebRequest> classe per altri schemi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Lo schema di richiesta specificato in <paramref name="requestUri" /> è lo schema https o http.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestUri" /> è <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione per connettersi all'URI richiesto o a un URI a cui viene reindirizzata la richiesta.</exception>
        <exception cref="T:System.UriFormatException">L'URI specificato in <paramref name="requestUri" /> non è valido.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreatorInstance">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebRequestCreate CreatorInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebRequestCreate CreatorInstance" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CreatorInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CreatorInstance As IWebRequestCreate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebRequestCreate ^ CreatorInstance { System::Net::IWebRequestCreate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebRequestCreate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe discendente, ottiene l'oggetto factory derivato dalla classe <see cref="T:System.Net.IWebRequestCreate" /> usato per creare l'oggetto <see cref="T:System.Net.WebRequest" /> di cui è stata creata un'istanza per effettuare la richiesta all'URI specificato.</summary>
        <value>Tipo <see cref="T:System.Net.WebRequest" /> derivato restituito dal metodo <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Questa proprietà consente a un'applicazione determinare quale <xref:System.Net.IWebRequestCreate> oggetto factory derivato è stato utilizzato per creare la richiesta. Questo oggetto può essere [System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) o [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)), ma può anche essere un'istanza personalizzata derivata da <xref:System.Net.IWebRequestCreate>. In questo modo un'applicazione determinare se l'hosting di browser [!INCLUDE[silverlight](~/includes/silverlight-md.md)], [!INCLUDE[silverlight](~/includes/silverlight-md.md)] client o un oggetto personalizzato gestisce le richieste HTTP e le risposte per la <xref:System.Net.WebRequest> istanza. Il <xref:System.Net.WebRequest.RegisterPrefix%2A> metodo consente a un'applicazione configurare che derivato <xref:System.Net.WebRequest> tipo verrà creata un'istanza quando si effettua una richiesta a un URI specifico. <xref:System.Net.WebRequest> gli autori sono in genere registrati per gestire un protocollo specifico, quale HTTP o HTTPS, ma possono essere registrati per gestire una richiesta di un server specifico o un percorso in un server. Ciò è utile quando più derivato <xref:System.Net.WebRequest> tipo possa elaborare le richieste per lo stesso protocollo. Il [!INCLUDE[sil3_first](~/includes/sil3-first-md.md)] e fase di esecuzione successive supporta più i gestori HTTP ognuno dei quali dispone di diverse funzionalità. Ad esempio, è possibile richiedere un servizio web che utilizza Representational State Transfer (REST) di [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)) gestore durante un servizio web SOAP potrebbe essere in grado di utilizzare il valore predefinito [ System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) gestore.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public virtual System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe discendente, ottiene o imposta le credenziali di rete usate per l'autenticazione della richiesta con la risorsa Internet.</summary>
        <value>Oggetto <see cref="T:System.Net.ICredentials" /> che contiene le credenziali di autenticazione associate alla richiesta. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.Credentials%2A> proprietà contiene le credenziali di autenticazione necessarie per accedere alla risorsa Internet.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L'esempio seguente imposta la <xref:System.Net.WebRequest.Credentials%2A> proprietà utilizzando le credenziali predefinite dell'utente corrente. Quando viene effettuata la richiesta, vengono utilizzate credenziali archiviate in questa proprietà per convalidare il client. Questo comportamento è identico all'impostazione di <xref:System.Net.WebRequest.UseDefaultCredentials%2A> proprietà `true`.  
  
 [!code-cpp[NclWebRequestSimple#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#2)]
 [!code-csharp[NclWebRequestSimple#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#2)]
 [!code-vb[NclWebRequestSimple#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo per ottenere o impostare la proprietà quando quest'ultima non è sottoposta a override in una classe discendente.</exception>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.HttpWebRequest.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta i criteri predefiniti della cache per la richiesta.</summary>
        <value>Oggetto <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> che specifica i criteri della cache attivi per questa richiesta quando non è possibile applicare altri criteri.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo criterio viene utilizzato per la richiesta se sussistono le condizioni seguenti:  
  
-   Non esiste alcun <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> proprietà specificata per la richiesta.  
  
-   La configurazione di computer e di applicazione i file non si specificano un criterio di cache che è applicabile per l'identificatore URI (Uniform Resource) utilizzato per creare questa richiesta.  
  
 I criteri della cache determinano se la risorsa richiesta può essere ottenuta da una cache anziché inviare la richiesta al computer host risorse.  
  
 Una copia di una risorsa viene aggiunta solo alla cache se il flusso di risposta per la risorsa viene recuperato e leggere fino alla fine del flusso. Un'altra richiesta per la stessa risorsa potrebbe usare una copia memorizzata nella cache, a seconda del livello di criteri di cache per la richiesta.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'impostazione di criteri di cache predefiniti per le richieste Web.  
  
 [!code-cpp[NCLSimpleCache#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#15)]
 [!code-csharp[NCLSimpleCache#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">Per l'accesso illimitato alle risorse di rete. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.CachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="DefaultWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy DefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.IWebProxy DefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultWebProxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::IWebProxy ^ DefaultWebProxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il proxy HTTP globale.</summary>
        <value>Oggetto <see cref="T:System.Net.IWebProxy" /> usato da ogni chiamata alle istanze di <see cref="T:System.Net.WebRequest" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.DefaultWebProxy%2A> proprietà ottiene o imposta il proxy globale. Il <xref:System.Net.WebRequest.DefaultWebProxy%2A> proprietà determina il proxy predefinito che tutti i <xref:System.Net.WebRequest> le istanze di se la richiesta supporta i proxy e viene impostato alcun proxy in modo esplicito utilizzando il <xref:System.Net.HttpWebRequest.Proxy%2A> proprietà. I proxy sono attualmente supportati da <xref:System.Net.FtpWebRequest> e <xref:System.Net.HttpWebRequest>.  
  
 Il <xref:System.Net.WebRequest.DefaultWebProxy%2A> proprietà legge le impostazioni del proxy dal file app. config. Se è presente alcun file di configurazione, vengono utilizzate impostazioni di proxy di Internet Explorer (IE) dell'utente corrente.  
  
 Se il <xref:System.Net.WebRequest.DefaultWebProxy%2A> è impostata su null, tutte le successive istanze del <xref:System.Net.WebRequest> classe creata dal <xref:System.Net.WebRequest.Create%2A> o <xref:System.Net.WebRequest.CreateDefault%2A> metodi non dispongono di un proxy.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">Per ottenere o impostare il proxy HTTP globale. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento a una richiesta in sospeso di un flusso.</param>
        <summary>Quando ne viene eseguito l'override in una classe discendente, restituisce un oggetto <see cref="T:System.IO.Stream" /> per la scrittura di dati nella risorsa Internet.</summary>
        <returns>Oggetto <see cref="T:System.IO.Stream" /> in cui scrivere i dati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.EndGetRequestStream%2A> una richiesta di flusso asincrona avviata dal completamento del metodo di <xref:System.Net.WebRequest.BeginGetRequestStream%2A> metodo.  
  
> [!NOTE]
>  Per evitare problemi di temporizzazione con l'operazione di garbage collection, assicurarsi di chiudere il flusso di risposta chiamando il <xref:System.IO.Stream.Close%2A> il flusso restituito dal metodo <xref:System.Net.WebResponse.GetResponseStream%2A> dopo la chiamata <xref:System.Net.WebRequest.EndGetResponse%2A>.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 Nell'esempio seguente ottiene e Usa il flusso di richiesta chiamando il <xref:System.Net.WebRequest.EndGetRequestStream%2A>. Il <xref:System.Net.WebRequest.EndGetRequestStream%2A> la chiamata asincrona al completamento del metodo <xref:System.Net.WebRequest.BeginGetRequestStream%2A>.  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo di accedere al metodo quando quest'ultimo non è sottoposto a override in una classe discendente.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> che fa riferimento a una richiesta in sospeso di una risposta.</param>
        <summary>Quando ne viene eseguito l'override in una classe discendente, restituisce un oggetto <see cref="T:System.Net.WebResponse" />.</summary>
        <returns>Oggetto <see cref="T:System.Net.WebResponse" /> contenente una risposta alla richiesta Internet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.EndGetResponse%2A> metodo completa una richiesta asincrona di una risorsa Internet che è stata avviata con il <xref:System.Net.WebRequest.BeginGetResponse%2A> metodo.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 Nell'esempio seguente viene chiamato il <xref:System.Net.WebRequest.EndGetResponse%2A> per recuperare la risorsa di destinazione.  
  
 [!code-cpp[WebRequest_BeginGetResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#1)]
 [!code-csharp[WebRequest_BeginGetResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#1)]
 [!code-vb[WebRequest_BeginGetResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo di accedere al metodo quando quest'ultimo non è sottoposto a override in una classe discendente.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da popolare con i dati.</param>
        <param name="streamingContext">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che specifica la destinazione per la serializzazione.</param>
        <summary>Popola un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati necessari per serializzare l'oggetto di destinazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutti gli oggetti inclusi nel <xref:System.Runtime.Serialization.SerializationInfo> vengono automaticamente rilevati e serializzati dal formattatore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetRequestStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe discendente, restituisce un oggetto <see cref="T:System.IO.Stream" /> per la scrittura di dati nella risorsa Internet.</summary>
        <returns>Oggetto <see cref="T:System.IO.Stream" /> per la scrittura dei dati nella risorsa Internet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.GetRequestStream%2A> metodo avvia una richiesta per inviare dati alla risorsa Internet e restituisce un <xref:System.IO.Stream> istanza per l'invio di dati alla risorsa Internet.  
  
 Il <xref:System.Net.WebRequest.GetRequestStream%2A> metodo fornisce l'accesso sincrono al <xref:System.IO.Stream>. Per l'accesso asincrono, utilizzare il <xref:System.Net.WebRequest.BeginGetRequestStream%2A> e <xref:System.Net.WebRequest.EndGetRequestStream%2A> metodi.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Net.WebRequest.GetRequestStream%2A> per ottenere un flusso, quindi vengono scritti i dati di flusso.  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo di accedere al metodo quando quest'ultimo non è sottoposto a override in una classe discendente.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetRequestStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetRequestStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetRequestStreamAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe discendente, restituisce un oggetto <see cref="T:System.IO.Stream" /> per la scrittura dei dati nella risorse Internet come operazione asincrona.</summary>
        <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completata quando il <xref:System.IO.Stream> per la scrittura di dati a Internet risorsa sia disponibile.  
  
 Dopo aver chiamato <xref:System.Net.WebRequest.GetRequestStreamAsync%2A>, assicurarsi di chiudere il flusso di richiesta prima di chiamare <xref:System.Net.WebRequest.GetResponseAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ GetResponse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe discendente, restituisce una risposta a una richiesta Internet.</summary>
        <returns>Oggetto <see cref="T:System.Net.WebResponse" /> contenente la risposta alla richiesta Internet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.GetResponse%2A> metodo invia una richiesta a una risorsa Internet e restituisce un <xref:System.Net.WebResponse> istanza. Se la richiesta è stata già avviata da una chiamata a <xref:System.Net.WebRequest.GetRequestStream%2A>, <xref:System.Net.WebRequest.GetResponse%2A> metodo completa la richiesta e restituisce le risposte.  
  
 Il <xref:System.Net.WebRequest.GetResponse%2A> metodo fornisce l'accesso sincrono al <xref:System.Net.WebResponse>. Per l'accesso asincrono, utilizzare il <xref:System.Net.WebRequest.BeginGetResponse%2A> e <xref:System.Net.WebRequest.EndGetResponse%2A> metodi.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Se viene generata un'eccezione WebException, utilizzare il <xref:System.Net.WebException.Response%2A> e <xref:System.Net.WebException.Status%2A> le proprietà dell'eccezione per determinare la risposta dal server.  
  
   
  
## Examples  
 L'esempio seguente imposta la <xref:System.Net.WebRequest.Timeout%2A> proprietà 10000 millisecondi. Se il periodo di timeout scade prima che la risorsa può essere restituita, un <xref:System.Net.WebException> viene generata un'eccezione.  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo di accedere al metodo quando quest'ultimo non è sottoposto a override in una classe discendente.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Net.WebResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetResponseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt; GetResponseAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebResponse&gt; GetResponseAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponseAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponseAsync () As Task(Of WebResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Net::WebResponse ^&gt; ^ GetResponseAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe discendente, restituisce una risposta a una richiesta Internet come operazione asincrona.</summary>
        <returns>Oggetto dell'attività che rappresenta l'operazione asincrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa operazione non verrà bloccata. L'oggetto restituito <xref:System.Threading.Tasks.Task%601> oggetto verrà completato dopo che è disponibile una risposta a una richiesta Internet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy GetSystemWebProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IWebProxy GetSystemWebProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetSystemWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSystemWebProxy () As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IWebProxy ^ GetSystemWebProxy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un proxy configurato con le impostazioni di Internet Explorer dell'utente rappresentato.</summary>
        <returns>Oggetto <see cref="T:System.Net.IWebProxy" /> usato da ogni chiamata alle istanze di <see cref="T:System.Net.WebRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.GetSystemWebProxy%2A> metodo legge le impostazioni proxy di Internet Explorer (IE) dell'utente corrente. Questo processo include le opzioni di inserimento/espulsione automaticamente di rilevare le impostazioni del proxy, utilizzare uno script di configurazione automatica, impostazioni del server proxy manuale e le impostazioni del server proxy manuali avanzate.  
  
 Se l'applicazione rappresenta più utenti, è possibile utilizzare il <xref:System.Net.WebRequest.GetSystemWebProxy%2A> metodo per recuperare un proxy per ogni utente rappresentato.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">Per ottenere o impostare il proxy HTTP globale. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe discendente, ottiene o imposta la raccolta di coppie nome/valore di intestazione associate alla richiesta.</summary>
        <value>Oggetto <see cref="T:System.Net.WebHeaderCollection" /> che contiene le coppie nome/valore di intestazione associate alla richiesta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.Headers%2A> proprietà contiene un <xref:System.Net.WebHeaderCollection> istanza che contiene le informazioni di intestazione da inviare alla risorsa Internet.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L'esempio seguente mostra le coppie nome/valore di intestazione associate alla richiesta.  
  
 [!code-cpp[WebRequest_Headers#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Headers/CPP/webrequest_headers.cpp#1)]
 [!code-csharp[WebRequest_Headers#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Headers/CS/webrequest_headers.cs#1)]
 [!code-vb[WebRequest_Headers#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Headers/VB/webrequest_headers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo per ottenere o impostare la proprietà quando quest'ultima non è sottoposta a override in una classe discendente.</exception>
        <altmember cref="T:System.Net.WebHeaderCollection" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il livello di rappresentazione per la richiesta corrente.</summary>
        <value>Valore <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il livello di rappresentazione determina come il server può utilizzare le credenziali del client.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public virtual string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe discendente, ottiene o imposta il metodo di protocollo da usare nella richiesta.</summary>
        <value>Metodo di protocollo da usare nella richiesta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando sottoposto a override in una classe discendente, il <xref:System.Net.WebRequest.Method%2A> proprietà contiene il metodo di richiesta da usare nella richiesta.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L'esempio seguente imposta la <xref:System.Net.WebRequest.Method%2A> proprietà POST per indicare che la richiesta verrà dati all'host di destinazione.  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo di ottenere o impostare la proprietà quando quest'ultima non è sottoposta a override in una classe discendente.</exception>
        <block subset="none" type="overrides">
          <para>Il <see cref="P:System.Net.WebRequest.Method" /> proprietà può contenere qualsiasi metodo di richiesta valido per il protocollo implementato. Il valore predefinito è necessario fornire una transazione di richiesta/risposta predefinita che non richiede l'impostazione di proprietà specifiche del protocollo.</para>
        </block>
        <altmember cref="P:System.Net.HttpWebRequest.Method" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public virtual bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe discendente, indica se è necessario preautenticare la richiesta.</summary>
        <value>
          <see langword="true" /> per preautenticare; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fatta eccezione per la prima richiesta, il <xref:System.Net.WebRequest.PreAuthenticate%2A> proprietà indica se inviare informazioni di autenticazione con le richieste successive senza attendere la richiesta dal server. Quando <xref:System.Net.WebRequest.PreAuthenticate%2A> è `false`, <xref:System.Net.WebRequest> attende una richiesta di autenticazione prima di inviare informazioni di autenticazione.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L'esempio seguente imposta il <xref:System.Net.WebRequest.PreAuthenticate%2A> proprietà `true` in modo che il <xref:System.Net.NetworkCredential> archiviati nel <xref:System.Net.WebRequest.Credentials%2A> verrà inviata a proprietà insieme alla richiesta di risorse.  
  
 [!code-cpp[WebRequest_PreAuthenticate#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CPP/webrequest_preauthenticate.cpp#1)]
 [!code-csharp[WebRequest_PreAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CS/webrequest_preauthenticate.cs#1)]
 [!code-vb[WebRequest_PreAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_PreAuthenticate/VB/webrequest_preauthenticate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo per ottenere o impostare la proprietà quando quest'ultima non è sottoposta a override in una classe discendente.</exception>
        <altmember cref="P:System.Net.HttpWebRequest.PreAuthenticate" />
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe discendente, ottiene o imposta il proxy di rete per accedere alla risorsa Internet.</summary>
        <value>Oggetto <see cref="T:System.Net.IWebProxy" /> da usare per accedere alla risorsa Internet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.Proxy%2A> proprietà identifica il proxy di rete utilizzato dalla richiesta per accedere alla risorsa Internet. La richiesta viene effettuata tramite il server proxy anziché direttamente alla risorsa Internet.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 Nell'esempio seguente viene visualizzato l'indirizzo proxy di rete corrente e consente all'utente assegnare un numero di porta e indirizzo di un nuovo proxy di rete.  
  
 [!code-cpp[WebRequest_Proxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Proxy/CPP/webrequest_proxy.cpp#1)]
 [!code-csharp[WebRequest_Proxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Proxy/CS/webrequest_proxy.cs#1)]
 [!code-vb[WebRequest_Proxy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Proxy/VB/webrequest_proxy.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo per ottenere o impostare la proprietà quando quest'ultima non è sottoposta a override in una classe discendente.</exception>
        <altmember cref="T:System.Net.IWebProxy" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="P:System.Net.HttpWebRequest.Proxy" />
      </Docs>
    </Member>
    <Member MemberName="RegisterPortableWebRequestCreator">
      <MemberSignature Language="C#" Value="public static void RegisterPortableWebRequestCreator (System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterPortableWebRequestCreator(class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPortableWebRequestCreator(System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterPortableWebRequestCreator (creator As IWebRequestCreate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterPortableWebRequestCreator(System::Net::IWebRequestCreate ^ creator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" />
      </Parameters>
      <Docs>
        <param name="creator">Oggetto <see cref="T:System.Net.IWebRequestCreate" /> da registrare.</param>
        <summary>Registra un oggetto <see cref="T:System.Net.IWebRequestCreate" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterPrefix">
      <MemberSignature Language="C#" Value="public static bool RegisterPrefix (string prefix, System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RegisterPrefix(string prefix, class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RegisterPrefix (prefix As String, creator As IWebRequestCreate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RegisterPrefix(System::String ^ prefix, System::Net::IWebRequestCreate ^ creator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" />
      </Parameters>
      <Docs>
        <param name="prefix">URI completo o prefisso URI gestito dal discendente <see cref="T:System.Net.WebRequest" />.</param>
        <param name="creator">Metodo di creazione chiamato da <see cref="T:System.Net.WebRequest" /> per creare il discendente <see cref="T:System.Net.WebRequest" />.</param>
        <summary>Registra un oggetto <see cref="T:System.Net.WebRequest" /> discendente per l'URI specificato.</summary>
        <returns>
          <see langword="true" /> se la registrazione viene eseguita correttamente; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.RegisterPrefix%2A> metodo registri <xref:System.Net.WebRequest> discendenti per rispondere alle richieste. <xref:System.Net.WebRequest> i discendenti vengono in genere registrati per gestire un protocollo specifico, quale HTTP o FTP, ma possono essere registrati per gestire una richiesta di un server specifico o un percorso in un server.  
  
 Di seguito sono indicati i tipi di riserva pre-registrati già registrati:  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 Per ulteriori informazioni, vedere il <xref:System.Net.WebRequest.Create%28System.String%29> e <xref:System.Net.WebRequest.Create%28System.Uri%29> metodi.  
  
 I prefissi duplicati non consentiti. <xref:System.Net.WebRequest.RegisterPrefix%2A> Restituisce `false` se viene effettuato un tentativo di registrare un prefisso duplicato.  
  
> [!NOTE]
>  La <xref:System.Net.HttpWebRequest> classe è registrata per le richieste di servizio per gli schemi HTTP e HTTPS per impostazione predefinita. Tentativo di registrare un altro <xref:System.Net.WebRequest> discendente per tali schemi avrà esito negativo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="prefix" /> è <see langword="null" />  
  
 oppure  
  
 <paramref name="creator" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public virtual Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe discendente, ottiene l'URI della risorsa Internet associata alla richiesta.</summary>
        <value>Oggetto <see cref="T:System.Uri" /> che rappresenta la risorsa associata alla richiesta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando sottoposto a override in una classe discendente, il <xref:System.Net.WebRequest.RequestUri%2A> proprietà contiene il <xref:System.Uri> istanza che <xref:System.Net.WebRequest.Create%2A> metodo utilizzato per creare la richiesta.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 Nell'esempio seguente viene controllato il <xref:System.Net.WebRequest.RequestUri%2A> proprietà per determinare il sito richiesto in origine.  
  
 [!code-cpp[WebRequest_RequestUri1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_RequestUri1/CPP/webrequest_requesturi.cpp#1)]
 [!code-csharp[WebRequest_RequestUri1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_RequestUri1/CS/webrequest_requesturi.cs#1)]
 [!code-vb[WebRequest_RequestUri1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_RequestUri1/VB/webrequest_requesturi.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo per ottenere o impostare la proprietà quando quest'ultima non è sottoposta a override in una classe discendente.</exception>
        <block subset="none" type="overrides">
          <para>
            <see cref="P:System.Net.WebRequest.RequestUri" /> deve contenere originale <see cref="T:System.Uri" /> istanza passata per il <see cref="M:System.Net.WebRequest.Create(System.Uri)" /> metodo. Se il protocollo è in grado di reindirizzare la richiesta a un URI diverso per soddisfare la richiesta, il discendente deve fornire una proprietà per contenere l'URI che risponde effettivamente alla richiesta</para>
        </block>
        <altmember cref="P:System.Net.HttpWebRequest.RequestUri" />
        <altmember cref="P:System.Net.HttpWebRequest.Address" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati serializzati per <see cref="T:System.Net.WebRequest" />.</param>
        <param name="streamingContext">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene la destinazione del flusso serializzato associato al nuovo oggetto <see cref="T:System.Net.WebRequest" />.</param>
        <summary>Quando ne viene eseguito l'override in una classe discendente, popola un'istanza di <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati necessari per serializzare <see cref="T:System.Net.WebRequest" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo di serializzare l'oggetto quando l'interfaccia non è sottoposta a override in una classe discendente.</exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il periodo di tempo, in millisecondi, prima del timeout della richiesta.</summary>
        <value>Tempo, in millisecondi, che intercorre prima del timeout della richiesta oppure il valore <see cref="F:System.Threading.Timeout.Infinite" /> che indica che la richiesta non prevede timeout. Il valore predefinito viene definito dalla classe discendente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebRequest.Timeout%2A> proprietà indica il periodo di tempo, espresso in millisecondi, fino a quando la richiesta scade e genera un <xref:System.Net.WebException>. Il <xref:System.Net.WebRequest.Timeout%2A> proprietà influisce solo richieste sincrone effettuate con il <xref:System.Net.WebRequest.GetResponse%2A> metodo. Per il timeout delle richieste asincrone, utilizzare il <xref:System.Net.WebRequest.Abort%2A> metodo.  
  
> [!NOTE]
>  Il <xref:System.Net.WebRequest> classe è un `abstract` classe. Il comportamento effettivo di <xref:System.Net.WebRequest> istanze in fase di esecuzione è determinato dalla classe discendente restituita dal <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sui valori predefiniti e le eccezioni, vedere la documentazione per le classi discendenti, ad esempio <xref:System.Net.HttpWebRequest> e <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 L'esempio seguente imposta la <xref:System.Net.WebRequest.Timeout%2A> proprietà 10000 millisecondi. Se il periodo di timeout scade prima che la risorsa può essere restituita, un <xref:System.Net.WebException> viene generata un'eccezione.  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo per ottenere o impostare la proprietà quando quest'ultima non è sottoposta a override in una classe discendente.</exception>
        <block subset="none" type="overrides">
          <para>Le classi derivate indicano un timeout generando un <see cref="T:System.Net.WebException" /> con il <see cref="P:System.Net.WebException.Status" /> campo impostato su <see cref="F:System.Net.WebExceptionStatus.Timeout" />. Quando <see cref="P:System.Net.WebRequest.Timeout" /> è impostato su <see cref="F:System.Threading.Timeout.Infinite" /> classe discendente non ha timeout.</para>
        </block>
        <altmember cref="P:System.Net.HttpWebRequest.Timeout" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public virtual bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando ne viene eseguito l'override in una classe discendente, ottiene o imposta un valore <see cref="T:System.Boolean" /> che controlla se vengono inviate proprietà <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> con le richieste.</summary>
        <value>
          <see langword="true" /> se vengono usate le credenziali predefinite; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare questa proprietà su `true` quando le richieste effettuate da questo <xref:System.Net.WebRequest> oggetto deve, se richiesto dal server, essere autenticato utilizzando le credenziali dell'utente attualmente connesso. Per le applicazioni client, questo è il comportamento desiderato nella maggior parte degli scenari. Per le applicazioni di livello intermedio, ad esempio le applicazioni ASP.NET, anziché utilizzare questa proprietà, in genere è necessario impostare il <xref:System.Net.WebRequest.Credentials%2A> proprietà per le credenziali del client per il quale viene effettuata la richiesta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si è provato a impostare questa proprietà dopo che la richiesta è stata inviata.</exception>
        <exception cref="T:System.NotImplementedException">Viene eseguito un tentativo per accedere la proprietà quando quest'ultima non è sottoposta a override in una classe discendente.</exception>
      </Docs>
    </Member>
  </Members>
</Type>