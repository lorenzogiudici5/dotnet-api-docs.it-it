<Type Name="FtpWebRequest" FullName="System.Net.FtpWebRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1278f9f8cd27029d54ab70b0f5f3548c6cf29dbc" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33683799" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FtpWebRequest : System.Net.WebRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FtpWebRequest extends System.Net.WebRequest" />
  <TypeSignature Language="DocId" Value="T:System.Net.FtpWebRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FtpWebRequest&#xA;Inherits WebRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class FtpWebRequest sealed : System::Net::WebRequest" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebRequest</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implementa un client FTP (File Transfer Protocol).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ottenere un'istanza di <xref:System.Net.FtpWebRequest>, utilizzare il <xref:System.Net.WebRequest.Create%2A> metodo. È inoltre possibile utilizzare la <xref:System.Net.WebClient> classe per caricare e scaricare le informazioni da un server FTP. Utilizza uno di questi approcci, quando si specifica una risorsa di rete che utilizza lo schema FTP (ad esempio, `"ftp://contoso.com"`) la <xref:System.Net.FtpWebRequest> classe fornisce la possibilità di interagire a livello di codice con i server FTP.  
  
 L'URI può essere relativo o assoluto. Se l'URI è nel formato `"ftp://contoso.com/%2fpath"` (% 2f è una sequenza di escape '/'), quindi l'URI è assoluto e la directory corrente sia `/path`. Se, tuttavia, l'URI è nel formato `"ftp://contoso.com/path"`, .NET Framework esegue innanzitutto al server FTP (utilizzando il nome utente e la password impostata il <xref:System.Net.FtpWebRequest.Credentials%2A> proprietà), la directory corrente viene impostato su `<UserLoginDirectory>/path`.  
  
 È necessario disporre di un nome utente valido e la password per il server o il server deve consentire l'accesso anonimo. È possibile specificare le credenziali utilizzate per connettersi al server tramite l'impostazione di <xref:System.Net.FtpWebRequest.Credentials%2A> proprietà oppure è possibile includerli nel <xref:System.Uri.UserInfo%2A> parte dell'URI passato al <xref:System.Net.WebRequest.Create%2A> (metodo). Se si includono <xref:System.Uri.UserInfo%2A> informazioni nell'URI, la <xref:System.Net.FtpWebRequest.Credentials%2A> proprietà è impostata su nuove credenziali di rete con le informazioni di nome e una password utente specificato.  
  
> [!CAUTION]
>  A meno che il <xref:System.Net.FtpWebRequest.EnableSsl%2A> proprietà `true`, tutti i dati e i comandi, incluse le informazioni di nome e una password utente, vengono inviati in testo non crittografato al server. Chiunque monitoraggio del traffico di rete può visualizzare le credenziali e utilizzarle per connettersi al server. Se ci si connette a un server FTP che richiede le credenziali e supporta Secure Sockets Layer (SSL), è necessario impostare <xref:System.Net.FtpWebRequest.EnableSsl%2A> a `true`.  
  
 È necessario disporre di <xref:System.Net.WebPermission> per accedere alla risorsa FTP; in caso contrario, un <xref:System.Security.SecurityException> viene generata un'eccezione.  
  
 Specificare il comando FTP da inviare al server tramite l'impostazione di <xref:System.Net.FtpWebRequest.Method%2A> proprietà su un valore definito nel <xref:System.Net.WebRequestMethods.Ftp> struttura. Per trasmettere i dati di testo, modificare il <xref:System.Net.FtpWebRequest.UseBinary%2A> proprietà rispetto al valore predefinito (`true`) a `false`. Per ulteriori dettagli e restrizioni, vedere <xref:System.Net.FtpWebRequest.Method%2A>.  
  
 Quando si utilizza un <xref:System.Net.FtpWebRequest> oggetto per caricare un file a un server, è necessario scrivere il contenuto del file per il flusso di richiesta ottenuto chiamando il <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metodo o le relative controparti asincrone, il <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> e <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> metodi. È necessario scrivere nel flusso e chiudere il flusso prima di inviare la richiesta.  
  
 Le richieste vengono inviate al server tramite la chiamata di <xref:System.Net.FtpWebRequest.GetResponse%2A> metodo o le relative controparti asincrone, il <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> e <xref:System.Net.FtpWebRequest.EndGetResponse%2A> metodi. Al termine dell'operazione richiesta, un <xref:System.Net.FtpWebResponse> viene restituito l'oggetto. Il <xref:System.Net.FtpWebResponse> oggetto fornisce lo stato dell'operazione e i dati scaricati dal server.  
  
 È possibile impostare un valore di timeout per la lettura o scrittura al server tramite il <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> proprietà. Se il periodo di timeout viene superato, la chiamata al metodo genera un <xref:System.Net.WebException> con <xref:System.Net.WebExceptionStatus> impostato su <xref:System.Net.WebExceptionStatus.Timeout>.  
  
 Quando si scarica un file da un server FTP, se il comando ha esito positivo, il contenuto del file di richiesta è disponibile nel flusso dell'oggetto risposta. È possibile accedere a questo flusso chiamando il <xref:System.Net.FtpWebResponse.GetResponseStream%2A> metodo. Per ulteriori informazioni, vedere <xref:System.Net.FtpWebResponse>.  
  
 Se il <xref:System.Net.FtpWebRequest.Proxy%2A> è impostata, sia direttamente o in un file di configurazione, le comunicazioni con il server FTP vengono effettuate tramite il proxy specificato. Se il proxy specificato è un proxy HTTP, solo il <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, e <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> sono supportati i comandi.  
  
 Solo il contenuto binario scaricato è memorizzato nella cache. ovvero, il contenuto ricevuto utilizzando il <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> comando con il <xref:System.Net.FtpWebRequest.UseBinary%2A> proprietà impostata su `true`.  
  
 Più <xref:System.Net.FtpWebRequest>il riutilizzo delle connessioni esistenti, se possibile.  
  
 Per ulteriori informazioni sul protocollo FTP, vedere [RFC 959: File Transfer Protocol](https://www.ietf.org/rfc/rfc959.txt).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'eliminazione di un file da un server FTP.  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 Esempio di codice riportato di seguito viene illustrato come scaricare un file da un server FTP tramite il <xref:System.Net.WebClient> classe.  
  
 [!code-cpp[NCLFtpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#5)]
 [!code-csharp[NCLFtpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#5)]  
  
 Esempio di codice seguente viene illustrato l'utilizzo di operazioni asincrone per caricare un file a un server FTP.  
  
 [!code-cpp[NCLFtpAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#1)]
 [!code-csharp[NCLFtpAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">Per accedere alla risorsa a cui fa riferimento questa richiesta. Enumerazione associata: <see cref="F:System.Net.NetworkAccess.Connect" />.</permission>
    <altmember cref="T:System.Net.FtpWebResponse" />
    <altmember cref="T:System.Net.FtpStatusCode" />
    <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.WebClient" />
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Termina un'operazione FTP asincrona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è presente alcuna operazione in corso, questo metodo non esegue alcuna operazione. Se un trasferimento di file è in corso, questo metodo termina il trasferimento.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come l'utente può terminare un caricamento asincrono di un file dalla directory locale al server.  
  
 [!code-cpp[NCLFtpClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#10)]
 [!code-csharp[NCLFtpClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
        <param name="state">Oggetto definito dall'utente che contiene informazioni sull'operazione. L'oggetto viene passato al delegato di <c>callback</c> al completamento dell'operazione.</param>
        <summary>Avvia l'apertura asincrona del flusso del contenuto di una richiesta per la scrittura.</summary>
        <returns>Istanza di <see cref="T:System.IAsyncResult" /> che indica lo stato dell'operazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario completare l'operazione asincrona chiamando il <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> metodo. In genere, <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> viene chiamato dal metodo a cui fa riferimento `callback`. Per determinare lo stato dell'operazione, verificare le proprietà di <xref:System.IAsyncResult> oggetto restituito da questo metodo.  
  
 Questo metodo non è bloccata durante l'attesa per il flusso. Per il blocco, chiamare <xref:System.Net.FtpWebRequest.GetRequestStream%2A> al posto di questo metodo.  
  
 Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [la chiamata dei metodi sincroni](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come iniziare un'operazione asincrona per ottenere flusso di una richiesta. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Net.FtpWebRequest> Cenni preliminari sulla classe.  
  
 [!code-cpp[NCLFtpAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#4)]
 [!code-csharp[NCLFtpAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Una chiamata precedente a questo metodo oppure al metodo <see cref="M:System.Net.FtpWebRequest.GetRequestStream" /> non è stata ancora completata.</exception>
        <exception cref="T:System.Net.WebException">Non è stato possibile stabilire una connessione al server FTP.</exception>
        <exception cref="T:System.Net.ProtocolViolationException">La proprietà <see cref="P:System.Net.FtpWebRequest.Method" /> non è impostata su <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" />.</exception>
        <block subset="none" type="usage">
          <para>Questo metodo genera traffico di rete.</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
        <param name="state">Oggetto definito dall'utente che contiene informazioni sull'operazione. L'oggetto viene passato al delegato di <c>callback</c> al completamento dell'operazione.</param>
        <summary>Inizia l'invio di una richiesta e la ricezione di una risposta da un server FTP in modo asincrono.</summary>
        <returns>Istanza di <see cref="T:System.IAsyncResult" /> che indica lo stato dell'operazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario completare l'operazione asincrona chiamando il <xref:System.Net.FtpWebRequest.EndGetResponse%2A> metodo. In genere, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> viene chiamato dal metodo a cui fa riferimento `callback`. Per determinare lo stato dell'operazione, verificare le proprietà di <xref:System.IAsyncResult> oggetto restituito dal <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo.  
  
 Se il <xref:System.Net.FtpWebRequest.Proxy%2A> è impostata, sia direttamente o in un file di configurazione, le comunicazioni con il server FTP vengono effettuate tramite il proxy specificato.  
  
 <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> non è bloccata durante l'attesa di risposta dal server. Per il blocco, chiamare il <xref:System.Net.FtpWebRequest.GetResponse%2A> metodo al posto di <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>.  
  
 Per ulteriori informazioni sull'utilizzo del modello di programmazione asincrona, vedere [la chiamata dei metodi sincroni](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
 Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
> [!NOTE]
>  Se un <xref:System.Net.WebException> viene generata, utilizzare il <xref:System.Net.WebException.Response%2A> e <xref:System.Net.WebException.Status%2A> le proprietà dell'eccezione per determinare la risposta dal server.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato che termina un'operazione asincrona per ottenere flusso di una richiesta e avviare una richiesta per ottenere la risposta. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Net.FtpWebRequest> Cenni preliminari sulla classe.  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          Il metodo <see cref="M:System.Net.FtpWebRequest.GetResponse" /> oppure il metodo <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> è gia stato chiamato per questa istanza.</exception>
        <block subset="none" type="usage">
          <para>Questo metodo genera traffico di rete.</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); void set(System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta i certificati usati per stabilire una connessione crittografata al server FTP.</summary>
        <value>Oggetto <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> che contiene i certificati client.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I certificati client vengono utilizzati per autenticare il client durante la negoziazione della connessione SSL iniziale. Per ulteriori informazioni, vedere <xref:System.Net.FtpWebRequest.EnableSsl%2A>.  
  
> [!NOTE]
>  .NET Framework memorizza nella cache le sessioni SSL quando vengono creati e tenta di riutilizzare una sessione memorizzati nella cache per una nuova richiesta, se possibile. Durante il tentativo di riutilizzare una sessione SSL, .NET Framework viene utilizzato il primo elemento della <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (se è presente uno), o tenta di riutilizzare una sessione anonima se <xref:System.Net.HttpWebRequest.ClientCertificates%2A> è vuoto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore specificato per un'operazione set è <see langword="null" />.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public override string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del gruppo di connessione che contiene il punto di servizio usato per inviare la richiesta corrente.</summary>
        <value>Valore <see cref="T:System.String" /> che contiene il nome di un gruppo di connessione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gruppi di connessione associano un set di richieste a un particolare tipo di connessione o un set di connessioni. Le connessioni in un gruppo di connessione possono essere riutilizzate solo per le richieste provenienti nello stesso dominio applicazione, quando le credenziali nella richiesta sono uguali e se la richiesta specifica il nome del gruppo di connessione. Quando una richiesta non specifica il nome di un gruppo di connessione, è possono utilizzare tutte le connessioni esistenti per il server richiesto non è associata a un gruppo di connessione. Quando le credenziali non sono uguali, la connessione esistente viene chiusa e la nuova richiesta deve essere autenticata nuovamente.  
  
 Utilizzo dei gruppi di connessione, è possibile migliorare le prestazioni perché in questo modo tutte le richieste per un utente di riutilizzare la connessione autenticata con le credenziali dell'utente.  
  
 Modifica il <xref:System.Net.FtpWebRequest.ConnectionGroupName%2A> dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente recupera il valore di questa proprietà.  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">È stato specificato un nuovo valore per questa proprietà per una richiesta già in corso.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore ignorato dalla classe <see cref="T:System.Net.FtpWebRequest" />.</summary>
        <value>Valore <see cref="T:System.Int64" /> che deve essere ignorato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.ContentLength%2A> proprietà viene fornita solo per compatibilità con altre implementazioni del <xref:System.Net.WebRequest> e <xref:System.Net.WebResponse> classi. Non c'è alcun motivo per utilizzare <xref:System.Net.FtpWebRequest.ContentLength%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentOffset">
      <MemberSignature Language="C#" Value="public long ContentOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentOffset" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentOffset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentOffset { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un offset di byte nel file che viene scaricato da questa richiesta.</summary>
        <value>Istanza di <see cref="T:System.Int64" /> che specifica l'offset del file in byte. Il valore predefinito è zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare il <xref:System.Net.FtpWebRequest.ContentOffset%2A> proprietà durante il download di un file da un server FTP. Questo offset indica la posizione nel file del server che contrassegna l'inizio dei dati da scaricare. L'offset viene specificato come numero di byte dall'inizio del file. l'offset del primo byte è zero.  
  
 Impostazione <xref:System.Net.FtpWebRequest.ContentOffset%2A> provoca il <xref:System.Net.FtpWebRequest> per l'invio di un riavvio (`REST`) per il server. Questo comando viene ignorato dalla maggior parte delle implementazioni di server FTP, se si siano caricando dati al server.  
  
 Modifica <xref:System.Net.FtpWebRequest.ContentOffset%2A> dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato il download di parte di un file da un server e aggiunge i dati scaricati in un file locale.  
  
 [!code-cpp[NclFtpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#7)]
 [!code-csharp[NclFtpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">È stato specificato un nuovo valore per questa proprietà per una richiesta già in corso.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato per la proprietà è minore di zero.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
        <value>Genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.ContentType%2A> proprietà viene fornita solo per compatibilità con altre implementazioni del <xref:System.Net.WebRequest> e <xref:System.Net.WebResponse> classi. Non c'è alcun motivo per utilizzare <xref:System.Net.FtpWebRequest.ContentType%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Le informazioni sul tipo di contenuto non sono supportate da FTP.</exception>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le credenziali usate per comunicare con il server FTP.</summary>
        <value>Istanza di <see cref="T:System.Net.ICredentials" />; in caso contrario, <see langword="null" /> se la proprietà non è stata impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è necessario specificare le credenziali per la connessione tramite accesso anonimo. È necessario impostare il <xref:System.Net.FtpWebRequest.Credentials%2A> proprietà utilizzando una credenziale di tipo <xref:System.Net.NetworkCredential>; in questo modo il nome utente e la password può essere letti e inviati al server.  
  
> [!CAUTION]
>  Informazioni di credenziali non vengono crittografate quando vengono trasmessi al server, a meno che il <xref:System.Net.FtpWebRequest.EnableSsl%2A> è impostata su `true`.  
  
 Modifica <xref:System.Net.FtpWebRequest.Credentials%2A> dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente recupera il valore di questa proprietà e viene utilizzato per visualizzare il nome utente.  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore specificato per un'operazione set è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Istanza di <see cref="T:System.Net.ICredentials" /> di un tipo diverso dalla classe <see cref="T:System.Net.NetworkCredential" /> specificata per un'operazione d'impostazione.</exception>
        <exception cref="T:System.InvalidOperationException">È stato specificato un nuovo valore per questa proprietà per una richiesta già in corso.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definisce i criteri della cache predefiniti per tutte le richieste FTP.</summary>
        <value>Classe <see cref="T:System.Net.Cache.RequestCachePolicy" /> che definisce i criteri della cache per le richieste FTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Solo il contenuto ricevuto utilizzando il <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> comando viene memorizzato nella cache.  
  
 Nella tabella seguente vengono descritti gli effetti della memorizzazione nella cache dei criteri FTP <xref:System.Net.FtpWebRequest>.  
  
|Criteri|Effetto|  
|------------|------------|  
|<xref:System.Net.Cache.RequestCacheLevel.Default>|Restituisce la risorsa memorizzata nella cache se la risorsa viene aggiornata, la lunghezza del contenuto è precisa e la scadenza, modifica e gli attributi di lunghezza del contenuto sono presenti.|  
|<xref:System.Net.Cache.RequestCacheLevel.BypassCache>|Restituisce la risorsa dal server.|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheOnly>|Restituisce la risorsa memorizzata nella cache se la lunghezza del contenuto è presente e corrisponde alla dimensione dell'elemento; in caso contrario, genera un <xref:System.Net.WebException>.|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheIfAvailable>|Restituisce la risorsa memorizzata nella cache se la lunghezza del contenuto viene fornita e corrisponde alla dimensione dell'elemento; in caso contrario, la risorsa viene scaricata dal server e viene restituita al chiamante.|  
|<xref:System.Net.Cache.RequestCacheLevel.Revalidate>|Restituisce la risorsa memorizzata nella cache, se il timestamp della risorsa nella cache è lo stesso come il timestamp della risorsa del server. in caso contrario, la risorsa viene scaricata dal server di, memorizzata nella cache e restituita al chiamante.|  
|<xref:System.Net.Cache.RequestCacheLevel.Reload>|Scarica la risorsa dal server, viene memorizzato nella cache e la restituisce al chiamante.|  
|<xref:System.Net.Cache.RequestCacheLevel.NoCacheNoStore>|Se esiste una risorsa memorizzati nella cache, viene eliminato. La risorsa viene scaricata dal server e viene restituita al chiamante.|  
  
> [!NOTE]
>  Impostazione <xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A> esegue l'override di qualsiasi impostazione di configurazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il chiamante ha tentato di impostare la proprietà su <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta una struttura <see cref="T:System.Boolean" /> che specifica che deve essere usata una connessione SSL.</summary>
        <value>
          <see langword="true" /> se le trasmissioni di controllo e dati sono crittografate; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  A meno che il <xref:System.Net.FtpWebRequest.EnableSsl%2A> proprietà `true`, tutti i dati e i comandi, incluse le informazioni di nome e una password utente, vengono inviati in testo non crittografato al server. Chiunque monitoraggio del traffico di rete può visualizzare le credenziali e utilizzarle per connettersi al server. Se ci si connette a un server FTP che richiede le credenziali e supporta SSL, è necessario impostare <xref:System.Net.FtpWebRequest.EnableSsl%2A> a `true`.  
  
 Il `"AUTH TLS"` comando viene inviato al server per richiedere una sessione crittografata. Se il server non riconosce questo comando, viene visualizzato un <xref:System.Net.WebException> eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente usa una connessione crittografata per scaricare l'elenco delle directory da un server FTP.  
  
 [!code-cpp[NCLFtpClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#8)]
 [!code-csharp[NCLFtpClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La connessione al server FTP è gia stata stabilita.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> restituito all'avvio dell'operazione.</param>
        <summary>Termina un'operazione asincrona in sospeso avviata con il metodo <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</summary>
        <returns>Istanza di <see cref="T:System.IO.Stream" /> scrivibile associata a questa istanza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'operazione è stata completata, il <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> metodo si blocca fino al completamento dell'operazione. Per determinare se l'operazione è stata completata, controllare il <xref:System.IAsyncResult.IsCompleted%2A> proprietà prima di chiamare <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>.  
  
 Oltre alle eccezioni elencate in "Eccezioni", <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> genera nuovamente le eccezioni generate durante l'apertura del flusso per la scrittura.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato che termina un'operazione asincrona per ottenere flusso di una richiesta. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Net.FtpWebRequest> Cenni preliminari sulla classe.  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncResult" /> non è stato ottenuto chiamando il metodo <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</exception>
        <exception cref="T:System.InvalidOperationException">Questo metodo è già stato chiamato per l'operazione identificata da <paramref name="asyncResult" />.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> restituito all'avvio dell'operazione.</param>
        <summary>Termina un'operazione asincrona in sospeso avviata con il metodo <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</summary>
        <returns>Riferimento <see cref="T:System.Net.WebResponse" /> in cui è contenuta un'istanza di <see cref="T:System.Net.FtpWebResponse" />. Questo oggetto contiene la risposta del server FTP alla richiesta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'operazione non è stata completata al momento il <xref:System.Net.FtpWebRequest.EndGetResponse%2A> metodo viene chiamato, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> bloccata fino al completamento dell'operazione. Per evitare il blocco, controllare il <xref:System.IAsyncResult.IsCompleted%2A> proprietà prima di chiamare <xref:System.Net.FtpWebRequest.EndGetResponse%2A>.  
  
 Oltre alle eccezioni elencate in "Eccezioni", <xref:System.Net.FtpWebRequest.EndGetResponse%2A> genera nuovamente le eccezioni generate durante la comunicazione con il server.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato che termina un'operazione asincrona per ottenere una risposta. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Net.FtpWebRequest> Cenni preliminari sulla classe.  
  
 [!code-cpp[NCLFtpAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#6)]
 [!code-csharp[NCLFtpAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncResult" /> non è stato ottenuto chiamando il metodo <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
        <exception cref="T:System.InvalidOperationException">Questo metodo è già stato chiamato per l'operazione identificata da <paramref name="asyncResult" />.</exception>
        <exception cref="T:System.Net.WebException">Errore durante l'utilizzo di un proxy HTTP.</exception>
        <block subset="none" type="usage">
          <para>Questo metodo genera traffico di rete.</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="M:System.Net.FtpWebRequest.GetResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetRequestStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera il flusso usato per caricare i dati su un server FTP.</summary>
        <returns>Istanza di <see cref="T:System.IO.Stream" /> scrivibile usata per memorizzare dati da inviare al server mediante la richiesta corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare le proprietà della richiesta prima di chiamare il <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metodo. Dopo la scrittura dei dati nel flusso, è necessario chiudere il flusso prima dell'invio della richiesta.  
  
 Se non è stato impostato il <xref:System.Net.FtpWebRequest.Method%2A> proprietà <xref:System.Net.WebRequestMethods.Ftp.UploadFile> o <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, non è possibile ottenere il flusso.  
  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A> blocchi durante l'attesa per il flusso. Per evitare questo problema, chiamare il <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> metodo al posto di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente illustra la copia di file per il flusso di dati di una richiesta e inviare una richiesta al server per caricare i dati e li aggiunge a un file.  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          Il metodo <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> è stato chiamato e non è stato completato.  
  
 \- oppure -  
  
 Un proxy HTTP è attivo e si è tentato di utilizzare un comando FTP diverso da <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> oppure <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</exception>
        <exception cref="T:System.Net.WebException">Non è stato possibile stabilire una connessione al server FTP.</exception>
        <exception cref="T:System.Net.ProtocolViolationException">La proprietà <see cref="P:System.Net.FtpWebRequest.Method" /> non è impostata su <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> o su <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" />.</exception>
        <block subset="none" type="usage">
          <para>Questo metodo genera traffico di rete.</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ GetResponse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce la risposta del server FTP.</summary>
        <returns>Riferimento <see cref="T:System.Net.WebResponse" /> in cui è contenuta un'istanza di <see cref="T:System.Net.FtpWebResponse" />. Questo oggetto contiene la risposta del server FTP alla richiesta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per accedere alle proprietà specifici del FTP, è necessario eseguire il cast di <xref:System.Net.WebResponse> oggetto restituito da questo metodo per <xref:System.Net.FtpWebResponse>.  
  
 <xref:System.Net.FtpWebRequest.GetResponse%2A> fa sì che venga stabilita una connessione di controllo e potrebbe anche creare una connessione dati. <xref:System.Net.FtpWebRequest.GetResponse%2A> si blocca fino a quando non viene ricevuta la risposta. Per evitare questo problema, è possibile eseguire questa operazione in modo asincrono chiamando il <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> e <xref:System.Net.FtpWebRequest.EndGetResponse%2A> metodi al posto di <xref:System.Net.FtpWebRequest.GetResponse%2A>.  
  
 Se il <xref:System.Net.FtpWebRequest.Proxy%2A> è impostata, sia direttamente o in un file di configurazione, le comunicazioni con il server FTP vengono effettuate tramite il proxy.  
  
 Se un <xref:System.Net.WebException> viene generata, utilizzare il <xref:System.Net.WebException.Response%2A> e <xref:System.Net.WebException.Status%2A> le proprietà dell'eccezione per determinare la risposta dal server.  
  
 Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per ulteriori informazioni, vedere [traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
> [!NOTE]
>  Più chiamate al metodo <xref:System.Net.FtpWebRequest.GetResponse%2A> restituiscono lo stesso oggetto risposta; la richiesta non è stata rilasciata.  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come copiando un file per il flusso di dati di una richiesta e inviare una richiesta per aggiungere dati a un file al server. Nell'esempio viene chiamato <xref:System.Net.FtpWebRequest.GetResponse%2A> inviare la richiesta e il blocco fino a quando non viene restituita la risposta dal server.  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          Il metodo <see cref="M:System.Net.FtpWebRequest.GetResponse" /> oppure il metodo <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> è gia stato chiamato per questa istanza.  
  
 \- oppure -  
  
 Un proxy HTTP è attivo e si è tentato di utilizzare un comando FTP diverso da <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> oppure <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</exception>
        <exception cref="T:System.Net.WebException">
          La proprietà <see cref="P:System.Net.FtpWebRequest.EnableSsl" /> è impostata su <see langword="true" />, ma il server non supporta questa funzionalità.  
  
 \- oppure -  
  
 Un <see cref="P:System.Net.FtpWebRequest.Timeout" /> è stato specificato e il timeout è scaduto.</exception>
        <block subset="none" type="usage">
          <para>Questo metodo genera traffico di rete.</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un oggetto <see cref="T:System.Net.WebHeaderCollection" /> vuoto.</summary>
        <value>Oggetto <see cref="T:System.Net.WebHeaderCollection" /> vuoto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.Headers%2A> proprietà viene fornita solo per compatibilità con altre implementazioni del <xref:System.Net.WebRequest> e <xref:System.Net.WebResponse> classi. Non c'è alcun motivo per utilizzare <xref:System.Net.FtpWebRequest.Headers%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("We don't support KeepAlive = true")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se la connessione di controllo sul server FTP viene chiusa dopo il completamento della richiesta</summary>
        <value>
          <see langword="true" /> se la connessione al server non deve essere eliminata; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Net.FtpWebRequest.KeepAlive%2A> è impostata su `false`, la connessione di controllo viene chiuso quando si chiama il <xref:System.Net.FtpWebResponse.Close%2A> metodo.  
  
 Modifica <xref:System.Net.FtpWebRequest.KeepAlive%2A> dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente recupera e visualizza i valori delle proprietà per un determinato <xref:System.Net.FtpWebRequest> oggetto.  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">È stato specificato un nuovo valore per questa proprietà per una richiesta già in corso.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public override string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il comando da inviare al server FTP.</summary>
        <value>Valore <see cref="T:System.String" /> che contiene il comando FTP da inviare al server. Il valore predefinito è <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.Method%2A> proprietà determina quale comando viene inviato al server. Impostare il <xref:System.Net.FtpWebRequest.Method%2A> utilizzando le stringhe definite nei membri di campo pubblico la <xref:System.Net.WebRequestMethods.Ftp> classe. Si noti che le stringhe definite nel <xref:System.Net.WebRequestMethods.Ftp> classe sono le uniche opzioni supportate per il <xref:System.Net.FtpWebRequest.Method%2A> proprietà. L'impostazione di <xref:System.Net.FtpWebRequest.Method%2A> qualsiasi altro valore della proprietà comporterà un <xref:System.ArgumentException> eccezione.  
  
 Quando si imposta <xref:System.Net.FtpWebRequest.Method%2A> a <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, è necessario farlo prima di chiamare il <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metodo. Errore durante la chiamata di questi membri determina l'ordine corretto un <xref:System.Net.ProtocolViolationException> eccezione quando si tenta di ottenere il flusso di richiesta.  
  
 Le credenziali fornite per il <xref:System.Net.FtpWebRequest> oggetto necessario disporre dell'autorizzazione per eseguire il metodo specificato. In caso contrario, il comando FTP non riesce.  
  
 Per determinare l'esito positivo o negativo di un comando, controllare il <xref:System.Net.FtpWebResponse.StatusCode%2A> e <xref:System.Net.FtpWebResponse.StatusDescription%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente imposta questa proprietà su <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">È stato specificato un nuovo valore per questa proprietà per una richiesta già in corso.</exception>
        <exception cref="T:System.ArgumentException">Il metodo non è valido.  
  
 \- oppure -  
  
 Il metodo non è supportato.  
  
 \- oppure -  
  
 Sono stati specificati più metodi.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public override bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
        <value>Genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.PreAuthenticate%2A> proprietà viene fornita solo per compatibilità con altre implementazioni del <xref:System.Net.WebRequest> e <xref:System.Net.WebResponse> classi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La preautenticazione non è supportata da FTP.</exception>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public override System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il proxy usato per comunicare con il server FTP.</summary>
        <value>Istanza di <see cref="T:System.Net.IWebProxy" /> responsabile della comunicazione con il server FTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.Proxy%2A> proprietà identifica il <xref:System.Net.IWebProxy> istanza che comunica con il server FTP. Il proxy è impostato dal sistema tramite i file di configurazione e le impostazioni di rete locale di Internet Explorer. Per specificare che deve essere utilizzato alcun proxy, impostare <xref:System.Net.FtpWebRequest.Proxy%2A> all'istanza del proxy restituito dal <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sul rilevamento automatico proxy, vedere [il rilevamento automatico Proxy](~/docs/framework/network-programming/automatic-proxy-detection.md).  
  
 È necessario impostare <xref:System.Net.FtpWebRequest.Proxy%2A> prima della scrittura dei dati nel flusso della richiesta o per ottenere la risposta. Modifica <xref:System.Net.FtpWebRequest.Proxy%2A> dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> eccezione.  
  
 La <xref:System.Net.FtpWebRequest> classe supporta il proxy HTTP e Client Firewall ISA.  
  
 Se il proxy specificato è un proxy HTTP, solo il <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, e <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> sono supportati i comandi.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare il valore della proprietà.  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Questa proprietà non può essere impostata su <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">È stato specificato un nuovo valore per questa proprietà per una richiesta già in corso.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
      </Docs>
    </Member>
    <Member MemberName="ReadWriteTimeout">
      <MemberSignature Language="C#" Value="public int ReadWriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadWriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadWriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadWriteTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un timeout durante la lettura o la scrittura in un flusso.</summary>
        <value>Il numero di millisecondi prima che si verifichi il timeout di scrittura o di lettura. Il valore predefinito è 300.000 millisecondi (5 minuti).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> utilizzato durante la scrittura nel flusso restituito dal <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metodo o la lettura dal flusso restituito dal <xref:System.Net.FtpWebResponse.GetResponseStream%2A> metodo.  
  
 In particolare, il <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> proprietà controlla il timeout per il <xref:System.IO.Stream.Read%2A> metodo, che viene utilizzato per leggere il flusso restituito dal <xref:System.Net.FtpWebResponse.GetResponseStream%2A> (metodo) e per il <xref:System.IO.Stream.Write%2A> metodo, che viene utilizzato per scrivere nel flusso restituito dal <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metodo. Se il periodo di timeout viene superato, la chiamata al metodo genera un <xref:System.Net.WebException> con <xref:System.Net.WebExceptionStatus> impostato su <xref:System.Net.WebExceptionStatus.Timeout>.  
  
 Per specificare la quantità di tempo di attesa di completamento della richiesta, utilizzare il <xref:System.Net.FtpWebRequest.Timeout%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La richiesta è già stata inviata.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato per un'operazione di impostazione è inferiore o uguale a zero e non è uguale al campo <see cref="F:System.Threading.Timeout.Infinite" /></exception>
      </Docs>
    </Member>
    <Member MemberName="RenameTo">
      <MemberSignature Language="C#" Value="public string RenameTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RenameTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RenameTo" />
      <MemberSignature Language="VB.NET" Value="Public Property RenameTo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RenameTo { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nuovo nome di un file che viene rinominato.</summary>
        <value>Nuovo nome del file rinominato.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Il valore specificato per un'operazione Set è <see langword="null" /> o una stringa vuota.</exception>
        <exception cref="T:System.InvalidOperationException">È stato specificato un nuovo valore per questa proprietà per una richiesta già in corso.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'URI richiesto da questa istanza.</summary>
        <value>Istanza di <see cref="T:System.Uri" /> che identifica una risorsa a cui si accede tramite FTP (File Transfer Protocol).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore della <xref:System.Net.FtpWebRequest.RequestUri%2A> proprietà è l'URI specificato al momento il <xref:System.Net.WebRequest.Create%2A> metodo è stato chiamato per ottenere questa istanza.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare il valore della proprietà.  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Net.ServicePoint" /> usato per la connessione al server FTP.</summary>
        <value>Oggetto <see cref="T:System.Net.ServicePoint" /> che può essere usato per personalizzare il comportamento della connessione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non <xref:System.Net.ServicePoint> oggetto esiste, ne viene creata per il server FTP. Per impostare il numero massimo di connessioni che possono essere aperti per un server FTP, impostare il <xref:System.Net.ServicePoint.ConnectionLimit%2A> proprietà del <xref:System.Net.ServicePoint> istanza restituita da questa proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente recupera il punto di servizio da una richiesta e imposta il numero massimo di connessioni a uno.  
  
 [!code-cpp[NCLFtpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#1)]
 [!code-csharp[NCLFtpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero di millisecondi di attesa per una richiesta.</summary>
        <value>Valore <see cref="T:System.Int32" /> in cui è contenuto il numero di millisecondi di attesa prima che si verifichi il timeout di una richiesta. Il valore predefinito è <see cref="F:System.Threading.Timeout.Infinite" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per specificare un valore infinito, impostare il <xref:System.Net.FtpWebRequest.Timeout%2A> proprietà <xref:System.Threading.Timeout.Infinite> (-1). Rappresenta il valore predefinito.  
  
 <xref:System.Net.FtpWebRequest.Timeout%2A> è il numero di millisecondi che ha effettuata una richiesta sincrona con il <xref:System.Net.FtpWebRequest.GetResponse%2A> metodo attende una risposta e che il <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metodo attende per un flusso. Se una risorsa non risponde entro il periodo di timeout, la richiesta genera un <xref:System.Net.WebException> con il <xref:System.Net.WebException.Status%2A> proprietà impostata su <xref:System.Net.WebExceptionStatus.Timeout>.  
  
 Modifica <xref:System.Net.FtpWebRequest.Timeout%2A> dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> eccezione.  
  
 Una query di sistema DNS (Domain Name) può richiedere fino a 15 secondi o il timeout. Se la richiesta contiene un nome host che richiede la risoluzione e si imposta <xref:System.Net.FtpWebRequest.Timeout%2A> su un valore inferiore a 15 secondi, potrebbe richiedere più di 15 secondi prima di un <xref:System.Net.WebException> viene generata per indicare un timeout della richiesta.  
  
   
  
## Examples  
 Esempio di codice seguente imposta questa proprietà.  
  
 [!code-cpp[NCLFtpClient#23](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#23)]
 [!code-csharp[NCLFtpClient#23](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato è minore di zero e non è <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
        <exception cref="T:System.InvalidOperationException">È stato specificato un nuovo valore per questa proprietà per una richiesta già in corso.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseBinary">
      <MemberSignature Language="C#" Value="public bool UseBinary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseBinary" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseBinary" />
      <MemberSignature Language="VB.NET" Value="Public Property UseBinary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseBinary { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica il tipo di dati per il trasferimento di file.</summary>
        <value>
          <see langword="true" /> per indicare al server che i dati da trasferire sono binari; <see langword="false" /> per indicare che i dati sono in formato testo. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si inviano binario dati, ad esempio un'immagine, impostare questa proprietà su `true`. Se si invia il testo, impostare la proprietà su `false`. Specifica di `true` provoca il <xref:System.Net.FtpWebRequest> per inviare un `"TYPE I"` comando al server. Specifica di `false` provoca il <xref:System.Net.FtpWebRequest> per inviare un `"Type A"` comando al server. Server FTP è possibile ignorare questi comandi.  
  
 Modifica <xref:System.Net.FtpWebRequest.UseBinary%2A> dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente recupera e visualizza i valori delle proprietà per un determinato <xref:System.Net.FtpWebRequest> oggetto.  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">È stato specificato un nuovo valore per questa proprietà per una richiesta già in corso.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public override bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
        <value>Genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A> proprietà viene fornita solo per compatibilità con altre implementazioni del <xref:System.Net.WebRequest> e <xref:System.Net.WebResponse> classi. Non c'è alcun motivo per utilizzare <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Le credenziali predefinite non sono supportate da FTP.</exception>
      </Docs>
    </Member>
    <Member MemberName="UsePassive">
      <MemberSignature Language="C#" Value="public bool UsePassive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePassive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UsePassive" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePassive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePassive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il comportamento del processo di trasferimento dei dati di un'applicazione client.</summary>
        <value>
          <see langword="false" /> se il processo di trasferimento dei dati dell'applicazione client attende una connessione sulla porta dati; in caso contrario, <see langword="true" /> se il client deve avviare una connessione sulla porta dati. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'impostazione di <xref:System.Net.FtpWebRequest.UsePassive%2A> proprietà `true` invia il "`PASV"` comando al server. Questo comando richiede al server per l'ascolto su una porta di dati e di attesa per una connessione, anziché avviare una al momento della ricezione di un comando di trasferimento.  
  
 Per una descrizione dei comportamenti che sono specificate mediante <xref:System.Net.FtpWebRequest.UsePassive%2A>, vedere [RFC 959: "File Transfer Protocol", sezione 3.2: "Tentativo di stabilire connessioni di dati" e sezione 4.1.2: "Transfer Parameter Commands"](https://www.ietf.org/rfc/rfc959.txt).  
  
 Modifica <xref:System.Net.FtpWebRequest.UsePassive%2A> dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> eccezione.  
  
 Se <xref:System.Net.FtpWebRequest.UsePassive%2A> è impostato su `true`, server FTP non può inviare le dimensioni del file e lo stato di avanzamento di download può essere sempre zero. Se <xref:System.Net.FtpWebRequest.UsePassive%2A> è impostato su `false`, un firewall può generare un avviso e bloccare il download del file.  
  
   
  
## Examples  
 Esempio di codice seguente recupera e visualizza i valori delle proprietà per un determinato <xref:System.Net.FtpWebRequest> oggetto.  
  
 [!code-cpp[NCLFtpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#6)]
 [!code-csharp[NCLFtpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">È stato specificato un nuovo valore per questa proprietà per una richiesta già in corso.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
  </Members>
</Type>