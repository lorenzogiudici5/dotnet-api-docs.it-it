<Type Name="FtpWebRequest" FullName="System.Net.FtpWebRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3be902e65ff77fbf7fc75ca130d9a67a48fb8b1c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36549690" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FtpWebRequest : System.Net.WebRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FtpWebRequest extends System.Net.WebRequest" />
  <TypeSignature Language="DocId" Value="T:System.Net.FtpWebRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FtpWebRequest&#xA;Inherits WebRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class FtpWebRequest sealed : System::Net::WebRequest" />
  <TypeSignature Language="F#" Value="type FtpWebRequest = class&#xA;    inherit WebRequest" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebRequest</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implements a File Transfer Protocol (FTP) client.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ottenere un'istanza di <xref:System.Net.FtpWebRequest>, utilizzare il <xref:System.Net.WebRequest.Create%2A> metodo. È anche possibile usare il <xref:System.Net.WebClient> classe per caricare e scaricare le informazioni da un server FTP. Utilizza uno di questi approcci, quando si specifica una risorsa di rete che utilizza lo schema FTP (ad esempio `"ftp://contoso.com"`) il <xref:System.Net.FtpWebRequest> classe offre la possibilità di interagire a livello di codice con i server FTP.  
  
 L'URI può essere relativo o assoluto. Se l'URI è nel formato `"ftp://contoso.com/%2fpath"` (% 2f è una sequenza di escape '/'), quindi l'URI sia assoluto, e la directory corrente sia `/path`. Se, tuttavia, l'URI è nel formato `"ftp://contoso.com/path"`, Registra innanzitutto .NET Framework nel server FTP (utilizzando il nome utente e la password impostata il <xref:System.Net.FtpWebRequest.Credentials%2A> proprietà), la directory corrente viene impostato su `<UserLoginDirectory>/path`.  
  
 È necessario disporre di un nome utente valido e la password per il server o il server deve consentire l'accesso anonimo. È possibile specificare le credenziali utilizzate per connettersi al server tramite l'impostazione di <xref:System.Net.FtpWebRequest.Credentials%2A> proprietà oppure è possibile includerli nel <xref:System.Uri.UserInfo%2A> parte dell'URI passato al <xref:System.Net.WebRequest.Create%2A> (metodo). Se si includono <xref:System.Uri.UserInfo%2A> informazioni nell'URI, la <xref:System.Net.FtpWebRequest.Credentials%2A> è impostata su una nuova credenziale di rete con le informazioni di nome e una password utente specificato.  
  
> [!CAUTION]
>  A meno che il <xref:System.Net.FtpWebRequest.EnableSsl%2A> proprietà `true`, tutti i dati e comandi, incluse le informazioni utente il nome e la password vengono inviati al server come testo non crittografato. Chiunque monitoraggio del traffico di rete può visualizzare le credenziali e utilizzarle per connettersi al server. Se ci si connette a un server FTP che richiede le credenziali e supporta Secure Sockets Layer (SSL), è necessario impostare <xref:System.Net.FtpWebRequest.EnableSsl%2A> a `true`.  
  
 È necessario disporre <xref:System.Net.WebPermission> per accedere alla risorsa FTP; in caso contrario, un <xref:System.Security.SecurityException> generata un'eccezione.  
  
 Specificare il comando FTP da inviare al server impostando la <xref:System.Net.FtpWebRequest.Method%2A> un valore definito nella proprietà il <xref:System.Net.WebRequestMethods.Ftp> struttura. Per trasmettere i dati di testo, modificare il <xref:System.Net.FtpWebRequest.UseBinary%2A> proprietà rispetto al valore predefinito (`true`) a `false`. Per informazioni dettagliate e le restrizioni, vedere <xref:System.Net.FtpWebRequest.Method%2A>.  
  
 Quando si usa un' <xref:System.Net.FtpWebRequest> oggetto per caricare un file a un server, è necessario scrivere il contenuto del file nel flusso di richiesta ottenuto chiamando il <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metodo o le relative controparti asincrone, il <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> e <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> metodi. È necessario scrivere nel flusso e chiudere il flusso prima di inviare la richiesta.  
  
 Le richieste vengono inviate al server chiamando il <xref:System.Net.FtpWebRequest.GetResponse%2A> metodo o le relative controparti asincrone, il <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> e <xref:System.Net.FtpWebRequest.EndGetResponse%2A> metodi. Al termine dell'operazione richiesta, un <xref:System.Net.FtpWebResponse> oggetto viene restituito. Il <xref:System.Net.FtpWebResponse> oggetto fornisce lo stato dell'operazione e i dati scaricati dal server.  
  
 È possibile impostare un valore di timeout per la lettura o scrittura al server tramite il <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> proprietà. Se il periodo di timeout viene superato, la chiamata al metodo genera una <xref:System.Net.WebException> con <xref:System.Net.WebExceptionStatus> impostato su <xref:System.Net.WebExceptionStatus.Timeout>.  
  
 Durante il download di un file da un server FTP, se il comando ha esito positivo, il contenuto del file richiesto sia disponibile nel flusso dell'oggetto risposta. È possibile accedere a questo flusso chiamando il <xref:System.Net.FtpWebResponse.GetResponseStream%2A> metodo. Per altre informazioni, vedere <xref:System.Net.FtpWebResponse>.  
  
 Se il <xref:System.Net.FtpWebRequest.Proxy%2A> è impostata, sia direttamente o in un file di configurazione, le comunicazioni con il server FTP vengono effettuate tramite il proxy specificato. Se il proxy specificato è un proxy HTTP, solo il <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, e <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> sono supportati.  
  
 Solo il contenuto binario scaricato è memorizzato nella cache; vale a dire, il contenuto ricevuto utilizzando il <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> comando con il <xref:System.Net.FtpWebRequest.UseBinary%2A> impostata su `true`.  
  
 Più <xref:System.Net.FtpWebRequest>il riutilizzo delle connessioni esistenti, se possibile.  
  
 Per ulteriori informazioni sul protocollo FTP, vedere [RFC 959: File Transfer Protocol](https://www.ietf.org/rfc/rfc959.txt).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'eliminazione di un file da un server FTP.  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 Esempio di codice seguente viene illustrato il download di file da un server FTP tramite il <xref:System.Net.WebClient> classe.  
  
 [!code-cpp[NCLFtpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#5)]
 [!code-csharp[NCLFtpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#5)]  
  
 Esempio di codice seguente viene illustrato l'utilizzo di operazioni asincrone per caricare un file a un server FTP.  
  
 [!code-cpp[NCLFtpAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#1)]
 [!code-csharp[NCLFtpAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">per l'accesso alla risorsa a cui fanno riferimento alla richiesta. Enumerazione associata: <see cref="F:System.Net.NetworkAccess.Connect" />.</permission>
    <altmember cref="T:System.Net.FtpWebResponse" />
    <altmember cref="T:System.Net.FtpStatusCode" />
    <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.WebClient" />
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="ftpWebRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Terminates an asynchronous FTP operation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è presente alcuna operazione in corso, questo metodo non esegue alcuna operazione. Se è in corso un trasferimento di file, questo metodo termina il trasferimento.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come l'utente può terminare un caricamento asincrono di un file dalla directory locale al server.  
  
 [!code-cpp[NCLFtpClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#10)]
 [!code-csharp[NCLFtpClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetRequestStream (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
        <param name="state">A user-defined object that contains information about the operation. This object is passed to the <c>callback</c> delegate when the operation completes.</param>
        <summary>Begins asynchronously opening a request's content stream for writing.</summary>
        <returns>An <see cref="T:System.IAsyncResult" /> instance that indicates the status of the operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario completare l'operazione asincrona chiamando il <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> metodo. In genere <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> viene chiamato dal metodo a cui fanno riferimento `callback`. Per determinare lo stato dell'operazione, verificare le proprietà di <xref:System.IAsyncResult> oggetto restituito da questo metodo.  
  
 Questo metodo non è bloccata durante l'attesa per il flusso. Per il blocco, chiamare <xref:System.Net.FtpWebRequest.GetRequestStream%2A> al posto di questo metodo.  
  
 Per informazioni dettagliate sull'uso del modello di programmazione asincrono, vedere [la chiamata dei metodi sincroni](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice riportato di seguito viene illustrato come iniziare un'operazione asincrona per ottenere il flusso della richiesta. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Net.FtpWebRequest> Cenni preliminari sulla classe.  
  
 [!code-cpp[NCLFtpAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#4)]
 [!code-csharp[NCLFtpAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A previous call to this method or <see cref="M:System.Net.FtpWebRequest.GetRequestStream" /> has not yet completed.</exception>
        <exception cref="T:System.Net.WebException">A connection to the FTP server could not be established.</exception>
        <exception cref="T:System.Net.ProtocolViolationException">The <see cref="P:System.Net.FtpWebRequest.Method" /> property is not set to <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" />.</exception>
        <block subset="none" type="usage">
          <para>Questo metodo genera traffico di rete.</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetResponse (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
        <param name="state">A user-defined object that contains information about the operation. This object is passed to the <c>callback</c> delegate when the operation completes.</param>
        <summary>Begins sending a request and receiving a response from an FTP server asynchronously.</summary>
        <returns>An <see cref="T:System.IAsyncResult" /> instance that indicates the status of the operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario completare l'operazione asincrona chiamando il <xref:System.Net.FtpWebRequest.EndGetResponse%2A> metodo. In genere <xref:System.Net.FtpWebRequest.EndGetResponse%2A> viene chiamato dal metodo a cui fanno riferimento `callback`. Per determinare lo stato dell'operazione, verificare le proprietà di <xref:System.IAsyncResult> oggetto restituito dal <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> (metodo).  
  
 Se il <xref:System.Net.FtpWebRequest.Proxy%2A> è impostata, sia direttamente o in un file di configurazione, le comunicazioni con il server FTP vengono effettuate tramite il proxy specificato.  
  
 <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> non è bloccata durante l'attesa di risposta dal server. Per il blocco, chiamare il <xref:System.Net.FtpWebRequest.GetResponse%2A> metodo anziché <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>.  
  
 Per ulteriori informazioni sull'uso del modello di programmazione asincrono, vedere [la chiamata dei metodi sincroni](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
 Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
> [!NOTE]
>  Se un <xref:System.Net.WebException> viene generata, utilizzare il <xref:System.Net.WebException.Response%2A> e <xref:System.Net.WebException.Status%2A> le proprietà dell'eccezione per determinare la risposta dal server.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato che termina un'operazione asincrona per ottenere il flusso della richiesta e quindi avviare una richiesta per ottenere la risposta. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Net.FtpWebRequest> Cenni preliminari sulla classe.  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Net.FtpWebRequest.GetResponse" /> or <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> has already been called for this instance.</exception>
        <block subset="none" type="usage">
          <para>Questo metodo genera traffico di rete.</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); void set(System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection with get, set" Usage="System.Net.FtpWebRequest.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the certificates used for establishing an encrypted connection to the FTP server.</summary>
        <value>Oggetto <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> che contiene i certificati client.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I certificati client vengono utilizzati per autenticare il client durante la negoziazione della connessione SSL iniziale. Per altre informazioni, vedere <xref:System.Net.FtpWebRequest.EnableSsl%2A>.  
  
> [!NOTE]
>  .NET Framework vengono memorizzati nella cache le sessioni SSL quando vengono creati e tenta di riutilizzare una sessione memorizzati nella cache per una nuova richiesta, se possibile. Quando si tenta di riutilizzare una sessione SSL, .NET Framework viene utilizzato il primo elemento della <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (se è presente uno), o tenta di riutilizzare una sessione anonima se <xref:System.Net.HttpWebRequest.ClientCertificates%2A> è vuoto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The value specified for a set operation is <see langword="null" />.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public override string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the connection group that contains the service point used to send the current request.</summary>
        <value>Valore <see cref="T:System.String" /> che contiene il nome di un gruppo di connessione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I gruppi di connessione associano una serie di richieste di una determinata connessione o un set di connessioni. Le connessioni in un gruppo di connessione possono essere riutilizzate solo per le richieste provenienti nello stesso dominio applicazione, quando le credenziali nella richiesta sono uguali e se la richiesta specifica il nome del gruppo di connessione. Quando una richiesta non specifica il nome di un gruppo di connessione, tutte le connessioni esistenti per il server richiesto non è associato a un gruppo di connessione è utilizzabile. Quando le credenziali non corrispondono, viene chiusa la connessione esistente e deve essere autenticata nuovamente la nuova richiesta.  
  
 Uso dei gruppi di connessione può migliorare le prestazioni perché in questo modo tutte le richieste per un utente di riutilizzare la connessione autenticata con le credenziali dell'utente.  
  
 Modifica il <xref:System.Net.FtpWebRequest.ConnectionGroupName%2A> dopo la chiamata il <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> (eccezione).  
  
   
  
## Examples  
 Esempio di codice seguente recupera il valore di questa proprietà.  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A new value was specified for this property for a request that is already in progress.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that is ignored by the <see cref="T:System.Net.FtpWebRequest" /> class.</summary>
        <value>Valore <see cref="T:System.Int64" /> che deve essere ignorato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.ContentLength%2A> proprietà viene fornita solo per compatibilità con altre implementazioni del <xref:System.Net.WebRequest> e <xref:System.Net.WebResponse> classi. Non c'è alcun motivo per utilizzare <xref:System.Net.FtpWebRequest.ContentLength%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentOffset">
      <MemberSignature Language="C#" Value="public long ContentOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentOffset" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentOffset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentOffset { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentOffset : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a byte offset into the file being downloaded by this request.</summary>
        <value>Istanza di <see cref="T:System.Int64" /> che specifica l'offset del file in byte. Il valore predefinito è zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare il <xref:System.Net.FtpWebRequest.ContentOffset%2A> proprietà durante il download di un file da un server FTP. Questo offset indica la posizione nel file del server che contrassegna l'inizio dei dati da scaricare. L'offset è specificato come il numero di byte dall'inizio del file. l'offset del primo byte è zero.  
  
 L'impostazione <xref:System.Net.FtpWebRequest.ContentOffset%2A> fa sì che il <xref:System.Net.FtpWebRequest> per inviare un riavvio (`REST`) comando al server. Questo comando viene ignorato dalla maggior parte delle implementazioni server FTP se si siano caricando dati al server.  
  
 Modifica <xref:System.Net.FtpWebRequest.ContentOffset%2A> dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> (eccezione).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato il download di parte di un file da un server e aggiunta dei dati scaricati in un file locale.  
  
 [!code-cpp[NclFtpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#7)]
 [!code-csharp[NclFtpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A new value was specified for this property for a request that is already in progress.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The value specified for this property is less than zero.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.FtpWebRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Always throws a <see cref="T:System.NotSupportedException" />.</summary>
        <value>Genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.ContentType%2A> proprietà viene fornita solo per compatibilità con altre implementazioni del <xref:System.Net.WebRequest> e <xref:System.Net.WebResponse> classi. Non c'è alcun motivo per utilizzare <xref:System.Net.FtpWebRequest.ContentType%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Content type information is not supported for FTP.</exception>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.FtpWebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the credentials used to communicate with the FTP server.</summary>
        <value>Istanza di <see cref="T:System.Net.ICredentials" />; in caso contrario, <see langword="null" /> se la proprietà non è stata impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è necessario specificare le credenziali quando ci si connette tramite accesso anonimo. È necessario impostare il <xref:System.Net.FtpWebRequest.Credentials%2A> proprietà utilizzando una credenziale di tipo <xref:System.Net.NetworkCredential>; Ciò assicura che il nome utente e la password può essere letti e inviati al server.  
  
> [!CAUTION]
>  Informazioni sulle credenziali non crittografate quando vengono trasmessi al server, a meno che il <xref:System.Net.FtpWebRequest.EnableSsl%2A> è impostata su `true`.  
  
 Modifica <xref:System.Net.FtpWebRequest.Credentials%2A> dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> (eccezione).  
  
   
  
## Examples  
 Esempio di codice seguente recupera il valore di questa proprietà e lo usa per visualizzare il nome utente.  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The value specified for a set operation is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">An <see cref="T:System.Net.ICredentials" /> of a type other than <see cref="T:System.Net.NetworkCredential" /> was specified for a set operation.</exception>
        <exception cref="T:System.InvalidOperationException">A new value was specified for this property for a request that is already in progress.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Defines the default cache policy for all FTP requests.</summary>
        <value>Classe <see cref="T:System.Net.Cache.RequestCachePolicy" /> che definisce i criteri della cache per le richieste FTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Solo il contenuto ricevuto utilizzando il <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> comando viene memorizzato nella cache.  
  
 Nella tabella seguente vengono descritti gli effetti di criteri di memorizzazione nella cache su FTP <xref:System.Net.FtpWebRequest>.  
  
|Criteri|Effetto|  
|------------|------------|  
|<xref:System.Net.Cache.RequestCacheLevel.Default>|Restituisce la risorsa memorizzati nella cache se la risorsa viene aggiornata, la lunghezza del contenuto è precisa e la scadenza, modifica e gli attributi di lunghezza del contenuto sono presenti.|  
|<xref:System.Net.Cache.RequestCacheLevel.BypassCache>|Restituisce la risorsa dal server.|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheOnly>|Restituisce la risorsa memorizzati nella cache se la lunghezza del contenuto è presente e corrisponde alla dimensione voce; in caso contrario, genera un <xref:System.Net.WebException>.|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheIfAvailable>|Restituisce la risorsa memorizzati nella cache se la lunghezza del contenuto viene fornita e corrisponde alla dimensione dell'elemento; in caso contrario, la risorsa viene scaricata dal server e viene restituita al chiamante.|  
|<xref:System.Net.Cache.RequestCacheLevel.Revalidate>|Restituisce la risorsa memorizzati nella cache, se il timestamp della risorsa nella cache corrisponde al timestamp della risorsa del server. in caso contrario, la risorsa viene scaricata dal server di, memorizzata nella cache e restituita al chiamante.|  
|<xref:System.Net.Cache.RequestCacheLevel.Reload>|Scarica la risorsa dal server, viene memorizzato nella cache e la risorsa viene restituito al chiamante.|  
|<xref:System.Net.Cache.RequestCacheLevel.NoCacheNoStore>|Se esiste una risorsa memorizzati nella cache, questo viene eliminato. La risorsa viene scaricata dal server e viene restituita al chiamante.|  
  
> [!NOTE]
>  Impostazione <xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A> sostituisce qualsiasi impostazione di configurazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The caller tried to set this property to <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.FtpWebRequest.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Boolean" /> that specifies that an SSL connection should be used.</summary>
        <value>
          <see langword="true" /> se le trasmissioni di controllo e dati sono crittografate; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  A meno che il <xref:System.Net.FtpWebRequest.EnableSsl%2A> proprietà `true`, tutti i dati e comandi, incluse le informazioni utente il nome e la password vengono inviati al server come testo non crittografato. Chiunque monitoraggio del traffico di rete può visualizzare le credenziali e utilizzarle per connettersi al server. Se ci si connette a un server FTP che richiede le credenziali e supporta SSL, è necessario impostare <xref:System.Net.FtpWebRequest.EnableSsl%2A> a `true`.  
  
 Il `"AUTH TLS"` comando viene inviato al server per richiedere una sessione crittografata. Se il server non riconosce questo comando, si riceve un <xref:System.Net.WebException> (eccezione).  
  
   
  
## Examples  
 Esempio di codice seguente usa una connessione crittografata per scaricare l'elenco delle directory da un server FTP.  
  
 [!code-cpp[NCLFtpClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#8)]
 [!code-csharp[NCLFtpClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The connection to the FTP server has already been established.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="ftpWebRequest.EndGetRequestStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> object that was returned when the operation started.</param>
        <summary>Ends a pending asynchronous operation started with <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</summary>
        <returns>A writable <see cref="T:System.IO.Stream" /> instance associated with this instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'operazione non è stata completata, il <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> metodo mantiene il blocco fino al completamento dell'operazione. Per determinare se l'operazione è stata completata, controllare la <xref:System.IAsyncResult.IsCompleted%2A> proprietà prima di chiamare <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>.  
  
 Oltre alle eccezioni elencate in "Eccezioni" <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> genera nuovamente le eccezioni generate durante l'apertura del flusso per la scrittura.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato che termina un'operazione asincrona per ottenere il flusso della richiesta. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Net.FtpWebRequest> Cenni preliminari sulla classe.  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</exception>
        <exception cref="T:System.InvalidOperationException">This method was already called for the operation identified by <paramref name="asyncResult" />.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="ftpWebRequest.EndGetResponse asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that was returned when the operation started.</param>
        <summary>Ends a pending asynchronous operation started with <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</summary>
        <returns>A <see cref="T:System.Net.WebResponse" /> reference that contains an <see cref="T:System.Net.FtpWebResponse" /> instance. This object contains the FTP server's response to the request.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'operazione non è stata completata al momento il <xref:System.Net.FtpWebRequest.EndGetResponse%2A> viene chiamato, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> bloccata fino al completamento dell'operazione. Per evitare il blocco, controllare la <xref:System.IAsyncResult.IsCompleted%2A> proprietà prima di chiamare <xref:System.Net.FtpWebRequest.EndGetResponse%2A>.  
  
 Oltre alle eccezioni elencate in "Eccezioni" <xref:System.Net.FtpWebRequest.EndGetResponse%2A> genera nuovamente le eccezioni generate durante la comunicazione con il server.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato che termina un'operazione asincrona per ottenere una risposta. Questo esempio di codice fa parte di un esempio più esaustivo disponibile per il <xref:System.Net.FtpWebRequest> Cenni preliminari sulla classe.  
  
 [!code-cpp[NCLFtpAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#6)]
 [!code-csharp[NCLFtpAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
        <exception cref="T:System.InvalidOperationException">This method was already called for the operation identified by <paramref name="asyncResult" />.</exception>
        <exception cref="T:System.Net.WebException">An error occurred using an HTTP proxy.</exception>
        <block subset="none" type="usage">
          <para>Questo metodo genera traffico di rete.</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="M:System.Net.FtpWebRequest.GetResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="ftpWebRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the stream used to upload data to an FTP server.</summary>
        <returns>A writable <see cref="T:System.IO.Stream" /> instance used to store data to be sent to the server by the current request.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare le proprietà della richiesta prima di chiamare il <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metodo. Dopo la scrittura dei dati nel flusso, è necessario chiudere il flusso prima dell'invio della richiesta.  
  
 Se non è stato impostato il <xref:System.Net.FtpWebRequest.Method%2A> proprietà da <xref:System.Net.WebRequestMethods.Ftp.UploadFile> o <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, non è possibile ottenere il flusso.  
  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A> blocchi durante l'attesa per il flusso. Per evitare questo problema, chiamare il <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> metodo anziché <xref:System.Net.FtpWebRequest.GetRequestStream%2A>.  
  
> [!NOTE]
>  Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Esempio di codice seguente illustra la copia di un file di flusso di dati della richiesta e inviare una richiesta al server per caricare i dati e li aggiunge a un file.  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> has been called and has not completed.  \- or -  An HTTP proxy is enabled, and you attempted to use an FTP command other than <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />, or <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</exception>
        <exception cref="T:System.Net.WebException">A connection to the FTP server could not be established.</exception>
        <exception cref="T:System.Net.ProtocolViolationException">The <see cref="P:System.Net.FtpWebRequest.Method" /> property is not set to <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> or <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" />.</exception>
        <block subset="none" type="usage">
          <para>Questo metodo genera traffico di rete.</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="ftpWebRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the FTP server response.</summary>
        <returns>A <see cref="T:System.Net.WebResponse" /> reference that contains an <see cref="T:System.Net.FtpWebResponse" /> instance. This object contains the FTP server's response to the request.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per accedere alle proprietà specifici del FTP, è necessario eseguire il cast di <xref:System.Net.WebResponse> oggetto restituito da questo metodo per <xref:System.Net.FtpWebResponse>.  
  
 <xref:System.Net.FtpWebRequest.GetResponse%2A> fa sì che venga stabilita una connessione di controllo e potrebbe anche creare una connessione dati. <xref:System.Net.FtpWebRequest.GetResponse%2A> si blocca fino a quando non viene ricevuta la risposta. Per evitare questo problema, è possibile eseguire questa operazione in modo asincrono chiamando il <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> e <xref:System.Net.FtpWebRequest.EndGetResponse%2A> metodi anziché <xref:System.Net.FtpWebRequest.GetResponse%2A>.  
  
 Se il <xref:System.Net.FtpWebRequest.Proxy%2A> è impostata, sia direttamente o in un file di configurazione, le comunicazioni con il server FTP vengono effettuate tramite il proxy.  
  
 Se un <xref:System.Net.WebException> viene generata, utilizzare il <xref:System.Net.WebException.Response%2A> e <xref:System.Net.WebException.Status%2A> le proprietà dell'eccezione per determinare la risposta dal server.  
  
 Questo membro genera informazioni di traccia quando viene abilitata la funzionalità di traccia di rete nell'applicazione in uso. Per altre informazioni, vedere [la traccia di rete in .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
> [!NOTE]
>  Più chiamate al metodo <xref:System.Net.FtpWebRequest.GetResponse%2A> restituire lo stesso oggetto risposta; la richiesta non è stata rilasciata.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato copia un file di flusso di dati della richiesta e inviare una richiesta per aggiungere dati a un file al server. Nell'esempio viene chiamato <xref:System.Net.FtpWebRequest.GetResponse%2A> per inviare la richiesta e blocca fino a quando non viene restituita la risposta dal server.  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Net.FtpWebRequest.GetResponse" /> or <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> has already been called for this instance.  \- or -  An HTTP proxy is enabled, and you attempted to use an FTP command other than <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />, or <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.FtpWebRequest.EnableSsl" /> is set to <see langword="true" />, but the server does not support this feature.  \- or -  A <see cref="P:System.Net.FtpWebRequest.Timeout" /> was specified and the timeout has expired.</exception>
        <block subset="none" type="usage">
          <para>Questo metodo genera traffico di rete.</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.FtpWebRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an empty <see cref="T:System.Net.WebHeaderCollection" /> object.</summary>
        <value>Oggetto <see cref="T:System.Net.WebHeaderCollection" /> vuoto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.Headers%2A> proprietà viene fornita solo per compatibilità con altre implementazioni del <xref:System.Net.WebRequest> e <xref:System.Net.WebResponse> classi. Non c'è alcun motivo per utilizzare <xref:System.Net.FtpWebRequest.Headers%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.Net.FtpWebRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("We don't support KeepAlive = true")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the control connection to the FTP server is closed after the request completes.</summary>
        <value>
          <see langword="true" /> se la connessione al server non deve essere eliminata; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando il <xref:System.Net.FtpWebRequest.KeepAlive%2A> è impostata su `false`, la connessione di controllo viene chiuso quando si chiama il <xref:System.Net.FtpWebResponse.Close%2A> metodo.  
  
 Modifica <xref:System.Net.FtpWebRequest.KeepAlive%2A> dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> (eccezione).  
  
   
  
## Examples  
 Esempio di codice seguente recupera e visualizza i valori delle proprietà per un determinato <xref:System.Net.FtpWebRequest> oggetto.  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A new value was specified for this property for a request that is already in progress.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public override string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.FtpWebRequest.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the command to send to the FTP server.</summary>
        <value>Valore <see cref="T:System.String" /> che contiene il comando FTP da inviare al server. Il valore predefinito è <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.Method%2A> proprietà determina quale comando viene inviato al server. È impostato il <xref:System.Net.FtpWebRequest.Method%2A> utilizzando le stringhe definite nei membri di campo pubblico del <xref:System.Net.WebRequestMethods.Ftp> classe. Si noti che le stringhe definite nel <xref:System.Net.WebRequestMethods.Ftp> classe sono le uniche opzioni supportate per il <xref:System.Net.FtpWebRequest.Method%2A> proprietà. Impostazione di <xref:System.Net.FtpWebRequest.Method%2A> qualsiasi altro valore della proprietà comporterà un <xref:System.ArgumentException> (eccezione).  
  
 Quando si imposta <xref:System.Net.FtpWebRequest.Method%2A> al <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, è necessario farlo prima di chiamare il <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metodo. Tentativo di chiamare i membri nell'ordine corretto cause un <xref:System.Net.ProtocolViolationException> eccezione quando si tenta di ottenere il flusso di richiesta.  
  
 Le credenziali fornite per il <xref:System.Net.FtpWebRequest> oggetto deve disporre dell'autorizzazione per eseguire il metodo specificato. In caso contrario, il comando FTP non riesce.  
  
 Per determinare l'esito positivo o negativo di un comando, controllare la <xref:System.Net.FtpWebResponse.StatusCode%2A> e <xref:System.Net.FtpWebResponse.StatusDescription%2A> proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente imposta questa proprietà su <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A new value was specified for this property for a request that is already in progress.</exception>
        <exception cref="T:System.ArgumentException">The method is invalid.  \- or -  The method is not supported.  \- or -  Multiple methods were specified.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public override bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Always throws a <see cref="T:System.NotSupportedException" />.</summary>
        <value>Genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.PreAuthenticate%2A> proprietà viene fornita solo per compatibilità con altre implementazioni del <xref:System.Net.WebRequest> e <xref:System.Net.WebResponse> classi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Preauthentication is not supported for FTP.</exception>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public override System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.FtpWebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the proxy used to communicate with the FTP server.</summary>
        <value>Istanza di <see cref="T:System.Net.IWebProxy" /> responsabile della comunicazione con il server FTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.Proxy%2A> proprietà identifica il <xref:System.Net.IWebProxy> istanza che comunica con il server FTP. Il proxy è impostato dal sistema tramite i file di configurazione e le impostazioni di rete locale di Internet Explorer. Per specificare che deve essere utilizzato alcun proxy, impostare <xref:System.Net.FtpWebRequest.Proxy%2A> all'istanza del proxy restituito dal <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType> metodo. Per ulteriori informazioni sul rilevamento automatico proxy, vedere [il rilevamento automatico Proxy](~/docs/framework/network-programming/automatic-proxy-detection.md).  
  
 È necessario impostare <xref:System.Net.FtpWebRequest.Proxy%2A> prima di scrivere dati nel flusso della richiesta o ottenuto la risposta. Modifica <xref:System.Net.FtpWebRequest.Proxy%2A> dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> (eccezione).  
  
 Il <xref:System.Net.FtpWebRequest> supporta la classe proxy HTTP e Client Firewall ISA.  
  
 Se il proxy specificato è un proxy HTTP, solo il <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, e <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> sono supportati.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare il valore della proprietà.  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">This property cannot be set to <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A new value was specified for this property for a request that is already in progress.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
      </Docs>
    </Member>
    <Member MemberName="ReadWriteTimeout">
      <MemberSignature Language="C#" Value="public int ReadWriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadWriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadWriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadWriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadWriteTimeout : int with get, set" Usage="System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a time-out when reading from or writing to a stream.</summary>
        <value>Il numero di millisecondi prima che si verifichi il timeout di scrittura o di lettura. Il valore predefinito è 300.000 millisecondi (5 minuti).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> viene utilizzata per la scrittura nel flusso restituito dal <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metodo o leggere il flusso restituito dal <xref:System.Net.FtpWebResponse.GetResponseStream%2A> metodo.  
  
 In particolare, il <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> proprietà controlla il timeout per il <xref:System.IO.Stream.Read%2A> metodo, che viene utilizzato per leggere il flusso restituito dal <xref:System.Net.FtpWebResponse.GetResponseStream%2A> metodo e per il <xref:System.IO.Stream.Write%2A> metodo, che consente di scrivere nel flusso restituito dal <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metodo. Se il periodo di timeout viene superato, la chiamata al metodo genera una <xref:System.Net.WebException> con <xref:System.Net.WebExceptionStatus> impostato su <xref:System.Net.WebExceptionStatus.Timeout>.  
  
 Per specificare la quantità di tempo di attesa del completamento della richiesta, utilizzare il <xref:System.Net.FtpWebRequest.Timeout%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The request has already been sent.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than or equal to zero and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RenameTo">
      <MemberSignature Language="C#" Value="public string RenameTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RenameTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RenameTo" />
      <MemberSignature Language="VB.NET" Value="Public Property RenameTo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RenameTo { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenameTo : string with get, set" Usage="System.Net.FtpWebRequest.RenameTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the new name of a file being renamed.</summary>
        <value>Nuovo nome del file rinominato.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The value specified for a set operation is <see langword="null" /> or an empty string.</exception>
        <exception cref="T:System.InvalidOperationException">A new value was specified for this property for a request that is already in progress.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.FtpWebRequest.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the URI requested by this instance.</summary>
        <value>Istanza di <see cref="T:System.Uri" /> che identifica una risorsa a cui si accede tramite FTP (File Transfer Protocol).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore della <xref:System.Net.FtpWebRequest.RequestUri%2A> proprietà è l'URI specificato quando il <xref:System.Net.WebRequest.Create%2A> metodo è stato chiamato per ottenere questa istanza.  
  
   
  
## Examples  
 Esempio di codice seguente consente di visualizzare il valore della proprietà.  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.FtpWebRequest.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Net.ServicePoint" /> object used to connect to the FTP server.</summary>
        <value>Oggetto <see cref="T:System.Net.ServicePoint" /> che può essere usato per personalizzare il comportamento della connessione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se nessuna <xref:System.Net.ServicePoint> oggetto esiste, ne viene creata per il server FTP. Per impostare il numero massimo di connessioni che possono essere aperti per un server FTP, impostare il <xref:System.Net.ServicePoint.ConnectionLimit%2A> proprietà del <xref:System.Net.ServicePoint> istanza restituita da questa proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente recupera il punto di servizio da una richiesta e imposta il numero massimo di connessioni a uno.  
  
 [!code-cpp[NCLFtpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#1)]
 [!code-csharp[NCLFtpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.FtpWebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of milliseconds to wait for a request.</summary>
        <value>Valore <see cref="T:System.Int32" /> in cui è contenuto il numero di millisecondi di attesa prima che si verifichi il timeout di una richiesta. Il valore predefinito è <see cref="F:System.Threading.Timeout.Infinite" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per specificare un valore infinito, impostare il <xref:System.Net.FtpWebRequest.Timeout%2A> proprietà <xref:System.Threading.Timeout.Infinite> (-1). Rappresenta il valore predefinito.  
  
 <xref:System.Net.FtpWebRequest.Timeout%2A> è il numero di millisecondi che ha effettuata una richiesta sincrona con il <xref:System.Net.FtpWebRequest.GetResponse%2A> metodo attende una risposta e che il <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metodo attende per un flusso. Se una risorsa non risponde entro il periodo di timeout, la richiesta genera una <xref:System.Net.WebException> con il <xref:System.Net.WebException.Status%2A> impostata su <xref:System.Net.WebExceptionStatus.Timeout>.  
  
 Modifica <xref:System.Net.FtpWebRequest.Timeout%2A> dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> (eccezione).  
  
 Una query di sistema DNS (Domain Name) può richiedere fino a 15 secondi per la restituzione o il timeout. Se la richiesta contiene un nome host che richiede la risoluzione e imposta <xref:System.Net.FtpWebRequest.Timeout%2A> su un valore inferiore a 15 secondi, potrebbe richiedere più di 15 secondi prima di un <xref:System.Net.WebException> viene generata per indicare un timeout della richiesta.  
  
   
  
## Examples  
 Esempio di codice seguente imposta questa proprietà.  
  
 [!code-cpp[NCLFtpClient#23](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#23)]
 [!code-csharp[NCLFtpClient#23](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The value specified is less than zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
        <exception cref="T:System.InvalidOperationException">A new value was specified for this property for a request that is already in progress.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseBinary">
      <MemberSignature Language="C#" Value="public bool UseBinary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseBinary" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseBinary" />
      <MemberSignature Language="VB.NET" Value="Public Property UseBinary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseBinary { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseBinary : bool with get, set" Usage="System.Net.FtpWebRequest.UseBinary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies the data type for file transfers.</summary>
        <value>
          <see langword="true" /> per indicare al server che i dati da trasferire sono binari; <see langword="false" /> per indicare che i dati sono in formato testo. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si inviano binario dei dati, ad esempio un'immagine, impostare questa proprietà su `true`. Se si inviano testo, impostare la proprietà su `false`. Che specifica `true` fa sì che il <xref:System.Net.FtpWebRequest> per inviare un `"TYPE I"` comando al server. Che specifica `false` fa sì che il <xref:System.Net.FtpWebRequest> per inviare un `"Type A"` comando al server. Server FTP è possibile ignorare questi comandi.  
  
 Modifica <xref:System.Net.FtpWebRequest.UseBinary%2A> dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> (eccezione).  
  
   
  
## Examples  
 Esempio di codice seguente recupera e visualizza i valori delle proprietà per un determinato <xref:System.Net.FtpWebRequest> oggetto.  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A new value was specified for this property for a request that is already in progress.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public override bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Always throws a <see cref="T:System.NotSupportedException" />.</summary>
        <value>Genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A> proprietà viene fornita solo per compatibilità con altre implementazioni del <xref:System.Net.WebRequest> e <xref:System.Net.WebResponse> classi. Non c'è alcun motivo per utilizzare <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Default credentials are not supported for FTP.</exception>
      </Docs>
    </Member>
    <Member MemberName="UsePassive">
      <MemberSignature Language="C#" Value="public bool UsePassive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePassive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UsePassive" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePassive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePassive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePassive : bool with get, set" Usage="System.Net.FtpWebRequest.UsePassive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the behavior of a client application's data transfer process.</summary>
        <value>
          <see langword="false" /> se il processo di trasferimento dei dati dell'applicazione client attende una connessione sulla porta dati; in caso contrario, <see langword="true" /> se il client deve avviare una connessione sulla porta dati. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostazione di <xref:System.Net.FtpWebRequest.UsePassive%2A> proprietà da `true` invia il "`PASV"` comando al server. Questo comando richiede al server per l'ascolto su una porta di dati e di attesa per una connessione, anziché avviare uno al momento della ricezione di un comando di trasferimento.  
  
 Per una descrizione dei comportamenti che sono specificate mediante <xref:System.Net.FtpWebRequest.UsePassive%2A>, vedere [RFC 959: "File Transfer Protocol", sezione 3.2: "Tentativo di stabilire connessioni di dati" e sezione 4.1.2: "Transfer Parameter Commands"](https://www.ietf.org/rfc/rfc959.txt).  
  
 Modifica <xref:System.Net.FtpWebRequest.UsePassive%2A> dopo la chiamata di <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metodo provoca un <xref:System.InvalidOperationException> (eccezione).  
  
 Se <xref:System.Net.FtpWebRequest.UsePassive%2A> è impostata su `true`, server FTP non può inviare le dimensioni del file e lo stato di avanzamento di download può essere sempre zero. Se <xref:System.Net.FtpWebRequest.UsePassive%2A> è impostata su `false`, un firewall può generare un avviso e bloccare il download del file.  
  
   
  
## Examples  
 Esempio di codice seguente recupera e visualizza i valori delle proprietà per un determinato <xref:System.Net.FtpWebRequest> oggetto.  
  
 [!code-cpp[NCLFtpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#6)]
 [!code-csharp[NCLFtpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A new value was specified for this property for a request that is already in progress.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
  </Members>
</Type>