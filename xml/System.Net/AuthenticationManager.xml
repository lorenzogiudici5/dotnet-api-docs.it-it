<Type Name="AuthenticationManager" FullName="System.Net.AuthenticationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1a0f9aa5169b172cc926e0915d06e5d5dfc19af4" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37643624" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AuthenticationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.AuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationManager" />
  <TypeSignature Language="F#" Value="type AuthenticationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gestisce i moduli di autenticazione chiamati durante il processo di autenticazione del client.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager> è una classe statica che gestisce i moduli di autenticazione utilizzati da un'applicazione. Quando viene effettuata una richiesta a risorse protette, il <xref:System.Net.AuthenticationManager> chiama il <xref:System.Net.AuthenticationManager.Authenticate%2A> metodo per ottenere un <xref:System.Net.Authorization> istanza da utilizzare nelle richieste successive.  
  
 Il <xref:System.Net.AuthenticationManager> esegue una query ogni modulo di autenticazione registrati chiamando il <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> metodo per ogni modulo. Il primo modulo di autenticazione per restituire un <xref:System.Net.Authorization> istanza viene usata per autenticare la richiesta.  
  
 I moduli che forniscono il base, digest, negotiate, NTLM, e i tipi di autenticazione Kerberos sono registrati con il <xref:System.Net.AuthenticationManager> per impostazione predefinita. I moduli di autenticazione aggiuntive che implementano il <xref:System.Net.IAuthenticationModule> interfaccia può essere aggiunto usando il <xref:System.Net.AuthenticationManager.Register%2A> (metodo). I moduli di autenticazione vengono chiamati nell'ordine in cui sono stati aggiunti all'elenco.  
  
> [!NOTE]
>  Kerberos e negotiate tipo di autenticazione non è supportato in Windows 95 o 98 o Windows NT 4.0.  
  
   
  
## Examples  
 [!code-cpp[System.Net.Authentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#1)]
 [!code-csharp[System.Net.Authentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#1)]
 [!code-vb[System.Net.Authentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization Authenticate(string challenge, class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (challenge As String, request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ Authenticate(System::String ^ challenge, System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member Authenticate : string * System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.Authenticate (challenge, request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challenge" Type="System.String" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="challenge">La richiesta restituita dalla risorsa Internet.</param>
        <param name="request">La <see cref="T:System.Net.WebRequest" />che ha iniziato la richiesta di autenticazione.</param>
        <param name="credentials">Le <see cref="T:System.Net.ICredentials" /> associate alla richiesta.</param>
        <summary>Chiama ciascun modulo di autenticazione registrato per individuare il primo modulo in grado di rispondere alla richiesta di autenticazione.</summary>
        <returns>Istanza della classe <see cref="T:System.Net.Authorization" /> contenente il risultato del tentativo di autorizzazione. Se non è presente alcun modulo di autenticazione in grado di rispondere alla richiesta, il metodo restituirà <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.AuthenticationManager.Authenticate%2A> chiamate al metodo il <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> metodo su ogni modulo di autenticazione registrati fino a quando non uno del modulo risponde con un <xref:System.Net.Authorization> istanza.  
  
 Il primo <xref:System.Net.Authorization> istanza restituita viene usata per autenticare la richiesta. Se nessun modulo di autenticazione può autenticare la richiesta, il <xref:System.Net.AuthenticationManager.Authenticate%2A> restituzione del metodo `null`.  
  
 I moduli di autenticazione vengono chiamati nell'ordine in cui sono registrati con il <xref:System.Net.AuthenticationManager>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="challenge" /> è <see langword="null" />.  - oppure - <paramref name="request" /> è <see langword="null" />.  - oppure - <paramref name="credentials" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CredentialPolicy">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentialPolicy CredentialPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CredentialPolicy As ICredentialPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentialPolicy ^ CredentialPolicy { System::Net::ICredentialPolicy ^ get(); void set(System::Net::ICredentialPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CredentialPolicy : System.Net.ICredentialPolicy with get, set" Usage="System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta i criteri delle credenziali da utilizzare per le richieste di risorse mediante la classe <see cref="T:System.Net.HttpWebRequest" />.</summary>
        <value>Oggetto che implementa l'interfaccia <see cref="T:System.Net.ICredentialPolicy" /> che determina se le credenziali vengono inviate con le richieste. Il valore predefinito è <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I criteri delle credenziali determinano se inviare le credenziali quando si invia una richiesta per una risorsa di rete, ad esempio, il contenuto di una pagina Web. Se le credenziali vengono inviate, è possono i server che richiedono l'autenticazione client tentare l'autenticazione del client anziché inviare una risposta che indica che sono necessarie le credenziali del client viene ricevuta la richiesta. Anche se si salva un round trip al server, tale operazione deve essere bilanciata contro il rischio di sicurezza intrinseco in invia credenziali attraverso la rete. Quando il server di destinazione non richiede l'autenticazione client è consigliabile non inviare le credenziali.  
  
 I criteri delle credenziali verranno chiamato solo per le richieste che specificano le credenziali o usano un <xref:System.Net.WebProxy> oggetto che specifica le credenziali.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'impostazione di criteri delle credenziali.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomTargetNameDictionary">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.StringDictionary CustomTargetNameDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CustomTargetNameDictionary As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::StringDictionary ^ CustomTargetNameDictionary { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomTargetNameDictionary : System.Collections.Specialized.StringDictionary" Usage="System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il dizionario che contiene l'SPN (Service Principal Name, Nome principale servizio) utilizzato per identificare gli host durante l'autenticazione Kerberos per le richieste mediante <see cref="T:System.Net.WebRequest" /> e le relative classi derivate.</summary>
        <value>Classe <see cref="T:System.Collections.Specialized.StringDictionary" /> modificabile che contiene i valori SPN per chiavi composte di informazioni sull'host.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un nome SPN è un nome con cui un client identifica in modo univoco un'istanza di un servizio o applicazione in un server ai fini dell'autenticazione reciproca. È richiesta l'autenticazione reciproca per impostazione predefinita e può richiederla impostando <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=nameWithType> a <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired> nella richiesta.  
  
 Quando un <xref:System.Net.WebRequest> richiede l'autenticazione reciproca, il nome SPN per la destinazione deve essere fornita dal client. Se si conosce il nome SPN, è possibile aggiungerlo al <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> prima dell'invio della richiesta. Se le informazioni di nome SPN non è stato aggiunto a questo dizionario, la <xref:System.Net.AuthenticationManager> utilizza il <xref:System.Net.WebRequest.RequestUri%2A> metodo per comporre il SPN probabilmente; tuttavia, questo è un valore calcolato e potrebbe non essere corretto. Se viene tentata l'autenticazione reciproca e ha esito negativo, è possibile controllare il dizionario per determinare il nome SPN calcolato. Se il protocollo di autenticazione non supporta l'autenticazione reciproca, nel dizionario non viene immesso alcun nome SPN.  
  
 Per aggiungere un valore SPN a questo dizionario, usare il <xref:System.Uri.AbsoluteUri%2A> del <xref:System.Net.WebRequest.RequestUri%2A> come chiave. Internamente, la chiave viene troncata in modo da includere il <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>e il <xref:System.Uri.Port%2A> se non è la porta predefinita.  
  
> [!NOTE]
>  Accesso ai metodi e proprietà del <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> richiede senza restrizioni <xref:System.Net.WebPermission>.  
  
> [!NOTE]
>  Quando viene eseguita l'autenticazione Kerberos tramite un proxy, il proxy sia il nome host finale devono essere risolte in un nome SPN. La risoluzione dei nomi del proxy è protetto da un timeout. Risoluzione del nome host finale per un nome SPN richiede una ricerca DNS e non vi è alcun timeout associate direttamente a questa operazione. Di conseguenza le operazioni sincrone possono richiedere più tempo per timeout. Per ovviare al problema, aggiungere un prefisso URI dell'host ultimate da memorizzare nella cache nome SPN prima di effettuare richieste a questo.  
  
 Nella versione 3.5 SP1, quando la proprietà <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> non è impostata, come stringa SPN nello scambio di autenticazione NTLM (NT LAN Manager) viene specificato per impostazione predefinita il nome host usato nell'URL della richiesta. Il nome host usato nell'URL della richiesta può essere diverso dall'intestazione Host specificata in <xref:System.Net.HttpRequestHeader?displayProperty=nameWithType> nella richiesta del client. Il nome host usato nell'URL della richiesta può essere diverso dal nome host effettivo del server, dal nome computer del server, dall'indirizzo IP del computer o dall'indirizzo di loopback. In questi casi la richiesta di autenticazione in Windows ha esito negativo. Per risolvere il problema, potrebbe essere necessario inviare una notifica di Windows che il nome host usato nell'URL della richiesta nel client di richiesta ("contoso", ad esempio) è in realtà un nome alternativo per il computer locale.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare il contenuto del <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>.  
  
 [!code-cpp[NclCredPolicy#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#5)]
 [!code-csharp[NclCredPolicy#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization PreAuthenticate(class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PreAuthenticate (request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ PreAuthenticate(System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member PreAuthenticate : System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.PreAuthenticate (request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="request">Una <see cref="T:System.Net.WebRequest" /> a una risorsa Internet.</param>
        <param name="credentials">Oggetto <see cref="T:System.Net.ICredentials" /> associato alla richiesta.</param>
        <summary>Preautentica una richiesta.</summary>
        <returns>Un'istanza della classe <see cref="T:System.Net.Authorization" /> se la richiesta può essere preautenticata. In caso contrario, <see langword="null" />. Se <paramref name="credentials" /> è <see langword="null" />, questo metodo restituisce <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il modulo di autenticazione è in grado di preautenticare la richiesta, il <xref:System.Net.AuthenticationManager.PreAuthenticate%2A> metodo restituisce un'istanza di autenticazione e invia le informazioni di autorizzazione al server modalità preemptive anziché attendere che la risorsa inviare una richiesta di verifica. Questo comportamento è descritto nella sezione 3.3 del RFC 2617 (HTTP Authentication: Basic and Digest Authentication accesso). I moduli di autenticazione che supportano la preautenticazione consentono ai client migliorare l'efficienza di server, evitando di round trip aggiuntivi causati da problemi di autenticazione.  
  
 Set di richieste di moduli di autorizzazione in grado di preautenticare il <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=nameWithType> proprietà `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Register : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Register authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule">Il <see cref="T:System.Net.IAuthenticationModule" /> da registrare con il gestore di autenticazione.</param>
        <summary>Registra un modulo di autenticazione con il gestore di autenticazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.AuthenticationManager.Register%2A> metodo aggiunge i moduli di autenticazione alla fine dell'elenco di moduli chiamati dal <xref:System.Net.AuthenticationManager.Authenticate%2A> (metodo). I moduli di autenticazione vengono chiamati nell'ordine in cui sono stati aggiunti all'elenco. Se un modulo con lo stesso <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> è già stato registrato, questo metodo rimuove il modulo registrato e aggiunge `authenticationModule` alla fine dell'elenco.  
  
   
  
## Examples  
 Nell'esempio seguente registra un modulo di autenticazione con il gestore di autenticazione. Per un esempio completo, consultare il <xref:System.Net.AuthenticationManager> classe.  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authenticationModule" /> è <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per l'esecuzione di codice non gestito. Enumerazione associata: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="RegisteredModules">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator RegisteredModules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerator RegisteredModules" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.RegisteredModules" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RegisteredModules As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerator ^ RegisteredModules { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegisteredModules : System.Collections.IEnumerator" Usage="System.Net.AuthenticationManager.RegisteredModules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera un elenco di moduli di autenticazione registrati con il gestore di autenticazione.</summary>
        <value>Una <see cref="T:System.Collections.IEnumerator" /> che consente la lettura dei moduli di autenticazione registrati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.AuthenticationManager.RegisteredModules%2A> proprietà fornisce un <xref:System.Collections.IEnumerator> registrata di istanza che consente l'elenco dei moduli di autenticazione da leggere. Il <xref:System.Net.AuthenticationManager.Register%2A> metodo consente di aggiungere moduli all'elenco e il <xref:System.Net.AuthenticationManager.Unregister%2A> metodo rimuove i moduli da quest'ultimo.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Net.AuthenticationManager.RegisteredModules%2A> proprietà da ottenere un elenco di moduli di autenticazione registrati con il gestore di autenticazione. Per un esempio completo, consultare il <xref:System.Net.AuthenticationManager> classe.  
  
 [!code-cpp[System.Net.Authentication#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#8)]
 [!code-csharp[System.Net.Authentication#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#8)]
 [!code-vb[System.Net.Authentication#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unregister">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rimuove i moduli di autenticazione dall'elenco di moduli registrati.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Unregister : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule">
          <see cref="T:System.Net.IAuthenticationModule" /> da rimuovere dall'elenco di moduli registrati.</param>
        <summary>Rimuove il modulo di autenticazione specificato dall'elenco di moduli registrati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.AuthenticationManager.Unregister%2A> metodo rimuove il modulo di autenticazione specificato dall'elenco dei moduli di autenticazione chiamati <xref:System.Net.AuthenticationManager.Authenticate%2A> (metodo). Il modulo deve essere aggiunto all'elenco utilizzando il <xref:System.Net.AuthenticationManager.Register%2A> metodo può essere rimosso dall'elenco.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Net.AuthenticationManager.Unregister%2A> metodo per rimuovere il modulo di autenticazione specificato dall'elenco di moduli registrati. Per un esempio completo, consultare il <xref:System.Net.AuthenticationManager> classe.  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authenticationModule" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Il <see cref="T:System.Net.IAuthenticationModule" /> specificato non è registrato.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per l'esecuzione di codice non gestito. Enumerazione associata: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string authenticationScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string authenticationScheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationScheme As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ authenticationScheme);" />
      <MemberSignature Language="F#" Value="static member Unregister : string -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationScheme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationScheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationScheme">La schema di autenticazione del modulo da rimuovere.</param>
        <summary>Rimuove i moduli di autenticazione con lo schema di autenticazione specificato dall'elenco di moduli registrati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.AuthenticationManager.Unregister%2A> metodo rimuove il modulo di autenticazione con lo schema di autenticazione specificato dall'elenco dei moduli di autenticazione chiamati <xref:System.Net.AuthenticationManager.Authenticate%2A> (metodo). Il modulo deve essere aggiunto all'elenco utilizzando il <xref:System.Net.AuthenticationManager.Register%2A> metodo può essere rimosso dall'elenco.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Net.AuthenticationManager.Unregister%2A> metodo per rimuovere un modulo di autenticazione con lo schema di autenticazione specificato dall'elenco di moduli registrati.  
  
 [!code-cpp[AuthenticationManager_UnRegister2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CPP/authenticationmanager_unregister2.cpp#2)]
 [!code-csharp[AuthenticationManager_UnRegister2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CS/authenticationmanager_unregister2.cs#2)]
 [!code-vb[AuthenticationManager_UnRegister2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/VB/authenticationmanager_unregister2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authenticationScheme" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La registrazione di un modulo per lo schema di autenticazione non è stata effettuata.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per l'esecuzione di codice non gestito. Enumerazione associata: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
  </Members>
</Type>