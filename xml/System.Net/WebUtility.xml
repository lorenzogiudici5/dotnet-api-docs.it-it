<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="897921efe400b6b55c24d5ca77b0f8414c09c181" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51912784" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type WebUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dff72-101">Fornisce metodi per la codifica e la decodifica degli URL durante l'elaborazione delle richieste Web.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dff72-101">Provides methods for encoding and decoding URLs when processing Web requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dff72-102">Il <xref:System.Web.HttpUtility> classe contiene la codifica e decodifica i metodi di utilità per l'uso con le stringhe con codifica HTML.</span><span class="sxs-lookup"><span data-stu-id="dff72-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="dff72-103">Il <xref:System.Uri?displayProperty=nameWithType> classe contiene inoltre i metodi e proprietà che possono essere usate per scopi simili.</span><span class="sxs-lookup"><span data-stu-id="dff72-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
    <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
      <span data-ttu-id="dff72-104">Procedura: protezione contro gli attacchi tramite Script in un'applicazione Web applicando la codifica HTML in stringhe</span>
      <span class="sxs-lookup">
        <span data-stu-id="dff72-104">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dff72-105">Converte una stringa che è stata codificata in formato HTML per la trasmissione HTTP in una stringa decodificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-105">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Net.WebUtility.HtmlDecode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dff72-106">Stringa da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-106">The string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dff72-107">Converte una stringa che è stata codificata in formato HTML per la trasmissione HTTP in una stringa decodificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-107">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dff72-108">Stringa decodificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-108">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dff72-109">Se caratteri quali spazi e punteggiatura vengono passati in un flusso HTTP, potrebbe essere erroneamente interpretati dall'estremità ricevente.</span><span class="sxs-lookup"><span data-stu-id="dff72-109">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dff72-110">La codifica HTML converte i caratteri non consentiti in formato HTML in entità carattere equivalenti. La decodifica HTML inverte la codifica.</span><span class="sxs-lookup"><span data-stu-id="dff72-110">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="dff72-111">Ad esempio, se incorporato in un blocco di testo, i caratteri `<` e `>` sono codificate come `&lt;` e `&gt;` per la trasmissione HTTP.</span><span class="sxs-lookup"><span data-stu-id="dff72-111">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="dff72-112">Se il `value` parametro è `null`, quindi la stringa decodificata restituita `null`.</span><span class="sxs-lookup"><span data-stu-id="dff72-112">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="dff72-113">Se il `value` parametro è una stringa vuota, quindi la stringa decodificata restituita è una stringa vuota.</span><span class="sxs-lookup"><span data-stu-id="dff72-113">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dff72-114">Stringa da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-114">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="dff72-115">Flusso di output di <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-115">A <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dff72-116">Converte una stringa in una stringa con codifica HTML e in una stringa decodificata e invia la stringa decodificata a un flusso di output <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-116">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dff72-117">Se caratteri quali spazi e punteggiatura vengono passati in un flusso HTTP, potrebbe essere erroneamente interpretati dall'estremità ricevente.</span><span class="sxs-lookup"><span data-stu-id="dff72-117">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dff72-118">La codifica HTML converte i caratteri non consentiti in formato HTML in entità carattere equivalenti. La decodifica HTML inverte la codifica.</span><span class="sxs-lookup"><span data-stu-id="dff72-118">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="dff72-119">Ad esempio, se incorporato in un blocco di testo, i caratteri `<` e `>` sono codificate come `&lt;` e `&gt;` per la trasmissione HTTP.</span><span class="sxs-lookup"><span data-stu-id="dff72-119">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dff72-120">Il parametro <paramref name="output" /> non può essere <see langword="null" /> se il parametro <paramref name="value" /> non è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-120">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dff72-121">Esegue la conversione di una stringa in una stringa con codifica HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-121">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Net.WebUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dff72-122">Stringa da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-122">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dff72-123">Esegue la conversione di una stringa in una stringa con codifica HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-123">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dff72-124">Stringa codificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-124">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dff72-125">Se caratteri quali spazi e punteggiatura vengono passati in un flusso HTTP, potrebbe essere erroneamente interpretati dall'estremità ricevente.</span><span class="sxs-lookup"><span data-stu-id="dff72-125">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dff72-126">La codifica HTML converte i caratteri non consentiti in formato HTML in entità carattere equivalenti. La decodifica HTML inverte la codifica.</span><span class="sxs-lookup"><span data-stu-id="dff72-126">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="dff72-127">Ad esempio, se incorporato in un blocco di testo, i caratteri `<` e `>` sono codificate come `&lt;` e `&gt;` per la trasmissione HTTP.</span><span class="sxs-lookup"><span data-stu-id="dff72-127">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="dff72-128">Se il `value` parametro è `null`, quindi la stringa con codifica restituita `null`.</span><span class="sxs-lookup"><span data-stu-id="dff72-128">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="dff72-129">Se il `value` parametro è una stringa vuota, quindi la stringa con codifica restituita è una stringa vuota.</span><span class="sxs-lookup"><span data-stu-id="dff72-129">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="dff72-130">Procedura: protezione contro gli attacchi tramite Script in un'applicazione Web applicando la codifica HTML in stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-130">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dff72-131">Stringa da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-131">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="dff72-132">Flusso di output <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-132">A <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dff72-133">Converte una stringa in una stringa codificata in formato HTML e restituisce l'output come un flusso di output <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-133">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dff72-134">Se caratteri quali spazi e punteggiatura vengono passati in un flusso HTTP, potrebbe essere erroneamente interpretati dall'estremità ricevente.</span><span class="sxs-lookup"><span data-stu-id="dff72-134">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dff72-135">La codifica HTML converte i caratteri non consentiti in formato HTML in entità carattere equivalenti. La decodifica HTML inverte la codifica.</span><span class="sxs-lookup"><span data-stu-id="dff72-135">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="dff72-136">Ad esempio, se incorporato in un blocco di testo, i caratteri `<` e `>` sono codificate come `&lt;` e `&gt;` per la trasmissione HTTP.</span><span class="sxs-lookup"><span data-stu-id="dff72-136">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dff72-137">Il parametro <paramref name="output" /> non può essere <see langword="null" /> se il parametro <paramref name="value" /> non è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-137">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="dff72-138">Procedura: protezione contro gli attacchi tramite Script in un'applicazione Web applicando la codifica HTML in stringhe</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-138">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Net.WebUtility.UrlDecode encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="dff72-139">Stringa con codifica URL da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-139">A URL-encoded string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dff72-140">Converte una stringa che è stata codificata per la trasmissione in un URL in una stringa decodificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-140">Converts a string that has been encoded for transmission in a URL into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dff72-141">Stringa decodificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-141">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dff72-142">Se caratteri quali spazi e punteggiatura vengono passati in un flusso HTTP, potrebbe essere erroneamente interpretati dall'estremità ricevente.</span><span class="sxs-lookup"><span data-stu-id="dff72-142">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dff72-143">Codifica URL converte i caratteri non consentiti in un URL nelle sequenze di escape esadecimale equivalente.</span><span class="sxs-lookup"><span data-stu-id="dff72-143">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="dff72-144">Il <xref:System.Net.WebUtility.UrlEncode%2A> metodo crea una stringa codificata in URL.</span><span class="sxs-lookup"><span data-stu-id="dff72-144">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="dff72-145">URL decodifica sostituisce le sequenze di escape esadecimale con gli equivalenti di carattere ASCII corrispondenti.</span><span class="sxs-lookup"><span data-stu-id="dff72-145">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="dff72-146">Ad esempio, se incorporato in un blocco di testo con codifica URL, le sequenze di escape `%3c` e `%3e` vengono decodificati nei caratteri `<` e `>`.</span><span class="sxs-lookup"><span data-stu-id="dff72-146">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlDecodeToBytes (encodedValue, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="dff72-147">Una matrice <see cref="T:System.Byte" /> con codifica URL da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-147">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="dff72-148">Offset, in byte, dall'inizio della matrice <see cref="T:System.Byte" /> da decodificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-148">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="dff72-149">Conteggio, in byte, per decodificare dalla matrice <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-149">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dff72-150">Converte una matrice di byte codificata per la trasmissione in un URL in una matrice di byte decodificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-150">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dff72-151">Una matrice <see cref="T:System.Byte" /> decodificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-151">A decoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dff72-152">Se caratteri quali spazi e punteggiatura vengono passati in un flusso HTTP, potrebbe essere erroneamente interpretati dall'estremità ricevente.</span><span class="sxs-lookup"><span data-stu-id="dff72-152">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dff72-153">Codifica URL converte i caratteri non consentiti in un URL nelle sequenze di escape esadecimale equivalente.</span><span class="sxs-lookup"><span data-stu-id="dff72-153">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="dff72-154">Il <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> metodo crea una matrice di byte codificata in URL.</span><span class="sxs-lookup"><span data-stu-id="dff72-154">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="dff72-155">URL decodifica sostituisce le sequenze di escape esadecimale con gli equivalenti di carattere ASCII corrispondenti.</span><span class="sxs-lookup"><span data-stu-id="dff72-155">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="dff72-156">Ad esempio, se incorporato in un blocco di testo con codifica URL, le sequenze di escape `%3c` e `%3e` vengono decodificati nei caratteri `<` e `>`.</span><span class="sxs-lookup"><span data-stu-id="dff72-156">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Net.WebUtility.UrlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dff72-157">Testo da codificare in URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-157">The text to URL-encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dff72-158">Converte una stringa di testo in una stringa con codifica URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-158">Converts a text string into a URL-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dff72-159">Stringa con codifica URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-159">A URL-encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dff72-160">Se caratteri quali spazi e punteggiatura vengono passati in un flusso HTTP, potrebbe essere erroneamente interpretati dall'estremità ricevente.</span><span class="sxs-lookup"><span data-stu-id="dff72-160">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dff72-161">Codifica URL sostituisce i caratteri non consentiti in un URL con entità carattere equivalenti costituito da sequenze di escape esadecimali.</span><span class="sxs-lookup"><span data-stu-id="dff72-161">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="dff72-162">La stringa convertita deve essere conforme al formato UTF-8.</span><span class="sxs-lookup"><span data-stu-id="dff72-162">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="dff72-163">La codifica URL sostituisce tutti i codici di carattere ad eccezione di lettere, numeri e caratteri di punteggiatura seguenti:</span><span class="sxs-lookup"><span data-stu-id="dff72-163">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="dff72-164">`-` (il segno meno)</span><span class="sxs-lookup"><span data-stu-id="dff72-164">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="dff72-165">`_` (carattere di sottolineatura)</span><span class="sxs-lookup"><span data-stu-id="dff72-165">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="dff72-166">`.` (punto)</span><span class="sxs-lookup"><span data-stu-id="dff72-166">`.` (period)</span></span>  
  
-   <span data-ttu-id="dff72-167">`!` (punto esclamativo)</span><span class="sxs-lookup"><span data-stu-id="dff72-167">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="dff72-168">`*` (asterisco)</span><span class="sxs-lookup"><span data-stu-id="dff72-168">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="dff72-169">`(` e `)` (parentesi aperte e chiuse)</span><span class="sxs-lookup"><span data-stu-id="dff72-169">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="dff72-170">Ad esempio, se incorporato in un blocco di testo per essere trasmessi a un URL, i caratteri `<` e `>` sono codificate come `%3c` e `%3e`.</span><span class="sxs-lookup"><span data-stu-id="dff72-170">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="dff72-171">Il <xref:System.Net.WebUtility.UrlDecode%2A> metodo inverte la codifica.</span><span class="sxs-lookup"><span data-stu-id="dff72-171">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlEncodeToBytes (value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dff72-172">Matrice <see cref="T:System.Byte" /> da codificare in URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-172">The <see cref="T:System.Byte" /> array to URL-encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="dff72-173">Offset, in byte, dall'inizio della matrice <see cref="T:System.Byte" /> da codificare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-173">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="dff72-174">Conteggio, in byte, per codificare dalla matrice <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-174">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dff72-175">Consente di convertire una matrice di byte in una matrice di byte con codifica URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-175">Converts a byte array into a URL-encoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dff72-176">Matrice <see cref="T:System.Byte" /> di byte codificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dff72-176">An encoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dff72-177">Se caratteri quali spazi e punteggiatura vengono passati in un flusso HTTP, potrebbe essere erroneamente interpretati dall'estremità ricevente.</span><span class="sxs-lookup"><span data-stu-id="dff72-177">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="dff72-178">Codifica URL sostituisce i caratteri non consentiti in un URL con entità carattere equivalenti costituito da sequenze di escape esadecimali.</span><span class="sxs-lookup"><span data-stu-id="dff72-178">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="dff72-179">La stringa convertita deve essere conforme al formato UTF-8.</span><span class="sxs-lookup"><span data-stu-id="dff72-179">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="dff72-180">La codifica URL sostituisce tutti i codici di carattere ad eccezione di lettere, numeri e caratteri di punteggiatura seguenti:</span><span class="sxs-lookup"><span data-stu-id="dff72-180">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="dff72-181">`-` (il segno meno)</span><span class="sxs-lookup"><span data-stu-id="dff72-181">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="dff72-182">`_` (carattere di sottolineatura)</span><span class="sxs-lookup"><span data-stu-id="dff72-182">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="dff72-183">`.` (punto)</span><span class="sxs-lookup"><span data-stu-id="dff72-183">`.` (period)</span></span>  
  
-   <span data-ttu-id="dff72-184">`!` (punto esclamativo)</span><span class="sxs-lookup"><span data-stu-id="dff72-184">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="dff72-185">`*` (asterisco)</span><span class="sxs-lookup"><span data-stu-id="dff72-185">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="dff72-186">`'` (virgoletta singola)</span><span class="sxs-lookup"><span data-stu-id="dff72-186">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="dff72-187">`(` e `)` (parentesi aperte e chiuse)</span><span class="sxs-lookup"><span data-stu-id="dff72-187">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="dff72-188">Ad esempio, se incorporato in un blocco di testo per essere trasmessi a un URL, i caratteri `<` e `>` sono codificate come `%3c` e `%3e`.</span><span class="sxs-lookup"><span data-stu-id="dff72-188">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="dff72-189">Il <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> metodo inverte la codifica.</span><span class="sxs-lookup"><span data-stu-id="dff72-189">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>