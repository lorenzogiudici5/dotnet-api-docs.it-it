<Type Name="WebPermission" FullName="System.Net.WebPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="045f1091433bac650762d24f8681842cbf7e4a69" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48591532" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit WebPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type WebPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Controlla i diritti di accesso alle risorse Internet HTTP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission> fornisce un set di metodi e proprietà per controllare l'accesso alle risorse Internet. È possibile usare una <xref:System.Net.WebPermission> per fornire l'accesso con o senza restrizioni per la risorsa desiderata, in base il <xref:System.Security.Permissions.PermissionState> che viene impostata quando il <xref:System.Net.WebPermission> viene creato.  
  
 Creare un <xref:System.Net.WebPermission> istanza chiamando il relativo costruttore usando uno dei seguenti set di parametri:  
  
-   Senza parametri. Il valore predefinito di <xref:System.Security.Permissions.PermissionState> è <xref:System.Security.Permissions.PermissionState.None>.  
  
-   Oggetto <xref:System.Security.Permissions.PermissionState>. Specificare il parametro <xref:System.Security.Permissions.PermissionState.Unrestricted> per consentire qualsiasi URI da utilizzare nella classe di destinazione, oppure <xref:System.Security.Permissions.PermissionState.None> per consentire l'accesso solo agli URI specificato tramite l'uso del <xref:System.Net.WebPermission.AddPermission%2A> (metodo).  
  
-   Oggetto <xref:System.Net.NetworkAccess> valore e una stringa URI. L'URI specificato disponga delle autorizzazioni concesse dal <xref:System.Net.NetworkAccess> valore.  
  
-   Oggetto <xref:System.Net.NetworkAccess> identificatore e l'espressione regolare dell'URI.  
  
 Il <xref:System.Net.WebPermission.ConnectList%2A> e <xref:System.Net.WebPermission.AcceptList%2A> contenere gli URI a cui si dispone dell'autorizzazione di accesso. Per aggiungere un URI per uno di questi elenchi, usare <xref:System.Net.WebPermission.AddPermission%2A>. Se si passa <xref:System.Net.NetworkAccess.Accept> come il <xref:System.Net.NetworkAccess> parametro, verrà aggiunto all'URI per il <xref:System.Net.WebPermission.AcceptList%2A>. <xref:System.Net.WebPermission> impostazione permetterà le connessioni alla classe di destinazione con gli URI che corrispondono il <xref:System.Net.WebPermission.AcceptList%2A>.  
  
> [!CAUTION]
>  Per negare l'accesso a una risorsa Internet, è necessario negare l'accesso a tutti i percorsi possibili per tale risorsa. Ciò è necessario chiamare <xref:System.Net.WebPermission.%23ctor%2A?displayProperty=nameWithType> con il parametro di stato impostato su <xref:System.Security.CodeAccessPermission.Deny%2A>. Un approccio migliore è consentire l'accesso alla risorsa di specifici. Per altre informazioni su questo argomento, vedere la [NIB: uso del metodo Deny](http://msdn.microsoft.com/library/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25) argomento.  
  
> [!NOTE]
>  È necessario negare l'accesso utilizzando solo il percorso canonico della risorsa. Non è necessario usare le varianti sintattiche del percorso.  
  
> [!NOTE]
>  Informazioni nome utente e predefinite porta viene rimosso dal <xref:System.Uri> prima del confronto con l'argomento di espressione regolare che viene fornito il <xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29> costruttore. Se l'espressione regolare contiene informazioni sull'utente o il numero di porta predefinito, quindi tutti i fax in ingresso <xref:System.Uri>s avrà esito negativo in modo che corrisponda all'espressione regolare.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare una nuova istanza della <xref:System.Net.WebPermission> usando un <xref:System.Text.RegularExpressions.Regex>. Altri host vengono aggiunti per connettersi e accettare l'elenco di <xref:System.Net.WebPermission>. Infine, la connessione e accettare elenco vengono visualizzati nella console.  
  
 [!code-cpp[WebPermission_Regex#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Regex/CPP/regex.cpp#1)]
 [!code-csharp[WebPermission_Regex#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Regex/CS/regex.cs#1)]
 [!code-vb[WebPermission_Regex#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Regex/VB/regex.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.CodeAccessPermission" />
    <altmember cref="T:System.Security.Permissions.PermissionState" />
    <altmember cref="T:System.Net.NetworkAccess" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Net.WebPermission" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Net.WebPermission" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Crea una nuova istanza della classe <xref:System.Net.WebPermission>. Questo costruttore crea un'autorizzazione vuota che non concede alcun diritto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.IsUnrestricted" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Security.Permissions.PermissionState -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Valore <see cref="T:System.Security.Permissions.PermissionState" />.</param>
        <summary>Crea una nuova istanza della classe <see cref="T:System.Net.WebPermission" />, che passa tutte le richieste oppure determina l'esito negativo di tutte le richieste.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il valore della `state` parametro può essere <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType> o <xref:System.Security.Permissions.PermissionState.Unrestricted?displayProperty=nameWithType>rispettivamente generando un accesso a tutte le variabili di sicurezza o con restrizioni. Se si specifica <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType>, è possibile fornire l'accesso ai singoli URI utilizzando <xref:System.Net.WebPermission.AddPermission%2A>.  
  
   
  
## Examples  
 L'esempio seguente crea un'istanza di <xref:System.Net.WebPermission> e fornisce diritti di accesso all'URL specifici.  
  
 [!code-cpp[WebPermission_Copy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Copy/CPP/webpermission_copy.cpp#1)]
 [!code-csharp[WebPermission_Copy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Copy/CS/webpermission_copy.cs#1)]
 [!code-vb[WebPermission_Copy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Copy/VB/webpermission_copy.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.PermissionState.Unrestricted" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Net.NetworkAccess access, string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.NetworkAccess access, string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (access As NetworkAccess, uriString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Net::NetworkAccess access, System::String ^ uriString);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Net.NetworkAccess * string -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission (access, uriString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access">Valore NetworkAccess che indica il tipo di accesso da concedere all'URI specificato. <see cref="F:System.Net.NetworkAccess.Accept" /> indica che l'applicazione può accettare connessioni da Internet su una risorsa locale. <see cref="F:System.Net.NetworkAccess.Connect" /> indica che l'applicazione può connettersi a specifiche risorse Internet.</param>
        <param name="uriString">Una stringa URI a cui sono concessi i diritti di accesso.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.WebPermission" /> con i diritti di accesso specificati per l'URI specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza un <xref:System.Net.WebPermission> e concede l'autorizzazione di destinazione per rendere un server remoto connessione all'host oppure accettare una connessione all'host remoto usando l'URI descritto dal `uriString` parametro.  
  
   
  
## Examples  
 L'esempio seguente crea una nuova istanza della <xref:System.Net.WebPermission> con diritti di connessione per l'URI specificato.  
  
 [!code-cpp[WebPermission_Union#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Union/CPP/webpermission_union.cpp#1)]
 [!code-csharp[WebPermission_Union#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Union/CS/webpermission_union.cs#1)]
 [!code-vb[WebPermission_Union#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Union/VB/webpermission_union.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriString" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (access As NetworkAccess, uriRegex As Regex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Net::NetworkAccess access, System::Text::RegularExpressions::Regex ^ uriRegex);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Net.NetworkAccess * System.Text.RegularExpressions.Regex -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission (access, uriRegex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="access">Valore <see cref="T:System.Net.NetworkAccess" /> che indica il tipo di accesso da concedere all'URI specificato. <see cref="F:System.Net.NetworkAccess.Accept" /> indica che l'applicazione può accettare connessioni da Internet su una risorsa locale. <see cref="F:System.Net.NetworkAccess.Connect" /> indica che l'applicazione può connettersi a specifiche risorse Internet.</param>
        <param name="uriRegex">Espressione regolare che descrive l'URI a cui concedere l'accesso.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.WebPermission" /> con i diritti di accesso specificati per l'espressione regolare dell'URI specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza un <xref:System.Net.WebPermission> e concede l'autorizzazione di destinazione per rendere un server remoto connessione all'host oppure accettare una connessione all'host remoto usando l'URI descritto dal `uriRegex` parametro.  
  
> [!NOTE]
>  È consigliabile creare `uriRegex` usando il <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>, <xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType>, e <xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType> flag.  
  
> [!NOTE]
>  Stringa dell'URI candidato viene confrontato con l'elenco di espressioni regolari relative (<xref:System.Net.WebPermission.AcceptList%2A> o <xref:System.Net.WebPermission.ConnectList%2A>) in due modi. In primo luogo, lo stringa dell'URI candidato viene verificato rispetto all'elenco appropriato; quindi, se non viene trovata alcuna corrispondenza, lo stringa dell'URI candidato viene convertito in un <xref:System.Uri> e verificato rispetto all'elenco appropriato.  
  
   
  
## Examples  
 L'esempio seguente crea una nuova istanza della <xref:System.Net.WebPermission> con diritti di connessione per l'oggetto specificato <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType>.  
  
 [!code-cpp[WebPermission_Constructor4#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Constructor4/CPP/webpermission_constructor4.cpp#1)]
 [!code-csharp[WebPermission_Constructor4#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Constructor4/CS/webpermission_constructor4.cs#1)]
 [!code-vb[WebPermission_Constructor4#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Constructor4/VB/webpermission_constructor4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="AcceptList">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator AcceptList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator AcceptList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebPermission.AcceptList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptList As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ AcceptList { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptList : System.Collections.IEnumerator" Usage="System.Net.WebPermission.AcceptList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Questa proprietà restituisce una enumerazione di una singola autorizzazione di accettazione contenuta da questa <see cref="T:System.Net.WebPermission" />. I tipi di oggetto possibili contenuti nell'enumerazione restituita sono <see cref="T:System.String" /> e <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
        <value>Nell'interfaccia <see cref="T:System.Collections.IEnumerator" /> sono contenute le autorizzazioni di accettazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà ottiene un elenco delle risorse locali consentite da questo oggetto <xref:System.Net.WebPermission>. La classe a cui è stato applicato <xref:System.Net.WebPermission> ha solo l'autorizzazione per la ricezione di una connessione in ingresso a risorse locali presenti in questo elenco.  
  
> [!NOTE]
>  È possibile aggiungere gli URI per questo elenco usando <xref:System.Net.WebPermission.AddPermission%2A>.  
  
> [!NOTE]
>  Stringa dell'URI candidato viene confrontato con l'elenco di espressioni regolari relative (<xref:System.Net.WebPermission.AcceptList%2A> o <xref:System.Net.WebPermission.ConnectList%2A>) in due modi. In primo luogo, lo stringa dell'URI candidato viene verificato rispetto all'elenco appropriato; quindi, se non viene trovata alcuna corrispondenza, lo stringa dell'URI candidato viene convertito in un <xref:System.Uri> e verificato rispetto all'elenco appropriato.  
  
   
  
## Examples  
 L'esempio seguente visualizza gli URL nel <xref:System.Net.WebPermission.AcceptList%2A> nella console.  
  
 [!code-cpp[WebPermission_AcceptConnectList#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CPP/webpermission_acceptconnectlist.cpp#2)]
 [!code-csharp[WebPermission_AcceptConnectList#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CS/webpermission_acceptconnectlist.cs#2)]
 [!code-vb[WebPermission_AcceptConnectList#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_AcceptConnectList/VB/webpermission_acceptconnectlist.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPermission">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aggiunge l'URI specificato con i diritti di accesso specificati alla <see cref="T:System.Net.WebPermission" /> corrente.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public void AddPermission (System.Net.NetworkAccess access, string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPermission(valuetype System.Net.NetworkAccess access, string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPermission (access As NetworkAccess, uriString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPermission(System::Net::NetworkAccess access, System::String ^ uriString);" />
      <MemberSignature Language="F#" Value="member this.AddPermission : System.Net.NetworkAccess * string -&gt; unit" Usage="webPermission.AddPermission (access, uriString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access">
          <see cref="T:System.Net.NetworkAccess" /> che specifica i diritti di accesso concessi all'URI.</param>
        <param name="uriString">Stringa che descrive l'URI a cui sono concessi i diritti di accesso.</param>
        <summary>Aggiunge la stringa dell'URI specificato con i diritti di accesso specificati alla <see cref="T:System.Net.WebPermission" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è stato specificato <xref:System.Security.Permissions.PermissionState.None> come il <xref:System.Security.Permissions.PermissionState>, usare <xref:System.Net.WebPermission.AddPermission%2A> per consentire l'uso di `uriString` nella classe di destinazione. Il modo in cui `uriString` può essere utilizzata dalla destinazione della classe specificata da `access`. Specificare <xref:System.Net.NetworkAccess.Accept> come parametro di accesso per aggiungere l'URI specificato per il `uriString` parametro all'elenco di URI accettare stringhe o specificare <xref:System.Net.NetworkAccess.Connect> come l'accesso per aggiungere l'URI all'elenco di URI parametro stringhe di connessione.  
  
> [!NOTE]
>  La chiamata <xref:System.Net.WebPermission.AddPermission%2A> sul <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Net.WebPermission> avrà alcun effetto, poiché l'autorizzazione viene concessa a tutti gli URI.  
  
> [!NOTE]
>  Stringa dell'URI candidato viene confrontato con l'elenco di espressioni regolari relative (<xref:System.Net.WebPermission.AcceptList%2A> o <xref:System.Net.WebPermission.ConnectList%2A>) in due modi. In primo luogo, lo stringa dell'URI candidato viene verificato rispetto all'elenco appropriato; quindi, se non viene trovata alcuna corrispondenza, lo stringa dell'URI candidato viene convertito in un <xref:System.Uri> e verificato rispetto all'elenco appropriato.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come aggiungere i diritti di accesso alle stringhe URL specifiche.  
  
 [!code-cpp[WebPermission_Intersect#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Intersect/CPP/webpermission_intersect.cpp#2)]
 [!code-csharp[WebPermission_Intersect#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Intersect/CS/webpermission_intersect.cs#2)]
 [!code-vb[WebPermission_Intersect#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Intersect/VB/webpermission_intersect.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriString" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Net.NetworkAccess" />
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPermission(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPermission (access As NetworkAccess, uriRegex As Regex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPermission(System::Net::NetworkAccess access, System::Text::RegularExpressions::Regex ^ uriRegex);" />
      <MemberSignature Language="F#" Value="member this.AddPermission : System.Net.NetworkAccess * System.Text.RegularExpressions.Regex -&gt; unit" Usage="webPermission.AddPermission (access, uriRegex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="access">NetworkAccess in cui si specificano i diritti di accesso assegnati all'URI.</param>
        <param name="uriRegex">Espressione regolare che descrive l'insieme di URI ai quali sono concessi i diritti di accesso.</param>
        <summary>Aggiunge l'URI specificato con i diritti di accesso specificati alla <see cref="T:System.Net.WebPermission" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se è stato specificato <xref:System.Security.Permissions.PermissionState.None> come il <xref:System.Security.Permissions.PermissionState>, usare <xref:System.Net.WebPermission.AddPermission%2A> per consentire l'uso di `uriRegex` nella classe di destinazione. Specificare <xref:System.Net.NetworkAccess.Accept> come il `access` per aggiungere l'URI specificato dal parametro le `uriRegex` parametro all'elenco di URI accettare stringhe o specificare <xref:System.Net.NetworkAccess.Connect> come l'accesso per aggiungere l'URI all'elenco di URI parametro stringhe di connessione.  
  
> [!NOTE]
>  La chiamata <xref:System.Net.WebPermission.AddPermission%2A> in un <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Net.WebPermission> istanza avrà alcun effetto quando l'autorizzazione viene concessa a tutti gli URI.  
  
> [!NOTE]
>  È consigliabile creare `uriRegex` usando il <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>, <xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType>, e <xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType> flag.  
  
> [!NOTE]
>  Stringa dell'URI candidato viene confrontato con l'elenco di espressioni regolari relative (<xref:System.Net.WebPermission.AcceptList%2A> o <xref:System.Net.WebPermission.ConnectList%2A>) in due modi. In primo luogo, lo stringa dell'URI candidato viene verificato rispetto all'elenco appropriato; quindi, se non viene trovata alcuna corrispondenza, lo stringa dell'URI candidato viene convertito in un <xref:System.Uri> e verificato rispetto all'elenco appropriato.  
  
   
  
## Examples  
 L'esempio seguente usa <xref:System.Net.WebPermission.AddPermission%2A> per concedere diritti di accesso per l'URI specificato.  
  
 [!code-cpp[WebPermission_IsSubset#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_IsSubset/CPP/webpermission_issubset.cpp#1)]
 [!code-csharp[WebPermission_IsSubset#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_IsSubset/CS/webpermission_issubset.cs#1)]
 [!code-vb[WebPermission_IsSubset#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_IsSubset/VB/webpermission_issubset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="uriRegex" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Net.NetworkAccess" />
      </Docs>
    </Member>
    <Member MemberName="ConnectList">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator ConnectList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator ConnectList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebPermission.ConnectList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectList As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ ConnectList { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectList : System.Collections.IEnumerator" Usage="System.Net.WebPermission.ConnectList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Questa proprietà restituisce una enumerazione di una singola autorizzazione di connessione contenuta in questa <see cref="T:System.Net.WebPermission" />. I tipi di oggetto possibili contenuti nell'enumerazione restituita sono <see cref="T:System.String" /> e <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
        <value>Nell'interfaccia <see cref="T:System.Collections.IEnumerator" /> sono contenute le autorizzazioni di connessione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà ottiene un elenco di risorse remote sono consentite da questo <xref:System.Net.WebPermission>. La classe a cui è stato applicato <xref:System.Net.WebPermission> dispone solo dell'autorizzazione per connettersi alle risorse presenti in questo elenco.  
  
> [!NOTE]
>  È possibile aggiungere gli URI per questo elenco usando <xref:System.Net.WebPermission.AddPermission%2A>.  
  
> [!NOTE]
>  Stringa dell'URI candidato viene confrontato con l'elenco di espressioni regolari relative (<xref:System.Net.WebPermission.AcceptList%2A> o <xref:System.Net.WebPermission.ConnectList%2A>) in due modi. In primo luogo, lo stringa dell'URI candidato viene verificato rispetto all'elenco appropriato; quindi, se non viene trovata alcuna corrispondenza, lo stringa dell'URI candidato viene convertito in un <xref:System.Uri> e verificato rispetto all'elenco appropriato.  
  
   
  
## Examples  
 L'esempio seguente visualizza gli URL nel <xref:System.Net.WebPermission.ConnectList%2A> nella console.  
  
 [!code-cpp[WebPermission_AcceptConnectList#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CPP/webpermission_acceptconnectlist.cpp#1)]
 [!code-csharp[WebPermission_AcceptConnectList#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CS/webpermission_acceptconnectlist.cs#1)]
 [!code-vb[WebPermission_AcceptConnectList#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_AcceptConnectList/VB/webpermission_acceptconnectlist.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="webPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia di una classe <see cref="T:System.Net.WebPermission" />.</summary>
        <returns>Nuova istanza della classe <see cref="T:System.Net.WebPermission" /> che dispone degli stessi valori dell'originale.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Security.IPermission> restituito da questo metodo rappresenta lo stesso l'accesso alle risorse dell'originale <xref:System.Net.WebPermission>. Questo metodo esegue l'override <xref:System.Security.CodeAccessPermission.Copy%2A> e viene implementata per supportare il <xref:System.Security.IPermission> interfaccia.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare una seconda istanza di <xref:System.Net.WebPermission> usando <xref:System.Net.WebPermission.Copy%2A>. Questa seconda istanza è identica al primo.  
  
 [!code-cpp[WebPermission_Copy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Copy/CPP/webpermission_copy.cpp#2)]
 [!code-csharp[WebPermission_Copy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Copy/CS/webpermission_copy.cs#2)]
 [!code-vb[WebPermission_Copy#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Copy/VB/webpermission_copy.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ securityElement);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="webPermission.FromXml securityElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">La codifica XML dalla quale ricostruire la <see cref="T:System.Net.WebPermission" />.</param>
        <summary>Ricostruisce una <see cref="T:System.Net.WebPermission" /> da una codifica XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Net.WebPermission.FromXml%2A> metodo ricostruisce un <xref:System.Net.WebPermission> da un file XML codifica definita dal <xref:System.Security.SecurityElement> classe.  
  
 Usare il <xref:System.Net.WebPermission.ToXml%2A> metodo per la codifica XML di <xref:System.Net.WebPermission>, incluse informazioni sullo stato.  
  
   
  
## Examples  
 L'esempio seguente crea una <xref:System.Security.SecurityElement?displayProperty=nameWithType>, vengono compilati gli attributi e che usa <xref:System.Net.WebPermission.FromXml%2A> trasferire queste informazioni a un'istanza di <xref:System.Net.WebPermission>.  
  
 [!code-cpp[WebPermission_FromToXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_FromToXml/CPP/webpermission_fromtoxml.cpp#1)]
 [!code-csharp[WebPermission_FromToXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_FromToXml/CS/webpermission_fromtoxml.cs#1)]
 [!code-vb[WebPermission_FromToXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_FromToXml/VB/webpermission_fromtoxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="securityElement" /> è <see langword="null." />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="securityElement" /> non è un elemento di autorizzazione per questo tipo.</exception>
        <altmember cref="M:System.Net.WebPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="webPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Oggetto <see cref="T:System.Net.WebPermission" /> da confrontare con l'istanza corrente.</param>
        <summary>Restituisce l'intersezione logica di due istanze di <see cref="T:System.Net.WebPermission" />.</summary>
        <returns>Una nuova <see cref="T:System.Net.WebPermission" /> che rappresenta l'intersezione dell'istanza corrente e del parametro <paramref name="target" />. Se l'intersezione è vuota, il metodo restituirà <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission.Intersect%2A> Restituisce un <xref:System.Net.WebPermission> che contiene le autorizzazioni che sono comuni in entrambi `target` e l'istanza corrente.  
  
 Questo metodo esegue l'override <xref:System.Security.CodeAccessPermission.Intersect%2A> e viene implementata per supportare il <xref:System.Security.IPermission> interfaccia.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come creare un'istanza di <xref:System.Net.WebPermission> tramite l'intersezione logica di due esistente <xref:System.Net.WebPermission> istanze.  
  
 [!code-cpp[WebPermission_Intersect#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Intersect/CPP/webpermission_intersect.cpp#3)]
 [!code-csharp[WebPermission_Intersect#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Intersect/CS/webpermission_intersect.cs#3)]
 [!code-vb[WebPermission_Intersect#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Intersect/VB/webpermission_intersect.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> non è <see langword="null" /> o di tipo <see cref="T:System.Net.WebPermission" /></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="webPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">L'oggetto <see cref="T:System.Net.WebPermission" /> da confrontare con l'oggetto <see cref="T:System.Net.WebPermission" /> corrente.</param>
        <summary>Determina se la <see cref="T:System.Net.WebPermission" /> corrente è un sottoinsieme dell'oggetto specificato.</summary>
        <returns>
          <see langword="true" /> se l'istanza corrente è un sottoinsieme del parametro <paramref name="target" />. In caso contrario, <see langword="false" />. Se la destinazione è <see langword="null" />, il metodo restituirà <see langword="true" /> per un'autorizzazione corrente vuota con restrizioni e <see langword="false" /> in caso contrario.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'oggetto corrente <xref:System.Net.WebPermission> specifica un set di risorse associate che sono completamente contenute il `target` parametro, quindi l'oggetto corrente <xref:System.Net.WebPermission> è un subset di `target`. Questo metodo esegue l'override <xref:System.Net.WebPermission.IsSubsetOf%2A> e viene implementata per supportare il <xref:System.Security.IPermission> interfaccia.  
  
   
  
## Examples  
 L'esempio seguente usa <xref:System.Net.WebPermission.IsSubsetOf%2A> per determinare se i diritti di accesso presenti in un'istanza di <xref:System.Net.WebPermission> si trovano in un'altra istanza di <xref:System.Net.WebPermission>.  
  
 [!code-cpp[WebPermission_IsSubset2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_IsSubset2/CPP/source.cpp#1)]
 [!code-csharp[WebPermission_IsSubset2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_IsSubset2/CS/source.cs#1)]
 [!code-vb[WebPermission_IsSubset2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_IsSubset2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il parametro di destinazione non è un'istanza di <see cref="T:System.Net.WebPermission" />.</exception>
        <exception cref="T:System.NotSupportedException">Nell'istanza corrente è contenuto un diritto codificato Regex e non esiste un diritto che corrisponde in modo esatto all'istanza di destinazione.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="webPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Controlla lo stato generale dell'autorizzazione di <see cref="T:System.Net.WebPermission" />.</summary>
        <returns>
          <see langword="true" /> se <see cref="T:System.Net.WebPermission" /> è stato creato con <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /><see cref="T:System.Security.Permissions.PermissionState" />. In caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se <xref:System.Net.WebPermission> è <xref:System.Security.Permissions.PermissionState.Unrestricted>, la classe di destinazione può utilizzare tutti gli URI. In caso contrario, è necessario assegnare un'autorizzazione specifica per tutti gli URI da usare con la classe di destinazione.  
  
> [!NOTE]
>  Usare <xref:System.Net.WebPermission.AddPermission%2A> per aggiungere un URI e specificare le relative autorizzazioni.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="webPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una codifica XML di una <see cref="T:System.Net.WebPermission" /> e del relativo stato corrente.</summary>
        <returns>Oggetto <see cref="T:System.Security.SecurityElement" /> contenente una rappresentazione con codifica XML di <see cref="T:System.Net.WebPermission" />, comprese le informazioni sullo stato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare la <xref:System.Net.WebPermission.FromXml%2A> metodo per ripristinare le informazioni sullo stato da un <xref:System.Security.SecurityElement>.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare <xref:System.Net.WebPermission.ToXml%2A> per creare un <xref:System.Security.SecurityElement?displayProperty=nameWithType> e visualizzarne gli attributi nella console.  
  
 [!code-cpp[WebPermission_FromToXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_FromToXml/CPP/webpermission_fromtoxml.cpp#1)]
 [!code-csharp[WebPermission_FromToXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_FromToXml/CS/webpermission_fromtoxml.cs#1)]
 [!code-vb[WebPermission_FromToXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_FromToXml/VB/webpermission_fromtoxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="webPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">La <see cref="T:System.Net.WebPermission" /> da combinare con la <see cref="T:System.Net.WebPermission" /> corrente.</param>
        <summary>Restituisce l'unione logica tra due istanze della classe <see cref="T:System.Net.WebPermission" />.</summary>
        <returns>Una <see cref="T:System.Net.WebPermission" /> che rappresenta l'unione dell'istanza corrente e del parametro <paramref name="target" />. Se <see langword="WebPermission" /> è <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />, il metodo restituirà un oggetto <see cref="T:System.Net.WebPermission" /> che è <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Se la destinazione è <see langword="null" />, il metodo restituirà una copia dell'oggetto <see cref="T:System.Net.WebPermission" /> corrente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission.Union%2A> Restituisce un <xref:System.Net.WebPermission> che contiene tutte le autorizzazioni in entrambi `target` e l'istanza corrente.  
  
   
  
## Examples  
 L'esempio seguente accetta l'unione logica di due <xref:System.Net.WebPermission> istanze da creare una terza istanza <xref:System.Net.WebPermission>.  
  
 [!code-cpp[WebPermission_Union#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Union/CPP/webpermission_union.cpp#2)]
 [!code-csharp[WebPermission_Union#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Union/CS/webpermission_union.cs#2)]
 [!code-vb[WebPermission_Union#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Union/VB/webpermission_union.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">destinazione non è <see langword="null" /> o di tipo <see cref="T:System.Net.WebPermission" />.</exception>
        <altmember cref="T:System.Security.Permissions.PermissionState" />
      </Docs>
    </Member>
  </Members>
</Type>