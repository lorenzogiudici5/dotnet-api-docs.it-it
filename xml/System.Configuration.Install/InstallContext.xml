<Type Name="InstallContext" FullName="System.Configuration.Install.InstallContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0866b9a8d8027df2cd3f53a8dc6b20d77983798f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30379765" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InstallContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstallContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.InstallContext" />
  <TypeSignature Language="VB.NET" Value="Public Class InstallContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstallContext" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contiene informazioni relative all'installazione corrente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, un <xref:System.Configuration.Install.InstallContext> creati da un'installazione eseguibile, ad esempio InstallUtil.exe, che consente di installare gli assembly. Richiama il programma di installazione di <xref:System.Configuration.Install.InstallContext> costruttore, passando il percorso del file di log predefinito e i parametri della riga di comando.  
  
 Prima di chiamare il relativo <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, o <xref:System.Configuration.Install.Installer.Uninstall%2A> metodi, il programma di installazione imposta il <xref:System.Configuration.Install.Installer.Context%2A> proprietà di un <xref:System.Configuration.Install.Installer> all'istanza di <xref:System.Configuration.Install.InstallContext>. Prima di chiamare questi metodi, un <xref:System.Configuration.Install.Installer> che contiene una raccolta di programma di installazione nel <xref:System.Configuration.Install.Installer.Installers%2A> set di proprietà di <xref:System.Configuration.Install.Installer.Context%2A> proprietà di ogni programma di installazione contenuto.  
  
 Il <xref:System.Configuration.Install.InstallContext.Parameters%2A> proprietà contiene una versione analizzata della riga di comando immesso per eseguire il file eseguibile di installazione. La proprietà contiene informazioni quali il percorso di un file di log, se si desidera visualizzare le informazioni di log nella console e se visualizzare un'interfaccia utente durante l'installazione. Chiamare il <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> metodo per verificare se un parametro della riga di comando è `true`.  
  
 Utilizzare il <xref:System.Configuration.Install.InstallContext.LogMessage%2A> metodo per scrivere i messaggi di stato per il file di log di installazione e la console.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato il <xref:System.Configuration.Install.InstallContext.%23ctor%2A> costruttori, il <xref:System.Configuration.Install.InstallContext.Parameters%2A> proprietà e <xref:System.Configuration.Install.InstallContext.LogMessage%2A> e <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> metodi del <xref:System.Configuration.Install.InstallContext> classe.  
  
 Quando il <xref:System.Configuration.Install.Installer.Install%2A> viene chiamato metodo del programma di installazione, verifica i parametri dalla riga di comando. A seconda che visualizza i messaggi di stato nella console e inoltre Salva nel file di log specificato.  
  
 Quando il programma viene richiamato senza argomenti, un oggetto vuoto <xref:System.Configuration.Install.InstallContext> viene creato. Quando "/ file di registro" e "/ /LogtoConsole" vengono specificati il <xref:System.Configuration.Install.InstallContext> viene creato passando i rispettivi argomenti a <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.  
  
 [!code-cpp[InstallContext_InstallContext#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#1)]
 [!code-csharp[InstallContext_InstallContext#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#1)]
 [!code-vb[InstallContext_InstallContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.Install.Installer" />
    <altmember cref="T:System.Configuration.Install.TransactedInstaller" />
    <altmember cref="T:System.Configuration.Install.AssemblyInstaller" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Configuration.Install.InstallContext" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Configuration.Install.InstallContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo overload non crea un file di log per l'installazione.  
  
   
  
## Examples  
  
> [!NOTE]
>  In questo esempio viene illustrato come utilizzare una delle versioni di overload di <xref:System.Configuration.Install.InstallContext> costruttore. Per altri esempi che potrebbero essere disponibili, vedere gli argomenti di overload singoli.  
  
 Quando il programma viene richiamato senza argomenti, un oggetto vuoto <xref:System.Configuration.Install.InstallContext> viene creato.  
  
 [!code-cpp[InstallContext_InstallContext#2](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#2)]
 [!code-csharp[InstallContext_InstallContext#2](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#2)]
 [!code-vb[InstallContext_InstallContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext (string logFilePath, string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logFilePath, string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logFilePath As String, commandLine As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext(System::String ^ logFilePath, cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logFilePath" Type="System.String" />
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="logFilePath">Percorso del file di log per questa installazione, oppure <see langword="null" /> se non deve essere creato alcun file di log.</param>
        <param name="commandLine">Parametri della riga di comando immessi durante l'esecuzione del programma di installazione, oppure <see langword="null" /> se non è stato inserito alcun parametro.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Configuration.Install.InstallContext" /> e crea un file di log dell'installazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se l'installazione Usa [Installutil.exe (strumento programma di installazione)](~/docs/framework/tools/installutil-exe-installer-tool.md), questo costruttore crea un file di log nel percorso specificato e analizza la matrice dei parametri della riga di comando nel <xref:System.Configuration.Install.InstallContext.Parameters%2A> proprietà. Se i parametri della riga di comando viene specificato un percorso di file di log, utilizzato per creare il file. Se l'argomento del file di log non è specificato nella riga di comando, il valore di `logFilePath` parametro viene utilizzato. Per eliminare la creazione di un file di log, passare il "/ logfile =" parametro della riga di comando.  
  
   
  
## Examples  
 In questo esempio è tratto di un esempio di Cenni preliminari sulla classe <xref:System.Configuration.Install.InstallContext> classe.  
  
 Quando "/ file di registro" e "/ /LogtoConsole" vengono specificati il <xref:System.Configuration.Install.InstallContext> viene creato passando i rispettivi argomenti a <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.  
  
 [!code-cpp[InstallContext_InstallContext#3](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#3)]
 [!code-csharp[InstallContext_InstallContext#3](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#3)]
 [!code-vb[InstallContext_InstallContext#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Passare il percorso del file di log predefinito nel <paramref name="logFilePath" /> parametro quando si chiama questo costruttore. Questa è la posizione in cui viene creato il file di log, a meno che non viene utilizzato il parametro della riga di comando /logfile quando viene eseguito l'eseguibile di installazione.</para>
        </block>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsParameterTrue">
      <MemberSignature Language="C#" Value="public bool IsParameterTrue (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsParameterTrue(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsParameterTrue (paramName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsParameterTrue(System::String ^ paramName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Nome del parametro della riga di comando da verificare.</param>
        <summary>Determina se il parametro della riga di comando specificato è <see langword="true" />.</summary>
        <returns>
          <see langword="true" /> se il parametro specificato è impostato su "yes", "true", "1" oppure su una stringa vuota (""), in caso contrario <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo accede il <xref:System.Configuration.Install.InstallContext.Parameters%2A> proprietà, che contiene una versione analizzata dei parametri della riga di comando, per determinare se il parametro specificato è `true`.  
  
   
  
## Examples  
 In questo esempio è un estratto del campione nella panoramica della classe di <xref:System.Configuration.Install.InstallContext> classe.  
  
 Usa il <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> metodo per determinare se il `LogtoConsole` parametro è stato impostato. Se `yes`, verrà utilizzato il <xref:System.Configuration.Install.InstallContext.LogMessage%2A> metodo per scrivere i messaggi di stato per il file di log di installazione e la console.  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LogMessage (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LogMessage(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Messaggio da inserire.</param>
        <summary>Scrive un messaggio nel file di log di installazione e sulla console.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un programma di installazione è possibile chiamare questo metodo per scrivere lo stato di avanzamento o altre informazioni sullo stato nel file di log. Se i parametri della riga di comando specificano che deve essere visualizzata un'interfaccia utente, il programma di installazione deve visualizzare finestre di messaggio o eseguire query oltre a chiamare il <xref:System.Configuration.Install.InstallContext.LogMessage%2A> metodo. Il testo venga scritto nel file di log non saranno visibili dall'utente a meno che non InstallUtil.exe viene utilizzato per eseguire l'installazione e "/ /LogToConsole = true" è specificato nella riga di comando.  
  
   
  
## Examples  
 In questo esempio è tratto di un esempio di Cenni preliminari sulla classe <xref:System.Configuration.Install.InstallContext> classe.  
  
 Usa il <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> metodo per determinare se il `LogtoConsole` parametro è stato impostato. Se `yes`, verrà utilizzato il <xref:System.Configuration.Install.InstallContext.LogMessage%2A> metodo per scrivere i messaggi di stato per il file di log di installazione e la console.  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.InstallContext.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Parameters { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene i parametri della riga di comando immessi al momento dell'esecuzione di InstallUtil.exe.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.StringDictionary" /> che rappresenta i parametri della riga di comando immessi al momento dell'esecuzione del file eseguibile di installazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando un nuovo <xref:System.Configuration.Install.InstallContext> viene creata, la riga di comando vengono analizzati i parametri in di <xref:System.Configuration.Install.InstallContext.Parameters%2A> proprietà. I valori dei parametri e le chiavi sono stringhe.  
  
   
  
## Examples  
 In questo esempio è tratto di un esempio di Cenni preliminari sulla classe <xref:System.Configuration.Install.InstallContext> classe.  
  
 Nell'esempio viene recuperata la <xref:System.Configuration.Install.InstallContext.Parameters%2A> proprietà per verificare se un argomento della riga di comando è stato immesso dall'utente. Utilizza inoltre il <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> metodo per determinare se il `LogtoConsole` parametro è stato impostato. Se `yes`, verrà utilizzato il <xref:System.Configuration.Install.InstallContext.LogMessage%2A> metodo per scrivere i messaggi di stato per il file di log di installazione e la console.  
  
 [!code-cpp[InstallContext_InstallContext#6](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#6)]
 [!code-csharp[InstallContext_InstallContext#6](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#6)]
 [!code-vb[InstallContext_InstallContext#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ParseCommandLine">
      <MemberSignature Language="C#" Value="protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Specialized.StringDictionary ParseCommandLine(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ParseCommandLine (args As String()) As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Specialized::StringDictionary ^ ParseCommandLine(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args">Matrice contenente i parametri della riga di comando.</param>
        <summary>Analizza i parametri della riga di comando in un dizionario di stringhe.</summary>
        <returns>Oggetto <see cref="T:System.Collections.Specialized.StringDictionary" /> contenente i parametri analizzati della riga di comando.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>