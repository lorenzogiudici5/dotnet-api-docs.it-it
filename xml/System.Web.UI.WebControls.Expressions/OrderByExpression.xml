<Type Name="OrderByExpression" FullName="System.Web.UI.WebControls.Expressions.OrderByExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e19ed0b09564e1291919b59b5ca82c7a36e08e48" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36386151" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class OrderByExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OrderByExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class OrderByExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class OrderByExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <TypeSignature Language="F#" Value="type OrderByExpression = class&#xA;    inherit DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "ThenByExpressions")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Consente di applicare un'espressione di ordinamento a un oggetto <see cref="T:System.Linq.IQueryable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> classe viene utilizzata la <xref:System.Web.UI.WebControls.QueryExtender> controllo ordinare i dati in ordine crescente o decrescente. L'ordinamento viene eseguito dall'operatore di confronto predefinito per il tipo dell'elemento.  
  
 Il <xref:System.Web.UI.WebControls.QueryExtender> controllo supporta un'ampia gamma di opzioni che è possibile utilizzare per filtrare i dati. Dopo aver utilizzato le opzioni di filtro, è possibile utilizzare il <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> oggetto per ordinare i dati.  
  
 Specificare il campo dei dati da ordinare utilizzando le <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A> proprietà. Specificare la direzione di ordinamento utilizzando il <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> proprietà. Dopo il <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> oggetto è stato applicato all'origine dati, è possibile utilizzare il <xref:System.Web.UI.WebControls.Expressions.ThenBy> le espressioni per eseguire un ordinamento successivo in un altro campo dati.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come eseguire la ricerca della tabella Products del database AdventureWorks per prodotti con nomi che iniziano con la stringa specificata nel `SearchTextBox` casella di testo. Il <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> object Ordina i dati per il campo dei dati ListPrice in ordine decrescente e quindi per il campo ID prodotto in ordine crescente. Il risultato della query che restituisce il <xref:System.Web.UI.WebControls.LinqDataSource> controllo viene visualizzato un <xref:System.Web.UI.WebControls.GridView> controllo.  
  
 Questo esempio di codice fa parte di un esempio più esaustivo disponibile in [procedura dettagliata: filtro dei dati in una pagina Web utilizzando la sintassi dichiarativa](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> è <see langword="null" />.</exception>
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OrderByExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OrderByExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la proprietà dell'oggetto <see cref="T:System.Linq.IQueryable" /> in base a cui effettuare l'ordinamento.</summary>
        <value>Proprietà dell'oggetto origine dati <see cref="T:System.Linq.IQueryable" /> in base a cui effettuare l'ordinamento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> object Ordina i dati in un campo dati. Successive operazioni di ordinamento possono essere eseguite su un campo di dati diversi con la <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ordinare i dati per il campo ListPrice in ordine decrescente e quindi per il campo ID prodotto in ordine crescente. Questo esempio di codice fa parte di un esempio più esaustivo disponibile in [procedura dettagliata: filtro dei dati in una pagina Web utilizzando la sintassi dichiarativa](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SortDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SortDirection Direction { System::Web::UI::WebControls::SortDirection get(); void set(System::Web::UI::WebControls::SortDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.UI.WebControls.SortDirection with get, set" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene e imposta la direzione di ordinamento dell'oggetto origine dati <see cref="T:System.Linq.IQueryable" />.</summary>
        <value>Direzione di ordinamento dell'oggetto origine dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> classe viene utilizzata la <xref:System.Web.UI.WebControls.QueryExtender> controllo ordinare i dati in ordine crescente o decrescente. La direzione dell'operazione di ordinamento viene specificata utilizzando il <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ordinare i dati per il campo ListPrice in ordine decrescente e quindi per il campo ProductID in ordine crescente. Questo esempio di codice fa parte di un esempio più esaustivo disponibile [procedura dettagliata: filtro dei dati in una pagina Web utilizzando la sintassi dichiarativa](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="orderByExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Specifica l'origine dati a cui applicare l'ordinamento.</param>
        <summary>Applica un'espressione di ordinamento a un oggetto <see cref="T:System.Linq.IQueryable" /> in base al valore di una proprietà <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> e di una proprietà <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />.</summary>
        <returns>Istanza dell'origine dati a cui è stata applicata l'espressione.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenByExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThenByExpressions As Collection(Of ThenBy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Web::UI::WebControls::Expressions::ThenBy ^&gt; ^ ThenByExpressions { System::Collections::ObjectModel::Collection&lt;System::Web::UI::WebControls::Expressions::ThenBy ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThenByExpressions : System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt;" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'insieme di espressioni <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> da applicare dopo l'applicazione di un valore <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> all'origine dati.</summary>
        <value>Insieme di espressioni <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> da applicare dopo l'applicazione di <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> all'origine dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopo che un ordinamento operazione viene eseguita tramite il <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> nella <xref:System.Web.UI.WebControls.QueryExtender> controllare, ordinamento successive operazioni possono essere eseguite utilizzando il <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ordinare i dati per il campo ListPrice in ordine decrescente e quindi per il campo ID prodotto in ordine crescente ordine tramite il <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>. Questo esempio di codice fa parte di un esempio più esaustivo disponibile in [procedura dettagliata: filtro dei dati in una pagina Web utilizzando la sintassi dichiarativa](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>