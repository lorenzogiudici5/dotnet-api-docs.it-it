<Type Name="RangeExpression" FullName="System.Web.UI.WebControls.Expressions.RangeExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a810fc5a75cdfa6195773eaff346409e0725b392" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39749158" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RangeExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RangeExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.RangeExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class RangeExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class RangeExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type RangeExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un modo per determinare se un valore è maggiore o minore di un valore specificato o se un valore è compreso tra due valori specificati.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.QueryExtender> controllo offre la possibilità di filtrare i dati in una pagina Web tramite le classi di <xref:System.Web.UI.WebControls.Expressions> dello spazio dei nomi. Queste classi includono il <xref:System.Web.UI.WebControls.Expressions.RangeExpression> classe.  
  
 Il <xref:System.Web.UI.WebControls.Expressions.RangeExpression> classe esegue la ricerca di una colonna di dati utilizzando una coppia di valori che definiscono l'intervallo. Si utilizza il <xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A> proprietà per specificare la colonna da cercare. Si utilizza il <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> proprietà per specificare se includere o escludere il valore minimo nella ricerca produce come risultato e userai il <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> proprietà per specificare se includere o escludere il valore massimo. I valori minimi e massimo possono essere specificati [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] controlli e i valori possono quindi essere passati per il <xref:System.Web.UI.WebControls.QueryExtender> controllo come parametri in <xref:System.Web.UI.WebControls.ControlParameter> controlli. In genere, i risultati vengono visualizzati in un controllo con associazione a dati.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come eseguire la ricerca della colonna ListPrice nella tabella Products del database AdventureWorks per i prodotti che hanno un prezzo di listino nell'intervallo specificato nella `FromTextBox` e `ToTextBox` caselle di testo. Il filtro include il valore minimo, ma esclude il massimo valore nei risultati. I risultati vengono visualizzati un <xref:System.Web.UI.WebControls.Label> controllo.  
  
 Questo esempio di codice è parte di un esempio più esaustivo disponibile nel [procedura dettagliata: filtro dei dati in una pagina Web con sintassi dichiarativa](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> è <see langword="null" />.</exception>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RangeExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RangeExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.Expressions.RangeExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il campo da utilizzare per il confronto.</summary>
        <value>Campo da utilizzare per il confronto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'espressione intervallo cerca un campo di dati per l'intervallo specificato.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come eseguire la ricerca della colonna prezzo di listino nella tabella Products del database AdventureWorks per i prodotti che hanno un prezzo di listino nell'intervallo specificato nella `FromTextBox` e `ToTextBox` caselle di testo.  
  
 Questo esempio di codice è parte di un esempio più esaustivo disponibile nel [procedura dettagliata: filtro dei dati in una pagina Web con sintassi dichiarativa](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="rangeExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Oggetto da utilizzare per il confronto.</param>
        <summary>Ottiene l'oggetto <see cref="T:System.Linq.IQueryable" /> sul quale è stato eseguito il confronto di intervalli.</summary>
        <returns>Istanza dell'oggetto <see cref="T:System.Linq.IQueryable" /> a cui è stata applicata l'espressione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo Usa l'oggetto specificato <xref:System.Linq.IQueryable> oggetto per risolvere l'espressione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> è <see langword="null" />.  
  
oppure 
Le proprietà <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> e <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> vengono impostate su <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />.  
  
oppure 
La proprietà <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> o <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> non è impostata su <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" /> e l'insieme di parametri è vuoto.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MaxType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MaxType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MaxType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MaxType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore massimo dell'intervallo.</summary>
        <value>Tipo di confronto da utilizzare per il valore massimo. L'impostazione predefinita è <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />, a indicare che il confronto del valore massimo non viene eseguito.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I valori possibili per questa proprietà sono <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>, e <xref:System.Web.UI.WebControls.Expressions.RangeType.None>.  
  
 Quando la <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> è impostata su <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, il valore massimo dell'intervallo è inclusa nei risultati della ricerca. Ciò equivale all'esecuzione di un > = operazione. Se si imposta la proprietà su <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive> campo, equivale a specificare un > o < operazione. Se si imposta la proprietà su <xref:System.Web.UI.WebControls.Expressions.RangeType.None>, l'intervallo viene imposto alcun limite.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come includere il valore minimo nell'intervallo specificato e come escludere il valore massimo. I valori minimo e massimi vengono immessi nelle caselle di testo. Questo esempio di codice è parte di un esempio più esaustivo disponibile nel [procedura dettagliata: filtro dei dati in una pagina Web con sintassi dichiarativa](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MinType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MinType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberSignature Language="VB.NET" Value="Public Property MinType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MinType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MinType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore minimo dell'intervallo.</summary>
        <value>Tipo di confronto da utilizzare per il valore minimo. L'impostazione predefinita è <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />, a indicare che il confronto del valore minimo non viene eseguito.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I valori possibili per questa proprietà sono <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>, e <xref:System.Web.UI.WebControls.Expressions.RangeType.None>.  
  
 Quando la <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> oppure <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> è impostata su <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, il valore minimo e massimo dell'intervallo è incluso nei risultati della ricerca. Ciò equivale all'esecuzione di un > = o \<= operazione. Il <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive> campo equivale al > o < operazione e <xref:System.Web.UI.WebControls.Expressions.RangeType.None> non impone alcun limite dell'intervallo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come includere il valore minimo nell'intervallo specificato e come escludere il valore massimo. I valori minimo e massimi vengono immessi nelle caselle di testo. Questo esempio di codice è parte di un esempio più esaustivo disponibile nel [procedura dettagliata: filtro dei dati in una pagina Web con sintassi dichiarativa](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>