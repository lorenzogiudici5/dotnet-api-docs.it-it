<Type Name="SearchExpression" FullName="System.Web.UI.WebControls.Expressions.SearchExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fdc792f734bfb346f5798c3d3dca05811266108b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39962851" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SearchExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.SearchExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class SearchExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type SearchExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un modo per cercare valori stringa in uno o più campi e per confrontarli rispetto a un valore stringa specificato.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.QueryExtender> controllo offre la possibilità di filtrare i dati in una pagina Web usando il <xref:System.Web.UI.WebControls.Expressions.SearchExpression> classe. Il <xref:System.Web.UI.WebControls.Expressions.SearchExpression> classe confronta una stringa specificata in un campo o campi in un valore che viene fornito. L'espressione consente di eseguire un "inizia con", "contiene" o "termina con" ricerca. È necessario specificare i valori per il <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> e il <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> le proprietà per indicare il tipo di ricerca che si desidera eseguire e i campi di dati che si desidera eseguire la ricerca. Se il provider LINQ che usa nel <xref:System.Web.UI.WebControls.QueryExtender> controllo supporta la distinzione maiuscole/minuscole, è possibile usare il <xref:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType%2A> proprietà per consentire o ignorare maiuscole e minuscole.  
  
 Il valore per la ricerca può essere fornito da un [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] controllo. Per specificare ciò, impostare il <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> proprietà del <xref:System.Web.UI.WebControls.ControlParameter> classe il <xref:System.Web.UI.WebControls.Expressions.SearchExpression> l'ID di oggetto un [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] controllo. Se il valore per la ricerca viene immesso nella casella di testo, ad esempio il <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> proprietà deve essere impostata sull'ID del controllo casella di testo. È possibile usare la <xref:System.Web.UI.WebControls.Expressions.SearchExpression> classe in combinazione con le altre espressioni che il <xref:System.Web.UI.WebControls.QueryExtender> supportato, ad esempio il <xref:System.Web.UI.WebControls.Expressions.RangeExpression> filtro. Ad esempio, è possibile cercare i nomi di prodotto contenenti la stringa "tè" e un prezzo di listino compresi tra 100 e 200.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come cercare nella colonna Name della tabella Products del database AdventureWorks per prodotti i cui nomi che iniziano con la stringa specificata nel `SearchTextBox` controllo. Il risultato restituito dal <xref:System.Web.UI.WebControls.LinqDataSource> controllo viene visualizzato un <xref:System.Web.UI.WebControls.GridView> controllo.  
  
 Questo esempio di codice fa parte di un esempio più esaustivo fornito in [procedura dettagliata: filtro dei dati in una pagina Web con sintassi dichiarativa](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> è <see langword="null" /> (<see langword="Nothing" /> in Visual Basic)</exception>
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.SearchExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SearchExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComparisonType">
      <MemberSignature Language="C#" Value="public StringComparison ComparisonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.StringComparison ComparisonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType" />
      <MemberSignature Language="VB.NET" Value="Public Property ComparisonType As StringComparison" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property StringComparison ComparisonType { StringComparison get(); void set(StringComparison value); };" />
      <MemberSignature Language="F#" Value="member this.ComparisonType : StringComparison with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di confronto tra stringhe da eseguire.</summary>
        <value>Tipo di confronto tra stringhe da eseguire.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di utilizzare il <xref:System.StringComparison> enumerazione per specificare come viene eseguita la ricerca. Il <xref:System.StringComparison> enumerazione viene utilizzata per specificare se un confronto tra stringhe utilizza le impostazioni cultura correnti o le impostazioni cultura invarianti, e che si usi il testo o le regole di ordinamento per ordinale. Se il provider di dati che il <xref:System.Web.UI.WebControls.QueryExtender> Usa supporta la distinzione maiuscole/minuscole, è possibile usare una delle proprietà del tipo di confronto per consentire o ignorare maiuscole e minuscole.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataFields">
      <MemberSignature Language="C#" Value="public string DataFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFields" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFields As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFields { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFields : string with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene e imposta un singolo campo o un elenco di campi separati da virgole in cui eseguire la ricerca.</summary>
        <value>Campo o campi in cui eseguire la ricerca.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Expressions.SearchExpression> classe esegue la ricerca in uno o più campi di dati nella tabella specificata. Almeno un campo dati deve essere specificato nel <xref:System.Web.UI.WebControls.Expressions.SearchExpression> istanza. Se si specifica più di un campo di dati, separare i campi usando una virgola.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come cercare il nome e i campi dati ProductNumber nella tabella Products del database AdventureWorks per prodotti con nomi che iniziano con una stringa specificata. Questo esempio di codice è parte di un esempio più esaustivo disponibile nel [procedura dettagliata: filtro dei dati in una pagina Web con sintassi dichiarativa](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:SearchExpression SearchType="StartsWith"   
      DataFields="Name","ProductNumber" >  
  <asp:ControlParameter ControlID="SearchTextBox" />  
</asp:SearchExpression>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="searchExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Oggetto da utilizzare.</param>
        <summary>Applica un oggetto <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> all'oggetto <see cref="T:System.Linq.IQueryable" /> specificato in base all'oggetto <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" />.</summary>
        <returns>Istanza dell'oggetto <see cref="T:System.Linq.IQueryable" /> a cui è stato applicato l'oggetto <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà restituisce la raccolta di parametri utilizzati nel <xref:System.Web.UI.WebControls.Expressions.SearchExpression> dell'oggetto e applica l'espressione per il <xref:System.Linq.IQueryable> oggetto. Se si specificano più campi di dati, il `AND` operatore venga applicato per i campi dati.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SearchType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.SearchType SearchType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.SearchType SearchType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchType As SearchType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::SearchType SearchType { System::Web::UI::WebControls::Expressions::SearchType get(); void set(System::Web::UI::WebControls::Expressions::SearchType value); };" />
      <MemberSignature Language="F#" Value="member this.SearchType : System.Web.UI.WebControls.Expressions.SearchType with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.SearchType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.SearchType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" /> che determina il punto della stringa in cui viene eseguita la ricerca.</summary>
        <value>Tipo di ricerca da eseguire.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.UI.WebControls.Expressions.SearchType> utilizzata dalla proprietà di <xref:System.Web.UI.WebControls.Expressions.SearchType> enumerazione che contiene i tipi di ricerca da usare in un'istanza del <xref:System.Web.UI.WebControls.Expressions.SearchExpression> classe.  
  
 La tabella seguente elenca i possibili valori di enumerazione.  
  
|Enumerazione|Descrizione|  
|-----------------|-----------------|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.StartsWith>|Indica una ricerca che inizia in un punto qualsiasi in un campo.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.Contains>|Indica una ricerca che inizia all'inizio di un campo.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.EndsWith>|Indica una ricerca che alla fine di un campo.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>