<Type Name="AppSettingsReader" FullName="System.Configuration.AppSettingsReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6f42fcff78c16ba23ccf407fcd9d84e90e98ff2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30376895" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AppSettingsReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppSettingsReader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.AppSettingsReader" />
  <TypeSignature Language="VB.NET" Value="Public Class AppSettingsReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppSettingsReader" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un metodo per la lettura di valori di un determinato tipo dalla configurazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente crea un file di configurazione che contiene il `<appSettings>` sezione e quindi viene utilizzato il <xref:System.Configuration.AppSettingsReader> per leggere le impostazioni appena generate.  
  
```  
using System;  
using System.Configuration;  
  
class Program  
{  
    static void Main(string[] args)  
    {  
        var reader = new AppSettingsReader();  
  
        var stringSetting = reader.GetValue("String setting", typeof(string));  
        Console.WriteLine("String setting: " + stringSetting);  
  
        var dateTimeSetting = reader.GetValue("DateTime setting", typeof(DateTime));  
        Console.WriteLine("DateTime setting: " + dateTimeSetting);  
  
        try  
        {  
            var missingSetting = reader.GetValue("Int setting", typeof(Int32));  
        }  
        catch (InvalidOperationException e)  
        {  
            Console.WriteLine("Missing key error: " + e.Message);  
        }  
  
        Console.WriteLine("Press any key to continue");  
        Console.ReadKey();  
    }  
}  
```  
  
 Nell'esempio seguente viene illustrato un file di configurazione utilizzato dall'esempio precedente.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<configuration>  
    <appSettings>  
        <add key="String setting" value="String retrieved from App.Config"/>  
        <add key="Date setting" value="Thursday, December 01, 2005 12:53:56 PM"/>  
    </appSettings>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.AppSettingsSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppSettingsReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.AppSettingsReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppSettingsReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Configuration.AppSettingsReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio seguente crea un file di configurazione che contiene il `<appSettings>` sezione e quindi viene utilizzato il <xref:System.Configuration.AppSettingsReader> per leggere le impostazioni appena generate.  
  
```  
using System;  
using System.Configuration;  
  
class Program  
{  
    static void Main(string[] args)  
    {  
        var reader = new AppSettingsReader();  
  
        var stringSetting = reader.GetValue("String setting", typeof(string));  
        Console.WriteLine("String setting: " + stringSetting);  
  
        var dateTimeSetting = reader.GetValue("DateTime setting", typeof(DateTime));  
        Console.WriteLine("DateTime setting: " + dateTimeSetting);  
  
        try  
        {  
            var missingSetting = reader.GetValue("Int setting", typeof(Int32));  
        }  
        catch (InvalidOperationException e)  
        {  
            Console.WriteLine("Missing key error: " + e.Message);  
        }  
  
        Console.WriteLine("Press any key to continue");  
        Console.ReadKey();  
    }  
}  
```  
  
 Nell'esempio seguente viene illustrato un file di configurazione utilizzato dall'esempio precedente.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<configuration>  
    <appSettings>  
        <add key="String setting" value="String retrieved from App.Config"/>  
        <add key="Date setting" value="Thursday, December 01, 2005 12:53:56 PM"/>  
    </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string key, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(string key, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ key, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="key">Chiave di cui ottenere il valore.</param>
        <param name="type">Tipo di oggetto da restituire.</param>
        <summary>Ottiene il valore di una chiave specificata dalla proprietà <see cref="P:System.Configuration.ConfigurationSettings.AppSettings" /> e restituisce un oggetto del tipo specificato che contiene il valore ricavato dalla configurazione.</summary>
        <returns>Valore della chiave specificata.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Configuration.AppSettingsReader.GetValue%2A> metodo per recuperare il valore per ogni chiave di `<appSettings>` sezione del file di configurazione.  
  
 [!code-csharp[System.Configuration.AppSettingsReader#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.AppSettingsReader/CS/AppSettingsReader.cs#2)]
 [!code-vb[System.Configuration.AppSettingsReader#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.AppSettingsReader/VB/AppSettingsReader.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> è <see langword="null" />.  
  
 \- oppure -  
  
 <paramref name="type" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="key" /> non esiste nella sezione di configurazione <see langword="&lt;appSettings&gt;" />.  
  
 \- oppure -  
  
 Il valore della sezione di configurazione <see langword="&lt;appSettings&gt;" /> per <paramref name="key" /> non è di tipo <paramref name="type" />.</exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
      </Docs>
    </Member>
  </Members>
</Type>