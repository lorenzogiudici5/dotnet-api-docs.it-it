<Type Name="ApplicationSettingsBase" FullName="System.Configuration.ApplicationSettingsBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c0040a0585c9b345ede611c5c918a67c6203f833" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36698378" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ApplicationSettingsBase extends System.Configuration.SettingsBase implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ApplicationSettingsBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ApplicationSettingsBase&#xA;Inherits SettingsBase&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationSettingsBase abstract : System::Configuration::SettingsBase, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type ApplicationSettingsBase = class&#xA;    inherit SettingsBase&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Funge da classe base da cui derivare le classi wrapper concrete per l'implementazione della funzionalità relativa alle impostazioni dell'applicazione nelle applicazioni Windows Form.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase> Aggiunge le funzionalità seguenti per il <xref:System.Configuration.SettingsBase> (classe), che viene utilizzata dalle applicazioni basate sul Web:  
  
-   La possibilità di rilevare gli attributi in una classe derivata, di wrapper delle impostazioni. <xref:System.Configuration.ApplicationSettingsBase> supporta il modello dichiarativo utilizzato per la proprietà della classe wrapper, come descritto più avanti.  
  
-   Livello superiore <xref:System.Configuration.ApplicationSettingsBase.Save%2A> e <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> metodi.  
  
-   Eventi di convalida aggiuntivi che è possibile gestire per garantire la correttezza delle singole impostazioni.  
  
 Nell'architettura Impostazioni applicazione, per accedere a un gruppo di proprietà delle impostazioni è necessario derivare una classe wrapper concreta da <xref:System.Configuration.ApplicationSettingsBase>. La classe wrapper Personalizza <xref:System.Configuration.ApplicationSettingsBase> nei modi seguenti:  
  
-   Per ogni proprietà delle impostazioni a cui accedere, una proprietà pubblica fortemente tipizzata corrispondente viene aggiunto alla classe wrapper. Questa proprietà ha `get` e `set` le funzioni di accesso per le impostazioni dell'applicazione di lettura/scrittura, ma solo un `get` della funzione di accesso per le impostazioni di sola lettura.  
  
-   È necessario applicare gli attributi appropriati per la proprietà pubblica della classe wrapper per indicare le caratteristiche della proprietà di impostazione, ad esempio l'ambito dell'impostazione (applicazione o utente), se l'impostazione deve supportare il roaming, il valore predefinito per il impostazione, il provider di impostazioni da utilizzare e così via. Ogni proprietà è necessaria per specificare il relativo ambito, utilizzando <xref:System.Configuration.ApplicationScopedSettingAttribute> o <xref:System.Configuration.UserScopedSettingAttribute>. Le impostazioni con ambito di applicazione sono di sola lettura se il valore predefinito <xref:System.Configuration.LocalFileSettingsProvider> viene utilizzato.  
  
 Il <xref:System.Configuration.ApplicationSettingsBase> classe utilizza la reflection per rilevare questi attributi in fase di esecuzione. La maggior parte di queste informazioni viene passato al livello di provider di impostazioni, è responsabile dell'archiviazione, un formato di persistenza e così via.  
  
 Quando un'applicazione dispone di più classi wrapper di impostazioni, ogni classe definisce un *gruppo di impostazioni*. Ogni gruppo presenta le caratteristiche seguenti:  
  
-   Un gruppo può contenere qualsiasi tipo di impostazioni delle proprietà o un numero.  
  
-   Se il nome del gruppo non è impostato in modo esplicito mediante la classe wrapper con la decorazione un <xref:System.Configuration.SettingsGroupNameAttribute>, quindi viene generato automaticamente un nome.  
  
 Per impostazione predefinita, tutte le applicazioni basate su client utilizzano il <xref:System.Configuration.LocalFileSettingsProvider> per fornire l'archiviazione. Se si desidera un provider di impostazioni alternativo, quindi la classe wrapper o una proprietà deve essere decorato con un corrispondente <xref:System.Configuration.SettingsProviderAttribute>.  
  
 Per ulteriori informazioni sull'utilizzo di impostazioni dell'applicazione, vedere [impostazioni applicazione per Windows Form](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo delle impostazioni dell'applicazione per rendere persistenti gli attributi seguenti del form principale: posizione, dimensione, colore di sfondo e testo della barra del titolo. Tutti questi attributi vengono rese persistenti come proprietà di impostazioni dell'applicazione single nel `FormSettings` classe, denominata `FormLocation`, `FormSize`, `FormBackColor` e `FormText`, rispettivamente. Ad eccezione degli `FormText` e `Size` sono dati associati alle proprietà di modulo associato e un valore applicato con impostazione prevedono <xref:System.Configuration.DefaultSettingValueAttribute>.  
  
 Il modulo contiene quattro controlli figlio contenenti i nomi e le funzioni seguenti:  
  
-   Un pulsante denominato `btnBackColor` consente di visualizzare il **colore** finestra di dialogo comune.  
  
-   Un pulsante denominato `btnReload` utilizzato per <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> le impostazioni dell'applicazione.  
  
-   Un pulsante denominato `btnReset` utilizzato per <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> le impostazioni dell'applicazione.  
  
-   Una casella di testo denominato `tbStatus` consente di visualizzare informazioni sullo stato del programma.  
  
 Si noti che dopo ogni esecuzione dell'applicazione, un carattere punto viene aggiunto per il testo del titolo del form.  
  
 Questo esempio si presuppone un Form con un <xref:System.Windows.Forms.ColorDialog> classe denominata `colorDialog1`e una <xref:System.Windows.Forms.StatusStrip> controllare con un <xref:System.Windows.Forms.ToolStripStatusLabel> denominato `tbStatus`. Inoltre, richiede tre <xref:System.Windows.Forms.Button> gli oggetti denominati `btnReload`, `btnReset`, e `btnBackColor`.  
  
 [!code-cpp[AppSettingsSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#1)]
 [!code-csharp[AppSettingsSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#1)]
 [!code-vb[AppSettingsSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.SettingsGroupNameAttribute" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza un'istanza della classe <see cref="T:System.Configuration.ApplicationSettingsBase" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza un'istanza della classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> sullo stato predefinito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il costruttore predefinito è stato progettato per funzionare con il presupposto che nessun componente associato alla classe wrapper, corrente impostazioni che deriva da <xref:System.Configuration.ApplicationSettingsBase>.  
  
 Quando viene creata un'istanza di una classe wrapper, ereditato del codice verrà eseguita automaticamente le azioni seguenti:  
  
1.  La reflection della classe.  
  
2.  Per ogni proprietà del wrapper contrassegnata con uno `[UserScopedSettingAttribute]` oppure `[ApplicationScopedSettingAttribute]`, un corrispondente <xref:System.Configuration.SettingsProperty> viene creato.  
  
3.  Ogni <xref:System.Configuration.SettingsProperty> presenta alcuni dei relativi set di proprietà basate su altri attributi che possono essere presenti nelle proprietà del wrapper, ad esempio il valore predefinito o il provider di impostazioni.  
  
4.  Tutti gli altri attributi sono semplicemente inseriti in un elenco di attributi, la <xref:System.Configuration.SettingsProperty.Attributes%2A> proprietà del <xref:System.Configuration.SettingsProperty> classe.  
  
5.  Tutti i <xref:System.Configuration.SettingsProperty> gli oggetti vengono aggiunti a un <xref:System.Configuration.SettingsPropertyCollection> rappresentato dal <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> proprietà del <xref:System.Configuration.ApplicationSettingsBase> classe. Questa raccolta viene quindi passata al <xref:System.Configuration.SettingsBase.Initialize%2A> metodo.  
  
 Come suggerito dal passaggio 3 riportato in precedenza, <xref:System.Configuration.ApplicationSettingsBase> funziona in modo nativo con diversi attributi della proprietà, in particolare i seguenti: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>, e <xref:System.Configuration.SettingsSerializeAsAttribute>. Tutte le altre impostazioni degli attributi vengono semplicemente passate al provider sottostante appropriato.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="T:System.Configuration.SettingsPropertyCollection" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owner">Componente che fungerà da proprietario dell'oggetto impostazioni dell'applicazione.</param>
        <summary>Inizializza un'istanza della classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> mediante il componente proprietario specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore equivale esattamente al <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> tramite la chiamata del costruttore:  
  
 `ApplicationSettingsBase(owner, String.Empty)`  
  
 Per informazioni sull'uso di reflection durante la creazione dell'istanza di una classe wrapper, vedere il valore predefinito <xref:System.Configuration.ApplicationSettingsBase.%23ctor> costruttore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="owner" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.ComponentModel.Component.Site" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase settingsKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="settingsKey">Classe <see cref="T:System.String" /> che identifica in modo univoco istanze distinte della classe wrapper.</param>
        <summary>Inizializza un'istanza della classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> mediante la chiave delle impostazioni specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza la <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> il valore della proprietà di `settingsKey` parametro. Questa proprietà è utile per evitare ambiguità tra istanze diverse della classe wrapper impostazioni nello stesso dominio applicazione.  
  
 Per informazioni sull'uso di reflection durante la creazione dell'istanza di una classe wrapper, vedere il valore predefinito <xref:System.Configuration.ApplicationSettingsBase.%23ctor> costruttore.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner, string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent, settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner, System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent * string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase (owner, settingsKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Componente che fungerà da proprietario dell'oggetto impostazioni dell'applicazione.</param>
        <param name="settingsKey">Classe <see cref="T:System.String" /> che identifica in modo univoco istanze distinte della classe wrapper.</param>
        <summary>Inizializza un'istanza della classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> mediante il componente proprietario e la chiave delle impostazioni specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.ComponentModel.IComponent> oggetto specificato dal `owner` parametro funge da proprietario dell'istanza corrente di questa classe di impostazioni di applicazioni. Durante l'inizializzazione delle impostazioni di classe wrapper derivata da <xref:System.Configuration.ApplicationSettingsBase>, viene eseguita una query nel sito del proprietario per un <xref:System.Configuration.ISettingsProviderService>. Se è presente, viene utilizzato nel provider di impostazioni nativo per tutte le proprietà della classe wrapper, come specificato dal <xref:System.Configuration.SettingsProviderAttribute>.  
  
 Questo costruttore inizializza la <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> il valore della proprietà di `settingsKey` parametro. Questa proprietà è utile per evitare ambiguità tra istanze diverse della classe wrapper nello stesso dominio applicazione.  
  
 Per informazioni sull'uso di reflection durante la creazione dell'istanza di una classe wrapper, vedere il valore predefinito <xref:System.Configuration.ApplicationSettingsBase.%23ctor> costruttore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="owner" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Context" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Context As SettingsContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsContext ^ Context { System::Configuration::SettingsContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Configuration.SettingsContext" Usage="System.Configuration.ApplicationSettingsBase.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il contesto delle impostazioni dell'applicazione associato al gruppo di impostazioni.</summary>
        <value>Oggetto <see cref="T:System.Configuration.SettingsContext" /> associato al gruppo di impostazioni.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni classe wrapper delle impostazioni derivato da <xref:System.Configuration.ApplicationSettingsBase> dispone di un contesto è associato. Il contesto viene passato al provider di impostazioni per ogni proprietà per identificare come la proprietà viene utilizzata. Il contesto funge pertanto da un hint per determinare il modo migliore per rendere persistenti i valori delle impostazioni applicazione associata al provider di impostazioni.  
  
 Al contrario, il <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> proprietà consente al provider di impostazioni evitare ambiguità tra più istanze della stessa classe wrapper.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="T:System.Configuration.SettingsContext" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.ApplicationSettingsGroup" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public object GetPreviousVersion (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPreviousVersion(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPreviousVersion(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousVersion : string -&gt; obj" Usage="applicationSettingsBase.GetPreviousVersion propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Classe <see cref="T:System.String" /> contenente il nome della proprietà delle impostazioni di cui deve essere restituito il valore.</param>
        <summary>Restituisce il valore della proprietà delle impostazioni denominata relativa alla versione precedente della stessa applicazione.</summary>
        <returns>Classe <see cref="T:System.Object" /> contenente il valore della classe <see cref="T:System.Configuration.SettingsProperty" /> specificata, se presente; in caso contrario, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> metodo viene spesso utilizzato in combinazione con il <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> metodo durante la migrazione delle impostazioni dell'applicazione durante l'installazione di una nuova versione di un'applicazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">La proprietà non esiste. Il numero della proprietà è pari a zero oppure non è possibile trovare la proprietà nell'archivio dati.</exception>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Configuration.ApplicationSettingsBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Classe <see cref="T:System.String" /> contenente il nome della proprietà a cui accedere.</param>
        <summary>Ottiene o imposta il valore della proprietà delle impostazioni dell'applicazione specificata.</summary>
        <value>Se presente, il valore della proprietà delle impostazioni denominata; in caso contrario, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.ApplicationSettingsBase.Item%2A> proprietà, noto anche come indicizzatore, viene utilizzata regolarmente nelle impostazioni di classe wrapper derivata da <xref:System.Configuration.ApplicationSettingsBase>. <xref:System.Configuration.ApplicationSettingsBase.Item%2A> Associa la proprietà pubblica della classe wrapper per la proprietà impostazioni corrispondente.  
  
 <xref:System.Configuration.ApplicationSettingsBase.Item%2A> genera vari eventi a seconda dell'operazione in corso:  
  
-   La prima volta una proprietà viene recuperata, il <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> evento viene generato.  
  
-   Quando una proprietà è impostata, il <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> evento viene generato. Se il gestore non annullare l'evento, quindi il valore della proprietà è impostato e la <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> evento viene generato.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Nessuna proprietà è associata al wrapper corrente oppure non è possibile trovare la proprietà specificata.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">È stato effettuato un tentativo di impostazione di una proprietà in sola lettura.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">Il valore specificato è di tipo non compatibile con la proprietà delle impostazioni, durante un'operazione di impostazione.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Impossibile analizzare il file di configurazione.</exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="P:System.Configuration.SettingsProperty.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(object sender, class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (sender As Object, e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::Object ^ sender, System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnPropertyChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Origine dell'evento.</param>
        <param name="e">Oggetto <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingChanging(object sender, class System.Configuration.SettingChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingChanging (sender As Object, e As SettingChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingChanging(System::Object ^ sender, System::Configuration::SettingChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit&#xA;override this.OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingChanging (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Origine dell'evento.</param>
        <param name="e">Oggetto <see cref="T:System.Configuration.SettingChangingEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsLoaded(object sender, class System.Configuration.SettingsLoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsLoaded (sender As Object, e As SettingsLoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsLoaded(System::Object ^ sender, System::Configuration::SettingsLoadedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit&#xA;override this.OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsLoaded (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingsLoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Origine dell'evento.</param>
        <param name="e">Oggetto <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsSaving">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsSaving(object sender, class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsSaving (sender As Object, e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsSaving(System::Object ^ sender, System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsSaving (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Origine dell'evento.</param>
        <param name="e">Oggetto <see cref="T:System.ComponentModel.CancelEventArgs" /> che contiene i dati dell'evento.</param>
        <summary>Genera l'evento <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato. Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).  
  
 Il metodo <xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato. È la tecnica consigliata per la gestione dell'evento in una classe derivata.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si esegue l'override <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> in una classe derivata, assicurarsi di chiamare la classe base <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.SettingsPropertyCollection" Usage="System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di proprietà delle impostazioni nel wrapper.</summary>
        <value>Classe <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenente tutti gli oggetti <see cref="T:System.Configuration.SettingsProperty" /> utilizzati nel wrapper corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `get` funzione di accesso del <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> proprietà riflette su tutti i metadati della classe wrapper di impostazioni, derivata da <xref:System.Configuration.ApplicationSettingsBase>, determinare in modo dinamico il set di proprietà delle impostazioni dell'applicazione disponibili.  
  
 Il <xref:System.Configuration.ApplicationSettingsBase> classe in modo nativo riconosce determinate caratteristiche di un'impostazione dell'applicazione, ad esempio il nome, tipo di proprietà, provider di impostazioni, valore predefinito, leggere l'unico stato e una preferenza di serializzazione. Queste caratteristiche sono configurati in mirroring come proprietà nel <xref:System.Configuration.SettingsProperty> classe. Tutti gli altri attributi della proprietà di impostazione vengono semplicemente passati al provider di impostazioni associate.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Non è possibile trovare il provider di impostazioni associato o la creazione dell'istanza ha avuto esito negativo.</exception>
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="T:System.Configuration.SettingsProperty" />
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo la modifica del valore di una proprietà delle impostazioni dell'applicazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> evento viene generato quando viene modificata una proprietà delle impostazioni tramite il `set` funzione di accesso del <xref:System.Configuration.ApplicationSettingsBase.Item%2A> metodo, o per tutte le proprietà che viene ripristinata quando viene eseguita una chiamata per il <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> o <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> metodi.  
  
 Non è corrispondente `PropertyChanging` evento per questa classe; in alternativa, vedere il <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> evento.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
        <altmember cref="T:System.ComponentModel.PropertyChangedEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="PropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyValueCollection PropertyValues" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyValues As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyValueCollection ^ PropertyValues { System::Configuration::SettingsPropertyValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyValues : System.Configuration.SettingsPropertyValueCollection" Usage="System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un insieme di valori di proprietà.</summary>
        <value>
          <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> composto da valori di proprietà.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Providers As SettingsProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsProviderCollection ^ Providers { System::Configuration::SettingsProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Configuration.SettingsProviderCollection" Usage="System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'insieme di provider di impostazioni dell'applicazione utilizzati dal wrapper.</summary>
        <value>Classe <see cref="T:System.Configuration.SettingsProviderCollection" /> contenente tutti gli oggetti <see cref="T:System.Configuration.SettingsProvider" /> utilizzati dalle proprietà delle impostazioni del wrapper di impostazioni corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.SettingsProviderAttribute> determina il provider di impostazioni viene utilizzato da una classe wrapper di impostazioni o una proprietà di singola impostazione. Se questo attributo viene omesso, un'applicazione client utilizzerà la <xref:System.Configuration.LocalFileSettingsProvider>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reload();" />
      <MemberSignature Language="F#" Value="member this.Reload : unit -&gt; unit" Usage="applicationSettingsBase.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aggiorna i valori della proprietà delle impostazioni dell'applicazione dall'archivio permanente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> metodo cancella i valori delle proprietà attualmente memorizzati nella cache, causando un ricaricamento dei valori seguenti dall'archivio permanente quando viene eseguito l'accesso successivamente. Questo metodo esegue le azioni seguenti:  
  
-   Cancella le proprietà attualmente memorizzati nella cache, deselezionando la raccolta rappresentata dal <xref:System.Configuration.SettingsBase.PropertyValues%2A> proprietà.  
  
-   Genera il <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> evento per ogni membro del <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> insieme.  
  
 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> è in contrasto con <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in quanto il primo caricherà l'ultimo set di valori di impostazioni applicazione salvati, mentre il secondo caricherà i valori predefiniti salvati.  
  
   
  
## Examples  
 Illustrato nell'esempio di codice seguente il <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> richiamato nel corpo del metodo il <xref:System.Windows.Forms.Control.Click> gestore eventi per un pulsante denominato `btnReload`. In seguito a questa chiamata, i valori attualmente archiviati per le impostazioni dell'applicazione vengono ricaricati nelle corrispondenti proprietà. L'esempio di codice completo è elencato nella <xref:System.Configuration.ApplicationSettingsBase> Cenni preliminari sulla classe.  
  
 [!code-cpp[AppSettingsSample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#6)]
 [!code-csharp[AppSettingsSample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#6)]
 [!code-vb[AppSettingsSample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="M:System.Configuration.SettingsPropertyValueCollection.Clear" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="applicationSettingsBase.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ripristina le corrispondenti proprietà predefinite dei valori delle impostazioni dell'applicazione resi permanenti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> metodo lo sovrascrive le proprietà delle impostazioni con ambito di utente ripristinando i valori attualmente permanenti di ogni impostazione dell'applicazione. Questo metodo esegue le azioni seguenti:  
  
-   Chiama il <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType> metodo su ogni provider di impostazioni che supporta questo metodo facoltativo.  
  
-   Chiama il <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> metodo per forzare un aggiornamento dei valori di proprietà delle impostazioni.  
  
 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> è in contrasto con <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in quanto il primo caricherà l'ultimo set di valori di impostazioni applicazione salvati, mentre il secondo caricherà i valori predefiniti salvati.  
  
   
  
## Examples  
 Illustrato nell'esempio di codice seguente il <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> richiamato nel corpo del metodo il <xref:System.Windows.Forms.Control.Click> gestore eventi per un pulsante denominato `btnReset`. In seguito a questa chiamata, i valori predefiniti stored per le impostazioni dell'applicazione vengono ricaricati nelle corrispondenti proprietà. L'esempio di codice completo è elencato nella <xref:System.Configuration.ApplicationSettingsBase> Cenni preliminari sulla classe.  
  
 [!code-cpp[AppSettingsSample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#5)]
 [!code-csharp[AppSettingsSample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#5)]
 [!code-vb[AppSettingsSample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Impossibile analizzare il file di configurazione.</exception>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberSignature Language="F#" Value="override this.Save : unit -&gt; unit" Usage="applicationSettingsBase.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Memorizza i valori correnti delle proprietà delle impostazioni dell'applicazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.ApplicationSettingsBase.Save%2A> metodo scrive il valore corrente di ogni proprietà delle impostazioni al proprio archivio dati associato. Per ogni proprietà, questo metodo chiama il <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> (metodo) nel provider di impostazioni associate.  
  
 Questo metodo è diverso rispetto all'implementazione di classe di base in quanto genera il <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> evento prima che vengano scritti i valori.  
  
 Se le impostazioni con ambito di applicazione, le uniche impostazioni definite <xref:System.Configuration.ApplicationSettingsBase.Save%2A> non presenterà effetto e viene non restituito alcun errore se chiamato con il valore predefinito <xref:System.Configuration.LocalFileSettingsProvider>. <xref:System.Configuration.LocalFileSettingsProvider> Salva solo le impostazioni con ambito di utente.  
  
> [!IMPORTANT]
>  Non esiste alcun metodo di caricamento corrispondente perché i valori delle impostazioni dell'applicazione vengono caricati automaticamente durante l'inizializzazione delle classi wrapper. Al contrario, questi valori non salvati automaticamente al termine di un'applicazione. Pertanto, è necessario chiamare esplicitamente il <xref:System.Configuration.ApplicationSettingsBase.Save%2A> metodo per rendere persistenti i valori correnti delle impostazioni dell'applicazione. Questa operazione viene in genere eseguita nel <xref:System.Windows.Forms.Form.Closing> gestore dell'evento di o primaria contiene <xref:System.Windows.Forms.Form>.  
  
   
  
## Examples  
 Illustrato nell'esempio di codice seguente il <xref:System.Configuration.ApplicationSettingsBase.Save%2A> metodo chiamato dal <xref:System.Windows.Forms.Form.Closing> gestore eventi per la forma principale. Questo metodo aggiunge inoltre un periodo di tempo aggiuntivo per la proprietà delle impostazioni che è associata al modulo <xref:System.Windows.Forms.Control.Text%2A> proprietà.  
  
 L'esempio di codice completo è elencato nella <xref:System.Configuration.ApplicationSettingsBase> Cenni preliminari sulla classe.  
  
 [!code-cpp[AppSettingsSample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#3)]
 [!code-csharp[AppSettingsSample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#3)]
 [!code-vb[AppSettingsSample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SettingChanging">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingChangingEventHandler SettingChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingChangingEventHandler SettingChanging" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingChanging As SettingChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingChangingEventHandler ^ SettingChanging;" />
      <MemberSignature Language="F#" Value="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " Usage="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima della modifica del valore di una proprietà delle impostazioni dell'applicazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> evento si verifica prima che una proprietà di valore di impostazione dell'applicazione viene modificata tramite il <xref:System.Configuration.ApplicationSettingsBase.Item%2A> metodo. Questo evento non viene generato quando il <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> o <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> metodi vengono chiamati. <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> può essere annullata tramite il <xref:System.Configuration.SettingChangingEventArgs> classe dei dati evento.  
  
 In genere si usa il <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> evento da gestire la convalida immediata di una singola proprietà delle impostazioni. Per ulteriori informazioni sulla convalida, vedere [procedura: convalidare le impostazioni dell'applicazione](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md).  
  
 Non è corrispondente `SettingChanged` evento per questa classe; in alternativa, vedere il <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> evento.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato il <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> gestore eventi per l'oggetto di tipo `FormSettings`, che viene derivata da una classe wrapper <xref:System.Configuration.ApplicationSettingsBase>. Il gestore visualizza le informazioni sull'evento in una casella di testo denominato `tbStatus`. L'esempio di codice completo è elencato nella <xref:System.Configuration.ApplicationSettingsBase> Cenni preliminari sulla classe.  
  
 [!code-cpp[AppSettingsSample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#7)]
 [!code-csharp[AppSettingsSample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#7)]
 [!code-vb[AppSettingsSample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la chiave delle impostazioni per il gruppo di impostazioni dell'applicazione.</summary>
        <value>Classe <see cref="T:System.String" /> contenente la chiave delle impostazioni per il gruppo di impostazioni corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> proprietà viene fornita per consentire al codice client e in particolare il provider di impostazioni, per evitare ambiguità tra più istanze della stessa classe di impostazioni dell'applicazione.  
  
 A meno che la classe wrapper di impostazioni viene progettata con il modello singleton, possono essere presenti più istanze della stessa classe di impostazioni dell'applicazione in una singola applicazione. Il valore di <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> deve essere impostata in base al modo in cui i valori delle proprietà sono destinati a essere condivise.  
  
-   Se le proprietà delle impostazioni del wrapper sono destinate a essere condiviso tra tutte le istanze del wrapper nella stessa applicazione, quindi <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> deve avere lo stesso valore in tutte le istanze. Si tratta del comportamento predefinito del <xref:System.Configuration.ApplicationSettingsBase> classe.  
  
-   Se le proprietà delle impostazioni del wrapper sono destinate a essere per ogni istanza, quindi <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> deve avere un valore univoco per ogni istanza. Il <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29> versione del costruttore consente di inizializzare <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> a una stringa univoca.  
  
 Al contrario, il <xref:System.Configuration.ApplicationSettingsBase.Context%2A> proprietà vengono forniti alcuni suggerimenti per il provider di impostazioni per abilitare la funzionalità rendere persistenti i valori in modo efficiente e ordinato.  
  
 Il <xref:System.Configuration.SettingChangingEventArgs> classe contiene un simile <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> proprietà che consentono di identificare l'origine del <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> evento.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Context" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SettingsLoaded">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsLoadedEventHandler SettingsLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsLoaded As SettingsLoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsLoadedEventHandler ^ SettingsLoaded;" />
      <MemberSignature Language="F#" Value="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " Usage="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsLoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica dopo il recupero delle impostazioni dell'applicazione dall'archivio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> evento si verifica solo dopo l'iniziale `get` accesso della proprietà di configurazione prima utilizzata, in genere tramite il <xref:System.Configuration.ApplicationSettingsBase.Item%2A> metodo. Gli accessi successivi utilizzano i valori della proprietà delle impostazioni che vengono memorizzati nella cache in locale. Il <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> e <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> metodi verranno cancellati i valori memorizzati nella cache tutti, questo evento verrà generato nuovamente al successivo accesso della proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="T:System.Configuration.SettingsLoadedEventArgs" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="SettingsSaving">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsSavingEventHandler SettingsSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsSavingEventHandler SettingsSaving" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsSaving As SettingsSavingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsSavingEventHandler ^ SettingsSaving;" />
      <MemberSignature Language="F#" Value="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " Usage="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsSavingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Si verifica prima del salvataggio dei valori nell'archivio dati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> evento viene generato dal <xref:System.Configuration.ApplicationSettingsBase.Save%2A> metodo prima di memorizzare le proprietà delle impostazioni dell'applicazione al relativo archivio dati associati. Il gestore dell'evento associato può annullare questo evento.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato il <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> gestore eventi per l'oggetto di tipo `FormSettings`, che viene derivata da una classe wrapper <xref:System.Configuration.ApplicationSettingsBase>. Il gestore esegue una query all'utente di salvare i valori delle proprietà delle impostazioni dell'applicazione corrente. L'esempio di codice completo è elencato nella <xref:System.Configuration.ApplicationSettingsBase> Cenni preliminari sulla classe.  
  
 [!code-cpp[AppSettingsSample#8](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#8)]
 [!code-csharp[AppSettingsSample#8](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#8)]
 [!code-vb[AppSettingsSample#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public virtual void Upgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Upgrade ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade();" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : unit -&gt; unit&#xA;override this.Upgrade : unit -&gt; unit" Usage="applicationSettingsBase.Upgrade " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aggiorna le impostazioni dell'applicazione in modo da riflettere un'installazione più recente dell'applicazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> metodo vengono eseguite due azioni per garantire la transizione a una nuova versione di un'applicazione:  
  
-   Notifica a tutti i provider di impostazioni corrispondenti dell'esistenza dell'applicazione aggiornata tramite una chiamata a loro <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> metodo, presupponendo che sia stata implementata la <xref:System.Configuration.IApplicationSettingsProvider> interfaccia. Questa azione non viene eseguita se la classe wrapper di impostazioni è contrassegnata con <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.  
  
-   Ricarica i valori per tutte le impostazioni dell'applicazione.  
  
 È possibile eseguire l'override del comportamento predefinito di <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> per implementare l'aggiornamento o di unione comportamento personalizzato. Utilizzare il <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> metodo per recuperare i singoli valori per un'impostazione per la versione precedente dell'applicazione. Esempi di comportamento di aggiornamento personalizzato:  
  
-   Utilizzando le impostazioni predefinite precedenti o nuovi valori predefiniti di criteri che eseguono l'override di uno o più dei valori specificati dall'utente precedenti.  
  
-   Speciale conversione dei valori precedenti per essere compatibile con più recente degli intervalli, un gruppo di impostazioni diverse proprietà e così via.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Impossibile analizzare il file di configurazione.</exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>