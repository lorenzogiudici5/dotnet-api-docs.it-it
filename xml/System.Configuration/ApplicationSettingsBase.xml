<Type Name="ApplicationSettingsBase" FullName="System.Configuration.ApplicationSettingsBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe24ac65166fc03dc1527e9f59941c74903af097" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39824158" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ApplicationSettingsBase extends System.Configuration.SettingsBase implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ApplicationSettingsBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ApplicationSettingsBase&#xA;Inherits SettingsBase&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationSettingsBase abstract : System::Configuration::SettingsBase, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type ApplicationSettingsBase = class&#xA;    inherit SettingsBase&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="86e86-101">Funge da classe base da cui derivare le classi wrapper concrete per l'implementazione della funzionalità relativa alle impostazioni dell'applicazione nelle applicazioni Windows Form.</span>
      <span class="sxs-lookup">
        <span data-stu-id="86e86-101">Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-102"><xref:System.Configuration.ApplicationSettingsBase> Aggiunge le funzionalità seguenti per il <xref:System.Configuration.SettingsBase> (classe), che viene usato da applicazioni basate sul Web:</span><span class="sxs-lookup"><span data-stu-id="86e86-102"><xref:System.Configuration.ApplicationSettingsBase> adds the following functionality to the <xref:System.Configuration.SettingsBase> class, which is used by Web-based applications:</span></span>  
  
-   <span data-ttu-id="86e86-103">La possibilità di rilevare gli attributi in una classe derivata, di wrapper delle impostazioni.</span><span class="sxs-lookup"><span data-stu-id="86e86-103">The ability to detect attributes on a derived, settings wrapper class.</span></span> <span data-ttu-id="86e86-104"><xref:System.Configuration.ApplicationSettingsBase> supporta il modello dichiarativo usato per la proprietà della classe wrapper, come descritto più avanti.</span><span class="sxs-lookup"><span data-stu-id="86e86-104"><xref:System.Configuration.ApplicationSettingsBase> supports the declarative model used for wrapper class properties, as described later.</span></span>  
  
-   <span data-ttu-id="86e86-105">Livello superiore <xref:System.Configuration.ApplicationSettingsBase.Save%2A> e <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="86e86-105">Higher-level <xref:System.Configuration.ApplicationSettingsBase.Save%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods.</span></span>  
  
-   <span data-ttu-id="86e86-106">Eventi di convalida aggiuntive che è possibile gestire per garantire la correttezza delle singole impostazioni.</span><span class="sxs-lookup"><span data-stu-id="86e86-106">Additional validation events that you can handle to ensure the correctness of individual settings.</span></span>  
  
 <span data-ttu-id="86e86-107">Nell'architettura Impostazioni applicazione, per accedere a un gruppo di proprietà delle impostazioni è necessario derivare una classe wrapper concrete da <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="86e86-107">In the application settings architecture, to access a group of settings properties you need to derive a concrete wrapper class from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="86e86-108">Consente di personalizzare la classe wrapper <xref:System.Configuration.ApplicationSettingsBase> nei modi seguenti:</span><span class="sxs-lookup"><span data-stu-id="86e86-108">The wrapper class customizes <xref:System.Configuration.ApplicationSettingsBase> in the following ways:</span></span>  
  
-   <span data-ttu-id="86e86-109">Per ogni proprietà delle impostazioni a cui accedere, viene aggiunta una proprietà pubblica fortemente tipizzata corrispondente alla classe wrapper.</span><span class="sxs-lookup"><span data-stu-id="86e86-109">For every settings property to be accessed, a corresponding strongly typed public property is added to the wrapper class.</span></span> <span data-ttu-id="86e86-110">Questa proprietà non ha `get` e `set` le funzioni di accesso per le impostazioni dell'applicazione di lettura/scrittura, ma solo un `get` della funzione di accesso per le impostazioni di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="86e86-110">This property has `get` and `set` accessors for read/write application settings, but only a `get` accessor for read-only settings.</span></span>  
  
-   <span data-ttu-id="86e86-111">Gli attributi appropriati devono essere applicati a proprietà pubbliche della classe wrapper per indicare le caratteristiche della proprietà di impostazione, ad esempio l'ambito dell'impostazione (applicazione o utente), se l'impostazione deve supportare il roaming, il valore predefinito per il l'impostazione, il provider di impostazioni per l'utilizzo e così via.</span><span class="sxs-lookup"><span data-stu-id="86e86-111">Appropriated attributes must be applied to the wrapper class's public properties to indicate characteristics of the settings property, such as the setting's scope (application or user), whether the setting should support roaming, the default value for the setting, the settings provider to be used, and so on.</span></span> <span data-ttu-id="86e86-112">Ogni proprietà è obbligatoria per specificare l'ambito, utilizzando uno <xref:System.Configuration.ApplicationScopedSettingAttribute> o <xref:System.Configuration.UserScopedSettingAttribute>.</span><span class="sxs-lookup"><span data-stu-id="86e86-112">Each property is required to specify its scope, using either <xref:System.Configuration.ApplicationScopedSettingAttribute> or <xref:System.Configuration.UserScopedSettingAttribute>.</span></span> <span data-ttu-id="86e86-113">Le impostazioni con ambito di applicazione sono di sola lettura se il valore predefinito <xref:System.Configuration.LocalFileSettingsProvider> viene usato.</span><span class="sxs-lookup"><span data-stu-id="86e86-113">Application-scoped settings are read-only if the default <xref:System.Configuration.LocalFileSettingsProvider> is used.</span></span>  
  
 <span data-ttu-id="86e86-114">Il <xref:System.Configuration.ApplicationSettingsBase> classe Usa la reflection per rilevare questi attributi in fase di esecuzione.</span><span class="sxs-lookup"><span data-stu-id="86e86-114">The <xref:System.Configuration.ApplicationSettingsBase> class uses reflection to detect these attributes at run time.</span></span> <span data-ttu-id="86e86-115">La maggior parte di queste informazioni viene passato al livello del provider di impostazioni, che è responsabile dell'archiviazione, un formato di persistenza e così via.</span><span class="sxs-lookup"><span data-stu-id="86e86-115">Most of this information gets passed to the settings provider layer, which is responsible for storage, persistence format, and so on.</span></span>  
  
 <span data-ttu-id="86e86-116">Quando un'applicazione dispone di più classi wrapper di impostazioni, ogni classe definisce un *gruppo di impostazioni*.</span><span class="sxs-lookup"><span data-stu-id="86e86-116">When an application has multiple settings wrapper classes, each class defines a *settings group*.</span></span> <span data-ttu-id="86e86-117">Ogni gruppo presenta le caratteristiche seguenti:</span><span class="sxs-lookup"><span data-stu-id="86e86-117">Each group has the following characteristics:</span></span>  
  
-   <span data-ttu-id="86e86-118">Un gruppo può contenere qualsiasi numero o il tipo di impostazioni delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="86e86-118">A group can contain any number or type of property settings.</span></span>  
  
-   <span data-ttu-id="86e86-119">Se il nome del gruppo non è impostato in modo esplicito il decorando la classe wrapper con un <xref:System.Configuration.SettingsGroupNameAttribute>, quindi viene automaticamente generato un nome.</span><span class="sxs-lookup"><span data-stu-id="86e86-119">If the group name is not explicitly set by the decorating the wrapper class with a <xref:System.Configuration.SettingsGroupNameAttribute>, then a name is automatically generated.</span></span>  
  
 <span data-ttu-id="86e86-120">Per impostazione predefinita, tutte le applicazioni basate su client utilizzano il <xref:System.Configuration.LocalFileSettingsProvider> per fornire l'archiviazione.</span><span class="sxs-lookup"><span data-stu-id="86e86-120">By default, all client-based applications use the <xref:System.Configuration.LocalFileSettingsProvider> to provide storage.</span></span> <span data-ttu-id="86e86-121">Se si desidera un provider alternativo di impostazioni, quindi la classe wrapper o una proprietà deve essere decorata con un corrispondente <xref:System.Configuration.SettingsProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="86e86-121">If an alternate settings provider is desired, then the wrapper class or property must be decorated with a corresponding <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="86e86-122">Per altre informazioni sull'uso delle impostazioni dell'applicazione, vedere [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="86e86-122">For more information about using application settings, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86e86-123">Esempio di codice seguente viene illustrato l'utilizzo delle impostazioni dell'applicazione per rendere persistenti gli attributi seguenti del form principale: posizione, dimensione, colore di sfondo e testo barra del titolo.</span><span class="sxs-lookup"><span data-stu-id="86e86-123">The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text.</span></span> <span data-ttu-id="86e86-124">Tutti questi attributi vengono rese persistenti come singola proprietà delle impostazioni nel `FormSettings` classe, denominata `FormLocation`, `FormSize`, `FormBackColor` e `FormText`, rispettivamente.</span><span class="sxs-lookup"><span data-stu-id="86e86-124">All of these attributes are persisted as single application settings properties in the `FormSettings` class, named `FormLocation`, `FormSize`, `FormBackColor` and `FormText`, respectively.</span></span> <span data-ttu-id="86e86-125">Ad eccezione degli `FormText` e `Size` sono dati associati alle rispettive proprietà modulo associato e un valore applicato mediante impostazione prevedono <xref:System.Configuration.DefaultSettingValueAttribute>.</span><span class="sxs-lookup"><span data-stu-id="86e86-125">All except for `FormText` and `Size` are data bound to their associated form properties and have a default setting value applied using <xref:System.Configuration.DefaultSettingValueAttribute>.</span></span>  
  
 <span data-ttu-id="86e86-126">Il modulo contiene quattro controlli figlio che hanno i nomi e le funzioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="86e86-126">The form contains four child controls that have the following names and functions:</span></span>  
  
-   <span data-ttu-id="86e86-127">Un pulsante denominato `btnBackColor` consente di visualizzare il **colore** finestra di dialogo comune.</span><span class="sxs-lookup"><span data-stu-id="86e86-127">A button named `btnBackColor` used to display the **Color** common dialog box.</span></span>  
  
-   <span data-ttu-id="86e86-128">Un pulsante denominato `btnReload` utilizzato per <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> le impostazioni dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="86e86-128">A button named `btnReload` used to <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="86e86-129">Un pulsante denominato `btnReset` utilizzato per <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> le impostazioni dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="86e86-129">A button named `btnReset` used to <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="86e86-130">Una casella di testo denominato `tbStatus` consente di visualizzare informazioni sullo stato del programma.</span><span class="sxs-lookup"><span data-stu-id="86e86-130">A textbox named `tbStatus` used to display status information about the program.</span></span>  
  
 <span data-ttu-id="86e86-131">Si noti che dopo ogni esecuzione dell'applicazione, un carattere punto viene aggiunto per il testo del titolo del form.</span><span class="sxs-lookup"><span data-stu-id="86e86-131">Notice that after every execution of the application, an additional period character is appended to the title text of the form.</span></span>  
  
 <span data-ttu-id="86e86-132">Questo esempio di codice richiede un modulo con un <xref:System.Windows.Forms.ColorDialog> classe denominata `colorDialog1`e una <xref:System.Windows.Forms.StatusStrip> controllare con un <xref:System.Windows.Forms.ToolStripStatusLabel> denominato `tbStatus`.</span><span class="sxs-lookup"><span data-stu-id="86e86-132">This code example requires a Form with a <xref:System.Windows.Forms.ColorDialog> class named `colorDialog1`, and a <xref:System.Windows.Forms.StatusStrip> control with a <xref:System.Windows.Forms.ToolStripStatusLabel> named `tbStatus`.</span></span> <span data-ttu-id="86e86-133">Inoltre, richiede tre <xref:System.Windows.Forms.Button> gli oggetti denominati `btnReload`, `btnReset`, e `btnBackColor`.</span><span class="sxs-lookup"><span data-stu-id="86e86-133">Additionally, it requires three <xref:System.Windows.Forms.Button> objects named `btnReload`, `btnReset`, and `btnBackColor`.</span></span>  
  
 [!code-cpp[AppSettingsSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#1)]
 [!code-csharp[AppSettingsSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#1)]
 [!code-vb[AppSettingsSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.SettingsGroupNameAttribute" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86e86-134">Inizializza un'istanza della classe <see cref="T:System.Configuration.ApplicationSettingsBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-134">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86e86-135">Inizializza un'istanza della classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> sullo stato predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-135">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class to its default state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-136">Il costruttore predefinito è stato progettato per funzionare con il presupposto che nessun componente associato alla classe wrapper delle impostazioni correnti che deriva da <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="86e86-136">The default constructor was designed to work under the assumption that there is no component associated with the current settings wrapper class, which derives from <xref:System.Configuration.ApplicationSettingsBase>.</span></span>  
  
 <span data-ttu-id="86e86-137">Quando viene creata un'istanza di una classe wrapper, ereditato codice eseguirà automaticamente le azioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="86e86-137">When an instance of a wrapper class is created, inherited code will automatically perform the following actions:</span></span>  
  
1.  <span data-ttu-id="86e86-138">Riflettere sulla classe.</span><span class="sxs-lookup"><span data-stu-id="86e86-138">Reflect over the class.</span></span>  
  
2.  <span data-ttu-id="86e86-139">Per ogni proprietà del wrapper contrassegnato con `[UserScopedSettingAttribute]` oppure `[ApplicationScopedSettingAttribute]`, un corrispondente <xref:System.Configuration.SettingsProperty> viene creato.</span><span class="sxs-lookup"><span data-stu-id="86e86-139">For each property on the wrapper marked with either `[UserScopedSettingAttribute]` or `[ApplicationScopedSettingAttribute]`, a corresponding <xref:System.Configuration.SettingsProperty> is created.</span></span>  
  
3.  <span data-ttu-id="86e86-140">Ogni <xref:System.Configuration.SettingsProperty> presenta alcune funzionalità di un set di proprietà basato su altri attributi che possono essere presenti nelle proprietà del wrapper, ad esempio il valore predefinito o il provider di impostazioni.</span><span class="sxs-lookup"><span data-stu-id="86e86-140">Each <xref:System.Configuration.SettingsProperty> has some of its properties set based on other attributes that are optionally present on the wrapper's properties, such as the default value or the settings provider.</span></span>  
  
4.  <span data-ttu-id="86e86-141">Tutti gli altri attributi vengono semplicemente inseriti in un elenco di attributi, il <xref:System.Configuration.SettingsProperty.Attributes%2A> proprietà del <xref:System.Configuration.SettingsProperty> classe.</span><span class="sxs-lookup"><span data-stu-id="86e86-141">All other attributes are simply put into an attribute bag, the <xref:System.Configuration.SettingsProperty.Attributes%2A> property of the <xref:System.Configuration.SettingsProperty> class.</span></span>  
  
5.  <span data-ttu-id="86e86-142">Tutti i <xref:System.Configuration.SettingsProperty> gli oggetti vengono aggiunti a un <xref:System.Configuration.SettingsPropertyCollection> rappresentato dal <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> proprietà del <xref:System.Configuration.ApplicationSettingsBase> classe.</span><span class="sxs-lookup"><span data-stu-id="86e86-142">All <xref:System.Configuration.SettingsProperty> objects are added to a <xref:System.Configuration.SettingsPropertyCollection> represented by the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span> <span data-ttu-id="86e86-143">Questa raccolta viene quindi passata al <xref:System.Configuration.SettingsBase.Initialize%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="86e86-143">This collection is then passed to the <xref:System.Configuration.SettingsBase.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="86e86-144">Come suggerito dal passaggio 3 menzionato in precedenza <xref:System.Configuration.ApplicationSettingsBase> funziona in modo nativo con diversi attributi della proprietà, in particolare quanto segue: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>, e <xref:System.Configuration.SettingsSerializeAsAttribute>.</span><span class="sxs-lookup"><span data-stu-id="86e86-144">As implied by step 3 mentioned previously, <xref:System.Configuration.ApplicationSettingsBase> natively works with several property attributes, specifically the following: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>, and <xref:System.Configuration.SettingsSerializeAsAttribute>.</span></span> <span data-ttu-id="86e86-145">Tutte le altre impostazioni degli attributi vengono semplicemente passate al provider sottostante appropriato.</span><span class="sxs-lookup"><span data-stu-id="86e86-145">All other settings attributes are simply passed through to the appropriate underlying provider.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="T:System.Configuration.SettingsPropertyCollection" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="86e86-146">Componente che fungerà da proprietario dell'oggetto impostazioni dell'applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-146">The component that will act as the owner of the application settings object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86e86-147">Inizializza un'istanza della classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> mediante il componente proprietario specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-147">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-148">Questo costruttore è perfettamente equivalente al <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> tramite la chiamata al costruttore:</span><span class="sxs-lookup"><span data-stu-id="86e86-148">This constructor is exactly equivalent to the <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> constructor using the invocation:</span></span>  
  
 `ApplicationSettingsBase(owner, String.Empty)`  
  
 <span data-ttu-id="86e86-149">Per informazioni sull'uso di reflection durante la creazione di istanze di una classe wrapper, vedere il valore predefinito <xref:System.Configuration.ApplicationSettingsBase.%23ctor> costruttore.</span><span class="sxs-lookup"><span data-stu-id="86e86-149">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86e86-150">
            <paramref name="owner" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-150">
              <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.ComponentModel.Component.Site" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase settingsKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="settingsKey">
          <span data-ttu-id="86e86-151">Classe <see cref="T:System.String" /> che identifica in modo univoco istanze distinte della classe wrapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-151">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86e86-152">Inizializza un'istanza della classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> mediante la chiave delle impostazioni specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-152">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied settings key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-153">Questo costruttore inizializza la <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> il valore della proprietà di `settingsKey` parametro.</span><span class="sxs-lookup"><span data-stu-id="86e86-153">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="86e86-154">Questa proprietà è utile per evitare ambiguità tra istanze diverse della classe wrapper delle impostazioni nello stesso dominio applicazione.</span><span class="sxs-lookup"><span data-stu-id="86e86-154">This property is useful in disambiguating different instances of the settings wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="86e86-155">Per informazioni sull'uso di reflection durante la creazione di istanze di una classe wrapper, vedere il valore predefinito <xref:System.Configuration.ApplicationSettingsBase.%23ctor> costruttore.</span><span class="sxs-lookup"><span data-stu-id="86e86-155">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner, string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent, settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner, System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent * string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase (owner, settingsKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="86e86-156">Componente che fungerà da proprietario dell'oggetto impostazioni dell'applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-156">The component that will act as the owner of the application settings object.</span>
          </span>
        </param>
        <param name="settingsKey">
          <span data-ttu-id="86e86-157">Classe <see cref="T:System.String" /> che identifica in modo univoco istanze distinte della classe wrapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-157">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86e86-158">Inizializza un'istanza della classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> mediante il componente proprietario e la chiave delle impostazioni specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-158">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component and settings key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-159">Il <xref:System.ComponentModel.IComponent> specificato dall'oggetto di `owner` parametro funge da proprietario dell'istanza corrente di questa classe di impostazioni delle applicazioni.</span><span class="sxs-lookup"><span data-stu-id="86e86-159">The <xref:System.ComponentModel.IComponent> object specified by the `owner` parameter acts as the owner of the current instance of this applications settings class.</span></span> <span data-ttu-id="86e86-160">Durante l'inizializzazione delle impostazioni di classe wrapper derivata da <xref:System.Configuration.ApplicationSettingsBase>, viene eseguita una query nel sito del proprietario per un <xref:System.Configuration.ISettingsProviderService>.</span><span class="sxs-lookup"><span data-stu-id="86e86-160">During the initialization of the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>, the owner's site is queried for a <xref:System.Configuration.ISettingsProviderService>.</span></span> <span data-ttu-id="86e86-161">Se è presente, viene utilizzato a provider di impostazioni native per tutte le proprietà della classe wrapper, come specificato da di <xref:System.Configuration.SettingsProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="86e86-161">If one exists, it is used in preference to native settings provider for all the properties of the wrapper class, as specified by the <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="86e86-162">Questo costruttore inizializza la <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> il valore della proprietà di `settingsKey` parametro.</span><span class="sxs-lookup"><span data-stu-id="86e86-162">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="86e86-163">Questa proprietà è utile per evitare ambiguità tra istanze diverse della classe wrapper nello stesso dominio applicazione.</span><span class="sxs-lookup"><span data-stu-id="86e86-163">This property is useful in disambiguating different instances of the wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="86e86-164">Per informazioni sull'uso di reflection durante la creazione di istanze di una classe wrapper, vedere il valore predefinito <xref:System.Configuration.ApplicationSettingsBase.%23ctor> costruttore.</span><span class="sxs-lookup"><span data-stu-id="86e86-164">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86e86-165">
            <paramref name="owner" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-165">
              <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Context" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Context As SettingsContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsContext ^ Context { System::Configuration::SettingsContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Configuration.SettingsContext" Usage="System.Configuration.ApplicationSettingsBase.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86e86-166">Ottiene il contesto delle impostazioni dell'applicazione associato al gruppo di impostazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-166">Gets the application settings context associated with the settings group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86e86-167">Oggetto <see cref="T:System.Configuration.SettingsContext" /> associato al gruppo di impostazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-167">A <see cref="T:System.Configuration.SettingsContext" /> associated with the settings group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-168">Ogni classe wrapper delle impostazioni è derivata da <xref:System.Configuration.ApplicationSettingsBase> dispone di un contesto associato.</span><span class="sxs-lookup"><span data-stu-id="86e86-168">Each settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase> has a context associated with it.</span></span> <span data-ttu-id="86e86-169">Il contesto viene passato al provider di impostazioni per ogni proprietà per identificare come utilizzare la proprietà.</span><span class="sxs-lookup"><span data-stu-id="86e86-169">The context is passed to the settings provider for each property to identify how the property is used.</span></span> <span data-ttu-id="86e86-170">Contesto pertanto funge da suggerimento per determinare il modo migliore per rendere persistenti i valori delle impostazioni applicazione associata al provider di impostazioni.</span><span class="sxs-lookup"><span data-stu-id="86e86-170">Context therefore acts as a hint to help the settings provider determine how best to persist the associated application settings values.</span></span>  
  
 <span data-ttu-id="86e86-171">Al contrario, il <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> proprietà consente al provider di impostazioni evitare ambiguità tra più istanze della stessa classe wrapper.</span><span class="sxs-lookup"><span data-stu-id="86e86-171">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property enables the settings provider to disambiguate multiple instances of the same wrapper class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="T:System.Configuration.SettingsContext" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.ApplicationSettingsGroup" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public object GetPreviousVersion (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPreviousVersion(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPreviousVersion(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousVersion : string -&gt; obj" Usage="applicationSettingsBase.GetPreviousVersion propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="86e86-172">Classe <see cref="T:System.String" /> contenente il nome della proprietà delle impostazioni di cui deve essere restituito il valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-172">A <see cref="T:System.String" /> containing the name of the settings property whose value is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86e86-173">Restituisce il valore della proprietà delle impostazioni denominata relativa alla versione precedente della stessa applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-173">Returns the value of the named settings property for the previous version of the same application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86e86-174">Classe <see cref="T:System.Object" /> contenente il valore della classe <see cref="T:System.Configuration.SettingsProperty" /> specificata, se presente; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-174">An <see cref="T:System.Object" /> containing the value of the specified <see cref="T:System.Configuration.SettingsProperty" /> if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-175">Il <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> metodo viene spesso usato in combinazione con il <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> metodo durante la migrazione delle impostazioni dell'applicazione durante l'installazione di una nuova versione di un'applicazione.</span><span class="sxs-lookup"><span data-stu-id="86e86-175">The <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method when migrating application settings during the installation of a new version of an application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">
          <span data-ttu-id="86e86-176">La proprietà non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-176">The property does not exist.</span>
          </span>
          <span data-ttu-id="86e86-177">Il numero della proprietà è pari a zero oppure non è possibile trovare la proprietà nell'archivio dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-177">The property count is zero or the property cannot be found in the data store.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Configuration.ApplicationSettingsBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="86e86-178">Classe <see cref="T:System.String" /> contenente il nome della proprietà a cui accedere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-178">A <see cref="T:System.String" /> containing the name of the property to access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86e86-179">Ottiene o imposta il valore della proprietà delle impostazioni dell'applicazione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-179">Gets or sets the value of the specified application settings property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86e86-180">Se presente, il valore della proprietà delle impostazioni denominata; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-180">If found, the value of the named settings property; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-181">Il <xref:System.Configuration.ApplicationSettingsBase.Item%2A> proprietà, noto anche come l'indicizzatore, viene usata regolarmente nelle impostazioni di classe wrapper derivata da <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="86e86-181">The <xref:System.Configuration.ApplicationSettingsBase.Item%2A> property, also known as the indexer, is routinely used in the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="86e86-182"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> Associa la proprietà pubblica della classe wrapper per la proprietà delle impostazioni corrispondente.</span><span class="sxs-lookup"><span data-stu-id="86e86-182"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> binds the public property of the wrapper class to the corresponding settings property.</span></span>  
  
 <span data-ttu-id="86e86-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> Genera eventi diversi a seconda dell'operazione eseguita:</span><span class="sxs-lookup"><span data-stu-id="86e86-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> raises several events depending on the operation being performed:</span></span>  
  
-   <span data-ttu-id="86e86-184">La prima volta una proprietà viene recuperata, il <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> viene generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="86e86-184">The first time a property is retrieved, the <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event is raised.</span></span>  
  
-   <span data-ttu-id="86e86-185">Quando una proprietà è impostata, il <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> viene generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="86e86-185">When a property is set, the <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> event is raised.</span></span> <span data-ttu-id="86e86-186">Se il gestore non comporta l'annullamento dell'evento, quindi il valore della proprietà è impostato e <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> viene generato l'evento.</span><span class="sxs-lookup"><span data-stu-id="86e86-186">If the handler does not cancel the event, then the property value is set and the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">
          <span data-ttu-id="86e86-187">Nessuna proprietà è associata al wrapper corrente oppure non è possibile trovare la proprietà specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-187">There are no properties associated with the current wrapper or the specified property could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">
          <span data-ttu-id="86e86-188">È stato effettuato un tentativo di impostazione di una proprietà in sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-188">An attempt was made to set a read-only property.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">
          <span data-ttu-id="86e86-189">Il valore specificato è di tipo non compatibile con la proprietà delle impostazioni, durante un'operazione di impostazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-189">The value supplied is of a type incompatible with the settings property, during a set operation.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="86e86-190">Impossibile analizzare il file di configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-190">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="P:System.Configuration.SettingsProperty.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(object sender, class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (sender As Object, e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::Object ^ sender, System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnPropertyChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="86e86-191">Origine dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-191">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="86e86-192">Oggetto <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-192">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86e86-193">Genera l'evento <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-193">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-194">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="86e86-194">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="86e86-195">Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="86e86-195">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="86e86-196">Il metodo <xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="86e86-196">The <xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="86e86-197">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="86e86-197">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="86e86-198">
            <para>Quando si esegue l'override <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-198">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingChanging(object sender, class System.Configuration.SettingChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingChanging (sender As Object, e As SettingChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingChanging(System::Object ^ sender, System::Configuration::SettingChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit&#xA;override this.OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingChanging (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="86e86-199">Origine dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-199">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="86e86-200">Oggetto <see cref="T:System.Configuration.SettingChangingEventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-200">A <see cref="T:System.Configuration.SettingChangingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86e86-201">Genera l'evento <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-201">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-202">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="86e86-202">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="86e86-203">Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="86e86-203">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="86e86-204">Il metodo <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="86e86-204">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="86e86-205">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="86e86-205">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="86e86-206">
            <para>Quando si esegue l'override <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-206">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsLoaded(object sender, class System.Configuration.SettingsLoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsLoaded (sender As Object, e As SettingsLoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsLoaded(System::Object ^ sender, System::Configuration::SettingsLoadedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit&#xA;override this.OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsLoaded (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingsLoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="86e86-207">Origine dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-207">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="86e86-208">Oggetto <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-208">A <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86e86-209">Genera l'evento <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-209">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-210">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="86e86-210">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="86e86-211">Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="86e86-211">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="86e86-212">Il metodo <xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="86e86-212">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="86e86-213">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="86e86-213">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="86e86-214">
            <para>Quando si esegue l'override <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-214">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsSaving">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsSaving(object sender, class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsSaving (sender As Object, e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsSaving(System::Object ^ sender, System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsSaving (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="86e86-215">Origine dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-215">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="86e86-216">Oggetto <see cref="T:System.ComponentModel.CancelEventArgs" /> che contiene i dati dell'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-216">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86e86-217">Genera l'evento <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-217">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-218">Quando viene generato un evento, il gestore dell'evento viene richiamato tramite un delegato.</span><span class="sxs-lookup"><span data-stu-id="86e86-218">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="86e86-219">Per altre informazioni, vedere [la gestione e generazione di eventi](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="86e86-219">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="86e86-220">Il metodo <xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> consente inoltre alle classi derivate di gestire l'evento senza associare un delegato.</span><span class="sxs-lookup"><span data-stu-id="86e86-220">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="86e86-221">È la tecnica consigliata per la gestione dell'evento in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="86e86-221">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="86e86-222">
            <para>Quando si esegue l'override <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> in una classe derivata, accertarsi di chiamare la classe di base <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> metodo in modo che i delegati registrati ricevano l'evento.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-222">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.SettingsPropertyCollection" Usage="System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86e86-223">Ottiene l'insieme di proprietà delle impostazioni nel wrapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-223">Gets the collection of settings properties in the wrapper.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86e86-224">Classe <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenente tutti gli oggetti <see cref="T:System.Configuration.SettingsProperty" /> utilizzati nel wrapper corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-224">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing all the <see cref="T:System.Configuration.SettingsProperty" /> objects used in the current wrapper.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-225">Il `get` funzione di accesso del <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> proprietà riflette su tutti i metadati della classe wrapper delle impostazioni, che è derivato da <xref:System.Configuration.ApplicationSettingsBase>, determinare in modo dinamico il set di proprietà delle impostazioni disponibili.</span><span class="sxs-lookup"><span data-stu-id="86e86-225">The `get` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property reflects over the metadata of the settings wrapper class, which is derived from <xref:System.Configuration.ApplicationSettingsBase>, to dynamically determine the set of available application settings properties.</span></span>  
  
 <span data-ttu-id="86e86-226">Il <xref:System.Configuration.ApplicationSettingsBase> classe in modo nativo riconosce alcune caratteristiche di un'impostazione dell'applicazione, ad esempio il nome, tipo di proprietà, provider di impostazioni, valore predefinito, leggere l'unico stato e una preferenza di serializzazione.</span><span class="sxs-lookup"><span data-stu-id="86e86-226">The <xref:System.Configuration.ApplicationSettingsBase> class natively recognizes certain characteristics of an application setting, such as its name, property type, settings provider, default value, read only status, and a serialization preference.</span></span> <span data-ttu-id="86e86-227">Queste caratteristiche sono speculari come proprietà di <xref:System.Configuration.SettingsProperty> classe.</span><span class="sxs-lookup"><span data-stu-id="86e86-227">These characteristics are mirrored as properties in the <xref:System.Configuration.SettingsProperty> class.</span></span> <span data-ttu-id="86e86-228">Tutti gli altri attributi della proprietà di impostazione appena vengono passati al provider di impostazioni associato.</span><span class="sxs-lookup"><span data-stu-id="86e86-228">All other attributes of the settings property are just passed through to its associated settings provider.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="86e86-229">Non è possibile trovare il provider di impostazioni associato o la creazione dell'istanza ha avuto esito negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-229">The associated settings provider could not be found or its instantiation failed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="T:System.Configuration.SettingsProperty" />
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86e86-230">Si verifica dopo la modifica del valore di una proprietà delle impostazioni dell'applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-230">Occurs after the value of an application settings property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-231">Il <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> evento viene generato quando viene modificata una proprietà delle impostazioni tramite il `set` funzione di accesso del <xref:System.Configuration.ApplicationSettingsBase.Item%2A> metodo, o per tutte le proprietà che viene ripristinata quando viene effettuata una chiamata ai <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> o <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="86e86-231">The <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised when a settings property is changed through the `set` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method, or for every property that is restored when a call is made to the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="86e86-232">Non vi è alcun corrispondente `PropertyChanging` eventi per questa classe; al contrario, vedere il <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> evento.</span><span class="sxs-lookup"><span data-stu-id="86e86-232">There is no corresponding `PropertyChanging` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
        <altmember cref="T:System.ComponentModel.PropertyChangedEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="PropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyValueCollection PropertyValues" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyValues As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyValueCollection ^ PropertyValues { System::Configuration::SettingsPropertyValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyValues : System.Configuration.SettingsPropertyValueCollection" Usage="System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86e86-233">Ottiene un insieme di valori di proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-233">Gets a collection of property values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86e86-234">
            <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> composto da valori di proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-234">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> of property values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Providers As SettingsProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsProviderCollection ^ Providers { System::Configuration::SettingsProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Configuration.SettingsProviderCollection" Usage="System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86e86-235">Ottiene l'insieme di provider di impostazioni dell'applicazione utilizzati dal wrapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-235">Gets the collection of application settings providers used by the wrapper.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86e86-236">Classe <see cref="T:System.Configuration.SettingsProviderCollection" /> contenente tutti gli oggetti <see cref="T:System.Configuration.SettingsProvider" /> utilizzati dalle proprietà delle impostazioni del wrapper di impostazioni corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-236">A <see cref="T:System.Configuration.SettingsProviderCollection" /> containing all the <see cref="T:System.Configuration.SettingsProvider" /> objects used by the settings properties of the current settings wrapper.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-237">Il <xref:System.Configuration.SettingsProviderAttribute> determina quale provider di impostazioni utilizzato da una classe wrapper delle impostazioni o di una proprietà singola impostazione.</span><span class="sxs-lookup"><span data-stu-id="86e86-237">The <xref:System.Configuration.SettingsProviderAttribute> determines what setting provider is used by a settings wrapper class or an individual setting property.</span></span> <span data-ttu-id="86e86-238">Se questo attributo viene omesso, si userà un'applicazione client il <xref:System.Configuration.LocalFileSettingsProvider>.</span><span class="sxs-lookup"><span data-stu-id="86e86-238">If this attribute is not specified, a client application will use the <xref:System.Configuration.LocalFileSettingsProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reload();" />
      <MemberSignature Language="F#" Value="member this.Reload : unit -&gt; unit" Usage="applicationSettingsBase.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86e86-239">Aggiorna i valori della proprietà delle impostazioni dell'applicazione dall'archivio permanente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-239">Refreshes the application settings property values from persistent storage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-240">Il <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> metodo cancella i valori delle proprietà attualmente memorizzati nella cache, provocando un ricaricamento dei valori seguenti dall'archivio permanente quando vi si accede successivamente.</span><span class="sxs-lookup"><span data-stu-id="86e86-240">The <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method clears the currently cached property values, causing a reload of these values from persistent storage when they are subsequently accessed.</span></span> <span data-ttu-id="86e86-241">Questo metodo esegue le azioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="86e86-241">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="86e86-242">Cancella le proprietà attualmente memorizzati nella cache per la cancellazione della raccolta rappresentata dal <xref:System.Configuration.SettingsBase.PropertyValues%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="86e86-242">It clears the currently cached properties by clearing the collection represented by the <xref:System.Configuration.SettingsBase.PropertyValues%2A> property.</span></span>  
  
-   <span data-ttu-id="86e86-243">Genera il <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> evento per ogni membro del <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> raccolta.</span><span class="sxs-lookup"><span data-stu-id="86e86-243">It raises the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event for every member of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> collection.</span></span>  
  
 <span data-ttu-id="86e86-244"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> è in contrasto con <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in quanto il primo caricherà l'ultimo set di valori di impostazioni dell'applicazione salvato, mentre quest'ultimo verrà caricati i valori predefiniti salvato.</span><span class="sxs-lookup"><span data-stu-id="86e86-244"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86e86-245">Nell'esempio di codice riportato di seguito viene illustrato il <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> metodo da richiamare nel corpo del <xref:System.Windows.Forms.Control.Click> gestore eventi per un pulsante denominato `btnReload`.</span><span class="sxs-lookup"><span data-stu-id="86e86-245">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReload`.</span></span> <span data-ttu-id="86e86-246">In seguito a questa chiamata, i valori attualmente archiviati per le impostazioni dell'applicazione vengono ricaricati nelle relative proprietà corrispondenti.</span><span class="sxs-lookup"><span data-stu-id="86e86-246">As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="86e86-247">L'esempio di codice completo è racchiuso il <xref:System.Configuration.ApplicationSettingsBase> Cenni preliminari sulla classe.</span><span class="sxs-lookup"><span data-stu-id="86e86-247">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#6)]
 [!code-csharp[AppSettingsSample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#6)]
 [!code-vb[AppSettingsSample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="M:System.Configuration.SettingsPropertyValueCollection.Clear" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="applicationSettingsBase.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86e86-248">Ripristina le corrispondenti proprietà predefinite dei valori delle impostazioni dell'applicazione resi permanenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-248">Restores the persisted application settings values to their corresponding default properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-249">Il <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> metodo lo sovrascrive le proprietà delle impostazioni con ambito di utente ripristinando il valore attualmente persistente di ogni impostazione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="86e86-249">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method overwrites the user-scoped settings properties by restoring the currently persisted value of each application settings.</span></span> <span data-ttu-id="86e86-250">Questo metodo esegue le azioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="86e86-250">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="86e86-251">Chiama il <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType> metodo su ogni provider di impostazioni che supporta questo metodo facoltativo.</span><span class="sxs-lookup"><span data-stu-id="86e86-251">It calls the <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType> method on every settings provider that supports this optional method.</span></span>  
  
-   <span data-ttu-id="86e86-252">Chiama il <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> metodo per forzare un aggiornamento dei valori delle proprietà delle impostazioni.</span><span class="sxs-lookup"><span data-stu-id="86e86-252">It calls the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method to force a refresh of the settings property values.</span></span>  
  
 <span data-ttu-id="86e86-253"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> è in contrasto con <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in quanto il primo caricherà l'ultimo set di valori di impostazioni dell'applicazione salvato, mentre quest'ultimo verrà caricati i valori predefiniti salvato.</span><span class="sxs-lookup"><span data-stu-id="86e86-253"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86e86-254">Nell'esempio di codice riportato di seguito viene illustrato il <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> metodo da richiamare nel corpo del <xref:System.Windows.Forms.Control.Click> gestore eventi per un pulsante denominato `btnReset`.</span><span class="sxs-lookup"><span data-stu-id="86e86-254">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReset`.</span></span> <span data-ttu-id="86e86-255">In seguito a questa chiamata, i valori predefiniti archiviati per le impostazioni dell'applicazione vengono ricaricati nelle relative proprietà corrispondenti.</span><span class="sxs-lookup"><span data-stu-id="86e86-255">As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="86e86-256">L'esempio di codice completo è racchiuso il <xref:System.Configuration.ApplicationSettingsBase> Cenni preliminari sulla classe.</span><span class="sxs-lookup"><span data-stu-id="86e86-256">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#5)]
 [!code-csharp[AppSettingsSample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#5)]
 [!code-vb[AppSettingsSample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="86e86-257">Impossibile analizzare il file di configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-257">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberSignature Language="F#" Value="override this.Save : unit -&gt; unit" Usage="applicationSettingsBase.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86e86-258">Memorizza i valori correnti delle proprietà delle impostazioni dell'applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-258">Stores the current values of the application settings properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-259">Il <xref:System.Configuration.ApplicationSettingsBase.Save%2A> metodo scrive il valore corrente di ogni proprietà delle impostazioni di archivio dati associato.</span><span class="sxs-lookup"><span data-stu-id="86e86-259">The <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method writes the current value of each settings property to its associated data store.</span></span> <span data-ttu-id="86e86-260">Per ogni proprietà, questo metodo chiama il <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> (metodo) nel provider di impostazioni associato.</span><span class="sxs-lookup"><span data-stu-id="86e86-260">For each property, this method calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method on the associated settings provider.</span></span>  
  
 <span data-ttu-id="86e86-261">Questo metodo si differenzia dall'implementazione della classe base in quanto genera il <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> evento prima che i valori vengono scritti.</span><span class="sxs-lookup"><span data-stu-id="86e86-261">This method differs from the base class implementation in that it raises the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event before the values are written.</span></span>  
  
 <span data-ttu-id="86e86-262">Se le impostazioni con ambito di applicazione, le uniche impostazioni definite <xref:System.Configuration.ApplicationSettingsBase.Save%2A> avranno alcun effetto e non restituirà alcun errore se viene chiamato con il valore predefinito <xref:System.Configuration.LocalFileSettingsProvider>.</span><span class="sxs-lookup"><span data-stu-id="86e86-262">If the only settings defined are application-scoped settings, <xref:System.Configuration.ApplicationSettingsBase.Save%2A> will have no effect and return no error if called with the default <xref:System.Configuration.LocalFileSettingsProvider>.</span></span> <span data-ttu-id="86e86-263"><xref:System.Configuration.LocalFileSettingsProvider> Salva solo le impostazioni con ambito di utente.</span><span class="sxs-lookup"><span data-stu-id="86e86-263"><xref:System.Configuration.LocalFileSettingsProvider> only saves user-scoped settings.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="86e86-264">Non si verifica alcun metodo di caricamento corrispondente poiché i valori delle impostazioni dell'applicazione vengono caricati automaticamente durante l'inizializzazione delle classi wrapper.</span><span class="sxs-lookup"><span data-stu-id="86e86-264">There is no corresponding Load method because the values of application settings are automatically loaded during wrapper class initialization.</span></span> <span data-ttu-id="86e86-265">Al contrario, questi valori non salvati automaticamente quando un'applicazione termina.</span><span class="sxs-lookup"><span data-stu-id="86e86-265">In contrast, these values are not automatically saved when an application ends.</span></span> <span data-ttu-id="86e86-266">Pertanto, è necessario chiamare esplicitamente il <xref:System.Configuration.ApplicationSettingsBase.Save%2A> metodo per rendere persistenti i valori correnti delle impostazioni dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="86e86-266">Therefore, you must explicitly call the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method to persist the current values of the application settings.</span></span> <span data-ttu-id="86e86-267">Questa operazione viene in genere eseguita nel <xref:System.Windows.Forms.Form.Closing> gestore dell'evento del primario o che lo contiene <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="86e86-267">This is typically performed in the <xref:System.Windows.Forms.Form.Closing> event handler of the primary or containing <xref:System.Windows.Forms.Form>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86e86-268">Nell'esempio di codice riportato di seguito viene illustrato il <xref:System.Configuration.ApplicationSettingsBase.Save%2A> metodo chiamato dal <xref:System.Windows.Forms.Form.Closing> gestore dell'evento per il form principale.</span><span class="sxs-lookup"><span data-stu-id="86e86-268">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method being called from the <xref:System.Windows.Forms.Form.Closing> event handler for the primary form.</span></span> <span data-ttu-id="86e86-269">Questo metodo aggiunge inoltre un periodo di tempo aggiuntivo per la proprietà delle impostazioni che è associata al modulo <xref:System.Windows.Forms.Control.Text%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="86e86-269">This method also appends an extra period to the settings property that is associated with the form's <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 <span data-ttu-id="86e86-270">L'esempio di codice completo è racchiuso il <xref:System.Configuration.ApplicationSettingsBase> Cenni preliminari sulla classe.</span><span class="sxs-lookup"><span data-stu-id="86e86-270">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#3)]
 [!code-csharp[AppSettingsSample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#3)]
 [!code-vb[AppSettingsSample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SettingChanging">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingChangingEventHandler SettingChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingChangingEventHandler SettingChanging" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingChanging As SettingChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingChangingEventHandler ^ SettingChanging;" />
      <MemberSignature Language="F#" Value="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " Usage="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86e86-271">Si verifica prima della modifica del valore di una proprietà delle impostazioni dell'applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-271">Occurs before the value of an application settings property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-272">Il <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> evento si verifica prima che una proprietà di valore di impostazione dell'applicazione viene modificata tramite la <xref:System.Configuration.ApplicationSettingsBase.Item%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="86e86-272">The <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event occurs before an application setting value property is changed through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="86e86-273">Questo evento non viene generato quando il <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> o <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> metodi vengono chiamati.</span><span class="sxs-lookup"><span data-stu-id="86e86-273">This event is not raised when the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods are called.</span></span> <span data-ttu-id="86e86-274"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> può essere annullata tramite i <xref:System.Configuration.SettingChangingEventArgs> classe di dati eventi.</span><span class="sxs-lookup"><span data-stu-id="86e86-274"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> can be canceled through the <xref:System.Configuration.SettingChangingEventArgs> event data class.</span></span>  
  
 <span data-ttu-id="86e86-275">In genere si usa il <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> evento da gestire la convalida immediata di una singola proprietà delle impostazioni.</span><span class="sxs-lookup"><span data-stu-id="86e86-275">You typically use the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event to handle immediate validation of an individual settings property.</span></span> <span data-ttu-id="86e86-276">Per altre informazioni sulla convalida, vedere [procedura: convalidare le impostazioni dell'applicazione](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md).</span><span class="sxs-lookup"><span data-stu-id="86e86-276">For more information about validation, see [How to: Validate Application Settings](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md).</span></span>  
  
 <span data-ttu-id="86e86-277">Non vi è alcun corrispondente `SettingChanged` eventi per questa classe; al contrario, vedere il <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="86e86-277">There is no corresponding `SettingChanged` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86e86-278">Nell'esempio di codice riportato di seguito viene illustrato il <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> gestore dell'evento per l'oggetto di tipo `FormSettings`, che è derivata da una classe wrapper <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="86e86-278">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="86e86-279">Il gestore visualizza le informazioni sull'evento in una casella di testo denominato `tbStatus`.</span><span class="sxs-lookup"><span data-stu-id="86e86-279">The handler displays the event information in a textbox named `tbStatus`.</span></span> <span data-ttu-id="86e86-280">L'esempio di codice completo è racchiuso il <xref:System.Configuration.ApplicationSettingsBase> Cenni preliminari sulla classe.</span><span class="sxs-lookup"><span data-stu-id="86e86-280">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#7)]
 [!code-csharp[AppSettingsSample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#7)]
 [!code-vb[AppSettingsSample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86e86-281">Ottiene o imposta la chiave delle impostazioni per il gruppo di impostazioni dell'applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-281">Gets or sets the settings key for the application settings group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86e86-282">Classe <see cref="T:System.String" /> contenente la chiave delle impostazioni per il gruppo di impostazioni corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-282">A <see cref="T:System.String" /> containing the settings key for the current settings group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-283">Il <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> proprietà viene fornita per consentire al codice client e, in particolare il provider di impostazioni, per evitare ambiguità tra più istanze della classe di impostazioni dell'applicazione stessa.</span><span class="sxs-lookup"><span data-stu-id="86e86-283">The <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property is provided to enable client code, and in particular the settings provider, to disambiguate between multiple instances of the same application settings class.</span></span>  
  
 <span data-ttu-id="86e86-284">A meno che la classe wrapper di impostazioni è progettata usando il modello singleton, possono essere presenti più istanze della stessa classe di impostazioni dell'applicazione in una singola applicazione.</span><span class="sxs-lookup"><span data-stu-id="86e86-284">Unless the settings wrapper class is designed using the singleton pattern, there can be multiple instances of the same application settings class in a single application.</span></span> <span data-ttu-id="86e86-285">Il valore di <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> deve essere impostata in base al modo in cui i valori delle proprietà sono destinati a essere condivise.</span><span class="sxs-lookup"><span data-stu-id="86e86-285">The value of <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should be set according to how the property values are intended to be shared.</span></span>  
  
-   <span data-ttu-id="86e86-286">Se la proprietà delle impostazioni del wrapper devono essere condivise tra tutte le istanze del wrapper nella stessa applicazione, quindi <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> devono avere lo stesso valore in tutte le istanze.</span><span class="sxs-lookup"><span data-stu-id="86e86-286">If the settings properties of the wrapper are intended to be shared across all instances of the wrapper in the same application, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have the same value in all of the instances.</span></span> <span data-ttu-id="86e86-287">Si tratta del comportamento predefinito del <xref:System.Configuration.ApplicationSettingsBase> classe.</span><span class="sxs-lookup"><span data-stu-id="86e86-287">This is the default behavior of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span>  
  
-   <span data-ttu-id="86e86-288">Se la proprietà delle impostazioni del wrapper sono destinate a essere per ogni istanza, quindi <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> deve avere un valore univoco per ogni istanza.</span><span class="sxs-lookup"><span data-stu-id="86e86-288">If the settings properties of the wrapper are intended to be per instance, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have a unique value for every instance.</span></span> <span data-ttu-id="86e86-289">Il <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29> versione del costruttore consente di inizializzare <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> a una stringa univoca.</span><span class="sxs-lookup"><span data-stu-id="86e86-289">The <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29> version of the constructor enables you to initialize <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> to a unique string.</span></span>  
  
 <span data-ttu-id="86e86-290">Al contrario, il <xref:System.Configuration.ApplicationSettingsBase.Context%2A> proprietà vengono forniti alcuni suggerimenti per il provider di impostazioni per abilitarlo in modo permanente i valori in modo efficiente e corretto.</span><span class="sxs-lookup"><span data-stu-id="86e86-290">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.Context%2A> property provides hints to the settings provider to enable it to persist values in an efficient and orderly manner.</span></span>  
  
 <span data-ttu-id="86e86-291">Il <xref:System.Configuration.SettingChangingEventArgs> classe contiene una simile <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> proprietà che consentono di identificare l'origine del <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> evento.</span><span class="sxs-lookup"><span data-stu-id="86e86-291">The <xref:System.Configuration.SettingChangingEventArgs> class contains a similar <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> property that helps identify the source of the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Context" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SettingsLoaded">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsLoadedEventHandler SettingsLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsLoaded As SettingsLoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsLoadedEventHandler ^ SettingsLoaded;" />
      <MemberSignature Language="F#" Value="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " Usage="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsLoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86e86-292">Si verifica dopo il recupero delle impostazioni dell'applicazione dall'archivio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-292">Occurs after the application settings are retrieved from storage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-293">Il <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> evento si verifica solo dopo l'iniziale `get` accesso della proprietà di configurazione prima utilizzata, in genere tramite il <xref:System.Configuration.ApplicationSettingsBase.Item%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="86e86-293">The <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event occurs only after the initial `get` access of the first configuration property used, typically through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="86e86-294">Gli accessi successivi usano i valori per le proprietà delle impostazioni che vengono memorizzati nella cache in locale.</span><span class="sxs-lookup"><span data-stu-id="86e86-294">Subsequent accesses use values for the settings property that are cached locally.</span></span> <span data-ttu-id="86e86-295">Il <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> e <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> metodi verranno cancellati i valori memorizzati nella cache tutto, questo evento verrà generato nuovamente al successivo accesso della proprietà.</span><span class="sxs-lookup"><span data-stu-id="86e86-295">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods will clear all cached values so this event will be raised again upon subsequent property access.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="T:System.Configuration.SettingsLoadedEventArgs" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="SettingsSaving">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsSavingEventHandler SettingsSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsSavingEventHandler SettingsSaving" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsSaving As SettingsSavingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsSavingEventHandler ^ SettingsSaving;" />
      <MemberSignature Language="F#" Value="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " Usage="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsSavingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86e86-296">Si verifica prima del salvataggio dei valori nell'archivio dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-296">Occurs before values are saved to the data store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-297">Il <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> evento viene generato mediante la <xref:System.Configuration.ApplicationSettingsBase.Save%2A> metodo prima di memorizzare le proprietà delle impostazioni dell'applicazione al relativo archivio dati associato.</span><span class="sxs-lookup"><span data-stu-id="86e86-297">The <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event is raised by the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method before it stores the application settings properties to their associated data store.</span></span> <span data-ttu-id="86e86-298">Il gestore eventi associato può annullare questo evento.</span><span class="sxs-lookup"><span data-stu-id="86e86-298">The associated event handler can cancel this event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86e86-299">Nell'esempio di codice riportato di seguito viene illustrato il <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> gestore dell'evento per l'oggetto di tipo `FormSettings`, che è derivata da una classe wrapper <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="86e86-299">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="86e86-300">Il gestore esegue una query utente per salvare i valori delle proprietà delle impostazioni dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="86e86-300">The handler queries the user to save the current application settings property values.</span></span> <span data-ttu-id="86e86-301">L'esempio di codice completo è racchiuso il <xref:System.Configuration.ApplicationSettingsBase> Cenni preliminari sulla classe.</span><span class="sxs-lookup"><span data-stu-id="86e86-301">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#8](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#8)]
 [!code-csharp[AppSettingsSample#8](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#8)]
 [!code-vb[AppSettingsSample#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public virtual void Upgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Upgrade ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade();" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : unit -&gt; unit&#xA;override this.Upgrade : unit -&gt; unit" Usage="applicationSettingsBase.Upgrade " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86e86-302">Aggiorna le impostazioni dell'applicazione in modo da riflettere un'installazione più recente dell'applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-302">Updates application settings to reflect a more recent installation of the application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86e86-303">Il <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> metodo consente di eseguire due azioni per garantire una transizione senza problemi a una nuova versione di un'applicazione:</span><span class="sxs-lookup"><span data-stu-id="86e86-303">The <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method performs two actions to assure smooth transition to a new version of an application:</span></span>  
  
-   <span data-ttu-id="86e86-304">Notifica a tutti i provider di impostazioni corrispondenti dell'esistenza dell'applicazione aggiornato tramite una chiamata al loro <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> metodo, presupponendo che sia stata implementata la <xref:System.Configuration.IApplicationSettingsProvider> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="86e86-304">It notifies all of the corresponding settings providers of the existence of the upgraded application through a call to their <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> method, assuming they have implemented the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="86e86-305">Questa azione non viene eseguita se la classe wrapper di impostazioni è contrassegnata con <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="86e86-305">This action is not performed if the settings wrapper class is marked with <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</span></span>  
  
-   <span data-ttu-id="86e86-306">Ricarica i valori per tutte le impostazioni dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="86e86-306">It reloads the values for all of the application settings.</span></span>  
  
 <span data-ttu-id="86e86-307">È possibile eseguire l'override del comportamento predefinito di <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> per implementare l'aggiornamento o di unione di comportamento personalizzato.</span><span class="sxs-lookup"><span data-stu-id="86e86-307">You can override the default behavior of <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> to implement custom upgrading or merging behavior.</span></span> <span data-ttu-id="86e86-308">Usare il <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> metodo per recuperare i singoli valori per un'impostazione per la versione precedente dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="86e86-308">Use the <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method to retrieve individual values for a setting for the previous version of the application.</span></span> <span data-ttu-id="86e86-309">Esempi di comportamento di aggiornamento personalizzato:</span><span class="sxs-lookup"><span data-stu-id="86e86-309">Examples of custom upgrade behavior include:</span></span>  
  
-   <span data-ttu-id="86e86-310">Usando le impostazioni predefinite precedenti o nuovi valori predefiniti di criteri che eseguono l'override di uno o più dei valori specificati dall'utente precedenti.</span><span class="sxs-lookup"><span data-stu-id="86e86-310">Using new policy defaults that override one or more of the previous user-specified values or previous defaults.</span></span>  
  
-   <span data-ttu-id="86e86-311">Conversione speciale dei valori obsoleti per renderli compatibili con più recente degli intervalli, un gruppo di impostazioni diverse proprietà e così via.</span><span class="sxs-lookup"><span data-stu-id="86e86-311">Special translation of old values to be compatible with newer ranges, a different settings property group, and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="86e86-312">Impossibile analizzare il file di configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86e86-312">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>