<Type Name="ConfigurationManager" FullName="System.Configuration.ConfigurationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf2bfcddc8ec362fe5527c2f8535e79cc99198f3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380225" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConfigurationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fa91e-101">Fornisce l'accesso ai file di configurazione per le applicazioni client.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fa91e-101">Provides access to configuration files for client applications.</span>
      </span>
      <span data-ttu-id="fa91e-102">Questa classe non può essere ereditata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fa91e-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa91e-103">La <xref:System.Configuration.ConfigurationManager> classe consente al computer di accesso, applicazione e informazioni di configurazione utente.</span><span class="sxs-lookup"><span data-stu-id="fa91e-103">The <xref:System.Configuration.ConfigurationManager> class enables you to access machine, application, and user configuration information.</span></span> <span data-ttu-id="fa91e-104">Questa classe sostituisce il <xref:System.Configuration.ConfigurationSettings> (classe), che è deprecato.</span><span class="sxs-lookup"><span data-stu-id="fa91e-104">This class replaces the <xref:System.Configuration.ConfigurationSettings> class, which is deprecated.</span></span> <span data-ttu-id="fa91e-105">Per le applicazioni web, utilizzare la <xref:System.Web.Configuration.WebConfigurationManager> classe.</span><span class="sxs-lookup"><span data-stu-id="fa91e-105">For web applications, use the <xref:System.Web.Configuration.WebConfigurationManager> class.</span></span>  
  
 <span data-ttu-id="fa91e-106">Utilizzare il <xref:System.Configuration.ConfigurationManager> (classe), è necessario fare riferimento al progetto il `System.Configuration` assembly.</span><span class="sxs-lookup"><span data-stu-id="fa91e-106">To use the <xref:System.Configuration.ConfigurationManager> class, your project must reference the `System.Configuration` assembly.</span></span> <span data-ttu-id="fa91e-107">Per impostazione predefinita, alcuni modelli di progetto, come applicazione Console, fa riferimento questo assembly deve riferimento manualmente.</span><span class="sxs-lookup"><span data-stu-id="fa91e-107">By default, some project templates, like Console Application, do not reference this assembly so you must manually reference it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa91e-108">Il nome e il percorso del file di configurazione dell'applicazione variano in funzione host dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="fa91e-108">The name and location of the application configuration file depend on the application's host.</span></span> <span data-ttu-id="fa91e-109">Per ulteriori informazioni, vedere [NIB: file di configurazione dell'applicazione](http://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span><span class="sxs-lookup"><span data-stu-id="fa91e-109">For more information, see [NIB: Application Configuration Files](http://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span></span>  
  
 <span data-ttu-id="fa91e-110">È possibile utilizzare il predefinito <xref:System.Configuration> tipi o derivare da esse per gestire le informazioni di configurazione.</span><span class="sxs-lookup"><span data-stu-id="fa91e-110">You can use the built-in <xref:System.Configuration> types or derive from them to handle configuration information.</span></span> <span data-ttu-id="fa91e-111">Per utilizzare questi tipi, può lavorare direttamente con le informazioni di configurazione ed è possibile estendere i file di configurazione per includere informazioni personalizzate.</span><span class="sxs-lookup"><span data-stu-id="fa91e-111">By using these types, you can work directly with configuration information and you can extend configuration files to include custom information.</span></span>  
  
 <span data-ttu-id="fa91e-112">La <xref:System.Configuration.ConfigurationManager> classe include i membri che consentono di eseguire le attività seguenti:</span><span class="sxs-lookup"><span data-stu-id="fa91e-112">The <xref:System.Configuration.ConfigurationManager> class includes members that enable you to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="fa91e-113">Leggere una sezione da un file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="fa91e-113">Read a section from a configuration file.</span></span> <span data-ttu-id="fa91e-114">Per accedere a informazioni di configurazione, chiamare il <xref:System.Configuration.ConfigurationManager.GetSection%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="fa91e-114">To access configuration information, call the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="fa91e-115">Per alcune sezioni, ad esempio `appSettings` e `connectionStrings`, utilizzare il <xref:System.Configuration.ConfigurationManager.AppSettings%2A> e <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> classi.</span><span class="sxs-lookup"><span data-stu-id="fa91e-115">For some sections such as `appSettings` and `connectionStrings`, use the <xref:System.Configuration.ConfigurationManager.AppSettings%2A> and <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> classes.</span></span> <span data-ttu-id="fa91e-116">Questi membri eseguire operazioni di sola lettura una singola istanza memorizzata nella cache della configurazione, utilizzare il multithreading conoscenza.</span><span class="sxs-lookup"><span data-stu-id="fa91e-116">These members perform read-only operations, use a single cached instance of the configuration, and are multithread aware.</span></span>  
  
-   <span data-ttu-id="fa91e-117">Leggere e scrivere file di configurazione nel suo complesso.</span><span class="sxs-lookup"><span data-stu-id="fa91e-117">Read and write configuration files as a whole.</span></span> <span data-ttu-id="fa91e-118">L'applicazione può leggere e scrivere le impostazioni di configurazione in qualsiasi livello, per se stesso o per altre applicazioni o di un computer locale o remota.</span><span class="sxs-lookup"><span data-stu-id="fa91e-118">Your application can read and write configuration settings at any level, for itself or for other applications or computers, locally or remotely.</span></span> <span data-ttu-id="fa91e-119">Utilizzare uno dei metodi forniti dalla <xref:System.Configuration.ConfigurationManager> classe per aprire un file di configurazione, ad esempio SampleApp.exe.config. Questi metodi restituiscono un <xref:System.Configuration.Configuration> che a sua volta espone metodi e proprietà consente di lavorare con i file di configurazione associato.</span><span class="sxs-lookup"><span data-stu-id="fa91e-119">Use one of the methods provided by the <xref:System.Configuration.ConfigurationManager> class to open a configuration file such as SampleApp.exe.config. These methods return a <xref:System.Configuration.Configuration> object that in turn exposes methods and properties you can use to work with the associated configuration files.</span></span> <span data-ttu-id="fa91e-120">I metodi di eseguono operazioni di lettura o operazioni di scrittura e creare i dati di configurazione ogni volta che viene scritto un file.</span><span class="sxs-lookup"><span data-stu-id="fa91e-120">The methods perform read or write operations and create the configuration data every time that a file is written.</span></span>  
  
-   <span data-ttu-id="fa91e-121">Supporta attività di configurazione.</span><span class="sxs-lookup"><span data-stu-id="fa91e-121">Support configuration tasks.</span></span> <span data-ttu-id="fa91e-122">I tipi seguenti vengono utilizzati per supportare diverse attività di configurazione:</span><span class="sxs-lookup"><span data-stu-id="fa91e-122">The following types are used to support various configuration tasks:</span></span>  
  
    -   <xref:System.Configuration.SectionInformation>  
  
    -   <xref:System.Configuration.PropertyInformation>  
  
    -   <xref:System.Configuration.PropertyInformationCollection>  
  
    -   <xref:System.Configuration.ElementInformation>  
  
    -   <xref:System.Configuration.ContextInformation>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroup>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroupCollection>  
  
     <span data-ttu-id="fa91e-123">Oltre a lavorare con le informazioni di configurazione esistente, è possibile creare e lavorare con gli elementi di configurazione personalizzato estendendo i tipi di configurazione predefinite, ad esempio il <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, e <xref:System.Configuration.ConfigurationSection> classi.</span><span class="sxs-lookup"><span data-stu-id="fa91e-123">In addition to working with existing configuration information, you can create and work with custom configuration elements by extending the built-in configuration types such as the <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, and <xref:System.Configuration.ConfigurationSection> classes.</span></span> <span data-ttu-id="fa91e-124">Per un esempio di come estendere un tipo di configurazione predefinite a livello di codice, vedere <xref:System.Configuration.ConfigurationSection>.</span><span class="sxs-lookup"><span data-stu-id="fa91e-124">For an example of how to extend a built-in configuration type programmatically, see <xref:System.Configuration.ConfigurationSection>.</span></span> <span data-ttu-id="fa91e-125">Per un esempio di come estendere un tipo di configurazione incorporato che utilizza il modello basato su attributi, vedere <xref:System.Configuration.ConfigurationElement>.</span><span class="sxs-lookup"><span data-stu-id="fa91e-125">For an example of how to extend a built-in configuration type that uses the attribute-based model, see <xref:System.Configuration.ConfigurationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa91e-126">Il primo esempio illustra una semplice applicazione console che legge le impostazioni dell'applicazione, aggiunge una nuova impostazione e aggiorna un'impostazione esistente.</span><span class="sxs-lookup"><span data-stu-id="fa91e-126">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="fa91e-127">Nell'esempio precedente si presuppone che il progetto contiene un file app. config come illustrato di seguito.</span><span class="sxs-lookup"><span data-stu-id="fa91e-127">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 <span data-ttu-id="fa91e-128">Nell'esempio seguente viene illustrato come utilizzare una stringa di connessione per leggere i dati da un database.</span><span class="sxs-lookup"><span data-stu-id="fa91e-128">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="fa91e-129">Nell'esempio precedente si presuppone che il progetto contiene un file app. config come illustrato di seguito.</span><span class="sxs-lookup"><span data-stu-id="fa91e-129">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="fa91e-130">La <see cref="T:System.Configuration.Configuration" /> classe consente l'accesso a livello di codice per la modifica di file di configurazione.</span>
        <span class="sxs-lookup">
          <span data-stu-id="fa91e-130">The <see cref="T:System.Configuration.Configuration" /> class enables programmatic access for editing configuration files.</span>
        </span>
        <span data-ttu-id="fa91e-131">Utilizzare uno dei metodi di apertura forniti da <see cref="T:System.Configuration.ConfigurationManager" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="fa91e-131">You use one of the Open methods provided by <see cref="T:System.Configuration.ConfigurationManager" />.</span>
        </span>
        <span data-ttu-id="fa91e-132">Questi metodi restituiscono un <see cref="T:System.Configuration.Configuration" /> oggetto, che a sua volta fornisce le proprietà per gestire i file di configurazione sottostanti e i metodi necessari.</span>
        <span class="sxs-lookup">
          <span data-stu-id="fa91e-132">These methods return a <see cref="T:System.Configuration.Configuration" /> object, which in turn provides the required methods and properties to handle the underlying configuration files.</span>
        </span>
        <span data-ttu-id="fa91e-133">È possibile accedere a questi file per la lettura o scrittura.</span>
        <span class="sxs-lookup">
          <span data-stu-id="fa91e-133">You can access these files for reading or writing.</span>
        </span>
        <span data-ttu-id="fa91e-134">Per leggere i file di configurazione, utilizzare <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> o <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> per leggere le informazioni di configurazione.</span>
        <span class="sxs-lookup">
          <span data-stu-id="fa91e-134">To read the configuration files, use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> or <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> to read configuration information.</span>
        </span>
        <span data-ttu-id="fa91e-135">L'utente o processo che legge deve disporre delle seguenti autorizzazioni:</span>
        <span class="sxs-lookup">
          <span data-stu-id="fa91e-135">The user or process that reads must have the following permissions:</span>
        </span>  
  
-   <span data-ttu-id="fa91e-136">Autorizzazioni di lettura per il file di configurazione a livello di gerarchia di configurazione corrente.</span><span class="sxs-lookup"><span data-stu-id="fa91e-136">Read permission on the configuration file at the current configuration hierarchy level.</span></span>  
  
-   <span data-ttu-id="fa91e-137">Autorizzazioni di lettura per padre tutti i file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="fa91e-137">Read permissions on all the parent configuration files.</span></span><span data-ttu-id="fa91e-138">Se l'applicazione necessita di accesso in lettura alla propria configurazione, è consigliabile utilizzare il <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> metodo.</span><span class="sxs-lookup"><span data-stu-id="fa91e-138">If your application needs read-only access to its own configuration, we recommend that you use the <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> method.</span></span><span data-ttu-id="fa91e-139">Questo metodo consente di accedere ai valori di configurazione memorizzati nella cache per l'applicazione corrente, che offre prestazioni migliori rispetto di <see cref="T:System.Configuration.Configuration" /> classe.</span><span class="sxs-lookup"><span data-stu-id="fa91e-139">This method provides access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.</span></span><span data-ttu-id="fa91e-140">Per scrivere i file di configurazione, utilizzare uno del <see cref="Overload:System.Configuration.Configuration.Save" /> metodi.</span><span class="sxs-lookup"><span data-stu-id="fa91e-140">To write to the configuration files, use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods.</span></span><span data-ttu-id="fa91e-141">L'utente o processo che scrive deve disporre delle seguenti autorizzazioni:</span><span class="sxs-lookup"><span data-stu-id="fa91e-141">The user or process that writes must have the following permissions:</span></span>  
  
-   <span data-ttu-id="fa91e-142">Autorizzazione di scrittura per il file di configurazione e la directory a livello di gerarchia di configurazione corrente.</span><span class="sxs-lookup"><span data-stu-id="fa91e-142">Write permission on the configuration file and directory at the current configuration hierarchy level.</span></span>  
  
-   <span data-ttu-id="fa91e-143">Autorizzazioni di lettura per tutti i file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="fa91e-143">Read permissions on all the configuration files.</span></span></para>
    </block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa91e-144">Ottiene i dati di <see cref="T:System.Configuration.AppSettingsSection" /> per la configurazione predefinita dell'applicazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-144">Gets the <see cref="T:System.Configuration.AppSettingsSection" /> data for the current application's default configuration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa91e-145">Restituisce un oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> in cui è incluso il contenuto dell'oggetto <see cref="T:System.Configuration.AppSettingsSection" /> per la configurazione predefinita dell'applicazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-145">Returns a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the contents of the <see cref="T:System.Configuration.AppSettingsSection" /> object for the current application's default configuration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa91e-146">Oggetto <xref:System.Configuration.AppSettingsSection> oggetto include il contenuto del file di configurazione `appSettings` sezione.</span><span class="sxs-lookup"><span data-stu-id="fa91e-146">A <xref:System.Configuration.AppSettingsSection> object contains the contents of the configuration file's `appSettings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa91e-147">Il primo esempio illustra una semplice applicazione console che legge le impostazioni dell'applicazione, aggiunge una nuova impostazione e aggiorna un'impostazione esistente.</span><span class="sxs-lookup"><span data-stu-id="fa91e-147">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="fa91e-148">Nell'esempio precedente si presuppone che il progetto contiene un file app. config come illustrato di seguito.</span><span class="sxs-lookup"><span data-stu-id="fa91e-148">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="fa91e-149">Non è possibile recuperare un oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> con i dati delle impostazioni dell'applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-149">Could not retrieve a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object with the application settings data.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa91e-150">Ottiene i dati di <see cref="T:System.Configuration.ConnectionStringsSection" /> per la configurazione predefinita dell'applicazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-150">Gets the <see cref="T:System.Configuration.ConnectionStringsSection" /> data for the current application's default configuration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa91e-151">Restituisce un oggetto <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> in cui è incluso il contenuto dell'oggetto <see cref="T:System.Configuration.ConnectionStringsSection" /> per la configurazione predefinita dell'applicazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-151">Returns a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object that contains the contents of the <see cref="T:System.Configuration.ConnectionStringsSection" /> object for the current application's default configuration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa91e-152">Oggetto <xref:System.Configuration.ConnectionStringsSection> oggetto include il contenuto del file di configurazione `connectionStrings` sezione.</span><span class="sxs-lookup"><span data-stu-id="fa91e-152">A <xref:System.Configuration.ConnectionStringsSection> object contains the contents of the configuration file's `connectionStrings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa91e-153">Nell'esempio seguente viene illustrato come utilizzare una stringa di connessione per leggere i dati da un database.</span><span class="sxs-lookup"><span data-stu-id="fa91e-153">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="fa91e-154">Nell'esempio precedente si presuppone che il progetto contiene un file app. config come illustrato di seguito.</span><span class="sxs-lookup"><span data-stu-id="fa91e-154">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="fa91e-155">Non è stato possibile recuperare un oggetto <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-155">Could not retrieve a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="fa91e-156">Percorso e nome della sezione di configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-156">The configuration section path and name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa91e-157">Recupera una sezione di configurazione specificata per la configurazione predefinita dell'applicazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-157">Retrieves a specified configuration section for the current application's default configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa91e-158">Oggetto <see cref="T:System.Configuration.ConfigurationSection" /> specificato oppure <see langword="null" /> se la sezione non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-158">The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or <see langword="null" /> if the section does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa91e-159">Per le applicazioni client, questo metodo recupera un file di configurazione ottenuto dall'unione di file di configurazione dell'applicazione, il file di configurazione utente locale e il file di configurazione comune.</span><span class="sxs-lookup"><span data-stu-id="fa91e-159">For client applications, this method retrieves a configuration file obtained by merging the application configuration file, the local user configuration file, and the roaming configuration file.</span></span>  
  
 <span data-ttu-id="fa91e-160">Il <xref:System.Configuration.ConfigurationManager.GetSection%2A> metodo accede alle informazioni di configurazione di run-time che non può modificare.</span><span class="sxs-lookup"><span data-stu-id="fa91e-160">The <xref:System.Configuration.ConfigurationManager.GetSection%2A> method accesses run-time configuration information that it cannot change.</span></span> <span data-ttu-id="fa91e-161">Per modificare la configurazione, utilizzare il <xref:System.Configuration.Configuration.GetSection%2A> metodo nel file di configurazione che si ottiene utilizzando uno dei metodi di apertura seguenti:</span><span class="sxs-lookup"><span data-stu-id="fa91e-161">To change the configuration, you use the <xref:System.Configuration.Configuration.GetSection%2A> method on the configuration file that you obtain by using one of the following Open methods:</span></span>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
   
  
## Examples  
 <span data-ttu-id="fa91e-162">Nell'esempio seguente viene illustrato come utilizzare il metodo <xref:System.Configuration.ConfigurationManager.GetSection%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa91e-162">The following example shows how to use the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="fa91e-163">L'esempio fa parte di un esempio più ampio fornito per il <xref:System.Configuration.ConfigurationManager> classe.</span><span class="sxs-lookup"><span data-stu-id="fa91e-163">The example is part of a larger example that is provided for the <xref:System.Configuration.ConfigurationManager> class.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="fa91e-164">Non è stato possibile caricare un file di configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-164">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="fa91e-165">È necessario eseguire il cast del valore restituito al tipo di configurazione previsto.</span>
            <span class="sxs-lookup">
              <span data-stu-id="fa91e-165">You must cast the return value to the expected configuration type.</span>
            </span>
            <span data-ttu-id="fa91e-166">Per evitare possibili eccezioni di cast, è necessario utilizzare un'operazione di cast condizionale, ad esempio il <see langword="as" /> operatore in c# o la funzione in Visual Basic.</span>
            <span class="sxs-lookup">
              <span data-stu-id="fa91e-166">To avoid possible casting exceptions, you should use a conditional casting operation such as the <see langword="as" /> operator in C# or the  function in Visual Basic.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa91e-167">Apre il file di configurazione client specificato come oggetto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-167">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="userLevel">
          <span data-ttu-id="fa91e-168">Enumerazione <see cref="T:System.Configuration.ConfigurationUserLevel" /> per cui si apre la configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-168">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> for which you are opening the configuration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa91e-169">Apre il file di configurazione per l'applicazione corrente come oggetto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-169">Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa91e-170">Un oggetto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-170">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa91e-171">Le applicazioni client di utilizzare una configurazione globale che si applica a tutti gli utenti, configurazioni diverse che si applicano a singoli utenti e configurazioni che si applicano agli utenti mobili.</span><span class="sxs-lookup"><span data-stu-id="fa91e-171">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="fa91e-172">Il `userLevel` parametro determina la posizione del file di configurazione aperto indicando se non dispone di alcun livello utente (il file di configurazione si trova nella stessa directory dell'applicazione) o ha un livello utente (il file di configurazione è in un percorso dell'applicazione delle impostazioni determinato dal livello di utente).</span><span class="sxs-lookup"><span data-stu-id="fa91e-172">The `userLevel` parameter determines the location of the configuration file being opened by indicating whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level).</span></span>  
  
 <span data-ttu-id="fa91e-173">Specificare la configurazione da ottenere passando uno dei seguenti valori per `userLevel`:</span><span class="sxs-lookup"><span data-stu-id="fa91e-173">Specify which configuration to get by passing one of the following values for `userLevel`:</span></span>  
  
-   <span data-ttu-id="fa91e-174">Per ottenere il <xref:System.Configuration.Configuration> set di oggetti che si applica a tutti gli utenti, `userLevel` a <xref:System.Configuration.ConfigurationUserLevel.None>.</span><span class="sxs-lookup"><span data-stu-id="fa91e-174">To get the <xref:System.Configuration.Configuration> object that applies to all users, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.None>.</span></span>  
  
-   <span data-ttu-id="fa91e-175">Per ottenere l'oggetto locale <xref:System.Configuration.Configuration> set di oggetti che si applica all'utente corrente, `userLevel` a <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span><span class="sxs-lookup"><span data-stu-id="fa91e-175">To get the local <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span></span>  
  
-   <span data-ttu-id="fa91e-176">Per ottenere il roaming <xref:System.Configuration.Configuration> set di oggetti che si applica all'utente corrente, `userLevel` a <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span><span class="sxs-lookup"><span data-stu-id="fa91e-176">To get the roaming <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="fa91e-177">Per ottenere il <xref:System.Configuration.Configuration> dell'oggetto per una risorsa, il codice deve disporre delle autorizzazioni di lettura su tutti i file di configurazione da cui eredita le impostazioni.</span><span class="sxs-lookup"><span data-stu-id="fa91e-177">To get the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="fa91e-178">Per aggiornare un file di configurazione, il codice deve inoltre disporre delle autorizzazioni di scrittura per il file di configurazione e la directory in cui è contenuto.</span><span class="sxs-lookup"><span data-stu-id="fa91e-178">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa91e-179">Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa91e-179">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#5)]
 [!code-vb[System.Configuration.ConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="fa91e-180">Non è stato possibile caricare un file di configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-180">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (string exePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(string exePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (exePath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::String ^ exePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exePath">
          <span data-ttu-id="fa91e-181">Percorso del file eseguibile, con estensione exe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-181">The path of the executable (exe) file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa91e-182">Apre il file di configurazione client specificato come oggetto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-182">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa91e-183">Un oggetto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-183">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa91e-184">Le applicazioni client di utilizzare una configurazione globale che si applica a tutti gli utenti, configurazioni diverse che si applicano a singoli utenti e configurazioni che si applicano agli utenti mobili.</span><span class="sxs-lookup"><span data-stu-id="fa91e-184">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="fa91e-185">Il `userLevel` valore determina la posizione del file di configurazione aperto.</span><span class="sxs-lookup"><span data-stu-id="fa91e-185">The `userLevel` value determines the location of the configuration file being opened.</span></span> <span data-ttu-id="fa91e-186">Indica se non dispone di alcun livello utente (il file di configurazione si trova nella stessa directory dell'applicazione) o dispone di un livello di singolo utente (il file di configurazione è in un percorso di impostazioni dell'applicazione determinato dal tipo di livello utente).</span><span class="sxs-lookup"><span data-stu-id="fa91e-186">It indicates whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level type.).</span></span>  
  
 <span data-ttu-id="fa91e-187">Chiamare l'overload di questo metodo equivale a chiamare l'overload del metodo <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> con il parametro `preLoad` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="fa91e-187">Calling this method overload is equivalent to calling the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> overload with the `preLoad` parameter set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa91e-188">Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa91e-188">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#6)]
 [!code-vb[System.Configuration.ConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="fa91e-189">Non è stato possibile caricare un file di configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-189">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fa91e-190">Apre il file di configurazione del computer in uso come oggetto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-190">Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa91e-191">Un oggetto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-191">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa91e-192">Le impostazioni di configurazione macchina si applicano all'intero computer e tutte le applicazioni che risiedono su di esso, a meno che non viene sottoposto a override per l'applicazione locale.</span><span class="sxs-lookup"><span data-stu-id="fa91e-192">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="fa91e-193">Le impostazioni di configurazione di computer vengono letti dal file Machine. config della versione di .NET Framework attualmente in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="fa91e-193">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="fa91e-194">Il file Machine. config si trova nella sottodirectory seguenti:</span><span class="sxs-lookup"><span data-stu-id="fa91e-194">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="fa91e-195">*%windir%* \Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="fa91e-195">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa91e-196">Per ottenere il <xref:System.Configuration.Configuration> dell'oggetto per una risorsa, il codice deve disporre delle autorizzazioni di lettura su tutti i file di configurazione da cui eredita le impostazioni.</span><span class="sxs-lookup"><span data-stu-id="fa91e-196">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="fa91e-197">Per aggiornare un file di configurazione, il codice deve inoltre disporre delle autorizzazioni di scrittura per il file di configurazione e la directory in cui è contenuto.</span><span class="sxs-lookup"><span data-stu-id="fa91e-197">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="fa91e-198">Non è possibile accedere al file Machine. config per le altre versioni di .NET Framework che potrebbero essere installati nel computer.</span><span class="sxs-lookup"><span data-stu-id="fa91e-198">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa91e-199">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> per ottenere tutte le sezioni contenute nel file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="fa91e-199">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> method to obtain all sections that are contained in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="fa91e-200">Non è stato possibile caricare un file di configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-200">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa91e-201">Apre il file di configurazione client specificato come oggetto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-201">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="fa91e-202">Oggetto <see cref="T:System.Configuration.ExeConfigurationFileMap" /> che fa riferimento al file di configurazione da utilizzare invece del file di configurazione predefinito dell'applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-202">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span>
          </span>
        </param>
        <param name="userLevel">
          <span data-ttu-id="fa91e-203">Oggetto <see cref="T:System.Configuration.ConfigurationUserLevel" /> per cui si apre la configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-203">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa91e-204">Apre il file di configurazione client specificato come un oggetto <see cref="T:System.Configuration.Configuration" /> che utilizza il mapping del file e il livello utente specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-204">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping and user level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa91e-205">Oggetto di configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-205">The configuration object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa91e-206">Il <xref:System.Configuration.ConfigurationUserLevel> oggetto determina il percorso del file di configurazione in corso l'apertura.</span><span class="sxs-lookup"><span data-stu-id="fa91e-206">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file being opened.</span></span> <span data-ttu-id="fa91e-207">Indica se il file non dispone di alcun livello utente (il file di configurazione si trova nella stessa directory dell'applicazione) o ha un livello utente (il file di configurazione è in un percorso di impostazioni dell'applicazione determinato da `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="fa91e-207">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa91e-208">Per ottenere il <xref:System.Configuration.Configuration> dell'oggetto per una risorsa, il codice deve disporre delle autorizzazioni di lettura su tutti i file di configurazione da cui eredita le impostazioni.</span><span class="sxs-lookup"><span data-stu-id="fa91e-208">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="fa91e-209">Per aggiornare un file di configurazione, il codice deve inoltre disporre delle autorizzazioni di scrittura per il file di configurazione e la directory in cui è contenuto.</span><span class="sxs-lookup"><span data-stu-id="fa91e-209">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa91e-210">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> per ottenere tutte le sezioni contenute nel file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="fa91e-210">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> method to obtain all sections that are contained by the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#9)]
 [!code-vb[System.Configuration.ConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="fa91e-211">Non è stato possibile caricare un file di configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-211">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel, bool preLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel, preLoad As Boolean) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
        <Parameter Name="preLoad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="fa91e-212">Oggetto <see cref="T:System.Configuration.ExeConfigurationFileMap" /> che fa riferimento al file di configurazione da utilizzare invece del file di configurazione predefinito dell'applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-212">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references the configuration file to use instead of the default application configuration file.</span>
          </span>
        </param>
        <param name="userLevel">
          <span data-ttu-id="fa91e-213">Oggetto <see cref="T:System.Configuration.ConfigurationUserLevel" /> per cui si apre la configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-213">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span>
          </span>
        </param>
        <param name="preLoad">
          <span data-ttu-id="fa91e-214">
            <see langword="true" /> per precaricare tutti i gruppi di sezioni e tutte le sezioni; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-214">
              <see langword="true" /> to preload all section groups and sections; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa91e-215">Apre il file di configurazione client specificato come un oggetto <see cref="T:System.Configuration.Configuration" /> che utilizza il mapping del file, il livello utente specificati e l'opzione di precaricamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-215">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping, user level, and preload option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa91e-216">Oggetto di configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-216">The configuration object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa91e-217">L’oggetto <xref:System.Configuration.ConfigurationUserLevel> determina il percorso del file di configurazione aperto.</span><span class="sxs-lookup"><span data-stu-id="fa91e-217">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file that is being opened.</span></span> <span data-ttu-id="fa91e-218">Indica se il file non dispone di alcun livello utente (il file di configurazione si trova nella stessa directory dell'applicazione) o se dispone di un livello utente (il file di configurazione si trova nel percorso delle impostazioni dell'applicazione determinato da `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="fa91e-218">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path that is determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa91e-219">Per ottenere il <xref:System.Configuration.Configuration> dell'oggetto per una risorsa, il codice deve disporre delle autorizzazioni di lettura su tutti i file di configurazione da cui eredita le impostazioni.</span><span class="sxs-lookup"><span data-stu-id="fa91e-219">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="fa91e-220">Per aggiornare un file di configurazione, il codice deve inoltre disporre delle autorizzazioni di scrittura per il file di configurazione e la directory in cui è contenuto.</span><span class="sxs-lookup"><span data-stu-id="fa91e-220">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
 <span data-ttu-id="fa91e-221">Per un esempio di codice, vedere l'overload di <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa91e-221">For a code example, see the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="fa91e-222">Non è stato possibile caricare un file di configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-222">A configuration file could not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="fa91e-223">Oggetto <see cref="T:System.Configuration.ExeConfigurationFileMap" /> che fa riferimento al file di configurazione da utilizzare invece del file di configurazione predefinito dell'applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-223">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa91e-224">Apre il file di configurazione del computer come un oggetto <see cref="T:System.Configuration.Configuration" /> che utilizza il mapping del file specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-224">Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa91e-225">Un oggetto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-225">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa91e-226">Le impostazioni di configurazione macchina si applicano all'intero computer e tutte le applicazioni che risiedono su di esso, a meno che non viene sottoposto a override per l'applicazione locale.</span><span class="sxs-lookup"><span data-stu-id="fa91e-226">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="fa91e-227">Le impostazioni di configurazione di computer vengono letti dal file Machine. config della versione di .NET Framework attualmente in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="fa91e-227">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="fa91e-228">Il file Machine. config si trova nella sottodirectory seguenti:</span><span class="sxs-lookup"><span data-stu-id="fa91e-228">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="fa91e-229">*%windir%* \Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="fa91e-229">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa91e-230">Per ottenere il <xref:System.Configuration.Configuration> dell'oggetto per una risorsa, il codice deve disporre delle autorizzazioni di lettura su tutti i file di configurazione da cui eredita le impostazioni.</span><span class="sxs-lookup"><span data-stu-id="fa91e-230">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="fa91e-231">Per aggiornare un file di configurazione, il codice deve inoltre disporre delle autorizzazioni di scrittura per il file di configurazione e la directory in cui è contenuto.</span><span class="sxs-lookup"><span data-stu-id="fa91e-231">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="fa91e-232">Non è possibile accedere al file Machine. config per le altre versioni di .NET Framework che potrebbero essere installati nel computer.</span><span class="sxs-lookup"><span data-stu-id="fa91e-232">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa91e-233">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> per ottenere tutte le sezioni nel file di configurazione.</span><span class="sxs-lookup"><span data-stu-id="fa91e-233">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> method to obtain all sections in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="fa91e-234">Non è stato possibile caricare un file di configurazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-234">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationFileMap" />
      </Docs>
    </Member>
    <Member MemberName="RefreshSection">
      <MemberSignature Language="C#" Value="public static void RefreshSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RefreshSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RefreshSection (sectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RefreshSection(System::String ^ sectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="fa91e-235">Nome della sezione di configurazione o nome e percorso di configurazione e della sezione da aggiornare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-235">The configuration section name or the configuration path and section name of the section to refresh.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa91e-236">Aggiorna la sezione denominata in modo che al successivo recupero venga riletta dal disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa91e-236">Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa91e-237">Questo metodo invalida la cache per la sezione di configurazione specificato senza influire su altre sezioni.</span><span class="sxs-lookup"><span data-stu-id="fa91e-237">This method invalidates the cache for the specified configuration section without affecting other sections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa91e-238">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> per aggiornare la sezione di configurazione delle impostazioni dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="fa91e-238">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> method to refresh the application settings configuration section.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>