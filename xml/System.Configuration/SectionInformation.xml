<Type Name="SectionInformation" FullName="System.Configuration.SectionInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e8c650c79dd5c5a5d821915db0257fce6f861923" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31780692" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SectionInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SectionInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SectionInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SectionInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class SectionInformation sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contiene metadati su una singola sezione contenuta nella gerarchia di configurazione. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.SectionInformation> oggetto contiene i metadati relativi a una singola sezione all'interno della gerarchia di configurazione. Questo oggetto può essere utilizzato per convalidare e modificare le proprietà di una singola sezione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere il <xref:System.Configuration.SectionInformation> metadati a cui sono associato un <xref:System.Configuration.ConfigurationSection> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#91](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#91)]
 [!code-vb[System.Configuration.ConfigurationElement#91](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#91)]  
  
 L'esempio seguente è un estratto del file di configurazione utilizzato dall'esempio precedente.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<configuration>  
  <configSections>  
    <section name="MyUrls" type="Samples.AspNet.UrlsSection,  
      ConfigurationElement, Version=1.0.0.0, Culture=neutral,  
      PublicKeyToken=null" allowDefinition="Everywhere"  
      allowExeDefinition="MachineToApplication"  
      restartOnExternalChanges="true" />  
  </configSections>  
  <MyUrls name="MyFavorites">  
    <simple name="Contoso" url="http://www.contoso.com" port="8080" />  
    <urls>  
      <clear />  
      <add name="Microsoft" url="http://www.microsoft.com" port="0" />  
    </urls>  
  </MyUrls>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
  </Docs>
  <Members>
    <Member MemberName="AllowDefinition">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationAllowDefinition AllowDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.ConfigurationAllowDefinition AllowDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDefinition As ConfigurationAllowDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationAllowDefinition AllowDefinition { System::Configuration::ConfigurationAllowDefinition get(); void set(System::Configuration::ConfigurationAllowDefinition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationAllowDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica la posizione nella gerarchia di file di configurazione in cui può essere definita la sezione di configurazione associata.</summary>
        <value>Valore che indica la posizione nella gerarchia di file di configurazione in cui può essere dichiarato l'oggetto <see cref="T:System.Configuration.ConfigurationSection" /> associato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SectionInformation.AllowDefinition%2A> si applica solo ai file di configurazione di applicazioni Web. Per le applicazioni client, è necessario utilizzare <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>.  
  
   
  
## Examples  
 Negli esempi di questa sezione viene illustrato come ottenere il <xref:System.Configuration.SectionInformation.AllowDefinition%2A> valore della proprietà dopo l'accesso alle informazioni relativa sezione nel file di configurazione.  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation.AllowDefinition%2A> valore.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#96](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#96)]
 [!code-vb[System.Configuration.ConfigurationElement#96](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#96)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Il valore selezionato è in conflitto con un valore già definito.</exception>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="AllowExeDefinition">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationAllowExeDefinition AllowExeDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.ConfigurationAllowExeDefinition AllowExeDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowExeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowExeDefinition As ConfigurationAllowExeDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationAllowExeDefinition AllowExeDefinition { System::Configuration::ConfigurationAllowExeDefinition get(); void set(System::Configuration::ConfigurationAllowExeDefinition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationAllowExeDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica la posizione nella gerarchia di file di configurazione in cui può essere dichiarata la sezione di configurazione associata.</summary>
        <value>Valore che indica la posizione nella gerarchia di file di configurazione in cui può essere dichiarato l'oggetto <see cref="T:System.Configuration.ConfigurationSection" /> associato per i file con estensione exe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A> si applica solo ai file di configurazione di applicazioni client. Per le applicazioni Web, è necessario utilizzare <xref:System.Configuration.SectionInformation.AllowDefinition%2A>.  
  
   
  
## Examples  
 Negli esempi di questa sezione viene illustrato come ottenere il <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A> valore della proprietà dopo l'accesso alle informazioni relativa sezione nel file di configurazione.  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A> valore.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#97](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#97)]
 [!code-vb[System.Configuration.ConfigurationElement#97](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#97)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Il valore selezionato è in conflitto con un valore già definito.</exception>
        <altmember cref="T:System.Configuration.ConfigurationAllowExeDefinition" />
      </Docs>
    </Member>
    <Member MemberName="AllowLocation">
      <MemberSignature Language="C#" Value="public bool AllowLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowLocation" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowLocation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowLocation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la sezione di configurazione accetta l'attributo <see langword="location" />.</summary>
        <value>
          <see langword="true" /> se l'attributo <see langword="location" /> è consentito; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se impostato su `false`, <xref:System.Configuration.SectionInformation.AllowLocation%2A> proprietà indica che la sezione è accessibile da lettori di codice nativo. Pertanto, l'utilizzo del `location` attributo non è consentito, poiché i lettori di codice nativo non supportano il concetto di `location`.  
  
   
  
## Examples  
 Negli esempi di questa sezione viene illustrato come ottenere il <xref:System.Configuration.SectionInformation.AllowLocation%2A> valore della proprietà dopo l'accesso alle informazioni relativa sezione nel file di configurazione.  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation.AllowLocation%2A> valore.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#98](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#98)]
 [!code-vb[System.Configuration.ConfigurationElement#98](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Il valore selezionato è in conflitto con un valore già definito.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowOverride">
      <MemberSignature Language="C#" Value="public bool AllowOverride { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowOverride" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowOverride" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowOverride As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowOverride { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se file di configurazione di livello inferiore possono eseguire l'override della sezione di configurazione associata.</summary>
        <value>
          <see langword="true" /> se è possibile eseguire l'override della sezione; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Negli esempi di questa sezione viene illustrato come ottenere il <xref:System.Configuration.SectionInformation.AllowOverride%2A> valore della proprietà dopo l'accesso alle informazioni relativa sezione nel file di configurazione.  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation.AllowOverride%2A> valore.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#99)]
 [!code-vb[System.Configuration.ConfigurationElement#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigSource">
      <MemberSignature Language="C#" Value="public string ConfigSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigSource" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ConfigSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'eventuale file di inclusione in cui è definita la sezione di configurazione associata.</summary>
        <value>Nome dell'eventuale file di inclusione in cui è definita la classe <see cref="T:System.Configuration.ConfigurationSection" /> associata; in caso contrario, una stringa vuota ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.SectionInformation.ConfigSource%2A> proprietà rappresenta il valore della `configSource` attributo specificato per un <xref:System.Configuration.ConfigurationSection> oggetto a cui è associato il <xref:System.Configuration.SectionInformation> oggetto.  
  
 Oggetto <xref:System.Configuration.ConfigurationSection> implementazione è possibile specificare facoltativamente un file separato in cui sono definite le impostazioni di configurazione per tale sezione. Ciò può risultare utile in diversi modi:  
  
-   Utilizzo di file di inclusione può comportare una struttura modulare e più logica per i file di configurazione.  
  
-   Per limitare l'accesso alle sezioni delle impostazioni di configurazione è possono utilizzare le autorizzazioni e sicurezza di accesso ai file.  
  
-   Le impostazioni in un file di inclusione che non vengono utilizzate durante l'inizializzazione dell'applicazione possono essere modificate e ricaricate senza dover riavviare l'applicazione.  
  
 L'esempio seguente mostra come questo attributo viene utilizzato in un file di configurazione per specificare che il `pages` sezione è definita in un file di inclusione esterno:  
  
 `<pages configSource="pages.config"/>`  
  
 Se le impostazioni in una configurazione include i file richiedono il riavvio quando vengono modificati, dell'applicazione impostato il <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A> proprietà `true`.  
  
 Nelle applicazioni ASP.NET, in fase di esecuzione è possibile assegnare al <xref:System.Configuration.SectionInformation.ConfigSource%2A> proprietà il nome di un file di configurazione alternativa. In tal caso, il contenuto del file viene sovrascritti dalle informazioni sulla stringa di connessione predefinito che sono contenute nel file Web. config. Ciò si verifica anche quando il file alternativo non esiste e viene creato in fase di esecuzione. Se il file Web. config non contiene informazioni sulla stringa di connessione, un'area vuota viene aggiunto al file alternativo.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.SectionInformation.RestartOnExternalChanges" />
      </Docs>
    </Member>
    <Member MemberName="ConfigurationBuilder">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationBuilder ConfigurationBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationBuilder ConfigurationBuilder" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ConfigurationBuilder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConfigurationBuilder As ConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationBuilder ^ ConfigurationBuilder { System::Configuration::ConfigurationBuilder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Configuration.ConfigurationBuilder" /> per questa sezione di configurazione.</summary>
        <value>L'oggetto <see cref="T:System.Configuration.ConfigurationBuilder" /> per questa sezione di configurazione.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ForceDeclaration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Impone l'inserimento della sezione di configurazione associata nel file di configurazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una sezione di configurazione non viene scritta in un file di configurazione quando viene ereditata da un file padre. Se si desidera che la sezione padre da visualizzare nel file di configurazione figlio, è necessario impostare il <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> a `true`. In questo modo un file di configurazione portabilità da un computer a un altro. Ciò consente inoltre di verificare che la sezione sia presente anche se non si dispone del controllo sui file di configurazione padre.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ForceDeclaration">
      <MemberSignature Language="C#" Value="public void ForceDeclaration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceDeclaration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.ForceDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceDeclaration ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceDeclaration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Impone l'inserimento della sezione di configurazione associata nel file di configurazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> metodo impone questo <xref:System.Configuration.SectionInformation> dichiarazione da scrivere nel file di configurazione.  
  
> [!NOTE]
>  Il <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> metodo può imporre un <xref:System.Configuration.SectionInformation> una dichiarazione di un file di configurazione, anche se la sezione non è necessaria poiché è già stato dichiarato in un file padre. Utilizzo di <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> metodo può impostare una configurazione file portabilità da un computer a un altro. Consente di verificare che la sezione sia presente anche quando non si dispone del controllo sui file di configurazione padre.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceDeclaration">
      <MemberSignature Language="C#" Value="public void ForceDeclaration (bool force);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceDeclaration(bool force) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceDeclaration (force As Boolean)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceDeclaration(bool force);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void ForceDeclaration (bool require);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceDeclaration(bool require) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceDeclaration (require As Boolean)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceDeclaration(bool require);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="require" Type="System.Boolean" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="force">To be added.</param>
        <param name="require">To be added.</param>
        <summary>Impone l'inserimento della sezione di configurazione associata nel file di configurazione o rimuove dal file di configurazione una sezione esistente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> metodo impone questo <xref:System.Configuration.SectionInformation> dichiarazione da scrivere nel file di configurazione se `force` è `true`. Se `force` è `false`, questa azione potrebbe essere ignorata se il <xref:System.Configuration.SectionInformation> dichiarazione è richiesto dal sistema.  
  
> [!NOTE]
>  Il <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> metodo può imporre un <xref:System.Configuration.SectionInformation> una dichiarazione di un file di configurazione, anche se in questa sezione non è necessario perché è già dichiarato in un file padre. Utilizzo di <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> metodo può impostare una configurazione file portabilità da un computer a un altro. Ciò consente inoltre di verificare che la sezione sia presente anche se non si dispone del controllo sui file di configurazione padre.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il metodo <xref:System.Configuration.SectionInformation.ForceDeclaration%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#113](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#113)]
 [!code-vb[System.Configuration.ConfigurationElement#113](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#113)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <paramref name="force" /> è <see langword="true" /> e la sezione associata non può essere esportata nel file di configurazione figlio, o non è dichiarata.</exception>
        <altmember cref="P:System.Configuration.SectionInformation.IsDeclarationRequired" />
      </Docs>
    </Member>
    <Member MemberName="ForceSave">
      <MemberSignature Language="C#" Value="public bool ForceSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceSave" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ForceSave" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceSave { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la sezione di configurazione associata verrà salvata anche se non è stata modificata.</summary>
        <value>
          <see langword="true" /> se l'oggetto <see cref="T:System.Configuration.ConfigurationSection" /> associato verrà salvato anche se non sono state apportate modifiche; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 Se il file di configurazione viene salvato anche se non ci sono modifiche, ASP.NET riavvia l'applicazione.  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Configuration.SectionInformation.ForceSave%2A> proprietà di un <xref:System.Configuration.ConfigurationSection> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ConfigurationElement.cs#1)]
 [!code-vb[System.Configuration.ConfigurationElement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ConfigurationElement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentSection">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationSection GetParentSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Configuration.ConfigurationSection GetParentSection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.GetParentSection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentSection () As ConfigurationSection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::ConfigurationSection ^ GetParentSection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationSection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene la sezione di configurazione che contiene la sezione di configurazione associata a questo oggetto.</summary>
        <returns>Sezione di configurazione contenente l'oggetto <see cref="T:System.Configuration.ConfigurationSection" /> associato all'oggetto <see cref="T:System.Configuration.SectionInformation" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se questo <xref:System.Configuration.ConfigurationSection> oggetto non dispone di alcun sezioni padre, il <xref:System.Configuration.SectionInformation.GetParentSection%2A> il metodo restituisce lo stesso valore il <xref:System.Configuration.SectionInformation.Name%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il metodo <xref:System.Configuration.SectionInformation.GetParentSection%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#92](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#92)]
 [!code-vb[System.Configuration.ConfigurationElement#92](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#92)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il metodo viene richiamato da una sezione padre.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRawXml">
      <MemberSignature Language="C#" Value="public string GetRawXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRawXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.GetRawXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRawXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRawXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce un oggetto nodo XML che rappresenta l'oggetto sezione di configurazione associato.</summary>
        <returns>Rappresentazione XML per la sezione di configurazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il metodo <xref:System.Configuration.SectionInformation.GetRawXml%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#93](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#93)]
 [!code-vb[System.Configuration.ConfigurationElement#93](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#93)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Questo oggetto di configurazione è bloccato e non può essere modificato.</exception>
      </Docs>
    </Member>
    <Member MemberName="InheritInChildApplications">
      <MemberSignature Language="C#" Value="public bool InheritInChildApplications { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InheritInChildApplications" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.InheritInChildApplications" />
      <MemberSignature Language="VB.NET" Value="Public Property InheritInChildApplications As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InheritInChildApplications { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se le impostazioni specificate nella sezione di configurazione associata vengono ereditate da applicazioni che risiedono in una sottodirectory dell'applicazione pertinente.</summary>
        <value>
          <see langword="true" /> se le impostazioni specificate in questo oggetto <see cref="T:System.Configuration.ConfigurationSection" /> vengono ereditate dalle applicazioni figlio; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> proprietà rappresenta il `inheritInChildApplications` attributo di un `location` elemento in un file di configurazione.  
  
 Impostare <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> a `false` per impedire che le impostazioni specifiche di una determinata posizione (ad esempio la directory radice di un sito Web) vengano ereditate da applicazioni presenti nelle sottodirectory.  
  
 Nell'esempio seguente viene illustrato come utilizzare questo attributo in un file di configurazione per specificare che le impostazioni definite nell'elemento location per la radice di un sito Web non devono essere ereditate dalle applicazioni figlio:  
  
 `<location path="." inheritInChildApplications="false">`  
  
 Il <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> proprietà si applica solo a specifici della posizione di configurazione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere il <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> valore di un <xref:System.Configuration.ConfigurationSection> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#100](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#100)]
 [!code-vb[System.Configuration.ConfigurationElement#100](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclarationRequired">
      <MemberSignature Language="C#" Value="public bool IsDeclarationRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeclarationRequired" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsDeclarationRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeclarationRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeclarationRequired { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la sezione di configurazione deve essere dichiarata nel file di configurazione.</summary>
        <value>
          <see langword="true" /> se nel file di configurazione deve essere dichiarato l'oggetto <see cref="T:System.Configuration.ConfigurationSection" /> associato; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Negli esempi di questa sezione viene illustrato come ottenere il <xref:System.Configuration.SectionInformation.IsDeclarationRequired%2A> valore della proprietà dopo l'accesso alle informazioni relativa sezione nel file di configurazione.  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation.IsDeclarationRequired%2A> valore.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#103](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#103)]
 [!code-vb[System.Configuration.ConfigurationElement#103](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#103)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsDeclared">
      <MemberSignature Language="C#" Value="public bool IsDeclared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeclared" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsDeclared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeclared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeclared { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la sezione di configurazione associata viene dichiarata nel file di configurazione.</summary>
        <value>
          <see langword="true" /> se la classe <see cref="T:System.Configuration.ConfigurationSection" /> viene dichiarata nel file di configurazione; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Negli esempi di questa sezione viene illustrato come ottenere il <xref:System.Configuration.SectionInformation.IsDeclared%2A> valore della proprietà dopo l'accesso alle informazioni relativa sezione nel file di configurazione.  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation.IsDeclared%2A> valore.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#104](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#104)]
 [!code-vb[System.Configuration.ConfigurationElement#104](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocked">
      <MemberSignature Language="C#" Value="public bool IsLocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocked" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsLocked" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocked { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la sezione di configurazione associata è bloccata.</summary>
        <value>
          <see langword="true" /> se la sezione è bloccata; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.SectionInformation.IsLocked%2A> restituisce proprietà `true` quando la sezione corrispondente è bloccata dal <xref:System.Configuration.SectionInformation.AllowOverride%2A> o <xref:System.Configuration.SectionInformation.AllowDefinition%2A> proprietà. Una sezione è bloccata se non può essere sottoposto a override o definito nel file di configurazione corrente.  
  
   
  
## Examples  
 Negli esempi di questa sezione viene illustrato come ottenere il <xref:System.Configuration.SectionInformation.IsLocked%2A> valore della proprietà dopo l'accesso alle informazioni relativa sezione nel file di configurazione.  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation.IsLocked%2A> valore.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#105](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#105)]
 [!code-vb[System.Configuration.ConfigurationElement#105](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProtected">
      <MemberSignature Language="C#" Value="public bool IsProtected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsProtected" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsProtected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsProtected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsProtected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se la sezione di configurazione associata è protetta.</summary>
        <value>
          <see langword="true" /> se la classe <see cref="T:System.Configuration.ConfigurationSection" /> è bloccata; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le sezioni di configurazione protetta sono crittografati e di sola lettura.  
  
 Per ulteriori informazioni sulle sezioni di configurazione protetta, vedere [crittografia configurazione informazioni tramite configurazione protetta](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 Negli esempi di questa sezione viene illustrato come ottenere il <xref:System.Configuration.SectionInformation.IsProtected%2A> valore della proprietà dopo l'accesso alle informazioni relativa sezione nel file di configurazione.  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 Nell'esempio seguente viene ottenuto il <xref:System.Configuration.SectionInformation.IsProtected%2A> valore.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#106](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#106)]
 [!code-vb[System.Configuration.ConfigurationElement#106](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome della sezione di configurazione associata.</summary>
        <value>Nome completo della sezione di configurazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.SectionInformation.Name%2A> è il nome della sezione senza il percorso.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere il <xref:System.Configuration.SectionInformation.Name%2A> valore di un <xref:System.Configuration.ConfigurationSection> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#107](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#107)]
 [!code-vb[System.Configuration.ConfigurationElement#107](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideMode">
      <MemberSignature Language="C#" Value="public System.Configuration.OverrideMode OverrideMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.OverrideMode OverrideMode" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.OverrideMode" />
      <MemberSignature Language="VB.NET" Value="Public Property OverrideMode As OverrideMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::OverrideMode OverrideMode { System::Configuration::OverrideMode get(); void set(System::Configuration::OverrideMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.OverrideMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore di enumerazione di <see cref="T:System.Configuration.OverrideMode" /> che specifica se i file di configurazione figlio possono eseguire l'override della sezione di configurazione associata.</summary>
        <value>Uno dei valori dell'enumerazione <see cref="T:System.Configuration.OverrideMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.SectionInformation.AllowOverride%2A> proprietà ottiene o imposta un valore che indica se le risorse dichiarata all'interno di un `location` elemento può essere sostituito dal file di configurazione figlio. Il <xref:System.Configuration.SectionInformation.OverrideMode%2A> proprietà ottiene o imposta un valore che specifica un comportamento simile, ma non per un elemento di configurazione specifico o un gruppo e utilizza uno del <xref:System.Configuration.OverrideMode> valori di enumerazione. Il <xref:System.Configuration.SectionInformation.OverrideMode%2A> proprietà abilita il comportamento di essere ereditato da un elemento padre.  
  
 Non è possibile impostare a livello di codice il <xref:System.Configuration.SectionInformation.AllowOverride%2A> e <xref:System.Configuration.SectionInformation.OverrideMode%2A> proprietà. L'impostazione di <xref:System.Configuration.SectionInformation.AllowOverride%2A> proprietà `true` imposta il <xref:System.Configuration.SectionInformation.OverrideMode%2A> proprietà <xref:System.Configuration.OverrideMode.Inherit>. L'impostazione di <xref:System.Configuration.SectionInformation.AllowOverride%2A> proprietà `false` imposta il <xref:System.Configuration.SectionInformation.OverrideMode%2A> proprietà `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Si è tentato di modificare entrambe le proprietà <see cref="P:System.Configuration.SectionInformation.AllowOverride" /> e <see cref="P:System.Configuration.SectionInformation.OverrideMode" />; questa operazione non è supportata per motivi di compatibilità.</exception>
        <altmember cref="P:System.Configuration.SectionInformation.AllowOverride" />
      </Docs>
    </Member>
    <Member MemberName="OverrideModeDefault">
      <MemberSignature Language="C#" Value="public System.Configuration.OverrideMode OverrideModeDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.OverrideMode OverrideModeDefault" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.OverrideModeDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property OverrideModeDefault As OverrideMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::OverrideMode OverrideModeDefault { System::Configuration::OverrideMode get(); void set(System::Configuration::OverrideMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.OverrideMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica il comportamento di override predefinito di una sezione di configurazione da parte dei file di configurazione figlio.</summary>
        <value>Uno dei valori dell'enumerazione <see cref="T:System.Configuration.OverrideMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.SectionInformation.OverrideModeDefault%2A> proprietà di una sezione di configurazione può essere impostata solo il <xref:System.Configuration.OverrideMode.Allow> o <xref:System.Configuration.OverrideMode.Deny> valore il <xref:System.Configuration.OverrideMode> enumerazione. L'impostazione di <xref:System.Configuration.SectionInformation.OverrideModeDefault%2A> proprietà <xref:System.Configuration.OverrideMode.Inherit> equivale a impostare il valore su <xref:System.Configuration.OverrideMode.Allow>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Il comportamento di override è specificato in una sezione di configurazione padre.</exception>
        <altmember cref="P:System.Configuration.SectionInformation.OverrideMode" />
      </Docs>
    </Member>
    <Member MemberName="OverrideModeEffective">
      <MemberSignature Language="C#" Value="public System.Configuration.OverrideMode OverrideModeEffective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.OverrideMode OverrideModeEffective" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.OverrideModeEffective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverrideModeEffective As OverrideMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::OverrideMode OverrideModeEffective { System::Configuration::OverrideMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.OverrideMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il comportamento di override di una sezione di configurazione, che a sua volta si basa sulla capacità da parte dei file di configurazione figlio di bloccare o meno la sezione di configurazione.</summary>
        <value>Uno dei valori dell'enumerazione <see cref="T:System.Configuration.OverrideMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà restituisce <xref:System.Configuration.OverrideMode.Deny> o <xref:System.Configuration.OverrideMode.Allow>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionProvider">
      <MemberSignature Language="C#" Value="public System.Configuration.ProtectedConfigurationProvider ProtectionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ProtectedConfigurationProvider ProtectionProvider" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ProtectionProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionProvider As ProtectedConfigurationProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ProtectedConfigurationProvider ^ ProtectionProvider { System::Configuration::ProtectedConfigurationProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ProtectedConfigurationProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il provider di configurazione protetta per la sezione di configurazione associata.</summary>
        <value>Provider di configurazione protetta per l'oggetto <see cref="T:System.Configuration.ConfigurationSection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per le sezioni non protette, il <xref:System.Configuration.SectionInformation.ProtectionProvider%2A> proprietà `null`.  
  
 Per ulteriori informazioni sulle sezioni di configurazione protetta, vedere [crittografia configurazione informazioni tramite configurazione protetta](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere il <xref:System.Configuration.SectionInformation.ProtectSection%2A> valore di un <xref:System.Configuration.ConfigurationSection> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#108](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#108)]
 [!code-vb[System.Configuration.ConfigurationElement#108](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSection">
      <MemberSignature Language="C#" Value="public void ProtectSection (string protectionProvider);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProtectSection(string protectionProvider) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSection (protectionProvider As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProtectSection(System::String ^ protectionProvider);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void ProtectSection (string provider);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProtectSection(string provider) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.ProtectSection(System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSection (provider As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProtectSection(System::String ^ provider);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protectionProvider" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="provider" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="protectionProvider">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>Contrassegna una sezione di configurazione per la protezione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.SectionInformation.ProtectSection%2A> metodo contrassegna la sezione per la crittografia in modo che verrà scritto in formato crittografato su disco.  
  
 Per impostazione predefinita, sono inclusi i provider di protezione seguenti:  
  
 <xref:System.Configuration.DpapiProtectedConfigurationProvider>  
  
 <xref:System.Configuration.RsaProtectedConfigurationProvider>  
  
> [!NOTE]
>  Se si chiama il <xref:System.Configuration.SectionInformation.ProtectSection%2A> metodo con un `null` parametro o una stringa vuota, la <xref:System.Configuration.RsaProtectedConfigurationProvider> classe viene utilizzata come provider di protezione.  
  
 Per ulteriori informazioni sulle sezioni di configurazione protetta, vedere [crittografia configurazione informazioni tramite configurazione protetta](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il metodo <xref:System.Configuration.SectionInformation.ProtectSection%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#94](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#94)]
 [!code-vb[System.Configuration.ConfigurationElement#94](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#94)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Configuration.SectionInformation.AllowLocation" /> è impostata su <see langword="false" />.  
  
 \- oppure -  
  
 La sezione di destinazione è già una sezione di dati protetta.</exception>
        <altmember cref="T:System.Configuration.DpapiProtectedConfigurationProvider" />
        <altmember cref="T:System.Configuration.RsaProtectedConfigurationProvider" />
      </Docs>
    </Member>
    <Member MemberName="RequirePermission">
      <MemberSignature Language="C#" Value="public bool RequirePermission { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequirePermission" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.RequirePermission" />
      <MemberSignature Language="VB.NET" Value="Public Property RequirePermission As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequirePermission { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se per la sezione di configurazione associata sono necessarie autorizzazioni di accesso.</summary>
        <value>
          <see langword="true" /> se l'attributo <see langword="requirePermission" /> è impostato su <see langword="true" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando <xref:System.Configuration.SectionInformation.RequirePermission%2A> è impostato su `true`, `GetSection` metodi sono limitati per l'impostazione del livello di attendibilità dell'applicazione. Ciò significa che i metodi o proprietà che consentono l'accesso ai gestori di sezione di configurazione sono limitate dal livello di attendibilità impostato per l'applicazione Web.  
  
> [!NOTE]
>  Poiché l'attendibilità elevata e sono gli unici livelli che consentono l'accesso ai file all'esterno del dominio applicazione corrente, un'applicazione può utilizzare i gestori di sezione di configurazione solo a questi livelli di attendibilità.  
  
 Quando <xref:System.Configuration.SectionInformation.RequirePermission%2A> è impostato su `false`, l'accesso ai dati di configurazione non è limitato dalle impostazioni livello di attendibilità dell'applicazione.  
  
> [!NOTE]
>  Le autorizzazioni di file appropriato ACL (elenco di controllo di accesso) sono ancora necessari, indipendentemente dal valore di <xref:System.Configuration.SectionInformation.RequirePermission%2A> impostazione. Le autorizzazioni ACL determinano chi può accedere il file di configurazione.  
  
   
  
## Examples  
 L'esempio seguente illustra due possibili livelli di attendibilità per un'applicazione Web quando il <xref:System.Configuration.SectionInformation.RequirePermission%2A> proprietà del `appSettings` sezione `true`.  
  
```  
<system.web>  
   // With the following trust value   
   // the code below works.  
  <trust level="Full" />  
</system.web>  
  
<system.web>  
  // With the following trust value   
  // the code below does not work.  
  <trust level="Medium" />  
</system.web>  
```  
  
 Nell'esempio seguente viene illustrato il codice che viene eseguito senza errori quando è impostato il livello di attendibilità completa. In caso contrario, il codice genera un errore.  
  
```csharp  
AppSettingsSection apSection =   
  ConfigurationManager.GetSection("appSettings") as AppSettingsSection;  
  
NameValueCollection apSectionCollection =  
  ConfigurationManager.AppSettings;  
```  
  
```vb  
Dim apSection As AppSettingsSection = _   
  TryCast(ConfigurationManager.GetSection("appSettings"),   
    AppSettingsSection)  
  
  Dim apSectionCollection As NameValueCollection = _   
    ConfigurationManager.AppSettings  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Il valore selezionato è in conflitto con un valore già definito.</exception>
      </Docs>
    </Member>
    <Member MemberName="RestartOnExternalChanges">
      <MemberSignature Language="C#" Value="public bool RestartOnExternalChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RestartOnExternalChanges" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.RestartOnExternalChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property RestartOnExternalChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RestartOnExternalChanges { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se in caso di modifica di un file di inclusione di configurazione esterno è necessario riavviare l'applicazione.</summary>
        <value>
          <see langword="true" /> se in caso di modifica di un file di inclusione di configurazione esterno è necessario riavviare l'applicazione; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impostare il <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A> proprietà `false` per evitare il riavvio dell'applicazione quando vengono modificate le impostazioni di configurazione nel file di inclusione esterno per questo <xref:System.Configuration.ConfigurationSection> oggetto.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere il <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A> valore della proprietà di un <xref:System.Configuration.ConfigurationSection> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#109](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#109)]
 [!code-vb[System.Configuration.ConfigurationElement#109](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#109)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Il valore selezionato è in conflitto con un valore già definito.</exception>
      </Docs>
    </Member>
    <Member MemberName="RevertToParent">
      <MemberSignature Language="C#" Value="public void RevertToParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevertToParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.RevertToParent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevertToParent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevertToParent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fa in modo che la sezione di configurazione associata erediti tutti i valori dalla sezione padre.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Questo metodo non può essere chiamato se non è attiva la modalità di modifica.</exception>
      </Docs>
    </Member>
    <Member MemberName="SectionName">
      <MemberSignature Language="C#" Value="public string SectionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SectionName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.SectionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SectionName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome della sezione di configurazione associata.</summary>
        <value>Nome dell'oggetto <see cref="T:System.Configuration.ConfigurationSection" /> associato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.SectionInformation.SectionName%2A> valore della proprietà è il nome di sezione completo, che include la gerarchia di ereditarietà di configurazione.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere il <xref:System.Configuration.SectionInformation.SectionName%2A> valore di un <xref:System.Configuration.ConfigurationSection> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#110](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#110)]
 [!code-vb[System.Configuration.ConfigurationElement#110](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRawXml">
      <MemberSignature Language="C#" Value="public void SetRawXml (string rawXml);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRawXml(string rawXml) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRawXml (rawXml As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRawXml(System::String ^ rawXml);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void SetRawXml (string xml);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRawXml(string xml) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.SetRawXml(System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRawXml (xml As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRawXml(System::String ^ xml);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawXml" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="xml" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rawXml">To be added.</param>
        <param name="xml">To be added.</param>
        <summary>Imposta l'oggetto su una rappresentazione XML della sezione di configurazione associata presente nel file di configurazione.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="rawXml" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome della classe della sezione.</summary>
        <value>Nome della classe associata a questa sezione <see cref="T:System.Configuration.ConfigurationSection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.SectionInformation.Type%2A> proprietà restituisce il nome della classe della sezione che gestisce questa istanza di <xref:System.Configuration.ConfigurationSection> classe.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come ottenere il <xref:System.Configuration.SectionInformation.Type%2A> valore di un <xref:System.Configuration.ConfigurationSection> oggetto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#111](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#111)]
 [!code-vb[System.Configuration.ConfigurationElement#111](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore selezionato è <see langword="null" /> oppure una stringa vuota ("").</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Il valore selezionato è in conflitto con un valore già definito.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnprotectSection">
      <MemberSignature Language="C#" Value="public void UnprotectSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnprotectSection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.UnprotectSection" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnprotectSection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnprotectSection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rimuove la crittografia della configurazione protetta dalla sezione della configurazione associata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per ulteriori informazioni sulle sezioni di configurazione protetta, vedere [crittografia configurazione informazioni tramite configurazione protetta](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare questo metodo.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#112](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#112)]
 [!code-vb[System.Configuration.ConfigurationElement#112](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#112)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>