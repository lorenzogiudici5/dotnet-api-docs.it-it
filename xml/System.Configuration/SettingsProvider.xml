<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="29dbf-101">Funge da classe base per i provider di impostazioni personalizzati derivati nell'architettura di impostazioni dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="29dbf-101">Acts as a base class for deriving custom settings providers in the application settings architecture.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29dbf-102">Un provider di impostazioni definisce il meccanismo per archiviare i dati di configurazione utilizzati nell'architettura Impostazioni applicazione.</span><span class="sxs-lookup"><span data-stu-id="29dbf-102">A settings provider defines the mechanism for storing configuration data used in the application settings architecture.</span></span> <span data-ttu-id="29dbf-103">.NET Framework contiene un solo impostazioni provider predefinito, <xref:System.Configuration.LocalFileSettingsProvider>, che archivia i dati di configurazione per il file system locale.</span><span class="sxs-lookup"><span data-stu-id="29dbf-103">The .NET Framework contains a single default settings provider, <xref:System.Configuration.LocalFileSettingsProvider>, which stores configuration data to the local file system.</span></span> <span data-ttu-id="29dbf-104">Tuttavia, è possibile creare meccanismi di archiviazione alternativo derivandolo dalla classe astratta <xref:System.Configuration.SettingsProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="29dbf-104">However, you can create alternate storage mechanisms by deriving from the abstract <xref:System.Configuration.SettingsProvider> class.</span></span> <span data-ttu-id="29dbf-105">Il provider utilizzato da una classe wrapper viene determinato tramite la classe wrapper con la <xref:System.Configuration.SettingsProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="29dbf-105">The provider that a wrapper class uses is determined by decorating the wrapper class with the <xref:System.Configuration.SettingsProviderAttribute>.</span></span> <span data-ttu-id="29dbf-106">Se questo attributo viene omesso, il valore predefinito, <xref:System.Configuration.LocalFileSettingsProvider>, viene utilizzato.</span><span class="sxs-lookup"><span data-stu-id="29dbf-106">If this attribute is not provided, the default, <xref:System.Configuration.LocalFileSettingsProvider>, is used.</span></span>  
  
 <span data-ttu-id="29dbf-107">Quando si crea un provider di impostazioni personalizzate, come minimo, è necessario fornire implementazioni per i tre metodi di questa classe: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> e <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.</span><span class="sxs-lookup"><span data-stu-id="29dbf-107">When you create a custom settings provider, at minimum, you must provide implementations for the three methods of this class: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> and <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="29dbf-108">Per le applicazioni client, è possibile aggiungere altre funzionalità standard per un provider personalizzato anche implementando il <xref:System.Configuration.IApplicationSettingsProvider> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="29dbf-108">For client applications, you can add more standardized functionality to a custom provider by also implementing the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="29dbf-109">Mirroring dei metodi, vedere il <xref:System.Configuration.ApplicationSettingsBase> (classe), che consente principalmente di supporto delle versioni.</span><span class="sxs-lookup"><span data-stu-id="29dbf-109">This interface mirrors methods found in the <xref:System.Configuration.ApplicationSettingsBase> class, which mainly enables versioning support.</span></span>  
  
 <span data-ttu-id="29dbf-110">In genere, è consigliabile progettare i provider di impostazioni di istanza singola per evitare conflitti di risorse di archiviazione.</span><span class="sxs-lookup"><span data-stu-id="29dbf-110">Typically, you should design settings providers to be single-instanced to avoid storage resource contention.</span></span> <span data-ttu-id="29dbf-111">I provider devono inoltre essere thread-safe, perché può essere chiamati simultaneamente da più istanze di wrapper in un singolo dominio applicazione o da più applicazioni in domini diversi.</span><span class="sxs-lookup"><span data-stu-id="29dbf-111">Providers should also be thread-safe because they can be called simultaneously from multiple wrapper instances in a single application domain or from multiple applications in different domains.</span></span>  
  
 <span data-ttu-id="29dbf-112">Come minimo, un provider di impostazioni deve riconoscere i tre attributi:<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, e <xref:System.Configuration.DefaultSettingValueAttribute>.</span><span class="sxs-lookup"><span data-stu-id="29dbf-112">At minimum, a settings provider must recognize three attributes—<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, and <xref:System.Configuration.DefaultSettingValueAttribute>.</span></span> <span data-ttu-id="29dbf-113">Per un elenco completo degli attributi che possono essere applicati alle impostazioni dell'applicazione, vedere [gli attributi di impostazioni applicazione](~/docs/framework/winforms/advanced/application-settings-attributes.md).</span><span class="sxs-lookup"><span data-stu-id="29dbf-113">For a full listing of attributes that can be applied to application settings, see [Application Settings Attributes](~/docs/framework/winforms/advanced/application-settings-attributes.md).</span></span> <span data-ttu-id="29dbf-114">Un provider di impostazioni personalizzato deve risolvere gli attributi applicati alle proprietà delle impostazioni nel modo seguente:</span><span class="sxs-lookup"><span data-stu-id="29dbf-114">A custom setting provider should resolve attributes applied to settings properties in the following manner:</span></span>  
  
1.  <span data-ttu-id="29dbf-115">Se il provider può soddisfare la richiesta in cui è inclusa l'attributo, ovviamente, è necessario farlo.</span><span class="sxs-lookup"><span data-stu-id="29dbf-115">If the provider can fulfill the request implied by the attribute, obviously it should do so.</span></span>  
  
2.  <span data-ttu-id="29dbf-116">Se il provider non è possibile soddisfare la richiesta, è necessario ignorarla automaticamente.</span><span class="sxs-lookup"><span data-stu-id="29dbf-116">If the provider cannot fulfill the request, it should ignore it silently.</span></span>  
  
3.  <span data-ttu-id="29dbf-117">Se due o più proprietà in conflitto; ad esempio, una proprietà viene decorata con <xref:System.Configuration.ApplicationScopedSettingAttribute> e <xref:System.Configuration.UserScopedSettingAttribute>; il provider deve generare un <xref:System.Configuration.ConfigurationException>.</span><span class="sxs-lookup"><span data-stu-id="29dbf-117">If two or more properties conflict; for example, a property being decorated with both <xref:System.Configuration.ApplicationScopedSettingAttribute> and <xref:System.Configuration.UserScopedSettingAttribute>; the provider should throw a <xref:System.Configuration.ConfigurationException>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29dbf-118">Inizializza un'istanza della classe <see cref="T:System.Configuration.SettingsProvider" />.</span><span class="sxs-lookup"><span data-stu-id="29dbf-118">Initializes an instance of the <see cref="T:System.Configuration.SettingsProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29dbf-119">Questo è il costruttore protetto predefinito per questa classe astratta.</span><span class="sxs-lookup"><span data-stu-id="29dbf-119">This is this default protected constructor for this abstract class.</span></span> <span data-ttu-id="29dbf-120">I provider di impostazioni personalizzato derivato non è necessario fornire un costruttore esplicito perché il <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> metodo esegue in genere l'inizializzazione tutti.</span><span class="sxs-lookup"><span data-stu-id="29dbf-120">Derived custom settings providers are not required to provide an explicit constructor because the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method typically performs all initialization.</span></span>  
  
 <span data-ttu-id="29dbf-121">Il codice client in genere non creino direttamente un provider di impostazioni. Utilizzare invece la procedura seguente per trovare un provider di impostazioni per una determinata proprietà delle impostazioni:</span><span class="sxs-lookup"><span data-stu-id="29dbf-121">Client code typically does not directly instantiate a settings provider; instead, you use the following procedure to find a settings provider for a particular settings property:</span></span>  
  
1.  <span data-ttu-id="29dbf-122">Chiamare il <xref:System.ComponentModel.Component.GetService%2A> metodo sull'oggetto corrente <xref:System.ComponentModel.Component> o <xref:System.ComponentModel.ISite> per restituire un riferimento all'oggetto corrente <xref:System.Configuration.ISettingsProviderService>.</span><span class="sxs-lookup"><span data-stu-id="29dbf-122">Call the <xref:System.ComponentModel.Component.GetService%2A> method on the current <xref:System.ComponentModel.Component> or <xref:System.ComponentModel.ISite> to return a reference to the current <xref:System.Configuration.ISettingsProviderService>.</span></span>  
  
2.  <span data-ttu-id="29dbf-123">Chiamare il <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> metodo il <xref:System.Configuration.ISettingsProviderService> recuperato nel primo passaggio per restituire il provider di impostazioni.</span><span class="sxs-lookup"><span data-stu-id="29dbf-123">Call the <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> method of the <xref:System.Configuration.ISettingsProviderService> retrieved in the first step to return the settings provider.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29dbf-124">Ottiene o imposta il nome dell'applicazione attualmente in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="29dbf-124">Gets or sets the name of the currently running application.</span></span></summary>
        <value><span data-ttu-id="29dbf-125">Oggetto <see cref="T:System.String" /> che contiene nome abbreviato dell'applicazione, che non contiene un percorso completo o l'estensione, ad esempio, <c>SimpleAppSettings</c>.</span><span class="sxs-lookup"><span data-stu-id="29dbf-125">A <see cref="T:System.String" /> that contains the application's shortened name, which does not contain a full path or extension, for example, <c>SimpleAppSettings</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29dbf-126">Il <xref:System.Configuration.SettingsProvider.ApplicationName%2A> e <xref:System.Configuration.Provider.ProviderBase.Name%2A> consentono di risolvere l'ambiguità in modo analogo denominata impostazione delle proprietà in applicazioni diverse.</span><span class="sxs-lookup"><span data-stu-id="29dbf-126">The <xref:System.Configuration.SettingsProvider.ApplicationName%2A> and <xref:System.Configuration.Provider.ProviderBase.Name%2A> properties help to disambiguate similarly named setting properties in different applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="29dbf-127">Oggetto <see cref="T:System.Configuration.SettingsContext" /> che descrive l'utilizzo dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="29dbf-127">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application use.</span></span></param>
        <param name="collection"><span data-ttu-id="29dbf-128">Classe <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenente il gruppo di proprietà delle impostazioni di cui è necessario recuperare i valori.</span><span class="sxs-lookup"><span data-stu-id="29dbf-128">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span></span></param>
        <summary><span data-ttu-id="29dbf-129">Restituisce l'insieme di valori delle proprietà delle impostazioni per l'istanza dell'applicazione specificata e per il gruppo di proprietà delle impostazioni.</span><span class="sxs-lookup"><span data-stu-id="29dbf-129">Returns the collection of settings property values for the specified application instance and settings property group.</span></span></summary>
        <returns><span data-ttu-id="29dbf-130">Classe <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> contenente i valori per il gruppo di proprietà delle impostazioni specificato.</span><span class="sxs-lookup"><span data-stu-id="29dbf-130">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing the values for the specified settings property group.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29dbf-131">Il <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> metodo deve essere implementato per gestire le impostazioni speciali, quelli contrassegnati con <xref:System.Configuration.SpecialSettingAttribute>, nonché risolvere le differenze tra applicazioni e le impostazioni utente.</span><span class="sxs-lookup"><span data-stu-id="29dbf-131">The <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> method must be implemented to handle special settings, those marked with <xref:System.Configuration.SpecialSettingAttribute>, as well as reconcile application and user settings.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="29dbf-132">Oggetto <see cref="T:System.Configuration.SettingsContext" /> che descrive l'utilizzo dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="29dbf-132">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <param name="collection"><span data-ttu-id="29dbf-133">Classe <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> rappresentante il gruppo di impostazioni delle proprietà da impostare.</span><span class="sxs-lookup"><span data-stu-id="29dbf-133">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> representing the group of property settings to set.</span></span></param>
        <summary><span data-ttu-id="29dbf-134">Imposta i valori del gruppo specificato di impostazioni delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="29dbf-134">Sets the values of the specified group of property settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29dbf-135"><xref:System.Configuration.ApplicationSettingsBase> contiene il <xref:System.Configuration.ApplicationSettingsBase.Save%2A> metodo, che viene chiamato per mantenere i valori di tutte le proprietà delle impostazioni.</span><span class="sxs-lookup"><span data-stu-id="29dbf-135"><xref:System.Configuration.ApplicationSettingsBase> contains the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method, which is called to persist the values of all of its settings properties.</span></span> <span data-ttu-id="29dbf-136">Questo metodo enumera tutte le impostazioni i provider associati a impostazioni proprietà e chiamate di <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> metodo per ogni <xref:System.Configuration.SettingsProvider> per eseguire l'operazione di serializzazione effettiva.</span><span class="sxs-lookup"><span data-stu-id="29dbf-136">This method enumerates through all the settings providers associated with its settings properties, and calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method for each <xref:System.Configuration.SettingsProvider> to perform the actual serialization operation.</span></span>  
  
 <span data-ttu-id="29dbf-137">Il <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> metodo deve essere implementato con particolare attenzione alla sicurezza:</span><span class="sxs-lookup"><span data-stu-id="29dbf-137">The <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method should be implemented with security in mind:</span></span>  
  
-   <span data-ttu-id="29dbf-138">Per aggiornare le impostazioni dell'applicazione deve essere consentito solo il codice completamente attendibile.</span><span class="sxs-lookup"><span data-stu-id="29dbf-138">Only fully trusted code should be allowed to update application settings.</span></span> <span data-ttu-id="29dbf-139">Codice parzialmente attendibile deve essere consentito l'aggiornamento solo le impostazioni dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="29dbf-139">Partially trusted code should be allowed to update only user application settings.</span></span> <span data-ttu-id="29dbf-140">Codice non attendibile non è in genere possibile aggiornare le impostazioni dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="29dbf-140">Untrusted code is not typically allowed to update application settings.</span></span>  
  
-   <span data-ttu-id="29dbf-141">Le quote di utilizzo devono essere considerati come salvaguardarsi da attacchi di risorse da applicazioni parzialmente attendibili.</span><span class="sxs-lookup"><span data-stu-id="29dbf-141">Usage quotas should be considered to guard against resource attacks by partially trusted applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>