<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e349899c9a9eaa082e51bfa42237de5a3090e2dc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30379665" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Funge da classe base per i provider di impostazioni personalizzati derivati nell'architettura di impostazioni dell'applicazione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un provider di impostazioni definisce il meccanismo per archiviare i dati di configurazione utilizzati nell'architettura Impostazioni applicazione. .NET Framework contiene un solo impostazioni provider predefinito, <xref:System.Configuration.LocalFileSettingsProvider>, che archivia i dati di configurazione per il file system locale. Tuttavia, è possibile creare meccanismi di archiviazione alternativo derivandolo dalla classe astratta <xref:System.Configuration.SettingsProvider> classe. Il provider utilizzato da una classe wrapper viene determinato tramite la classe wrapper con la <xref:System.Configuration.SettingsProviderAttribute>. Se questo attributo viene omesso, il valore predefinito, <xref:System.Configuration.LocalFileSettingsProvider>, viene utilizzato.  
  
 Quando si crea un provider di impostazioni personalizzate, come minimo, è necessario fornire implementazioni per i tre metodi di questa classe: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> e <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.  
  
 Per le applicazioni client, è possibile aggiungere altre funzionalità standard per un provider personalizzato anche implementando il <xref:System.Configuration.IApplicationSettingsProvider> interfaccia. Mirroring dei metodi, vedere il <xref:System.Configuration.ApplicationSettingsBase> (classe), che consente principalmente di supporto delle versioni.  
  
 In genere, è consigliabile progettare i provider di impostazioni di istanza singola per evitare conflitti di risorse di archiviazione. I provider devono inoltre essere thread-safe, perché può essere chiamati simultaneamente da più istanze di wrapper in un singolo dominio applicazione o da più applicazioni in domini diversi.  
  
 Come minimo, un provider di impostazioni deve riconoscere i tre attributi:<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, e <xref:System.Configuration.DefaultSettingValueAttribute>. Per un elenco completo degli attributi che possono essere applicati alle impostazioni dell'applicazione, vedere [gli attributi di impostazioni applicazione](~/docs/framework/winforms/advanced/application-settings-attributes.md). Un provider di impostazioni personalizzato deve risolvere gli attributi applicati alle proprietà delle impostazioni nel modo seguente:  
  
1.  Se il provider può soddisfare la richiesta in cui è inclusa l'attributo, ovviamente, è necessario farlo.  
  
2.  Se il provider non è possibile soddisfare la richiesta, è necessario ignorarla automaticamente.  
  
3.  Se due o più proprietà in conflitto; ad esempio, una proprietà viene decorata con <xref:System.Configuration.ApplicationScopedSettingAttribute> e <xref:System.Configuration.UserScopedSettingAttribute>; il provider deve generare un <xref:System.Configuration.ConfigurationException>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza un'istanza della classe <see cref="T:System.Configuration.SettingsProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo è il costruttore protetto predefinito per questa classe astratta. I provider di impostazioni personalizzato derivato non è necessario fornire un costruttore esplicito perché il <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> metodo esegue in genere l'inizializzazione tutti.  
  
 Il codice client in genere non creino direttamente un provider di impostazioni. Utilizzare invece la procedura seguente per trovare un provider di impostazioni per una determinata proprietà delle impostazioni:  
  
1.  Chiamare il <xref:System.ComponentModel.Component.GetService%2A> metodo sull'oggetto corrente <xref:System.ComponentModel.Component> o <xref:System.ComponentModel.ISite> per restituire un riferimento all'oggetto corrente <xref:System.Configuration.ISettingsProviderService>.  
  
2.  Chiamare il <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> metodo il <xref:System.Configuration.ISettingsProviderService> recuperato nel primo passaggio per restituire il provider di impostazioni.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'applicazione attualmente in esecuzione.</summary>
        <value>Oggetto <see cref="T:System.String" /> che contiene nome abbreviato dell'applicazione, che non contiene un percorso completo o l'estensione, ad esempio, <c>SimpleAppSettings</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.SettingsProvider.ApplicationName%2A> e <xref:System.Configuration.Provider.ProviderBase.Name%2A> consentono di risolvere l'ambiguità in modo analogo denominata impostazione delle proprietà in applicazioni diverse.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.Configuration.SettingsContext" /> che descrive l'utilizzo dell'applicazione corrente.</param>
        <param name="collection">Classe <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenente il gruppo di proprietà delle impostazioni di cui è necessario recuperare i valori.</param>
        <summary>Restituisce l'insieme di valori delle proprietà delle impostazioni per l'istanza dell'applicazione specificata e per il gruppo di proprietà delle impostazioni.</summary>
        <returns>Classe <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> contenente i valori per il gruppo di proprietà delle impostazioni specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> metodo deve essere implementato per gestire le impostazioni speciali, quelli contrassegnati con <xref:System.Configuration.SpecialSettingAttribute>, nonché risolvere le differenze tra applicazioni e le impostazioni utente.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.Configuration.SettingsContext" /> che descrive l'utilizzo dell'applicazione corrente.</param>
        <param name="collection">Classe <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> rappresentante il gruppo di impostazioni delle proprietà da impostare.</param>
        <summary>Imposta i valori del gruppo specificato di impostazioni delle proprietà.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase> contiene il <xref:System.Configuration.ApplicationSettingsBase.Save%2A> metodo, che viene chiamato per mantenere i valori di tutte le proprietà delle impostazioni. Questo metodo enumera tutte le impostazioni i provider associati a impostazioni proprietà e chiamate di <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> metodo per ogni <xref:System.Configuration.SettingsProvider> per eseguire l'operazione di serializzazione effettiva.  
  
 Il <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> metodo deve essere implementato con particolare attenzione alla sicurezza:  
  
-   Per aggiornare le impostazioni dell'applicazione deve essere consentito solo il codice completamente attendibile. Codice parzialmente attendibile deve essere consentito l'aggiornamento solo le impostazioni dell'applicazione. Codice non attendibile non è in genere possibile aggiornare le impostazioni dell'applicazione.  
  
-   Le quote di utilizzo devono essere considerati come salvaguardarsi da attacchi di risorse da applicazioni parzialmente attendibili.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>