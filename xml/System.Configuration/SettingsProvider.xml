<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="31d8c24177faf87f120fc44d8de7e00562ab630f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39824626" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SettingsProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f10da-101">Funge da classe base per i provider di impostazioni personalizzati derivati nell'architettura di impostazioni dell'applicazione.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f10da-101">Acts as a base class for deriving custom settings providers in the application settings architecture.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f10da-102">Un provider di impostazioni definisce il meccanismo per l'archiviazione dei dati di configurazione usati nell'architettura delle impostazioni dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="f10da-102">A settings provider defines the mechanism for storing configuration data used in the application settings architecture.</span></span> <span data-ttu-id="f10da-103">.NET Framework contiene un provider di impostazioni predefinito composto, <xref:System.Configuration.LocalFileSettingsProvider>, che archivia i dati di configurazione per il file system locale.</span><span class="sxs-lookup"><span data-stu-id="f10da-103">The .NET Framework contains a single default settings provider, <xref:System.Configuration.LocalFileSettingsProvider>, which stores configuration data to the local file system.</span></span> <span data-ttu-id="f10da-104">Tuttavia, è possibile creare meccanismi di archiviazione alternativo mediante la derivazione dalla classe astratta <xref:System.Configuration.SettingsProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="f10da-104">However, you can create alternate storage mechanisms by deriving from the abstract <xref:System.Configuration.SettingsProvider> class.</span></span> <span data-ttu-id="f10da-105">Il provider che usa una classe wrapper è determinato decorando la classe wrapper con la <xref:System.Configuration.SettingsProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="f10da-105">The provider that a wrapper class uses is determined by decorating the wrapper class with the <xref:System.Configuration.SettingsProviderAttribute>.</span></span> <span data-ttu-id="f10da-106">Se questo attributo viene omesso, il valore predefinito, <xref:System.Configuration.LocalFileSettingsProvider>, viene usato.</span><span class="sxs-lookup"><span data-stu-id="f10da-106">If this attribute is not provided, the default, <xref:System.Configuration.LocalFileSettingsProvider>, is used.</span></span>  
  
 <span data-ttu-id="f10da-107">Quando si crea un provider di impostazioni personalizzate, come minimo, è necessario fornire implementazioni per i tre metodi di questa classe: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> e <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.</span><span class="sxs-lookup"><span data-stu-id="f10da-107">When you create a custom settings provider, at minimum, you must provide implementations for the three methods of this class: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> and <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="f10da-108">Per le applicazioni client, è possibile aggiungere altre funzionalità standard per un provider personalizzato implementando anche il <xref:System.Configuration.IApplicationSettingsProvider> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="f10da-108">For client applications, you can add more standardized functionality to a custom provider by also implementing the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="f10da-109">Questa interfaccia rispecchia i metodi disponibili nel <xref:System.Configuration.ApplicationSettingsBase> classe, che consente principalmente il supporto di controllo delle versioni.</span><span class="sxs-lookup"><span data-stu-id="f10da-109">This interface mirrors methods found in the <xref:System.Configuration.ApplicationSettingsBase> class, which mainly enables versioning support.</span></span>  
  
 <span data-ttu-id="f10da-110">In genere, è consigliabile progettare i provider di impostazioni come a istanza singola per evitare conflitti di risorse di archiviazione.</span><span class="sxs-lookup"><span data-stu-id="f10da-110">Typically, you should design settings providers to be single-instanced to avoid storage resource contention.</span></span> <span data-ttu-id="f10da-111">I provider devono anche essere thread-safe perché può essere chiamati simultaneamente da più istanze di wrapper in un solo dominio applicazione o da più applicazioni in domini diversi.</span><span class="sxs-lookup"><span data-stu-id="f10da-111">Providers should also be thread-safe because they can be called simultaneously from multiple wrapper instances in a single application domain or from multiple applications in different domains.</span></span>  
  
 <span data-ttu-id="f10da-112">Come minimo, un provider di impostazioni deve riconoscere i tre attributi, ovvero<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, e <xref:System.Configuration.DefaultSettingValueAttribute>.</span><span class="sxs-lookup"><span data-stu-id="f10da-112">At minimum, a settings provider must recognize three attributes—<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, and <xref:System.Configuration.DefaultSettingValueAttribute>.</span></span> <span data-ttu-id="f10da-113">Per un elenco completo degli attributi che possono essere applicati alle impostazioni dell'applicazione, vedere [Application Settings Attributes](~/docs/framework/winforms/advanced/application-settings-attributes.md).</span><span class="sxs-lookup"><span data-stu-id="f10da-113">For a full listing of attributes that can be applied to application settings, see [Application Settings Attributes](~/docs/framework/winforms/advanced/application-settings-attributes.md).</span></span> <span data-ttu-id="f10da-114">Un provider di impostazioni personalizzato dovrebbe risolvere gli attributi applicati alle proprietà delle impostazioni nel modo seguente:</span><span class="sxs-lookup"><span data-stu-id="f10da-114">A custom setting provider should resolve attributes applied to settings properties in the following manner:</span></span>  
  
1.  <span data-ttu-id="f10da-115">Se il provider può soddisfare la richiesta in cui è inclusa l'attributo, ovviamente consigliabile farlo.</span><span class="sxs-lookup"><span data-stu-id="f10da-115">If the provider can fulfill the request implied by the attribute, obviously it should do so.</span></span>  
  
2.  <span data-ttu-id="f10da-116">Se il provider non è possibile soddisfare la richiesta, deve ignorare in modo invisibile.</span><span class="sxs-lookup"><span data-stu-id="f10da-116">If the provider cannot fulfill the request, it should ignore it silently.</span></span>  
  
3.  <span data-ttu-id="f10da-117">Se due o più proprietà in conflitto; ad esempio, una proprietà in corso decorata con <xref:System.Configuration.ApplicationScopedSettingAttribute> e <xref:System.Configuration.UserScopedSettingAttribute>; i provider devono generare un <xref:System.Configuration.ConfigurationException>.</span><span class="sxs-lookup"><span data-stu-id="f10da-117">If two or more properties conflict; for example, a property being decorated with both <xref:System.Configuration.ApplicationScopedSettingAttribute> and <xref:System.Configuration.UserScopedSettingAttribute>; the provider should throw a <xref:System.Configuration.ConfigurationException>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f10da-118">Inizializza un'istanza della classe <see cref="T:System.Configuration.SettingsProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f10da-118">Initializes an instance of the <see cref="T:System.Configuration.SettingsProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f10da-119">Questo è il costruttore protetto predefinito per questa classe astratta.</span><span class="sxs-lookup"><span data-stu-id="f10da-119">This is this default protected constructor for this abstract class.</span></span> <span data-ttu-id="f10da-120">Provider di impostazioni personalizzati derivati non sono necessari per fornire un costruttore esplicito perché il <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> metodo in genere esegue l'intera inizializzazione.</span><span class="sxs-lookup"><span data-stu-id="f10da-120">Derived custom settings providers are not required to provide an explicit constructor because the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method typically performs all initialization.</span></span>  
  
 <span data-ttu-id="f10da-121">Il codice client in genere non creare direttamente un'istanza un provider di impostazioni. è invece possibile utilizzare la procedura seguente per trovare un provider di impostazioni per una determinata proprietà delle impostazioni:</span><span class="sxs-lookup"><span data-stu-id="f10da-121">Client code typically does not directly instantiate a settings provider; instead, you use the following procedure to find a settings provider for a particular settings property:</span></span>  
  
1.  <span data-ttu-id="f10da-122">Chiamare il <xref:System.ComponentModel.Component.GetService%2A> metodo sull'oggetto corrente <xref:System.ComponentModel.Component> oppure <xref:System.ComponentModel.ISite> per restituire un riferimento all'oggetto corrente <xref:System.Configuration.ISettingsProviderService>.</span><span class="sxs-lookup"><span data-stu-id="f10da-122">Call the <xref:System.ComponentModel.Component.GetService%2A> method on the current <xref:System.ComponentModel.Component> or <xref:System.ComponentModel.ISite> to return a reference to the current <xref:System.Configuration.ISettingsProviderService>.</span></span>  
  
2.  <span data-ttu-id="f10da-123">Chiamare il <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> metodo di <xref:System.Configuration.ISettingsProviderService> recuperato nel primo passaggio per restituire il provider di impostazioni.</span><span class="sxs-lookup"><span data-stu-id="f10da-123">Call the <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> method of the <xref:System.Configuration.ISettingsProviderService> retrieved in the first step to return the settings provider.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.SettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f10da-124">Ottiene o imposta il nome dell'applicazione attualmente in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f10da-124">Gets or sets the name of the currently running application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f10da-125">Oggetto <see cref="T:System.String" /> che contiene nome abbreviato dell'applicazione, che non contiene un percorso completo o l'estensione, ad esempio, <c>SimpleAppSettings</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f10da-125">A <see cref="T:System.String" /> that contains the application's shortened name, which does not contain a full path or extension, for example, <c>SimpleAppSettings</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f10da-126">Il <xref:System.Configuration.SettingsProvider.ApplicationName%2A> e <xref:System.Configuration.Provider.ProviderBase.Name%2A> proprietà utili per risolvere l'ambiguità allo stesso modo delle proprietà di impostazione denominata in applicazioni diverse.</span><span class="sxs-lookup"><span data-stu-id="f10da-126">The <xref:System.Configuration.SettingsProvider.ApplicationName%2A> and <xref:System.Configuration.Provider.ProviderBase.Name%2A> properties help to disambiguate similarly named setting properties in different applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="settingsProvider.GetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f10da-127">Oggetto <see cref="T:System.Configuration.SettingsContext" /> che descrive l'utilizzo dell'applicazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f10da-127">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application use.</span>
          </span>
        </param>
        <param name="collection">
          <span data-ttu-id="f10da-128">Classe <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenente il gruppo di proprietà delle impostazioni di cui è necessario recuperare i valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f10da-128">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f10da-129">Restituisce l'insieme di valori delle proprietà delle impostazioni per l'istanza dell'applicazione specificata e per il gruppo di proprietà delle impostazioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f10da-129">Returns the collection of settings property values for the specified application instance and settings property group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f10da-130">Classe <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> contenente i valori per il gruppo di proprietà delle impostazioni specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f10da-130">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing the values for the specified settings property group.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f10da-131">Il <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> metodo deve essere implementato per gestire le impostazioni speciali, quelli contrassegnati con <xref:System.Configuration.SpecialSettingAttribute>, nonché risolvere le differenze tra le impostazioni dell'applicazione e utente.</span><span class="sxs-lookup"><span data-stu-id="f10da-131">The <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> method must be implemented to handle special settings, those marked with <xref:System.Configuration.SpecialSettingAttribute>, as well as reconcile application and user settings.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="settingsProvider.SetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f10da-132">Oggetto <see cref="T:System.Configuration.SettingsContext" /> che descrive l'utilizzo dell'applicazione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f10da-132">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span>
          </span>
        </param>
        <param name="collection">
          <span data-ttu-id="f10da-133">Classe <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> rappresentante il gruppo di impostazioni delle proprietà da impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f10da-133">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> representing the group of property settings to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f10da-134">Imposta i valori del gruppo specificato di impostazioni delle proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f10da-134">Sets the values of the specified group of property settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f10da-135"><xref:System.Configuration.ApplicationSettingsBase> contiene il <xref:System.Configuration.ApplicationSettingsBase.Save%2A> metodo, che viene chiamato in modo permanente i valori di tutte le proprietà delle impostazioni.</span><span class="sxs-lookup"><span data-stu-id="f10da-135"><xref:System.Configuration.ApplicationSettingsBase> contains the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method, which is called to persist the values of all of its settings properties.</span></span> <span data-ttu-id="f10da-136">Questo metodo enumera tutte le impostazioni provider associato con le proprietà delle impostazioni e chiama il <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> metodo per ogni <xref:System.Configuration.SettingsProvider> per eseguire l'operazione di serializzazione effettiva.</span><span class="sxs-lookup"><span data-stu-id="f10da-136">This method enumerates through all the settings providers associated with its settings properties, and calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method for each <xref:System.Configuration.SettingsProvider> to perform the actual serialization operation.</span></span>  
  
 <span data-ttu-id="f10da-137">Il <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> metodo deve essere implementato con particolare attenzione alla sicurezza:</span><span class="sxs-lookup"><span data-stu-id="f10da-137">The <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method should be implemented with security in mind:</span></span>  
  
-   <span data-ttu-id="f10da-138">Solo il codice completamente attendibile deve essere consentito per aggiornare le impostazioni dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="f10da-138">Only fully trusted code should be allowed to update application settings.</span></span> <span data-ttu-id="f10da-139">Codice parzialmente attendibile deve essere consentito aggiornare solo le impostazioni dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="f10da-139">Partially trusted code should be allowed to update only user application settings.</span></span> <span data-ttu-id="f10da-140">Codice non attendibile non è consentito in genere per aggiornare le impostazioni dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="f10da-140">Untrusted code is not typically allowed to update application settings.</span></span>  
  
-   <span data-ttu-id="f10da-141">Le quote di utilizzo devono essere considerate come salvaguardarsi da attacchi alle risorse da applicazioni parzialmente attendibili.</span><span class="sxs-lookup"><span data-stu-id="f10da-141">Usage quotas should be considered to guard against resource attacks by partially trusted applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>