<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36cdd14653e8d239fcffab82331de0392616795f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30379345" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce le funzionalità standard per controlli o librerie utilizzate per memorizzare e recuperare le impostazioni delle applicazioni.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, è possibile aggiungere il supporto delle impostazioni dell'applicazione a un'applicazione mediante la creazione di una classe wrapper di impostazioni, derivata da <xref:System.Configuration.ApplicationSettingsBase>, quindi aggiungere proprietà speciali per questa classe. Tuttavia, questo approccio non sufficientemente incapsula le impostazioni dell'applicazione per un controllo in modo che il contenitore è schermato dai dettagli. Il <xref:System.Configuration.IPersistComponentSettings> interfaccia fornisce un'applicazione con un'interfaccia standard per comunicare richieste di modifica dello stato di impostazioni applicazione a un modulo di libreria, componente o controllo. Gli strumenti Design-time dipendono anche da questa interfaccia per gestire correttamente i controlli e componenti.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legge le impostazioni dell'applicazione del controllo nelle relative proprietà corrispondenti e aggiorna lo stato del controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In generale, il <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> esegue due operazioni fondamentali:  
  
-   Ogni istanza delle impostazioni dell'applicazione contenuti dal controllo per aggiornare i valori delle proprietà delle impostazioni dell'applicazione, in genere chiamando i relativi <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> metodi.  
  
-   Aggiorna le proprietà generali che variano a seconda delle impostazioni ricaricate proprietà in base alle esigenze. Ad esempio, se la classe di impostazioni è contenuta una `location` proprietà delle impostazioni, <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> deve verificare che il controllo <xref:System.Windows.Forms.Control.Location%2A> proprietà viene aggiornata per riflettere questa impostazione ricaricata.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reimposta le proprietà delle impostazioni dell'applicazione del controllo sui relativi valori predefiniti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione del <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> metodo chiama in genere il <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> metodo in ogni istanza di una classe di impostazioni dell'applicazione contiene.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Mantiene le proprietà delle impostazioni dell'applicazione del controllo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> metodo scrive i valori delle proprietà delle impostazioni dell'applicazione del controllo nell'archivio dati associato. La tecnica di memorizzazione e di serializzazione di dati utilizza il metodo è determinata dal provider di impostazioni associate a ogni classe delle impostazioni tramite la <xref:System.Configuration.SettingsProviderAttribute>. È possibile ignorare la scelta del provider di impostazioni utilizzando il <xref:System.Configuration.ISettingsProviderService> interfaccia.  
  
> [!NOTE]
>  Se il <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> proprietà `true`, il controllo deve chiamare <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> nel proprio <xref:System.Windows.Forms.Control.Dispose%2A> metodo in modo che i dati di configurazione del controllo vengono automaticamente archiviati prima della chiusura dell'applicazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se le proprietà delle impostazioni dell'applicazione del controllo devono essere mantenute automaticamente.</summary>
        <value>
          <see langword="true" /> se lo stato del controllo deve essere mantenuto in modo automatico; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se un controllo contiene dati di configurazione, in genere verranno mantenuti i dati in risposta a una chiamata esplicita al <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> metodo o a volte in modo implicito quando il controllo <xref:System.Windows.Forms.Control.Dispose%2A> metodo viene richiamato. Il <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> proprietà determina se un controllo mantiene automaticamente i dati di configurazione quando viene eliminato.  
  
 Il valore predefinito di <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> dipende dall'implementazione del controllo. La documentazione per il controllo deve indicare se utilizza le impostazioni dell'applicazione, quali dati vengono mantenuti e che il valore predefinito di <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> è di proprietà.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato il modo corretto per un controllo verificare il valore della <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> proprietà prima di tentare di mantenerne automaticamente i dati di configurazione.  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore della chiave delle impostazioni dell'applicazione per l'istanza corrente del controllo.</summary>
        <value>Classe <see cref="T:System.String" /> che contiene la chiave delle impostazioni per l'istanza corrente del controllo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> proprietà per evitare ambiguità tra gruppi di proprietà delle impostazioni dell'applicazione quando sono presenti più istanze della stessa classe wrapper. Ad esempio, se un controllo contiene una classe wrapper associata, quindi l'inserimento di più istanze dello stesso controllo nella stessa applicazione risultano in genere in più istanze della classe wrapper. È necessaria una chiave di impostazioni solo quando i dati di configurazione è diverso per singolo per ogni istanza. ad esempio, la posizione dei controlli posizionati in modo dinamico.  
  
 Le regole generali seguenti si applicano all'utilizzo di <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:  
  
-   Un controllo, come qualsiasi altra classe, può contenere zero o più classi di impostazioni dell'applicazione, derivata da <xref:System.Configuration.ApplicationSettingsBase>. Ogni classe di impostazioni contiene un proprio <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> proprietà, che consente di evitare ambiguità tra più istanze di tale classe.  
  
-   Un controllo deve separare i dati per ogni istanza e i relativi dati condivisi in classi di impostazioni diverse.  
  
-   Per un controllo con i dati di configurazione per istanza, il `get` funzione di accesso del <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> proprietà deve essere predefinito per il <xref:System.Windows.Forms.Control.Name%2A> del controllo. Nella maggior parte dei casi il nome del controllo sarà univoco all'interno di un'applicazione. Se il controllo contiene solo dati di configurazione condivisi `get` deve essere predefinito per `null`.  
  
-   Il `set` funzione di accesso per questa proprietà deve essere implementato per distinguere tra le classi di impostazioni che contengono dati di configurazione condivisa e per ogni istanza. Per ogni classe di impostazioni che contiene dati per ogni istanza, `set` deve essere passata la <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> proprietà della classe delle impostazioni. Per le classi di impostazioni che contiene dati condivisi, `set` deve eseguire alcuna azione per tale classe di impostazioni.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
  </Members>
</Type>