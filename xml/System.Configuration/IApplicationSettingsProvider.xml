<Type Name="IApplicationSettingsProvider" FullName="System.Configuration.IApplicationSettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e68491c4abcd4ee9d840a4ddd0365ae1484c5fa" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37687395" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type IApplicationSettingsProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce le funzionalità estese per i provider di impostazioni dell'applicazione client.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'architettura Impostazioni applicazione consente di fornire un meccanismo di archiviazione personalizzati per le impostazioni dell'applicazione mediante la creazione di un provider di impostazioni personalizzate, che è una classe derivata da <xref:System.Configuration.SettingsProvider>. Tale classe contiene le funzionalità di base per l'archiviazione e recupero di proprietà. Tuttavia, è possibile aggiungere ulteriori funzionalità standardizzate implementando il <xref:System.Configuration.IApplicationSettingsProvider> interfaccia nel provider di impostazioni personalizzate. Questa interfaccia contiene tre metodi che consentono a principalmente al provider di impostazioni di modifiche in modo più intelligente con handle di applicazione della versione. In genere, il provider di impostazioni archivia le impostazioni dell'applicazione per versioni diverse di un'applicazione separatamente per evitare le situazioni seguenti:  
  
-   Esecuzione side-by-side di versioni diverse di un'applicazione.  
  
-   Possibilità di mantenere le impostazioni dell'applicazione durante l'aggiornamento di un'applicazione.  
  
-   Reimpostare le impostazioni dell'applicazione sui valori predefiniti per la versione attualmente in uso.  
  
 La classe <xref:System.Configuration.LocalFileSettingsProvider> implementa l'interfaccia <xref:System.Configuration.IApplicationSettingsProvider>. Lo stesso set di metodi contenute <xref:System.Configuration.IApplicationSettingsProvider> sono inoltre disponibili nel <xref:System.Configuration.ApplicationSettingsBase> (classe), consentendo di stabilire un canale di comunicazione predefinito tra un wrapper di impostazioni dell'applicazione e il relativo provider di impostazioni.  
  
> [!NOTE]
>  Questa interfaccia è facoltativa. Se un provider non implementa questa interfaccia, l'infrastruttura impostazioni avrà esito negativo senza notifica se tenta di accedere a uno dei metodi definiti da questa interfaccia.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="iApplicationSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.Configuration.SettingsContext" /> che descrive l'utilizzo dell'applicazione corrente.</param>
        <param name="property">Classe <see cref="T:System.Configuration.SettingsProperty" /> di cui verrà restituito il valore.</param>
        <summary>Restituisce il valore della proprietà delle impostazioni specificata relativa alla versione precedente della stessa applicazione.</summary>
        <returns>Classe <see cref="T:System.Configuration.SettingsPropertyValue" /> contenente l'ultimo valore configurato per l'impostazione della proprietà specificata nella versione precedente dell'applicazione oppure <see langword="null" /> se non è possibile trovare l'impostazione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare la <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> metodo in combinazione con il <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> metodo per eseguire la migrazione delle impostazioni dell'applicazione durante o dopo l'installazione di una nuova versione di un'applicazione.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Per <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> autorizzazione.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit" Usage="iApplicationSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.Configuration.SettingsContext" /> che descrive l'utilizzo dell'applicazione corrente.</param>
        <summary>Riconfigura le impostazioni associate all'applicazione specificata sui valori predefiniti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> metodo reinizializza i valori archiviati del gruppo di impostazioni dell'applicazione specificato. Al contrario, <xref:System.Configuration.DefaultSettingValueAttribute> fornisce un valore predefinito per una singola proprietà delle impostazioni durante l'inizializzazione della proprietà, se è stato archiviato alcun valore.  
  
 Il provider di impostazioni determina le impostazioni predefinite ragionevoli per il gruppo di impostazioni dell'applicazione specificato. Ad esempio, l'implementazione in <xref:System.Configuration.LocalFileSettingsProvider> Reimposta le impostazioni con ambito di utente ai rispettivi valori condivisi nel `application.exe.config` file; al contrario, lascia invariate le impostazioni con ambito di applicazione.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Per <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> autorizzazione.</permission>
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="iApplicationSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">Oggetto <see cref="T:System.Configuration.SettingsContext" /> che descrive l'utilizzo dell'applicazione corrente.</param>
        <param name="properties">Classe <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenente il gruppo di proprietà delle impostazioni di cui è necessario recuperare i valori.</param>
        <summary>Indica al provider che l'applicazione è stata aggiornata, consentendo al provider di aggiornare le impostazioni archiviate in modo appropriato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework consente l'installazione side-by-side e l'esecuzione di versioni diverse della stessa applicazione. Il provider di impostazioni applicazione archivia le impostazioni dell'applicazione per ogni versione di un'applicazione separatamente per garantire l'isolamento. È possibile, tuttavia, la migrazione delle impostazioni dalla versione precedente di un'applicazione a quello corrente. Per fornire questa funzionalità di migrazione, usare il <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> metodo, implementato in una classe derivata da <xref:System.Configuration.SettingsProvider>.  
  
 È possibile usare la <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> metodo in combinazione con il <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> metodo per eseguire la migrazione delle impostazioni dell'applicazione durante o dopo l'installazione di una nuova versione di un'applicazione.  
  
 Questo metodo deve essere eliminato per ogni impostazione dell'applicazione che ha il <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> viene applicata ad esso o per l'intera classe wrapper delle impostazioni, derivato da <xref:System.Configuration.ApplicationSettingsBase>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Per <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> autorizzazione.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>