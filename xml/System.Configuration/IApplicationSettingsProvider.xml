<Type Name="IApplicationSettingsProvider" FullName="System.Configuration.IApplicationSettingsProvider">
  <TypeSignature Language="C#" Value="public interface IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationSettingsProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c39da-101">Definisce le funzionalità estese per i provider di impostazioni dell'applicazione client.</span><span class="sxs-lookup"><span data-stu-id="c39da-101">Defines extended capabilities for client-based application settings providers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c39da-102">L'architettura Impostazioni applicazione consente di fornire un meccanismo di archiviazione personalizzati per le impostazioni dell'applicazione mediante la creazione di un provider di impostazioni personalizzato, ovvero una classe derivata da <xref:System.Configuration.SettingsProvider>.</span><span class="sxs-lookup"><span data-stu-id="c39da-102">The application settings architecture enables you to provide a custom storage mechanism for application settings by creating a custom settings provider, which is a class derived from <xref:System.Configuration.SettingsProvider>.</span></span> <span data-ttu-id="c39da-103">Questa classe contiene le funzionalità di base per l'archiviazione e recupero delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="c39da-103">Such a class contains the basic functionality for storing and retrieving properties.</span></span> <span data-ttu-id="c39da-104">Tuttavia, è possibile aggiungere ulteriori funzionalità standardizzate implementando il <xref:System.Configuration.IApplicationSettingsProvider> interfaccia nel provider di impostazioni personalizzato.</span><span class="sxs-lookup"><span data-stu-id="c39da-104">However, you can add additional standardized functionality by implementing the <xref:System.Configuration.IApplicationSettingsProvider> interface in the custom settings provider.</span></span> <span data-ttu-id="c39da-105">Questa interfaccia contiene tre metodi che consentono principalmente i provider di impostazioni per più intelligente handle versione modifiche all'applicazione.</span><span class="sxs-lookup"><span data-stu-id="c39da-105">This interface contains three methods that primarily enable the settings provider to more intelligently handle application version changes.</span></span> <span data-ttu-id="c39da-106">In genere, il provider di impostazioni archivia le impostazioni dell'applicazione per versioni diverse di un'applicazione separatamente per evitare le situazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="c39da-106">Typically, the settings provider will store application settings for different versions of an application separately to anticipate the following circumstances:</span></span>  
  
-   <span data-ttu-id="c39da-107">Esecuzione side-by-side di versioni diverse di un'applicazione.</span><span class="sxs-lookup"><span data-stu-id="c39da-107">Side-by-side execution of different versions of an application.</span></span>  
  
-   <span data-ttu-id="c39da-108">Quando si aggiorna un'applicazione, verranno mantenute le impostazioni dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="c39da-108">Retaining application settings when upgrading an application.</span></span>  
  
-   <span data-ttu-id="c39da-109">Reimpostare le impostazioni dell'applicazione in base ai valori predefiniti per la versione attualmente in uso.</span><span class="sxs-lookup"><span data-stu-id="c39da-109">Resetting the application settings to their default values for the currently used version.</span></span>  
  
 <span data-ttu-id="c39da-110">La classe <xref:System.Configuration.LocalFileSettingsProvider> implementa l'interfaccia <xref:System.Configuration.IApplicationSettingsProvider>.</span><span class="sxs-lookup"><span data-stu-id="c39da-110">The <xref:System.Configuration.LocalFileSettingsProvider> class implements the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="c39da-111">Lo stesso set di metodi contenuti in <xref:System.Configuration.IApplicationSettingsProvider> sono inoltre disponibili nel <xref:System.Configuration.ApplicationSettingsBase> (classe), consentendo di stabilire un canale di comunicazione predefinito tra un wrapper di impostazioni dell'applicazione e il relativo provider di impostazioni.</span><span class="sxs-lookup"><span data-stu-id="c39da-111">The same set of methods contained by <xref:System.Configuration.IApplicationSettingsProvider> is also found in the <xref:System.Configuration.ApplicationSettingsBase> class, enabling the establishment of a predefined communication channel between an application settings wrapper and its settings provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c39da-112">Questa interfaccia è facoltativa.</span><span class="sxs-lookup"><span data-stu-id="c39da-112">This interface is optional.</span></span> <span data-ttu-id="c39da-113">Se un provider non implementa questa interfaccia, l'infrastruttura di impostazioni avrà esito negativo senza alcuna notifica se tenta di accedere a uno dei metodi definiti da questa interfaccia.</span><span class="sxs-lookup"><span data-stu-id="c39da-113">If a provider does not implement this interface, the settings infrastructure will fail without notification if it attempts to access any of the methods defined by this interface.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="c39da-114">Oggetto <see cref="T:System.Configuration.SettingsContext" /> che descrive l'utilizzo dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="c39da-114">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <param name="property"><span data-ttu-id="c39da-115">Classe <see cref="T:System.Configuration.SettingsProperty" /> di cui verrà restituito il valore.</span><span class="sxs-lookup"><span data-stu-id="c39da-115">The <see cref="T:System.Configuration.SettingsProperty" /> whose value is to be returned.</span></span></param>
        <summary><span data-ttu-id="c39da-116">Restituisce il valore della proprietà delle impostazioni specificata relativa alla versione precedente della stessa applicazione.</span><span class="sxs-lookup"><span data-stu-id="c39da-116">Returns the value of the specified settings property for the previous version of the same application.</span></span></summary>
        <returns><span data-ttu-id="c39da-117">Classe <see cref="T:System.Configuration.SettingsPropertyValue" /> contenente l'ultimo valore configurato per l'impostazione della proprietà specificata nella versione precedente dell'applicazione oppure <see langword="null" /> se non è possibile trovare l'impostazione.</span><span class="sxs-lookup"><span data-stu-id="c39da-117">A <see cref="T:System.Configuration.SettingsPropertyValue" /> containing the value of the specified property setting as it was last set in the previous version of the application; or <see langword="null" /> if the setting cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c39da-118">È possibile utilizzare il <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> metodo in combinazione con il <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> metodo per eseguire la migrazione delle impostazioni dell'applicazione durante o dopo l'installazione di una nuova versione di un'applicazione.</span><span class="sxs-lookup"><span data-stu-id="c39da-118">You can use the <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> method in conjunction with the <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> method to migrate application settings during or after the installation of a new version of an application.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException"><span data-ttu-id="c39da-119">Per <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> autorizzazione.</span><span class="sxs-lookup"><span data-stu-id="c39da-119">For <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permission.</span></span></permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="c39da-120">Oggetto <see cref="T:System.Configuration.SettingsContext" /> che descrive l'utilizzo dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="c39da-120">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <summary><span data-ttu-id="c39da-121">Riconfigura le impostazioni associate all'applicazione specificata sui valori predefiniti.</span><span class="sxs-lookup"><span data-stu-id="c39da-121">Resets the application settings associated with the specified application to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c39da-122">Il <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> metodo reinizializza i valori archiviati del gruppo di impostazioni di applicazioni specificato.</span><span class="sxs-lookup"><span data-stu-id="c39da-122">The <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> method reinitializes the stored values of the specified application settings group.</span></span> <span data-ttu-id="c39da-123">Al contrario, <xref:System.Configuration.DefaultSettingValueAttribute> fornisce un valore predefinito per una singola proprietà di impostazioni durante l'inizializzazione della proprietà, se è stato archiviato alcun valore.</span><span class="sxs-lookup"><span data-stu-id="c39da-123">In contrast, <xref:System.Configuration.DefaultSettingValueAttribute> supplies a default value for a single settings property during property initialization, if it has no stored value.</span></span>  
  
 <span data-ttu-id="c39da-124">Il provider di impostazioni determina le impostazioni predefinite ragionevoli per il gruppo di impostazioni dell'applicazione specificato.</span><span class="sxs-lookup"><span data-stu-id="c39da-124">The settings provider determines what reasonable defaults are for the specified group of application settings.</span></span> <span data-ttu-id="c39da-125">Ad esempio, l'implementazione in <xref:System.Configuration.LocalFileSettingsProvider> Reimposta le impostazioni con ambito di utente in base ai valori condiviso nel `application.exe.config` file; al contrario, lascia invariate le impostazioni di ambito di applicazione.</span><span class="sxs-lookup"><span data-stu-id="c39da-125">For example, the implementation in <xref:System.Configuration.LocalFileSettingsProvider> resets user-scoped settings to their shared values in the `application.exe.config` file; in contrast, it leaves the application-scoped settings unchanged.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException"><span data-ttu-id="c39da-126">Per <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> autorizzazione.</span><span class="sxs-lookup"><span data-stu-id="c39da-126">For <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permission.</span></span></permission>
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="c39da-127">Oggetto <see cref="T:System.Configuration.SettingsContext" /> che descrive l'utilizzo dell'applicazione corrente.</span><span class="sxs-lookup"><span data-stu-id="c39da-127">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <param name="properties"><span data-ttu-id="c39da-128">Classe <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenente il gruppo di proprietà delle impostazioni di cui è necessario recuperare i valori.</span><span class="sxs-lookup"><span data-stu-id="c39da-128">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span></span></param>
        <summary><span data-ttu-id="c39da-129">Indica al provider che l'applicazione è stata aggiornata,</span><span class="sxs-lookup"><span data-stu-id="c39da-129">Indicates to the provider that the application has been upgraded.</span></span> <span data-ttu-id="c39da-130">consentendo al provider di aggiornare le impostazioni archiviate in modo appropriato.</span><span class="sxs-lookup"><span data-stu-id="c39da-130">This offers the provider an opportunity to upgrade its stored settings as appropriate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c39da-131">.NET Framework consente l'installazione side-by-side e l'esecuzione di versioni diverse della stessa applicazione.</span><span class="sxs-lookup"><span data-stu-id="c39da-131">The .NET Framework enables side-by-side installation and execution of different versions of the same application.</span></span> <span data-ttu-id="c39da-132">Il provider di impostazioni applicazione archivia le impostazioni dell'applicazione per ogni versione di un'applicazione separatamente per garantire l'isolamento.</span><span class="sxs-lookup"><span data-stu-id="c39da-132">The application settings provider stores the application settings for each version of an application separately to ensure isolation.</span></span> <span data-ttu-id="c39da-133">Tuttavia, è consigliabile eseguire la migrazione delle impostazioni dalla versione precedente di un'applicazione a quella corrente.</span><span class="sxs-lookup"><span data-stu-id="c39da-133">However, you may want to migrate settings from the previous version of an application to the current one.</span></span> <span data-ttu-id="c39da-134">Per fornire questa funzionalità di migrazione, utilizzare il <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> metodo implementato in una classe derivata da <xref:System.Configuration.SettingsProvider>.</span><span class="sxs-lookup"><span data-stu-id="c39da-134">To provide this migration functionality, use the <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> method, implemented in a class derived from <xref:System.Configuration.SettingsProvider>.</span></span>  
  
 <span data-ttu-id="c39da-135">È possibile utilizzare il <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> metodo in combinazione con il <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> metodo per eseguire la migrazione delle impostazioni dell'applicazione durante o dopo l'installazione di una nuova versione di un'applicazione.</span><span class="sxs-lookup"><span data-stu-id="c39da-135">You can use the <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> method in conjunction with the <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> method to migrate application settings during or after the installation of a new version of an application.</span></span>  
  
 <span data-ttu-id="c39da-136">Questo metodo deve essere eliminato per ogni applicazione di configurazione che dispone di <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> viene applicata a esso o all'intera classe wrapper di impostazioni, derivata da <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="c39da-136">This method should be suppressed for every application setting that has the <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> is applied to it, or to the entire settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException"><span data-ttu-id="c39da-137">Per <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> autorizzazione.</span><span class="sxs-lookup"><span data-stu-id="c39da-137">For <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permission.</span></span></permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>