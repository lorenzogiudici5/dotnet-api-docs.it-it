<Type Name="StringValidator" FullName="System.Configuration.StringValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a6e218f5b5c8434702d19fd67375dfb168e04f2d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37685721" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.StringValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class StringValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type StringValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce la convalida di una stringa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.StringValidator> classe viene utilizzata per garantire che una stringa soddisfa criteri specifici. I criteri per la convalida viene stabilita quando un'istanza del <xref:System.Configuration.StringValidator> classe viene creata. Esistono tre overload del costruttore per il <xref:System.Configuration.StringValidator> classe. Il <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=nameWithType> costruttore con un parametro viene verificata la lunghezza minima accettabile della stringa da convalidare. Il <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> costruttore con due parametri assicura che la stringa da verificare è conforme al massimo e minimo. Il <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> costruttore con tre parametri controlla il valore minimo sia i valori di lunghezza massima della stringa in fase di verifica, anche se i caratteri specifici siano presenti nella stringa da convalidare.  
  
 Il <xref:System.Configuration.StringValidator.CanValidate%2A> metodo determina se il tipo di oggetto da convalidare corrisponde al tipo previsto. Oggetto da convalidare viene passato come parametro del <xref:System.Configuration.StringValidator.Validate%2A> (metodo).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Configuration.StringValidator> tipo.  
  
 [!code-csharp[System.Configuration.StringValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#1)]
 [!code-vb[System.Configuration.StringValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.StringValidatorAttribute" />
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Configuration.StringValidator" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength);" />
      <MemberSignature Language="F#" Value="new System.Configuration.StringValidator : int -&gt; System.Configuration.StringValidator" Usage="new System.Configuration.StringValidator minLength" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minLength">Intero che specifica la lunghezza minima del valore stringa.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Configuration.StringValidator" /> in base a un parametro specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.StringValidator.%23ctor%2A> costruttore viene verificata la lunghezza minima accettabile della stringa da convalidare.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength, int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength, int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer, maxLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength, int maxLength);" />
      <MemberSignature Language="F#" Value="new System.Configuration.StringValidator : int * int -&gt; System.Configuration.StringValidator" Usage="new System.Configuration.StringValidator (minLength, maxLength)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minLength">Intero che specifica la lunghezza minima del valore stringa.</param>
        <param name="maxLength">Intero che specifica la lunghezza massima del valore stringa.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Configuration.StringValidator" /> in base ai parametri forniti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciò <xref:System.Configuration.StringValidator.%23ctor%2A> costruttore assicura che la stringa da verificare è conforme al massimo e minimo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringValidator (int minLength, int maxLength, string invalidCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 minLength, int32 maxLength, string invalidCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minLength As Integer, maxLength As Integer, invalidCharacters As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringValidator(int minLength, int maxLength, System::String ^ invalidCharacters);" />
      <MemberSignature Language="F#" Value="new System.Configuration.StringValidator : int * int * string -&gt; System.Configuration.StringValidator" Usage="new System.Configuration.StringValidator (minLength, maxLength, invalidCharacters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minLength" Type="System.Int32" />
        <Parameter Name="maxLength" Type="System.Int32" />
        <Parameter Name="invalidCharacters" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="minLength">Intero che specifica la lunghezza minima del valore stringa.</param>
        <param name="maxLength">Intero che specifica la lunghezza massima del valore stringa.</param>
        <param name="invalidCharacters">Stringa che rappresenta caratteri non validi.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Configuration.StringValidator" /> in base ai parametri forniti.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciò <xref:System.Configuration.StringValidator.%23ctor%2A> costruttore assicura che la stringa da convalidare è conforme al massimo e minimo e assicura anche che nella stringa sono esclusi i caratteri specifici.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare questo <xref:System.Configuration.StringValidator.%23ctor%2A> costruttore. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Configuration.StringValidator> classe.  
  
 [!code-csharp[System.Configuration.StringValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#2)]
 [!code-vb[System.Configuration.StringValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="stringValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Tipo di oggetto.</param>
        <summary>Determina se un oggetto può essere convalidato in base al tipo.</summary>
        <returns>
          <see langword="true" /> se il parametro <paramref name="type" /> corrisponde a una stringa; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del metodo <xref:System.Configuration.StringValidator.CanValidate%2A>. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Configuration.StringValidator> classe.  
  
 [!code-csharp[System.Configuration.StringValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#3)]
 [!code-vb[System.Configuration.StringValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.StringValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="stringValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Valore dell'oggetto.</param>
        <summary>Determina se il valore di un oggetto è valido.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Configuration.StringValidator> classe contiene i criteri necessari per convalidare un oggetto stringa. I criteri vengono stabiliti quando un'istanza del <xref:System.Configuration.StringValidator> classe viene creata. Oggetto da convalidare viene passato come parametro del <xref:System.Configuration.StringValidator.Validate%2A> (metodo).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del metodo <xref:System.Configuration.StringValidator.Validate%2A>. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Configuration.StringValidator> classe.  
  
 [!code-csharp[System.Configuration.StringValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.StringValidator/CS/StringValidator.cs#4)]
 [!code-vb[System.Configuration.StringValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.StringValidator/VB/StringValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> è minore di <paramref name="minValue" /> o maggiore di <paramref name="maxValue" /> come definito nel costruttore.  
  
\- oppure - 
 <paramref name="value" /> contiene caratteri non validi.</exception>
      </Docs>
    </Member>
  </Members>
</Type>