<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConfigurationValidatorAttribute.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac522b14aeb0314c1d1bbc957f58be9011c9949c663.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22b14aeb0314c1d1bbc957f58be9011c9949c663</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.ConfigurationValidatorAttribute">
          <source>Serves as the base class for the <ph id="ph1">&lt;see cref="N:System.Configuration" /&gt;</ph> validator attribute types.</source>
          <target state="translated">Funziona da classe base per i tipi di attributi del validator di <ph id="ph1">&lt;see cref="N:System.Configuration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationValidatorAttribute">
          <source>All the ASP.NET configuration standard validator attribute types derive from <ph id="ph1">&lt;xref:System.Configuration.ConfigurationValidatorAttribute&gt;</ph>.</source>
          <target state="translated">Tutti i tipi di attributo del validator standard di configurazione ASP.NET derivano da <ph id="ph1">&lt;xref:System.Configuration.ConfigurationValidatorAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationValidatorAttribute">
          <source>You can use this type to create your own custom validator attribute.</source>
          <target state="translated">Per creare un validator personalizzato attributo personalizzato, è possibile utilizzare questo tipo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationValidatorAttribute">
          <source>The following code examples demonstrate how to create two custom validators using the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationValidatorAttribute&gt;</ph> type.</source>
          <target state="translated">Gli esempi di codice seguente viene illustrato come creare due validator personalizzati utilizzando il <ph id="ph1">&lt;xref:System.Configuration.ConfigurationValidatorAttribute&gt;</ph> tipo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationValidatorAttribute">
          <source>The first example performs validation using hard-coded parameters; the second example performs validation using the parameters assigned to it at the time it is applied to the related section property.</source>
          <target state="translated">Nel primo esempio esegue la convalida mediante i parametri a livello di codice. Nel secondo esempio esegue la convalida utilizzando i parametri assegnati al momento applicato alla proprietà relativa sezione.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationValidatorAttribute">
          <source>This code example also contains three supporting files.</source>
          <target state="translated">Questo esempio di codice contiene inoltre i tre file di supporto.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationValidatorAttribute">
          <source>The first file contains the custom section that uses the validators described above, the second file contains a custom converter type, and the third file contains the console application that builds and uses the custom validators and the section that contains them.</source>
          <target state="translated">Il primo file contiene la sezione personalizzata che utilizza i validator descritti in precedenza, il secondo file contiene un tipo di convertitore personalizzato e il terzo file contiene l'applicazione console che genera e utilizza i validator personalizzati e la sezione che li contiene.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationValidatorAttribute">
          <source>The following code example shows how to create a fixed validator with hard-coded parameters.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come creare un validator fisso con parametri a livello di codice.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationValidatorAttribute">
          <source>The following code example shows how to create a programmable validator.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come creare un validator programmabile.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationValidatorAttribute">
          <source>The following code example shows how to create a custom section using the previous validators.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come creare una sezione personalizzata utilizzando i validator precedenti.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationValidatorAttribute">
          <source>The following code example shows how to create a custom converter.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come creare un convertitore personalizzato.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationValidatorAttribute">
          <source>The following code example shows how to create the console application that builds and uses the custom validators and their containing section.</source>
          <target state="translated">Esempio di codice seguente viene illustrato come creare l'applicazione console che genera e utilizza i validator personalizzati e la sezione che lo contiene.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationValidatorAttribute">
          <source>The following code example is a configuration excerpt used by the previous example.</source>
          <target state="translated">Esempio di codice seguente è un frammento di configurazione utilizzato dall'esempio precedente.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Configuration.ConfigurationValidatorAttribute">
          <source>Initializes a new instance of a validator attribute type.</source>
          <target state="translated">Inizializza una nuova istanza di un tipo di attributo del validator.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationValidatorAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationValidatorAttribute.#ctor">
          <source>You use this constructor in the attributed model to ensure that the value assigned to the related property is an integer.</source>
          <target state="translated">Utilizzare questo costruttore nel modello con gli attributi per assicurarsi che il valore assegnato alla proprietà correlata è un numero intero.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
          <source>The validator type to use when creating an instance of <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorAttribute" /&gt;</ph>.</source>
          <target state="translated">Tipo di validator da utilizzare quando si crea un'istanza della classe <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorAttribute" /&gt;</ph> class using the specified validator type.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorAttribute" /&gt;</ph> mediante il tipo di validator specificato.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
          <source>This constructor determines whether a validator instance can be created from an instance of the specified <ph id="ph1">`validator`</ph> type.</source>
          <target state="translated">Questo costruttore consente di determinare se è possibile creare un'istanza del validator da un'istanza dell'oggetto specificato <ph id="ph1">`validator`</ph> tipo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
          <source><ph id="ph1">&lt;paramref name="validator" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="validator" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
          <source><ph id="ph1">&lt;paramref name="validator" /&gt;</ph> is not derived from <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationValidatorBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="validator" /&gt;</ph> non deriva da <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationValidatorBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
          <source>Gets the validator attribute instance.</source>
          <target state="translated">Ottiene l'istanza dell'attributo del validator.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorBase" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorBase" /&gt;</ph> corrente.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType">
          <source>Gets the type of the validator attribute.</source>
          <target state="translated">Ottiene il tipo dell'attributo del validator.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the current validator attribute instance.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> dell'istanza dell'attributo del validator corrente.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>