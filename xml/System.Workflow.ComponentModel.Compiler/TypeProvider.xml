<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeProvider.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51871800301cdc9c2baef869c110fa98ac9f9b08b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1871800301cdc9c2baef869c110fa98ac9f9b08b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.ComponentModel.Compiler.TypeProvider">
          <source>An implementation of <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" /&gt;</ph> that acts as a container of types within the indicated assemblies and code compile units.</source>
          <target state="translated">Un'implementazione della classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" /&gt;</ph> che si comporta come un contenitore di tipi all'interno degli assembly indicati e nelle unità di compilazione del codice.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.ComponentModel.Compiler.TypeProvider">
          <source>This <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.ITypeProvider&gt;</ph> implementation, in addition to handling compiled assemblies (<ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A&gt;</ph> methods), can handle types that have not been compiled yet (<ph id="ph4">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A&gt;</ph>).</source>
          <target state="translated">Questa implementazione <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.ITypeProvider&gt;</ph>, in aggiunta alla gestione di assembly compilati (metodi<ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A&gt;</ph>) può gestire tipi (<ph id="ph4">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A&gt;</ph>) che non sono stati ancora compilati.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.ComponentModel.Compiler.TypeProvider">
          <source>The limited implementation of <ph id="ph1">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> is returned for types referenced using <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.</source>
          <target state="translated">L'implementazione limitata di <ph id="ph1">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> viene restituita per i tipi a cui viene fatto riferimento utilizzando <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.ComponentModel.Compiler.TypeProvider">
          <source><ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph> only returns public types from referenced assemblies, and both public and non-public types from local assemblies.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph> restituisce solamente i tipi pubblici dagli assembly di riferimento, e i tipi pubblici e non pubblici dagli assembly locali.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)">
          <source>The encapsulated <ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph> for this instance.</source>
          <target state="translated">Classe incapsulata <ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph> per l'istanza.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)">
          <source>The following code example shows how to create a new instance of the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph> class.</source>
          <target state="translated">Nell'esempio di codice seguente viene illustrato come creare una nuova istanza della classe <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)">
          <source>This code example is part of the BasicDesignerHosting SDK Sample from the WorkflowLoader.cs file.</source>
          <target state="translated">Questo esempio di codice è parte dell'esempio SDK BasicDesignerHosting nel file WorkflowLoader.cs.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Basic Designer Hosting<ept id="p1">](http://msdn.microsoft.com/library/55925adf-2daa-4dc2-b1bf-61aa0190d734)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Hosting della finestra di progettazione di base<ept id="p1">](http://msdn.microsoft.com/library/55925adf-2daa-4dc2-b1bf-61aa0190d734)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph> to add a reference for.</source>
          <target state="translated">Proprietà <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph> per cui aggiungere un riferimento.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)">
          <source>Adds an already-loaded assembly.</source>
          <target state="translated">Aggiunge un assembly già caricato.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)">
          <source>It is the caller's responsibility to load the assembly, and <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /&gt;</ph> includes the types from this assembly for dispensing when <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType" /&gt;</ph> is called.</source>
          <target state="translated">Il chiamante è responsabile di caricare l'assembly e la classe <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /&gt;</ph> include i tipi che derivano da essa per dispensare quando viene chiamato il metodo <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)">
          <source><ph id="ph1">&lt;paramref name="assembly" /&gt;</ph> is a null reference (Visual Basic <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assembly" /&gt;</ph> è un riferimento null ( <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
          <source>The path of the <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph> to add.</source>
          <target state="translated">Percorso della proprietà <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph> da aggiungere.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
          <source>Adds a reference to the <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph> to the internal list.</source>
          <target state="translated">Aggiunge un riferimento all'elenco interno della proprietà <ph id="ph1">&lt;see cref="P:System.Type.Assembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
          <source>This assembly is used for the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> lookup in the <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Questo assembly viene utilizzato per la ricerca della classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> nel metodo <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
          <source>The following code example shows how to create a new instance of the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph> class and run the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A&gt;</ph> method.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come creare una nuova istanza della classe <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph> ed eseguire il metodo <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
          <source>This code example is part of the BasicDesignerHosting SDK Sample from the WorkflowLoader.cs file.</source>
          <target state="translated">Questo esempio di codice è parte dell'esempio SDK BasicDesignerHosting nel file WorkflowLoader.cs.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Basic Designer Hosting<ept id="p1">](http://msdn.microsoft.com/library/55925adf-2daa-4dc2-b1bf-61aa0190d734)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Hosting della finestra di progettazione di base<ept id="p1">](http://msdn.microsoft.com/library/55925adf-2daa-4dc2-b1bf-61aa0190d734)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a null reference (Visual Basic <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> è un riferimento null ( <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> to add.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> da aggiungere.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>Adds a reference to the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> to the internal list.</source>
          <target state="translated">Aggiunge un riferimento all'elenco interno della proprietà <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>This <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> is used for the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> lookup in the <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Questa classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> viene utilizzata per la ricerca della classe <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> nel metodo <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source><ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph> is a null reference (Visual Basic <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph> è un riferimento null ( <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source><ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph> is already referenced in this instance.</source>
          <target state="translated">In questa istanza c'è già un riferimento a <ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver">
          <source>Gets or sets the delegate that references a method with one parameter and one return value that returns the assembly display name in which a specified type belongs to.</source>
          <target state="translated">Ottiene o imposta il delegato che fa riferimento a un metodo con un parametro e un valore restituito che restituisce il nome visualizzato dell'assembly a cui appartiene un tipo specificato.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver">
          <source>The delegate that references a method with one parameter and one return value that returns the assembly display name that a specified type belongs to.</source>
          <target state="translated">Ottiene o imposta il delegato che fa riferimento a un metodo con un parametro e un valore restituito che restituisce il nome visualizzato dell'assembly a cui appartiene un tipo specificato.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /&gt;</ph>.</source>
          <target state="translated">Rilascia tutte le risorse usate da <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(System.Type)">
          <source>The type whose assembly name to get.</source>
          <target state="translated">Nome dell'assembly del tipo da ottenere.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(System.Type)">
          <source>Returns the assembly display name of the assembly in which the specified type is declared.</source>
          <target state="translated">Restituisce il nome visualizzato dell'assembly in cui viene dichiarato il tipo specificato.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(System.Type)">
          <source>The assembly display name of the assembly in which the specified type is declared.</source>
          <target state="translated">Nome visualizzato dell'assembly in cui viene dichiarato il tipo specificato.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)">
          <source>The type to obtain the names from.</source>
          <target state="translated">Tipo da cui ottenere i nomi.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)">
          <source>Provides a string array that contains the names for the specified <ph id="ph1">&lt;see cref="T:System.Enum" /&gt;</ph> in indexed order.</source>
          <target state="translated">Fornisce una matrice di stringhe che contiene i nomi delle classi <ph id="ph1">&lt;see cref="T:System.Enum" /&gt;</ph> in ordine indicizzato.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)">
          <source>The names for the specified <ph id="ph1">&lt;see cref="T:System.Enum" /&gt;</ph> in indexed order.</source>
          <target state="translated">Nomi per le classi <ph id="ph1">&lt;see cref="T:System.Enum" /&gt;</ph> specificate in ordine indicizzato.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is a null reference (Visual Basic <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> è un riferimento null ( <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> Is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> non è una classe <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> to obtain the <ph id="ph2">&lt;see cref="T:System.EventHandler" /&gt;</ph> type of.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> per la quale ottenere il tipo di <ph id="ph2">&lt;see cref="T:System.EventHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of an <ph id="ph2">&lt;see cref="T:System.EventHandler" /&gt;</ph>, given a reference to an <ph id="ph3">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>.</source>
          <target state="translated">Ottiene la classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> di una classe <ph id="ph2">&lt;see cref="T:System.EventHandler" /&gt;</ph>, dato un riferimento a una classe <ph id="ph3">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of an <ph id="ph2">&lt;see cref="T:System.EventHandler" /&gt;</ph>, given a reference to an <ph id="ph3">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> di una classe <ph id="ph2">&lt;see cref="T:System.EventHandler" /&gt;</ph>, dato un riferimento a una classe <ph id="ph3">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)">
          <source><ph id="ph1">&lt;paramref name="eventInfo" /&gt;</ph> is a null reference (Visual Basic <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventInfo" /&gt;</ph> è un riferimento null ( <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)">
          <source>The service <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> is to provide.</source>
          <target state="translated">Servizio <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> che deve essere fornito dalla classe <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that provides the designated service <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ottiene la classe <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> che fornisce il servizio <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> designato.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that provides the designated service <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> che fornisce il servizio <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> designato.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)">
          <source>If the encapsulated <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> associated with this instance is a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) then a null reference (<ph id="ph3">`Nothing`</ph>) is returned.</source>
          <target state="translated">Se la classe <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> incapsulata associata a questa istanza è un riferimento null (<ph id="ph2">`Nothing`</ph> in Visual Basic), viene restituito un riferimento null (<ph id="ph3">`Nothing`</ph>).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Workflow.ComponentModel.Compiler.TypeProvider">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> from the qualified type name passed by searching through the assembly references and code compile units that are added.</source>
          <target state="translated">Ottiene la classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> a partire dal nome completo del tipo passato, cercando nell'assembly riferimenti e unità di compilazione di codice aggiunti.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)">
          <source>The type name.</source>
          <target state="translated">Nome del tipo.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)">
          <source>Gets the type from the set of assemblies added to the <ph id="ph1">&lt;see langword="TypeProvider" /&gt;</ph> using <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" /&gt;</ph>.</source>
          <target state="translated">Ottiene il tipo dal set di assembly aggiunto a <ph id="ph1">&lt;see langword="TypeProvider" /&gt;</ph> utilizzando <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" /&gt;</ph> o <ph id="ph4">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)">
          <source>The requested <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> richiesto.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)">
          <source>If the name is not resolvable within the cache of assemblies and compiled units of this instance, a null reference (Visual Basic <ph id="ph1">`Nothing`</ph>) is returned.</source>
          <target state="translated">Se il nome non è risolubile all'interno della cache degli assembly e le unità compilate dell'istanza, viene restituito un riferimento null ( <ph id="ph1">`Nothing`</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)">
          <source>Invoking this overload is the same as invoking the two parameter overloads with the value of the parameter <ph id="ph1">`throwOnError`</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Richiamare questo overload equivale a richiamare gli overload di due parametri con il valore del parametro <ph id="ph1">`throwOnError`</ph> impostato su <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
          <source>The type name.</source>
          <target state="translated">Nome del tipo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
          <source>A value that indicates whether to throw an exception if <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> is not resolvable.</source>
          <target state="translated">Valore che indica se generare un'eccezione nel caso in cui <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> non sia risolvibile.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
          <source>Gets the type from the set of assemblies added to the <ph id="ph1">&lt;see langword="TypeProvider" /&gt;</ph> using <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" /&gt;</ph>.</source>
          <target state="translated">Ottiene il tipo dal set di assembly aggiunto a <ph id="ph1">&lt;see langword="TypeProvider" /&gt;</ph> utilizzando <ph id="ph2">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" /&gt;</ph> o <ph id="ph4">&lt;see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
          <source>The requested <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> richiesto.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
          <source>If the name is not resolvable within the cache of assemblies and compiled units of this instance, a null reference (<ph id="ph1">`Nothing`</ph>) is returned; in the case that <ph id="ph2">`throwOnError`</ph> is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se il nome non è risolubile all'interno della cache degli assembly e delle unità compilate di questa istanza, viene restituito un riferimento null (<ph id="ph1">`Nothing`</ph>), nel caso in cui <ph id="ph2">`throwOnError`</ph> è <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not resolvable and <ph id="ph2">&lt;paramref name="throwOnError" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> non è risolubile e <ph id="ph2">&lt;paramref name="throwOnError" /&gt;</ph> è <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes">
          <source>Creates an array that contains each <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> known to this instance.</source>
          <target state="translated">Crea una matrice che contiene ogni classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> conosciuta dall'istanza.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes">
          <source>An array that contains each <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> known to this instance.</source>
          <target state="translated">Matrice che contiene la classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> conosciuta dall'istanza.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes">
          <source>Any <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> fails to load.</source>
          <target state="translated">Impossibile caricare una classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)">
          <source>The target <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the assignment.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> destinazione dell'assegnazione.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the assignment.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> di origine dell'assegnazione.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)">
          <source>Indicates whether one type can be safely assigned to another type.</source>
          <target state="translated">Indica se un tipo può essere assegnato in modo sicuro a un altro tipo.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the assignment can be safely made; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'assegnazione può essere effettuata in modo sicuro. In caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to be tested.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> da verificare.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)">
          <source>Indicates whether a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> is of type <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph> .</source>
          <target state="translated">Indica se la classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> è di tipo <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is an <ph id="ph3">&lt;see cref="T:System.Enum" /&gt;</ph> ; otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> è una classe <ph id="ph3">&lt;see cref="T:System.Enum" /&gt;</ph>. In caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> being tested as a derived class.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> testata come classe derivata.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> being tested as the class.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> testata come classe.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)">
          <source>Indicates whether a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> is a derived class of another <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> .</source>
          <target state="translated">Indica se la classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> è una classe derivata di un'altra classe <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the tested relationship is true; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la relazione testata è vera. In caso contrario <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)">
          <source>The property to resolve.</source>
          <target state="translated">Proprietà da risolvere.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)">
          <source>The instance in which the specified property is declared.</source>
          <target state="translated">Istanza nella quale viene dichiarata la proprietà specificata.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)">
          <source>Returns a value that determines whether the specified property is supported in the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Restituisce un valore che determina se la proprietà specificata è supportata nella classe <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> di destinazione.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified property is supported in the target <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se la proprietà specificata è supportata nella classe <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>; di destinazione, in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver">
          <source>Gets or sets the delegate that references a method with two parameters and one return value that determines whether a specified property is supported in the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Ottiene o imposta il delegato che fa riferimento a un metodo con due parametri e un valore restituito che determina se una proprietà specificata è supportata nella classe <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> di destinazione.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver">
          <source>The delegate that references a method with two parameters and one return value that determines whether a specified property is supported in the target <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Delegato che fa riferimento a un metodo con due parametri e un valore restituito che determina se una proprietà specificata è supportata nella classe <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> di destinazione.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly">
          <source>Gets a value that represents the locally defined <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> for this instance.</source>
          <target state="translated">Ottiene un valore che rappresenta la classe <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> definita localmente per questa istanza.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly">
          <source>The locally defined <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> for this instance.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> localmente definita per l'istanza.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies">
          <source>Gets a collection of all assemblies referenced by the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Ottiene la raccolta di tutti gli assembly a cui fa riferimento la classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies">
          <source>A collection of all assemblies referenced by the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Raccolta di tutti gli assembly a cui fa riferimento la classe <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> to refresh with.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> con cui effettuare l'aggiornamento.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> to delegate this event to.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> cui delegare questo evento.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)">
          <source>Updates the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> reference associated with this instance.</source>
          <target state="translated">Aggiorna il riferimento della classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> associato all'istanza.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph> is raised when this method is invoked.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph> viene generato quando viene invocato questo metodo.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)">
          <source><ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)">
          <source>This instance already references the subject <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">Questa istanza fa già riferimento all'oggetto <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> to remove from this instance.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> da rimuovere dall'istanza.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)">
          <source>Removes all references to the subject <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> from this instance.</source>
          <target state="translated">Rimuove tutti i riferimenti dagli oggetti <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> dalla classe.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph> is raised when this method is invoked.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph> viene generato quando viene invocato questo metodo.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)">
          <source><ph id="ph1">&lt;paramref name="assembly" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assembly" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)">
          <source>The path of the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> to be removed.</source>
          <target state="translated">Percorso della classe <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> da rimuovere.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)">
          <source>Removes a path-based <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> reference from this instance.</source>
          <target state="translated">Rimuove un percorso basato su un riferimento alla classe <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> da questa istanza.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph> is raised when this method is invoked.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph> viene generato quando viene invocato questo metodo.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> to be removed.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> da rimuovere.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>Removes all references to the subject <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> from this instance.</source>
          <target state="translated">Rimuove tutti i riferimenti dagli oggetti <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> dalla classe.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph> is raised when this method is invoked.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph> viene generato quando viene invocato questo metodo.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source><ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="codeCompileUnit" /&gt;</ph> è un riferimento null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> used to set this value</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> utilizzata per impostare questo valore.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)">
          <source>Sets the value of the local <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> to the referenced <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> .</source>
          <target state="translated">Imposta il valore della classe locale <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> a cui fa riferimento la classe <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph> is raised when this method is invoked.</source>
          <target state="translated">L'elemento <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged&gt;</ph> viene generato quando viene invocato questo metodo.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)">
          <source>Call <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly%28System.Reflection.Assembly%29&gt;</ph> before you call <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29&gt;</ph> otherwise it has no affect on the <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph>.</source>
          <target state="translated">Chiamare il metodo <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly%28System.Reflection.Assembly%29&gt;</ph> prima di chiamare <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29&gt;</ph> altrimenti l'operazione non avrà effetto sull'oggetto <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Compiler.TypeProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of load error exceptions keyed by the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> that causes the <ph id="ph3">&lt;see cref="T:System.Exception" /&gt;</ph>.</source>
          <target state="translated">Ottiene una classe <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> di eccezioni relative a errori di caricamento codificate da <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> che attiva <ph id="ph3">&lt;see cref="T:System.Exception" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of load error exceptions keyed by the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> that causes the <ph id="ph3">&lt;see cref="T:System.Exception" /&gt;</ph>.</source>
          <target state="translated">Classe <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> di eccezioni relative a errori di caricamento codificate da <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> che attiva <ph id="ph3">&lt;see cref="T:System.Exception" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors">
          <source>An updated, detached <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> is created at each reference to this property.</source>
          <target state="translated">Viene creata una classe <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> aggiornata e distaccata per ciascun riferimento a questa proprietà.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="E:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrorsChanged">
          <source>Occurs when the collection <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors" /&gt;</ph> is modified.</source>
          <target state="translated">Si verifica quando la raccolta <ph id="ph1">&lt;see cref="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors" /&gt;</ph> viene modificata.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="E:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged">
          <source>Occurs when the collection of defined types is modified.</source>
          <target state="translated">Si verifica quando la raccolta di tipi definiti viene modificata.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>