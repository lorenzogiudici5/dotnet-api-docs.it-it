<Type Name="SecurityAlgorithmSuite" FullName="System.ServiceModel.Security.SecurityAlgorithmSuite">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="273047e679aef6a68ea353260abff1dfa1131aba" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30520235" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityAlgorithmSuite" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract SecurityAlgorithmSuite extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityAlgorithmSuite" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityAlgorithmSuite abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="56ee1-101">Specifica le proprietà degli algoritmi.</span>
      <span class="sxs-lookup">
        <span data-stu-id="56ee1-101">Specifies properties of algorithms.</span>
      </span>
      <span data-ttu-id="56ee1-102">Questa è una classe <see langword="abstract" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="56ee1-102">This is an <see langword="abstract" /> class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-103">Le istanze di questa classe vengono utilizzate per specificare le caratteristiche di crittografia degli algoritmi utilizzati durante la protezione dei messaggi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-103">Instances of this class are used to specify the cryptographic characteristics of the algorithms used when securing messages.</span></span>  
  
 <span data-ttu-id="56ee1-104">Questa classe viene usata dalle classi derivate per creare un'istanza del gruppo di algoritmi di sicurezza e contiene proprietà che descrivono gli algoritmi di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="56ee1-104">This class is used by derived classes to instantiate security algorithm suites, and contains properties that describe the security algorithms.</span></span> <span data-ttu-id="56ee1-105">Ad esempio, l'associazione `wsBasicHttp` utilizza una classe derivata interna per specificare le proprietà degli algoritmi di sicurezza.</span><span class="sxs-lookup"><span data-stu-id="56ee1-105">For example, the `wsBasicHttp` binding uses an internal derived class to specify the properties of its security algorithms.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityAlgorithmSuite ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityAlgorithmSuite();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-106">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-107">Le istanze di questa classe sono costituite da proprietà statiche e proprietà di sola lettura e pertanto il costruttore non inizializza alcuna proprietà.</span><span class="sxs-lookup"><span data-stu-id="56ee1-107">The instances of this class consist of static properties and read-only properties, so the constructor does not initialize any properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-108">Ottiene la suite di algoritmi di Basic128.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-108">Gets the Basic128 algorithm suite.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-109">Elemento <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> Basic a 128 bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-109">The 128-bit Basic <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-110">Per impostazione predefinita, AES-128 viene utilizzato come l'algoritmo di crittografia.</span><span class="sxs-lookup"><span data-stu-id="56ee1-110">By default, AES-128 is used as the encryption algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-111">Ottiene una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave e Basic a 128 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-111">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-112">Suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave e Basic a 128 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-112">An algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-113">La classe <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> restituita è in realtà una sottoclasse interna che esegue l'override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-113">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-114">Ottiene una suite di algoritmi che utilizza SHA256  per il digest della firma e Basic a 128 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-114">Gets an algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-115">Una suite di algoritmi che utilizza SHA256 per il digest della firma e Basic a 128 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-115">An algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-116">La classe <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> restituita è in realtà una sottoclasse interna che esegue l'override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-116">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-117">Ottiene una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave, SHA256 per la classificazione della firma e Basic a 128 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-117">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-118">Suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave, SHA256 per la classificazione della firma e Basic a 128 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-118">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-119">La classe <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> restituita è in realtà una sottoclasse interna che esegue l'override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-119">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-120">Ottiene una suite di algoritmi che Basic a 192 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-120">Gets an algorithm suite that uses 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-121">Suite di algoritmi che utilizza Basic a 192 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-121">An algorithm suite that uses 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-122">Per impostazione predefinita, viene utilizzato l'algoritmo di crittografia AES-192.</span><span class="sxs-lookup"><span data-stu-id="56ee1-122">By default, AES-192 is used as the encryption algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-123">Ottiene un gruppo di algoritmi che usa RSA15 come algoritmo di incapsulamento della chiave e Basic a 192 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-123">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-124">Una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave e Basic a 192 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-124">An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-125">La classe <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> restituita è in realtà una sottoclasse interna che esegue l'override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-125">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-126">Ottiene un gruppo di algoritmi che usa SHA256 per il digest della firma e Basic a 192 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-126">Gets an algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-127">Una suite di algoritmi che utilizza SHA256 per il digest della firma e Basic a 192 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-127">An algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-128">La classe <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> restituita è in realtà una sottoclasse interna che esegue l'override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-128">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-129">Ottiene un gruppo di algoritmi che usa RSA15 come algoritmo di incapsulamento della chiave, SHA256 per la classificazione della firma e Basic a 192 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-129">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-130">Una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave, SHA256 per il digest della firma e Basic a 192 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-130">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-131">La classe <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> restituita è in realtà una sottoclasse interna che esegue l'override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-131">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-132">Ottiene una suite di algoritmi che Basic a 256 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-132">Gets an algorithm suite that uses 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-133">Una suite di algoritmi che usa Basic a 256 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-133">An algorithm suite that uses 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-134">Per impostazione predefinita, viene utilizzato l'algoritmo di crittografia AES-256.</span><span class="sxs-lookup"><span data-stu-id="56ee1-134">By default, AES-256 is used for the encryption algorithm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56ee1-135">Il codice seguente illustra come impostare <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> su questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="56ee1-135">The following code shows how to set <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> to this property.</span></span>  
  
 [!code-csharp[c_ProgrammingSecurity#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_programmingsecurity/cs/source.cs#8)]
 [!code-vb[c_ProgrammingSecurity#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_programmingsecurity/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-136">Ottiene un gruppo di algoritmi che usa RSA15 come algoritmo di incapsulamento della chiave e Basic a 256 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-136">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-137">Una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave e Basic a 256 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-137">An algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-138">La classe <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> restituita è in realtà una sottoclasse interna che esegue l'override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-138">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-139">Ottiene una suite di algoritmi che utilizza SHA256  per il digest della firma e Basic a 256 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-139">Gets an algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-140">Una suite di algoritmi che utilizza SHA256 per il digest della firma e Basic a 256 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-140">An algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-141">La classe <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> restituita è in realtà una sottoclasse interna che esegue l'override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-141">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-142">Ottiene un gruppo di algoritmi che usa RSA15 come algoritmo di incapsulamento della chiave, SHA256 per la classificazione della firma e Basic a 256 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-142">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-143">Gruppo di algoritmi che usa RSA15 come algoritmo di incapsulamento della chiave, SHA256 per la classificazione della firma e Basic a 256 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-143">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-144">La classe <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> restituita è in realtà una sottoclasse interna che esegue l'override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-144">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Default" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Default { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-145">Ottiene il gruppo di algoritmi predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-145">Gets the default algorithm suite.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-146">L'elemento <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> predefinito è <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" /> che specifica l'algoritmo AES (Advanced Encryption Standard) a 256 bit come algoritmo di crittografia simmetrico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-146">The default <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-147">La classe <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> restituita è in realtà una sottoclasse interna che esegue l'override delle proprietà che specificano valori predefiniti e metodi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-147">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides the properties specifying default values as well as the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAsymmetricKeyWrapAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultAsymmetricKeyWrapAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAsymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultAsymmetricKeyWrapAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultAsymmetricKeyWrapAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-148">Ottiene l'algoritmo di incapsulamento della chiave asimmetrico predefinito come stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-148">Gets the default asymmetric key wrap algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-149">Algoritmo di incapsulamento della chiave asimmetrico predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-149">The default asymmetric key wrap algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-150">Quando sottoposto a override, fornisce un valore stringa utilizzato per il confronto nel metodo <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="56ee1-150">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAsymmetricSignatureAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultAsymmetricSignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAsymmetricSignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultAsymmetricSignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultAsymmetricSignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-151">Ottiene l'algoritmo di firma asimmetrico predefinito come stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-151">Gets the default asymmetric signature algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-152">Algoritmo di firma asimmetrico predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-152">The default asymmetric signature algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-153">Quando sottoposto a override, fornisce un valore stringa utilizzato per il confronto nel metodo <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="56ee1-153">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCanonicalizationAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultCanonicalizationAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultCanonicalizationAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCanonicalizationAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultCanonicalizationAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-154">Ottiene l'algoritmo di canonizzazione predefinito come stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-154">Gets the default canonicalization algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-155">Algoritmo di conversione predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-155">The default canonicalization algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-156">Quando sottoposto a override, fornisce un valore stringa utilizzato per il confronto nel metodo <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="56ee1-156">When overridden, provides a string value that will be used for comparison in the method <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDigestAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultDigestAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultDigestAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultDigestAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultDigestAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-157">Ottiene l'algoritmo di digest predefinito come stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-157">Gets the default digest algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-158">Algoritmo digest predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-158">The default digest algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-159">Quando sottoposto a override, fornisce un valore stringa utilizzato per il confronto nel metodo <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="56ee1-159">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultEncryptionAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultEncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultEncryptionAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultEncryptionAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-160">Ottiene l'algoritmo di crittografia predefinito come stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-160">Gets the default encryption algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-161">Algoritmo di crittografia predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-161">The default encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-162">Quando sottoposto a override, fornisce un valore stringa utilizzato per il confronto nel metodo <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="56ee1-162">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEncryptionKeyDerivationLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultEncryptionKeyDerivationLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultEncryptionKeyDerivationLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultEncryptionKeyDerivationLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultEncryptionKeyDerivationLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-163">Ottiene la lunghezza di derivazione della chiave di crittografia predefinita come valore <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-163">Gets the default encryption key derivation length as an <see cref="T:System.Int32" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-164">Lunghezza di derivazione della chiave di crittografia predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-164">The default encryption key derivation length.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-165">Il valore restituito varia a seconda della sottoclasse che lo implementa.</span><span class="sxs-lookup"><span data-stu-id="56ee1-165">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="56ee1-166">Nel caso di crittografia `Basic256`, restituisce 256.</span><span class="sxs-lookup"><span data-stu-id="56ee1-166">For `Basic256` encryption, it returns 256.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSignatureKeyDerivationLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultSignatureKeyDerivationLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSignatureKeyDerivationLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSignatureKeyDerivationLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultSignatureKeyDerivationLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-167">Ottiene la lunghezza di derivazione della chiave di firma predefinita come valore <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-167">Gets the default signature key derivation length as an <see cref="T:System.Int32" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-168">Lunghezza di derivazione della chiave di firma predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-168">The default signature key derivation length.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-169">Il valore restituito varia a seconda della sottoclasse che lo implementa.</span><span class="sxs-lookup"><span data-stu-id="56ee1-169">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="56ee1-170">Per `Basic256` crittografia, verrà restituito 192.</span><span class="sxs-lookup"><span data-stu-id="56ee1-170">For `Basic256` encryption, it returns 192.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeyLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultSymmetricKeyLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSymmetricKeyLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricKeyLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultSymmetricKeyLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-171">Ottiene la lunghezza di derivazione della chiave simmetrica predefinita come valore <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-171">Gets the default symmetric key length as an <see cref="T:System.Int32" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-172">Lunghezza di chiave simmetrica predefinita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-172">The default symmetric key length.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-173">Il valore restituito varia a seconda della sottoclasse che lo implementa.</span><span class="sxs-lookup"><span data-stu-id="56ee1-173">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="56ee1-174">Nel caso di crittografia `Basic256`, restituisce 256.</span><span class="sxs-lookup"><span data-stu-id="56ee1-174">For `Basic256` encryption, it returns 256.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeyWrapAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultSymmetricKeyWrapAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultSymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricKeyWrapAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultSymmetricKeyWrapAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-175">Ottiene l'algoritmo di incapsulamento della chiave simmetrico predefinito come stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-175">Gets the default symmetric key wrap algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-176">Algoritmo di incapsulamento della chiave simmetrico predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-176">The default symmetric key wrap algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricSignatureAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultSymmetricSignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultSymmetricSignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricSignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultSymmetricSignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-177">Ottiene l'algoritmo di firma simmetrico predefinito come stringa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-177">Gets the default symmetric signature algorithm as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-178">Algoritmo di firma simmetrico predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-178">The default symmetric signature algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricKeyLengthSupported">
      <MemberSignature Language="C#" Value="public abstract bool IsAsymmetricKeyLengthSupported (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricKeyLengthSupported(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsAsymmetricKeyLengthSupported (length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsAsymmetricKeyLengthSupported(int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="56ee1-179">Lunghezza della chiave da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-179">The key length to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56ee1-180">Indica se una lunghezza specifica della chiave viene supportata dall'algoritmo asimmetrico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-180">Indicates whether a particular key length is supported by the asymmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56ee1-181">
            <see langword="true" /> se la lunghezza della chiave viene supportata dall'algoritmo asimmetrico. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-181">
              <see langword="true" /> if the key length is supported by the asymmetric algorithm; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-182">Le lunghezze della chiave tipiche sono 128, 192 e 256 bit.</span><span class="sxs-lookup"><span data-stu-id="56ee1-182">Typical key lengths are 128, 192, and 256 bits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricKeyWrapAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsAsymmetricKeyWrapAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricKeyWrapAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAsymmetricKeyWrapAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAsymmetricKeyWrapAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="56ee1-183">L'algoritmo da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-183">The algorithm to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56ee1-184">Indica se un algoritmo di incapsulamento della chiave asimmetrico viene supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-184">Indicates whether an asymmetric key wrap algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56ee1-185">
            <see langword="true" /> se l'algoritmo di incapsulamento della chiave asimmetrico viene supportato. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-185">
              <see langword="true" /> if the asymmetric key wrap algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-186">L'elemento `algorithm` viene confrontato con la stringa restituita da <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="56ee1-186">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricSignatureAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsAsymmetricSignatureAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricSignatureAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAsymmetricSignatureAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAsymmetricSignatureAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="56ee1-187">Il nome dell'algoritmo da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-187">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56ee1-188">Indica se un algoritmo della firma asimmetrico viene supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-188">Indicates whether an asymmetric signature algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56ee1-189">
            <see langword="true" /> se l'algoritmo della firma asimmetrico viene supportato. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-189">
              <see langword="true" /> if the asymmetric signature algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-190">L'elemento `algorithm` viene confrontato con la stringa restituita da <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="56ee1-190">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanonicalizationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsCanonicalizationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCanonicalizationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsCanonicalizationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsCanonicalizationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="56ee1-191">Il nome dell'algoritmo da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-191">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56ee1-192">Indica se un algoritmo di canonizzazione viene supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-192">Indicates whether a canonicalization algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56ee1-193">
            <see langword="true" /> se l'algoritmo di canonizzazione viene supportato. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-193">
              <see langword="true" /> if the canonicalization algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-194">L'elemento `algorithm` viene confrontato con la stringa restituita da <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="56ee1-194">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDigestAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsDigestAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDigestAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDigestAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDigestAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="56ee1-195">Il nome dell'algoritmo da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-195">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56ee1-196">Indica se un algoritmo di digest viene supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-196">Indicates whether a digest algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56ee1-197">
            <see langword="true" /> se l'algoritmo di digest viene supportato. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-197">
              <see langword="true" /> if the digest algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-198">L'elemento `algorithm` viene confrontato con la stringa restituita da <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="56ee1-198">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptionAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsEncryptionAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEncryptionAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEncryptionAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEncryptionAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="56ee1-199">Il nome dell'algoritmo da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-199">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56ee1-200">Indica se un algoritmo di crittografia viene supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-200">Indicates whether an encryption algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56ee1-201">
            <see langword="true" /> se l'algoritmo di crittografia viene supportato. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-201">
              <see langword="true" /> if the encryption algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-202">L'elemento `algorithm` viene confrontato con la stringa restituita da <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="56ee1-202">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptionKeyDerivationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsEncryptionKeyDerivationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEncryptionKeyDerivationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEncryptionKeyDerivationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEncryptionKeyDerivationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="56ee1-203">Il nome dell'algoritmo da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-203">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56ee1-204">Indica se un algoritmo di derivazione della chiave di crittografia viene supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-204">Indicates whether an encryption key derivation algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56ee1-205">
            <see langword="true" /> se l'algoritmo di derivazione della chiave di crittografia viene supportato. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-205">
              <see langword="true" /> if the encryption key derivation algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignatureKeyDerivationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSignatureKeyDerivationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignatureKeyDerivationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignatureKeyDerivationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignatureKeyDerivationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="56ee1-206">Il nome dell'algoritmo da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-206">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56ee1-207">Indica se un algoritmo di derivazione della chiave di firma viene supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-207">Indicates whether a signature key derivation algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56ee1-208">
            <see langword="true" /> se l'algoritmo di derivazione della chiave di firma viene supportato. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-208">
              <see langword="true" /> if the signature key derivation algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricKeyLengthSupported">
      <MemberSignature Language="C#" Value="public abstract bool IsSymmetricKeyLengthSupported (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricKeyLengthSupported(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSymmetricKeyLengthSupported (length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSymmetricKeyLengthSupported(int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="56ee1-209">Lunghezza della chiave da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-209">The key length to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56ee1-210">Quando viene sottoposto a override in una classe derivata, indica se viene supportata una lunghezza della chiave simmetrica specifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-210">When overridden in a derived class, indicates whether a particular symmetric key length is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56ee1-211">
            <see langword="true" /> se la lunghezza della chiave simmetrica viene supportata. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-211">
              <see langword="true" /> if the symmetric key length is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-212">L'elemento `length` viene confrontato con una serie di valori relativi alla sottoclasse.</span><span class="sxs-lookup"><span data-stu-id="56ee1-212">The `length` is compared to a range of values depending on the subclass.</span></span> <span data-ttu-id="56ee1-213">Ad esempio, nella sottoclasse `TripleDES`, questo metodo verifica che il parametro `length` sia compreso tra 192 e 256, estremi compresi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-213">For example, in the `TripleDES` subclass, this method verifies that `length` is between 192 and 256, inclusive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricKeyWrapAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSymmetricKeyWrapAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricKeyWrapAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSymmetricKeyWrapAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSymmetricKeyWrapAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="56ee1-214">Il nome dell'algoritmo da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-214">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56ee1-215">Indica se un algoritmo di incapsulamento della chiave simmetrico viene supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-215">Indicates whether a symmetric key wrap algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56ee1-216">
            <see langword="true" /> se l'algoritmo di incapsulamento della chiave simmetrico viene supportato. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-216">
              <see langword="true" /> if the symmetric key wrap algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricSignatureAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSymmetricSignatureAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricSignatureAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSymmetricSignatureAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSymmetricSignatureAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="56ee1-217">Il nome dell'algoritmo da controllare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-217">The algorithm name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56ee1-218">Indica se un algoritmo della firma simmetrico viene supportato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-218">Indicates whether a symmetric signature algorithm is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56ee1-219">
            <see langword="true" /> se l'algoritmo della firma simmetrico viene supportato. In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-219">
              <see langword="true" /> if the symmetric signature algorithm is supported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDes">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDes As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDes { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-220">Ottiene il gruppo di algoritmi Triple Data Encryption Standard (DES).</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-220">Gets the Triple Data Encryption Standard (DES) algorithm suite.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-221">L'elemento <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> Triple DES.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-221">The Triple DES <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-222">La classe <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> restituita è in realtà una sottoclasse interna che esegue l'override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-222">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesRsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesRsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesRsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-223">Ottiene un gruppo di algoritmi che usa RSA15 come algoritmo di incapsulamento della chiave e Triple Data Encryption Standard (DES) a 192 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-223">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-224">Suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave e Triple Data Encryption Standard (DES) a 192 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-224">An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-225">La classe <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> restituita è in realtà una sottoclasse interna che esegue l'override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-225">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesSha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesSha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesSha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-226">Ottiene una suite di algoritmi che utilizza SHA256 per il digest della firma e Triple Data Encryption Standard (DES) a 192 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-226">Gets an algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-227">Una suite di algoritmi che utilizza SHA256 per il digest della firma e Triple Data Encryption Standard (DES) a 192 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-227">An algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-228">La classe <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> restituita è in realtà una sottoclasse interna che esegue l'override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-228">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesSha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesSha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesSha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56ee1-229">Ottiene un gruppo di algoritmi che usa RSA15 come algoritmo di incapsulamento della chiave, SHA256 per il digest della firma e Triple Data Encryption Standard (DES) a 192 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-229">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56ee1-230">Una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave, SHA256 per il digest della firma e Triple Data Encryption Standard (DES) a 192 bit come algoritmo di crittografia del messaggio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56ee1-230">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56ee1-231">La classe <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> restituita è in realtà una sottoclasse interna che esegue l'override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</span><span class="sxs-lookup"><span data-stu-id="56ee1-231">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>