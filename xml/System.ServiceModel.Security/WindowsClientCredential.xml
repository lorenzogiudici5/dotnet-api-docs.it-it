<Type Name="WindowsClientCredential" FullName="System.ServiceModel.Security.WindowsClientCredential">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="60e5a6f25e83216c0a0508049a79f5a8e813793d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39738897" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WindowsClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowsClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.WindowsClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowsClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsClientCredential sealed" />
  <TypeSignature Language="F#" Value="type WindowsClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Consente di specificare proprietà correlate alle credenziali di Windows da utilizzare per rappresentare il client.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Security.WindowsClientCredential> attiva l'impostazione di proprietà del client Windows utilizzate durante la comunicazione con un servizio. <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> imposta il livello di rappresentazione che il servizio può presupporre in caso di rappresentazione del client. <xref:System.ServiceModel.Security.WindowsClientCredential.ClientCredential%2A> consente a un client di autenticarsi presso il servizio con nome utente e password. <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> determina se sia possibile utilizzare NTLM per autenticare il client se non viene utilizzato Kerberos.  
  
   
  
## Examples  
 Nell'esempio seguente viene creato un client e si ottiene un riferimento a <xref:System.ServiceModel.Security.WindowsClientCredential>. Il codice quindi modifica la proprietà <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> impostandola su un nuovo valore.  
  
 [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]
 [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowedImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowedImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel AllowedImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AllowedImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il livello di rappresentazione consentito.</summary>
        <value>Uno dei valori di <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà specifica il livello di rappresentazione concesso dal client al server durante l'utilizzo dell'autenticazione tramite negoziazione SSPI di Windows. Si noti che il livello di rappresentazione ottenuto dal server quando rappresenta il token client non è solamente una funzione di questa impostazione, ma anche una funzione dei privilegi e delle impostazioni del dominio associati per l'account nel quale è in esecuzione il servizio.  
  
 Il client deve impostare in modo esplicito il livello di rappresentazione consentito utilizzando questa proprietà.  
  
 Quando il client specifica la rappresentazione anonima, viene sempre autenticato presso il servizio come anonimo anche quando nel servizio non viene eseguita la rappresentazione. Ciò è dovuto al comportamento del sistema operativo Windows.  
  
 Per altre informazioni sulla rappresentazione di Windows, visitare [rappresentazione e ripristino](http://go.microsoft.com/fwlink/?LinkId=96178). Per altre informazioni sulla rappresentazione tramite Windows Communication Foundation, vedere [delega e rappresentazione](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare questa proprietà.  
  
 [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]
 [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNtlm">
      <MemberSignature Language="C#" Value="public bool AllowNtlm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNtlm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowNtlm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNtlm { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNtlm : bool with get, set" Usage="System.ServiceModel.Security.WindowsClientCredential.AllowNtlm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This property is deprecated and is maintained for backward compatibility only. The local machine policy will be used to determine if NTLM should be used.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'autenticazione NTLM deve essere consentita come autenticazione tramite negoziazione SSPI di Windows.</summary>
        <value>
          <see langword="true" /> se l'autenticazione NTLM deve essere consentita come autenticazione tramite negoziazione SSPI di Windows, in caso contrario <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'impostazione di questa proprietà su `true` consente di usare l'autenticazione NTLM se Kerberos non è disponibile.  
  
 Impostando questa proprietà su `false` fa sì che Windows Communication Foundation (WCF) per rendere un tutti i tentativi possibili per generare un'eccezione se viene usato NTLM. Si noti che l'impostazione di questa proprietà su `false` potrebbe non impedire l'invio di credenziali NTLM nella rete.  
  
 In alcune distribuzioni, ad esempio in gruppi di lavoro e account locali, è necessaria l'autenticazione NTLM. Impostando questo flag su `false` in tali distribuzioni comporta errori di autenticazione quando si utilizza WCF. Nelle distribuzioni in cui è necessaria l'autenticazione reciproca (supportata solo da Kerberos), impostare questo flag su `false`.  
  
 NTLM (Windows NT LAN Manager) è il protocollo di autenticazione utilizzato su reti che includono sistemi che eseguono il sistema operativo Windows NT e su sistemi autonomi.  
  
 Il pacchetto di sicurezza Kerberos di Microsoft garantisce ai sistemi di una rete maggiore sicurezza rispetto a NTLM. Sebbene Microsoft Kerberos sia il protocollo da preferire, NTLM è ancora supportata e deve essere utilizzato per l'autenticazione di rete se la rete include sistemi che eseguono Windows NT 4.0 e versioni precedenti e su sistemi autonomi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential ClientCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential ClientCredential" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCredential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkCredential ^ ClientCredential { System::Net::NetworkCredential ^ get(); void set(System::Net::NetworkCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCredential : System.Net.NetworkCredential with get, set" Usage="System.ServiceModel.Security.WindowsClientCredential.ClientCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le credenziali client di Windows.</summary>
        <value>Oggetto <see cref="T:System.Net.NetworkCredential" /> relativo al client.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, le credenziali del thread corrente vengono utilizzate da WCF per eseguire l'autenticazione tramite negoziazione SSPI di Windows.  
  
 Per autenticare il client come altra entità di sicurezza, modificare le proprietà dell'istanza della classe <xref:System.Net.NetworkCredential> restituita da questa proprietà, In alternativa, creare una nuova istanza della classe <xref:System.Net.NetworkCredential> e assegnarla a questa proprietà.  
  
   
  
## Examples  
 Negli esempi di codice seguenti viene illustrato come autenticare il client come entità diversa.  
  
 Si tratta del metodo per modificare le proprietà dell'istanza della classe <xref:System.Net.NetworkCredential> restituita da questa proprietà.  
  
 [!code-csharp[WindowsClientCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#2)]  
  
 In questo modo viene creata una nuova istanza della classe <xref:System.Net.NetworkCredential> che viene assegnata a questa proprietà.  
  
 [!code-csharp[WindowsClientCredential#3](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>