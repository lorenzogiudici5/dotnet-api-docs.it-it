<Type Name="ICustomIdentityConfiguration" FullName="System.IdentityModel.Configuration.ICustomIdentityConfiguration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="102729042b471f189cd51fb915483c7ffdb2d0e0" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36560104" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type ICustomIdentityConfiguration = interface" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definisce i metodi che consentono a una classe di caricare la configurazione personalizzata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le classi che implementano il <xref:System.IdentityModel.Configuration.ICustomIdentityConfiguration> interfaccia possa caricare la configurazione personalizzata da XML.  
  
 Molte delle classi Windows Identity Foundation (WIF) implementare il <xref:System.IdentityModel.Configuration.ICustomIdentityConfiguration> interfaccia per fornire la funzionalità che consentono di definire la configurazione personalizzata della classe derivata da un file di configurazione. Molte delle classi WIF forniscono un'implementazione di base di questo metodo per fornire la configurazione predefinita per gli oggetti che rappresentano.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public void LoadCustomConfiguration (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadCustomConfiguration (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="iCustomIdentityConfiguration.LoadCustomConfiguration nodeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">Nodi XML che contengono la configurazione personalizzata. Ogni nodo nell'elenco è del tipo <see cref="T:System.Xml.XmlElement" />.</param>
        <summary>Carica la configurazione personalizzata da XML. Eseguire l'override di questo metodo per fornire la gestione personalizzata degli elementi di configurazione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration%2A> viene chiamato dall'infrastruttura di configurazione. Quando questo metodo viene chiamato, il `nodelist` parametro contiene gli elementi figlio di primo livello dell'elemento padre che configura la classe di oggetti dal file di configurazione. Ad esempio, una classe derivata da <xref:System.IdentityModel.Tokens.IssuerNameRegistry>, avrà gli elementi figlio del [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) elemento passato nel `nodelist` parametro. Il `nodelist` è costituito interamente <xref:System.Xml.XmlElement> oggetti. Ognuna di queste può avere attributi ed elementi figlio in base allo schema di configurazione definito per la classe che viene configurata.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>