<Type Name="SecurityTokenServiceConfiguration" FullName="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f47d2a812545cf5a6e9bdb9ae65e1080d17b602d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36560091" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SecurityTokenServiceConfiguration : System.IdentityModel.Configuration.IdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecurityTokenServiceConfiguration extends System.IdentityModel.Configuration.IdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class SecurityTokenServiceConfiguration&#xA;Inherits IdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenServiceConfiguration : System::IdentityModel::Configuration::IdentityConfiguration" />
  <TypeSignature Language="F#" Value="type SecurityTokenServiceConfiguration = class&#xA;    inherit IdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Configuration.IdentityConfiguration</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definisce la configurazione di un servizio token di sicurezza (STS). Le classi che implementano STSs derivano dalla classe <see cref="T:System.IdentityModel.SecurityTokenService" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Gli esempi di codice che vengono utilizzati nel <xref:System.IdentityModel.SecurityTokenService> negli argomenti vengono estratti dal `Custom Token` esempio. In questo esempio fornisce le classi personalizzate che consentono l'elaborazione del token SWT (Simple Web) e include un'implementazione di un servizio token di sicurezza passivo che è in grado di servire un token SWT. Per un esempio di come implementare un servizio token di sicurezza attivo, è possibile visualizzare il `Federation Metadata` esempio. Per informazioni su questi esempi e altri esempi disponibili per WIF e su come scaricare gli aggiornamenti, vedere [indice degli esempi di codice WIF](~/docs/framework/security/wif-code-sample-index.md). Il codice seguente viene illustrata un'implementazione personalizzata del <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> (classe) per supportare un servizio token di sicurezza passivo che elabora i token SWT. La configurazione viene inizializzata e archiviati nello stato dell'applicazione HTTP la prima volta statica `Current` si accede alla proprietà. Il costruttore inizializza le proprietà di configurazione personalizzata con il tipo di servizio token di sicurezza personalizzato, un resolver dei token personalizzati dell'autorità emittente e il tipo di token predefinito (l'URI del tipo di token SWT). Aggiunge un gestore dei token SWT anche alla raccolta di gestori predefiniti.  
  
 [!code-csharp[WIFCustomTokenSTS#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenserviceconfiguration.cs#2)]  
  
 Il codice seguente viene illustrato come richiamare un STS passivo personalizzato per elaborare una richiesta WS-Federation chiamando il <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> metodo dal codice dietro il `default.aspx.cs` file. Il <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService%2A> metodo inizializza un'istanza del `PassiveSTS.CustomSecurityTokenService` classe utilizzando le proprietà impostate la `CustomSecurityTokenServiceConfiguration` classe illustrata nell'esempio precedente.  
  
 [!code-csharp[WIFCustomTokenSTS#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/default.aspx.cs#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> deve essere impostata prima che venga utilizzato il servizio token di sicurezza per creare un token.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (bool loadConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool loadConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (loadConfig As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(bool loadConfig);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : bool -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration loadConfig" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loadConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="loadConfig">
          <see langword="true" /> per caricare le impostazioni da file di configurazione, in caso contrario <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />. Carica facoltativamente le impostazioni dalla configurazione corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> deve essere impostata prima che venga utilizzato il servizio token di sicurezza per creare un token.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (issuerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration issuerName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuerName">Nome dell'autorità emittente. Imposta la proprietà <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> che ha il nome dell'emittente specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `issuerName` viene `null`, il <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> deve essere impostata prima che venga utilizzato il servizio token di sicurezza per creare un token.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, bool loadConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, bool loadConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (issuerName As String, loadConfig As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, bool loadConfig);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * bool -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, loadConfig)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="loadConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="issuerName">Nome dell'autorità emittente. Imposta la proprietà <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />.</param>
        <param name="loadConfig">
          <see langword="true" /> per caricare le impostazioni da file di configurazione, in caso contrario <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> che ha il nome dell'emittente specificato. Carica facoltativamente le impostazioni dalla configurazione corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `issuerName` viene `null`, il <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> deve essere impostata prima che venga utilizzato il servizio token di sicurezza per creare un token.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, System.IdentityModel.Tokens.SigningCredentials signingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, class System.IdentityModel.Tokens.SigningCredentials signingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * System.IdentityModel.Tokens.SigningCredentials -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, signingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
      </Parameters>
      <Docs>
        <param name="issuerName">Nome dell'autorità emittente. Imposta la proprietà <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />.</param>
        <param name="signingCredentials">Credenziali di firma per STS. Imposta la proprietà <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> con il nome dell'emittente e le le credenziali di firma specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `issuerName` viene `null`, il <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> deve essere impostata prima che venga utilizzato il servizio token di sicurezza per creare un token.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, System.IdentityModel.Tokens.SigningCredentials signingCredentials, bool loadConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, bool loadConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, bool loadConfig);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * System.IdentityModel.Tokens.SigningCredentials * bool -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, signingCredentials, loadConfig)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="loadConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="issuerName">Nome dell'autorità emittente. Imposta la proprietà <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />.</param>
        <param name="signingCredentials">Credenziali di firma per STS. Imposta la proprietà <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" />.</param>
        <param name="loadConfig">
          <see langword="true" /> per caricare le impostazioni da file di configurazione, in caso contrario <see langword="false" />.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> con il nome dell'emittente e le le credenziali di firma specificati. Carica facoltativamente le impostazioni dalla configurazione corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `issuerName` viene `null`, il <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> deve essere impostata prima che venga utilizzato il servizio token di sicurezza per creare un token.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, System.IdentityModel.Tokens.SigningCredentials signingCredentials, string serviceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, string serviceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, System::String ^ serviceName);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * System.IdentityModel.Tokens.SigningCredentials * string -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, signingCredentials, serviceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="serviceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuerName">Nome dell'autorità emittente. Imposta la proprietà <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />.</param>
        <param name="signingCredentials">Credenziali di firma per STS. Imposta la proprietà <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" />.</param>
        <param name="serviceName">Nome dell'elemento <see langword="&lt;identityConfiguration&gt;" /> dal quale sarà caricata la configurazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> con il nome dell'emittente e le le credenziali di firma specificati. Le impostazioni vengono caricate dalla configurazione denominata specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se `issuerName` viene `null`, il <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> deve essere impostata prima che venga utilizzato il servizio token di sicurezza per creare un token.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenService">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.SecurityTokenService CreateSecurityTokenService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.SecurityTokenService CreateSecurityTokenService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSecurityTokenService () As SecurityTokenService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::SecurityTokenService ^ CreateSecurityTokenService();" />
      <MemberSignature Language="F#" Value="abstract member CreateSecurityTokenService : unit -&gt; System.IdentityModel.SecurityTokenService&#xA;override this.CreateSecurityTokenService : unit -&gt; System.IdentityModel.SecurityTokenService" Usage="securityTokenServiceConfiguration.CreateSecurityTokenService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.SecurityTokenService</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un'istanza del servizio token di sicurezza (STS) da <see cref="T:System.Type" /> specificato nella proprietà di <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" /> .</summary>
        <returns>Istanza di <see cref="T:System.Type" /> specificata nella proprietà di <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe specificata nella <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService%2A> proprietà deve implementare un costruttore che accetta un parametro di tipo <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration>.  
  
   
  
## Examples  
 Gli esempi di codice che vengono utilizzati nel <xref:System.IdentityModel.SecurityTokenService> negli argomenti vengono estratti dal `Custom Token` esempio. In questo esempio fornisce le classi personalizzate che consentono l'elaborazione del token SWT (Simple Web) e include un'implementazione di un servizio token di sicurezza passivo che è in grado di servire un token SWT. Per un esempio di come implementare un servizio token di sicurezza attivo, è possibile visualizzare il `Federation Metadata` esempio. Per informazioni su questi esempi e altri esempi disponibili per WIF e su come scaricare gli aggiornamenti, vedere [indice degli esempi di codice WIF](~/docs/framework/security/wif-code-sample-index.md). Il codice seguente viene illustrata un'implementazione personalizzata del <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> (classe) per supportare un servizio token di sicurezza passivo che elabora i token SWT. La configurazione viene inizializzata e archiviati nello stato dell'applicazione HTTP la prima volta statica `Current` si accede alla proprietà. Il costruttore inizializza le proprietà di configurazione personalizzata con il tipo di servizio token di sicurezza personalizzato, un resolver dei token personalizzati dell'autorità emittente e il tipo di token predefinito (l'URI del tipo di token SWT). Aggiunge un gestore dei token SWT anche alla raccolta di gestori predefiniti.  
  
 Il codice seguente viene illustrato come richiamare un STS passivo personalizzato per elaborare una richiesta WS-Federation chiamando il <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> metodo dal codice dietro il `default.aspx.cs` file. Il <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService%2A> metodo inizializza un'istanza di `PassiveSTS.CustomSecurityTokenService` classe utilizzando le proprietà impostate sull'oggetto corrente `CustomSecurityTokenServiceConfiguration` oggetto. Il `CustomSecurityTokenServiceConfiguration.Current` proprietà viene implementata dal `CustomSecurityTokenServiceConfiguration` classe e restituisce l'istanza della classe che viene salvata nello stato di applicazione HTTP.  
  
 [!code-csharp[WIFCustomTokenSTS#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/default.aspx.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMaxSymmetricKeySizeInBits">
      <MemberSignature Language="C#" Value="public int DefaultMaxSymmetricKeySizeInBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultMaxSymmetricKeySizeInBits" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultMaxSymmetricKeySizeInBits" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultMaxSymmetricKeySizeInBits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultMaxSymmetricKeySizeInBits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMaxSymmetricKeySizeInBits : int with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultMaxSymmetricKeySizeInBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il limite predefinito della dimensione della chiave in bit per controllare se l'elemento KeySize specificato nella richiesta rispetta tale limite.</summary>
        <value>Limite predefinito della dimensione della chiave, in bit. Il valore predefinito è 1024.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo vale solo per il case di chiave simmetrico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeySizeInBits">
      <MemberSignature Language="C#" Value="public int DefaultSymmetricKeySizeInBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSymmetricKeySizeInBits" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultSymmetricKeySizeInBits" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSymmetricKeySizeInBits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultSymmetricKeySizeInBits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSymmetricKeySizeInBits : int with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultSymmetricKeySizeInBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la dimensione della chiave predefinita in bit utilizzata nel token rilasciato.</summary>
        <value>Dimensione di chiave utilizzata per il token emesso, in bit. Il valore predefinito è 256.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo vale solo per il case di chiave simmetrico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan DefaultTokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DefaultTokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTokenLifetime : TimeSpan with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la durata predefinita utilizzata nei token rilasciati.</summary>
        <value>La durata predefinita da utilizzare nei token emessi. Il valore predefinito è 1 giorno.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenType">
      <MemberSignature Language="C#" Value="public string DefaultTokenType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultTokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTokenType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultTokenType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTokenType : string with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di token predefinito utilizzato nel rilascio del token.</summary>
        <value>Restituisce una stringa che contiene il tipo di token predefinito.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I valori stringa vengono specificati nel formato URI; ad esempio, per il tipo di token SAML 1.1, il valore seguente è lo stringa: http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1.  
  
 Il valore predefinito è impostato il tipo di token SAML 1.1.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore specificato è <see langword="null" /> o vuoto.</exception>
        <exception cref="T:System.ArgumentException">Il valore specificato non è definito nei gestori di token.</exception>
      </Docs>
    </Member>
    <Member MemberName="DisableWsdl">
      <MemberSignature Language="C#" Value="public bool DisableWsdl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableWsdl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DisableWsdl" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableWsdl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableWsdl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableWsdl : bool with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DisableWsdl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se la generazione WSDL deve essere abilitata per il servizio del token di sicurezza (STS).</summary>
        <value>
          <see langword="true" /> per abilitare la generazione WSDL per il servizio token di sicurezza; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumTokenLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan MaximumTokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaximumTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.MaximumTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaximumTokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumTokenLifetime : TimeSpan with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.MaximumTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'intervallo massimo di token per un token pubblicato.</summary>
        <value>L'intervallo massimo di token per un token pubblicato. Il valore predefinito è 1 giorno.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenService">
      <MemberSignature Language="C#" Value="public Type SecurityTokenService { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type SecurityTokenService" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityTokenService As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ SecurityTokenService { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenService : Type with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta <see cref="T:System.Type" /> del servizio token di sicurezza (STS).</summary>
        <value>Tipo di servizio del token di sicurezza. Il tipo deve derivare dalla classe <see cref="T:System.IdentityModel.SecurityTokenService" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe specificata nella <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService%2A> proprietà deve implementare un costruttore che accetta un parametro di tipo <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il valore specificato non può essere assegnato come <see cref="T:System.IdentityModel.SecurityTokenService" />.</exception>
        <exception cref="T:System.ArgumentNullException">Il valore specificato è <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService" />
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SigningCredentials ^ SigningCredentials { System::IdentityModel::Tokens::SigningCredentials ^ get(); void set(System::IdentityModel::Tokens::SigningCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningCredentials : System.IdentityModel.Tokens.SigningCredentials with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta le credenziali di firma.</summary>
        <value>Credenziali di firma.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  La proprietà <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials%2A> viene ignorata durante l'implementazione di un servizio token di sicurezza (STS) attivo. È invece necessario impostare il certificato di servizio tramite la proprietà <xref:System.ServiceModel.ServiceHostBase.Credentials%2A> sull'host del servizio che ospita il servizio token di sicurezza. L'host del servizio utilizzato per un servizio token di sicurezza attivo è rappresentato dalla classe <xref:System.ServiceModel.Security.WSTrustServiceHost>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenIssuerName">
      <MemberSignature Language="C#" Value="public string TokenIssuerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TokenIssuerName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />
      <MemberSignature Language="VB.NET" Value="Public Property TokenIssuerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TokenIssuerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TokenIssuerName : string with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'autorità emittente in modo che possa essere impostato nel token rilasciato.</summary>
        <value>Nome dell'autorità emittente.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Si è tentato di impostare la proprietà su <see langword="null" /> o su una stringa vuota.</exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrust13RequestSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer WSTrust13RequestSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer WSTrust13RequestSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13RequestSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrust13RequestSerializer As WSTrust13RequestSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrust13RequestSerializer ^ WSTrust13RequestSerializer { System::IdentityModel::Protocols::WSTrust::WSTrust13RequestSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrust13RequestSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrust13RequestSerializer : System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13RequestSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il serializzatore di richiesta (RST) WS-Trust 1.3.</summary>
        <value>Serializzatore della richiesta WS-Trust 1.3 (RST).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il valore specificato è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrust13ResponseSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer WSTrust13ResponseSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer WSTrust13ResponseSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13ResponseSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrust13ResponseSerializer As WSTrust13ResponseSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrust13ResponseSerializer ^ WSTrust13ResponseSerializer { System::IdentityModel::Protocols::WSTrust::WSTrust13ResponseSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrust13ResponseSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrust13ResponseSerializer : System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13ResponseSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il serializzatore di risposta (RSTR) WS-Trust 1.3.</summary>
        <value>Serializzatore della risposta WS-Trust 1.3 (RSTR).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il valore specificato è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrustFeb2005RequestSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer WSTrustFeb2005RequestSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer WSTrustFeb2005RequestSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005RequestSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrustFeb2005RequestSerializer As WSTrustFeb2005RequestSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005RequestSerializer ^ WSTrustFeb2005RequestSerializer { System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005RequestSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005RequestSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrustFeb2005RequestSerializer : System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005RequestSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il serializzatore di richiesta (RST) WS-Trust febbraio 2005.</summary>
        <value>Serializzatore della richiesta WS-Trust Feb 2005.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il valore specificato è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrustFeb2005ResponseSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer WSTrustFeb2005ResponseSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer WSTrustFeb2005ResponseSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005ResponseSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrustFeb2005ResponseSerializer As WSTrustFeb2005ResponseSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005ResponseSerializer ^ WSTrustFeb2005ResponseSerializer { System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005ResponseSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005ResponseSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrustFeb2005ResponseSerializer : System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005ResponseSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il serializzatore di risposta (RSTR) WS-Trust febbraio 2005.</summary>
        <value>Serializzatore della risposta WS-Trust Feb 2005.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il valore specificato è <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>