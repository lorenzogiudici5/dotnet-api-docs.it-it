<Type Name="TableProvider" FullName="System.Web.DynamicData.ModelProviders.TableProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f4f8a76b9e5af1501e7250afb10cf4785fcbc8e" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39961740" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TableProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TableProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.ModelProviders.TableProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TableProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableProvider abstract" />
  <TypeSignature Language="F#" Value="type TableProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a8cdc-101">Fornisce la classe base per i provider di tabelle Dynamic Data.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a8cdc-101">Provides the base class for Dynamic Data table providers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8cdc-102">I provider di tabella devono estendere questa classe.</span><span class="sxs-lookup"><span data-stu-id="a8cdc-102">Table providers must extend this class.</span></span> <span data-ttu-id="a8cdc-103">Classi LINQ to SQL e ADO.NET Entity data model sono i provider che estendono questa classe.</span><span class="sxs-lookup"><span data-stu-id="a8cdc-103">LINQ to SQL classes and the ADO.NET Entity data model are providers that extend this class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TableProvider (System.Web.DynamicData.ModelProviders.DataModelProvider model);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.ModelProviders.DataModelProvider model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ModelProviders.TableProvider.#ctor(System.Web.DynamicData.ModelProviders.DataModelProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (model As DataModelProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TableProvider(System::Web::DynamicData::ModelProviders::DataModelProvider ^ model);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.ModelProviders.TableProvider : System.Web.DynamicData.ModelProviders.DataModelProvider -&gt; System.Web.DynamicData.ModelProviders.TableProvider" Usage="new System.Web.DynamicData.ModelProviders.TableProvider model" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="model" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
      </Parameters>
      <Docs>
        <param name="model">
          <span data-ttu-id="a8cdc-104">Modello a cui appartiene la colonna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-104">The model that the table belongs to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8cdc-105">Inizializza una nuova istanza della classe <see cref="T:System.Web.DynamicData.ModelProviders.TableProvider" /> che deve essere utilizzata da un'istanza di una classe ereditata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-105">Initializes a new instance of the <see cref="T:System.Web.DynamicData.ModelProviders.TableProvider" /> class for use by an inherited class instance.</span>
          </span>
          <span data-ttu-id="a8cdc-106">Questo costruttore può essere chiamato solo da una classe ereditata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-106">This constructor can only be called by an inherited class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ModelProviders.TableProvider.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Web.DynamicData.ModelProviders.TableProvider.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8cdc-107">Ottiene gli attributi definiti per la tabella rappresentata dal provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-107">Gets the attributes that are defined for the table that is represented by this provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8cdc-108">Raccolta di attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-108">The attribute collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDelete(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ModelProviders.TableProvider.CanDelete(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanDelete (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanDelete(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanDelete : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanDelete : System.Security.Principal.IPrincipal -&gt; bool" Usage="tableProvider.CanDelete principal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="a8cdc-109">Utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-109">The user.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8cdc-110">Ottiene un valore che indica se l'utente può eliminare elementi dalla tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-110">Gets a value that indicates whether the user is allowed to delete items from the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8cdc-111">
            <see langword="true" /> se l'utente può eliminare elementi dalla tabella; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-111">
              <see langword="true" /> if the user is allowed to delete items from the table; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanInsert(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ModelProviders.TableProvider.CanInsert(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanInsert (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanInsert(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanInsert : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanInsert : System.Security.Principal.IPrincipal -&gt; bool" Usage="tableProvider.CanInsert principal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="a8cdc-112">Utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-112">The user.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8cdc-113">Ottiene un valore che indica se l'utente può inserire elementi nella tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-113">Gets a value that indicates whether the user is allowed to insert items into the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8cdc-114">
            <see langword="true" /> se l'utente può inserire elementi nella tabella; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-114">
              <see langword="true" /> if the user is allowed to insert items into the table; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public virtual bool CanRead (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ModelProviders.TableProvider.CanRead(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanRead (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanRead : System.Security.Principal.IPrincipal -&gt; bool" Usage="tableProvider.CanRead principal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="a8cdc-115">Utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-115">The user.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8cdc-116">Ottiene un valore che indica se l'utente può leggere gli elementi nella tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-116">Gets a value that indicates whether the user is allowed to read items in the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8cdc-117">
            <see langword="true" /> se l'utente può leggere gli elementi nella tabella; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-117">
              <see langword="true" /> if the user is allowed to read items in the table; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanUpdate(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ModelProviders.TableProvider.CanUpdate(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanUpdate (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanUpdate(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanUpdate : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanUpdate : System.Security.Principal.IPrincipal -&gt; bool" Usage="tableProvider.CanUpdate principal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="a8cdc-118">Utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-118">The user.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8cdc-119">Ottiene un valore che indica se l'utente può aggiornare gli elementi nella tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-119">Gets a value that indicates whether the user is allowed to update items in the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8cdc-120">
            <see langword="true" /> se l'utente può aggiornare gli elementi nella tabella; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-120">
              <see langword="true" /> if the user is allowed to update items in the table; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.ModelProviders.ColumnProvider&gt; Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.ModelProviders.ColumnProvider&gt; Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ModelProviders.TableProvider.Columns" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Columns As ReadOnlyCollection(Of ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::ModelProviders::ColumnProvider ^&gt; ^ Columns { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::ModelProviders::ColumnProvider ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.ModelProviders.ColumnProvider&gt;" Usage="System.Web.DynamicData.ModelProviders.TableProvider.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.ModelProviders.ColumnProvider&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8cdc-121">Quando è sottoposto a override in una classe derivata, ottiene l'insieme di colonne di questa tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-121">When overridden in a derived class, gets the collection of columns in this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8cdc-122">Insieme di colonne di questa tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-122">The collection of columns in this table.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextPropertyName">
      <MemberSignature Language="C#" Value="public virtual string DataContextPropertyName { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataContextPropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ModelProviders.TableProvider.DataContextPropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataContextPropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::String ^ DataContextPropertyName {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataContextPropertyName : string with get, set" Usage="System.Web.DynamicData.ModelProviders.TableProvider.DataContextPropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8cdc-123">Ottiene il nome della tabella dal contesto dei dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-123">Gets the name of the table from the data context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8cdc-124">Nome della tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-124">The name of the table.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataModel">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.ModelProviders.DataModelProvider DataModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.DataModelProvider DataModel" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ModelProviders.TableProvider.DataModel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataModel As DataModelProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::ModelProviders::DataModelProvider ^ DataModel { System::Web::DynamicData::ModelProviders::DataModelProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataModel : System.Web.DynamicData.ModelProviders.DataModelProvider" Usage="System.Web.DynamicData.ModelProviders.TableProvider.DataModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.DataModelProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8cdc-125">Ottiene l'oggetto <see cref="T:System.Web.DynamicData.ModelProviders.DataModelProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-125">Gets the <see cref="T:System.Web.DynamicData.ModelProviders.DataModelProvider" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8cdc-126">Oggetto <see cref="T:System.Web.DynamicData.ModelProviders.DataModelProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-126">The <see cref="T:System.Web.DynamicData.ModelProviders.DataModelProvider" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8cdc-127">Per altre informazioni, vedere [ASP.NET Dynamic Data](http://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).</span><span class="sxs-lookup"><span data-stu-id="a8cdc-127">For more information, see [ASP.NET Dynamic Data](http://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public virtual Type EntityType { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ModelProviders.TableProvider.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property Type ^ EntityType {  public:&#xA;Type ^ get(); protected:&#xA; void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityType : Type with get, set" Usage="System.Web.DynamicData.ModelProviders.TableProvider.EntityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8cdc-128">Ottiene o imposta il tipo che rappresenta la tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-128">Gets or sets the type that represents the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8cdc-129">Tipo che rappresenta la tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-129">The type that represents the table.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateForeignKey">
      <MemberSignature Language="C#" Value="public virtual object EvaluateForeignKey (object row, string foreignKeyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateForeignKey(object row, string foreignKeyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ModelProviders.TableProvider.EvaluateForeignKey(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EvaluateForeignKey (row As Object, foreignKeyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EvaluateForeignKey(System::Object ^ row, System::String ^ foreignKeyName);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateForeignKey : obj * string -&gt; obj&#xA;override this.EvaluateForeignKey : obj * string -&gt; obj" Usage="tableProvider.EvaluateForeignKey (row, foreignKeyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
        <Parameter Name="foreignKeyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="row">
          <span data-ttu-id="a8cdc-130">Riga per cui ottenere il valore di chiave esterna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-130">The row to get the foreign-key value for.</span>
          </span>
        </param>
        <param name="foreignKeyName">
          <span data-ttu-id="a8cdc-131">Nome della colonna di chiave esterna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-131">The name of the foreign-key column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8cdc-132">Restituisce il valore di una chiave esterna per la riga specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-132">Returns the value of a foreign key for the specified row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8cdc-133">Chiave esterna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-133">The foreign key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuery">
      <MemberSignature Language="C#" Value="public abstract System.Linq.IQueryable GetQuery (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQuery(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ModelProviders.TableProvider.GetQuery(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetQuery (context As Object) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Linq::IQueryable ^ GetQuery(System::Object ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetQuery : obj -&gt; System.Linq.IQueryable" Usage="tableProvider.GetQuery context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a8cdc-134">Contesto dati della tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-134">The data context for the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8cdc-135">Quando è sottoposto a override in una classe derivata, restituisce l'oggetto <see cref="T:System.Linq.IQueryable" /> che a sua volta restituisce gli elementi della tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-135">When overridden in a derived class, returns the <see cref="T:System.Linq.IQueryable" /> object that in turn returns the elements of the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8cdc-136">Oggetto <see cref="T:System.Linq.IQueryable" /> che restituisce gli elementi della tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-136">An <see cref="T:System.Linq.IQueryable" /> object that returns the elements of the table.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ModelProviders.TableProvider.GetTypeDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeDescriptor () As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeDescriptor : unit -&gt; System.ComponentModel.ICustomTypeDescriptor&#xA;override this.GetTypeDescriptor : unit -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="tableProvider.GetTypeDescriptor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8cdc-137">Ottiene il descrittore di tipi per la tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-137">Gets the type descriptor for the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8cdc-138">Descrittore di tipi per la tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-138">The type descriptor for the table.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ModelProviders.TableProvider.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::String ^ Name {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.DynamicData.ModelProviders.TableProvider.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8cdc-139">Ottiene il nome della tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-139">Gets the name of the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8cdc-140">Nome della tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-140">The name of the table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8cdc-141">In genere, questo è il nome della proprietà della tabella nella classe del contesto dati.</span><span class="sxs-lookup"><span data-stu-id="a8cdc-141">Typically, this is the name of the table property in the data-context class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentEntityType">
      <MemberSignature Language="C#" Value="public virtual Type ParentEntityType { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ParentEntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ModelProviders.TableProvider.ParentEntityType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ParentEntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property Type ^ ParentEntityType {  public:&#xA;Type ^ get(); protected:&#xA; void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParentEntityType : Type with get, set" Usage="System.Web.DynamicData.ModelProviders.TableProvider.ParentEntityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8cdc-142">Ottiene il tipo padre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-142">Gets the parent type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8cdc-143">Tipo padre se l'entità dispone di un padre; in caso contrario, istanza della classe <see cref="T:System.Data.Metadata.Edm.EntityType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-143">The parent type if the entity has a parent; otherwise, an instance of the <see cref="T:System.Data.Metadata.Edm.EntityType" /> class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootEntityType">
      <MemberSignature Language="C#" Value="public virtual Type RootEntityType { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type RootEntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ModelProviders.TableProvider.RootEntityType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RootEntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property Type ^ RootEntityType {  public:&#xA;Type ^ get(); protected:&#xA; void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootEntityType : Type with get, set" Usage="System.Web.DynamicData.ModelProviders.TableProvider.RootEntityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8cdc-144">Ottiene il tipo radice per l'entità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-144">Gets the root type for this entity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8cdc-145">Tipo radice per l'entità se l'entità dispone di un elemento padre; in caso contrario, istanza della classe <see cref="T:System.Data.Metadata.Edm.EntityType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-145">The root type for this entity if the entity has a parent; otherwise, an instance of the <see cref="T:System.Data.Metadata.Edm.EntityType" /> class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ModelProviders.TableProvider.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tableProvider.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8cdc-146">Restituisce la proprietà <see cref="P:System.Web.DynamicData.ModelProviders.TableProvider.Name" /> per l'istanza di <see cref="T:System.Web.DynamicData.ModelProviders.TableProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-146">Returns the <see cref="P:System.Web.DynamicData.ModelProviders.TableProvider.Name" /> property of the <see cref="T:System.Web.DynamicData.ModelProviders.TableProvider" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8cdc-147">Nome dell'istanza di <see cref="T:System.Web.DynamicData.ModelProviders.TableProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-147">The name of the <see cref="T:System.Web.DynamicData.ModelProviders.TableProvider" /> instance.</span>
          </span>
          <span data-ttu-id="a8cdc-148">Se la proprietà <see cref="P:System.Web.DynamicData.ModelProviders.TableProvider.Name" /> è <see langword="null" />, viene restituita la proprietà <see langword="Name" /> della classe base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8cdc-148">If the <see cref="P:System.Web.DynamicData.ModelProviders.TableProvider.Name" /> property is <see langword="null" />, the base class <see langword="Name" /> property is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8cdc-149">Questo metodo è destinato a scopo di debug.</span><span class="sxs-lookup"><span data-stu-id="a8cdc-149">This method is intended for debugging purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>