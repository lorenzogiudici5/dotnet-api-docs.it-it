<Type Name="ITable" FullName="System.Data.Linq.ITable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9d98f1ba77807707cbdd540c70ee9ea706981ed" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30388835" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITable : System.Collections.IEnumerable, System.Linq.IQueryable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITable implements class System.Collections.IEnumerable, class System.Linq.IQueryable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.ITable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITable&#xA;Implements IEnumerable, IQueryable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITable : System::Collections::IEnumerable, System::Linq::IQueryable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="dc32f-101">Oggetto utilizzato per gli scenari di query con tipizzazione debole.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc32f-101">Used for weakly typed query scenarios.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc32f-102">Per ulteriori informazioni sui metodi, vedere <xref:System.Data.Linq.Table%601>.</span><span class="sxs-lookup"><span data-stu-id="dc32f-102">For more information about methods, see <xref:System.Data.Linq.Table%601>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Attach">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc32f-103">Consente di associare le entità deserializzate a una nuova istanza di <see cref="T:System.Data.Linq.DataContext" /> in modo che possano essere aggiornate o eliminate dal database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-103">Allows deserialized entities to be associated with a new instance of a <see cref="T:System.Data.Linq.DataContext" /> so that they can be updated or deleted from the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc32f-104">Per ulteriori informazioni su come utilizzare questo metodo, vedere [il recupero dei dati e operazioni CUD in applicazioni a più livelli (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).</span><span class="sxs-lookup"><span data-stu-id="dc32f-104">For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).</span></span>  
  
 <span data-ttu-id="dc32f-105">Se un membro obbligatorio è manca, un <xref:System.Data.Linq.ChangeConflictException> viene generata durante <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc32f-105">If a required member is missing, a <xref:System.Data.Linq.ChangeConflictException> is thrown during <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ITable.Attach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="dc32f-106">Entità da associare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-106">The entity to be attached.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc32f-107">Associa un'entità a <see cref="T:System.Data.Linq.DataContext" /> in stato non modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-107">Attaches an entity to the <see cref="T:System.Data.Linq.DataContext" /> in an unmodified state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc32f-108">Per ulteriori informazioni su come utilizzare questo metodo, vedere [il recupero dei dati e operazioni CUD in applicazioni a più livelli (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).</span><span class="sxs-lookup"><span data-stu-id="dc32f-108">For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (object entity, bool asModified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(object entity, bool asModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ITable.Attach(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As Object, asModified As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(System::Object ^ entity, bool asModified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="asModified" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="dc32f-109">Insieme di entità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-109">The collection of entities.</span>
          </span>
        </param>
        <param name="asModified">
          <span data-ttu-id="dc32f-110">
            <see langword="true" /> per associare le entità come modificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-110">
              <see langword="true" /> to attach the entities as modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc32f-111">Associa tutte le entità di una raccolta a <see cref="T:System.Data.Linq.DataContext" /> in uno stato modificato o non modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-111">Attaches all entities of a collection to the <see cref="T:System.Data.Linq.DataContext" /> in either a modified or unmodified state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc32f-112">Per ulteriori informazioni su come utilizzare questo metodo, vedere [il recupero dei dati e operazioni CUD in applicazioni a più livelli (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).</span><span class="sxs-lookup"><span data-stu-id="dc32f-112">For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (object entity, object original);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(object entity, object original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ITable.Attach(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As Object, original As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(System::Object ^ entity, System::Object ^ original);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="original" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="dc32f-113">Entità da associare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-113">The entity to be attached.</span>
          </span>
        </param>
        <param name="original">
          <span data-ttu-id="dc32f-114">Istanza dello stesso tipo di entità con membri dati che contengono i valori originali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-114">An instance of the same entity type with data members that contain the original values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc32f-115">Associa un'entità a <see cref="T:System.Data.Linq.DataContext" /> in uno stato modificato o non modificato specificando l'entità e lo stato originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-115">Attaches an entity to the <see cref="T:System.Data.Linq.DataContext" /> in either a modified or unmodified state by specifying both the entity and its original state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc32f-116">Per ulteriori informazioni su come utilizzare questo metodo, vedere [il recupero dei dati e operazioni CUD in applicazioni a più livelli (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).</span><span class="sxs-lookup"><span data-stu-id="dc32f-116">For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AttachAll">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc32f-117">Associa tutte le entità di una raccolta a <see cref="T:System.Data.Linq.DataContext" /> in uno stato modificato o non modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-117">Attaches all entities of a collection to the <see cref="T:System.Data.Linq.DataContext" /> in either a modified or unmodified state.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AttachAll">
      <MemberSignature Language="C#" Value="public void AttachAll (System.Collections.IEnumerable entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AttachAll(class System.Collections.IEnumerable entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachAll (entities As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachAll(System::Collections::IEnumerable ^ entities);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entities" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="entities">
          <span data-ttu-id="dc32f-118">Insieme di entità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-118">The collection of entities.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc32f-119">Associa tutte le entità di una raccolta a <see cref="T:System.Data.Linq.DataContext" /> in uno stato modificato o non modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-119">Attaches all entities of a collection to the <see cref="T:System.Data.Linq.DataContext" /> in either a modified or unmodified state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc32f-120">Per ulteriori informazioni su come utilizzare questo metodo, vedere [il recupero dei dati e operazioni CUD in applicazioni a più livelli (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).</span><span class="sxs-lookup"><span data-stu-id="dc32f-120">For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachAll">
      <MemberSignature Language="C#" Value="public void AttachAll (System.Collections.IEnumerable entities, bool asModified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AttachAll(class System.Collections.IEnumerable entities, bool asModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ITable.AttachAll(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachAll (entities As IEnumerable, asModified As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachAll(System::Collections::IEnumerable ^ entities, bool asModified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entities" Type="System.Collections.IEnumerable" />
        <Parameter Name="asModified" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entities">
          <span data-ttu-id="dc32f-121">Insieme di entità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-121">The collection of entities.</span>
          </span>
        </param>
        <param name="asModified">
          <span data-ttu-id="dc32f-122">
            <see langword="true" /> per associare le entità come modificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-122">
              <see langword="true" /> to attach the entities as modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc32f-123">Associa tutte le entità di una raccolta a <see cref="T:System.Data.Linq.DataContext" /> in uno stato modificato o non modificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-123">Attaches all entities of a collection to the <see cref="T:System.Data.Linq.DataContext" /> in either a modified or unmodified state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc32f-124">Per ulteriori informazioni su come utilizzare questo metodo, vedere [il recupero dei dati e operazioni CUD in applicazioni a più livelli (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).</span><span class="sxs-lookup"><span data-stu-id="dc32f-124">For more information about how to use this method, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Data.Linq.DataContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.DataContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.ITable.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As DataContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::DataContext ^ Context { System::Data::Linq::DataContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.DataContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc32f-125">Ottiene l'oggetto <see cref="T:System.Data.Linq.DataContext" /> utilizzato per recuperare <see cref="T:System.Data.Linq.ITable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-125">Gets the <see cref="T:System.Data.Linq.DataContext" /> that has been used to retrieve this <see cref="T:System.Data.Linq.ITable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc32f-126">Oggetto <see cref="T:System.Data.Linq.DataContext" /> utilizzato per recuperare <see cref="T:System.Data.Linq.ITable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-126">The <see cref="T:System.Data.Linq.DataContext" /> used to retrieve the <see cref="T:System.Data.Linq.ITable" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAllOnSubmit">
      <MemberSignature Language="C#" Value="public void DeleteAllOnSubmit (System.Collections.IEnumerable entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteAllOnSubmit(class System.Collections.IEnumerable entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ITable.DeleteAllOnSubmit(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteAllOnSubmit (entities As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteAllOnSubmit(System::Collections::IEnumerable ^ entities);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entities" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="entities">
          <span data-ttu-id="dc32f-127">Insieme dal quale vengono rimossi tutti gli elementi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-127">The collection from which all items are removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc32f-128">Imposta tutte le entità della raccolta sullo stato <see langword="pending delete" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-128">Puts all entities from the collection into a <see langword="pending delete" /> state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc32f-129">Chiamare <xref:System.Data.Linq.DataContext.SubmitChanges%2A> per eseguire l'eliminazione effettiva nel database.</span><span class="sxs-lookup"><span data-stu-id="dc32f-129">Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteOnSubmit">
      <MemberSignature Language="C#" Value="public void DeleteOnSubmit (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteOnSubmit(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ITable.DeleteOnSubmit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteOnSubmit (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteOnSubmit(System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="dc32f-130">Entità da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-130">The entity to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc32f-131">Imposta un'entità di questa tabella sullo stato <see langword="pending delete" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-131">Puts an entity from this table into a <see langword="pending delete" /> state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc32f-132">Le entità disconnesse devono essere collegate prima di poter essere eliminati.</span><span class="sxs-lookup"><span data-stu-id="dc32f-132">Disconnected entities must be attached before they can be deleted.</span></span> <span data-ttu-id="dc32f-133">Chiamare <xref:System.Data.Linq.DataContext.SubmitChanges%2A> per eseguire l'eliminazione effettiva nel database.</span><span class="sxs-lookup"><span data-stu-id="dc32f-133">Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual deletion in the database.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModifiedMembers">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ModifiedMemberInfo[] GetModifiedMembers (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.Linq.ModifiedMemberInfo[] GetModifiedMembers(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ITable.GetModifiedMembers(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModifiedMembers (entity As Object) As ModifiedMemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::Linq::ModifiedMemberInfo&gt; ^ GetModifiedMembers(System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ModifiedMemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="dc32f-134">Entità dalla quale ottenere la matrice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-134">The entity from which to get the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc32f-135">Restituisce una matrice di membri modificati che contengono i valori correnti e originali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-135">Returns an array of modified members that contain their current and original values.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOriginalEntityState">
      <MemberSignature Language="C#" Value="public object GetOriginalEntityState (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOriginalEntityState(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ITable.GetOriginalEntityState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOriginalEntityState (entity As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOriginalEntityState(System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="dc32f-136">Entità il cui valore originale deve essere recuperato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-136">The entity whose original value is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc32f-137">Recupera i valori originali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-137">Retrieves original values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc32f-138">Copia dell'entità originale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-138">A copy of the original entity.</span>
          </span>
          <span data-ttu-id="dc32f-139">Se l'entità passata non viene registrata il valore è null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-139">The value is null if the entity passed in is not tracked.</span>
          </span>
          <span data-ttu-id="dc32f-140">Prima che il metodo <see cref="T:System.Data.Linq.DataContext" /> possa iniziare a registrare lo stato delle entità scollegate restituite da un client, occorre associarle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-140">Disconnected entities sent back by a client must be attached before the <see cref="T:System.Data.Linq.DataContext" /> can begin to track their state.</span>
          </span>
          <span data-ttu-id="dc32f-141">Lo "stato originale" di un’entità appena associata viene stabilito sulla base dei valori forniti dal client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-141">The "original state" of a newly attached entity is established based on values supplied by the client.</span>
          </span>
          <span data-ttu-id="dc32f-142">Il contesto dati non registra lo stato delle entità scollegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-142">The data context does not track the state of disconnected entities.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc32f-143">Tenere presente quanto segue:</span><span class="sxs-lookup"><span data-stu-id="dc32f-143">Note the following:</span></span>  
  
-   <span data-ttu-id="dc32f-144">L'argomento dell'entità deve essere non null.</span><span class="sxs-lookup"><span data-stu-id="dc32f-144">The entity argument must be non-null.</span></span> <span data-ttu-id="dc32f-145">In caso contrario, viene generata un'eccezione di argomento null.</span><span class="sxs-lookup"><span data-stu-id="dc32f-145">Otherwise, a null argument exception is thrown.</span></span>  
  
-   <span data-ttu-id="dc32f-146">Nel caso l'oggetto fortemente tipizzato (`TEntity`) metodo, il tipo deve essere mappato e deve essere un tipo di entità.</span><span class="sxs-lookup"><span data-stu-id="dc32f-146">In the case of the strongly typed (`TEntity`) method, the type must be mapped and must be an entity type.</span></span> <span data-ttu-id="dc32f-147">Informazioni sull'ID di oggetto, ovvero devono essere nel mapping.</span><span class="sxs-lookup"><span data-stu-id="dc32f-147">That is, it must have object ID information in its mapping.</span></span> <span data-ttu-id="dc32f-148">In caso contrario, viene generata un'eccezione di tipo non corretto.</span><span class="sxs-lookup"><span data-stu-id="dc32f-148">Otherwise, a wrong type exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAllOnSubmit">
      <MemberSignature Language="C#" Value="public void InsertAllOnSubmit (System.Collections.IEnumerable entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAllOnSubmit(class System.Collections.IEnumerable entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ITable.InsertAllOnSubmit(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAllOnSubmit (entities As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAllOnSubmit(System::Collections::IEnumerable ^ entities);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entities" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="entities">
          <span data-ttu-id="dc32f-149">Entità da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-149">The entities to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc32f-150">Aggiunge tutte le entità di una raccolta a <see cref="T:System.Data.Linq.DataContext" /> in stato <see langword="pending insert" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-150">Adds all entities of a collection to the <see cref="T:System.Data.Linq.DataContext" /> in a <see langword="pending insert" /> state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc32f-151">Chiamare <xref:System.Data.Linq.DataContext.SubmitChanges%2A> per eseguire l'effettivo inserimento nel database.</span><span class="sxs-lookup"><span data-stu-id="dc32f-151">Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertOnSubmit">
      <MemberSignature Language="C#" Value="public void InsertOnSubmit (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertOnSubmit(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ITable.InsertOnSubmit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertOnSubmit (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertOnSubmit(System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="dc32f-152">Entità da aggiungere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-152">The entity to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc32f-153">Aggiunge un'entità in stato <see langword="pending insert" /> a questa tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-153">Adds an entity in a <see langword="pending insert" /> state to this table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc32f-154">Chiamare <xref:System.Data.Linq.DataContext.SubmitChanges%2A> per eseguire l'effettivo inserimento nel database.</span><span class="sxs-lookup"><span data-stu-id="dc32f-154">Call <xref:System.Data.Linq.DataContext.SubmitChanges%2A> to perform the actual insertion into the database.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.ITable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc32f-155">Indica se il tipo delle entità contenute in questa istanza di <see cref="T:System.Data.Linq.ITable" /> dispone di una chiave primaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-155">Indicates if the type of the entities contained in this <see cref="T:System.Data.Linq.ITable" /> instance has a primary key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc32f-156">Restituisce <see langword="true" /> se il tipo di entità non dispone di una chiave primaria; in caso contrario, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc32f-156">Returns <see langword="true" /> if the entity type does not have a primary key; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>