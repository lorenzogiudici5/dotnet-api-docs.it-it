<Type Name="DataContext" FullName="System.Data.Linq.DataContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cee16d84105f6a5b751d344d5d4a05a91a1cfa8c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36689473" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.DataContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DataContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContext : IDisposable" />
  <TypeSignature Language="F#" Value="type DataContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e9b78-101">Rappresenta il punto di ingresso principale per il framework LINQ to SQL.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e9b78-101">Represents the main entry point for the LINQ to SQL framework.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-102">Il <xref:System.Data.Linq.DataContext> è l'origine di tutte le entità mappate su una connessione al database.</span><span class="sxs-lookup"><span data-stu-id="e9b78-102">The <xref:System.Data.Linq.DataContext> is the source of all entities mapped over a database connection.</span></span> <span data-ttu-id="e9b78-103">Tiene traccia delle modifiche apportate a tutte le entità recuperate e gestisce una "cache delle identità" che garantisce che le entità recuperate più di una volta sono rappresentate da utilizzando la stessa istanza dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="e9b78-103">It tracks changes that you made to all retrieved entities and maintains an "identity cache" that guarantees that entities retrieved more than one time are represented by using the same object instance.</span></span>  
  
 <span data-ttu-id="e9b78-104">In generale, un <xref:System.Data.Linq.DataContext> istanza è progettata per l'ultimo di una "unità di lavoro" tuttavia l'applicazione definisce questo periodo.</span><span class="sxs-lookup"><span data-stu-id="e9b78-104">In general, a <xref:System.Data.Linq.DataContext> instance is designed to last for one "unit of work" however your application defines that term.</span></span> <span data-ttu-id="e9b78-105">Oggetto <xref:System.Data.Linq.DataContext> è semplice e non è dispendioso da creare.</span><span class="sxs-lookup"><span data-stu-id="e9b78-105">A <xref:System.Data.Linq.DataContext> is lightweight and is not expensive to create.</span></span> <span data-ttu-id="e9b78-106">Una tipica [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] applicazione crea <xref:System.Data.Linq.DataContext> istanze nell'ambito del metodo o come membro di breve durate classi che rappresentano un insieme logico di operazioni di database correlate.</span><span class="sxs-lookup"><span data-stu-id="e9b78-106">A typical [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] application creates <xref:System.Data.Linq.DataContext> instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-107">Inizializza una nuova istanza della classe <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-107">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span>
          </span>
          <span data-ttu-id="e9b78-108">La stringa di connessione utilizzata può essere una stringa di connessione ADO.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-108">The connection string you use can be an ADO.NET connection string.</span>
          </span>
          <span data-ttu-id="e9b78-109">È inoltre possibile specificare un nome file per un file di SQL Server Express o SQL Server Compact.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-109">You can also specify a filename to a SQL Server Express or SQL Server Compact file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : System.Data.IDbConnection -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext connection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="e9b78-110">La connessione usata da [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-110">The connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-111">Inizializza una nuova istanza della classe <see cref="T:System.Data.Linq.DataContext" /> facendo riferimento alla connessione usata da [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-111">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing the connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-112">Oggetto <xref:System.Data.Linq.DataContext> apre e chiude una connessione al database in base alle esigenze se si fornisce una connessione chiusa o una stringa di connessione.</span><span class="sxs-lookup"><span data-stu-id="e9b78-112">A <xref:System.Data.Linq.DataContext> opens and closes a database connection as needed if you provide a closed connection or a connection string.</span></span> <span data-ttu-id="e9b78-113">In generale, dovrebbe essere mai necessario chiamare `Dispose` su un <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-113">In general, you should never have to call `Dispose` on a <xref:System.Data.Linq.DataContext>.</span></span> <span data-ttu-id="e9b78-114">Se si fornisce una connessione aperta, il <xref:System.Data.Linq.DataContext> non verranno chiusi.</span><span class="sxs-lookup"><span data-stu-id="e9b78-114">If you provide an open connection, the <xref:System.Data.Linq.DataContext> will not close it.</span></span> <span data-ttu-id="e9b78-115">Pertanto, non creare un'istanza di un <xref:System.Data.Linq.DataContext> con una connessione aperta a meno che non si dispone di un buon motivo per eseguire questa operazione.</span><span class="sxs-lookup"><span data-stu-id="e9b78-115">Therefore, do not instantiate a <xref:System.Data.Linq.DataContext> with an open connection unless you have a good reason to do this.</span></span> <span data-ttu-id="e9b78-116">In un <xref:System.Transactions> transazione, un <xref:System.Data.Linq.DataContext> non aprire o chiudere una connessione per evitare la promozione.</span><span class="sxs-lookup"><span data-stu-id="e9b78-116">In a <xref:System.Transactions> transaction, a <xref:System.Data.Linq.DataContext> will not open or close a connection to avoid promotion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : System.Data.IDbConnection * System.Data.Linq.Mapping.MappingSource -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext (connection, mapping)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="e9b78-117">Connessione utilizzata da .NET Framework.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-117">The connection used by the .NET Framework.</span>
          </span>
        </param>
        <param name="mapping">
          <span data-ttu-id="e9b78-118">Origine per il mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-118">A source for mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-119">Inizializza una nuova istanza della classe <see cref="T:System.Data.Linq.DataContext" /> facendo riferimento a una connessione e a un'origine del mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-119">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a connection and a mapping source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : string * System.Data.Linq.Mapping.MappingSource -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext (fileOrServerOrConnection, mapping)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="fileOrServerOrConnection">
          <span data-ttu-id="e9b78-120">Questo argomento può corrispondere ai seguenti elementi: Il nome di un file in cui si trova un database SQL Server Express.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-120">This argument can be any one of the following:  The name of a file where a SQL Server Express database resides.</span>
          </span>
          <span data-ttu-id="e9b78-121">Il nome di un server in cui è presente un database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-121">The name of a server where a database is present.</span>
          </span>
          <span data-ttu-id="e9b78-122">In tal caso, il provider utilizza il database predefinito per un utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-122">In this case the provider uses the default database for a user.</span>
          </span>
          <span data-ttu-id="e9b78-123">Stringa di connessione completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-123">A complete connection string.</span>
          </span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="e9b78-124"> passa la stringa al provider senza apportare alcuna modifica.</span><span class="sxs-lookup"><span data-stu-id="e9b78-124"> just passes the string to the provider without modification.</span></span></param>
        <param name="mapping">
          <span data-ttu-id="e9b78-125">Origine per il mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-125">A source for mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-126">Inizializza una nuova istanza della classe <see cref="T:System.Data.Linq.DataContext" /> facendo riferimento a un'origine file e a un'origine mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-126">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source and a mapping source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public DataContext (string connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : string -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileOrServerOrConnection">To be added.</param>
        <param name="connectionString">To be added.</param>
        <summary>
          <span data-ttu-id="e9b78-127">Inizializza una nuova istanza della classe <see cref="T:System.Data.Linq.DataContext" /> facendo riferimento a un'origine file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-127">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeConflicts">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeConflictCollection ChangeConflicts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.ChangeConflictCollection ChangeConflicts" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ChangeConflicts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeConflicts As ChangeConflictCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::ChangeConflictCollection ^ ChangeConflicts { System::Data::Linq::ChangeConflictCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChangeConflicts : System.Data.Linq.ChangeConflictCollection" Usage="System.Data.Linq.DataContext.ChangeConflicts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeConflictCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-128">Ottiene una raccolta di oggetti che hanno provocato conflitti di concorrenza quando è stato chiamato <see cref="M:System.Data.Linq.DataContext.SubmitChanges" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-128">Gets a collection of objects that caused concurrency conflicts when <see cref="M:System.Data.Linq.DataContext.SubmitChanges" /> was called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9b78-129">Raccolta di oggetti che hanno provocato conflitti di concorrenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-129">A collection of objects that caused concurrency conflicts.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-130">Nell'esempio seguente viene illustrato come la raccolta può eseguire un'iterazione per recuperare le informazioni sui conflitti.</span><span class="sxs-lookup"><span data-stu-id="e9b78-130">The following example shows how the collection can be iterated over to retrieve conflict information.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.objectchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.objectchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.Linq.DataContext.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-131">Ottiene o imposta un valore che aumenta il periodo di timeout per le query che in caso contrario scadrebbero durante il periodo di timeout predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-131">Gets or sets a value that increases the time-out period for queries that would otherwise time out during the default time-out period.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9b78-132">Valore integer che aumenta il periodo di timeout per le query che in caso contrario scadrebbero durante il periodo di timeout predefinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-132">An integer value that increases the time-out period for queries that would otherwise time out during the default time-out period.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-133">Questa proprietà ottiene o imposta il timeout del comando utilizzato per eseguire comandi generati (`IDbCommands`).</span><span class="sxs-lookup"><span data-stu-id="e9b78-133">This property gets or sets the command time-out used to execute generated commands (`IDbCommands`).</span></span> <span data-ttu-id="e9b78-134">Per ulteriori informazioni, vedere <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-134">For more information, see <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span></span>  
  
 <span data-ttu-id="e9b78-135">Quando questa proprietà non è impostata, il valore predefinito di <xref:System.Data.IDbCommand.CommandTimeout%2A> viene utilizzato per l'esecuzione di comandi di query.</span><span class="sxs-lookup"><span data-stu-id="e9b78-135">When this property is not set, the default value of <xref:System.Data.IDbCommand.CommandTimeout%2A> is used for query command execution.</span></span> <span data-ttu-id="e9b78-136">Il valore predefinito viene impostato dal provider di archiviazione.</span><span class="sxs-lookup"><span data-stu-id="e9b78-136">This default value is set by the storage provider.</span></span> <span data-ttu-id="e9b78-137">Si noti che alcuni provider possono generare eccezioni se questo valore è impostato su un valore diverso da zero.</span><span class="sxs-lookup"><span data-stu-id="e9b78-137">Note that some providers may throw exceptions if this value is set to a non-zero value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbConnection ^ Connection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.Common.DbConnection" Usage="System.Data.Linq.DataContext.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-138">Ottiene la connessione utilizzata dal framework.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-138">Gets the connection used by the framework.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9b78-139">Connessione utilizzata dal framework.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-139">The connection used by the framework.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-140">È possibile utilizzare questa proprietà per l'interoperabilità con codice ADO.NET relazionale.</span><span class="sxs-lookup"><span data-stu-id="e9b78-140">You can use this property to interoperate with relational ADO.NET code.</span></span>  
  
 <span data-ttu-id="e9b78-141">Verrà chiusa la connessione restituita a meno che non è stato aperto in modo esplicito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="e9b78-141">The returned connection will be closed unless it has been explicitly opened by the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabase">
      <MemberSignature Language="C#" Value="public void CreateDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateDatabase();" />
      <MemberSignature Language="F#" Value="member this.CreateDatabase : unit -&gt; unit" Usage="dataContext.CreateDatabase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-142">Crea un database nel server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-142">Creates a database on the server.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-143">Il nome del database viene derivato utilizzando l'algoritmo seguente:</span><span class="sxs-lookup"><span data-stu-id="e9b78-143">The name of the database is derived by using the following algorithm:</span></span>  
  
1. <span data-ttu-id="e9b78-144">Se un database viene identificato nella stringa di connessione, viene utilizzato il relativo nome.</span><span class="sxs-lookup"><span data-stu-id="e9b78-144">If a database is identified in the connection string, its name is used.</span></span>  
1. <span data-ttu-id="e9b78-145">Se un <xref:System.Data.Linq.Mapping.DatabaseAttribute> attributo è presente, il relativo <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> proprietà viene utilizzata come nome del database.</span><span class="sxs-lookup"><span data-stu-id="e9b78-145">If a <xref:System.Data.Linq.Mapping.DatabaseAttribute> attribute is present, its <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> property is used as the name of the database.</span></span>  
1. <span data-ttu-id="e9b78-146">Se non vi è alcun tag di database nella stringa di connessione e un oggetto fortemente tipizzato <xref:System.Data.Linq.DataContext> viene utilizzato un database con lo stesso nome di <xref:System.Data.Linq.DataContext> eredita classe viene creata.</span><span class="sxs-lookup"><span data-stu-id="e9b78-146">If there is no database tag in the connection string and a strongly typed <xref:System.Data.Linq.DataContext> is used, a database that has the same name as the <xref:System.Data.Linq.DataContext> inheriting class is created.</span></span>  
1. <span data-ttu-id="e9b78-147">Se un debole tipizzato <xref:System.Data.Linq.DataContext> viene utilizzata, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e9b78-147">If a weakly typed <xref:System.Data.Linq.DataContext> is used, an exception is thrown.</span></span>  
1. <span data-ttu-id="e9b78-148">Se il <xref:System.Data.Linq.DataContext> è stato creato utilizzando un nome di file, la creazione del database corrispondente a tale nome.</span><span class="sxs-lookup"><span data-stu-id="e9b78-148">If the <xref:System.Data.Linq.DataContext> has been created by using a file name, the database corresponding to that file name is created.</span></span>  
     
  
## Examples  
 <span data-ttu-id="e9b78-149">Il codice seguente viene illustrato come impostare un database temporaneo e quindi rimuoverlo.</span><span class="sxs-lookup"><span data-stu-id="e9b78-149">The following code shows how to set up a temporary database and then remove it.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMethodCallQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Linq.IQueryable&lt;TResult&gt; CreateMethodCallQuery&lt;TResult&gt; (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Linq.IQueryable`1&lt;!!TResult&gt; CreateMethodCallQuery&lt;TResult&gt;(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Linq::IQueryable&lt;TResult&gt; ^ CreateMethodCallQuery(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.CreateMethodCallQuery : obj * System.Reflection.MethodInfo * obj[] -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="dataContext.CreateMethodCallQuery (instance, methodInfo, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="e9b78-150">Tipo di elementi contenuti nell'insieme restituito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-150">The type of the elements in the returned collection.</span>
          </span>
        </typeparam>
        <param name="instance">
          <span data-ttu-id="e9b78-151">Istanza della chiamata al metodo (l'oggetto corrente).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-151">The instance of the method invocation (the current object).</span>
          </span>
        </param>
        <param name="methodInfo">
          <span data-ttu-id="e9b78-152">
            <see cref="T:System.Reflection.MethodInfo" /> che identifica il metodo CLR corrispondente a un metodo di database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-152">The <see cref="T:System.Reflection.MethodInfo" /> that identifies the CLR method that corresponds to a database method.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="e9b78-153">Matrice di parametri da passare al comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-153">The array of parameters to be passed to the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-154">Esegue la funzione di database con valori di tabella associata al metodo CLR specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-154">Executes the table-valued database function associated with the specified CLR method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9b78-155">Insieme di valori risultanti restituiti dalla query eseguita sul database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-155">A collection of resultant values returned by the database query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-156">Il <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> metodo viene utilizzato nel codice generato automaticamente e funge da proxy per le funzioni di database.</span><span class="sxs-lookup"><span data-stu-id="e9b78-156">The <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseExists">
      <MemberSignature Language="C#" Value="public bool DatabaseExists ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DatabaseExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DatabaseExists" />
      <MemberSignature Language="VB.NET" Value="Public Function DatabaseExists () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DatabaseExists();" />
      <MemberSignature Language="F#" Value="member this.DatabaseExists : unit -&gt; bool" Usage="dataContext.DatabaseExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-157">Determina se il database associato può essere aperto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-157">Determines whether the associated database can be opened.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9b78-158">
            <see langword="true" /> se il database specificato può essere aperto; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-158">
              <see langword="true" /> if the specified database can be opened; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-159">Questo metodo utilizza la connessione nel <xref:System.Data.Linq.DataContext.Connection%2A> proprietà per tentare di aprire il database associato.</span><span class="sxs-lookup"><span data-stu-id="e9b78-159">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to attempt to open the associated database.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9b78-160">L'esempio seguente usa questo metodo per determinare se esiste già un database.</span><span class="sxs-lookup"><span data-stu-id="e9b78-160">The following example uses this method to determine whether a database already exists.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredLoadingEnabled">
      <MemberSignature Language="C#" Value="public bool DeferredLoadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferredLoadingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.DeferredLoadingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferredLoadingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferredLoadingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DeferredLoadingEnabled : bool with get, set" Usage="System.Data.Linq.DataContext.DeferredLoadingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-161">Ottiene o imposta un valore che indica se ritardare il caricamento delle relazioni uno-a-molti o uno-a-uno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-161">Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9b78-162">
            <see langword="true" /> se il caricamento posticipato è abilitato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-162">
              <see langword="true" /> if deferred loading is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-163">Quando il codice che accede a una di queste relazioni, null viene restituito se la relazione è uno a uno, e viene restituita una raccolta vuota se è uno-a-molti.</span><span class="sxs-lookup"><span data-stu-id="e9b78-163">When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many.</span></span> <span data-ttu-id="e9b78-164">Le relazioni possono comunque essere riempite impostando il <xref:System.Data.Linq.DataContext.LoadOptions%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e9b78-164">The relationships can still be filled by setting the <xref:System.Data.Linq.DataContext.LoadOptions%2A> property.</span></span>  
  
 <span data-ttu-id="e9b78-165">Lo scenario principale per questa proprietà è che consentono di estrarre una parte del modello a oggetti e inviarlo (ad esempio, a un servizio Web).</span><span class="sxs-lookup"><span data-stu-id="e9b78-165">The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9b78-166">Se questa proprietà è impostata su `false` dopo l'esecuzione di una query, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e9b78-166">If this property is set to `false` after a query has been executed, an exception is thrown.</span></span> <span data-ttu-id="e9b78-167">Vedere la **le modalità valide** sezione riportata di seguito per ulteriori informazioni.</span><span class="sxs-lookup"><span data-stu-id="e9b78-167">See the **Valid Modes** section below for more information.</span></span>  
  
## <a name="valid-modes"></a><span data-ttu-id="e9b78-168">Modalità valide</span><span class="sxs-lookup"><span data-stu-id="e9b78-168">Valid modes</span></span>  
 <span data-ttu-id="e9b78-169">Il caricamento posticipato richiede rilevamento degli oggetti.</span><span class="sxs-lookup"><span data-stu-id="e9b78-169">Deferred loading requires object tracking.</span></span> <span data-ttu-id="e9b78-170">Sono valide solo le tre modalità seguenti:</span><span class="sxs-lookup"><span data-stu-id="e9b78-170">Only the following three modes are valid:</span></span>  
  
-   <span data-ttu-id="e9b78-171"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="e9b78-171"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span></span> <span data-ttu-id="e9b78-172"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> viene ignorato e considerato `false`.</span><span class="sxs-lookup"><span data-stu-id="e9b78-172"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and inferred to be `false`.</span></span> <span data-ttu-id="e9b78-173">Questo comportamento corrisponde a una sola lettura <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-173">This behavior corresponds to a read-only <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="e9b78-174"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span><span class="sxs-lookup"><span data-stu-id="e9b78-174"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span></span> <span data-ttu-id="e9b78-175"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="e9b78-175"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span></span> <span data-ttu-id="e9b78-176">Questa situazione corrisponde a un <xref:System.Data.Linq.DataContext> che consente agli utenti di caricare un oggetto grafico tramite <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> direttive, ma non abilita il caricamento posticipato.</span><span class="sxs-lookup"><span data-stu-id="e9b78-176">This situation corresponds to a <xref:System.Data.Linq.DataContext> that allows users to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but it does not enable deferred loading.</span></span>  
  
-   <span data-ttu-id="e9b78-177">Sono impostati entrambi su `true`.</span><span class="sxs-lookup"><span data-stu-id="e9b78-177">Both are set to `true`.</span></span> <span data-ttu-id="e9b78-178">Questa è l'impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="e9b78-178">This is the default.</span></span>  
  
 <span data-ttu-id="e9b78-179">I flag non possono essere modificati dopo l'esecuzione di una query.</span><span class="sxs-lookup"><span data-stu-id="e9b78-179">The flags may not be changed after a query has been executed.</span></span> <span data-ttu-id="e9b78-180">Eventuali modifiche apportate dopo l'esecuzione della prima query che utilizza l'oggetto <xref:System.Data.Linq.DataContext> genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e9b78-180">Any change after the execution of the first query that uses that <xref:System.Data.Linq.DataContext> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="C#" Value="public void DeleteDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DeleteDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDatabase();" />
      <MemberSignature Language="F#" Value="member this.DeleteDatabase : unit -&gt; unit" Usage="dataContext.DeleteDatabase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-181">Elimina il database associato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-181">Deletes the associated database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-182">Questo metodo utilizza la connessione nel <xref:System.Data.Linq.DataContext.Connection%2A> proprietà per identificare il database da eliminare.</span><span class="sxs-lookup"><span data-stu-id="e9b78-182">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to identify the database to be deleted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9b78-183">Nell'esempio seguente viene illustrato come eliminare un database che è stato creato temporaneamente.</span><span class="sxs-lookup"><span data-stu-id="e9b78-183">The following example shows how to delete a database that has been temporarily created.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.Linq.DataContext.Dispose" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-184">Rilascia le risorse usate dalla classe <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-184">Releases the resources used by the <see cref="T:System.Data.Linq.DataContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dataContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-185">Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-185">Releases all resources used by the current instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dataContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="e9b78-186">
            <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-186">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-187">Rilascia le risorse non gestite utilizzate dalla classe <see cref="T:System.Data.Linq.DataContext" /> ed eventualmente rilascia la risorsa gestita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-187">Releases the unmanaged resources used by the <see cref="T:System.Data.Linq.DataContext" /> class and optionally releases the managed resource.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public int ExecuteCommand (string command, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteCommand(string command, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteCommand (command As String, ParamArray parameters As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteCommand(System::String ^ command, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteCommand : string * obj[] -&gt; int" Usage="dataContext.ExecuteCommand (command, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="e9b78-188">Comando SQL da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-188">The SQL command to be executed.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="e9b78-189">Matrice di parametri da passare al comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-189">The array of parameters to be passed to the command.</span>
          </span>
          <span data-ttu-id="e9b78-190">Si noti il comportamento seguente: se il numero di oggetti nella matrice è inferiore al numero più elevato identificato nella stringa di comando, viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-190">Note the following behavior:  If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span>
          </span>
          <span data-ttu-id="e9b78-191">Se la matrice contiene oggetti ai quali non viene fatto riferimento nella stringa di comando, non viene generata alcuna eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-191">If the array contains objects that are not referenced in the command string, no exception is thrown.</span>
          </span>
          <span data-ttu-id="e9b78-192">Se uno dei parametri è null, viene convertito in <see langword="DBNull.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-192">If any one of the parameters is null, it is converted to <see langword="DBNull.Value" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-193">Esegue comandi SQL direttamente nel database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-193">Executes SQL commands directly on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9b78-194">Numero di righe modificate dal comando eseguito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-194">The number of rows modified by the executed command.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-195">Questo metodo è un meccanismo pass-through per i casi in cui [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] non risulta particolarmente adatto per un determinato scenario.</span><span class="sxs-lookup"><span data-stu-id="e9b78-195">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not adequately provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="e9b78-196">La sintassi per il comando è quasi identico la sintassi utilizzata per creare un ADO.NET `DataCommand`.</span><span class="sxs-lookup"><span data-stu-id="e9b78-196">The syntax for the command is almost the same as the syntax used to create an ADO.NET `DataCommand`.</span></span> <span data-ttu-id="e9b78-197">L'unica differenza è nel modo in cui i parametri vengono specificati.</span><span class="sxs-lookup"><span data-stu-id="e9b78-197">The only difference is in how the parameters are specified.</span></span> <span data-ttu-id="e9b78-198">In particolare, si specificano parametri racchiudendoli tra parentesi graffe ({...}) ed enumerarli a partire da 0.</span><span class="sxs-lookup"><span data-stu-id="e9b78-198">Specifically, you specify parameters by enclosing them in braces ({…}) and enumerate them starting from 0.</span></span> <span data-ttu-id="e9b78-199">Il parametro è associato all'oggetto ugualmente numerato nella matrice di parametri.</span><span class="sxs-lookup"><span data-stu-id="e9b78-199">The parameter is associated with the equally numbered object in the parameters array.</span></span>  
  
 <span data-ttu-id="e9b78-200">`ExecuteQuery` e `ExecuteCommand` consentono di specificare un numero variabile di argomenti per la sostituzione dei parametri.</span><span class="sxs-lookup"><span data-stu-id="e9b78-200">`ExecuteQuery` and `ExecuteCommand` allow you to specify a variable number of arguments for parameter substitution.</span></span> <span data-ttu-id="e9b78-201">Ad esempio, è possibile specificare i parametri quando si richiama ExecuteQuery\<TResult >:</span><span class="sxs-lookup"><span data-stu-id="e9b78-201">For example, you can specify the parameters when invoking ExecuteQuery\<TResult>:</span></span>  
  
```  
db.ExecuteQuery<Customer>("select * from dbo.Customers where City = {0}", "London");  
```  
  
 <span data-ttu-id="e9b78-202">Inoltre, un altro esempio:</span><span class="sxs-lookup"><span data-stu-id="e9b78-202">And, another example:</span></span>  
  
```  
db.ExecuteCommand("UPDATE Products SET QuantityPerUnit = {0} WHERE ProductID = {1}", "24 boxes", 5);  
```  
  
 <span data-ttu-id="e9b78-203">Nell'esempio seguente viene aperta una connessione e passa un database SQL `UPDATE` comando al motore di SQL.</span><span class="sxs-lookup"><span data-stu-id="e9b78-203">The following example opens a connection and passes a SQL `UPDATE` command to the SQL engine.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqCommunicatingWithDatabase#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCommunicatingWithDatabase/cs/Program.cs#3)]
 [!code-vb[DLinqCommunicatingWithDatabase#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCommunicatingWithDatabase/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicDelete">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicDelete (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicDelete(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicDelete (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicDelete(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteDynamicDelete : obj -&gt; unit" Usage="dataContext.ExecuteDynamicDelete entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="e9b78-204">Entità da eliminare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-204">The entity to be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-205">Viene eseguito nei metodi di override di eliminazione per ridelegare a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] l'attività di generazione ed esecuzione di SQL dinamico per le operazioni di eliminazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-205">Executes, inside delete override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for delete operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-206">Vedere <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-206">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicInsert">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicInsert (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicInsert(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicInsert (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicInsert(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteDynamicInsert : obj -&gt; unit" Usage="dataContext.ExecuteDynamicInsert entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="e9b78-207">Entità da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-207">The entity to be inserted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-208">Viene eseguito nei metodi di override di inserimento per ridelegare a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] l'attività di generazione ed esecuzione di SQL dinamico per le operazioni di inserimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-208">Executes, inside insert override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for insert operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-209">Tenere presenti le considerazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="e9b78-209">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="e9b78-210">Poiché il metodo ha un modificatore protetto, il suo utilizzo richiede la creazione di sottoclassi <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-210">Because the method has a protected modifier, its use requires subclassing <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="e9b78-211">Viene generata un'eccezione se questa operazione non viene chiamata all'interno di un <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operazione.</span><span class="sxs-lookup"><span data-stu-id="e9b78-211">An exception is thrown if this operation is not called inside a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="e9b78-212">Non deve essere chiamato come operazione autonoma all'esterno dell'ambito di un <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operazione.</span><span class="sxs-lookup"><span data-stu-id="e9b78-212">It is not intended to be called as a stand-alone operation outside the scope of a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="e9b78-213"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> stesso chiama metodi di override se sono implementati e i metodi precedenti sono destinati a essere chiamati all'interno di metodi di override.</span><span class="sxs-lookup"><span data-stu-id="e9b78-213"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.</span></span>  
  
-   <span data-ttu-id="e9b78-214">È responsabilità dello sviluppatore per passare l'entità corretta.</span><span class="sxs-lookup"><span data-stu-id="e9b78-214">It is the responsibility of the developer to pass in the correct entity.</span></span> <span data-ttu-id="e9b78-215">L'implementazione verifica che l'entità passato è registrata.</span><span class="sxs-lookup"><span data-stu-id="e9b78-215">The implementation verifies that the passed-in entity is tracked.</span></span> <span data-ttu-id="e9b78-216">Tuttavia, è responsabilità dello sviluppatore di mantenere l'ordine o passare due volte la stessa entità.</span><span class="sxs-lookup"><span data-stu-id="e9b78-216">However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.</span></span>  
  
-   <span data-ttu-id="e9b78-217">È responsabilità dello sviluppatore per richiamare l'API dinamica corretta.</span><span class="sxs-lookup"><span data-stu-id="e9b78-217">It is the responsibility of the developer to invoke the correct dynamic API.</span></span> <span data-ttu-id="e9b78-218">Ad esempio, nelle `Update` eseguire l'override solo di metodo, il <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> metodo può essere chiamato.</span><span class="sxs-lookup"><span data-stu-id="e9b78-218">For example, in the `Update` override method, only the <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> method can be called.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="e9b78-219"> non rileva né verifica se il metodo dinamico richiamato corrisponde all'operazione applicabile.</span><span class="sxs-lookup"><span data-stu-id="e9b78-219"> does not detect or verify whether the invoked dynamic method matches the applicable operation.</span></span> <span data-ttu-id="e9b78-220">I risultati sono indefiniti se viene chiamato un metodo non applicabile (ad esempio, la chiamata <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> per un oggetto da aggiornare).</span><span class="sxs-lookup"><span data-stu-id="e9b78-220">The results are undefined if an inapplicable method is called (for example, calling <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> for an object to be updated).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicUpdate">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicUpdate (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicUpdate(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicUpdate (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicUpdate(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteDynamicUpdate : obj -&gt; unit" Usage="dataContext.ExecuteDynamicUpdate entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="e9b78-221">Entità da aggiornare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-221">The entity to be updated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-222">Viene eseguito nei metodi di override di aggiornamento per ridelegare a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] l'attività di generazione ed esecuzione di SQL dinamico per le operazioni di aggiornamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-222">Executes, inside update override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for update operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-223">Vedere <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-223">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteMethodCall">
      <MemberSignature Language="C#" Value="protected System.Data.Linq.IExecuteResult ExecuteMethodCall (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Data.Linq.IExecuteResult ExecuteMethodCall(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Data::Linq::IExecuteResult ^ ExecuteMethodCall(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteMethodCall : obj * System.Reflection.MethodInfo * obj[] -&gt; System.Data.Linq.IExecuteResult" Usage="dataContext.ExecuteMethodCall (instance, methodInfo, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IExecuteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="e9b78-224">Istanza della chiamata al metodo (l'oggetto corrente).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-224">The instance of the method invocation (the current object).</span>
          </span>
        </param>
        <param name="methodInfo">
          <span data-ttu-id="e9b78-225">Identifica il metodo CLR corrispondente a un metodo di database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-225">Identifies the CLR method that corresponds to a database method.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="e9b78-226">Matrice di parametri da passare al comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-226">The array of parameters to be passed to the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-227">Esegue la stored procedure di database o la funzione scalare associata al metodo CLR specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-227">Executes the stored database procedure or scalar function associated with the specified CLR method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9b78-228">Risultato (valore restituito e parametri di output) dell'esecuzione del metodo specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-228">The result (the return value and output parameters) of executing the specified method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-229">Il <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> metodo viene utilizzato nel codice generato automaticamente e funge da proxy per le funzioni di database.</span><span class="sxs-lookup"><span data-stu-id="e9b78-229">The <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ExecuteQuery (Type elementType, string query, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable ExecuteQuery(class System.Type elementType, string query, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery (elementType As Type, query As String, ParamArray parameters As Object()) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ ExecuteQuery(Type ^ elementType, System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteQuery : Type * string * obj[] -&gt; System.Collections.IEnumerable" Usage="dataContext.ExecuteQuery (elementType, query, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="e9b78-230">Tipo di <see cref="T:System.Collections.Generic.IEnumerable`1" /> da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-230">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span>
          </span>
          <span data-ttu-id="e9b78-231">L'algoritmo per la ricerca delle colonne corrispondenti nel risultato della query nei campi o nelle proprietà dell'oggetto funziona come segue:  Se un campo o una proprietà viene mappata a uno specifico nome di colonna, il nome di colonna sarà incluso nel set di risultati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-231">The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:  If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span>
          </span>
          <span data-ttu-id="e9b78-232">Se non viene mappato un campo o una proprietà, nel set di risultati è prevista una colonna con lo stesso nome del campo o della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-232">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span>
          </span>
          <span data-ttu-id="e9b78-233">Il confronto viene eseguito cercando prima una corrispondenza con distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-233">The comparison is performed by looking for a case-sensitive match first.</span>
          </span>
          <span data-ttu-id="e9b78-234">Se tale corrispondenza non viene trovata, viene eseguita una ricerca successiva di una corrispondenza senza distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-234">If this match is not found, a subsequent search occurs for a case-insensitive match.</span>
          </span>
          <span data-ttu-id="e9b78-235">La query deve restituire tutti i campi e le proprietà registrati dell'oggetto (tranne quelli caricati su base posticipata) quando si verificano tutte le condizioni seguenti:  <c>T</c> è un'entità registrata in modo esplicito da <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-235">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:  <c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
          <span data-ttu-id="e9b78-236">
            <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-236">
              <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="e9b78-237">L'entità contiene una chiave primaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-237">The entity has a primary key.</span>
          </span>
          <span data-ttu-id="e9b78-238">In caso contrario, viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-238">Otherwise an exception is thrown.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="e9b78-239">Query SQL da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-239">The SQL query to be executed.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="e9b78-240">Matrice di parametri da passare al comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-240">The array of parameters to be passed to the command.</span>
          </span>
          <span data-ttu-id="e9b78-241">Si noti il comportamento seguente: se il numero di oggetti nella matrice è inferiore al numero più elevato identificato nella stringa di comando, viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-241">Note the following behavior:  If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span>
          </span>
          <span data-ttu-id="e9b78-242">Se la matrice contiene oggetti ai quali non viene fatto riferimento nella stringa di comando, non viene generata alcuna eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-242">If the array contains objects that are not referenced in the command string, no exception is thrown.</span>
          </span>
          <span data-ttu-id="e9b78-243">Se un parametro è <see langword="null" />, viene convertito in <see langword="DBNull.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-243">If a parameter is <see langword="null" />, it is converted to <see langword="DBNull.Value" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-244">Esegue query SQL direttamente nel database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-244">Executes SQL queries directly on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9b78-245">Insieme di oggetti <see cref="T:System.Collections.Generic.IEnumerable`1" /> restituiti dalla query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-245">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects returned by the query.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; ExecuteQuery&lt;TResult&gt; (string query, params object[] parameters) where TResult : new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; ExecuteQuery&lt;.ctor TResult&gt;(string query, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery(Of TResult As New) (query As String, ParamArray parameters As Object()) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; where TResult : gcnew() System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ ExecuteQuery(System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteQuery : string * obj[] -&gt; seq&lt;'Result (requires 'Result : (new : unit -&gt; 'Result))&gt; (requires 'Result : (new : unit -&gt; 'Result))" Usage="dataContext.ExecuteQuery (query, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="e9b78-246">Tipo di elementi contenuti nell'insieme restituito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-246">The type of the elements in the returned collection.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="e9b78-247">Query SQL da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-247">The SQL query to be executed.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="e9b78-248">Matrice di parametri da passare al comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-248">The array of parameters to be passed to the command.</span>
          </span>
          <span data-ttu-id="e9b78-249">Si noti il comportamento seguente: se il numero di oggetti nella matrice è inferiore al numero più elevato identificato nella stringa di comando, viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-249">Note the following behavior:  If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span>
          </span>
          <span data-ttu-id="e9b78-250">Se la matrice contiene oggetti ai quali non viene fatto riferimento nella stringa di comando, non viene generata alcuna eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-250">If the array contains objects that are not referenced in the command string, no exception is thrown.</span>
          </span>
          <span data-ttu-id="e9b78-251">Se un parametro è null, viene convertito in <see langword="DBNull.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-251">If a parameter is null, it is converted to <see langword="DBNull.Value" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-252">Esegue query SQL direttamente nel database e restituisce oggetti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-252">Executes SQL queries directly on the database and returns objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9b78-253">Insieme di oggetti restituiti dalla query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-253">A collection of objects returned by the query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-254">Questo metodo è un meccanismo pass-through per i casi in cui [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] non fornisce per un determinato scenario.</span><span class="sxs-lookup"><span data-stu-id="e9b78-254">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="e9b78-255">L'algoritmo per colonne corrispondenti nel risultato della query a campi e proprietà nell'oggetto funziona nel modo seguente:</span><span class="sxs-lookup"><span data-stu-id="e9b78-255">The algorithm for matching columns in the result of the query to fields and properties in the object works as follows:</span></span>  
  
-   <span data-ttu-id="e9b78-256">Se un campo o una proprietà viene mappata a un determinato nome di colonna, nel set di risultati è previsto tale nome.</span><span class="sxs-lookup"><span data-stu-id="e9b78-256">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="e9b78-257">Se non viene mappato un campo o una proprietà, nel set di risultati è prevista una colonna con lo stesso nome del campo o della proprietà.</span><span class="sxs-lookup"><span data-stu-id="e9b78-257">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="e9b78-258">Il confronto viene eseguito con la prima ricerca per trovare una corrispondenza tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="e9b78-258">The comparison is performed by first looking for a case-sensitive match.</span></span> <span data-ttu-id="e9b78-259">Se tale corrispondenza non viene trovata, viene eseguita una ricerca successiva per trovare una corrispondenza tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="e9b78-259">If such a match is not found, a subsequent search occurs for a case-insensitive match.</span></span>  
  
-   <span data-ttu-id="e9b78-260">La query deve restituire tutti i campi rilevati e delle proprietà dell'oggetto (oltre a quelle soggette a caricamento posticipato) quando vengono soddisfatte tutte le seguenti:</span><span class="sxs-lookup"><span data-stu-id="e9b78-260">The query must return all the tracked fields and properties of the object (apart from those subject to deferred loading) when all the following are true:</span></span>  
  
    -   <span data-ttu-id="e9b78-261">Se `<T>` un'entità in modo esplicito tiene traccia di <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-261">If `<T>` is an entity explicitly tracked by the <xref:System.Data.Linq.DataContext>.</span></span>  
  
    -   <span data-ttu-id="e9b78-262">ObjectTrackingEnabled è true.</span><span class="sxs-lookup"><span data-stu-id="e9b78-262">ObjectTrackingEnabled is true.</span></span>  
  
    -   <span data-ttu-id="e9b78-263">L'entità contiene una chiave primaria.</span><span class="sxs-lookup"><span data-stu-id="e9b78-263">The entity has a primary key.</span></span>  
  
     <span data-ttu-id="e9b78-264">In caso contrario, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e9b78-264">Otherwise an exception is thrown.</span></span>  
  
-   <span data-ttu-id="e9b78-265">In tutti gli altri casi, la query può recuperare solo un sottoinsieme dei campi registrati e le proprietà dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="e9b78-265">In all other cases, the query can retrieve just a subset of the tracked fields and properties for the object.</span></span>  
  
 <span data-ttu-id="e9b78-266">Il seguente frammento di codice c# viene illustrato un utilizzo di questo metodo:</span><span class="sxs-lookup"><span data-stu-id="e9b78-266">The following C# snippet shows one use for this method:</span></span>  
  
```  
var customers = db.ExecuteQuery<Customer>(@"SELECT CustomerID, CompanyName, ContactName, ContactTitle,   
   Address, City, Region, PostalCode, Country, Phone, Fax  
   FROM   dbo.Customers  
   WHERE  City = {0}", "London");  
  
foreach (Customer c in customers)  
   Console.WriteLine(c.ContactName);  
```  
  
 <span data-ttu-id="e9b78-267">In Visual Basic</span><span class="sxs-lookup"><span data-stu-id="e9b78-267">In Visual Basic</span></span>  
  
```  
Dim customers = db.ExecuteQuery(Of Customer)("SELECT CustomerID, _    CompanyName, ContactName, ContactTitle, _  
   Address, City, Region, PostalCode, Country, Phone, Fax _  
   FROM dbo.Customers _  
WHERE City = {0}", "London")  
  
For Each c As Customer In customers  
    Console.WriteLine(c.ContactName)  
Next  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangeSet">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeSet GetChangeSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ChangeSet GetChangeSet() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetChangeSet" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChangeSet () As ChangeSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ChangeSet ^ GetChangeSet();" />
      <MemberSignature Language="F#" Value="member this.GetChangeSet : unit -&gt; System.Data.Linq.ChangeSet" Usage="dataContext.GetChangeSet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-268">Ottiene gli oggetti modificati monitorati mediante <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-268">Gets the modified objects tracked by <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9b78-269">Il set di oggetti viene restituito come tre raccolte di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-269">The set of objects is returned as three read-only collections.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-270">Tenere presenti le considerazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="e9b78-270">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="e9b78-271"><xref:System.Data.Linq.DataContext.GetChangeSet%2A> potrebbe avere effetti collaterali, ad esempio l'inferenza di inserimento ed eliminare le operazioni che vengono in genere eseguite al momento della <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-271"><xref:System.Data.Linq.DataContext.GetChangeSet%2A> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span></span> <span data-ttu-id="e9b78-272">Gli oggetti utilizzati nelle operazioni seguenti, ad esempio, possono creare operazioni dedotte corrispondenti nell'elenco seguente:</span><span class="sxs-lookup"><span data-stu-id="e9b78-272">For example, objects that are used in the following operations can create corresponding inferred operations in the following list:</span></span>  
  
    -   <span data-ttu-id="e9b78-273"><xref:System.Data.Linq.EntitySet%601.Add%2A> per <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-273"><xref:System.Data.Linq.EntitySet%601.Add%2A> to <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span></span>  
  
    -   <span data-ttu-id="e9b78-274"><xref:System.Data.Linq.EntityRef%601> assegnazione di null (probabilmente a causa della <xref:System.Data.Linq.EntitySet%601.Remove%2A> a <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-274"><xref:System.Data.Linq.EntityRef%601> assignment to null (possibly because of <xref:System.Data.Linq.EntitySet%601.Remove%2A> to <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span></span>  
  
-   <span data-ttu-id="e9b78-275">Il set non può essere ordinato in base ai vincoli di chiave esterna.</span><span class="sxs-lookup"><span data-stu-id="e9b78-275">The set may not be ordered according to foreign key constraints.</span></span>  
  
-   <span data-ttu-id="e9b78-276">I valori generati dal database (ad esempio, valori delle chiavi primari ed esterni, timestamp e così via) non sono disponibili.</span><span class="sxs-lookup"><span data-stu-id="e9b78-276">Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available.</span></span> <span data-ttu-id="e9b78-277">Tali informazioni richiedono l'esecuzione del comando database e forse la propagazione delle informazioni recuperate (ad esempio, chiave esterna dalla chiave primaria).</span><span class="sxs-lookup"><span data-stu-id="e9b78-277">Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).</span></span>  
  
-   <span data-ttu-id="e9b78-278">Il set di oggetti modificati viene calcolato al momento della chiamata.</span><span class="sxs-lookup"><span data-stu-id="e9b78-278">The set of changed objects is computed at the time of the call.</span></span> <span data-ttu-id="e9b78-279">Le chiamate successive alle <xref:System.Data.Linq.DataContext.SubmitChanges%2A> può produrre un set diverso se vengono apportate modifiche aggiuntive.</span><span class="sxs-lookup"><span data-stu-id="e9b78-279">Subsequent calls to <xref:System.Data.Linq.DataContext.SubmitChanges%2A> can produce a different set if additional changes are made.</span></span>  
  
 <span data-ttu-id="e9b78-280">Output quando è stata apportata alcuna modifica viene visualizzata come indicato di seguito:</span><span class="sxs-lookup"><span data-stu-id="e9b78-280">Output when no changes have been made appears as follows:</span></span>  
  
 `{Added: 0, Removed: 0, Modified: 0}`  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#2](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#2)]
 [!code-vb[DLinqDebuggingSupport#2](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCommand (query As IQueryable) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetCommand(System::Linq::IQueryable ^ query);" />
      <MemberSignature Language="F#" Value="member this.GetCommand : System.Linq.IQueryable -&gt; System.Data.Common.DbCommand" Usage="dataContext.GetCommand query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="e9b78-281">Query da cui devono essere recuperate le informazioni sul comando SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-281">The query whose SQL command information is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-282">Ottiene le informazioni sui comandi SQL generati da [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-282">Gets the information about SQL commands generated by [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9b78-283">Oggetto contenente le informazioni sul comando richieste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-283">The requested command information object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-284">Questo metodo è solo un getter e non influisce sulla <xref:System.Data.Linq.DataContext> dello stato.</span><span class="sxs-lookup"><span data-stu-id="e9b78-284">This method is only a getter and does not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
 <span data-ttu-id="e9b78-285">Tenere presenti le considerazioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="e9b78-285">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="e9b78-286">L'argomento deve essere non null.</span><span class="sxs-lookup"><span data-stu-id="e9b78-286">The argument must be non-null.</span></span> <span data-ttu-id="e9b78-287">In caso contrario, viene generata un'eccezione di argomento null.</span><span class="sxs-lookup"><span data-stu-id="e9b78-287">Otherwise, a null argument exception is thrown.</span></span>  
  
-   <span data-ttu-id="e9b78-288">Le eccezioni di conversione di query normali generate durante [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] l'esecuzione della query si applicano a una query che non può essere convertita.</span><span class="sxs-lookup"><span data-stu-id="e9b78-288">Normal query translation exceptions thrown during [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] query execution apply for a query that cannot be translated.</span></span>  
  
-   <span data-ttu-id="e9b78-289">Viene restituito solo il primo comando di query.</span><span class="sxs-lookup"><span data-stu-id="e9b78-289">Only the first query command is returned.</span></span> <span data-ttu-id="e9b78-290">In particolare, i comandi aggiuntivi che vengono utilizzati per il caricamento eager (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) non sono inclusi.</span><span class="sxs-lookup"><span data-stu-id="e9b78-290">Specifically, additional commands that are used for eager loading (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) are not included.</span></span>  
  
-   <span data-ttu-id="e9b78-291"><xref:System.Data.Linq.DataContext> non tiene traccia di operazioni eseguite dall'utente con il comando.</span><span class="sxs-lookup"><span data-stu-id="e9b78-291"><xref:System.Data.Linq.DataContext> does not track what the user does with the command.</span></span> <span data-ttu-id="e9b78-292">Ad esempio, i risultati dell'esecuzione del comando restituito non vengono rilevati e non influiscono sulla <xref:System.Data.Linq.DataContext> dello stato.</span><span class="sxs-lookup"><span data-stu-id="e9b78-292">For example, results from the execution of the returned command are not tracked and do not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#3)]
 [!code-vb[DLinqDebuggingSupport#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDbCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand GetIDbCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.IDbCommand GetIDbCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetIDbCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIDbCommand (query As IQueryable) As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbCommand ^ GetIDbCommand(System::Linq::IQueryable ^ query);" />
      <MemberSignature Language="F#" Value="member this.GetIDbCommand : System.Linq.IQueryable -&gt; System.Data.IDbCommand" Usage="dataContext.GetIDbCommand query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="query">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ITable GetTable (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ITable GetTable(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ITable ^ GetTable(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetTable : Type -&gt; System.Data.Linq.ITable" Usage="dataContext.GetTable type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ITable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="e9b78-293">Tipo degli oggetti da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-293">The type of the objects to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-294">Restituisce una raccolta di oggetti di un determinato tipo, dove il tipo viene definito dal parametro <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-294">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="type" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9b78-295">Raccolta degli oggetti definiti dal parametro <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-295">A collection of objects defined by the <paramref name="type" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-296">Si tratta di una versione con tipizzazione di <xref:System.Data.Linq.DataContext.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-296">This is a weakly typed version of <xref:System.Data.Linq.DataContext.GetTable%2A>.</span></span> <span data-ttu-id="e9b78-297">È importante disporre di una versione con tipizzazione perché è una pratica relativamente comune per costruire le query in modo dinamico.</span><span class="sxs-lookup"><span data-stu-id="e9b78-297">It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically.</span></span> <span data-ttu-id="e9b78-298">Sarebbe scomodo forzare l'applicazione per usare la reflection per chiamare il metodo generico corretto.</span><span class="sxs-lookup"><span data-stu-id="e9b78-298">It would be inconvenient to force the application to use reflection to call the correct generic method.</span></span>  
  
 <span data-ttu-id="e9b78-299">Se raccolta non è disponibile per un particolare tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e9b78-299">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Table&lt;TEntity&gt; GetTable&lt;TEntity&gt; () where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.Table`1&lt;!!TEntity&gt; GetTable&lt;class TEntity&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable(Of TEntity As Class) () As Table(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Linq::Table&lt;TEntity&gt; ^ GetTable();" />
      <MemberSignature Language="F#" Value="member this.GetTable : unit -&gt; System.Data.Linq.Table&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="dataContext.GetTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Table&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TEntity">
          <span data-ttu-id="e9b78-300">Tipo degli oggetti da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-300">The type of the objects to be returned.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="e9b78-301">Restituisce una raccolta di oggetti di un determinato tipo, dove il tipo viene definito dal parametro <paramref name="TEntity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-301">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="TEntity" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9b78-302">Raccolta degli oggetti definiti dal parametro <paramref name="TEntity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-302">A collection of objects defined by the <paramref name="TEntity" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-303">Questo metodo è il punto di ingresso principale per l'esecuzione di query.</span><span class="sxs-lookup"><span data-stu-id="e9b78-303">This method is the main entry point for querying.</span></span> <span data-ttu-id="e9b78-304">Quando un oggetto fortemente tipizzato <xref:System.Data.Linq.DataContext> è create, nuove proprietà generate incapsulano le chiamate a questo metodo.</span><span class="sxs-lookup"><span data-stu-id="e9b78-304">When a strongly typed <xref:System.Data.Linq.DataContext> is created, new generated properties encapsulate calls to this method.</span></span> <span data-ttu-id="e9b78-305">Ad esempio, un `Customers` viene generata proprietà che restituisce `GetTable<Customer>`.</span><span class="sxs-lookup"><span data-stu-id="e9b78-305">For example, a `Customers` property is generated that returns `GetTable<Customer>`.</span></span>  
  
 <span data-ttu-id="e9b78-306">Se raccolta non è disponibile per un particolare tipo, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e9b78-306">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadOptions">
      <MemberSignature Language="C#" Value="public System.Data.Linq.DataLoadOptions LoadOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.DataLoadOptions LoadOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.LoadOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadOptions As DataLoadOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::DataLoadOptions ^ LoadOptions { System::Data::Linq::DataLoadOptions ^ get(); void set(System::Data::Linq::DataLoadOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoadOptions : System.Data.Linq.DataLoadOptions with get, set" Usage="System.Data.Linq.DataContext.LoadOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.DataLoadOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-307">Ottiene o imposta l'oggetto <see cref="T:System.Data.Linq.DataLoadOptions" /> associato a <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-307">Gets or sets the <see cref="T:System.Data.Linq.DataLoadOptions" /> associated with this <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9b78-308">Opzioni di caricamento di prelettura relative ai dati correlati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-308">The prefetch load options for related data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-309">Questa proprietà ottiene o imposta le opzioni che consentono di definire il comportamento di caricamento in background per i membri di caricamento posticipato e l'appartenenza di raccolte correlate.</span><span class="sxs-lookup"><span data-stu-id="e9b78-309">This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Log" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Log { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : System.IO.TextWriter with get, set" Usage="System.Data.Linq.DataContext.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-310">Ottiene o imposta la destinazione in cui scrivere la query o il comando SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-310">Gets or sets the destination to write the SQL query or command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9b78-311">Oggetto <see cref="T:System.IO.TextReader" /> da utilizzare per scrivere il comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-311">The <see cref="T:System.IO.TextReader" /> to use for writing the command.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-312">Impostare questa proprietà su `null` per disabilitare la registrazione di comando.</span><span class="sxs-lookup"><span data-stu-id="e9b78-312">Set this property to `null` to disable command logging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9b78-313">L'esempio seguente mostra il codice SQL generato nella finestra della console prima di visualizzare i risultati della query.</span><span class="sxs-lookup"><span data-stu-id="e9b78-313">The following example displays generated SQL in the console window before it displays the results of the query.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#2)]
 [!code-vb[System.Data.Linq.DataContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mapping">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.MetaModel Mapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaModel Mapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Mapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mapping As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::MetaModel ^ Mapping { System::Data::Linq::Mapping::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mapping : System.Data.Linq.Mapping.MetaModel" Usage="System.Data.Linq.DataContext.Mapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-314">Ottiene <see cref="T:System.Data.Linq.Mapping.MetaModel" /> sul quale è basato il mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-314">Gets the <see cref="T:System.Data.Linq.Mapping.MetaModel" /> on which the mapping is based.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9b78-315">Il mapping tra un database e oggetti del dominio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-315">The mapping between a database and domain objects.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectTrackingEnabled">
      <MemberSignature Language="C#" Value="public bool ObjectTrackingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ObjectTrackingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectTrackingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ObjectTrackingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectTrackingEnabled : bool with get, set" Usage="System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-316">Ottiene o imposta un valore che indica se il rilevamento oggetti è abilitato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-316">Gets or sets a value that indicates whether object tracking is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9b78-317">
            <see langword="true" /> se il rilevamento dell'oggetto è abilitato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-317">
              <see langword="true" /> if the object tracking is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e9b78-318">Il valore predefinito è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-318">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-319">Impostando questa proprietà su `false` migliora le prestazioni in fase di recupero, poiché esistono meno elementi da registrare.</span><span class="sxs-lookup"><span data-stu-id="e9b78-319">Setting this property to `false` improves performance at retrieval time, because there are fewer items to track.</span></span>  
  
 <span data-ttu-id="e9b78-320">Viene generata un'eccezione:</span><span class="sxs-lookup"><span data-stu-id="e9b78-320">An exception is thrown:</span></span>  
  
-   <span data-ttu-id="e9b78-321">Se la proprietà è impostata su `false` dopo l'esecuzione di una query.</span><span class="sxs-lookup"><span data-stu-id="e9b78-321">If the property is set to `false` after a query has been executed.</span></span>  
  
     <span data-ttu-id="e9b78-322">Per altre informazioni, vedere la sezione le modalità valide in <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-322">For more information, see the Valid Modes section in <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="e9b78-323">Se la proprietà è impostata su `false` e <xref:System.Data.Linq.DataContext.SubmitChanges%2A> viene chiamato.</span><span class="sxs-lookup"><span data-stu-id="e9b78-323">If the property is set to `false` and <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="e9b78-324">Se <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> viene `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> viene ignorata e trattata `false`.</span><span class="sxs-lookup"><span data-stu-id="e9b78-324">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and treated as `false`.</span></span> <span data-ttu-id="e9b78-325">In questo caso, il <xref:System.Data.Linq.DataContext> è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="e9b78-325">In this case, the <xref:System.Data.Linq.DataContext> is read-only.</span></span>  
  
 <span data-ttu-id="e9b78-326">Se <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> viene `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> è `false`.</span><span class="sxs-lookup"><span data-stu-id="e9b78-326">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is `false`.</span></span> <span data-ttu-id="e9b78-327">In questo caso <xref:System.Data.Linq.DataContext> consente di caricare un oggetto grafico tramite <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> direttive, ma non abilita il caricamento posticipato.</span><span class="sxs-lookup"><span data-stu-id="e9b78-327">In this case, <xref:System.Data.Linq.DataContext> allows you to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but does not enable deferred loading.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCacheEnabled">
      <MemberSignature Language="C#" Value="public bool QueryCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QueryCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.QueryCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool QueryCacheEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.QueryCacheEnabled : bool with get, set" Usage="System.Data.Linq.DataContext.QueryCacheEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-328">Aggiorna lo stato dell'oggetto utilizzando i dati nel database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-328">Refreshes object state by using data in the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-329">Questo metodo è utile dopo un errore di concorrenza ottimistica per portare gli elementi in uno stato per un altro tentativo.</span><span class="sxs-lookup"><span data-stu-id="e9b78-329">This method is useful after an optimistic concurrency error to bring items into a state for another attempt.</span></span> <span data-ttu-id="e9b78-330">Aggiorna lo stato dei campi primitivi e le proprietà sugli oggetti.</span><span class="sxs-lookup"><span data-stu-id="e9b78-330">It updates the state of the primitive fields and properties on the objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9b78-331">Se un oggetto è presente il *molti* verrà impostato sul lato di una relazione uno-a-molti, la chiave esterna per l'oggetto e il puntatore all'oggetto per l'altro lato della relazione verrà impostato sul nuovo valore.</span><span class="sxs-lookup"><span data-stu-id="e9b78-331">If an object is on the *many* side of a one-to-many relationship, the foreign key on the object will be set and the object pointer for the other side of the relationship will be set to the new value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, System.Collections.IEnumerable entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, class System.Collections.IEnumerable entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entities As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Collections::IEnumerable ^ entities);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Linq.RefreshMode * System.Collections.IEnumerable -&gt; unit" Usage="dataContext.Refresh (mode, entities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="e9b78-332">Valore che specifica la modalità di gestione dei conflitti di concorrenza ottimistica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-332">A value that specifies how optimistic concurrency conflicts are handled.</span>
          </span>
        </param>
        <param name="entities">
          <span data-ttu-id="e9b78-333">Insieme di entità da aggiornare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-333">The collection of entities to be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-334">Aggiorna una raccolta di oggetti entità secondo la modalità specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-334">Refreshes a collection of entity objects according to the specified mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Linq.RefreshMode * obj -&gt; unit" Usage="dataContext.Refresh (mode, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="e9b78-335">Valore che specifica la modalità di gestione dei conflitti di concorrenza ottimistica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-335">A value that specifies how optimistic concurrency conflicts are handled.</span>
          </span>
        </param>
        <param name="entity">
          <span data-ttu-id="e9b78-336">Oggetto da aggiornare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-336">The object to be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-337">Aggiorna un oggetto entità secondo la modalità specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-337">Refreshes an entity object according to the specified mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, params object[] entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object[] entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, ParamArray entities As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, ... cli::array &lt;System::Object ^&gt; ^ entities);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Linq.RefreshMode * obj[] -&gt; unit" Usage="dataContext.Refresh (mode, entities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="e9b78-338">Valore che specifica la modalità di gestione dei conflitti di concorrenza ottimistica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-338">A value that specifies how optimistic concurrency conflicts are handled.</span>
          </span>
        </param>
        <param name="entities">
          <span data-ttu-id="e9b78-339">Matrice di oggetti dell'entità da aggiornare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-339">The array of entity objects to be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-340">Aggiorna una matrice di oggetti entità secondo la modalità specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-340">Refreshes an array of entity objects according to the specified mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubmitChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-341">Calcola il set di oggetti modificati da inserire, aggiornare o eliminare ed esegue i comandi adatti per implementare le modifiche al database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-341">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-342">Se sono presenti per insert, update o delete, i metodi di override <xref:System.Data.Linq.DataContext.SubmitChanges%2A> esegue questi metodi invece il valore predefinito [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] comandi.</span><span class="sxs-lookup"><span data-stu-id="e9b78-342">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 <span data-ttu-id="e9b78-343"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> Avvia una transazione ed eseguirà il rollback se si verifica un'eccezione mentre <xref:System.Data.Linq.DataContext.SubmitChanges%2A> è in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="e9b78-343"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> starts a transaction and will roll back if an exception occurs while <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is executing.</span></span> <span data-ttu-id="e9b78-344">Tuttavia, ciò non rollback delle modifiche in memoria o rilevati dal <xref:System.Data.Linq.DataContext>; tali modifiche saranno necessario eseguire il rollback manualmente.</span><span class="sxs-lookup"><span data-stu-id="e9b78-344">However, this does not roll back the changes in memory or tracked by the <xref:System.Data.Linq.DataContext>; those changes will need to be rolled back manually.</span></span> <span data-ttu-id="e9b78-345">È possibile iniziare con una nuova istanza di <xref:System.Data.Linq.DataContext> se le modifiche in memoria verranno ignorati.</span><span class="sxs-lookup"><span data-stu-id="e9b78-345">You can start with a new instance of the <xref:System.Data.Linq.DataContext> if the changes in memory are to be discarded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public void SubmitChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SubmitChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub SubmitChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SubmitChanges();" />
      <MemberSignature Language="F#" Value="member this.SubmitChanges : unit -&gt; unit" Usage="dataContext.SubmitChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-346">Calcola il set di oggetti modificati da inserire, aggiornare o eliminare ed esegue i comandi adatti per implementare le modifiche al database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-346">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-347">Se sono presenti per insert, update o delete, i metodi di override <xref:System.Data.Linq.DataContext.SubmitChanges%2A> esegue questi metodi invece il valore predefinito [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] comandi.</span><span class="sxs-lookup"><span data-stu-id="e9b78-347">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public virtual void SubmitChanges (System.Data.Linq.ConflictMode failureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubmitChanges(valuetype System.Data.Linq.ConflictMode failureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SubmitChanges (failureMode As ConflictMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SubmitChanges(System::Data::Linq::ConflictMode failureMode);" />
      <MemberSignature Language="F#" Value="abstract member SubmitChanges : System.Data.Linq.ConflictMode -&gt; unit&#xA;override this.SubmitChanges : System.Data.Linq.ConflictMode -&gt; unit" Usage="dataContext.SubmitChanges failureMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="failureMode" Type="System.Data.Linq.ConflictMode" />
      </Parameters>
      <Docs>
        <param name="failureMode">
          <span data-ttu-id="e9b78-348">Azione da intraprendere se l'invio ha esito negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-348">The action to be taken if the submission fails.</span>
          </span>
          <span data-ttu-id="e9b78-349">Gli argomenti validi sono i seguenti:  <see cref="F:System.Data.Linq.ConflictMode.FailOnFirstConflict" /><see cref="F:System.Data.Linq.ConflictMode.ContinueOnConflict" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-349">Valid arguments are as follows:  <see cref="F:System.Data.Linq.ConflictMode.FailOnFirstConflict" /><see cref="F:System.Data.Linq.ConflictMode.ContinueOnConflict" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-350">Invia le modifiche apportate agli oggetti recuperati nel database sottostante e specifica l'azione da intraprendere se l'invio ha esito negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-350">Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-351">Modalità di errore predefinita è <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-351">Default failure mode is <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbTransaction ^ Transaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.Linq.DataContext.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-352">Ottiene o imposta una transazione locale per [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] da usare per accedere al database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-352">Gets or sets a local transaction for the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] to use to access the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9b78-353">Oggetto transazione utilizzato da <see cref="T:System.Data.Linq.DataContext" /> durante l'esecuzione di query e comandi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-353">The transaction object used by the <see cref="T:System.Data.Linq.DataContext" /> when executing queries and commands.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-354">Lo scenario principale per questa proprietà è l'interoperabilità con relazionale [!INCLUDE[vstecado](~/includes/vstecado-md.md)] codice.</span><span class="sxs-lookup"><span data-stu-id="e9b78-354">The primary scenario for this property is interoperability with relational [!INCLUDE[vstecado](~/includes/vstecado-md.md)] code.</span></span> <span data-ttu-id="e9b78-355">Ad esempio, utilizzare questa proprietà quando si scrive la propria `Create` / `Update` / `Delete` metodi per impostare il `Transaction` proprietà sull'oggetto ADO `Command` oggetto.</span><span class="sxs-lookup"><span data-stu-id="e9b78-355">For example, use this property when you write your own `Create`/`Update`/`Delete` methods to set the `Transaction` property on the ADO `Command` object.</span></span>  
  
 <span data-ttu-id="e9b78-356">Tenere presente quanto segue:</span><span class="sxs-lookup"><span data-stu-id="e9b78-356">Note the following:</span></span>  
  
-   <span data-ttu-id="e9b78-357">Se questa proprietà non è stata impostata in modo esplicito, il metodo get restituisce null.</span><span class="sxs-lookup"><span data-stu-id="e9b78-357">If this property has not been explicitly set, the getter returns null.</span></span>  
  
-   <span data-ttu-id="e9b78-358">Se il codice viene eseguito un <xref:System.Transactions.Transaction> contesto, impostazione di questa proprietà genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e9b78-358">If the code is executing in a <xref:System.Transactions.Transaction> context, setting this property throws an exception.</span></span>  
  
-   <span data-ttu-id="e9b78-359">Se questa proprietà viene impostata e un nuovo <xref:System.Transactions.Transaction> è aperto, viene generata un'eccezione quando viene eseguito una query o aggiornamento.</span><span class="sxs-lookup"><span data-stu-id="e9b78-359">If this property is set and a new <xref:System.Transactions.Transaction> is opened, an exception is thrown when a query or update is executed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9b78-360">Converte un oggetto <see cref="T:System.Data.IDataReader" /> esistente in oggetti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-360">Converts an existing <see cref="T:System.Data.IDataReader" /> to objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9b78-361">Ogni riga nel <xref:System.Data.IDataReader> viene convertito in un oggetto di <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-361">Each row in the <xref:System.Data.IDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
```  
public IEnumerable<T> Translate<T>(IDataReader reader) {}  
```  
  
 <span data-ttu-id="e9b78-362">Descrizione: Questo metodo viene utilizzato per convertire un oggetto esistente <xref:System.Data.Common.DbDataReader> agli oggetti.</span><span class="sxs-lookup"><span data-stu-id="e9b78-362">Description: This method is used to convert an existing <xref:System.Data.Common.DbDataReader> to objects.</span></span> <span data-ttu-id="e9b78-363">Ogni riga nel <xref:System.Data.Common.DbDataReader> viene convertito in un oggetto di <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-363">Each row in the <xref:System.Data.Common.DbDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
 <span data-ttu-id="e9b78-364">**Parametri generici:**</span><span class="sxs-lookup"><span data-stu-id="e9b78-364">**Generic parameters:**</span></span>  
  
 <span data-ttu-id="e9b78-365">`T`: Vedere <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-365">`T`: See <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span></span>  
  
 <span data-ttu-id="e9b78-366">**Parametri:**</span><span class="sxs-lookup"><span data-stu-id="e9b78-366">**Parameters:**</span></span>  
  
 <span data-ttu-id="e9b78-367">`Query`: Vedere la descrizione comando sotto <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-367">`Query`: See the description for command under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="e9b78-368">`Parameters`: Vedere la descrizione per i parametri in <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="e9b78-368">`Parameters`: See the description for parameters under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="e9b78-369">**Tipo restituito:**</span><span class="sxs-lookup"><span data-stu-id="e9b78-369">**Return type:**</span></span>  
  
 <span data-ttu-id="e9b78-370"><xref:System.Collections.Generic.IEnumerable%601>: raccolta di oggetti restituiti dalla conversione.</span><span class="sxs-lookup"><span data-stu-id="e9b78-370"><xref:System.Collections.Generic.IEnumerable%601>: collection of objects returned by the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Data.Linq.IMultipleResults Translate (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.IMultipleResults Translate(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (reader As DbDataReader) As IMultipleResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::IMultipleResults ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : System.Data.Common.DbDataReader -&gt; System.Data.Linq.IMultipleResults" Usage="dataContext.Translate reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IMultipleResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="e9b78-371">Elemento <see cref="T:System.Data.IDataReader" /> da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-371">The <see cref="T:System.Data.IDataReader" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-372">Converte un oggetto <see cref="T:System.Data.Common.DbDataReader" /> esistente in oggetti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-372">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9b78-373">Elenco di oggetti restituiti dalla conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-373">A list of objects returned by the conversion.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Translate (Type elementType, System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Translate(class System.Type elementType, class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (elementType As Type, reader As DbDataReader) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Translate(Type ^ elementType, System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : Type * System.Data.Common.DbDataReader -&gt; System.Collections.IEnumerable" Usage="dataContext.Translate (elementType, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="e9b78-374">Tipo di <see cref="T:System.Collections.Generic.IEnumerable`1" /> da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-374">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span>
          </span>
          <span data-ttu-id="e9b78-375">L'algoritmo per la ricerca delle colonne corrispondenti nel risultato nei campi e nelle proprietà dell'oggetto funziona come segue:  Se un campo o una proprietà viene mappata a uno specifico nome di colonna, il nome di colonna sarà incluso nel set di risultati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-375">The algorithm for matching columns in the result to fields and properties in the object works as follows:  If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span>
          </span>
          <span data-ttu-id="e9b78-376">Se non viene mappato un campo o una proprietà, nel set di risultati è prevista una colonna con lo stesso nome del campo o della proprietà.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-376">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span>
          </span>
          <span data-ttu-id="e9b78-377">Il confronto viene eseguito cercando prima una corrispondenza con distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-377">The comparison is performed by looking for a case-sensitive match first.</span>
          </span>
          <span data-ttu-id="e9b78-378">Se tale corrispondenza non viene trovata, viene eseguita una ricerca successiva di una corrispondenza senza distinzione tra maiuscole e minuscole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-378">If this match is not found, a subsequent search is occurs for a case-insensitive match.</span>
          </span>
          <span data-ttu-id="e9b78-379">La query deve restituire tutti i campi e le proprietà registrati dell'oggetto (tranne quelli caricati su base posticipata) quando si verificano tutte le condizioni seguenti:  <c>T</c> è un'entità registrata in modo esplicito da <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-379">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:  <c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
          <span data-ttu-id="e9b78-380">
            <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-380">
              <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="e9b78-381">L'entità contiene una chiave primaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-381">The entity has a primary key.</span>
          </span>
          <span data-ttu-id="e9b78-382">In caso contrario, viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-382">Otherwise an exception is thrown.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="e9b78-383">Elemento <see cref="T:System.Data.IDataReader" /> da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-383">The <see cref="T:System.Data.IDataReader" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-384">Converte un oggetto <see cref="T:System.Data.Common.DbDataReader" /> esistente in oggetti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-384">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9b78-385">Elenco di oggetti restituiti dalla conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-385">A list of objects returned by the conversion.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; Translate&lt;TResult&gt; (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; Translate&lt;TResult&gt;(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate(Of TResult) (reader As DbDataReader) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : System.Data.Common.DbDataReader -&gt; seq&lt;'Result&gt;" Usage="dataContext.Translate reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="e9b78-386">Tipo di <see cref="T:System.Collections.Generic.IEnumerable`1" /> da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-386">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span>
          </span>
        </typeparam>
        <param name="reader">
          <span data-ttu-id="e9b78-387">Elemento <see cref="T:System.Data.IDataReader" /> da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-387">The <see cref="T:System.Data.IDataReader" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9b78-388">Converte un oggetto <see cref="T:System.Data.Common.DbDataReader" /> esistente in oggetti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-388">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9b78-389">Insieme di oggetti restituiti dalla conversione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9b78-389">A collection of objects returned by the conversion.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>