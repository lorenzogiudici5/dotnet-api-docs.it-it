<Type Name="DataLoadOptions" FullName="System.Data.Linq.DataLoadOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68d7a106a236150ca9a1a8a2a5972fb7ae8eee39" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39833076" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataLoadOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataLoadOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.DataLoadOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataLoadOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataLoadOptions sealed" />
  <TypeSignature Language="F#" Value="type DataLoadOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e1e61-101">Fornisce il caricamento e il filtraggio immediati dei dati correlati.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e1e61-101">Provides for immediate loading and filtering of related data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="general"></a><span data-ttu-id="e1e61-102">Generale</span><span class="sxs-lookup"><span data-stu-id="e1e61-102">General</span></span>  
 <span data-ttu-id="e1e61-103">Quando si esegue una query per un oggetto, si recupera in effetti solo l'oggetto richiesto.</span><span class="sxs-lookup"><span data-stu-id="e1e61-103">When you query for an object, you actually retrieve only the object you requested.</span></span> <span data-ttu-id="e1e61-104">Il *correlati* oggetti non vengono recuperati contemporaneamente.</span><span class="sxs-lookup"><span data-stu-id="e1e61-104">The *related* objects are not automatically fetched at the same time.</span></span> <span data-ttu-id="e1e61-105">(Per altre informazioni, vedere [eseguire query tra relazioni](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md).)</span><span class="sxs-lookup"><span data-stu-id="e1e61-105">(For more information, see [Querying Across Relationships](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md).)</span></span>  
  
 <span data-ttu-id="e1e61-106">Il <xref:System.Data.Linq.DataLoadOptions> classe fornisce due metodi per ottenere il caricamento immediato dei dati correlati specificati.</span><span class="sxs-lookup"><span data-stu-id="e1e61-106">The <xref:System.Data.Linq.DataLoadOptions> class provides two methods to achieve immediate loading of specified related data.</span></span> <span data-ttu-id="e1e61-107">Il <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> metodo consente il caricamento immediato dei dati correlati alla destinazione principale.</span><span class="sxs-lookup"><span data-stu-id="e1e61-107">The <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> method allows for immediate loading of data related to the main target.</span></span> <span data-ttu-id="e1e61-108">Il <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> metodo consente di filtrare gli oggetti correlati.</span><span class="sxs-lookup"><span data-stu-id="e1e61-108">The <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> method allows for filtering related objects.</span></span>  
  
## <a name="rules"></a><span data-ttu-id="e1e61-109">Regole</span><span class="sxs-lookup"><span data-stu-id="e1e61-109">Rules</span></span>  
 <span data-ttu-id="e1e61-110">Tenere presenti le seguenti regole relative a <xref:System.Data.Linq.DataLoadOptions> utilizzo:</span><span class="sxs-lookup"><span data-stu-id="e1e61-110">Note the following rules regarding <xref:System.Data.Linq.DataLoadOptions> usage:</span></span>  
  
-   <span data-ttu-id="e1e61-111">Assegnazione di un <xref:System.Data.Linq.DataLoadOptions> a un <xref:System.Data.Linq.DataContext> dopo che è stata eseguita la prima query genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e1e61-111">Assigning a <xref:System.Data.Linq.DataLoadOptions> to a <xref:System.Data.Linq.DataContext> after the first query has been executed generates an exception.</span></span>  
  
-   <span data-ttu-id="e1e61-112">Modifica di un <xref:System.Data.Linq.DataLoadOptions> dopo che è stato assegnato a un <xref:System.Data.Linq.DataContext> genera un'eccezione</span><span class="sxs-lookup"><span data-stu-id="e1e61-112">Modifying a <xref:System.Data.Linq.DataLoadOptions> after it has been assigned to a <xref:System.Data.Linq.DataContext> generates an exception</span></span>  
  
## <a name="cycle-handling"></a><span data-ttu-id="e1e61-113">Gestione del ciclo</span><span class="sxs-lookup"><span data-stu-id="e1e61-113">Cycle Handling</span></span>  
 <span data-ttu-id="e1e61-114"><xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> e <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> direttive non devono creare cicli.</span><span class="sxs-lookup"><span data-stu-id="e1e61-114"><xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> and <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> directives must not create cycles.</span></span> <span data-ttu-id="e1e61-115">Di seguito sono riportati alcuni esempi di tali grafici:</span><span class="sxs-lookup"><span data-stu-id="e1e61-115">The following represent examples of such graphs:</span></span>  
  
-   <span data-ttu-id="e1e61-116">Esempio 1: Self-ricorsivo</span><span class="sxs-lookup"><span data-stu-id="e1e61-116">Example 1: Self recursive</span></span>  
  
    -   `dlo.LoadWith<Employee>(e => e.Reports);`  
  
-   <span data-ttu-id="e1e61-117">Esempio 2: Puntatori all'indietro</span><span class="sxs-lookup"><span data-stu-id="e1e61-117">Example 2: Back-pointers</span></span>  
  
    -   `dlo.LoadWith <Customer>(c => C.Orders);`  
  
    -   `dlo.LoadWith <Order>(o => o.Customer);`  
  
-   <span data-ttu-id="e1e61-118">Esempio 3: Più cicli</span><span class="sxs-lookup"><span data-stu-id="e1e61-118">Example 3: Longer cycles</span></span>  
  
     <span data-ttu-id="e1e61-119">Anche se questo non deve essere eseguita in un modello normalizzato ben, è possibile.</span><span class="sxs-lookup"><span data-stu-id="e1e61-119">Although this should not occur in a well-normalized model, it is possible.</span></span>  
  
    -   `dlo.LoadWith <A>(a => a.Bs);`  
  
    -   `dlo.LoadWith <B>(b => b.Cs);`  
  
    -   `dlo.LoadWith <C>(c => c.As);`  
  
-   <span data-ttu-id="e1e61-120">: Esempio 4 ricorsiva sottoquery</span><span class="sxs-lookup"><span data-stu-id="e1e61-120">Example 4: Self recursive subQueries</span></span>  
  
    -   `dlo.AssociateWith<A>(a=>a.As.Where(a=>a.Id=33));`  
  
-   <span data-ttu-id="e1e61-121">Esempio 5: Le sottoquery ricorsivo più lungo</span><span class="sxs-lookup"><span data-stu-id="e1e61-121">Example 5: Longer recursive subqueries</span></span>  
  
    -   `dlo.AssociateWith<A>(a=>a.Bs.Where(b=>b.Id==3));`  
  
    -   `dlo.AssociateWith<B>(b=>b.As.Where(a=>a.Id==3));`  
  
 <span data-ttu-id="e1e61-122">Di seguito sono riportate alcune regole generali che consentono di comprendere che cosa accade in questi scenari.</span><span class="sxs-lookup"><span data-stu-id="e1e61-122">The following are some general rules that help you understand what occurs in these scenarios.</span></span>  
  
 <span data-ttu-id="e1e61-123">**LoadWith** ogni chiamata a <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> controlla se i cicli sono state introdotte nel grafico.</span><span class="sxs-lookup"><span data-stu-id="e1e61-123">**LoadWith** Each call to <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> checks whether cycles have been introduced into the graph.</span></span> <span data-ttu-id="e1e61-124">Se sono presenti, come illustrato negli esempi 1, 2 e 3, viene generata un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="e1e61-124">If there are, as in Examples 1, 2, and 3, an exception is thrown.</span></span>  
  
 <span data-ttu-id="e1e61-125">**AssociateWith** il motore in fase di esecuzione non si applica le clausole di sottoquery esistente per la relazione all'interno dell'espressione.</span><span class="sxs-lookup"><span data-stu-id="e1e61-125">**AssociateWith** The engine at run time does not apply the existing SubQuery clauses to the relationship inside the expression.</span></span>  
  
-   <span data-ttu-id="e1e61-126">Nell'esempio 4, il `Where` clausola viene eseguita in tutti i `A`, non solo quelli secondari filtrati in base l'espressione di sottoquery stessa (perché sarebbe ricorsivo)</span><span class="sxs-lookup"><span data-stu-id="e1e61-126">In Example 4, the `Where` clause is executed against all `A`, not just the ones sub-filtered by the SubQuery expression itself (because that would be recursive)</span></span>  
  
-   <span data-ttu-id="e1e61-127">Nell'esempio 5, il primo `Where` clausola viene applicata a tutti i `B`s, anche se sono presenti sottoquery in `B`.</span><span class="sxs-lookup"><span data-stu-id="e1e61-127">In Example 5, the first `Where` clause is applied to all the `B`s, even though there are subqueries on `B`.</span></span> <span data-ttu-id="e1e61-128">La seconda `Where` clausola viene applicata a tutti i `A`s anche se sono presenti sottoquery su `A`.</span><span class="sxs-lookup"><span data-stu-id="e1e61-128">The second `Where` clause is applied to all the `A`s even though there are subqueries on `A`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1e61-129">Quando si recupera `Customers` dal database di esempio Northwind, è possibile usare <xref:System.Data.Linq.DataLoadOptions> per specificare che `Orders` deve anche essere recuperati.</span><span class="sxs-lookup"><span data-stu-id="e1e61-129">When you retrieve `Customers` from the Northwind sample database, you can use <xref:System.Data.Linq.DataLoadOptions> to specify that `Orders` is also to be retrieved.</span></span> <span data-ttu-id="e1e61-130">È anche possibile specificare il sottoinsieme di `Orders` da recuperare.</span><span class="sxs-lookup"><span data-stu-id="e1e61-130">You can even specify which subset of `Orders` to retrieve.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLoadOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataLoadOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e1e61-131">Inizializza una nuova istanza della classe <see cref="T:System.Data.Linq.DataLoadOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-131">Initializes a new instance of the <see cref="T:System.Data.Linq.DataLoadOptions" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociateWith">
      <MemberSignature Language="C#" Value="public void AssociateWith (System.Linq.Expressions.LambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociateWith(class System.Linq.Expressions.LambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.AssociateWith(System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociateWith (expression As LambdaExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssociateWith(System::Linq::Expressions::LambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.AssociateWith : System.Linq.Expressions.LambdaExpression -&gt; unit" Usage="dataLoadOptions.AssociateWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="e1e61-132">Identifica la query da utilizzare su un determinato campo o proprietà uno-a-molti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-132">Identifies the query to be used on a particular one-to-many field or property.</span>
          </span>
          <span data-ttu-id="e1e61-133">Tenere presente quanto segue:</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-133">Note the following:</span>
          </span>
          <span data-ttu-id="e1e61-134">Se l'espressione non inizia con un campo o una proprietà che rappresenta una relazione uno-a-molti, viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-134">If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span>
          </span>
          <span data-ttu-id="e1e61-135">Se un operatore non valido viene incluso nell'espressione, viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-135">If an operator other than a valid operator appears in the expression, an exception is thrown.</span>
          </span>
          <span data-ttu-id="e1e61-136">È possibile impostare i seguenti operatori:</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-136">Valid operators are as follows:</span>
          </span>
          <span data-ttu-id="e1e61-137">Dove</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-137">Where</span>
          </span>
          <span data-ttu-id="e1e61-138">OrderBy</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-138">OrderBy</span>
          </span>
          <span data-ttu-id="e1e61-139">ThenBy</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-139">ThenBy</span>
          </span>
          <span data-ttu-id="e1e61-140">OrderByDescending</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-140">OrderByDescending</span>
          </span>
          <span data-ttu-id="e1e61-141">ThenByDescending</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-141">ThenByDescending</span>
          </span>
          <span data-ttu-id="e1e61-142">Take</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-142">Take</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1e61-143">Filtra gli oggetti recuperati per una determinata relazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-143">Filters the objects retrieved for a particular relationship.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1e61-144">Nell'esempio seguente, il ciclo interno esegue l'iterazione solo rispetto a quelle `Orders` che non siano state spedite oggi stesso.</span><span class="sxs-lookup"><span data-stu-id="e1e61-144">In the following example, the inner loop iterates only over those `Orders` that have not been shipped today.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociateWith&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AssociateWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociateWith&lt;T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, object&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.AssociateWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociateWith(Of T) (expression As Expression(Of Func(Of T, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void AssociateWith(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="member this.AssociateWith : System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; -&gt; unit" Usage="dataLoadOptions.AssociateWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="e1e61-145">Tipo sul quale viene eseguita la query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-145">The type that is queried against.</span>
          </span>
          <span data-ttu-id="e1e61-146">Se il tipo non è mappato, viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-146">If the type is unmapped, an exception is thrown.</span>
          </span>
        </typeparam>
        <param name="expression">
          <span data-ttu-id="e1e61-147">Identifica la query da utilizzare su un determinato campo o proprietà uno-a-molti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-147">Identifies the query to be used on a particular one-to-many field or property.</span>
          </span>
          <span data-ttu-id="e1e61-148">Tenere presente quanto segue:</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-148">Note the following:</span>
          </span>
          <span data-ttu-id="e1e61-149">Se l'espressione non inizia con un campo o una proprietà che rappresenta una relazione uno-a-molti, viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-149">If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span>
          </span>
          <span data-ttu-id="e1e61-150">Se un operatore non valido viene incluso nell'espressione, viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-150">If an operator other than a valid operator appears in the expression, an exception is thrown.</span>
          </span>
          <span data-ttu-id="e1e61-151">È possibile impostare i seguenti operatori:</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-151">Valid operators are as follows:</span>
          </span>
          <span data-ttu-id="e1e61-152">Dove</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-152">Where</span>
          </span>
          <span data-ttu-id="e1e61-153">OrderBy</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-153">OrderBy</span>
          </span>
          <span data-ttu-id="e1e61-154">ThenBy</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-154">ThenBy</span>
          </span>
          <span data-ttu-id="e1e61-155">OrderByDescending</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-155">OrderByDescending</span>
          </span>
          <span data-ttu-id="e1e61-156">ThenByDescending</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-156">ThenByDescending</span>
          </span>
          <span data-ttu-id="e1e61-157">Take</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-157">Take</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1e61-158">Filtra gli oggetti recuperati per una determinata relazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-158">Filters objects retrieved for a particular relationship.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1e61-159">Per informazioni su come evitare i cicli, vedere <xref:System.Data.Linq.DataLoadOptions>.</span><span class="sxs-lookup"><span data-stu-id="e1e61-159">For information about how to avoid cycles, see <xref:System.Data.Linq.DataLoadOptions>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1e61-160">Nell'esempio seguente, il ciclo interno esegue l'iterazione solo rispetto a quelle `Orders` che non siano state spedite oggi stesso.</span><span class="sxs-lookup"><span data-stu-id="e1e61-160">In the following example, the inner loop iterates only over those `Orders` that have not been shipped today.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssociationCriteria">
      <MemberSignature Language="C#" Value="public bool GetAssociationCriteria (System.Reflection.MemberInfo memberInfo, out System.Linq.Expressions.LambdaExpression associationCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetAssociationCriteria(class System.Reflection.MemberInfo memberInfo, [out] class System.Linq.Expressions.LambdaExpression&amp; associationCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.GetAssociationCriteria(System.Reflection.MemberInfo,System.Linq.Expressions.LambdaExpression@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetAssociationCriteria(System::Reflection::MemberInfo ^ memberInfo, [Runtime::InteropServices::Out] System::Linq::Expressions::LambdaExpression ^ % associationCriteria);" />
      <MemberSignature Language="F#" Value="member this.GetAssociationCriteria : System.Reflection.MemberInfo *  -&gt; bool" Usage="dataLoadOptions.GetAssociationCriteria (memberInfo, associationCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="associationCriteria" Type="System.Linq.Expressions.LambdaExpression" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memberInfo">To be added.</param>
        <param name="associationCriteria">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmediate">
      <MemberSignature Language="C#" Value="public bool IsImmediate (System.Reflection.MemberInfo memberInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsImmediate(class System.Reflection.MemberInfo memberInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.IsImmediate(System.Reflection.MemberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsImmediate(System::Reflection::MemberInfo ^ memberInfo);" />
      <MemberSignature Language="F#" Value="member this.IsImmediate : System.Reflection.MemberInfo -&gt; bool" Usage="dataLoadOptions.IsImmediate memberInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="memberInfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWith">
      <MemberSignature Language="C#" Value="public void LoadWith (System.Linq.Expressions.LambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadWith(class System.Linq.Expressions.LambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.LoadWith(System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadWith (expression As LambdaExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadWith(System::Linq::Expressions::LambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.LoadWith : System.Linq.Expressions.LambdaExpression -&gt; unit" Usage="dataLoadOptions.LoadWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="e1e61-161">Espressione lambda che identifica il materiale correlato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-161">A lambda expression that identifies the related material.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1e61-162">Recupera i dati specificati correlati alla destinazione principale utilizzando un'espressione lambda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-162">Retrieves specified data related to the main target by using a lambda expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1e61-163">Nell'esempio seguente tutti gli oggetti `Orders` di tutti gli oggetti `Customers` residenti nell'area londinese vengono recuperati quando viene eseguita la query.</span><span class="sxs-lookup"><span data-stu-id="e1e61-163">In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed.</span></span> <span data-ttu-id="e1e61-164">Di conseguenza, l'accesso successivo alla proprietà `Orders` su un oggetto `Customer` non avvia una nuova query di database.</span><span class="sxs-lookup"><span data-stu-id="e1e61-164">As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWith&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void LoadWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadWith&lt;T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, object&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.LoadWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadWith(Of T) (expression As Expression(Of Func(Of T, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void LoadWith(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="member this.LoadWith : System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; -&gt; unit" Usage="dataLoadOptions.LoadWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="e1e61-165">Tipo sul quale viene eseguita la query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-165">Type that is queried against.</span>
          </span>
          <span data-ttu-id="e1e61-166">Se il tipo non è mappato, viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-166">If this type is unmapped, an exception is thrown.</span>
          </span>
        </typeparam>
        <param name="expression">
          <span data-ttu-id="e1e61-167">Identifica il campo o la proprietà da recuperare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-167">Identifies the field or property to be retrieved.</span>
          </span>
          <span data-ttu-id="e1e61-168">Se l'espressione non identifica un campo o una proprietà che rappresenta una relazione uno-a-uno o uno-a-molti, viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-168">If the expression does not identify a field or property that represents a one-to-one or one-to-many relationship, an exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1e61-169">Specifica gli oggetti secondari da recuperare quando viene inviata una query per un oggetto di tipo T.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1e61-169">Specifies which sub-objects to retrieve when a query is submitted for an object of type T.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1e61-170">Non è possibile specificare il caricamento di due livelli di relazioni (ad esempio, `Orders.OrderDetails`).</span><span class="sxs-lookup"><span data-stu-id="e1e61-170">You cannot specify the loading of two levels of relationships (for example, `Orders.OrderDetails`).</span></span> <span data-ttu-id="e1e61-171">In questi scenari è necessario specificare due <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="e1e61-171">In these scenarios you must specify two separate <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> methods.</span></span>  
  
 <span data-ttu-id="e1e61-172">Per evitare i cicli, vedere la sezione Osservazioni sezione <xref:System.Data.Linq.DataLoadOptions>.</span><span class="sxs-lookup"><span data-stu-id="e1e61-172">To avoid cycling, see Remarks section in <xref:System.Data.Linq.DataLoadOptions>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1e61-173">Nell'esempio seguente tutti gli oggetti `Orders` di tutti gli oggetti `Customers` residenti nell'area londinese vengono recuperati quando viene eseguita la query.</span><span class="sxs-lookup"><span data-stu-id="e1e61-173">In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed.</span></span> <span data-ttu-id="e1e61-174">Di conseguenza, l'accesso successivo alla proprietà `Orders` su un oggetto `Customer` non avvia una nuova query di database.</span><span class="sxs-lookup"><span data-stu-id="e1e61-174">As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>