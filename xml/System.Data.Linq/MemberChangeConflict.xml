<Type Name="MemberChangeConflict" FullName="System.Data.Linq.MemberChangeConflict">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62c4959a5e3c49eacd4643239986f0ef90f09dbf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30386915" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MemberChangeConflict" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MemberChangeConflict extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.MemberChangeConflict" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MemberChangeConflict" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberChangeConflict sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c644a-101">Rappresenta una situazione in cui un aggiornamento tentato ha esito negativo perché i valori dei membri sono stati aggiornati dall'ultima lettura del client.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c644a-101">Represents a situation in which an attempted update fails because member values have been updated since the client last read them.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c644a-102">Nell'esempio seguente viene illustrato come recuperare informazioni sui membri in conflitto.</span><span class="sxs-lookup"><span data-stu-id="c644a-102">The following example shows how to retrieve information about members in conflict.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.MemberChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.memberchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.MemberChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.memberchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public object CurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c644a-103">Ottiene il valore corrente del membro in conflitto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-103">Gets the current value of the member in conflict.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c644a-104">Oggetto in conflitto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-104">The object in conflict.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseValue">
      <MemberSignature Language="C#" Value="public object DatabaseValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DatabaseValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.DatabaseValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DatabaseValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DatabaseValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c644a-105">Ottiene il valore di database del membro in conflitto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-105">Gets the database value of the member in conflict.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c644a-106">Valore dell'oggetto in conflitto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-106">The value of the object in conflict.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="public bool IsModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModified" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.IsModified" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsModified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsModified { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c644a-107">Ottiene un valore che indica se i dati dei membri sono stati modificati dall'ultima lettura o dall'ultimo aggiornamento del database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-107">Gets a value that indicates whether the member data has been changed since the last database read or refresh.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c644a-108">
            <see langword="True" /> se i dati dei membri sono stati modificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-108">
              <see langword="True" /> if the member data has been changed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c644a-109">Utilizzare la proprietà per i nuovi valori di tipo merge senza sovrascrivere gli aggiornamenti in sospeso.</span><span class="sxs-lookup"><span data-stu-id="c644a-109">Use the property to merge new values without overwriting pending updates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResolved">
      <MemberSignature Language="C#" Value="public bool IsResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResolved" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.IsResolved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsResolved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResolved { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c644a-110">Ottiene un valore che indica se il conflitto è stato risolto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-110">Gets a value that indicates whether the conflict has been resolved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c644a-111">
            <see langword="True" /> se il conflitto è stato risolto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-111">
              <see langword="True" /> if the conflict has been resolved.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c644a-112">Questa proprietà è di sola lettura e viene aggiornata automaticamente quando vengono risolti i conflitti.</span><span class="sxs-lookup"><span data-stu-id="c644a-112">This property is read-only and is automatically updated as conflicts are resolved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.Member" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c644a-113">Ottiene informazioni relative ai metadati sul membro in conflitto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-113">Gets metadata information about the member in conflict.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c644a-114">Informazioni sul membro in conflitto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-114">Information about the member in conflict.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalValue">
      <MemberSignature Language="C#" Value="public object OriginalValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.OriginalValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c644a-115">Ottiene il valore originale del membro in conflitto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-115">Gets the original value of the member in conflict.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c644a-116">Valore originale del membro in conflitto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-116">The original value of the member in conflict.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c644a-117">Risolve i conflitti fra i membri mantenendo i valori correnti e reimpostando i valori originali di base in modo che corrispondano ai valori più recenti del database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-117">Resolves member conflicts by keeping current values and resetting the baseline original values to match the more recent database values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (System.Data.Linq.RefreshMode refreshMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(valuetype System.Data.Linq.RefreshMode refreshMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.MemberChangeConflict.Resolve(System.Data.Linq.RefreshMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Data::Linq::RefreshMode refreshMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshMode" Type="System.Data.Linq.RefreshMode" />
      </Parameters>
      <Docs>
        <param name="refreshMode">
          <span data-ttu-id="c644a-118">Vedere <see cref="T:System.Data.Linq.RefreshMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-118">See <see cref="T:System.Data.Linq.RefreshMode" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c644a-119">Utilizza un parametro <see cref="T:System.Data.Linq.RefreshMode" /> per specificare automaticamente il valore da impostare come valore corrente per il membro in conflitto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-119">Uses a <see cref="T:System.Data.Linq.RefreshMode" /> parameter to automatically specify the value to set as the current value for the member in conflict.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c644a-120">Gli esempi seguenti mostrano i risultati prodotti utilizzando i vari valori per <xref:System.Data.Linq.RefreshMode>.</span><span class="sxs-lookup"><span data-stu-id="c644a-120">The following examples show what results are produced by using the various values for <xref:System.Data.Linq.RefreshMode>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c644a-121">Nell'esempio seguente i valori correnti vengono sovrascritti con i valori del database.</span><span class="sxs-lookup"><span data-stu-id="c644a-121">The following example overwrites current values with values from the database.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.RefreshMode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#1)]  
  
 <span data-ttu-id="c644a-122">Nell'esempio seguente viene illustrato come scambiare il valore originale con i valori recuperati dal database.</span><span class="sxs-lookup"><span data-stu-id="c644a-122">The following example shows how to swap the original value with the values retrieved from the database.</span></span> <span data-ttu-id="c644a-123">Non viene modificato alcun valore corrente.</span><span class="sxs-lookup"><span data-stu-id="c644a-123">No current value is modified.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.RefreshMode#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#2)]  
  
 <span data-ttu-id="c644a-124">Nell'esempio seguente consente di mantenere i valori correnti che sono stati modificati, ma che aggiorna gli altri valori con i valori del database.</span><span class="sxs-lookup"><span data-stu-id="c644a-124">The following example keeps the current values that have been changed, but updates the other values with database values.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#3](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#3)]
 [!code-vb[System.Data.Linq.RefreshMode#3](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.MemberChangeConflict.Resolve(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resolve (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c644a-125">Valore da impostare come valore corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-125">The value to set as the current value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c644a-126">Specifica il valore da impostare come valore corrente per il membro in conflitto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c644a-126">Specifies the value to set as the current value for the member in conflict.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c644a-127">Il valore impostato è il valore da utilizzare in una successiva <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operazione.</span><span class="sxs-lookup"><span data-stu-id="c644a-127">The value set here is the value to be used in a subsequent <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>