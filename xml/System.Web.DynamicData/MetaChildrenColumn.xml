<Type Name="MetaChildrenColumn" FullName="System.Web.DynamicData.MetaChildrenColumn">
  <TypeSignature Language="C#" Value="public class MetaChildrenColumn : System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaChildrenColumn extends System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaChildrenColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaChildrenColumn&#xA;Inherits MetaColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaChildrenColumn : System::Web::DynamicData::MetaColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.DynamicData.MetaColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="72a31-101">Rappresenta un campo di database che indica una relazione uno-a-molti.</span><span class="sxs-lookup"><span data-stu-id="72a31-101">Represents a database field that indicates a one-to-many relationship.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a31-102">Nelle applicazioni ASP.NET Dynamic Data, la <xref:System.Web.DynamicData.MetaChildrenColumn> classe rappresenta un campo del database che indica una relazione uno-a-molti o una relazione padre-figlio.</span><span class="sxs-lookup"><span data-stu-id="72a31-102">In ASP.NET Dynamic Data applications, the <xref:System.Web.DynamicData.MetaChildrenColumn> class represents a database field that indicates a one-to-many relationship or a parent-child relationship.</span></span>  
  
 <span data-ttu-id="72a31-103">La <xref:System.Web.DynamicData.MetaChildrenColumn> classe rappresenta il campo nella tabella padre della relazione uno-a-molti.</span><span class="sxs-lookup"><span data-stu-id="72a31-103">The <xref:System.Web.DynamicData.MetaChildrenColumn> class represents the field in the parent table of the one-to-many relationship.</span></span> <span data-ttu-id="72a31-104">Tuttavia, è possibile accedere all'oggetto tabella figlio utilizzando il <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="72a31-104">However, you can access the child table object by using the <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> property.</span></span> <span data-ttu-id="72a31-105">È inoltre possibile recuperare il campo di chiave esterna nella tabella figlio utilizzando il <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="72a31-105">You can also retrieve the foreign-key field in the child table by using the <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.MetaColumn" />
    <altmember cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaChildrenColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider entityMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaTable table, class System.Web.DynamicData.ModelProviders.ColumnProvider entityMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (table As MetaTable, entityMember As ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaChildrenColumn(System::Web::DynamicData::MetaTable ^ table, System::Web::DynamicData::ModelProviders::ColumnProvider ^ entityMember);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="entityMember" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="72a31-106">Metatabella.</span><span class="sxs-lookup"><span data-stu-id="72a31-106">The meta table.</span></span></param>
        <param name="entityMember"><span data-ttu-id="72a31-107">Provider della colonna.</span><span class="sxs-lookup"><span data-stu-id="72a31-107">The column provider.</span></span></param>
        <summary><span data-ttu-id="72a31-108">Inizializza una nuova istanza della classe <see cref="T:System.Web.DynamicData.MetaChildrenColumn" />.</span><span class="sxs-lookup"><span data-stu-id="72a31-108">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable ChildTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable ChildTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.ChildTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildTable As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaTable ^ ChildTable { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72a31-109">Ottiene un oggetto che rappresenta la tabella figlio della relazione uno-a-molti.</span><span class="sxs-lookup"><span data-stu-id="72a31-109">Gets an object that represents the child table of the one-to-many relationship.</span></span></summary>
        <value><span data-ttu-id="72a31-110">Oggetto che rappresenta la tabella figlio della relazione uno-a-molti.</span><span class="sxs-lookup"><span data-stu-id="72a31-110">An object that represents the child table of the one-to-many relationship.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a31-111">Utilizzare il <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> proprietà da ottenere un oggetto che rappresenta la tabella figlio della relazione uno-a-molti.</span><span class="sxs-lookup"><span data-stu-id="72a31-111">Use the <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> property to get an object that represents the child table of the one-to-many relationship.</span></span> <span data-ttu-id="72a31-112">È possibile accedere alla tabella padre tramite il <xref:System.Web.DynamicData.MetaColumn.Table%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="72a31-112">You can access the parent table by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Table" />
      </Docs>
    </Member>
    <Member MemberName="ColumnInOtherTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn ColumnInOtherTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn ColumnInOtherTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnInOtherTable As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaColumn ^ ColumnInOtherTable { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72a31-113">Ottiene un oggetto che rappresenta il campo di chiave esterna nella tabella figlio.</span><span class="sxs-lookup"><span data-stu-id="72a31-113">Gets an object that represents the foreign-key field in the child table.</span></span></summary>
        <value><span data-ttu-id="72a31-114">Oggetto che rappresenta il campo di chiave esterna nella tabella figlio.</span><span class="sxs-lookup"><span data-stu-id="72a31-114">An object that represents the foreign-key field in the child table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a31-115">Il <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> proprietà consente di ottenere un riferimento al campo della tabella figlio.</span><span class="sxs-lookup"><span data-stu-id="72a31-115">The <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> property enables you to get a reference to the field in the child table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildrenListPath">
      <MemberSignature Language="C#" Value="public string GetChildrenListPath (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenListPath(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenListPath (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenListPath(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenListPath(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="72a31-116">Riga che contiene il campo di chiave esterna.</span><span class="sxs-lookup"><span data-stu-id="72a31-116">The row that contains the foreign-key field.</span></span></param>
        <summary><span data-ttu-id="72a31-117">Ottiene il percorso della pagina relativa all'azione dell'elenco per la tabella figlio.</span><span class="sxs-lookup"><span data-stu-id="72a31-117">Gets the path of the list-action page for the child table.</span></span></summary>
        <returns><span data-ttu-id="72a31-118">Percorso della pagina relativa all'azione dell'elenco per la tabella figlio.</span><span class="sxs-lookup"><span data-stu-id="72a31-118">The path of the list-action page for the child table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a31-119">Utilizzare il <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> metodo quando si desidera recuperare la pagina di elenco azione per la tabella figlio utilizzando la riga specificata come un elemento padre.</span><span class="sxs-lookup"><span data-stu-id="72a31-119">Use the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> method when you want to retrieve the list-action page for the child table using the specified row as a parent.</span></span> <span data-ttu-id="72a31-120">Il percorso si ottiene aggiungendo un valore di stringa di query all'URL che contiene il valore del campo di chiave esterna specificato nella `row` parametro.</span><span class="sxs-lookup"><span data-stu-id="72a31-120">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="72a31-121">Utilizzando il <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> metodo è equivale a chiamare il <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> metodo e passando il <xref:System.Web.DynamicData.PageAction.List%2A> azione come primo parametro.</span><span class="sxs-lookup"><span data-stu-id="72a31-121">Using the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> method is the same as invoking the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> method and passing the <xref:System.Web.DynamicData.PageAction.List%2A> action as the first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.PageAction.List" />
        <altmember cref="Overload:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildrenPath">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72a31-122">Ottiene il percorso della pagina di azione specificata della tabella figlio.</span><span class="sxs-lookup"><span data-stu-id="72a31-122">Gets the path for the specified action page of the child table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildrenPath">
      <MemberSignature Language="C#" Value="public string GetChildrenPath (string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenPath(string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenPath (action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenPath(System::String ^ action, System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenPath(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="72a31-123">Azione di destinazione.</span><span class="sxs-lookup"><span data-stu-id="72a31-123">The target action.</span></span></param>
        <param name="row"><span data-ttu-id="72a31-124">Riga che contiene il campo di chiave esterna.</span><span class="sxs-lookup"><span data-stu-id="72a31-124">The row that contains the foreign-key field.</span></span></param>
        <summary><span data-ttu-id="72a31-125">Ottiene il percorso della pagina di azione specificata della tabella figlio.</span><span class="sxs-lookup"><span data-stu-id="72a31-125">Gets the path of the specified action page of the child table.</span></span></summary>
        <returns><span data-ttu-id="72a31-126">Percorso della pagina di azione specificata della tabella figlio.</span><span class="sxs-lookup"><span data-stu-id="72a31-126">The path of the specified action page of the child table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a31-127">Il <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> metodo restituisce il percorso della pagina azione specificata per la tabella figlio.</span><span class="sxs-lookup"><span data-stu-id="72a31-127">The <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> method returns the path of the specified action page for the child table.</span></span> <span data-ttu-id="72a31-128">Il percorso restituito è basato su route definite per l'applicazione ASP.NET Dynamic Data e contiene la riga specificata come un elemento padre.</span><span class="sxs-lookup"><span data-stu-id="72a31-128">The path returned is based on the routes that are defined for the ASP.NET Dynamic Data application and has the specified row as a parent.</span></span> <span data-ttu-id="72a31-129">Il percorso si ottiene aggiungendo un valore di stringa di query all'URL che contiene il valore del campo di chiave esterna specificato nella `row` parametro.</span><span class="sxs-lookup"><span data-stu-id="72a31-129">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="72a31-130">Se `row` è `null`, questo metodo restituisce una stringa vuota.</span><span class="sxs-lookup"><span data-stu-id="72a31-130">If `row` is `null`, his method returns an empty string.</span></span>  
  
 <span data-ttu-id="72a31-131">È possibile utilizzare i valori definiti nel <xref:System.Web.DynamicData.PageAction> classe per il `action` parametro.</span><span class="sxs-lookup"><span data-stu-id="72a31-131">You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.PageAction" />
      </Docs>
    </Member>
    <Member MemberName="GetChildrenPath">
      <MemberSignature Language="C#" Value="public string GetChildrenPath (string action, object row, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenPath(string action, object row, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenPath (action As String, row As Object, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenPath(System::String ^ action, System::Object ^ row, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="72a31-132">Azione di destinazione.</span><span class="sxs-lookup"><span data-stu-id="72a31-132">The target action.</span></span></param>
        <param name="row"><span data-ttu-id="72a31-133">Riga che contiene il campo di chiave esterna.</span><span class="sxs-lookup"><span data-stu-id="72a31-133">The row that contains the foreign-key field.</span></span></param>
        <param name="path"><span data-ttu-id="72a31-134">Pagina di destinazione.</span><span class="sxs-lookup"><span data-stu-id="72a31-134">The target page.</span></span></param>
        <summary><span data-ttu-id="72a31-135">Ottiene il percorso della pagina di azione specificata della tabella figlio.</span><span class="sxs-lookup"><span data-stu-id="72a31-135">Gets the path for the specified action page of the child table.</span></span></summary>
        <returns><span data-ttu-id="72a31-136">Percorso della pagina di azione specificata della tabella figlio.</span><span class="sxs-lookup"><span data-stu-id="72a31-136">The path of the specified action page of the child table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a31-137">Il <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> metodo restituisce il percorso della pagina azione specificata per la tabella figlio.</span><span class="sxs-lookup"><span data-stu-id="72a31-137">The <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> method returns the path of the specified action page for the child table.</span></span> <span data-ttu-id="72a31-138">Il percorso è in base al percorso specificato con la riga specificata come un elemento padre.</span><span class="sxs-lookup"><span data-stu-id="72a31-138">The path is based on the specified path with the specified row as a parent.</span></span> <span data-ttu-id="72a31-139">Il percorso si ottiene aggiungendo un valore di stringa di query all'URL che contiene il valore del campo di chiave esterna specificato nella `row` parametro.</span><span class="sxs-lookup"><span data-stu-id="72a31-139">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="72a31-140">Se `row` è `null`, questo metodo restituisce una stringa vuota.</span><span class="sxs-lookup"><span data-stu-id="72a31-140">If `row` is `null`, this method returns an empty string.</span></span> <span data-ttu-id="72a31-141">Se `path` è `null`, <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> metodo restituisce il percorso in base alle route definite per l'applicazione ASP.NET Dynamic Data.</span><span class="sxs-lookup"><span data-stu-id="72a31-141">If `path` is `null`, the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> method returns the path based on the routes defined for the ASP.NET Dynamic Data application.</span></span>  
  
 <span data-ttu-id="72a31-142">È possibile utilizzare i valori definiti nel <xref:System.Web.DynamicData.PageAction> classe per il `action` parametro.</span><span class="sxs-lookup"><span data-stu-id="72a31-142">You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.PageAction" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72a31-143">Inizializza i dati che potrebbero non essere disponibili quando viene chiamato il costruttore.</span><span class="sxs-lookup"><span data-stu-id="72a31-143">Initializes data that might not be available when the constructor is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a31-144">Questo metodo non può essere chiamato direttamente.</span><span class="sxs-lookup"><span data-stu-id="72a31-144">This method cannot be called directly.</span></span> <span data-ttu-id="72a31-145">Per personalizzare l'inizializzazione, è possibile derivare da questa classe ed eseguire l'override di `Initialize` metodo.</span><span class="sxs-lookup"><span data-stu-id="72a31-145">To customize initialization, you can derive from this class and override the `Initialize` method.</span></span> <span data-ttu-id="72a31-146">Se si esegue l'override di questo metodo, chiamare il controllo di base `Initialize` metodo.</span><span class="sxs-lookup"><span data-stu-id="72a31-146">If you override this method, call the base control's `Initialize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManyToMany">
      <MemberSignature Language="C#" Value="public bool IsManyToMany { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManyToMany" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.IsManyToMany" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsManyToMany As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManyToMany { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaChildrenColumn.IsManyToMany</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72a31-147">Ottiene un valore che indica lo stato della relazione molti-a-molti della colonna.</span><span class="sxs-lookup"><span data-stu-id="72a31-147">Gets a value that indicates the many-to-many relationship status of the column.</span></span></summary>
        <value>
          <span data-ttu-id="72a31-148"><see langword="true" /> se la relazione della colonna è di tipo molti-a-molti; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="72a31-148"><see langword="true" /> if the column relationship is many-to-many; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>