<Type Name="QueryableFilterUserControl" FullName="System.Web.DynamicData.QueryableFilterUserControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b18263ef133ed3c7675290e54f00ed50c997b8a9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class QueryableFilterUserControl : System.Web.UI.UserControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit QueryableFilterUserControl extends System.Web.UI.UserControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.QueryableFilterUserControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class QueryableFilterUserControl&#xA;Inherits UserControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryableFilterUserControl abstract : System::Web::UI::UserControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.UserControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f0b98-101">Provides a base class for filter controls.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f0b98-101">Provides a base class for filter controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0b98-102">Il <xref:System.Web.DynamicData.QueryableFilterUserControl> è la classe base per controlli utente che eseguono il rendering di filtri che possono essere inseriti nel filtro framework basato su Dynamic Data la <xref:System.Web.UI.WebControls.QueryExtender> classe.</span><span class="sxs-lookup"><span data-stu-id="f0b98-102">The <xref:System.Web.DynamicData.QueryableFilterUserControl> class is the base class for user controls that render filters that can be plugged into the Dynamic Data filtering framework that is based on the <xref:System.Web.UI.WebControls.QueryExtender> class.</span></span>  
  
 <span data-ttu-id="f0b98-103">Gli implementatori devono eseguire l'override di <xref:System.Web.DynamicData.QueryableFilterUserControl.GetQueryable%2A> controllo, che può restituire un oggetto modificato <xref:System.Linq.IQueryable> oggetto che riflette lo stato del filtro.</span><span class="sxs-lookup"><span data-stu-id="f0b98-103">Implementers must override the <xref:System.Web.DynamicData.QueryableFilterUserControl.GetQueryable%2A> control, which can return a modified <xref:System.Linq.IQueryable> object that reflects the filter's state.</span></span> <span data-ttu-id="f0b98-104">La classe di base contiene i metodi di supporto per la creazione di alberi delle espressioni LINQ.</span><span class="sxs-lookup"><span data-stu-id="f0b98-104">The base class contains helper methods for building LINQ expression trees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0b98-105">Un progetto di Visual Studio con codice sorgente è disponibile a complemento di questo argomento: [Scaffolding di Dynamic Data](http://go.microsoft.com/fwlink/?LinkId=168914).</span><span class="sxs-lookup"><span data-stu-id="f0b98-105">A Visual Studio project with source code is available to accompany this topic: [Scaffolding Dynamic Data](http://go.microsoft.com/fwlink/?LinkId=168914).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Linq" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected QueryableFilterUserControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterUserControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; QueryableFilterUserControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f0b98-106">Initializes a new instance of the <see cref="T:System.Web.DynamicData.QueryableFilterUserControl" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-106">Initializes a new instance of the <see cref="T:System.Web.DynamicData.QueryableFilterUserControl" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyEqualityFilter">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable ApplyEqualityFilter (System.Linq.IQueryable source, string propertyName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable ApplyEqualityFilter(class System.Linq.IQueryable source, string propertyName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterUserControl.ApplyEqualityFilter(System.Linq.IQueryable,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ApplyEqualityFilter (source As IQueryable, propertyName As String, value As Object) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::IQueryable ^ ApplyEqualityFilter(System::Linq::IQueryable ^ source, System::String ^ propertyName, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="f0b98-107">The source <see cref="T:System.Linq.IQueryable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-107">The source <see cref="T:System.Linq.IQueryable" /> object.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="f0b98-108">The name of the property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-108">The name of the property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f0b98-109">The value for the <c>propertyName</c> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-109">The value for the <c>propertyName</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0b98-110">Gets the transformed <see cref="T:System.Linq.IQueryable" /> object from the source <see cref="T:System.Linq.IQueryable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-110">Gets the transformed <see cref="T:System.Linq.IQueryable" /> object from the source <see cref="T:System.Linq.IQueryable" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f0b98-111">The transformed <see cref="T:System.Linq.IQueryable" /> object from the source <see cref="T:System.Linq.IQueryable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-111">The transformed <see cref="T:System.Linq.IQueryable" /> object from the source <see cref="T:System.Linq.IQueryable" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="protected internal System.Web.DynamicData.MetaColumn Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.QueryableFilterUserControl.Column" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Column As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::DynamicData::MetaColumn ^ Column { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0b98-112">Gets the column to use for filtering.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-112">Gets the column to use for filtering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0b98-113">La colonna da utilizzare per il filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-113">The column to use for filtering.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public string DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.QueryableFilterUserControl.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0b98-114">Gets the default values that are mapped for the table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-114">Gets the default values that are mapped for the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0b98-115">I valori predefiniti che vengono eseguito il mapping per la tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-115">The default values that are mapped for the table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0b98-116">Per impostazione predefinita, Dynamic Data fornisce valore booleano, chiave esterna e modelli di filtro di enumerazione.</span><span class="sxs-lookup"><span data-stu-id="f0b98-116">By default, Dynamic Data provides Boolean, foreign-key, and enumeration filter templates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; DefaultValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; DefaultValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.QueryableFilterUserControl.DefaultValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultValues As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ DefaultValues { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0b98-117">Gets the default values that are mapped for the table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-117">Gets the default values that are mapped for the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0b98-118">I valori predefiniti che vengono eseguito il mapping per la tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-118">The default values that are mapped for the table.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FilterChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FilterChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.DynamicData.QueryableFilterUserControl.FilterChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event FilterChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FilterChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0b98-119">Occurs when the <see cref="M:System.Web.DynamicData.QueryableFilterUserControl.OnFilterChanged" /> method is called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-119">Occurs when the <see cref="M:System.Web.DynamicData.QueryableFilterUserControl.OnFilterChanged" /> method is called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterControl">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control FilterControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control FilterControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.QueryableFilterUserControl.FilterControl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FilterControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Control ^ FilterControl { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0b98-120">Gets the data control that handles the filter inside the filter template.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-120">Gets the data control that handles the filter inside the filter template.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0b98-121">Il controllo di dati che gestisce il filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-121">The data control that handles the filter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0b98-122">Questa proprietà è `null` se il modello di filtro non esegue l'override.</span><span class="sxs-lookup"><span data-stu-id="f0b98-122">This property is `null` if the filter template does not override it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public abstract System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterUserControl.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="f0b98-123">The source <see cref="T:System.Linq.IQueryable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-123">The source <see cref="T:System.Linq.IQueryable" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0b98-124">Gets the transformed <see cref="T:System.Linq.IQueryable" /> object from the source <see cref="T:System.Linq.IQueryable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-124">Gets the transformed <see cref="T:System.Linq.IQueryable" /> object from the source <see cref="T:System.Linq.IQueryable" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f0b98-125">The transformed <see cref="T:System.Linq.IQueryable" /> object from the source <see cref="T:System.Linq.IQueryable" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-125">The transformed <see cref="T:System.Linq.IQueryable" /> object from the source <see cref="T:System.Linq.IQueryable" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0b98-126">È necessario implementare questo metodo se si deriva un controllo da <xref:System.Web.DynamicData.QueryableFilterUserControl>.</span><span class="sxs-lookup"><span data-stu-id="f0b98-126">You must implement this method if you derive a control from <xref:System.Web.DynamicData.QueryableFilterUserControl>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0b98-127">Questo metodo viene implementato per trasformare l'origine <xref:System.Linq.IQueryable> oggetto nella destinazione <xref:System.Linq.IQueryable> oggetto.</span><span class="sxs-lookup"><span data-stu-id="f0b98-127">This method is implemented to transform the source <xref:System.Linq.IQueryable> object into the target <xref:System.Linq.IQueryable> object.</span></span> <span data-ttu-id="f0b98-128">Esempi di <xref:System.Linq.IQueryable> espressioni che è possibile implementare includono order by, intervallo o ricerca.</span><span class="sxs-lookup"><span data-stu-id="f0b98-128">Examples of <xref:System.Linq.IQueryable> expressions that you might want to implement include order by, range, or search.</span></span>  
  
 <span data-ttu-id="f0b98-129">Nell'esempio seguente viene illustrato come implementare il <xref:System.Web.DynamicData.QueryableFilterUserControl.GetQueryable%2A> metodo per un filtro booleano derivato da <xref:System.Web.DynamicData.QueryableFilterUserControl>.</span><span class="sxs-lookup"><span data-stu-id="f0b98-129">The following example shows how to implement the <xref:System.Web.DynamicData.QueryableFilterUserControl.GetQueryable%2A> method for a Boolean filter that is derived from <xref:System.Web.DynamicData.QueryableFilterUserControl>.</span></span>  
  
```csharp  
public override IQueryable GetQueryable(IQueryable source) {  
    if (String.IsNullOrEmpty(DropDownList1.SelectedValue)) {  
        return source;  
    }  
  
    bool value = Convert.ToBoolean(DropDownList1.SelectedValue);  
  
    ParameterExpression parameterExpression =   
        Expression.Parameter(source.ElementType, "item");  
    Expression body = BuildQueryBody(  
        parameterExpression, value);  
  
    LambdaExpression lambda = Expression.Lambda(body,   
        parameterExpression);  
    MethodCallExpression whereCall = Expression.Call(  
        typeof(Queryable),   
        "Where",   
        new Type[] { source.ElementType },   
        source.Expression, Expression.Quote(lambda));  
    return source.Provider.CreateQuery(whereCall);  
}  
```  
  
```vb  
Public Overloads Overrides Function GetQueryable(ByVal source As IQueryable) As IQueryable   
    If [String].IsNullOrEmpty(DropDownList1.SelectedValue) Then   
        Return source   
    End If   
  
    Dim value As Boolean = Convert.ToBoolean(DropDownList1.SelectedValue)   
  
    Dim parameterExpression As ParameterExpression = Expression.Parameter(source.ElementType, "item")   
    Dim body As Expression = BuildQueryBody(parameterExpression, value)   
  
    Dim lambda As LambdaExpression = Expression.Lambda(body, parameterExpression)   
    Dim whereCall As MethodCallExpression = Expression.[Call](GetType(Queryable), "Where", _  
         New Type() {source.ElementType}, source.Expression, Expression.Quote(lambda))   
    Return source.Provider.CreateQuery(whereCall)   
End Function  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFilterChanged">
      <MemberSignature Language="C#" Value="protected void OnFilterChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnFilterChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterUserControl.OnFilterChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnFilterChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnFilterChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f0b98-130">Raises the <see cref="E:System.Web.DynamicData.QueryableFilterUserControl.FilterChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-130">Raises the <see cref="E:System.Web.DynamicData.QueryableFilterUserControl.FilterChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0b98-131">Chiamare questo metodo quando la selezione di filtro è stato modificato per notificare all'origine dati che è necessario eseguire nuovamente la query.</span><span class="sxs-lookup"><span data-stu-id="f0b98-131">Call this method when the filter selection has changed in order to notify the data source that the query must be re-run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PopulateListControl">
      <MemberSignature Language="C#" Value="public void PopulateListControl (System.Web.UI.WebControls.ListControl listControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PopulateListControl(class System.Web.UI.WebControls.ListControl listControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterUserControl.PopulateListControl(System.Web.UI.WebControls.ListControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PopulateListControl(System::Web::UI::WebControls::ListControl ^ listControl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listControl" Type="System.Web.UI.WebControls.ListControl" />
      </Parameters>
      <Docs>
        <param name="listControl">
          <span data-ttu-id="f0b98-132">A list control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-132">A list control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0b98-133">Populates a list control with all the foreign-key elements or Boolean elements in the table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0b98-133">Populates a list control with all the foreign-key elements or Boolean elements in the table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0b98-134">Colonne di chiave esterna vengono popolate con gli elementi della tabella di chiave esterna.</span><span class="sxs-lookup"><span data-stu-id="f0b98-134">Foreign-key columns are populated with elements from the foreign-key table.</span></span> <span data-ttu-id="f0b98-135">Colonne booleane vengono popolate con "All", "True" e "False".</span><span class="sxs-lookup"><span data-stu-id="f0b98-135">Boolean columns are populated with "All", "True", and "False".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>