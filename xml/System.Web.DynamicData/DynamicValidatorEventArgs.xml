<Type Name="DynamicValidatorEventArgs" FullName="System.Web.DynamicData.DynamicValidatorEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b815d9b4b7274be446ff81e219d5bbad4c96e9fe" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39929828" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicValidatorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicValidatorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicValidatorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicValidatorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicValidatorEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DynamicValidatorEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Classe base per le classi <see cref="T:System.Web.DynamicData.DynamicValidator" /> che contengono dati evento.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.DynamicData.DynamicValidator> classe intercetta le eccezioni generate dalle classi LINQ to SQL o dai metodi di Entity Framework in un modello di dati. Questa classe non contiene dati dell'evento. Viene usato dagli eventi non restituiscono informazioni sullo stato a un gestore eventi quando viene generato un evento. Se il gestore eventi richiede le informazioni sullo stato, è necessario creare una classe derivata da questa classe per contenere i dati.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicValidatorEventArgs (Exception exception, System.Web.DynamicData.DynamicDataSourceOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, valuetype System.Web.DynamicData.DynamicDataSourceOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicValidatorEventArgs.#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicValidatorEventArgs(Exception ^ exception, System::Web::DynamicData::DynamicDataSourceOperation operation);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.DynamicValidatorEventArgs : Exception * System.Web.DynamicData.DynamicDataSourceOperation -&gt; System.Web.DynamicData.DynamicValidatorEventArgs" Usage="new System.Web.DynamicData.DynamicValidatorEventArgs (exception, operation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="operation" Type="System.Web.DynamicData.DynamicDataSourceOperation" />
      </Parameters>
      <Docs>
        <param name="exception">Eccezione che si è verificata.</param>
        <param name="operation">Operazione sull'origine dati che ha generato l'eccezione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.DynamicData.DynamicValidatorEventArgs" /> utilizzando l'eccezione che si è verificata e l'operazione sull'origine dati che ha generato l'eccezione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Dynamic Data fornisce operazioni sull'origine dati che possono essere eseguite da un oggetto origine dati. Queste operazioni prevedono `Delete`, `Insert`, `Select` e `Update` e `ContextCreate`. Se si verifica un'eccezione durante un'operazione di origine dati, l'operazione sull'origine dati che ha causato l'eccezione e l'eccezione che si sono verificati sono rappresentati <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Operation%2A> e <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Exception%2A> rispettivamente.  
  
 Questo costruttore inizializza una nuova istanza di <xref:System.Web.DynamicData.DynamicValidatorEventArgs> classe utilizzando queste proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.DynamicData.DynamicValidatorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'eccezione che si verifica durante un evento operazione sull'origine dati.</summary>
        <value>Eccezione che si è verificata durante l'evento operazione sull'origine dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Dynamic Data fornisce operazioni sull'origine dati che possono essere eseguite da un oggetto origine dati. Queste operazioni prevedono `Delete`, `Insert`, `Select` e `Update` e `ContextCreate`. Se si verifica un'eccezione, il <xref:System.Web.DynamicData.DynamicValidator> classe Usa questa proprietà per ottenere il tipo di eccezione che viene attivato durante un'operazione di origine dati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operation">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.DynamicDataSourceOperation Operation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.DynamicData.DynamicDataSourceOperation Operation" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Operation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operation As DynamicDataSourceOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::DynamicDataSourceOperation Operation { System::Web::DynamicData::DynamicDataSourceOperation get(); };" />
      <MemberSignature Language="F#" Value="member this.Operation : System.Web.DynamicData.DynamicDataSourceOperation" Usage="System.Web.DynamicData.DynamicValidatorEventArgs.Operation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicDataSourceOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'operazione sull'origine dati che ha generato un'eccezione nella classe <see cref="T:System.Web.DynamicData.DynamicValidator" />.</summary>
        <value>Operazione sull'origine dati che ha generato l'eccezione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Dynamic Data fornisce l'operazione sull'origine dati che può essere eseguite dall'oggetto origine dati. Queste operazioni prevedono `Delete`, `Insert`, `Select` e `Update` e `ContextCreate`. Se si verifica un'eccezione, il <xref:System.Web.DynamicData.DynamicValidator> classe utilizza questa proprietà per recuperare l'operazione che ha generato l'eccezione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>