<Type Name="DynamicField" FullName="System.Web.DynamicData.DynamicField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b433546711046d2a4c005074b0c935f4b5b491b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540265" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicField : System.Web.UI.WebControls.DataControlField, System.Web.DynamicData.IFieldFormattingOptions, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicField extends System.Web.UI.WebControls.DataControlField implements class System.Web.DynamicData.IFieldFormattingOptions, class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicField" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicField&#xA;Inherits DataControlField&#xA;Implements IAttributeAccessor, IFieldFormattingOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicField : System::Web::UI::WebControls::DataControlField, System::Web::DynamicData::IFieldFormattingOptions, System::Web::UI::IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldFormattingOptions</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.DynamicData.Design.DynamicFieldDesigner, System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rappresenta un campo di dati che viene visualizzato in un controllo associato a dati che usa le funzionalità Dynamic Data di ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In questo argomento  
  
-   [Introduzione](#introduction)  
  
-   [Sintassi dichiarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduzione  
 Il <xref:System.Web.DynamicData.DynamicField> classe viene utilizzata dai controlli con associazione a dati, ad esempio il <xref:System.Web.UI.WebControls.GridView> e <xref:System.Web.UI.WebControls.DetailsView> controlli, per visualizzare un valore di campo che utilizza le funzionalità di ASP.NET Dynamic Data nelle pagine personalizzate.  
  
 Il <xref:System.Web.DynamicData.DynamicField> classe fornisce funzionalità simili a quelle del <xref:System.Web.UI.WebControls.BoundField> classe. Tuttavia, poiché un <xref:System.Web.DynamicData.DynamicField> oggetto viene utilizzato nelle applicazioni di dati dinamica, è possibile sfruttare le funzionalità di Dynamic Data seguenti:  
  
-   Automaticamente per il rendering del controllo appropriato per un campo utilizzando i modelli di campo in base al tipo di dati. I modelli di campo possono essere modificati a livello globale per l'intera applicazione.  
  
-   Che fornisce la convalida di dati predefinito in base allo schema di database. È anche possibile aggiungere tipi di convalida personalizzando il modello di dati.  
  
-   Personalizzazione del rendering dei dati per i singoli campi utilizzando attributi nel modello di dati o tramite il <xref:System.Web.DynamicData.DynamicField.UIHint%2A> proprietà.  
  
 Il <xref:System.Web.DynamicData.DynamicField> oggetto esegue il rendering di ogni campo tramite un `DynamicControl` controllo. Per specificare il campo dei dati da visualizzare un <xref:System.Web.DynamicData.DynamicField> dell'oggetto, impostare il <xref:System.Web.DynamicData.DynamicField.DataField%2A> proprietà sul nome del campo. È possibile applicare una stringa di formattazione personalizzata per il valore del campo impostando la <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> proprietà. Per impostazione predefinita la stringa di formattazione viene applicata ai valori di campo solo quando il controllo con associazione a dati è in modalità di sola lettura. Per applicare la stringa di formattazione per i valori visualizzati quando il controllo con associazione a dati è in modalità di modifica, impostare il <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> proprietà `true`. Se è un valore del campo `null`, è possibile visualizzare una didascalia personalizzata impostando il <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> proprietà. Il <xref:System.Web.DynamicData.DynamicField> oggetto consente di convertire automaticamente anche una stringa vuota ("") campo valori null impostando il <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A> proprietà `true`.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintassi dichiarativa  
  
```  
<asp:DynamicField   
    AccessibleHeaderText="string"       
    ApplyFormatInEditMode="true|false"    
    ControlStyle-BackColor="color name|#dddddd"   
    ControlStyle-BorderColor="color name|#dddddd"   
    ControlStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|  
       Ridge|Inset|Outset"    
    ControlStyle-BorderWidth="size"    
    ControlStyle-CssClass="string"   
    ControlStyle-Font-Bold="true|false"   
    ControlStyle-Font-Italic="true|false"   
    ControlStyle-Font-Names="string"   
    ControlStyle-Font-Overline="true|false"    
    ControlStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"   
    ControlStyle-Font-Strikeout="true|false"     
    ControlStyle-Font-Underline="true|false"     
    ControlStyle-ForeColor="color name|#dddddd"     
    ControlStyle-Height="size"   
    ControlStyle-Width="size"   
    ConvertEmptyStringToNull="true|false"    
    DataField="string"   
    DataFormatString="string"     
    FooterStyle-BackColor="color name|#dddddd"   
    FooterStyle-BorderColor="color name|#dddddd"   
    FooterStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|  
       Ridge|Inset|Outset"    
    FooterStyle-BorderWidth="size"    
    FooterStyle-CssClass="string"   
    FooterStyle-Font-Bold="true|false"   
    FooterStyle-Font-Italic="true|false"   
    FooterStyle-Font-Names="string"   
    FooterStyle-Font-Overline="true|false"    
    FooterStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"   
    FooterStyle-Font-Strikeout="true|false"     
    FooterStyle-Font-Underline="true|false"     
    FooterStyle-ForeColor="color name|#dddddd"     
    FooterStyle-Height="size"   
    FooterStyle-Width="size"   
    FooterStyle-HorizontalAlign="Center|Justify|Left|NotSet|Right"   
    FooterStyle-VerticalAlign="Bottom|Middle|NotSet|Top"   
    FooterStyle-Wrap="true|false"     
    HeaderImageUrl="uri"  
    HeaderStyle-BackColor="color name|#dddddd"   
    HeaderStyle-BorderColor="color name|#dddddd"   
    HeaderStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|  
       Ridge|Inset|Outset"    
    HeaderStyle-BorderWidth="size"    
    HeaderStyle-CssClass="string"   
    HeaderStyle-Font-Bold="true|false"   
    HeaderStyle-Font-Italic="true|false"   
    HeaderStyle-Font-Names="string"   
    HeaderStyle-Font-Overline="true|false"    
    HeaderStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"   
    HeaderStyle-Font-Strikeout="true|false"     
    HeaderStyle-Font-Underline="true|false"     
    HeaderStyle-ForeColor="color name|#dddddd"     
    HeaderStyle-Height="size"   
    HeaderStyle-Width="size"   
    HeaderStyle-HorizontalAlign="Center|Justify|Left|NotSet|Right"   
    HeaderStyle-VerticalAlign="Bottom|Middle|NotSet|Top"   
    HeaderStyle-Wrap="true|false"     
    HeaderText="string"  
    InsertVisible="true|false"      
    ItemStyle-BackColor="color name|#dddddd"   
    ItemStyle-BorderColor="color name|#dddddd"   
    ItemStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|  
       Ridge|Inset|Outset"    
    ItemStyle-BorderWidth="size"    
    ItemStyle-CssClass="string"   
    ItemStyle-Font-Bold="true|false"   
    ItemStyle-Font-Italic="true|false"   
    ItemStyle-Font-Names="string"   
    ItemStyle-Font-Overline="true|false"    
    ItemStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"   
    ItemStyle-Font-Strikeout="true|false"     
    ItemStyle-Font-Underline="true|false"     
    ItemStyle-ForeColor="color name|#dddddd"     
    ItemStyle-Height="size"   
    ItemStyle-Width="size"   
    ItemStyle-HorizontalAlign="Center|Justify|Left|NotSet|Right"   
    ItemStyle-VerticalAlign="Bottom|Middle|NotSet|Top"   
    ItemStyle-Wrap="true|false"     
    NullDisplayText="string"   
    ReadOnly="true|false"    
    ShowHeader="true|false"    
    SortExpression="string"   
    UIHint="string"   
    ValidationGroup="string"   
    Visible="true|false"   
    />  
<asp:DynamicField />  
```  
  
   
  
## Examples  
 Vedere un esempio di codice in fase di esecuzione di questa funzionalità: [eseguire](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicField).  
  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Web.DynamicData.DynamicField> dell'oggetto un <xref:System.Web.UI.WebControls.GridView> controllo per visualizzare e modificare i valori di una tabella di database.  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicField/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicField/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.DynamicData.DynamicControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questo costruttore per inizializzare una nuova istanza di <xref:System.Web.DynamicData.DynamicField> classe. Questo costruttore viene comunemente utilizzato quando si aggiungono campi a un controllo con associazione a dati creato dinamicamente.  
  
 Per aggiungere dinamicamente un <xref:System.Web.DynamicData.DynamicField> dell'oggetto a un controllo con associazione a dati, creare un nuovo <xref:System.Web.DynamicData.DynamicField> dell'oggetto, impostarne le proprietà e quindi aggiungerlo alla raccolta di campi del controllo con associazione a dati. Ad esempio, se si utilizza il <xref:System.Web.UI.WebControls.GridView> di controllo, aggiungere il <xref:System.Web.DynamicData.DynamicField> dell'oggetto per il <xref:System.Web.UI.WebControls.GridView.Columns%2A> insieme.  
  
> [!NOTE]
>  Sebbene in modo dinamico, è possibile aggiungere campi a un controllo con associazione a dati, è consigliabile che i campi in modo statico dichiarati e quindi nascondere o visualizzare, a seconda dei casi. Dichiarazione di tutti i campi in modo statico riduce le dimensioni dello stato di visualizzazione per il controllo con associazione a dati padre.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se la stringa formattata specificata dalla proprietà <see cref="P:System.Web.DynamicData.DynamicField.DataFormatString" /> viene applicata a un valore di campo quando il campo dati è in modalità di modifica.</summary>
        <value>
          <see langword="true" /> se <see cref="T:System.Web.DynamicData.DynamicField" /> applica la formattazione in modalità di modifica; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlli con associazione a dati (ad esempio <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.GridView>) sono diverse modalità di visualizzazione che consentono all'utente di leggere, modificare o inserire record. Per impostazione predefinita, la stringa di formattazione specificata dal <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> proprietà viene applicata ai valori di campo solo quando il controllo con associazione a dati è in modalità di sola lettura. Per applicare la stringa di formattazione per i valori visualizzati quando il controllo con associazione a dati è in modalità di modifica, impostare il <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> proprietà `true`.  
  
> [!NOTE]
>  Oggetto <xref:System.Web.DynamicData.DynamicField> oggetto non rimuove automaticamente la formattazione quando il campo viene aggiornato nell'origine dati. Se si desidera la formattazione, come parte del valore archiviato, è necessario rimuovere la formattazione a livello di codice.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataFormatString" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="protected System.Web.DynamicData.MetaColumn Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.Column" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Column As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::DynamicData::MetaColumn ^ Column { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Web.DynamicData.MetaColumn" /> a cui è associato questo oggetto <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
        <value>Metacolonna.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureDynamicControl">
      <MemberSignature Language="C#" Value="protected virtual void ConfigureDynamicControl (System.Web.DynamicData.DynamicControl control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ConfigureDynamicControl(class System.Web.DynamicData.DynamicControl control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ConfigureDynamicControl (control As DynamicControl)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ConfigureDynamicControl(System::Web::DynamicData::DynamicControl ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.DynamicData.DynamicControl" />
      </Parameters>
      <Docs>
        <param name="control">Controllo da modificare.</param>
        <summary>Fornisce un meccanismo per modificare un oggetto <see cref="T:System.Web.DynamicData.DynamicControl" /> creato dal metodo <see cref="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se i valori di stringa vuota ("") vengono convertiti automaticamente in valori Null quando il campo dati viene aggiornato nell'origine dati.</summary>
        <value>
          <see langword="true" /> per convertire automaticamente i valori di stringa vuota in valori null; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In alcuni casi l'utente potrebbe immettere una stringa vuota per un valore del campo durante l'aggiornamento o inserimento di record. Utilizzare il <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A> proprietà per specificare se un valore stringa vuota viene convertito automaticamente su null quando viene aggiornato il campo dei dati nell'origine dati.  
  
 Per impostazione predefinita, un <xref:System.Web.DynamicData.DynamicField> oggetto visualizza i valori null come stringhe vuote. Per visualizzare un valore diverso, impostare il <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> proprietà.  
  
> [!NOTE]
>  Il <xref:System.Web.UI.WebControls.Parameter> oggetto dell'origine dati controllare che il controllo padre di <xref:System.Web.DynamicData.DynamicField> oggetto è associato a include anche una proprietà denominata <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=nameWithType>. Questa proprietà esegue la stessa funzione. Assicurarsi che entrambe le proprietà vengono impostate in modo appropriato.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.NullDisplayText" />
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">Oggetto <see cref="T:System.Web.UI.WebControls.DataControlField" /> in cui copiare le proprietà dell'oggetto <see cref="T:System.Web.DynamicData.DynamicField" /> corrente.</param>
        <summary>Copia le proprietà dell'oggetto <see cref="T:System.Web.DynamicData.DynamicField" /> corrente nell'oggetto <see cref="T:System.Web.UI.WebControls.DataControlField" /> specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.DynamicData.DynamicField.CopyProperties%2A> è un metodo di supporto. Viene utilizzato dal <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> metodo per copiare le proprietà dell'oggetto corrente <xref:System.Web.DynamicData.DynamicField> dell'oggetto per il <xref:System.Web.DynamicData.DynamicField> oggetto passato il `newField` parametro.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Eseguire l'override di <see cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> metodo per copiare le nuove proprietà che sono state create nella classe derivata. Chiamare la classe base <see cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> metodo in modo che le proprietà del <see cref="T:System.Web.DynamicData.DynamicField" /> classe vengono inoltre copiati.</para>
        </block>
        <altmember cref="M:System.Web.DynamicData.DynamicField.CreateField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicControl">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.DynamicControl CreateDynamicControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.DynamicControl CreateDynamicControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.CreateDynamicControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicControl () As DynamicControl" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::DynamicControl ^ CreateDynamicControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fornisce un meccanismo per consentire alle classi che derivano da <see cref="T:System.Web.DynamicData.DynamicField" /> di eseguire l'override della modalità di creazione di un oggetto <see cref="T:System.Web.DynamicData.DynamicControl" />.</summary>
        <returns>Nuovo controllo dinamico.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea e restituisce una nuova istanza della classe <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
        <returns>Nuova istanza della classe <see cref="T:System.Web.DynamicData.DynamicField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.DynamicData.DynamicField.CreateField%2A> è un metodo di supporto. Viene utilizzato per il <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> metodo per creare un oggetto vuoto <xref:System.Web.DynamicData.DynamicField> oggetto.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Eseguire l'override di <see cref="M:System.Web.DynamicData.DynamicField.CreateField" /> per restituire una nuova istanza della classe derivata. Non chiamare il <see cref="M:System.Web.DynamicData.DynamicField.CreateField" /> metodo della classe di base.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del campo dati a cui associare l'oggetto <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
        <value>Nome del campo dati a cui viene associato l'oggetto <see cref="T:System.Web.DynamicData.DynamicField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.DynamicData.DynamicField.DataField%2A> proprietà per specificare il campo dei dati da associare il <xref:System.Web.DynamicData.DynamicField> oggetto. Il campo dei dati può essere la colonna nome o per le colonne chiave esterna, il nome della relazione.  
  
 Per impostazione predefinita, viene visualizzato il campo dei dati specificato per il <xref:System.Web.DynamicData.DynamicField> utilizzando il modello di campo che è associato il tipo di dati del campo. È possibile modificare il modello di campo che viene eseguito il rendering per il campo dei dati impostando la <xref:System.Web.DynamicData.DynamicField.UIHint%2A> proprietà. È anche possibile formattare il testo visualizzato impostando il <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> proprietà. Se è un valore del campo `null`, una stringa vuota ("") viene visualizzato per il valore per impostazione predefinita. Per specificare una didascalia alternativa, impostare il <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> proprietà.  
  
 **Nota** se si desidera modificare la visualizzazione e il comportamento di un campo dati a livello globale, è necessario applicare attributi per il modello di dati anziché impostare questa proprietà in una particolare istanza di <xref:System.Web.DynamicData.DynamicField> oggetto. Per ulteriori informazioni, vedere [ASP.NET Dynamic Data](http://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).  
  
 Il <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> metodo viene chiamato per generare un evento di modifica dello stato quando il <xref:System.Web.DynamicData.DynamicField.DataField%2A> proprietà è impostata.  
  
 Il valore di <xref:System.Web.DynamicData.DynamicField.DataField%2A> proprietà viene archiviata nello stato di visualizzazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.NullDisplayText" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.UIHint" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.OnFieldChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la stringa in cui è specificato il formato di visualizzazione per il valore del campo dati.</summary>
        <value>Stringa di formattazione che specifica il formato di visualizzazione per il valore del campo dati. Il valore predefinito è una stringa vuota (""), a indicare che al valore non è stata applicata alcuna formattazione speciale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> proprietà per specificare un formato di visualizzazione personalizzato per i valori visualizzati di <xref:System.Web.DynamicData.DynamicField> oggetto. Se il <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> non è impostata, il valore del campo viene visualizzato senza alcuna formattazione speciale.  
  
 Per impostazione predefinita, la stringa di formattazione viene applicata al valore di campo solo quando il controllo con associazione a dati che contiene il <xref:System.Web.DynamicData.DynamicField> oggetto è in modalità di sola lettura. Per applicare la stringa di formattazione per il valore del campo in modalità di modifica, impostare il <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> proprietà `true`.  
  
 Il formato di visualizzazione specificato utilizzando il <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> è specifica per questa istanza di proprietà di <xref:System.Web.DynamicData.DynamicField> classe. È anche possibile modificare il formato di visualizzazione per un campo dati in tutta l'applicazione applicando il <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> per il modello di data e l'impostazione di <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> denominato parametro nel costruttore. Per ulteriori informazioni, vedere [ASP.NET Dynamic Data](http://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">Dizionario che conterrà i valori delle celle.</param>
        <param name="cell">Cella che contiene il testo o i controlli dell'oggetto <see cref="T:System.Web.DynamicData.DynamicField" />.</param>
        <param name="rowState">Uno dei valori di enumerazione che specifica lo stato della riga.</param>
        <param name="includeReadOnly">
          <see langword="true" /> per includere i valori dei campi in sola lettura in <c>dictionary</c>; in caso contrario, <see langword="false" />.</param>
        <summary>Estrae il valore del campo dati dalla cella corrente della tabella e aggiunge il valore al dizionario specificato.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public string GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttribute (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Chiave dell'attributo da ottenere.</param>
        <summary>Recupera il valore dell'attributo specificato.</summary>
        <returns>Valore dell'attributo.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)" />
        <altmember cref="T:System.Web.UI.IAttributeAccessor" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il testo visualizzato nell'intestazione del controllo con associazione a dati che contiene l'oggetto <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
        <value>Testo visualizzato nell'intestazione del controllo con associazione a dati che contiene l'oggetto <see cref="T:System.Web.DynamicData.DynamicField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> proprietà per identificare un campo in un controllo con associazione a dati con un nome descrittivo. L'applicazione più comune del <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> proprietà consiste nel fornire nomi di colonna significativi ai campi di dati in un <xref:System.Web.UI.WebControls.GridView> o <xref:System.Web.UI.WebControls.DetailsView> controllo.  
  
 Per impostazione predefinita, il <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> proprietà Usa il nome visualizzato impostato per il campo dei dati tramite il <xref:System.ComponentModel.DisplayNameAttribute> attributo. Se il nome visualizzato non è impostato, il <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> proprietà Usa il valore di <xref:System.Web.DynamicData.DynamicField.DataField%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Web.DynamicData.DynamicField" /> si trova all'interno di un controllo con associazione a dati non associato a un controllo origine dati che implementa l'interfaccia <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</exception>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.DisplayName" />
        <altmember cref="T:System.ComponentModel.DisplayNameAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se i valori del campo dati vengono codificati in HTML prima di essere visualizzati in un oggetto <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
        <value>
          <see langword="true" /> se i valori di campo vengono codificati in HTML prima di essere visualizzati; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A> proprietà per specificare se i valori di campo sono codificati in HTML per le rispettive rappresentazioni di stringa prima che vengano visualizzati.  
  
> [!NOTE]
>  I valori di campo di codifica HTML consente di impedire la visualizzazione di attacchi di script e di contenuto dannoso. Questa proprietà deve essere abilitata quando possibile. Per altre informazioni, vedere [Cenni preliminari sugli attacchi tramite script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">Oggetto che contiene il testo o i controlli dell'oggetto <see cref="T:System.Web.DynamicData.DynamicField" />.</param>
        <param name="cellType">Uno dei valori di enumerazione che specifica la funzione dell'oggetto <c>cell</c>.</param>
        <param name="rowState">Uno dei valori di enumerazione che specifica lo stato della riga.</param>
        <param name="rowIndex">Indice della riga in cui è contenuto l'oggetto <c>cell</c>.</param>
        <summary>Aggiunge il testo o i controlli alla cella specificata.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la didascalia visualizzata per un campo dati quando il valore di campo è <see langword="null" />.</summary>
        <value>Didascalia visualizzata per un campo dati quando il valore di campo è <see langword="null" />. Il valore predefinito è una stringa vuota (""), a indicare che questa proprietà non è impostata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Talvolta un valore di campo viene archiviato come null nell'origine dati. È possibile specificare una didascalia personalizzata per visualizzare i campi di dati che hanno un valore null impostando la <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> proprietà. Se questa proprietà non è impostata, i valori di campo null vengono visualizzati come stringhe vuote ("").  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene lo stato di sola lettura del campo dinamico.</summary>
        <value>Stato di sola lettura del campo dinamico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Web.DynamicData.DynamicField.ReadOnly%2A> proprietà `true`, <xref:System.Web.DynamicData.DynamicField> controllo carica un modello di sola lettura. Questa proprietà richiede che sia attivato lo stato di visualizzazione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public void SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttribute (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAttribute(System::String ^ key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nome dell'attributo da impostare.</param>
        <param name="value">Valore dell'attributo.</param>
        <summary>Imposta un attributo associato all'oggetto <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.DynamicData.DynamicField.GetAttribute(System.String)" />
        <altmember cref="T:System.Web.UI.IAttributeAccessor" />
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public override string SortExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SortExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'espressione di ordinamento utilizzata con il campo dati in base a cui ordinare l'origine dati.</summary>
        <value>Espressione di ordinamento utilizzata con il campo dati in base a cui ordinare l'origine dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.DynamicData.DynamicField.SortExpression%2A> proprietà tenta di utilizzare il valore della <xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=nameWithType> proprietà dell'oggetto colonna di cui è associato il <xref:System.Web.DynamicData.DynamicField> oggetto impostando il <xref:System.Web.DynamicData.DynamicField.DataField%2A> proprietà.  
  
 Il <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> metodo viene chiamato per generare un evento di modifica dello stato quando il <xref:System.Web.DynamicData.DynamicField.SortExpression%2A> proprietà è impostata.  
  
 Il valore di <xref:System.Web.DynamicData.DynamicField.SortExpression%2A> proprietà viene archiviata nello stato di visualizzazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'oggetto <see cref="T:System.Web.DynamicData.DynamicField" /> si trova all'interno di un controllo con associazione a dati non associato a un controllo origine dati che implementa l'interfaccia <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</exception>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.OnFieldChanged" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="UIHint">
      <MemberSignature Language="C#" Value="public virtual string UIHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.UIHint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UIHint { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il modello di campo da utilizzare per visualizzare il campo dati.</summary>
        <value>Nome del modello di campo da utilizzare per visualizzare il campo dati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare il <xref:System.Web.DynamicData.DynamicField.UIHint%2A> proprietà per specificare il modello di campo da utilizzare per visualizzare l'interfaccia utente per un campo dati. Modelli di campo per impostazione predefinita sono controlli utente e i relativi nomi contengono un suffisso per identificare i modelli di campo che vengono utilizzati per le operazioni di modifica e le operazioni di inserimento. I suffissi sono rispettivamente Edit e INSERT. Quando si imposta un valore il <xref:System.Web.DynamicData.DynamicField.UIHint%2A> proprietà, impostare il nome senza il suffisso. Dynamic Data identificherà la modalità corrente del campo dati e verrà eseguito il rendering del modello di campo corretto.  
  
 Se il <xref:System.Web.DynamicData.DynamicField.UIHint%2A> non è impostata, i dati dinamici per impostazione predefinita verrà eseguito il rendering di modello di campo in base al tipo di campo. Per ulteriori informazioni, vedere [ASP.NET Dynamic Data Scaffolding](http://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12).  
  
 Il modello di campo specificato mediante il <xref:System.Web.DynamicData.DynamicField.UIHint%2A> è specifica per questa istanza di proprietà di <xref:System.Web.DynamicData.DynamicField> classe. È anche possibile modificare il modello di campo utilizzato da un campo dati in tutta l'applicazione applicando la <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> al modello di dati. L'impostazione di <xref:System.Web.DynamicData.DynamicField.UIHint%2A> proprietà esegue l'override dei metadati applicati al modello di dati. Per ulteriori informazioni sugli attributi dei metadati, vedere [ASP.NET Dynamic Data](http://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).  
  
 Il <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> metodo viene chiamato per generare un evento di modifica dello stato quando il <xref:System.Web.DynamicData.DynamicField.UIHint%2A> proprietà è impostata.  
  
 Il valore di <xref:System.Web.DynamicData.DynamicField.UIHint%2A> proprietà viene archiviata nello stato di visualizzazione.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.OnFieldChanged" />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che specifica se il controllo convalida l'input del client.</summary>
        <value>
          <see langword="true" /> se il controllo convalida l'input del client; in caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="P:System.Web.DynamicData.DynamicControl.ValidationGroup" /> a cui è associato questo oggetto <see cref="T:System.Web.DynamicData.DynamicField" />.</summary>
        <value>Il nome del gruppo di convalida a cui appartiene il controllo di convalida. Il valore predefinito è una stringa vuota (""), a indicare che questa proprietà non è impostata.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>