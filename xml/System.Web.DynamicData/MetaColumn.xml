<Type Name="MetaColumn" FullName="System.Web.DynamicData.MetaColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9739eac765bc5a9cbbdc44d39c62460942ec2df7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36601447" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MetaColumn : System.Web.DynamicData.IFieldFormattingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaColumn extends System.Object implements class System.Web.DynamicData.IFieldFormattingOptions" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaColumn&#xA;Implements IFieldFormattingOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaColumn : System::Web::DynamicData::IFieldFormattingOptions" />
  <TypeSignature Language="F#" Value="type MetaColumn = class&#xA;    interface IFieldFormattingOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldFormattingOptions</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e7beb-101">Rappresenta una colonna di database utilizzata da Dynamic Data.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7beb-101">Represents a database column that is used by Dynamic Data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-102">Nelle applicazioni ASP.NET Dynamic Data, la <xref:System.Web.DynamicData.MetaColumn> classe rappresenta un campo del database.</span><span class="sxs-lookup"><span data-stu-id="e7beb-102">In ASP.NET Dynamic Data applications, the <xref:System.Web.DynamicData.MetaColumn> class represents a database field.</span></span> <span data-ttu-id="e7beb-103">Il <xref:System.Web.DynamicData.MetaColumn> classe consente di recuperare informazioni sul campo dati, ad esempio informazioni di tipo e i metadati.</span><span class="sxs-lookup"><span data-stu-id="e7beb-103">The <xref:System.Web.DynamicData.MetaColumn> class lets you retrieve information about the data field such as type and metadata information.</span></span>  
  
 <span data-ttu-id="e7beb-104">È possibile recuperare la tabella a cui appartiene il campo dei dati tramite il <xref:System.Web.DynamicData.MetaColumn.Table%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7beb-104">You can retrieve the table that the data field belongs to by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property.</span></span> <span data-ttu-id="e7beb-105">È anche possibile recuperare il modello di dati utilizzando il <xref:System.Web.DynamicData.MetaColumn.Model%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7beb-105">You can also retrieve the data model by using the <xref:System.Web.DynamicData.MetaColumn.Model%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.MetaChildrenColumn" />
    <altmember cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaTable table, class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaColumn(System::Web::DynamicData::MetaTable ^ table, System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.MetaColumn : System.Web.DynamicData.MetaTable * System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaColumn" Usage="new System.Web.DynamicData.MetaColumn (table, columnProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="e7beb-106">Metatabella che contiene la colonna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-106">The meta table that contains the column.</span>
          </span>
        </param>
        <param name="columnProvider">
          <span data-ttu-id="e7beb-107">Provider della colonna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-107">The column provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7beb-108">Inizializza una nuova istanza della classe <see cref="T:System.Web.DynamicData.MetaColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-108">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaColumn" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInitialValue">
      <MemberSignature Language="C#" Value="public bool AllowInitialValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInitialValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.AllowInitialValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInitialValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInitialValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowInitialValue : bool" Usage="System.Web.DynamicData.MetaColumn.AllowInitialValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.AllowInitialValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-109">Ottiene o imposta un valore che specifica se una colonna consente l'inserimento di un valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-109">Gets or sets a value that specifies whether a column enables a value to be inserted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-110">
            <see langword="true" /> se è consentito inserire un valore nella colonna; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-110">
              <see langword="true" /> if the column enables a value to be inserted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-111">Il valore predefinito è `false` quando la colonna è di sola lettura e `true` quando la colonna non è in sola lettura.</span><span class="sxs-lookup"><span data-stu-id="e7beb-111">The default value is `false` when the column is read-only and `true` when the column is not read-only.</span></span> <span data-ttu-id="e7beb-112">Il valore predefinito può essere sottoposto a override utilizzando il <xref:System.ComponentModel.DataAnnotations.EditableAttribute> attributo.</span><span class="sxs-lookup"><span data-stu-id="e7beb-112">The default value can be overridden by using the <xref:System.ComponentModel.DataAnnotations.EditableAttribute> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool" Usage="System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.ApplyFormatInEditMode</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ApplyFormatInEditMode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-113">Ottiene un valore che indica se la stringa di formattazione specificata dalla proprietà <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> viene applicata ai valori di campo quando il controllo con associazione a dati che contiene il campo dati rappresentato dall'oggetto <see cref="T:System.Web.DynamicData.MetaColumn" /> è in modalità di modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-113">Gets a value that indicates whether the formatting string specified by the <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> property is applied to field values when the data-bound control that contains the data field that is represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object is in edit mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-114">
            <see langword="true" /> se la stringa di formattazione specificata dalla proprietà <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> viene applicata ai valori di campo quando il controllo con associazione a dati che contiene il campo dati rappresentato dall'oggetto <see cref="T:System.Web.DynamicData.MetaColumn" /> è in modalità di modifica; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-114">
              <see langword="true" /> if the formatting string specified by the <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> property is applied to field values when the data-bound control that contains the data field that is represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object is in edit mode; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-115">Il <xref:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode%2A> proprietà verifica se un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attributo viene applicato per il campo dei dati e recupera il valore della <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7beb-115">The <xref:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e7beb-116">Se un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attributo non viene trovato, questa proprietà consente di verificare se un <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attributo viene applicato per recuperare le informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="e7beb-116">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Web.DynamicData.MetaColumn.Attributes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-117">Ottiene l'insieme di attributi dei matadati che vengono applicati al campo dati rappresentato dall'oggetto <see cref="T:System.Web.DynamicData.MetaColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-117">Gets the collection of metadata attributes that apply to the data field represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-118">Insieme di attributi dei matadati che vengono applicati al campo dati rappresentato dall'oggetto <see cref="T:System.Web.DynamicData.MetaColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-118">The collection of metadata attributes that apply to the data field represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAttributeCollection">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.AttributeCollection BuildAttributeCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.BuildAttributeCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BuildAttributeCollection () As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::AttributeCollection ^ BuildAttributeCollection();" />
      <MemberSignature Language="F#" Value="abstract member BuildAttributeCollection : unit -&gt; System.ComponentModel.AttributeCollection&#xA;override this.BuildAttributeCollection : unit -&gt; System.ComponentModel.AttributeCollection" Usage="metaColumn.BuildAttributeCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-119">Ottiene l'insieme di attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-119">Gets the attribute collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7beb-120">Raccolta di attributi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-120">The attribute collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-121">È necessario chiamare il <xref:System.Web.DynamicData.MetaColumn.BuildAttributeCollection%2A> metodo prima di accedere il <xref:System.Web.DynamicData.MetaColumn.Attributes%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7beb-121">You must call the <xref:System.Web.DynamicData.MetaColumn.BuildAttributeCollection%2A> method before you access the <xref:System.Web.DynamicData.MetaColumn.Attributes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnType">
      <MemberSignature Language="C#" Value="public Type ColumnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ColumnType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ColumnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ColumnType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnType : Type" Usage="System.Web.DynamicData.MetaColumn.ColumnType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ColumnType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-122">Ottiene il tipo di campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-122">Gets the data field type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-123">Tipo di campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-123">The data field type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-124">Il <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> proprietà restituisce il tipo common language runtime (CLR) del campo dati.</span><span class="sxs-lookup"><span data-stu-id="e7beb-124">The <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> property returns the common language runtime (CLR) type of the data field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool" Usage="System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.ConvertEmptyStringToNull</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ConvertEmptyStringToNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-125">Ottiene un valore che indica se i valori di stringa vuota ("") vengono convertiti automaticamente in valori <see langword="null" /> quando il campo dati viene aggiornato nell'origine dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-125">Gets a value that indicates whether empty string values ("") are automatically converted to <see langword="null" /> values when the data field is updated in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-126">
            <see langword="true" /> se i valori di stringa vuota ("") vengono convertiti automaticamente in valori <see langword="null" /> quando il campo dati viene aggiornato nell'origine dati; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-126">
              <see langword="true" /> if empty string values are automatically converted to <see langword="null" /> values when the data field is updated in the data source; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-127">Il <xref:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull%2A> proprietà verifica se un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attributo viene applicato per il campo dei dati e recupera il valore della <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7beb-127">The <xref:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e7beb-128">Se un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attributo non viene trovato, questa proprietà consente di verificare se un <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attributo viene applicato per recuperare le informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="e7beb-128">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string" Usage="System.Web.DynamicData.MetaColumn.DataFormatString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.DataFormatString</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DataFormatString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-129">Ottiene la stringa che specifica il formato di visualizzazione per il valore di campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-129">Gets the string that specifies the display format for the field value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-130">Stringa che specifica il formato di visualizzazione per il valore di campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-130">The string that specifies the display format for the field value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-131">Il <xref:System.Web.DynamicData.MetaColumn.DataFormatString%2A> proprietà verifica se un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attributo viene applicato per il campo dei dati e recupera il valore della <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7beb-131">The <xref:System.Web.DynamicData.MetaColumn.DataFormatString%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e7beb-132">Se un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attributo non viene trovato, questa proprietà consente di verificare se un <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attributo viene applicato per recuperare le informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="e7beb-132">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="DataTypeAttribute">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DataAnnotations.DataTypeAttribute DataTypeAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.DataAnnotations.DataTypeAttribute DataTypeAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DataTypeAttribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataTypeAttribute As DataTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DataAnnotations::DataTypeAttribute ^ DataTypeAttribute { System::ComponentModel::DataAnnotations::DataTypeAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataTypeAttribute : System.ComponentModel.DataAnnotations.DataTypeAttribute" Usage="System.Web.DynamicData.MetaColumn.DataTypeAttribute" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DataTypeAttribute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DataAnnotations.DataTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-133">Ottiene l'attributo <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> che viene applicato al campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-133">Gets the <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribute that is applied to the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-134">Attributo <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> che viene applicato al campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-134">The <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribute that is applied to the data field.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : obj" Usage="System.Web.DynamicData.MetaColumn.DefaultValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DefaultValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-135">Ottiene il valore predefinito per il campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-135">Gets the default value for the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-136">Valore predefinito per il campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-136">The default value for the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-137">Il <xref:System.Web.DynamicData.MetaColumn.DefaultValue%2A> proprietà viene in genere utilizzata per pre-popolare il valore del campo quando viene creata una nuova voce.</span><span class="sxs-lookup"><span data-stu-id="e7beb-137">The <xref:System.Web.DynamicData.MetaColumn.DefaultValue%2A> property is typically used to pre-populate the field value when a new entry is created.</span></span> <span data-ttu-id="e7beb-138">Questa proprietà consente di verificare se un <xref:System.ComponentModel.DefaultValueAttribute> attributo viene applicato per il campo dei dati e recupera il valore della <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7beb-138">This property verifies if a <xref:System.ComponentModel.DefaultValueAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultValueAttribute" />
        <altmember cref="P:System.ComponentModel.DefaultValueAttribute.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Web.DynamicData.MetaColumn.Description" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Description</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-139">Ottiene la descrizione per il campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-139">Gets the description for the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-140">Descrizione per il campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-140">The description for the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-141">Il <xref:System.Web.DynamicData.MetaColumn.Description%2A> proprietà verifica se un <xref:System.ComponentModel.DescriptionAttribute> attributo viene applicato per il campo dei dati e recupera il valore della <xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7beb-141">The <xref:System.Web.DynamicData.MetaColumn.Description%2A> property verifies if a <xref:System.ComponentModel.DescriptionAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DescriptionAttribute" />
        <altmember cref="P:System.ComponentModel.DescriptionAttribute.Description" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.DynamicData.MetaColumn.DisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-142">Ottiene il nome visualizzato per il campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-142">Gets the display name for the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-143">Nome visualizzato per il campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-143">The display name for the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-144">Il <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> proprietà restituisce il nome visualizzato descrittivo per il campo dei dati se ne è stato impostato o il nome del campo se non è stato specificato alcun nome visualizzato.</span><span class="sxs-lookup"><span data-stu-id="e7beb-144">The <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> property returns the friendly display name for the data field if one has been set, or the field name if no display name has been specified.</span></span> <span data-ttu-id="e7beb-145">Il <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> proprietà verifica se è stato impostato un nome visualizzato descrittivo controllando se un <xref:System.ComponentModel.DisplayNameAttribute> attributo viene applicato al campo dati.</span><span class="sxs-lookup"><span data-stu-id="e7beb-145">The <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> property verifies if a friendly display name has been set by checking if a <xref:System.ComponentModel.DisplayNameAttribute> attribute is applied to the data field.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DisplayNameAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EntityTypeProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo EntityTypeProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.PropertyInfo EntityTypeProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.EntityTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityTypeProperty As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::PropertyInfo ^ EntityTypeProperty { System::Reflection::PropertyInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntityTypeProperty : System.Reflection.PropertyInfo" Usage="System.Web.DynamicData.MetaColumn.EntityTypeProperty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.EntityTypeProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-146">Ottiene un oggetto che contiene gli attributi della proprietà che rappresenta il campo dati nel tipo di entità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-146">Gets an object that contains attributes of the property that represents the data field in the entity type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-147">Oggetto che contiene gli attributi della proprietà che rappresenta il campo dati nel tipo di entità.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-147">An object that contains attributes of the property that represents the data field in the entity type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterUIHint">
      <MemberSignature Language="C#" Value="public string FilterUIHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterUIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.FilterUIHint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterUIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterUIHint { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterUIHint : string" Usage="System.Web.DynamicData.MetaColumn.FilterUIHint" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.FilterUIHint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-148">Ottiene il valore <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> utilizzato per la colonna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-148">Gets the <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> value that is used for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-149">Valore di <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> utilizzato per la colonna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-149">The <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> value that is used for the column.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool" Usage="System.Web.DynamicData.MetaColumn.HtmlEncode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.HtmlEncode</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.HtmlEncode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-150">Ottiene un valore che indica se i valori di campo vengono codificati in HTML prima di essere visualizzati in un controllo con associazione a dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-150">Gets a value that indicates whether field values are HTML-encoded before they are displayed in a data-bound control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-151">
            <see langword="true" /> in tutti i casi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-151">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="metaColumn.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-152">Inizializza i dati che potrebbero non essere disponibili quando viene chiamato il costruttore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-152">Initializes data that might not be available when the constructor is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-153">Questo metodo non può essere chiamato direttamente.</span><span class="sxs-lookup"><span data-stu-id="e7beb-153">This method cannot be called directly.</span></span> <span data-ttu-id="e7beb-154">Per personalizzare l'inizializzazione, è possibile derivare da questa classe ed eseguire l'override di `Initialize` metodo.</span><span class="sxs-lookup"><span data-stu-id="e7beb-154">To customize initialization, you can derive from this class and override the `Initialize` method.</span></span> <span data-ttu-id="e7beb-155">Se si esegue l'override di questo metodo, chiamare il controllo di base `Initialize` metodo.</span><span class="sxs-lookup"><span data-stu-id="e7beb-155">If you override this method, call the base control's `Initialize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBinaryData">
      <MemberSignature Language="C#" Value="public bool IsBinaryData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBinaryData" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBinaryData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBinaryData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBinaryData : bool" Usage="System.Web.DynamicData.MetaColumn.IsBinaryData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsBinaryData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-156">Ottiene un valore che indica se il campo dati contiene dati binari.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-156">Gets a value that indicates whether the data field contains binary data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-157">
            <see langword="true" /> se il campo dati contiene dati binari; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-157">
              <see langword="true" /> if the data field contains binary data; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsCustomProperty">
      <MemberSignature Language="C#" Value="public bool IsCustomProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsCustomProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCustomProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCustomProperty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomProperty : bool" Usage="System.Web.DynamicData.MetaColumn.IsCustomProperty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsCustomProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-158">Ottiene un valore che indica se il campo dati esiste nel database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-158">Gets a value that indicates whether the data field exists in the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-159">
            <see langword="true" /> se il campo dati non esiste nel database; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-159">
              <see langword="true" /> if the data field does not exist in the database; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-160">Utilizzare il <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> proprietà per determinare se un campo dati è nel database o se si tratta di una proprietà aggiuntiva che è stato aggiunto all'oggetto di contesto dei dati.</span><span class="sxs-lookup"><span data-stu-id="e7beb-160">Use the <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> property to determine whether a data field is in the database or if it is an extra property that was added to the data context object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFloatingPoint">
      <MemberSignature Language="C#" Value="public bool IsFloatingPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFloatingPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFloatingPoint As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFloatingPoint { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFloatingPoint : bool" Usage="System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsFloatingPoint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-161">Ottiene un valore che indica se il campo dati è un tipo in virgola mobile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-161">Gets a value that indicates whether the data field is a floating-point type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-162">
            <see langword="true" /> se il campo dati è un tipo in virgola mobile; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-162">
              <see langword="true" /> if the data field is a floating-point type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-163">I tipi `float`, `double`, e `decimal` sono tipi a virgola mobile.</span><span class="sxs-lookup"><span data-stu-id="e7beb-163">The types `float`, `double`, and `decimal` are floating point types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsForeignKeyComponent">
      <MemberSignature Language="C#" Value="public bool IsForeignKeyComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForeignKeyComponent" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsForeignKeyComponent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsForeignKeyComponent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsForeignKeyComponent : bool" Usage="System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsForeignKeyComponent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-164">Ottiene un valore che indica se il campo dati fa parte di una chiave esterna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-164">Gets a value that indicates whether the data field is part of a foreign key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-165">
            <see langword="true" /> se il campo dati fa parte di una chiave esterna; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-165">
              <see langword="true" /> if the data field is part of a foreign key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey" />
      </Docs>
    </Member>
    <Member MemberName="IsGenerated">
      <MemberSignature Language="C#" Value="public bool IsGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsGenerated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGenerated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGenerated : bool" Usage="System.Web.DynamicData.MetaColumn.IsGenerated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsGenerated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-166">Ottiene un valore che indica se il valore del campo dati viene generato automaticamente nel database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-166">Gets a value that indicates whether the data field value is automatically generated in the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-167">
            <see langword="true" /> se il valore del campo dati viene generato automaticamente nel database; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-167">
              <see langword="true" /> if the data field value is automatically generated in the database; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInteger">
      <MemberSignature Language="C#" Value="public bool IsInteger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInteger" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsInteger" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInteger As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInteger { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInteger : bool" Usage="System.Web.DynamicData.MetaColumn.IsInteger" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsInteger</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-168">Ottiene un valore che indica se il tipo di campo dati è un tipo integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-168">Gets a value that indicates whether the data field type is an integer type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-169">
            <see langword="true" /> se il tipo di campo dati è un tipo integer; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-169">
              <see langword="true" /> if the data field type is an integer type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-170">I tipi `byte`, `short`, `int`, e `long` sono tipi integer.</span><span class="sxs-lookup"><span data-stu-id="e7beb-170">The types `byte`, `short`, `int`, and `long` are integer types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsLongString">
      <MemberSignature Language="C#" Value="public bool IsLongString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLongString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsLongString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLongString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLongString { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLongString : bool" Usage="System.Web.DynamicData.MetaColumn.IsLongString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsLongString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-171">Ottiene un valore che indica se il tipo di campo dati può contenere stringhe lunghe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-171">Gets a value that indicates whether the data field type can contain long strings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-172">
            <see langword="true" /> se il tipo di campo dati può contenere stringhe lunghe; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-172">
              <see langword="true" /> if the data field type can contain long strings; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-173">I tipi SQL `text`, `ntext`, `varchar`, e `nvarchar` può contenere stringhe lunghe.</span><span class="sxs-lookup"><span data-stu-id="e7beb-173">The SQL types `text`, `ntext`, `varchar`, and `nvarchar` can contain long strings.</span></span> <span data-ttu-id="e7beb-174">Il valore di <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> proprietà viene utilizzata per determinare se il modello di campo casella di testo o TextArea viene visualizzato per consentire agli utenti di modificare il valore del campo.</span><span class="sxs-lookup"><span data-stu-id="e7beb-174">The value of the <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is used to determine whether the TextBox or TextArea field template is displayed to enable users to modify the field value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public bool IsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimaryKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimaryKey : bool" Usage="System.Web.DynamicData.MetaColumn.IsPrimaryKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsPrimaryKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-175">Ottiene un valore che indica se il campo dati fa parte della chiave primaria della tabella.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-175">Gets a value that indicates whether the data field is part of the table's primary key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-176">
            <see langword="true" /> se il campo dati fa parte della chiave primaria della tabella; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-176">
              <see langword="true" /> if the data field is part of the table's primary key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.DynamicData.MetaColumn.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-177">Ottiene un valore che indica se il campo dati è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-177">Gets a value that indicates whether the data field is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-178">
            <see langword="true" /> se il campo dati è in sola lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-178">
              <see langword="true" /> if the data field is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequired">
      <MemberSignature Language="C#" Value="public bool IsRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequired" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRequired : bool" Usage="System.Web.DynamicData.MetaColumn.IsRequired" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsRequired</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-179">Ottiene un valore che indica se il campo dati richiede un valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-179">Gets a value that indicates whether the data field requires a value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-180">
            <see langword="true" /> se il campo dati richiede un valore; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-180">
              <see langword="true" /> if the data field requires a value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-181">Il <xref:System.Web.DynamicData.MetaColumn.Description%2A> proprietà verifica se un <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attributo viene applicato per il campo dei dati o se lo schema del database contiene informazioni sui dati del campo è obbligatorio nel database per determinare se il campo dei dati richiede un valore.</span><span class="sxs-lookup"><span data-stu-id="e7beb-181">The <xref:System.Web.DynamicData.MetaColumn.Description%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is applied to the data field or if the database schema contains information about the data field being required in the database to determine whether the data field requires a value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />
        <altmember cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Nullable" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="IsString">
      <MemberSignature Language="C#" Value="public bool IsString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsString { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsString : bool" Usage="System.Web.DynamicData.MetaColumn.IsString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-182">Ottiene un valore che indica se il tipo di campo dati è un tipo string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-182">Gets a value that indicates whether the data field type is a string type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-183">
            <see langword="true" /> se il tipo di campo dati è un tipo string; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-183">
              <see langword="true" /> if the data field type is a string type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsLongString" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int" Usage="System.Web.DynamicData.MetaColumn.MaxLength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.MaxLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-184">Ottiene un valore che indica la lunghezza massima dei dati che possono essere archiviati nel campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-184">Gets a value that indicates the maximum length of data that can be stored in the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-185">Lunghezza massima dei dati che possono essere archiviati nel campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-185">The maximum length of data that can be stored in the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-186">Il <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> proprietà verifica se un <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attributo viene applicato per il campo dei dati e recupera il valore della <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7beb-186">The <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> property.</span></span> <span data-ttu-id="e7beb-187">Se un <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attributo non viene applicato per il campo dei dati, il <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> proprietà Usa il tipo di database per recuperare la lunghezza massima consentita.</span><span class="sxs-lookup"><span data-stu-id="e7beb-187">If a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is not applied to the data field, the <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> property uses the database type to retrieve the maximum length allowed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength" />
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Model : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaColumn.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-188">Ottiene l'oggetto <see cref="T:System.Web.DynamicData.MetaModel" /> che rappresenta il modello dati a cui appartiene questo campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-188">Gets the <see cref="T:System.Web.DynamicData.MetaModel" /> object that represents the data model that this data field belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-189">Oggetto che rappresenta il modello dati a cui appartiene questo campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-189">An object that represents the data model that this data field belongs to.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.MetaModel" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Table" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.DynamicData.MetaColumn.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-190">Ottiene il nome del campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-190">Gets the name of the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-191">Nome del campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-191">The name of the data field.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string" Usage="System.Web.DynamicData.MetaColumn.NullDisplayText" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.NullDisplayText</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.NullDisplayText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-192">Ottiene la didascalia visualizzata per un campo quando il valore di campo è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-192">Gets the caption that is displayed for a field when the field's value is <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-193">Didascalia visualizzata per un campo quando il valore di campo è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-193">The caption that is displayed for a field when the field's value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-194">Il <xref:System.Web.DynamicData.MetaColumn.NullDisplayText%2A> proprietà verifica se un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attributo viene applicato per il campo dei dati e recupera il valore della <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7beb-194">The <xref:System.Web.DynamicData.MetaColumn.NullDisplayText%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e7beb-195">Se un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attributo non viene trovato, questa proprietà consente di verificare se un <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attributo viene applicato per recuperare le informazioni di formattazione.</span><span class="sxs-lookup"><span data-stu-id="e7beb-195">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Prompt">
      <MemberSignature Language="C#" Value="public virtual string Prompt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prompt" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Prompt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Prompt As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prompt { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prompt : string" Usage="System.Web.DynamicData.MetaColumn.Prompt" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Prompt</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-196">Ottiene un valore che può essere utilizzato come filigrana nell'interfaccia utente, associato ai dati nella colonna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-196">Gets a value that can be used as a watermark in the UI that is bound to data in the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-197">Valore che può essere utilizzato come filigrana nell'interfaccia utente, associato ai dati nella colonna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-197">A value that can be used as a watermark in the UI that is bound to data in the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-198">Oggetto `null` o può essere restituita una stringa vuota.</span><span class="sxs-lookup"><span data-stu-id="e7beb-198">A `null` or empty string can be returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7beb-199">Questa proprietà è impostata tramite il <xref:System.ComponentModel.DataAnnotations.DisplayAttribute> attributo nella definizione della colonna nella classe di metadati per l'entità di dati.</span><span class="sxs-lookup"><span data-stu-id="e7beb-199">This property is set by the <xref:System.ComponentModel.DataAnnotations.DisplayAttribute> attribute in the column's definition in the meta class for the data entity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.ModelProviders.ColumnProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.ColumnProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As ColumnProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::ModelProviders::ColumnProvider ^ Provider { System::Web::DynamicData::ModelProviders::ColumnProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.DynamicData.ModelProviders.ColumnProvider" Usage="System.Web.DynamicData.MetaColumn.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.ColumnProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-200">Ottiene l'oggetto provider di astrazione utilizzato per generare l'oggetto <see cref="T:System.Web.DynamicData.MetaColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-200">Gets the abstraction provider object that is used to generate the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-201">Oggetto provider di astrazione utilizzato per generare l'oggetto <see cref="T:System.Web.DynamicData.MetaColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-201">The abstraction provider object that is used to generate the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Docs>
    </Member>
    <Member MemberName="RequiredErrorMessage">
      <MemberSignature Language="C#" Value="public string RequiredErrorMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiredErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequiredErrorMessage { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiredErrorMessage : string" Usage="System.Web.DynamicData.MetaColumn.RequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.RequiredErrorMessage</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-202">Ottiene il messaggio di errore visualizzato quando il campo dati richiede un valore ma il suo valore è vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-202">Gets the error message that is displayed when the data field requires a value but its value is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-203">Messaggio di errore visualizzato quando il campo dati richiede un valore ma il suo valore è vuoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-203">The error message that is displayed when the data field requires a value but its value is empty.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsRequired" />
      </Docs>
    </Member>
    <Member MemberName="ResetMetadata">
      <MemberSignature Language="C#" Value="public void ResetMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.ResetMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMetadata ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetMetadata();" />
      <MemberSignature Language="F#" Value="abstract member ResetMetadata : unit -&gt; unit&#xA;override this.ResetMetadata : unit -&gt; unit" Usage="metaColumn.ResetMetadata " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaColumn.ResetMetadata</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-204">Cancella i metadati della colonna memorizzati nella cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-204">Clears cached column metadata.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-205">I metadati della colonna sono informazioni che deriva da attributi e che viene memorizzato nella cache per le prestazioni.</span><span class="sxs-lookup"><span data-stu-id="e7beb-205">The column metadata is information that is derived from attributes and that is cached for performance.</span></span> <span data-ttu-id="e7beb-206">Chiamare questo metodo cancella la cache dei metadati per questa colonna.</span><span class="sxs-lookup"><span data-stu-id="e7beb-206">Calling this method clears the metadata cache for this column.</span></span> <span data-ttu-id="e7beb-207">La cache dei metadati viene ricompilata alla successiva tutte le informazioni che sono derivate dai metadati viene richiesto.</span><span class="sxs-lookup"><span data-stu-id="e7beb-207">The metadata cache is rebuilt the next time any information that is derived from metadata is requested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public virtual bool Scaffold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Scaffold { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Scaffold : bool with get, set" Usage="System.Web.DynamicData.MetaColumn.Scaffold" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Scaffold</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-208">Ottiene un valore che indica se il campo dati deve essere visualizzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-208">Gets a value that indicates whether the data field should be displayed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-209">
            <see langword="true" /> se il campo dati deve essere visualizzato; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-209">
              <see langword="true" /> if the data field should be displayed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-210">Il <xref:System.Web.DynamicData.MetaColumn.Scaffold%2A> proprietà indica se un campo dati deve essere visualizzato quando viene generato automaticamente da ASP.NET Dynamic Data.</span><span class="sxs-lookup"><span data-stu-id="e7beb-210">The <xref:System.Web.DynamicData.MetaColumn.Scaffold%2A> property indicates whether a data field should be displayed when it is automatically generated by ASP.NET Dynamic Data.</span></span> <span data-ttu-id="e7beb-211">Questa proprietà consente di verificare se un <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attributo viene applicato per il campo dei dati e restituisce il valore della <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7beb-211">This property verifies if a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is applied to the data field and returns the value of the <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e7beb-212">Se un <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attributo non viene applicato per il campo dei dati, Dynamic Data utilizza le regole seguenti per determinare se visualizzare la colonna:</span><span class="sxs-lookup"><span data-stu-id="e7beb-212">If a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is not applied to the data field, Dynamic Data uses the following rules to determine whether to display the column:</span></span>  
  
-   <span data-ttu-id="e7beb-213">Se un <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attributo viene applicato per il campo dei dati, viene visualizzato il campo dei dati.</span><span class="sxs-lookup"><span data-stu-id="e7beb-213">If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field, the data field is displayed.</span></span> <span data-ttu-id="e7beb-214">Questa regola sostituisce tutte le altre regole.</span><span class="sxs-lookup"><span data-stu-id="e7beb-214">This rule overrides all the other rules.</span></span>  
  
-   <span data-ttu-id="e7beb-215">Se il valore della <xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A> proprietà `true`, non viene visualizzato il campo dei dati.</span><span class="sxs-lookup"><span data-stu-id="e7beb-215">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A> property is `true`, the data field is not displayed.</span></span> <span data-ttu-id="e7beb-216">Questo errore si verifica perché Dynamic Data gestisce i campi di chiave esterna in modo diverso e non sarà in genere visualizzato il valore del campo di chiave esterna.</span><span class="sxs-lookup"><span data-stu-id="e7beb-216">This occurs because Dynamic Data handles foreign-key fields in a different way and will not typically display the foreign-key field value.</span></span>  
  
-   <span data-ttu-id="e7beb-217">Se il valore della <xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A> proprietà `true`, non viene visualizzato il campo dei dati.</span><span class="sxs-lookup"><span data-stu-id="e7beb-217">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A> property is `true`, the data field is not displayed.</span></span> <span data-ttu-id="e7beb-218">In genere i campi che vengono generati automaticamente nel database non contiene informazioni rilevanti.</span><span class="sxs-lookup"><span data-stu-id="e7beb-218">Typically fields that are automatically generated in the database do not contain relevant information.</span></span> <span data-ttu-id="e7beb-219">Assicurarsi di aver applicato la <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attributo per il campo dei dati, se il campo dei dati deve essere visualizzato.</span><span class="sxs-lookup"><span data-stu-id="e7beb-219">Make sure that you apply the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute to the data field, if the data field must be displayed.</span></span>  
  
-   <span data-ttu-id="e7beb-220">Se il valore della <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> proprietà `true`, non viene visualizzato il campo dei dati.</span><span class="sxs-lookup"><span data-stu-id="e7beb-220">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> property is `true`, the data field is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsGenerated" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsCustomProperty" />
      </Docs>
    </Member>
    <Member MemberName="ShortDisplayName">
      <MemberSignature Language="C#" Value="public virtual string ShortDisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ShortDisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ShortDisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ShortDisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ShortDisplayName : string" Usage="System.Web.DynamicData.MetaColumn.ShortDisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ShortDisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-221">Ottiene il nome breve per la colonna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-221">Gets the short name for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-222">Nome breve per la colonna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-222">The short name for the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-223">Questa proprietà viene fornita per <xref:System.Web.UI.WebControls.GridView> controllo e altri controlli in cui è necessario un nome breve causa di spazio di intestazione di colonna di limitato.</span><span class="sxs-lookup"><span data-stu-id="e7beb-223">This property is provided for <xref:System.Web.UI.WebControls.GridView> control and other controls where a short name is needed because of limited column-header space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public string SortExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortExpression : string" Usage="System.Web.DynamicData.MetaColumn.SortExpression" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.SortExpression</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-224">Ottiene l'espressione utilizzata per determinare l'ordinamento per il campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-224">Gets the expression that is used to determine the sort order for the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-225">Espressione utilizzata per determinare l'ordinamento per il campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-225">The expression that is used to determine the sort order for the data field.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaTable ^ Table { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaColumn.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-226">Ottiene l'oggetto <see cref="T:System.Web.DynamicData.MetaTable" /> che rappresenta la tabella a cui appartiene il campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-226">Gets the <see cref="T:System.Web.DynamicData.MetaTable" /> object that represents the table that the data field belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-227">Oggetto che rappresenta la tabella a cui appartiene il campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-227">An object that represents the table that the data field belongs to.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Model" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="metaColumn.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-228">Ottiene il nome del campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-228">Gets the data field name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7beb-229">Nome del campo dati, ovvero la rappresentazione di stringa della colonna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-229">The data field name, which is the string representation of the column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public TypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TypeCode TypeCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.TypeCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeCode As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TypeCode TypeCode { TypeCode get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeCode : TypeCode" Usage="System.Web.DynamicData.MetaColumn.TypeCode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.TypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-230">Ottiene il tipo del campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-230">Gets the type of the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-231">Tipo del campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-231">The type of the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-232">Il <xref:System.Web.DynamicData.MetaColumn.TypeCode%2A> derivato dal valore del valore della proprietà di <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7beb-232">The <xref:System.Web.DynamicData.MetaColumn.TypeCode%2A> property value is derived from the value of the <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.ColumnType" />
      </Docs>
    </Member>
    <Member MemberName="UIHint">
      <MemberSignature Language="C#" Value="public virtual string UIHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.UIHint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UIHint { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UIHint : string" Usage="System.Web.DynamicData.MetaColumn.UIHint" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.UIHint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7beb-233">Ottiene il nome del modello di campo specificato per il campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-233">Gets the name of the field template specified for the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7beb-234">Nome del modello di campo specificato per il campo dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7beb-234">The name of the field template specified for the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7beb-235">Il <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> proprietà verifica se un <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attributo viene applicato per il campo dei dati e recupera il valore della <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7beb-235">The <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e7beb-236">Se un <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attributo non viene applicato per il campo dei dati, il <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> proprietà restituisce una stringa vuota.</span><span class="sxs-lookup"><span data-stu-id="e7beb-236">If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is not applied to the data field, the <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>