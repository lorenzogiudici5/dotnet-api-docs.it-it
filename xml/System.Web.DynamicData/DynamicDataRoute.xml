<Type Name="DynamicDataRoute" FullName="System.Web.DynamicData.DynamicDataRoute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="730486adfa7e637120dd4c84d662be2b6b9c22f6" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39946091" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicDataRoute : System.Web.Routing.Route" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicDataRoute extends System.Web.Routing.Route" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicDataRoute" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicDataRoute&#xA;Inherits Route" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicDataRoute : System::Web::Routing::Route" />
  <TypeSignature Language="F#" Value="type DynamicDataRoute = class&#xA;    inherit Route" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Routing.Route</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta una route utilizzata da ASP.NET Dynamic Data.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le route consente di configurare il comportamento di Dynamic Data.  
  
 Il metodo statico <xref:System.Web.Routing.RouteTable.Routes%2A> proprietà del <xref:System.Web.Routing.RouteTable> tipo contiene una raccolta di route. Per i dati dinamici, una o più route sono generalmente registrate (aggiunte al <xref:System.Web.Routing.RouteTable.Routes%2A> proprietà) nel `Application_Start` evento nel file Global. asax. Le route, ad esempio, determinano se i dettagli per una riga di dati devono essere visualizzati nella stessa pagina dell'elenco di righe. È inoltre possibile determinare se i dettagli verranno visualizzati nella stessa pagina dell'elenco di righe per alcune tabelle ma non altri.  
  
 È impostato il <xref:System.Web.DynamicData.DynamicDataRoute.Action%2A>, <xref:System.Web.DynamicData.DynamicDataRoute.ViewName%2A>, <xref:System.Web.DynamicData.DynamicDataRoute.Table%2A>, e <xref:System.Web.DynamicData.DynamicDataRoute.Model%2A> le proprietà e forniscono un modello per l'URL nel <xref:System.Web.Routing.Route.%23ctor%2A> costruttore.  
  
 Dynamic Data utilizza il modello di URL che fornisce in base ai modelli URL per le richieste e per creare gli URL. Per ulteriori informazioni, vedere <xref:System.Web.DynamicData.DynamicDataRoute.%23ctor%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicDataRoute (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicDataRoute(System::String ^ url);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.DynamicDataRoute : string -&gt; System.Web.DynamicData.DynamicDataRoute" Usage="new System.Web.DynamicData.DynamicDataRoute url" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">Modello per l'URL.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.DynamicData.DynamicDataRoute" /> utilizzando il modello di URL specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In genere, si specificare gli URL creati utilizzando i parametri di sostituzione Dynamic Data. Ad esempio, se si passa la stringa "{table} / {action}", il risultato sarebbe l'URL "~ / /Products/ListDetails.aspx" quando si visualizza la tabella Product usando l'azione ListDetails.  
  
 Utilizzo di parametri di sostituzione non è obbligatorio. È possibile passare la stringa "Tabella/DynamicData", che produrrebbe "~ / /Table/DynamicData.aspx". È possibile passare "MyPageName" per produrre "~ / /MyPageName.aspx". I dati dinamici non si basano sull'URL per determinare le informazioni di tabella e l'azione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.DynamicData.DynamicDataRoute.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome di un'azione per una route.</summary>
        <value>Nome dell'azione per una route.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un elenco di nomi di azioni possibili, vedere <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType>. Se non si imposta questa proprietà quando si crea un'istanza di <xref:System.Web.DynamicData.DynamicDataRoute>, verrà applicata la route a tutte le azioni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionFromRouteData">
      <MemberSignature Language="C#" Value="public string GetActionFromRouteData (System.Web.Routing.RouteData routeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetActionFromRouteData(class System.Web.Routing.RouteData routeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(System.Web.Routing.RouteData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetActionFromRouteData(System::Web::Routing::RouteData ^ routeData);" />
      <MemberSignature Language="F#" Value="member this.GetActionFromRouteData : System.Web.Routing.RouteData -&gt; string" Usage="dynamicDataRoute.GetActionFromRouteData routeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeData" Type="System.Web.Routing.RouteData" />
      </Parameters>
      <Docs>
        <param name="routeData">Dati della route relativi alla richiesta corrente. Per ulteriori informazioni, vedere <see cref="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />.</param>
        <summary>Restituisce l'azione dall'oggetto <see cref="T:System.Web.Routing.RouteData" /> per la richiesta Web corrente di Dynamic Data.</summary>
        <returns>L'azione. Per un elenco di valori possibili, vedere <see cref="T:System.Web.DynamicData.PageAction" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">L'azione non è stata trovata nelle informazioni sul routing della richiesta Web.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberSignature Language="F#" Value="abstract member GetRouteData : System.Web.HttpContextBase -&gt; System.Web.Routing.RouteData&#xA;override this.GetRouteData : System.Web.HttpContextBase -&gt; System.Web.Routing.RouteData" Usage="dynamicDataRoute.GetRouteData httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext">Contiene informazioni sulla richiesta Web.</param>
        <summary>Restituisce le informazioni sul routing per una richiesta Web specifica.</summary>
        <returns>Informazioni sul routing per la richiesta Web.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `httpContext` parametro fornisce informazioni sulla richiesta Web è necessarie in modo che la tabella richiesta e l'azione può essere identificati.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableFromRouteData">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTableFromRouteData (System.Web.Routing.RouteData routeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTableFromRouteData(class System.Web.Routing.RouteData routeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(System.Web.Routing.RouteData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTableFromRouteData(System::Web::Routing::RouteData ^ routeData);" />
      <MemberSignature Language="F#" Value="member this.GetTableFromRouteData : System.Web.Routing.RouteData -&gt; System.Web.DynamicData.MetaTable" Usage="dynamicDataRoute.GetTableFromRouteData routeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeData" Type="System.Web.Routing.RouteData" />
      </Parameters>
      <Docs>
        <param name="routeData">Dati della route relativi alla richiesta corrente. Per ulteriori informazioni, vedere <see cref="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />.</param>
        <summary>Identifica la tabella associata a una richiesta di pagina Web di Dynamic Data.</summary>
        <returns>Metadati che descrivono una tabella visualizzata da Dynamic Data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">La tabella non è stata trovata nelle informazioni sul routing della richiesta Web.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualPath : System.Web.Routing.RequestContext * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData&#xA;override this.GetVirtualPath : System.Web.Routing.RequestContext * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="dynamicDataRoute.GetVirtualPath (requestContext, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">Contiene informazioni sulla richiesta Web.</param>
        <param name="values">Insieme di oggetti route per l'applicazione corrente.</param>
        <summary>Restituisce il percorso virtuale di una route.</summary>
        <returns>Percorso virtuale.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.Model" />
      <MemberSignature Language="VB.NET" Value="Public Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); void set(System::Web::DynamicData::MetaModel ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Model : System.Web.DynamicData.MetaModel with get, set" Usage="System.Web.DynamicData.DynamicDataRoute.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il modello dati a cui viene applicata la route.</summary>
        <value>Metadati del modello dati a cui viene applicata la route.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non si imposta questa proprietà quando si crea un'istanza di <xref:System.Web.DynamicData.DynamicDataRoute>, il modello predefinito per l'oggetto registrato <xref:System.Data.Linq.DataContext> viene utilizzata l'istanza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteHandler">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.DynamicDataRouteHandler RouteHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.DynamicDataRouteHandler RouteHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.RouteHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteHandler As DynamicDataRouteHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::DynamicDataRouteHandler ^ RouteHandler { System::Web::DynamicData::DynamicDataRouteHandler ^ get(); void set(System::Web::DynamicData::DynamicDataRouteHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RouteHandler : System.Web.DynamicData.DynamicDataRouteHandler with get, set" Usage="System.Web.DynamicData.DynamicDataRoute.RouteHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicDataRouteHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'oggetto che elabora le richieste per la route.</summary>
        <value>Gestore utilizzato per l'elaborazione delle richieste per la route.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.DynamicData.DynamicDataRoute.RouteHandler%2A> è identica alla proprietà di <xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=nameWithType> proprietà. Viene fornito come una versione fortemente tipizzata del <xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=nameWithType> proprietà per la codifica di praticità.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public string Table { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Table" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.Table" />
      <MemberSignature Language="VB.NET" Value="Public Property Table As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Table { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Table : string with get, set" Usage="System.Web.DynamicData.DynamicDataRoute.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome della tabella per la route.</summary>
        <value>Nome della tabella associata alla route.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non si imposta questa proprietà quando si crea un'istanza di <xref:System.Web.DynamicData.DynamicDataRoute>, la route verrà applicate a tutte le tabelle nel modello di dati che sono contrassegnate da <xref:System.Web.DynamicData.DynamicDataRoute.Model%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewName">
      <MemberSignature Language="C#" Value="public string ViewName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataRoute.ViewName" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewName : string with get, set" Usage="System.Web.DynamicData.DynamicDataRoute.ViewName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome della pagina aspx associata a una route.</summary>
        <value>Nome della pagina aspx associata alla route. Se non viene specificata alcuna pagina per la route, la proprietà restituisce il valore della proprietà <see cref="P:System.Web.DynamicData.DynamicDataRoute.Action" /> seguito da ".aspx".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dynamic data utilizza diversi nomi di pagina. aspx standard per creare l'interfaccia utente per consentire agli utenti di visualizzare, aggiornare ed eliminare i dati da una tabella specificata. Questi nomi di pagina includono List, Details, Edit, INSERT e ListDetails. Il <xref:System.Web.DynamicData.DynamicDataRoute.ViewName%2A> proprietà specifica quali di queste pagine deve essere utilizzato per una tabella specificata e l'azione.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>