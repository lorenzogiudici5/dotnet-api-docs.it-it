<Type Name="BooleanSwitch" FullName="System.Diagnostics.BooleanSwitch">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d753cb9396a08c9d5068ce9f8d81238b40a66e7" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39752463" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BooleanSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BooleanSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.BooleanSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class BooleanSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class BooleanSwitch : System::Diagnostics::Switch" />
  <TypeSignature Language="F#" Value="type BooleanSwitch = class&#xA;    inherit Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.SwitchLevel(typeof(System.Boolean))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornisce un'opzione di attivazione/disattivazione che controlla l'output del debug e di traccia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile usare un'opzione di traccia booleano per abilitare o disabilitare i messaggi in base alla loro importanza. Usare il <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> proprietà da ottenere il valore corrente dell'opzione.  
  
 È possibile abilitare o disabilitare un <xref:System.Diagnostics.BooleanSwitch> tramite il file di configurazione dell'applicazione e utilizzare quindi l'applicazione configurata <xref:System.Diagnostics.BooleanSwitch> valore nell'applicazione. In alternativa, è possibile creare un <xref:System.Diagnostics.BooleanSwitch> nel codice e impostare il <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> proprietà direttamente a una particolare sezione di codice di strumentazione.  
  
 Per configurare un <xref:System.Diagnostics.BooleanSwitch>, modificare il file di configurazione che corrisponde al nome dell'applicazione. All'interno di questo file, è possibile aggiungere o rimuovere un commutatore, impostare il valore o deselezionare tutte le opzioni impostate in precedenza dall'applicazione. Il file di configurazione deve essere formattato come nell'esempio seguente.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1"/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 Questa sezione di configurazione di esempio definisce una <xref:System.Diagnostics.BooleanSwitch> con il <xref:System.Diagnostics.Switch.DisplayName%2A> impostata su `mySwitch` e il <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> valore impostato su `true`. All'interno dell'applicazione, è possibile usare il valore di cambio configurato tramite la creazione di un <xref:System.Diagnostics.BooleanSwitch> con lo stesso nome, come illustrato nell'esempio di codice seguente.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/remarks.cs#2)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/remarks.vb#2)]  
  
 Per impostazione predefinita, il <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> viene impostata utilizzando il valore specificato nel file di configurazione. Configurarla con un valore pari a 0 per impostare il <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> proprietà `false`; configurarla con un valore diverso da zero per impostare le <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> proprietà `true`. Se il <xref:System.Diagnostics.BooleanSwitch> costruttore non è possibile trovare le impostazioni del commutatore iniziale nel file di configurazione, il <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> della nuova opzione è impostata su `false` per impostazione predefinita.  
  
 È necessario abilitare la tracciatura o di debug per usare un commutatore. La sintassi seguente è specifica del compilatore. Se si utilizzano i compilatori diversi da c# o Visual Basic, vedere la documentazione per il compilatore.  
  
-   Per abilitare il debug in c#, aggiungere il `/d:DEBUG` flag per la riga di comando del compilatore quando si compila il codice oppure è possibile aggiungere `#define DEBUG` nella parte superiore del file app. In Visual Basic, aggiungere il `/d:DEBUG=True` flag per la riga di comando del compilatore.  
  
-   Per abilitare la traccia in c#, aggiungere il `/d:TRACE` flag per la riga di comando del compilatore quando si compila il codice, o aggiungere `#define TRACE` nella parte superiore del file app. In Visual Basic, aggiungere il `/d:TRACE=True` flag per la riga di comando del compilatore.  
  
> [!NOTE]
>  Questi eseguire il debug e le opzioni del compilatore trace non sono necessarie quando si usa il <xref:System.Diagnostics.BooleanSwitch> classe in isolamento. Sono necessarie solo in combinazione con <xref:System.Diagnostics.Trace> o <xref:System.Diagnostics.Debug> metodi che vengono compilati in modo condizionale.  
  
 Per ulteriori informazioni sulla strumentazione dell'applicazione, vedere <xref:System.Diagnostics.Debug> e <xref:System.Diagnostics.Trace>. Per altre informazioni sulla configurazione e l'utilizzo delle opzioni di traccia, vedere [opzioni di traccia](~/docs/framework/debug-trace-profile/trace-switches.md).  
  
> [!NOTE]
>  Per migliorare le prestazioni, è possibile apportare <xref:System.Diagnostics.BooleanSwitch> membri `static` nella classe.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Diagnostics.BooleanSwitch> e Usa l'opzione per determinare se si desidera stampare un messaggio di errore. Si crea il commutatore a livello di classe. Il `Main` metodo passa la propria posizione a `MyMethod`, che consente di stampare un messaggio di errore e in cui si è verificato l'errore.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.BooleanSwitch" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">Nome da visualizzare in un'interfaccia utente.</param>
        <param name="description">Descrizione dell'opzione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.BooleanSwitch" /> con il nome visualizzato e la descrizione specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si crea una <xref:System.Diagnostics.BooleanSwitch>, il `displayName` parametro viene usato per trovare le impostazioni del commutatore iniziale. Se il costruttore non è possibile trovare le impostazioni iniziali, il <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> è impostata su `false` (disabilitato).  
  
 Per impostare il livello del <xref:System.Diagnostics.BooleanSwitch>, modificare il file di configurazione corrispondente al nome dell'applicazione. All'interno di questo file, è possibile aggiungere un commutatore e impostarne il valore, rimuovere un commutatore o cancellare tutte le opzioni impostate in precedenza dall'applicazione. Il file di configurazione deve essere formattato come nell'esempio seguente:  
  
```xml  
<configuration>  
    <system.diagnostics>  
       <switches>  
          <add name="mySwitch" value="10" />  
          <add name="myNewSwitch" value="20" />  
          <remove name="mySwitch" />  
          <clear/>  
       </switches>  
    </system.diagnostics>  
 </configuration>  
```  
  
> [!NOTE]
>  Le opzioni create devono essere `static`.  
  
   
  
## Examples  
 L'esempio seguente crea un <xref:System.Diagnostics.BooleanSwitch> e Usa l'opzione per determinare se si desidera stampare un messaggio di errore. L'opzione viene creata a livello di classe. Il `Main` metodo passa la propria posizione a `MyMethod`, che consente di stampare un messaggio di errore e in cui si è verificato l'errore.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description, defaultSwitchValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="defaultSwitchValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">Nome da visualizzare nell'interfaccia utente.</param>
        <param name="description">Descrizione dell'opzione.</param>
        <param name="defaultSwitchValue">Valore predefinito dell'opzione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.BooleanSwitch" /> con il nome visualizzato, la descrizione e il valore di opzione predefinito specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `displayName` parametro viene utilizzato per impostare il valore della <xref:System.Diagnostics.Switch.DisplayName%2A> proprietà e il `description` parametro viene utilizzato per impostare il valore della <xref:System.Diagnostics.Switch.Description%2A> proprietà. Il `defaultSwitchValue` parametro viene salvato come un campo e consente di inizializzare il <xref:System.Diagnostics.Switch.Value%2A> proprietà nel primo riferimento. Per altre informazioni sull'utilizzo di costruttore, vedere il <xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29> costruttore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta un valore che indica se l'opzione è abilitata o meno.</summary>
        <value>
          <see langword="true" /> se l'opzione è abilitata; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per impostazione predefinita, questo campo è impostato su `false` (disabilitato). Per abilitare il commutatore, assegnare il valore di questo campo `true`. Per disabilitare l'interruttore, assegnare il valore a `false`.  Il valore di questa proprietà è determinato dal valore della proprietà della classe base <xref:System.Diagnostics.Switch.SwitchSetting%2A>.  
  
> [!NOTE]
>  Questo metodo Usa il <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> flag per evitare di essere chiamato da codice non attendibile, è necessario solo il chiamante immediato disponga <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType> l'autorizzazione. Se il codice può essere chiamato da codice parzialmente attendibile, non passare l'input dell'utente a <xref:System.Runtime.InteropServices.Marshal> metodi senza convalida della classe.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Diagnostics.BooleanSwitch> e Usa l'opzione per determinare se si desidera stampare un messaggio di errore. L'opzione viene creata a livello di classe. Il `Main` metodo passa la propria posizione a `MyMethod`, che consente di stampare un messaggio di errore e il percorso in cui si è verificato l'errore.  
  
 [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Il chiamante non ha l'autorizzazione corretta.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per operare con codice non gestito. Valore richiesta <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberSignature Language="F#" Value="override this.OnValueChanged : unit -&gt; unit" Usage="booleanSwitch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se il nuovo valore della proprietà <see cref="P:System.Diagnostics.Switch.Value" /> può essere analizzato come valore booleano.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.BooleanSwitch.OnValueChanged%2A> metodo determina se il nuovo valore è una rappresentazione di stringa valida di un valore booleano ("false" o "true"). In tal caso, il metodo imposta il <xref:System.Diagnostics.Switch.SwitchSetting%2A> proprietà su 0 o 1.  In caso contrario, viene chiamato il metodo di base, che converte il valore stringa a valore integer, che viene quindi usato per impostare il <xref:System.Diagnostics.Switch.SwitchSetting%2A> proprietà.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>