<Type Name="DataReceivedEventArgs" FullName="System.Diagnostics.DataReceivedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="205ebec39040ed058ad9ffbdc4b91602849b5386" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30397215" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataReceivedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataReceivedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataReceivedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce i dati per gli eventi <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> e <see cref="E:System.Diagnostics.Process.ErrorDataReceived" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per raccogliere in modo asincrono reindirizzato <xref:System.Diagnostics.Process.StandardOutput%2A> o <xref:System.Diagnostics.Process.StandardError%2A> flusso di output di un processo, è necessario creare un metodo che gestisce gli eventi di output reindirizzato. Il metodo del gestore eventi viene chiamato quando il processo scrive nel flusso reindirizzato. Il delegato dell'evento chiama il gestore eventi con un'istanza di <xref:System.Diagnostics.DataReceivedEventArgs>. Il <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> proprietà contiene la riga di testo che il processo ha scritto nel flusso reindirizzato.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come eseguire le operazioni di lettura asincrone sul reindirizzato <xref:System.Diagnostics.Process.StandardOutput%2A> flusso del `sort` comando. Il `sort` comando è un'applicazione console che legge e ordina il testo immesso.  
  
 Nell'esempio viene creato un delegato per il `SortOutputHandler` gestore dell'evento e la associa il <xref:System.Diagnostics.Process.OutputDataReceived> evento. Il gestore eventi riceve righe di testo da reindirizzato <xref:System.Diagnostics.Process.StandardOutput%2A> flusso, formatta il testo e scrive il testo sullo schermo.  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public string Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la riga di caratteri che è stata scritta in un flusso di output di <see cref="T:System.Diagnostics.Process" /> reindirizzato.</summary>
        <value>Riga scritta da un <see cref="T:System.Diagnostics.Process" /> associato al relativo flusso di <see cref="P:System.Diagnostics.Process.StandardOutput" /> o di <see cref="P:System.Diagnostics.Process.StandardError" /> reindirizzato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si reindirizza il <xref:System.Diagnostics.Process.StandardOutput%2A> o <xref:System.Diagnostics.Process.StandardError%2A> flusso di un <xref:System.Diagnostics.Process> al gestore eventi viene generato un evento ogni volta che il processo scrive una riga nel flusso reindirizzato. Il <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> proprietà è la riga che di <xref:System.Diagnostics.Process> ha scritto nel flusso di output reindirizzato. Il gestore eventi è possibile utilizzare il <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> proprietà per filtrare l'output del processo o scrivere l'output in un percorso alternativo. Ad esempio, è possibile creare un gestore eventi che archivia tutte le righe di output di errore in un file di registro errori indicato.  
  
 Una riga viene definita come una sequenza di caratteri seguita da una riga feed ("\n") o un ritorno a capo seguito immediatamente da una riga feed ("\r\n"). I caratteri di riga vengono codificati utilizzando la tabella codici ANSI del sistema predefinito. Il <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> proprietà non include il ritorno a capo o avanzamento riga.  
  
 Quando il flusso è chiuso, una riga null viene inviata al gestore dell'evento. Verificare che il gestore di eventi controlla il <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> proprietà in modo appropriato prima di accedervi. Ad esempio, è possibile utilizzare il metodo statico <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> per convalidare il <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> proprietà nel gestore dell'evento.  
  
   
  
## Examples  
 L'esempio di codice seguente viene illustrato un semplice gestore eventi associato il <xref:System.Diagnostics.Process.OutputDataReceived> evento. Il gestore eventi riceve righe di testo da reindirizzato <xref:System.Diagnostics.Process.StandardOutput%2A> flusso, formatta il testo e scrive il testo sullo schermo.  
  
 [!code-cpp[Process_AsyncStreams#4](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/datareceivedevent.cpp#4)]
 [!code-csharp[Process_AsyncStreams#4](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/datareceivedevent.cs#4)]
 [!code-vb[Process_AsyncStreams#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/datareceivedevent.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>