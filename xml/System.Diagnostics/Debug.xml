<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Debug.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5331d1e20f17d7065dd117481b3458a017c3f98b4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">331d1e20f17d7065dd117481b3458a017c3f98b4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Provides a set of methods and properties that help debug your code.</source>
          <target state="translated">Fornisce un set di metodi e proprietà che consentono di eseguire il debug del codice.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>If you use methods in the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.</source>
          <target state="translated">Se si utilizzano i metodi nel <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> classe per stampare le informazioni di debug e controllare la logica con asserzioni, è possibile rendere il codice più affidabile senza conseguenze per le dimensioni delle prestazioni e il codice del prodotto shipping.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>This class provides methods to display an <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> dialog box, and to emit an assertion that will always fail.</source>
          <target state="translated">Questa classe fornisce metodi per visualizzare un <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> nella finestra di dialogo e la generazione di un'asserzione che avrà sempre esito negativo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>This class provides write methods in the following variations: <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph>.</source>
          <target state="translated">Questa classe fornisce metodi di scrittura nelle seguenti variazioni: <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph> e <ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.BooleanSwitch&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> classes provide means to dynamically control the tracing output.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.BooleanSwitch&gt;</ph> e <ph id="ph2">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> classi consentono di controllare dinamicamente l'output di traccia.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can modify the values of these switches without recompiling your application.</source>
          <target state="translated">È possibile modificare i valori di queste opzioni senza ricompilare l'applicazione.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>For information on using the configuration file to set a switch, see the <ph id="ph1">&lt;xref:System.Diagnostics.Switch&gt;</ph> class and the <bpt id="p1">[</bpt>Trace Switches<ept id="p1">](~/docs/framework/debug-trace-profile/trace-switches.md)</ept> topic.</source>
          <target state="translated">Per informazioni sull'utilizzo del file di configurazione per impostare un'opzione, vedere il <ph id="ph1">&lt;xref:System.Diagnostics.Switch&gt;</ph> classe e <bpt id="p1">[</bpt>opzioni di traccia<ept id="p1">](~/docs/framework/debug-trace-profile/trace-switches.md)</ept> argomento.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can customize the tracing output's target by adding <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances to or removing instances from the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">È possibile personalizzare la destinazione dell'output di tracciatura aggiungendo <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> istanze a o la rimozione di istanze di <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection is shared by both the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes; adding a trace listener to either class adds the listener to both.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme è condiviso da entrambi i <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> e <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> classi; aggiunta di un listener di traccia a una classe viene aggiunto il listener a entrambi.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> class emits trace output.</source>
          <target state="translated">Per impostazione predefinita, la <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> classe genera l'output di traccia.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>Adding a trace listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</source>
          <target state="translated">Aggiunta di un listener di traccia di <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> raccolta può causare un'eccezione generata durante la traccia, se una risorsa utilizzata dal listener di traccia non è disponibile.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</source>
          <target state="translated">Le condizioni e l'eccezione generata dipendono dal listener di traccia e non può essere enumerate in questo argomento.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>It may be useful to place calls to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> methods in <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> blocks to detect and handle any exceptions from trace listeners.</source>
          <target state="translated">Può essere utile effettuare le chiamate per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> metodi <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> blocchi per rilevare e gestire tutte le eccezioni dai listener di traccia.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can modify the level of indentation using the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph> property.</source>
          <target state="translated">È possibile modificare il livello di rientro utilizzando il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph> metodo o <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>To modify the indent spacing, use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> property.</source>
          <target state="translated">Per modificare la spaziatura del rientro, utilizzare il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can specify whether to automatically flush the output buffer after each write by setting the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">È possibile specificare se scaricare automaticamente il buffer di output dopo ogni scrittura impostando il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> proprietà <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, you can edit the configuration file corresponding to the name of your application.</source>
          <target state="translated">Per impostare il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> per <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, è possibile modificare il file di configurazione corrispondente al nome dell'applicazione.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The configuration file should be formatted as shown in the following example.</source>
          <target state="translated">Il file di configurazione deve essere formattato come illustrato nell'esempio seguente.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> attribute is applied to the methods of <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> attributo viene applicato ai metodi di <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>Compilers that support <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> ignore calls to these methods unless "DEBUG" is defined as a conditional compilation symbol.</source>
          <target state="translated">I compilatori che supportano <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> ignorano le chiamate a questi metodi, a meno che non "DEBUG" è definito come simbolo di compilazione condizionale.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>Refer to a compiler's documentation to determine whether <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> is supported and the syntax for defining a conditional compilation symbol.</source>
          <target state="translated">Fare riferimento alla documentazione di un compilatore per determinare se <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> è supportata e la sintassi per definire un simbolo di compilazione condizionale.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>In Visual Studio C# and Visual Basic projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</source>
          <target state="translated">Nei progetti di Visual Studio c# e Visual Basic, per impostazione predefinita, il simbolo di compilazione condizionale "DEBUG" è definito per le compilazioni di debug e il simbolo "TRACE" è definito per entrambe build di debug e rilascio.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>For information about how to disable this behavior, see the Visual Studio documentation.</source>
          <target state="translated">Per informazioni su come disabilitare questo comportamento, vedere la documentazione di Visual Studio.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>For information about conditional debugging in Visual C++, see <bpt id="p1">[</bpt>Debug Class (C++/CLI)<ept id="p1">](/cpp/dotnet/debug-class-cpp-cli)</ept>.</source>
          <target state="translated">Per informazioni sul debug condizionale in Visual C++, vedere <bpt id="p1">[</bpt>classe Debug (C + + CLI)<ept id="p1">](/cpp/dotnet/debug-class-cpp-cli)</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>To define the "DEBUG" conditional compilation symbol in C#, add the <ph id="ph1">`/d:DEBUG`</ph> option to the compiler command line when you compile your code using a command line, or add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">Per definire il simbolo di compilazione condizionale "DEBUG" in c#, aggiungere il <ph id="ph1">`/d:DEBUG`</ph> opzione alla riga di comando del compilatore quando si compila il codice tramite la riga di comando o aggiungere <ph id="ph2">`#define DEBUG`</ph> all'inizio del file.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>In Visual Basic, add the <ph id="ph1">`/d:DEBUG=True`</ph> option to the compiler command line or add <ph id="ph2">`#Const DEBUG=True`</ph> to the file.</source>
          <target state="translated">In Visual Basic, aggiungere il <ph id="ph1">`/d:DEBUG=True`</ph> opzione alla riga di comando del compilatore o aggiungere <ph id="ph2">`#Const DEBUG=True`</ph> al file.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> to indicate the beginning and end of a program's execution.</source>
          <target state="translated">L'esempio seguente usa <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> per indicare l'inizio e alla fine dell'esecuzione del programma.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The example also uses <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Unindent%2A&gt;</ph> to distinguish the tracing output.</source>
          <target state="translated">Nell'esempio viene inoltre utilizzato <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Unindent%2A&gt;</ph> per distinguere l'output di traccia.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>This type is thread safe.</source>
          <target state="translated">Questo tipo è thread-safe.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs messages and displays a message box that shows the call stack.</source>
          <target state="translated">Controlla una condizione. Se la condizione è <ph id="ph1">&lt;see langword="false" /&gt;</ph>, vengono generati messaggi e viene visualizzata una finestra di messaggio contenente lo stack di chiamate.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">Espressione condizionale da valutare.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, a failure message is not sent and the message box is not displayed.</source>
          <target state="translated">Se la condizione è <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il messaggio di errore non viene inviato e la finestra di messaggio non viene visualizzata.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, displays a message box that shows the call stack.</source>
          <target state="translated">Controlla una condizione. Se la condizione è <ph id="ph1">&lt;see langword="false" /&gt;</ph>, viene visualizzata una finestra di messaggio contenente lo stack di chiamate.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">Per impostazione predefinita, il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> metodo funziona solo nelle build di debug.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> metodo se si desidera eseguire asserzioni in versione Compila.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>asserzioni nel codice gestito<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The <ph id="ph1">`Assert`</ph> methods are not available for <ph id="ph2">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph> apps.</source>
          <target state="translated">Il <ph id="ph1">`Assert`</ph> metodi non sono disponibili per <ph id="ph2">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph> app.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%29&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">In genere, il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%29&gt;</ph> metodo viene utilizzato per identificare errori logici durante lo sviluppo di programmi.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> valuta la condizione.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends a failure message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Se il risultato è <ph id="ph1">`false`</ph>, viene inviato un messaggio di errore per il <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">È possibile personalizzare questo comportamento aggiungendo un <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> , o la rimozione di uno, il <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">Quando l'applicazione viene eseguita in modalità di interfaccia utente, viene visualizzata una finestra di messaggio che indica lo stack di chiamate con i numeri di file e riga.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">La finestra di messaggio contiene tre pulsanti: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ripetere<ept id="p2">**</ept>, e <bpt id="p3">**</bpt>ignora<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">Fare clic su di <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> pulsante chiude l'applicazione.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">Fare clic su <bpt id="p1">**</bpt>ripetere<ept id="p1">**</ept> invia il codice nel debugger se l'applicazione è in esecuzione in un debugger o consente di aprire un debugger in caso contrario.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">Fare clic su <bpt id="p1">**</bpt>ignora<ept id="p1">**</ept> continua con l'istruzione successiva nel codice.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source><ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> applicazioni non supportano le finestre di dialogo modale, in modo identico in modalità interfaccia utente e la modalità interfaccia utente non funzionano.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The message is written to the active trace listeners in debugging mode, or no message is written in release mode.</source>
          <target state="translated">Il messaggio viene scritto per il listener di traccia attivi in modalità di debug, o nessun messaggio viene scritto in modalità di rilascio.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">La visualizzazione della finestra di messaggio dipende dalla presenza del <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> non si trova nel <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> insieme, la finestra di messaggio non viene visualizzata.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> può essere rimossa mediante il <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>deselezionare<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, il <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>rimuovere<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, o chiamando il <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> sul (metodo)<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> proprietà (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">È possibile modificare il comportamento del <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> nel file di configurazione che corrisponde al nome dell'applicazione.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">In questo file, è possibile abilitare e disabilitare la finestra di messaggio di asserzione o impostare il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">Il file di configurazione deve essere formattato come segue:</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The following example creates an index for an array, performs some action to set the value of the index, and then calls <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> to confirm that the index value is valid.</source>
          <target state="translated">Nell'esempio seguente viene creato un indice per una matrice, esegue un'azione per impostare il valore dell'indice e quindi chiama <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> per confermare che il valore di indice è valido.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If it is not valid, <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> outputs the call stack.</source>
          <target state="translated">Se non è valido, <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> restituisce lo stack di chiamate.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">Espressione condizionale da valutare.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the specified message is not sent and the message box is not displayed.</source>
          <target state="translated">Se la condizione è <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il messaggio specificato non viene inviato e la finestra di messaggio non viene visualizzata.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Messaggio da inviare alla raccolta di <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs a specified message and displays a message box that shows the call stack.</source>
          <target state="translated">Controlla una condizione. Se la condizione è <ph id="ph1">&lt;see langword="false" /&gt;</ph>, genera un messaggio specificato e visualizza una finestra di messaggio contenente lo stack di chiamate.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">Per impostazione predefinita, il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> metodo funziona solo nelle build di debug.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> metodo se si desidera eseguire asserzioni in versione Compila.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>asserzioni nel codice gestito<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">In genere, il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> metodo viene utilizzato per identificare errori logici durante lo sviluppo di programmi.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> valuta la condizione.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends the specified diagnostic message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Se il risultato è <ph id="ph1">`false`</ph>, invia il messaggio di diagnostica specificato per il <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">È possibile personalizzare questo comportamento aggiungendo un <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> , o la rimozione di uno, il <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">Quando l'applicazione viene eseguita in modalità di interfaccia utente, viene visualizzata una finestra di messaggio che indica lo stack di chiamate con i numeri di file e riga.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">La finestra di messaggio contiene tre pulsanti: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ripetere<ept id="p2">**</ept>, e <bpt id="p3">**</bpt>ignora<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">Fare clic su di <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> pulsante chiude l'applicazione.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">Fare clic su <bpt id="p1">**</bpt>ripetere<ept id="p1">**</ept> invia il codice nel debugger se l'applicazione è in esecuzione in un debugger o consente di aprire un debugger in caso contrario.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">Fare clic su <bpt id="p1">**</bpt>ignora<ept id="p1">**</ept> continua con l'istruzione successiva nel codice.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">La visualizzazione della finestra di messaggio dipende dalla presenza del <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> non si trova nel <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> insieme, la finestra di messaggio non viene visualizzata.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> può essere rimossa mediante il <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>deselezionare<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, il <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>rimuovere<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, o chiamando il <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> sul (metodo)<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> proprietà (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">È possibile modificare il comportamento del <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> nel file di configurazione che corrisponde al nome dell'applicazione.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">In questo file, è possibile abilitare e disabilitare la finestra di messaggio di asserzione o impostare il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">Il file di configurazione deve essere formattato come segue:</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The following example checks whether the <ph id="ph1">`type`</ph> parameter is valid.</source>
          <target state="translated">Nell'esempio seguente viene controllato se il <ph id="ph1">`type`</ph> parametro è valido.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> outputs a message.</source>
          <target state="translated">Se <ph id="ph1">`type`</ph> è <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> genera un messaggio.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">Espressione condizionale da valutare.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the specified messages are not sent and the message box is not displayed.</source>
          <target state="translated">Se la condizione è <ph id="ph1">&lt;see langword="true" /&gt;</ph>, i messaggi specificati non vengono inviati e la finestra di messaggio non viene visualizzata.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Messaggio da inviare alla raccolta di <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The detailed message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Messaggio dettagliato da inviare alla raccolta di <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs two specified messages and displays a message box that shows the call stack.</source>
          <target state="translated">Controlla una condizione. Se la condizione è <ph id="ph1">&lt;see langword="false" /&gt;</ph>, vengono generati due messaggi specificati e viene visualizzata una finestra di messaggio contenente lo stack di chiamate.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">Per impostazione predefinita, il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> metodo funziona solo nelle build di debug.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> metodo se si desidera eseguire asserzioni in versione Compila.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>asserzioni nel codice gestito<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">In genere, il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29&gt;</ph> metodo viene utilizzato per identificare errori logici durante lo sviluppo di programmi.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> valuta la condizione.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends the specified diagnostic message and detailed message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Se il risultato è <ph id="ph1">`false`</ph>, invia il messaggio di diagnostica specificato e un messaggio dettagliato dal <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">È possibile personalizzare questo comportamento aggiungendo un <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> , o la rimozione di uno, il <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">Quando l'applicazione viene eseguita in modalità di interfaccia utente, viene visualizzata una finestra di messaggio che indica lo stack di chiamate con i numeri di file e riga.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">La finestra di messaggio contiene tre pulsanti: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ripetere<ept id="p2">**</ept>, e <bpt id="p3">**</bpt>ignora<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">Fare clic su di <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> pulsante chiude l'applicazione.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">Fare clic su <bpt id="p1">**</bpt>ripetere<ept id="p1">**</ept> invia il codice nel debugger se l'applicazione è in esecuzione in un debugger o consente di aprire un debugger in caso contrario.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">Fare clic su <bpt id="p1">**</bpt>ignora<ept id="p1">**</ept> continua con l'istruzione successiva nel codice.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">La visualizzazione della finestra di messaggio dipende dalla presenza del <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> non si trova nel <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> insieme, la finestra di messaggio non viene visualizzata.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> può essere rimossa mediante il <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>deselezionare<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, il <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>rimuovere<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, o chiamando il <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> sul (metodo)<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> proprietà (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">È possibile modificare il comportamento del <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> nel file di configurazione che corrisponde al nome dell'applicazione.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">In questo file, è possibile abilitare e disabilitare la finestra di messaggio di asserzione o impostare il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">Il file di configurazione deve essere formattato come segue:</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The following example checks whether the <ph id="ph1">`type`</ph> parameter is valid.</source>
          <target state="translated">Nell'esempio seguente viene controllato se il <ph id="ph1">`type`</ph> parametro è valido.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> outputs two messages.</source>
          <target state="translated">Se <ph id="ph1">`type`</ph> è <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> vengono generati due messaggi.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">Espressione condizionale da valutare.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the specified messages are not sent and the message box is not displayed.</source>
          <target state="translated">Se la condizione è <ph id="ph1">&lt;see langword="true" /&gt;</ph>, i messaggi specificati non vengono inviati e la finestra di messaggio non viene visualizzata.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Messaggio da inviare alla raccolta di <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The composite format string to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Stringa di formato composito da inviare alla raccolta <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>This message contains text intermixed with zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Questo messaggio contiene testo combinato con zero o più elementi di formato, che corrispondono a oggetti nella matrice <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>An object array that contains zero or more objects to format.</source>
          <target state="translated">Matrice di oggetti che contiene zero o più oggetti da formattare.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</source>
          <target state="translated">Controlla una condizione. Se la condizione è <ph id="ph1">&lt;see langword="false" /&gt;</ph>, vengono generati due messaggi (semplice e formattato) e viene visualizzata una finestra di messaggio contenente lo stack di chiamate.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Questo metodo utilizza il di .NET Framework per convertire il valore di un oggetto nella relativa rappresentazione di testo e incorporare tale rappresentazione in una stringa.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The resulting string is sent to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">La stringa risultante viene inviata al <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">Per impostazione predefinita, il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> metodo funziona solo nelle build di debug.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">Utilizzare il <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> metodo se si desidera eseguire asserzioni in versione Compila.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>asserzioni nel codice gestito<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">In genere, il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> metodo viene utilizzato per identificare errori logici durante lo sviluppo di programmi.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> valuta la condizione.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>If the result is <ph id="ph1">`false`</ph>, The <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method is called and the <ph id="ph3">`detailMessageFormat`</ph> string and <ph id="ph4">`args`</ph> array are passed in as parameters.</source>
          <target state="translated">Se il risultato è <ph id="ph1">`false`</ph>, <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> metodo viene chiamato e <ph id="ph3">`detailMessageFormat`</ph> stringa e <ph id="ph4">`args`</ph> matrice vengono passati come parametri.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> then sends the specified text message and the formatted text message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> quindi invia il messaggio di testo specificato e il messaggio di testo formattato per la <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">È possibile personalizzare questo comportamento aggiungendo un <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> , o la rimozione di uno, il <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">Quando l'applicazione viene eseguita in modalità di interfaccia utente, viene visualizzata una finestra di messaggio che indica lo stack di chiamate con i numeri di file e riga.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">La finestra di messaggio contiene tre pulsanti: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>ripetere<ept id="p2">**</ept>, e <bpt id="p3">**</bpt>ignora<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">Fare clic su di <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> pulsante chiude l'applicazione.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">Fare clic su <bpt id="p1">**</bpt>ripetere<ept id="p1">**</ept> invia il codice nel debugger se l'applicazione è in esecuzione in un debugger o consente di aprire un debugger in caso contrario.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">Fare clic su <bpt id="p1">**</bpt>ignora<ept id="p1">**</ept> continua con l'istruzione successiva nel codice.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">La visualizzazione della finestra di messaggio dipende dalla presenza del <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> non si trova nel <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> insieme, la finestra di messaggio non viene visualizzata.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> può essere rimossa mediante il <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>deselezionare<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, il <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>rimuovere<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, o chiamando il <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> sul (metodo)<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> proprietà (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">È possibile modificare il comportamento del <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> nel file di configurazione che corrisponde al nome dell'applicazione.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">In questo file, è possibile abilitare e disabilitare la finestra di messaggio di asserzione o impostare il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">Il file di configurazione deve essere formattato come segue:</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Gets or sets a value indicating whether <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph> should be called on the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> after every write.</source>
          <target state="translated">Ottiene o imposta un valore che indica se chiamare il metodo <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph> sulla proprietà <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> dopo ogni operazione di scrittura.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph> is called on the <ph id="ph3">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> after every write; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se il metodo <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph> viene chiamato sulla proprietà <ph id="ph3">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> dopo ogni operazione di scrittura; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Il valore predefinito è <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.</source>
          <target state="translated">La cancellazione del flusso non svuotamento del codificatore sottostante a meno che non chiama in modo esplicito <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Impostazione <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> a <ph id="ph2">`true`</ph> , i dati verranno scaricati dal buffer nel flusso, ma lo stato del codificatore non verrà rimosso.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">In questo modo il codificatore mantenere lo stato (caratteri parziali) in modo che può codificare correttamente il blocco successivo di caratteri.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Questo scenario riguarda UTF8 e UTF7, in cui alcuni caratteri possono essere codificati solo dopo che il codificatore riceve adiacenti carattere o caratteri.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, you can also edit the configuration file corresponding to the name of your application.</source>
          <target state="translated">Per impostare il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> per <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, è anche possibile modificare il file di configurazione corrispondente al nome dell'applicazione.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>The configuration file should be formatted as shown in the following example.</source>
          <target state="translated">Il file di configurazione deve essere formattato come illustrato nell'esempio seguente.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>for operating with unmanaged code.</source>
          <target state="translated">per operare con codice non gestito.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Demand value <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; associated enumeration: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Valore richiesta <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; enumerazione associata: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Close">
          <source>Flushes the output buffer and then calls the <ph id="ph1">&lt;see langword="Close" /&gt;</ph> method on each of the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">Svuota il buffer dell'output e quindi chiama il metodo <ph id="ph1">&lt;see langword="Close" /&gt;</ph> per ogni <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Use this method when the output goes to a file, such as to the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">Utilizzare questo metodo quando l'output viene inserito in un file, ad esempio per il <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.</source>
          <target state="translated">La cancellazione del flusso non svuotamento del codificatore sottostante a meno che non chiama in modo esplicito <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Impostazione <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> a <ph id="ph2">`true`</ph> , i dati verranno scaricati dal buffer nel flusso, ma lo stato del codificatore non verrà rimosso.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">In questo modo il codificatore mantenere lo stato (caratteri parziali) in modo che può codificare correttamente il blocco successivo di caratteri.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Questo scenario riguarda UTF8 e UTF7, in cui alcuni caratteri possono essere codificati solo dopo che il codificatore riceve adiacenti carattere o caratteri.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> named <ph id="ph2">`myTextListener`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> denominato <ph id="ph2">`myTextListener`</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source><ph id="ph1">`myTextListener`</ph> uses a <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> called <ph id="ph3">`myOutputWriter`</ph> to write to a file named <ph id="ph4">`TestFile.txt`</ph>.</source>
          <target state="translated"><ph id="ph1">`myTextListener`</ph> Usa un <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> chiamato <ph id="ph3">`myOutputWriter`</ph> per scrivere in un file denominato <ph id="ph4">`TestFile.txt`</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the output.</source>
          <target state="translated">L'esempio crea il writer di testo, un flusso e file, scrive una riga di testo al file e quindi scarica e chiude l'output.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>for operating with unmanaged code.</source>
          <target state="translated">per operare con codice non gestito.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Demand value <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; associated enumeration: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Valore richiesta <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; enumerazione associata: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Emits an error message.</source>
          <target state="translated">Genera un messaggio di errore.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>A message to emit.</source>
          <target state="translated">Messaggio da generare.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>Emits the specified error message.</source>
          <target state="translated">Genera il messaggio di errore specificato.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The default behavior is that the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> outputs the message to a message box when the application is running in user interface mode and to the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Il comportamento predefinito prevede che il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> genera il messaggio in una finestra di messaggio quando l'applicazione è in esecuzione in modalità interfaccia utente e di ottenere il <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> istanze il <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">La visualizzazione della finestra di messaggio dipende dalla presenza del <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> non si trova nel <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> insieme, la finestra di messaggio non viene visualizzata.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> può essere rimossa mediante il <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>deselezionare<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, il <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>rimuovere<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, o chiamando il <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> sul (metodo)<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> proprietà (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">È possibile personalizzare questo comportamento aggiungendo un <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> , o la rimozione di uno, il <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method to print a message during exception handling.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> metodo per stampare un messaggio durante la gestione delle eccezioni.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method in a switch statement.</source>
          <target state="translated">È inoltre possibile utilizzare il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> metodo in un'istruzione switch.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>A message to emit.</source>
          <target state="translated">Messaggio da generare.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>A detailed message to emit.</source>
          <target state="translated">Messaggio dettagliato da generare.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>Emits an error message and a detailed error message.</source>
          <target state="translated">Genera un messaggio di errore e un messaggio di errore dettagliato.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The default behavior is that the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> outputs the message to a message box when the application is running in user interface mode and to the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">Il comportamento predefinito prevede che il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> genera il messaggio in una finestra di messaggio quando l'applicazione è in esecuzione in modalità interfaccia utente e di ottenere il <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> istanze il <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">La visualizzazione della finestra di messaggio dipende dalla presenza del <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> non si trova nel <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> insieme, la finestra di messaggio non viene visualizzata.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> può essere rimossa mediante il <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>deselezionare<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, il <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>rimuovere<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, o chiamando il <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> sul (metodo)<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> proprietà (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">È possibile personalizzare questo comportamento aggiungendo un <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> , o la rimozione di uno, il <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method to print a message during exception handling.</source>
          <target state="translated">L'esempio seguente usa il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> metodo per stampare un messaggio durante la gestione delle eccezioni.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method in a switch statement.</source>
          <target state="translated">È inoltre possibile utilizzare il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> metodo in un'istruzione switch.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Flush">
          <source>Flushes the output buffer and causes buffered data to write to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Svuota il buffer di output e determina la scrittura dei dati del buffer nell'insieme <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.</source>
          <target state="translated">La cancellazione del flusso non svuotamento del codificatore sottostante a meno che non chiama in modo esplicito <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Impostazione <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> a <ph id="ph2">`true`</ph> , i dati verranno scaricati dal buffer nel flusso, ma lo stato del codificatore non verrà rimosso.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">In questo modo il codificatore mantenere lo stato (caratteri parziali) in modo che può codificare correttamente il blocco successivo di caratteri.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Questo scenario riguarda UTF8 e UTF7, in cui alcuni caratteri possono essere codificati solo dopo che il codificatore riceve adiacenti carattere o caratteri.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> named <ph id="ph2">`myTextListener`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> denominato <ph id="ph2">`myTextListener`</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source><ph id="ph1">`myTextListener`</ph> uses a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> called <ph id="ph3">`myFileStream`</ph> to write to a file named <ph id="ph4">`TestFile.txt`</ph>.</source>
          <target state="translated"><ph id="ph1">`myTextListener`</ph> Usa un <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> chiamato <ph id="ph3">`myFileStream`</ph> per scrivere in un file denominato <ph id="ph4">`TestFile.txt`</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>The example creates the stream, opens the file if it exists or creates a new one, writes one line of text to the file, and then flushes and closes the output.</source>
          <target state="translated">Nell'esempio viene creato il flusso, apre il file se esistente o crearne una nuova, scrivere una riga di testo nel file e quindi scarica e chiude l'output.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Indent">
          <source>Increases the current <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph> by one.</source>
          <target state="translated">Incrementa la proprietà <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph> corrente di uno.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Indent">
          <source>The following example sets the indent level and emits debugging messages.</source>
          <target state="translated">Nell'esempio seguente imposta il livello di rientro e trasmette i messaggi di debug.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Indent">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>Gets or sets the indent level.</source>
          <target state="translated">Ottiene o imposta il livello di rientro.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The indent level.</source>
          <target state="translated">Livello di rientro.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The default is 0.</source>
          <target state="translated">Il valore predefinito è 0.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph> property represents the number of times the indent of size <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> is applied.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph> proprietà rappresenta il numero di volte in cui il rientro di dimensioni <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> viene applicato.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The following example sets the indent level and emits debugging messages.</source>
          <target state="translated">Nell'esempio seguente imposta il livello di rientro e trasmette i messaggi di debug.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>Gets or sets the number of spaces in an indent.</source>
          <target state="translated">Ottiene o imposta il numero di spazi in un rientro.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>The number of spaces in an indent.</source>
          <target state="translated">Numero di spazi in un rientro.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>The default is four.</source>
          <target state="translated">Il valore predefinito è quattro.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> interprets this number as spaces.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> questo numero viene interpretato come spazi.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>An <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> ignores this value.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> ignora questo valore.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, you can also edit the configuration file corresponding to the name of your application.</source>
          <target state="translated">Per impostare il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> per <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, è anche possibile modificare il file di configurazione corrispondente al nome dell'applicazione.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>The configuration file should be formatted as shown in the following example.</source>
          <target state="translated">Il file di configurazione deve essere formattato come illustrato nell'esempio seguente.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.Listeners">
          <source>Gets the collection of listeners that is monitoring the debug output.</source>
          <target state="translated">Ottiene l'insieme di listener che esegue il monitoraggio dell'output di debug.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListenerCollection" /&gt;</ph> representing a collection of type <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> that monitors the debug output.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListenerCollection" /&gt;</ph> che rappresenta un insieme di tipo <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> che esegue il monitoraggio dell'output di debug.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The listeners produce formatted output from the debug output.</source>
          <target state="translated">I listener producono output formattato dall'output di debug.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>By default, the collection contains an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> class.</source>
          <target state="translated">Per impostazione predefinita, la raccolta contiene un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>To remove the default listener, call the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph> method, and pass it the instance of the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per rimuovere il listener predefinito, chiamare il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph> (metodo) e passare l'istanza del <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>To redirect output to the console window, add an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.</source>
          <target state="translated">Per reindirizzare l'output alla finestra della console, aggiungere un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>To redirect output to a file or stream, add an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">Per reindirizzare l'output di un file o flusso, aggiungere un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection is shared by both the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes; adding a trace listener to either class adds the listener to both.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme è condiviso da entrambi i <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> e <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> classi; aggiunta di un listener di traccia a una classe viene aggiunto il listener a entrambi.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> that outputs to the console screen.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> che genera nella finestra della console.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The code then adds the new listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Il codice aggiunge quindi il nuovo listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>for operating with unmanaged code.</source>
          <target state="translated">per operare con codice non gestito.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>Demand value <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; associated enumeration: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Valore richiesta <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; enumerazione associata: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes a message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Scrive un messaggio seguito da un terminatore di riga nei listener di traccia nell'insieme <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>The message to write.</source>
          <target state="translated">Messaggio da inserire.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>Writes a message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Scrive un messaggio seguito da un terminatore di riga nei listener di traccia nell'insieme <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>The default line terminator is a carriage return followed by a line feed.</source>
          <target state="translated">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Stringa di formato composito che contiene testo combinato con zero o più elementi di formato, che corrispondono agli oggetti nella matrice <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>An object array containing zero or more objects to format.</source>
          <target state="translated">Matrice di oggetti che contiene zero o più oggetti da formattare.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>Writes a formatted string followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Scrive una stringa formattata seguita da un terminatore di riga nei listener di traccia dell'insieme <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Questo metodo utilizza il di .NET Framework per convertire il valore di un oggetto nella relativa rappresentazione di testo e incorporare tale rappresentazione in una stringa.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> non è valido.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</source>
          <target state="translated">Il numero che indica un argomento da formattare è minore di zero oppure maggiore o uguale al numero di oggetti specificati da formattare.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Unindent">
          <source>Decreases the current <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph> by one.</source>
          <target state="translated">Riduce l'oggetto <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph> corrente di uno.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Unindent">
          <source>The following example sets the indent level and emits debugging messages.</source>
          <target state="translated">Nell'esempio seguente imposta il livello di rientro e trasmette i messaggi di debug.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Unindent">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Scrive le informazioni sul debug nei listener di traccia dell'insieme <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">Oggetto il cui nome viene inviato ai <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Scrive il valore del metodo <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> dell'oggetto nei listener di traccia nella raccolta <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versione successiva, viene generato il primo messaggio di errore di <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Verbose`</ph>, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminatore di riga segue il secondo messaggio.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>A message to write.</source>
          <target state="translated">Messaggio da scrivere.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Scrive un messaggio nei listener di traccia della raccolta <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versione successiva, viene generato il primo messaggio di errore di <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Verbose`</ph>, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminatore di riga segue il secondo messaggio.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">Oggetto il cui nome viene inviato ai <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nome di categoria usato per organizzare l'output.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Scrive un nome di categoria e il valore del metodo <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> dell'oggetto nei listener di traccia nella raccolta <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>Use the <ph id="ph1">`category`</ph> parameter to group output messages.</source>
          <target state="translated">Utilizzare il <ph id="ph1">`category`</ph> parametro al gruppo di messaggi di output.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versione successiva, viene generato il primo messaggio di errore di <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Verbose`</ph>, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminatore di riga segue il secondo messaggio.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">Messaggio da scrivere.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nome di categoria usato per organizzare l'output.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Scrive un nome di categoria e un messaggio nei listener di traccia della raccolta <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>Use the <ph id="ph1">`category`</ph> parameter to group output messages.</source>
          <target state="translated">Utilizzare il <ph id="ph1">`category`</ph> parametro al gruppo di messaggi di output.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versione successiva, viene generato il primo messaggio di errore di <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Verbose`</ph>, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminatore di riga segue il secondo messaggio.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Scrive le informazioni sul debug nei listener di traccia dell'insieme <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> se una condizione è <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">Espressione condizionale da valutare.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the value is written to the trace listeners in the collection.</source>
          <target state="translated">Se la condizione è <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il valore viene scritto nei listener di traccia nell'insieme.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">Oggetto il cui nome viene inviato ai <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Scrive il valore del metodo <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> dell'oggetto nei listener di traccia nella raccolta <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> se una condizione è <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first name of the value parameter to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versioni successive, l'esempio restituisce il nome del parametro del valore per il <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs a message on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Verbose`</ph>, viene generato un messaggio sulla stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminatore di riga segue il secondo messaggio.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> istruzioni anziché <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> istruzioni.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> restituisce <ph id="ph1">&lt;see langword="false" /&gt;</ph>, non è necessario chiamare <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">Nel secondo esempio viene chiamato sempre <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, anche quando <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> è <ph id="ph2">&lt;see langword="false" /&gt;</ph> e non viene prodotto alcun output di traccia.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>First example:</source>
          <target state="translated">Primo esempio:</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>Second example:</source>
          <target state="translated">Secondo esempio:</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">Espressione condizionale da valutare.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the message is written to the trace listeners in the collection.</source>
          <target state="translated">Se la condizione è <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il messaggio viene scritto nei listener di traccia nell'insieme.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>A message to write.</source>
          <target state="translated">Messaggio da scrivere.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Scrive un messaggio ai listener di traccia della raccolta <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> se una condizione è <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versione successiva, viene generato il primo messaggio di errore di <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>For information about adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Verbose`</ph>, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminatore di riga segue il secondo messaggio.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> istruzioni anziché <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> istruzioni.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> restituisce <ph id="ph1">&lt;see langword="false" /&gt;</ph>, non è necessario chiamare <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">Nel secondo esempio viene chiamato sempre <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, anche quando <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> è <ph id="ph2">&lt;see langword="false" /&gt;</ph> e non viene prodotto alcun output di traccia.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>First example:</source>
          <target state="translated">Primo esempio:</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>Second example:</source>
          <target state="translated">Secondo esempio:</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">Espressione condizionale da valutare.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the category name and value are written to the trace listeners in the collection.</source>
          <target state="translated">Se la condizione è <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il nome della categoria e il valore vengono scritti nei listener di traccia nell'insieme.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">Oggetto il cui nome viene inviato ai <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nome di categoria usato per organizzare l'output.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Scrive un nome di categoria e il valore del metodo <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> dell'oggetto nei listener di traccia nella raccolta <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> se una condizione è <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated">Il <ph id="ph1">`category`</ph> parametro può essere utilizzato per raggruppare i messaggi di output.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Verbose`</ph>, the example outputs the name of the <ph id="ph3">`myObject`</ph> and the <ph id="ph4">`category`</ph> to the <ph id="ph5">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Verbose`</ph>, viene generato il nome del <ph id="ph3">`myObject`</ph> e <ph id="ph4">`category`</ph> per il <ph id="ph5">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Error`</ph> or higher, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Error`</ph> o superiore, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminatore di riga segue il secondo messaggio.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> istruzioni anziché <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> istruzioni.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> restituisce <ph id="ph1">&lt;see langword="false" /&gt;</ph>, non è necessario chiamare <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">Nel secondo esempio viene chiamato sempre <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, anche quando <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> è <ph id="ph2">&lt;see langword="false" /&gt;</ph> e non viene prodotto alcun output di traccia.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>First example:</source>
          <target state="translated">Primo esempio:</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>Second example:</source>
          <target state="translated">Secondo esempio:</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">Espressione condizionale da valutare.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the category name and message are written to the trace listeners in the collection.</source>
          <target state="translated">Se la condizione è <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il nome della categoria e il messaggio vengono scritti nei listener di traccia nell'insieme.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">Messaggio da scrivere.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nome di categoria usato per organizzare l'output.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Scrive un nome di categoria e un messaggio nei listener di traccia della raccolta <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> se una condizione è <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated">Il <ph id="ph1">`category`</ph> parametro può essere utilizzato per raggruppare i messaggi di output.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Verbose`</ph>, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Verbose`</ph>, nell'esempio viene restituito il primo messaggio di errore di <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Error`</ph> or higher, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Error`</ph> o superiore, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminatore di riga segue il secondo messaggio.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> istruzioni anziché <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> istruzioni.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> restituisce <ph id="ph1">&lt;see langword="false" /&gt;</ph>, non è necessario chiamare <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">Nel secondo esempio viene chiamato sempre <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, anche quando <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> è <ph id="ph2">&lt;see langword="false" /&gt;</ph> e non viene prodotto alcun output di traccia.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>First example:</source>
          <target state="translated">Primo esempio:</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>Second example:</source>
          <target state="translated">Secondo esempio:</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Scrive le informazioni sul debug nei listener di traccia dell'insieme <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">Oggetto il cui nome viene inviato ai <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Scrive il valore del metodo <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> dell'oggetto nei listener di traccia nella raccolta <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versione successiva, viene generato il primo messaggio di errore di <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the name of the object on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Verbose`</ph>, viene generato il nome dell'oggetto nella stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminatore di riga segue il secondo messaggio.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>A message to write.</source>
          <target state="translated">Messaggio da scrivere.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>Writes a message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Scrive un messaggio seguito da un terminatore di riga nei listener di traccia nell'insieme <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versione successiva, viene generato il primo messaggio di errore di <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Verbose`</ph>, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminatore di riga segue il secondo messaggio.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">Oggetto il cui nome viene inviato ai <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nome di categoria usato per organizzare l'output.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Scrive un nome di categoria e il valore del metodo <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> dell'oggetto nei listener di traccia nella raccolta <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated">Il <ph id="ph1">`category`</ph> parametro può essere utilizzato per raggruppare i messaggi di output.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versione successiva, viene generato il primo messaggio di errore di <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Verbose`</ph>, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">Il secondo messaggio è seguito da un terminatore di riga.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Stringa di formato composito che contiene testo combinato con zero o più elementi di formato, che corrispondono agli oggetti nella matrice <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>An object array that contains zero or more objects to format.</source>
          <target state="translated">Matrice di oggetti che contiene zero o più oggetti da formattare.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>Writes a formatted message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Scrive un messaggio formattato seguito da un terminatore di riga nei listener di traccia nell'insieme <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">Questo metodo utilizza il di .NET Framework per convertire il valore di un oggetto nella relativa rappresentazione di testo e incorporare tale rappresentazione in una stringa.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>The  keyword in the syntax for this method implies that the object array can be a single value.</source>
          <target state="translated">La parola chiave nella sintassi per questo metodo implica che la matrice di oggetti può essere un valore singolo.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>The exception to this is the <ph id="ph1">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">L'eccezione è il <ph id="ph1">&lt;xref:System.String&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>Explicit overloads take precedence, so an <ph id="ph1">`arg`</ph> value of a single string will default to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> overload.</source>
          <target state="translated">Overload esplicite hanno la precedenza, quindi un <ph id="ph1">`arg`</ph> impostazione di una singola stringa predefinita sarà la <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> rapporto di overload.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">Messaggio da scrivere.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nome di categoria usato per organizzare l'output.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">Scrive un nome di categoria e un messaggio nei listener di traccia della raccolta <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated">Il <ph id="ph1">`category`</ph> parametro può essere utilizzato per raggruppare i messaggi di output.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versione successiva, viene generato il primo messaggio di errore di <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message and the <ph id="ph3">`category`</ph> on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Verbose`</ph>, nell'esempio viene restituito il secondo messaggio di errore e <ph id="ph3">`category`</ph> sulla stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminatore di riga segue il secondo messaggio.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Scrive le informazioni sul debug nei listener di traccia dell'insieme <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> se una condizione è <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">Espressione condizionale da valutare.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the value is written to the trace listeners in the collection.</source>
          <target state="translated">Se la condizione è <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il valore viene scritto nei listener di traccia nell'insieme.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">Oggetto il cui nome viene inviato ai <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Scrive il valore del metodo <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> dell'oggetto nei listener di traccia nella raccolta <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> se una condizione è <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versione successiva, viene generato il primo messaggio di errore di <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the name of the object on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Verbose`</ph>, viene generato il nome dell'oggetto nella stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminatore di riga segue il secondo messaggio.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> istruzioni anziché <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> istruzioni.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> restituisce <ph id="ph1">&lt;see langword="false" /&gt;</ph>, non è necessario chiamare <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">Nel secondo esempio viene chiamato sempre <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, anche quando <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> è <ph id="ph2">&lt;see langword="false" /&gt;</ph> e non viene prodotto alcun output di traccia.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>First example:</source>
          <target state="translated">Primo esempio:</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>Second example:</source>
          <target state="translated">Secondo esempio:</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">Espressione condizionale da valutare.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the message is written to the trace listeners in the collection.</source>
          <target state="translated">Se la condizione è <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il messaggio viene scritto nei listener di traccia nell'insieme.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>A message to write.</source>
          <target state="translated">Messaggio da scrivere.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Scrive un messaggio ai listener di traccia della raccolta <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> se una condizione è <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versione successiva, viene generato il primo messaggio di errore di <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>For information about adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Verbose`</ph>, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminatore di riga segue il secondo messaggio.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> istruzioni anziché <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> istruzioni.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> restituisce <ph id="ph1">&lt;see langword="false" /&gt;</ph>, non è necessario chiamare <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">Nel secondo esempio viene chiamato sempre <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, anche quando <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> è <ph id="ph2">&lt;see langword="false" /&gt;</ph> e non viene prodotto alcun output di traccia.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>First example:</source>
          <target state="translated">Primo esempio:</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>Second example:</source>
          <target state="translated">Secondo esempio:</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">Espressione condizionale da valutare.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the category name and value are written to the trace listeners in the collection.</source>
          <target state="translated">Se la condizione è <ph id="ph1">&lt;see langword="true" /&gt;</ph>, il nome della categoria e il valore vengono scritti nei listener di traccia nell'insieme.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">Oggetto il cui nome viene inviato ai <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nome di categoria usato per organizzare l'output.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Scrive un nome di categoria e il valore del metodo <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> dell'oggetto nei listener di traccia nella raccolta <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> se una condizione è <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated">Il <ph id="ph1">`category`</ph> parametro può essere utilizzato per raggruppare i messaggi di output.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versione successiva, viene generato il primo messaggio di errore di <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Verbose`</ph>, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminatore di riga segue il secondo messaggio.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> istruzioni anziché <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> istruzioni.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> restituisce <ph id="ph1">&lt;see langword="false" /&gt;</ph>, non è necessario chiamare <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">Nel secondo esempio viene chiamato sempre <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, anche quando <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> è <ph id="ph2">&lt;see langword="false" /&gt;</ph> e non viene prodotto alcun output di traccia.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>First example:</source>
          <target state="translated">Primo esempio:</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>Second example:</source>
          <target state="translated">Secondo esempio:</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to cause a message to be written; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> per fare in modo che venga scritto un messaggio; in caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">Messaggio da scrivere.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">Nome di categoria usato per organizzare l'output.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Scrive un nome di categoria e un messaggio nei listener di traccia della raccolta <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> se una condizione è <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">Per impostazione predefinita, l'output viene scritto in un'istanza di <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated">Il <ph id="ph1">`category`</ph> parametro può essere utilizzato per raggruppare i messaggi di output.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">Questo metodo chiama il <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> metodo del listener di traccia.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene creato un <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> denominato <ph id="ph2">`generalSwitch`</ph>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">Questa opzione è impostata all'esterno di esempio di codice.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">Se l'opzione è impostata sul <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> o versione successiva, viene generato il primo messaggio di errore di <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">Per informazioni sull'aggiunta di un listener per il <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> insieme, vedere la <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message and the <ph id="ph3">`category`</ph> on the same line as the first message.</source>
          <target state="translated">Quindi, se il <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> è impostato su <ph id="ph2">`Verbose`</ph>, nell'esempio viene restituito il secondo messaggio di errore e <ph id="ph3">`category`</ph> sulla stessa riga del primo messaggio.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">Un terminatore di riga segue il secondo messaggio.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> istruzioni anziché <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> istruzioni.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> restituisce <ph id="ph1">&lt;see langword="false" /&gt;</ph>, non è necessario chiamare <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">Nel secondo esempio viene chiamato sempre <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, anche quando <bpt id="p1">&lt;c&gt;</bpt>mySwitch. TraceError<ept id="p1">&lt;/c&gt;</ept> è <ph id="ph2">&lt;see langword="false" /&gt;</ph> e non viene prodotto alcun output di traccia.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>First example:</source>
          <target state="translated">Primo esempio:</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>Second example:</source>
          <target state="translated">Secondo esempio:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>