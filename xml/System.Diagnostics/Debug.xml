<Type Name="Debug" FullName="System.Diagnostics.Debug">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="331d1e20f17d7065dd117481b3458a017c3f98b4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Debug" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Debug extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Debug" />
  <TypeSignature Language="VB.NET" Value="Public Class Debug" />
  <TypeSignature Language="C++ CLI" Value="public ref class Debug abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Debug</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9e10e-101">Fornisce un set di metodi e proprietà che consentono di eseguire il debug del codice.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9e10e-101">Provides a set of methods and properties that help debug your code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-102">Se si utilizzano i metodi nel <xref:System.Diagnostics.Debug> classe per stampare le informazioni di debug e controllare la logica con asserzioni, è possibile rendere il codice più affidabile senza conseguenze per le dimensioni delle prestazioni e il codice del prodotto shipping.</span><span class="sxs-lookup"><span data-stu-id="9e10e-102">If you use methods in the <xref:System.Diagnostics.Debug> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.</span></span>  
  
 <span data-ttu-id="9e10e-103">Questa classe fornisce metodi per visualizzare un <xref:System.Diagnostics.Debug.Assert%2A> nella finestra di dialogo e la generazione di un'asserzione che avrà sempre esito negativo.</span><span class="sxs-lookup"><span data-stu-id="9e10e-103">This class provides methods to display an <xref:System.Diagnostics.Debug.Assert%2A> dialog box, and to emit an assertion that will always fail.</span></span> <span data-ttu-id="9e10e-104">Questa classe fornisce metodi di scrittura nelle seguenti variazioni: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> e <xref:System.Diagnostics.Debug.WriteLineIf%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-104">This class provides write methods in the following variations: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> and <xref:System.Diagnostics.Debug.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="9e10e-105">Il <xref:System.Diagnostics.BooleanSwitch> e <xref:System.Diagnostics.TraceSwitch> classi consentono di controllare dinamicamente l'output di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-105">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="9e10e-106">È possibile modificare i valori di queste opzioni senza ricompilare l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-106">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="9e10e-107">Per informazioni sull'utilizzo del file di configurazione per impostare un'opzione, vedere il <xref:System.Diagnostics.Switch> classe e [opzioni di traccia](~/docs/framework/debug-trace-profile/trace-switches.md) argomento.</span><span class="sxs-lookup"><span data-stu-id="9e10e-107">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [Trace Switches](~/docs/framework/debug-trace-profile/trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="9e10e-108">È possibile personalizzare la destinazione dell'output di tracciatura aggiungendo <xref:System.Diagnostics.TraceListener> istanze a o la rimozione di istanze di <xref:System.Diagnostics.Debug.Listeners%2A> insieme.</span><span class="sxs-lookup"><span data-stu-id="9e10e-108">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="9e10e-109">Il <xref:System.Diagnostics.Debug.Listeners%2A> insieme è condiviso da entrambi i <xref:System.Diagnostics.Debug> e <xref:System.Diagnostics.Trace> classi; aggiunta di un listener di traccia a una classe viene aggiunto il listener a entrambi.</span><span class="sxs-lookup"><span data-stu-id="9e10e-109">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="9e10e-110">Per impostazione predefinita, la <xref:System.Diagnostics.DefaultTraceListener> classe genera l'output di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-110">By default, the <xref:System.Diagnostics.DefaultTraceListener> class emits trace output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e10e-111">Aggiunta di un listener di traccia di <xref:System.Diagnostics.Debug.Listeners%2A> raccolta può causare un'eccezione generata durante la traccia, se una risorsa utilizzata dal listener di traccia non è disponibile.</span><span class="sxs-lookup"><span data-stu-id="9e10e-111">Adding a trace listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="9e10e-112">Le condizioni e l'eccezione generata dipendono dal listener di traccia e non può essere enumerate in questo argomento.</span><span class="sxs-lookup"><span data-stu-id="9e10e-112">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="9e10e-113">Può essere utile effettuare le chiamate per il <xref:System.Diagnostics.Debug> metodi `try` / `catch` blocchi per rilevare e gestire tutte le eccezioni dai listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-113">It may be useful to place calls to the <xref:System.Diagnostics.Debug> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
 <span data-ttu-id="9e10e-114">È possibile modificare il livello di rientro utilizzando il <xref:System.Diagnostics.Debug.Indent%2A> metodo o <xref:System.Diagnostics.Debug.IndentLevel%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="9e10e-114">You can modify the level of indentation using the <xref:System.Diagnostics.Debug.Indent%2A> method or the <xref:System.Diagnostics.Debug.IndentLevel%2A> property.</span></span> <span data-ttu-id="9e10e-115">Per modificare la spaziatura del rientro, utilizzare il <xref:System.Diagnostics.Debug.IndentSize%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="9e10e-115">To modify the indent spacing, use the <xref:System.Diagnostics.Debug.IndentSize%2A> property.</span></span> <span data-ttu-id="9e10e-116">È possibile specificare se scaricare automaticamente il buffer di output dopo ogni scrittura impostando il <xref:System.Diagnostics.Debug.AutoFlush%2A> proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-116">You can specify whether to automatically flush the output buffer after each write by setting the <xref:System.Diagnostics.Debug.AutoFlush%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="9e10e-117">Per impostare il <xref:System.Diagnostics.Debug.AutoFlush%2A> e <xref:System.Diagnostics.Debug.IndentSize%2A> per <xref:System.Diagnostics.Debug>, è possibile modificare il file di configurazione corrispondente al nome dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-117">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="9e10e-118">Il file di configurazione deve essere formattato come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="9e10e-118">The configuration file should be formatted as shown in the following example.</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="9e10e-119">Il <xref:System.Diagnostics.ConditionalAttribute> attributo viene applicato ai metodi di <xref:System.Diagnostics.Debug>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-119">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Debug>.</span></span> <span data-ttu-id="9e10e-120">I compilatori che supportano <xref:System.Diagnostics.ConditionalAttribute> ignorano le chiamate a questi metodi, a meno che non "DEBUG" è definito come simbolo di compilazione condizionale.</span><span class="sxs-lookup"><span data-stu-id="9e10e-120">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "DEBUG" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="9e10e-121">Fare riferimento alla documentazione di un compilatore per determinare se <xref:System.Diagnostics.ConditionalAttribute> è supportata e la sintassi per definire un simbolo di compilazione condizionale.</span><span class="sxs-lookup"><span data-stu-id="9e10e-121">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="9e10e-122">Nei progetti di Visual Studio c# e Visual Basic, per impostazione predefinita, il simbolo di compilazione condizionale "DEBUG" è definito per le compilazioni di debug e il simbolo "TRACE" è definito per entrambe build di debug e rilascio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-122">In Visual Studio C# and Visual Basic projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="9e10e-123">Per informazioni su come disabilitare questo comportamento, vedere la documentazione di Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-123">For information about how to disable this behavior, see the Visual Studio documentation.</span></span> <span data-ttu-id="9e10e-124">Per informazioni sul debug condizionale in Visual C++, vedere [classe Debug (C + + CLI)](/cpp/dotnet/debug-class-cpp-cli).</span><span class="sxs-lookup"><span data-stu-id="9e10e-124">For information about conditional debugging in Visual C++, see [Debug Class (C++/CLI)](/cpp/dotnet/debug-class-cpp-cli).</span></span>
  
 <span data-ttu-id="9e10e-125">Per definire il simbolo di compilazione condizionale "DEBUG" in c#, aggiungere il `/d:DEBUG` opzione alla riga di comando del compilatore quando si compila il codice tramite la riga di comando o aggiungere `#define DEBUG` all'inizio del file.</span><span class="sxs-lookup"><span data-stu-id="9e10e-125">To define the "DEBUG" conditional compilation symbol in C#, add the `/d:DEBUG` option to the compiler command line when you compile your code using a command line, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="9e10e-126">In Visual Basic, aggiungere il `/d:DEBUG=True` opzione alla riga di comando del compilatore o aggiungere `#Const DEBUG=True` al file.</span><span class="sxs-lookup"><span data-stu-id="9e10e-126">In Visual Basic, add the `/d:DEBUG=True` option to the compiler command line or add `#Const DEBUG=True` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-127">L'esempio seguente usa <xref:System.Diagnostics.Debug> per indicare l'inizio e alla fine dell'esecuzione del programma.</span><span class="sxs-lookup"><span data-stu-id="9e10e-127">The following example uses <xref:System.Diagnostics.Debug> to indicate the beginning and end of a program's execution.</span></span> <span data-ttu-id="9e10e-128">Nell'esempio viene inoltre utilizzato <xref:System.Diagnostics.Debug.Indent%2A> e <xref:System.Diagnostics.Debug.Unindent%2A> per distinguere l'output di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-128">The example also uses <xref:System.Diagnostics.Debug.Indent%2A> and <xref:System.Diagnostics.Debug.Unindent%2A> to distinguish the tracing output.</span></span>  
  
 [!code-cpp[Classic Debug Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug Example/CS/source.cs#1)]
 [!code-vb[Classic Debug Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="9e10e-129">Questo tipo è thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9e10e-129">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9e10e-130">Controlla una condizione. Se la condizione è <see langword="false" />, vengono generati messaggi e viene visualizzata una finestra di messaggio contenente lo stack di chiamate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-130">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="9e10e-131">Espressione condizionale da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-131">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="9e10e-132">Se la condizione è <see langword="true" />, il messaggio di errore non viene inviato e la finestra di messaggio non viene visualizzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-132">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-133">Controlla una condizione. Se la condizione è <see langword="false" />, viene visualizzata una finestra di messaggio contenente lo stack di chiamate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-133">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-134">Per impostazione predefinita, il <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metodo funziona solo nelle build di debug.</span><span class="sxs-lookup"><span data-stu-id="9e10e-134">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="9e10e-135">Utilizzare il <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metodo se si desidera eseguire asserzioni in versione Compila.</span><span class="sxs-lookup"><span data-stu-id="9e10e-135">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="9e10e-136">Per ulteriori informazioni, vedere [asserzioni nel codice gestito](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="9e10e-136">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9e10e-137">Il `Assert` metodi non sono disponibili per [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] app.</span><span class="sxs-lookup"><span data-stu-id="9e10e-137">The `Assert` methods are not available for [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] apps.</span></span>  
  
 <span data-ttu-id="9e10e-138">In genere, il <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> metodo viene utilizzato per identificare errori logici durante lo sviluppo di programmi.</span><span class="sxs-lookup"><span data-stu-id="9e10e-138">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="9e10e-139"><xref:System.Diagnostics.Debug.Assert%2A> valuta la condizione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-139"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="9e10e-140">Se il risultato è `false`, viene inviato un messaggio di errore per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme.</span><span class="sxs-lookup"><span data-stu-id="9e10e-140">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="9e10e-141">È possibile personalizzare questo comportamento aggiungendo un <xref:System.Diagnostics.TraceListener> , o la rimozione di uno, il <xref:System.Diagnostics.Debug.Listeners%2A> insieme.</span><span class="sxs-lookup"><span data-stu-id="9e10e-141">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="9e10e-142">Quando l'applicazione viene eseguita in modalità di interfaccia utente, viene visualizzata una finestra di messaggio che indica lo stack di chiamate con i numeri di file e riga.</span><span class="sxs-lookup"><span data-stu-id="9e10e-142">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="9e10e-143">La finestra di messaggio contiene tre pulsanti: **Abort**, **ripetere**, e **ignora**.</span><span class="sxs-lookup"><span data-stu-id="9e10e-143">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="9e10e-144">Fare clic su di **Abort** pulsante chiude l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-144">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="9e10e-145">Fare clic su **ripetere** invia il codice nel debugger se l'applicazione è in esecuzione in un debugger o consente di aprire un debugger in caso contrario.</span><span class="sxs-lookup"><span data-stu-id="9e10e-145">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="9e10e-146">Fare clic su **ignora** continua con l'istruzione successiva nel codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-146">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]<span data-ttu-id="9e10e-147"> applicazioni non supportano le finestre di dialogo modale, in modo identico in modalità interfaccia utente e la modalità interfaccia utente non funzionano.</span><span class="sxs-lookup"><span data-stu-id="9e10e-147"> apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode.</span></span> <span data-ttu-id="9e10e-148">Il messaggio viene scritto per il listener di traccia attivi in modalità di debug, o nessun messaggio viene scritto in modalità di rilascio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-148">The message is written to the active trace listeners in debugging mode, or no message is written in release mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e10e-149">La visualizzazione della finestra di messaggio dipende dalla presenza del <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-149">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="9e10e-150">Se il <xref:System.Diagnostics.DefaultTraceListener> non si trova nel <xref:System.Diagnostics.Trace.Listeners%2A> insieme, la finestra di messaggio non viene visualizzata.</span><span class="sxs-lookup"><span data-stu-id="9e10e-150">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="9e10e-151">Il <xref:System.Diagnostics.DefaultTraceListener> può essere rimossa mediante il [ &lt;deselezionare&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), il [ &lt;rimuovere&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), o chiamando il <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sul (metodo)<xref:System.Diagnostics.Trace.Listeners%2A> proprietà (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="9e10e-151">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="9e10e-152">È possibile modificare il comportamento del <xref:System.Diagnostics.DefaultTraceListener> nel file di configurazione che corrisponde al nome dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-152">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="9e10e-153">In questo file, è possibile abilitare e disabilitare la finestra di messaggio di asserzione o impostare il <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="9e10e-153">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9e10e-154">Il file di configurazione deve essere formattato come segue:</span><span class="sxs-lookup"><span data-stu-id="9e10e-154">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-155">Nell'esempio seguente viene creato un indice per una matrice, esegue un'azione per impostare il valore dell'indice e quindi chiama <xref:System.Diagnostics.Debug.Assert%2A> per confermare che il valore di indice è valido.</span><span class="sxs-lookup"><span data-stu-id="9e10e-155">The following example creates an index for an array, performs some action to set the value of the index, and then calls <xref:System.Diagnostics.Debug.Assert%2A> to confirm that the index value is valid.</span></span> <span data-ttu-id="9e10e-156">Se non è valido, <xref:System.Diagnostics.Debug.Assert%2A> restituisce lo stack di chiamate.</span><span class="sxs-lookup"><span data-stu-id="9e10e-156">If it is not valid, <xref:System.Diagnostics.Debug.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Debug.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="9e10e-157">Espressione condizionale da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-157">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="9e10e-158">Se la condizione è <see langword="true" />, il messaggio specificato non viene inviato e la finestra di messaggio non viene visualizzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-158">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="9e10e-159">Messaggio da inviare alla raccolta di <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-159">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-160">Controlla una condizione. Se la condizione è <see langword="false" />, genera un messaggio specificato e visualizza una finestra di messaggio contenente lo stack di chiamate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-160">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-161">Per impostazione predefinita, il <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metodo funziona solo nelle build di debug.</span><span class="sxs-lookup"><span data-stu-id="9e10e-161">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="9e10e-162">Utilizzare il <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metodo se si desidera eseguire asserzioni in versione Compila.</span><span class="sxs-lookup"><span data-stu-id="9e10e-162">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="9e10e-163">Per ulteriori informazioni, vedere [asserzioni nel codice gestito](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="9e10e-163">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="9e10e-164">In genere, il <xref:System.Diagnostics.Debug.Assert%2A> metodo viene utilizzato per identificare errori logici durante lo sviluppo di programmi.</span><span class="sxs-lookup"><span data-stu-id="9e10e-164">Typically, the <xref:System.Diagnostics.Debug.Assert%2A> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="9e10e-165"><xref:System.Diagnostics.Debug.Assert%2A> valuta la condizione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-165"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="9e10e-166">Se il risultato è `false`, invia il messaggio di diagnostica specificato per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme.</span><span class="sxs-lookup"><span data-stu-id="9e10e-166">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="9e10e-167">È possibile personalizzare questo comportamento aggiungendo un <xref:System.Diagnostics.TraceListener> , o la rimozione di uno, il <xref:System.Diagnostics.Debug.Listeners%2A> insieme.</span><span class="sxs-lookup"><span data-stu-id="9e10e-167">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="9e10e-168">Quando l'applicazione viene eseguita in modalità di interfaccia utente, viene visualizzata una finestra di messaggio che indica lo stack di chiamate con i numeri di file e riga.</span><span class="sxs-lookup"><span data-stu-id="9e10e-168">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="9e10e-169">La finestra di messaggio contiene tre pulsanti: **Abort**, **ripetere**, e **ignora**.</span><span class="sxs-lookup"><span data-stu-id="9e10e-169">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="9e10e-170">Fare clic su di **Abort** pulsante chiude l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-170">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="9e10e-171">Fare clic su **ripetere** invia il codice nel debugger se l'applicazione è in esecuzione in un debugger o consente di aprire un debugger in caso contrario.</span><span class="sxs-lookup"><span data-stu-id="9e10e-171">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="9e10e-172">Fare clic su **ignora** continua con l'istruzione successiva nel codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-172">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e10e-173">La visualizzazione della finestra di messaggio dipende dalla presenza del <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-173">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="9e10e-174">Se il <xref:System.Diagnostics.DefaultTraceListener> non si trova nel <xref:System.Diagnostics.Trace.Listeners%2A> insieme, la finestra di messaggio non viene visualizzata.</span><span class="sxs-lookup"><span data-stu-id="9e10e-174">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="9e10e-175">Il <xref:System.Diagnostics.DefaultTraceListener> può essere rimossa mediante il [ &lt;deselezionare&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), il [ &lt;rimuovere&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), o chiamando il <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sul (metodo)<xref:System.Diagnostics.Trace.Listeners%2A> proprietà (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="9e10e-175">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="9e10e-176">È possibile modificare il comportamento del <xref:System.Diagnostics.DefaultTraceListener> nel file di configurazione che corrisponde al nome dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-176">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="9e10e-177">In questo file, è possibile abilitare e disabilitare la finestra di messaggio di asserzione o impostare il <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="9e10e-177">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9e10e-178">Il file di configurazione deve essere formattato come segue:</span><span class="sxs-lookup"><span data-stu-id="9e10e-178">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-179">Nell'esempio seguente viene controllato se il `type` parametro è valido.</span><span class="sxs-lookup"><span data-stu-id="9e10e-179">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="9e10e-180">Se `type` è `null`, <xref:System.Diagnostics.Trace.Assert%2A> genera un messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-180">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Debug.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="9e10e-181">Espressione condizionale da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-181">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="9e10e-182">Se la condizione è <see langword="true" />, i messaggi specificati non vengono inviati e la finestra di messaggio non viene visualizzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-182">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="9e10e-183">Messaggio da inviare alla raccolta di <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-183">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="9e10e-184">Messaggio dettagliato da inviare alla raccolta di <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-184">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-185">Controlla una condizione. Se la condizione è <see langword="false" />, vengono generati due messaggi specificati e viene visualizzata una finestra di messaggio contenente lo stack di chiamate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-185">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-186">Per impostazione predefinita, il <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metodo funziona solo nelle build di debug.</span><span class="sxs-lookup"><span data-stu-id="9e10e-186">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="9e10e-187">Utilizzare il <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metodo se si desidera eseguire asserzioni in versione Compila.</span><span class="sxs-lookup"><span data-stu-id="9e10e-187">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="9e10e-188">Per ulteriori informazioni, vedere [asserzioni nel codice gestito](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="9e10e-188">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="9e10e-189">In genere, il <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> metodo viene utilizzato per identificare errori logici durante lo sviluppo di programmi.</span><span class="sxs-lookup"><span data-stu-id="9e10e-189">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="9e10e-190"><xref:System.Diagnostics.Debug.Assert%2A> valuta la condizione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-190"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="9e10e-191">Se il risultato è `false`, invia il messaggio di diagnostica specificato e un messaggio dettagliato dal <xref:System.Diagnostics.Debug.Listeners%2A> insieme.</span><span class="sxs-lookup"><span data-stu-id="9e10e-191">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="9e10e-192">È possibile personalizzare questo comportamento aggiungendo un <xref:System.Diagnostics.TraceListener> , o la rimozione di uno, il <xref:System.Diagnostics.Debug.Listeners%2A> insieme.</span><span class="sxs-lookup"><span data-stu-id="9e10e-192">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="9e10e-193">Quando l'applicazione viene eseguita in modalità di interfaccia utente, viene visualizzata una finestra di messaggio che indica lo stack di chiamate con i numeri di file e riga.</span><span class="sxs-lookup"><span data-stu-id="9e10e-193">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="9e10e-194">La finestra di messaggio contiene tre pulsanti: **Abort**, **ripetere**, e **ignora**.</span><span class="sxs-lookup"><span data-stu-id="9e10e-194">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="9e10e-195">Fare clic su di **Abort** pulsante chiude l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-195">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="9e10e-196">Fare clic su **ripetere** invia il codice nel debugger se l'applicazione è in esecuzione in un debugger o consente di aprire un debugger in caso contrario.</span><span class="sxs-lookup"><span data-stu-id="9e10e-196">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="9e10e-197">Fare clic su **ignora** continua con l'istruzione successiva nel codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-197">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e10e-198">La visualizzazione della finestra di messaggio dipende dalla presenza del <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-198">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="9e10e-199">Se il <xref:System.Diagnostics.DefaultTraceListener> non si trova nel <xref:System.Diagnostics.Trace.Listeners%2A> insieme, la finestra di messaggio non viene visualizzata.</span><span class="sxs-lookup"><span data-stu-id="9e10e-199">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="9e10e-200">Il <xref:System.Diagnostics.DefaultTraceListener> può essere rimossa mediante il [ &lt;deselezionare&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), il [ &lt;rimuovere&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), o chiamando il <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sul (metodo)<xref:System.Diagnostics.Trace.Listeners%2A> proprietà (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="9e10e-200">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="9e10e-201">È possibile modificare il comportamento del <xref:System.Diagnostics.DefaultTraceListener> nel file di configurazione che corrisponde al nome dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-201">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="9e10e-202">In questo file, è possibile abilitare e disabilitare la finestra di messaggio di asserzione o impostare il <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="9e10e-202">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9e10e-203">Il file di configurazione deve essere formattato come segue:</span><span class="sxs-lookup"><span data-stu-id="9e10e-203">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-204">Nell'esempio seguente viene controllato se il `type` parametro è valido.</span><span class="sxs-lookup"><span data-stu-id="9e10e-204">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="9e10e-205">Se `type` è `null`, <xref:System.Diagnostics.Trace.Assert%2A> vengono generati due messaggi.</span><span class="sxs-lookup"><span data-stu-id="9e10e-205">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs two messages.</span></span>  
  
 [!code-cpp[Classic Debug.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessageFormat, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessageFormat, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessageFormat As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessageFormat, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessageFormat" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="9e10e-206">Espressione condizionale da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-206">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="9e10e-207">Se la condizione è <see langword="true" />, i messaggi specificati non vengono inviati e la finestra di messaggio non viene visualizzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-207">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="9e10e-208">Messaggio da inviare alla raccolta di <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-208">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessageFormat">
          <span data-ttu-id="9e10e-209">Stringa di formato composito da inviare alla raccolta <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-209">The composite format string to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
          <span data-ttu-id="9e10e-210">Questo messaggio contiene testo combinato con zero o più elementi di formato, che corrispondono a oggetti nella matrice <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-210">This message contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="9e10e-211">Matrice di oggetti che contiene zero o più oggetti da formattare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-211">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-212">Controlla una condizione. Se la condizione è <see langword="false" />, vengono generati due messaggi (semplice e formattato) e viene visualizzata una finestra di messaggio contenente lo stack di chiamate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-212">Checks for a condition; if the condition is <see langword="false" />, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-213">Questo metodo utilizza il di .NET Framework per convertire il valore di un oggetto nella relativa rappresentazione di testo e incorporare tale rappresentazione in una stringa.</span><span class="sxs-lookup"><span data-stu-id="9e10e-213">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="9e10e-214">La stringa risultante viene inviata al <xref:System.Diagnostics.Trace.Listeners%2A> insieme.</span><span class="sxs-lookup"><span data-stu-id="9e10e-214">The resulting string is sent to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="9e10e-215">Per impostazione predefinita, il <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metodo funziona solo nelle build di debug.</span><span class="sxs-lookup"><span data-stu-id="9e10e-215">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="9e10e-216">Utilizzare il <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metodo se si desidera eseguire asserzioni in versione Compila.</span><span class="sxs-lookup"><span data-stu-id="9e10e-216">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="9e10e-217">Per ulteriori informazioni, vedere [asserzioni nel codice gestito](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="9e10e-217">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="9e10e-218">In genere, il <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> metodo viene utilizzato per identificare errori logici durante lo sviluppo di programmi.</span><span class="sxs-lookup"><span data-stu-id="9e10e-218">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="9e10e-219"><xref:System.Diagnostics.Debug.Assert%2A> valuta la condizione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-219"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="9e10e-220">Se il risultato è `false`, <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> metodo viene chiamato e `detailMessageFormat` stringa e `args` matrice vengono passati come parametri.</span><span class="sxs-lookup"><span data-stu-id="9e10e-220">If the result is `false`, The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called and the `detailMessageFormat` string and `args` array are passed in as parameters.</span></span> <span data-ttu-id="9e10e-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> quindi invia il messaggio di testo specificato e il messaggio di testo formattato per la <xref:System.Diagnostics.Debug.Listeners%2A> insieme.</span><span class="sxs-lookup"><span data-stu-id="9e10e-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> then sends the specified text message and the formatted text message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="9e10e-222">È possibile personalizzare questo comportamento aggiungendo un <xref:System.Diagnostics.TraceListener> , o la rimozione di uno, il <xref:System.Diagnostics.Debug.Listeners%2A> insieme.</span><span class="sxs-lookup"><span data-stu-id="9e10e-222">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="9e10e-223">Quando l'applicazione viene eseguita in modalità di interfaccia utente, viene visualizzata una finestra di messaggio che indica lo stack di chiamate con i numeri di file e riga.</span><span class="sxs-lookup"><span data-stu-id="9e10e-223">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="9e10e-224">La finestra di messaggio contiene tre pulsanti: **Abort**, **ripetere**, e **ignora**.</span><span class="sxs-lookup"><span data-stu-id="9e10e-224">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="9e10e-225">Fare clic su di **Abort** pulsante chiude l'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-225">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="9e10e-226">Fare clic su **ripetere** invia il codice nel debugger se l'applicazione è in esecuzione in un debugger o consente di aprire un debugger in caso contrario.</span><span class="sxs-lookup"><span data-stu-id="9e10e-226">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="9e10e-227">Fare clic su **ignora** continua con l'istruzione successiva nel codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-227">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e10e-228">La visualizzazione della finestra di messaggio dipende dalla presenza del <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-228">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="9e10e-229">Se il <xref:System.Diagnostics.DefaultTraceListener> non si trova nel <xref:System.Diagnostics.Trace.Listeners%2A> insieme, la finestra di messaggio non viene visualizzata.</span><span class="sxs-lookup"><span data-stu-id="9e10e-229">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="9e10e-230">Il <xref:System.Diagnostics.DefaultTraceListener> può essere rimossa mediante il [ &lt;deselezionare&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), il [ &lt;rimuovere&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), o chiamando il <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sul (metodo)<xref:System.Diagnostics.Trace.Listeners%2A> proprietà (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="9e10e-230">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="9e10e-231">È possibile modificare il comportamento del <xref:System.Diagnostics.DefaultTraceListener> nel file di configurazione che corrisponde al nome dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-231">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="9e10e-232">In questo file, è possibile abilitare e disabilitare la finestra di messaggio di asserzione o impostare il <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="9e10e-232">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9e10e-233">Il file di configurazione deve essere formattato come segue:</span><span class="sxs-lookup"><span data-stu-id="9e10e-233">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e10e-234">Ottiene o imposta un valore che indica se chiamare il metodo <see cref="M:System.Diagnostics.Debug.Flush" /> sulla proprietà <see cref="P:System.Diagnostics.Debug.Listeners" /> dopo ogni operazione di scrittura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-234">Gets or sets a value indicating whether <see cref="M:System.Diagnostics.Debug.Flush" /> should be called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e10e-235">
            <see langword="true" /> se il metodo <see cref="M:System.Diagnostics.Debug.Flush" /> viene chiamato sulla proprietà <see cref="P:System.Diagnostics.Debug.Listeners" /> dopo ogni operazione di scrittura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-235">
              <see langword="true" /> if <see cref="M:System.Diagnostics.Debug.Flush" /> is called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-236">Il valore predefinito è `false`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-236">The default is `false`.</span></span>  
  
 <span data-ttu-id="9e10e-237">La cancellazione del flusso non svuotamento del codificatore sottostante a meno che non chiama in modo esplicito <xref:System.Diagnostics.Debug.Flush%2A> o <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-237">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="9e10e-238">Impostazione <xref:System.Diagnostics.Debug.AutoFlush%2A> a `true` , i dati verranno scaricati dal buffer nel flusso, ma lo stato del codificatore non verrà rimosso.</span><span class="sxs-lookup"><span data-stu-id="9e10e-238">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="9e10e-239">In questo modo il codificatore mantenere lo stato (caratteri parziali) in modo che può codificare correttamente il blocco successivo di caratteri.</span><span class="sxs-lookup"><span data-stu-id="9e10e-239">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="9e10e-240">Questo scenario riguarda UTF8 e UTF7, in cui alcuni caratteri possono essere codificati solo dopo che il codificatore riceve adiacenti carattere o caratteri.</span><span class="sxs-lookup"><span data-stu-id="9e10e-240">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="9e10e-241">Per impostare il <xref:System.Diagnostics.Debug.AutoFlush%2A> e <xref:System.Diagnostics.Debug.IndentSize%2A> per <xref:System.Diagnostics.Debug>, è anche possibile modificare il file di configurazione corrispondente al nome dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-241">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="9e10e-242">Il file di configurazione deve essere formattato come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="9e10e-242">The configuration file should be formatted as shown in the following example.</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9e10e-243">per operare con codice non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-243">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="9e10e-244">Valore richiesta <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-244">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e10e-245">Svuota il buffer dell'output e quindi chiama il metodo <see langword="Close" /> per ogni <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-245">Flushes the output buffer and then calls the <see langword="Close" /> method on each of the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-246">Utilizzare questo metodo quando l'output viene inserito in un file, ad esempio per il <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-246">Use this method when the output goes to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-247">La cancellazione del flusso non svuotamento del codificatore sottostante a meno che non chiama in modo esplicito <xref:System.Diagnostics.Debug.Flush%2A> o <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-247">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="9e10e-248">Impostazione <xref:System.Diagnostics.Debug.AutoFlush%2A> a `true` , i dati verranno scaricati dal buffer nel flusso, ma lo stato del codificatore non verrà rimosso.</span><span class="sxs-lookup"><span data-stu-id="9e10e-248">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="9e10e-249">In questo modo il codificatore mantenere lo stato (caratteri parziali) in modo che può codificare correttamente il blocco successivo di caratteri.</span><span class="sxs-lookup"><span data-stu-id="9e10e-249">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="9e10e-250">Questo scenario riguarda UTF8 e UTF7, in cui alcuni caratteri possono essere codificati solo dopo che il codificatore riceve adiacenti carattere o caratteri.</span><span class="sxs-lookup"><span data-stu-id="9e10e-250">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-251">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TextWriterTraceListener> denominato `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-251">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="9e10e-252">`myTextListener` Usa un <xref:System.IO.StreamWriter> chiamato `myOutputWriter` per scrivere in un file denominato `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-252">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="9e10e-253">L'esempio crea il writer di testo, un flusso e file, scrive una riga di testo al file e quindi scarica e chiude l'output.</span><span class="sxs-lookup"><span data-stu-id="9e10e-253">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9e10e-254">per operare con codice non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-254">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="9e10e-255">Valore richiesta <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-255">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9e10e-256">Genera un messaggio di errore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-256">Emits an error message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9e10e-257">Messaggio da generare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-257">A message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-258">Genera il messaggio di errore specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-258">Emits the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-259">Il comportamento predefinito prevede che il <xref:System.Diagnostics.DefaultTraceListener> genera il messaggio in una finestra di messaggio quando l'applicazione è in esecuzione in modalità interfaccia utente e di ottenere il <xref:System.Diagnostics.TraceListener> istanze il <xref:System.Diagnostics.Debug.Listeners%2A> insieme.</span><span class="sxs-lookup"><span data-stu-id="9e10e-259">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e10e-260">La visualizzazione della finestra di messaggio dipende dalla presenza del <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-260">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="9e10e-261">Se il <xref:System.Diagnostics.DefaultTraceListener> non si trova nel <xref:System.Diagnostics.Trace.Listeners%2A> insieme, la finestra di messaggio non viene visualizzata.</span><span class="sxs-lookup"><span data-stu-id="9e10e-261">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="9e10e-262">Il <xref:System.Diagnostics.DefaultTraceListener> può essere rimossa mediante il [ &lt;deselezionare&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), il [ &lt;rimuovere&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), o chiamando il <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sul (metodo)<xref:System.Diagnostics.Trace.Listeners%2A> proprietà (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="9e10e-262">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="9e10e-263">È possibile personalizzare questo comportamento aggiungendo un <xref:System.Diagnostics.TraceListener> , o la rimozione di uno, il <xref:System.Diagnostics.Debug.Listeners%2A> insieme.</span><span class="sxs-lookup"><span data-stu-id="9e10e-263">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-264">L'esempio seguente usa il <xref:System.Diagnostics.Debug.Fail%2A> metodo per stampare un messaggio durante la gestione delle eccezioni.</span><span class="sxs-lookup"><span data-stu-id="9e10e-264">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9e10e-265">È inoltre possibile utilizzare il <xref:System.Diagnostics.Debug.Fail%2A> metodo in un'istruzione switch.</span><span class="sxs-lookup"><span data-stu-id="9e10e-265">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9e10e-266">Messaggio da generare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-266">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="9e10e-267">Messaggio dettagliato da generare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-267">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-268">Genera un messaggio di errore e un messaggio di errore dettagliato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-268">Emits an error message and a detailed error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-269">Il comportamento predefinito prevede che il <xref:System.Diagnostics.DefaultTraceListener> genera il messaggio in una finestra di messaggio quando l'applicazione è in esecuzione in modalità interfaccia utente e di ottenere il <xref:System.Diagnostics.TraceListener> istanze il <xref:System.Diagnostics.Debug.Listeners%2A> insieme.</span><span class="sxs-lookup"><span data-stu-id="9e10e-269">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e10e-270">La visualizzazione della finestra di messaggio dipende dalla presenza del <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-270">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="9e10e-271">Se il <xref:System.Diagnostics.DefaultTraceListener> non si trova nel <xref:System.Diagnostics.Trace.Listeners%2A> insieme, la finestra di messaggio non viene visualizzata.</span><span class="sxs-lookup"><span data-stu-id="9e10e-271">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="9e10e-272">Il <xref:System.Diagnostics.DefaultTraceListener> può essere rimossa mediante il [ &lt;deselezionare&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), il [ &lt;rimuovere&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), o chiamando il <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> sul (metodo)<xref:System.Diagnostics.Trace.Listeners%2A> proprietà (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="9e10e-272">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="9e10e-273">È possibile personalizzare questo comportamento aggiungendo un <xref:System.Diagnostics.TraceListener> , o la rimozione di uno, il <xref:System.Diagnostics.Debug.Listeners%2A> insieme.</span><span class="sxs-lookup"><span data-stu-id="9e10e-273">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-274">L'esempio seguente usa il <xref:System.Diagnostics.Debug.Fail%2A> metodo per stampare un messaggio durante la gestione delle eccezioni.</span><span class="sxs-lookup"><span data-stu-id="9e10e-274">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9e10e-275">È inoltre possibile utilizzare il <xref:System.Diagnostics.Debug.Fail%2A> metodo in un'istruzione switch.</span><span class="sxs-lookup"><span data-stu-id="9e10e-275">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e10e-276">Svuota il buffer di output e determina la scrittura dei dati del buffer nell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-276">Flushes the output buffer and causes buffered data to write to the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-277">La cancellazione del flusso non svuotamento del codificatore sottostante a meno che non chiama in modo esplicito <xref:System.Diagnostics.Debug.Flush%2A> o <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-277">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="9e10e-278">Impostazione <xref:System.Diagnostics.Debug.AutoFlush%2A> a `true` , i dati verranno scaricati dal buffer nel flusso, ma lo stato del codificatore non verrà rimosso.</span><span class="sxs-lookup"><span data-stu-id="9e10e-278">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="9e10e-279">In questo modo il codificatore mantenere lo stato (caratteri parziali) in modo che può codificare correttamente il blocco successivo di caratteri.</span><span class="sxs-lookup"><span data-stu-id="9e10e-279">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="9e10e-280">Questo scenario riguarda UTF8 e UTF7, in cui alcuni caratteri possono essere codificati solo dopo che il codificatore riceve adiacenti carattere o caratteri.</span><span class="sxs-lookup"><span data-stu-id="9e10e-280">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-281">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TextWriterTraceListener> denominato `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-281">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="9e10e-282">`myTextListener` Usa un <xref:System.IO.FileStream> chiamato `myFileStream` per scrivere in un file denominato `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-282">`myTextListener` uses a <xref:System.IO.FileStream> called `myFileStream` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="9e10e-283">Nell'esempio viene creato il flusso, apre il file se esistente o crearne una nuova, scrivere una riga di testo nel file e quindi scarica e chiude l'output.</span><span class="sxs-lookup"><span data-stu-id="9e10e-283">The example creates the stream, opens the file if it exists or creates a new one, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e10e-284">Incrementa la proprietà <see cref="P:System.Diagnostics.Debug.IndentLevel" /> corrente di uno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-284">Increases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9e10e-285">Nell'esempio seguente imposta il livello di rientro e trasmette i messaggi di debug.</span><span class="sxs-lookup"><span data-stu-id="9e10e-285">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9e10e-286">Questo esempio produce il seguente output:</span><span class="sxs-lookup"><span data-stu-id="9e10e-286">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Unindent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e10e-287">Ottiene o imposta il livello di rientro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-287">Gets or sets the indent level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e10e-288">Livello di rientro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-288">The indent level.</span>
          </span>
          <span data-ttu-id="9e10e-289">Il valore predefinito è 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-289">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-290">Il <xref:System.Diagnostics.Debug.IndentLevel%2A> proprietà rappresenta il numero di volte in cui il rientro di dimensioni <xref:System.Diagnostics.Debug.IndentSize%2A> viene applicato.</span><span class="sxs-lookup"><span data-stu-id="9e10e-290">The <xref:System.Diagnostics.Debug.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Debug.IndentSize%2A> is applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-291">Nell'esempio seguente imposta il livello di rientro e trasmette i messaggi di debug.</span><span class="sxs-lookup"><span data-stu-id="9e10e-291">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9e10e-292">Questo esempio produce il seguente output:</span><span class="sxs-lookup"><span data-stu-id="9e10e-292">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e10e-293">Ottiene o imposta il numero di spazi in un rientro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-293">Gets or sets the number of spaces in an indent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e10e-294">Numero di spazi in un rientro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-294">The number of spaces in an indent.</span>
          </span>
          <span data-ttu-id="9e10e-295">Il valore predefinito è quattro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-295">The default is four.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-296">Oggetto <xref:System.Diagnostics.TextWriterTraceListener> questo numero viene interpretato come spazi.</span><span class="sxs-lookup"><span data-stu-id="9e10e-296">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="9e10e-297">Un <xref:System.Diagnostics.EventLogTraceListener> ignora questo valore.</span><span class="sxs-lookup"><span data-stu-id="9e10e-297">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="9e10e-298">Per impostare il <xref:System.Diagnostics.Debug.AutoFlush%2A> e <xref:System.Diagnostics.Debug.IndentSize%2A> per <xref:System.Diagnostics.Debug>, è anche possibile modificare il file di configurazione corrispondente al nome dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="9e10e-298">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="9e10e-299">Il file di configurazione deve essere formattato come illustrato nell'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="9e10e-299">The configuration file should be formatted as shown in the following example.</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e10e-300">Ottiene l'insieme di listener che esegue il monitoraggio dell'output di debug.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-300">Gets the collection of listeners that is monitoring the debug output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e10e-301">Oggetto <see cref="T:System.Diagnostics.TraceListenerCollection" /> che rappresenta un insieme di tipo <see cref="T:System.Diagnostics.TraceListener" /> che esegue il monitoraggio dell'output di debug.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-301">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> representing a collection of type <see cref="T:System.Diagnostics.TraceListener" /> that monitors the debug output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-302">I listener producono output formattato dall'output di debug.</span><span class="sxs-lookup"><span data-stu-id="9e10e-302">The listeners produce formatted output from the debug output.</span></span> <span data-ttu-id="9e10e-303">Per impostazione predefinita, la raccolta contiene un'istanza di <xref:System.Diagnostics.DefaultTraceListener> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-303">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="9e10e-304">Per rimuovere il listener predefinito, chiamare il <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> (metodo) e passare l'istanza del <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-304">To remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="9e10e-305">Per reindirizzare l'output alla finestra della console, aggiungere un'istanza di <xref:System.Diagnostics.ConsoleTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-305">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span> <span data-ttu-id="9e10e-306">Per reindirizzare l'output di un file o flusso, aggiungere un'istanza di <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-306">To redirect output to a file or stream, add an instance of the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9e10e-307">Il <xref:System.Diagnostics.Debug.Listeners%2A> insieme è condiviso da entrambi i <xref:System.Diagnostics.Debug> e <xref:System.Diagnostics.Trace> classi; aggiunta di un listener di traccia a una classe viene aggiunto il listener a entrambi.</span><span class="sxs-lookup"><span data-stu-id="9e10e-307">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-308">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TextWriterTraceListener> che genera nella finestra della console.</span><span class="sxs-lookup"><span data-stu-id="9e10e-308">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="9e10e-309">Il codice aggiunge quindi il nuovo listener per il <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-309">The code then adds the new listener to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Debug.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9e10e-310">per operare con codice non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-310">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="9e10e-311">Valore richiesta <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-311">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Print">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9e10e-312">Scrive un messaggio seguito da un terminatore di riga nei listener di traccia nell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-312">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9e10e-313">Messaggio da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-313">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-314">Scrive un messaggio seguito da un terminatore di riga nei listener di traccia nell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-314">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-315">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga.</span><span class="sxs-lookup"><span data-stu-id="9e10e-315">The default line terminator is a carriage return followed by a line feed.</span></span> <span data-ttu-id="9e10e-316">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-316">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="9e10e-317">Stringa di formato composito che contiene testo combinato con zero o più elementi di formato, che corrispondono agli oggetti nella matrice <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-317">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="9e10e-318">Matrice di oggetti che contiene zero o più oggetti da formattare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-318">An object array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-319">Scrive una stringa formattata seguita da un terminatore di riga nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-319">Writes a formatted string followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-320">Questo metodo utilizza il di .NET Framework per convertire il valore di un oggetto nella relativa rappresentazione di testo e incorporare tale rappresentazione in una stringa.</span><span class="sxs-lookup"><span data-stu-id="9e10e-320">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="9e10e-321">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-321">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9e10e-322">
            <paramref name="format" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-322">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9e10e-323">
            <paramref name="format" /> non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-323">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="9e10e-324">oppure</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-324">-or-</span>
          </span>
          <span data-ttu-id="9e10e-325">Il numero che indica un argomento da formattare è minore di zero oppure maggiore o uguale al numero di oggetti specificati da formattare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-325">The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e10e-326">Riduce l'oggetto <see cref="P:System.Diagnostics.Debug.IndentLevel" /> corrente di uno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-326">Decreases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9e10e-327">Nell'esempio seguente imposta il livello di rientro e trasmette i messaggi di debug.</span><span class="sxs-lookup"><span data-stu-id="9e10e-327">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9e10e-328">Questo esempio produce il seguente output:</span><span class="sxs-lookup"><span data-stu-id="9e10e-328">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Indent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9e10e-329">Scrive le informazioni sul debug nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-329">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9e10e-330">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-330">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-331">Scrive il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia nella raccolta <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-331">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-332">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-332">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-333">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.Write%2A> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-333">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-334">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-334">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-335">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-335">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-336">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Error` o versione successiva, viene generato il primo messaggio di errore di <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-336">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-337">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-337">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-338">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Verbose`, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-338">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="9e10e-339">Un terminatore di riga segue il secondo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-339">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9e10e-340">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-340">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-341">Scrive un messaggio nei listener di traccia della raccolta <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-341">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-342">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-342">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-343">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.Write%2A> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-343">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-344">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-344">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-345">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-345">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-346">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Error` o versione successiva, viene generato il primo messaggio di errore di <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-346">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-347">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-347">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-348">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Verbose`, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-348">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="9e10e-349">Un terminatore di riga segue il secondo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-349">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9e10e-350">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-350">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="9e10e-351">Nome di categoria usato per organizzare l'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-351">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-352">Scrive un nome di categoria e il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia nella raccolta <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-352">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-353">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-353">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-354">Utilizzare il `category` parametro al gruppo di messaggi di output.</span><span class="sxs-lookup"><span data-stu-id="9e10e-354">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="9e10e-355">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.Write%2A> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-355">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-356">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-356">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-357">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-357">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-358">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Error` o versione successiva, viene generato il primo messaggio di errore di <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-358">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-359">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-359">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-360">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Verbose`, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-360">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="9e10e-361">Un terminatore di riga segue il secondo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-361">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9e10e-362">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-362">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="9e10e-363">Nome di categoria usato per organizzare l'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-363">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-364">Scrive un nome di categoria e un messaggio nei listener di traccia della raccolta <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-364">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-365">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-365">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-366">Utilizzare il `category` parametro al gruppo di messaggi di output.</span><span class="sxs-lookup"><span data-stu-id="9e10e-366">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="9e10e-367">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.Write%2A> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-367">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-368">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-368">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-369">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-369">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-370">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Error` o versione successiva, viene generato il primo messaggio di errore di <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-370">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-371">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-371">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-372">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Verbose`, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-372">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="9e10e-373">Un terminatore di riga segue il secondo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-373">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9e10e-374">Scrive le informazioni sul debug nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-374">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="9e10e-375">Espressione condizionale da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-375">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="9e10e-376">Se la condizione è <see langword="true" />, il valore viene scritto nei listener di traccia nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-376">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9e10e-377">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-377">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-378">Scrive il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia nella raccolta <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-378">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-379">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-379">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-380">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.Write%2A> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-380">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-381">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-381">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-382">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-382">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-383">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Error` o versioni successive, l'esempio restituisce il nome del parametro del valore per il <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-383">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-384">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-384">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-385">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Verbose`, viene generato un messaggio sulla stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-385">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="9e10e-386">Un terminatore di riga segue il secondo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-386">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9e10e-387">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <see langword="If...Then" /> istruzioni anziché <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> istruzioni.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-387">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="9e10e-388">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-388">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="9e10e-389">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <c>mySwitch. TraceError</c> restituisce <see langword="false" />, non è necessario chiamare <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-389">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="9e10e-390">Nel secondo esempio viene chiamato sempre <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, anche quando <c>mySwitch. TraceError</c> è <see langword="false" /> e non viene prodotto alcun output di traccia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-390">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="9e10e-391">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-391">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="9e10e-392">Primo esempio:</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-392">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="9e10e-393">Secondo esempio:</span><span class="sxs-lookup"><span data-stu-id="9e10e-393">Second example:</span></span>  
  
```  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="9e10e-394">Espressione condizionale da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-394">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="9e10e-395">Se la condizione è <see langword="true" />, il messaggio viene scritto nei listener di traccia nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-395">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="9e10e-396">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-396">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-397">Scrive un messaggio ai listener di traccia della raccolta <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-397">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-398">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-398">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-399">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.Write%2A> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-399">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-400">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-400">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-401">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-401">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-402">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Error` o versione successiva, viene generato il primo messaggio di errore di <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-402">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-403">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-403">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-404">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Verbose`, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-404">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="9e10e-405">Un terminatore di riga segue il secondo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-405">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9e10e-406">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <see langword="If...Then" /> istruzioni anziché <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> istruzioni.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-406">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="9e10e-407">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-407">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="9e10e-408">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <c>mySwitch. TraceError</c> restituisce <see langword="false" />, non è necessario chiamare <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-408">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="9e10e-409">Nel secondo esempio viene chiamato sempre <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, anche quando <c>mySwitch. TraceError</c> è <see langword="false" /> e non viene prodotto alcun output di traccia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-409">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="9e10e-410">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-410">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="9e10e-411">Primo esempio:</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-411">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="9e10e-412">Secondo esempio:</span><span class="sxs-lookup"><span data-stu-id="9e10e-412">Second example:</span></span>  
  
```  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="9e10e-413">Espressione condizionale da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-413">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="9e10e-414">Se la condizione è <see langword="true" />, il nome della categoria e il valore vengono scritti nei listener di traccia nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-414">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9e10e-415">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-415">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="9e10e-416">Nome di categoria usato per organizzare l'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-416">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-417">Scrive un nome di categoria e il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia nella raccolta <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-417">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-418">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-418">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-419">Il `category` parametro può essere utilizzato per raggruppare i messaggi di output.</span><span class="sxs-lookup"><span data-stu-id="9e10e-419">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="9e10e-420">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.Write%2A> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-420">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-421">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-421">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-422">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-422">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-423">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Verbose`, viene generato il nome del `myObject` e `category` per il <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-423">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-424">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-424">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-425">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Error` o superiore, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-425">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="9e10e-426">Un terminatore di riga segue il secondo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-426">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9e10e-427">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <see langword="If...Then" /> istruzioni anziché <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> istruzioni.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-427">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="9e10e-428">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-428">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="9e10e-429">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <c>mySwitch. TraceError</c> restituisce <see langword="false" />, non è necessario chiamare <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-429">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="9e10e-430">Nel secondo esempio viene chiamato sempre <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, anche quando <c>mySwitch. TraceError</c> è <see langword="false" /> e non viene prodotto alcun output di traccia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-430">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="9e10e-431">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-431">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="9e10e-432">Primo esempio:</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-432">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="9e10e-433">Secondo esempio:</span><span class="sxs-lookup"><span data-stu-id="9e10e-433">Second example:</span></span>  
  
```  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="9e10e-434">Espressione condizionale da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-434">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="9e10e-435">Se la condizione è <see langword="true" />, il nome della categoria e il messaggio vengono scritti nei listener di traccia nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-435">If the condition is <see langword="true" />, the category name and message are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="9e10e-436">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-436">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="9e10e-437">Nome di categoria usato per organizzare l'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-437">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-438">Scrive un nome di categoria e un messaggio nei listener di traccia della raccolta <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-438">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-439">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-439">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-440">Il `category` parametro può essere utilizzato per raggruppare i messaggi di output.</span><span class="sxs-lookup"><span data-stu-id="9e10e-440">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="9e10e-441">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-441">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-442">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-442">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-443">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-443">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-444">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Verbose`, nell'esempio viene restituito il primo messaggio di errore di <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-444">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-445">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-445">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-446">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Error` o superiore, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-446">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="9e10e-447">Un terminatore di riga segue il secondo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-447">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9e10e-448">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <see langword="If...Then" /> istruzioni anziché <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> istruzioni.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-448">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="9e10e-449">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-449">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="9e10e-450">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <c>mySwitch. TraceError</c> restituisce <see langword="false" />, non è necessario chiamare <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-450">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="9e10e-451">Nel secondo esempio viene chiamato sempre <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, anche quando <c>mySwitch. TraceError</c> è <see langword="false" /> e non viene prodotto alcun output di traccia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-451">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="9e10e-452">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-452">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="9e10e-453">Primo esempio:</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-453">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="9e10e-454">Secondo esempio:</span><span class="sxs-lookup"><span data-stu-id="9e10e-454">Second example:</span></span>  
  
```  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9e10e-455">Scrive le informazioni sul debug nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-455">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9e10e-456">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-456">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-457">Scrive il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia nella raccolta <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-457">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-458">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-458">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-459">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.WriteLine%2A> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-459">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-460">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-460">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-461">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-461">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-462">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Error` o versione successiva, viene generato il primo messaggio di errore di <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-462">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-463">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-463">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-464">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Verbose`, viene generato il nome dell'oggetto nella stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-464">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="9e10e-465">Un terminatore di riga segue il secondo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-465">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9e10e-466">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-466">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-467">Scrive un messaggio seguito da un terminatore di riga nei listener di traccia nell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-467">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-468">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-468">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-469">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.WriteLine%2A> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-469">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-470">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-470">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-471">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-471">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-472">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Error` o versione successiva, viene generato il primo messaggio di errore di <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-472">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-473">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-473">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-474">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Verbose`, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-474">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="9e10e-475">Un terminatore di riga segue il secondo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-475">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9e10e-476">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-476">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="9e10e-477">Nome di categoria usato per organizzare l'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-477">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-478">Scrive un nome di categoria e il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia nella raccolta <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-478">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-479">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-479">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-480">Il `category` parametro può essere utilizzato per raggruppare i messaggi di output.</span><span class="sxs-lookup"><span data-stu-id="9e10e-480">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="9e10e-481">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.WriteLine%2A> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-481">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-482">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-482">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-483">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-483">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-484">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Error` o versione successiva, viene generato il primo messaggio di errore di <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-484">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-485">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-485">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-486">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Verbose`, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-486">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="9e10e-487">Il secondo messaggio è seguito da un terminatore di riga.</span><span class="sxs-lookup"><span data-stu-id="9e10e-487">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="9e10e-488">Stringa di formato composito che contiene testo combinato con zero o più elementi di formato, che corrispondono agli oggetti nella matrice <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-488">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="9e10e-489">Matrice di oggetti che contiene zero o più oggetti da formattare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-489">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-490">Scrive un messaggio formattato seguito da un terminatore di riga nei listener di traccia nell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-490">Writes a formatted message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-491">Questo metodo utilizza il di .NET Framework per convertire il valore di un oggetto nella relativa rappresentazione di testo e incorporare tale rappresentazione in una stringa.</span><span class="sxs-lookup"><span data-stu-id="9e10e-491">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span>  
  
 <span data-ttu-id="9e10e-492">La parola chiave nella sintassi per questo metodo implica che la matrice di oggetti può essere un valore singolo.</span><span class="sxs-lookup"><span data-stu-id="9e10e-492">The  keyword in the syntax for this method implies that the object array can be a single value.</span></span> <span data-ttu-id="9e10e-493">L'eccezione è il <xref:System.String> oggetto.</span><span class="sxs-lookup"><span data-stu-id="9e10e-493">The exception to this is the <xref:System.String> object.</span></span> <span data-ttu-id="9e10e-494">Overload esplicite hanno la precedenza, quindi un `arg` impostazione di una singola stringa predefinita sarà la <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> rapporto di overload.</span><span class="sxs-lookup"><span data-stu-id="9e10e-494">Explicit overloads take precedence, so an `arg` value of a single string will default to the <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> overload.</span></span>  
  
 <span data-ttu-id="9e10e-495">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-495">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-496">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-496">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9e10e-497">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-497">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="9e10e-498">Nome di categoria usato per organizzare l'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-498">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-499">Scrive un nome di categoria e un messaggio nei listener di traccia della raccolta <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-499">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-500">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-500">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-501">Il `category` parametro può essere utilizzato per raggruppare i messaggi di output.</span><span class="sxs-lookup"><span data-stu-id="9e10e-501">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="9e10e-502">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.WriteLine%2A> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-502">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-503">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-503">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-504">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-504">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-505">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Error` o versione successiva, viene generato il primo messaggio di errore di <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-505">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-506">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-506">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-507">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Verbose`, nell'esempio viene restituito il secondo messaggio di errore e `category` sulla stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-507">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="9e10e-508">Un terminatore di riga segue il secondo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-508">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9e10e-509">Scrive le informazioni sul debug nei listener di traccia dell'insieme <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-509">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="9e10e-510">Espressione condizionale da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-510">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="9e10e-511">Se la condizione è <see langword="true" />, il valore viene scritto nei listener di traccia nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-511">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9e10e-512">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-512">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-513">Scrive il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia nella raccolta <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-513">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-514">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-514">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-515">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.WriteLine%2A> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-515">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-516">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-516">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-517">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-517">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-518">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Error` o versione successiva, viene generato il primo messaggio di errore di <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-518">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-519">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-519">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-520">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Verbose`, viene generato il nome dell'oggetto nella stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-520">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="9e10e-521">Un terminatore di riga segue il secondo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-521">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9e10e-522">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <see langword="If...Then" /> istruzioni anziché <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> istruzioni.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-522">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="9e10e-523">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-523">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="9e10e-524">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <c>mySwitch. TraceError</c> restituisce <see langword="false" />, non è necessario chiamare <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-524">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="9e10e-525">Nel secondo esempio viene chiamato sempre <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, anche quando <c>mySwitch. TraceError</c> è <see langword="false" /> e non viene prodotto alcun output di traccia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-525">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="9e10e-526">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-526">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="9e10e-527">Primo esempio:</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-527">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="9e10e-528">Secondo esempio:</span><span class="sxs-lookup"><span data-stu-id="9e10e-528">Second example:</span></span>  
  
```  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="9e10e-529">Espressione condizionale da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-529">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="9e10e-530">Se la condizione è <see langword="true" />, il messaggio viene scritto nei listener di traccia nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-530">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="9e10e-531">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-531">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-532">Scrive un messaggio ai listener di traccia della raccolta <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-532">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-533">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-533">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-534">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-534">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-535">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-535">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-536">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-536">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-537">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Error` o versione successiva, viene generato il primo messaggio di errore di <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-537">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-538">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-538">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-539">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Verbose`, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-539">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="9e10e-540">Un terminatore di riga segue il secondo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-540">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9e10e-541">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <see langword="If...Then" /> istruzioni anziché <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> istruzioni.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-541">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="9e10e-542">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-542">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="9e10e-543">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <c>mySwitch. TraceError</c> restituisce <see langword="false" />, non è necessario chiamare <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-543">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="9e10e-544">Nel secondo esempio viene chiamato sempre <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, anche quando <c>mySwitch. TraceError</c> è <see langword="false" /> e non viene prodotto alcun output di traccia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-544">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="9e10e-545">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-545">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="9e10e-546">Primo esempio:</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-546">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="9e10e-547">Secondo esempio:</span><span class="sxs-lookup"><span data-stu-id="9e10e-547">Second example:</span></span>  
  
```  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="9e10e-548">Espressione condizionale da valutare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-548">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="9e10e-549">Se la condizione è <see langword="true" />, il nome della categoria e il valore vengono scritti nei listener di traccia nell'insieme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-549">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9e10e-550">Oggetto il cui nome viene inviato ai <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-550">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="9e10e-551">Nome di categoria usato per organizzare l'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-551">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-552">Scrive un nome di categoria e il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nei listener di traccia nella raccolta <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-552">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-553">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-553">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-554">Il `category` parametro può essere utilizzato per raggruppare i messaggi di output.</span><span class="sxs-lookup"><span data-stu-id="9e10e-554">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="9e10e-555">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.WriteLine%2A> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-555">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-556">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-556">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-557">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-557">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-558">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Error` o versione successiva, viene generato il primo messaggio di errore di <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-558">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-559">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-559">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-560">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Verbose`, nell'esempio viene restituito il secondo messaggio di errore sulla stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-560">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="9e10e-561">Un terminatore di riga segue il secondo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-561">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9e10e-562">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <see langword="If...Then" /> istruzioni anziché <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> istruzioni.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-562">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="9e10e-563">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-563">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="9e10e-564">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <c>mySwitch. TraceError</c> restituisce <see langword="false" />, non è necessario chiamare <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-564">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="9e10e-565">Nel secondo esempio viene chiamato sempre <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, anche quando <c>mySwitch. TraceError</c> è <see langword="false" /> e non viene prodotto alcun output di traccia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-565">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="9e10e-566">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-566">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="9e10e-567">Primo esempio:</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-567">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="9e10e-568">Secondo esempio:</span><span class="sxs-lookup"><span data-stu-id="9e10e-568">Second example:</span></span>  
  
```  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="9e10e-569">
            <see langword="true" /> per fare in modo che venga scritto un messaggio; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-569">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="9e10e-570">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-570">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="9e10e-571">Nome di categoria usato per organizzare l'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-571">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e10e-572">Scrive un nome di categoria e un messaggio nei listener di traccia della raccolta <see cref="P:System.Diagnostics.Debug.Listeners" /> se una condizione è <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e10e-572">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e10e-573">Per impostazione predefinita, l'output viene scritto in un'istanza di <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-573">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="9e10e-574">Il `category` parametro può essere utilizzato per raggruppare i messaggi di output.</span><span class="sxs-lookup"><span data-stu-id="9e10e-574">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="9e10e-575">Questo metodo chiama il <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> metodo del listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="9e10e-575">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e10e-576">Nell'esempio seguente viene creato un <xref:System.Diagnostics.TraceSwitch> denominato `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="9e10e-576">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="9e10e-577">Questa opzione è impostata all'esterno di esempio di codice.</span><span class="sxs-lookup"><span data-stu-id="9e10e-577">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="9e10e-578">Se l'opzione è impostata sul <xref:System.Diagnostics.TraceLevel> `Error` o versione successiva, viene generato il primo messaggio di errore di <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e10e-578">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="9e10e-579">Per informazioni sull'aggiunta di un listener per il <xref:System.Diagnostics.Debug.Listeners%2A> insieme, vedere la <xref:System.Diagnostics.TraceListenerCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="9e10e-579">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="9e10e-580">Quindi, se il <xref:System.Diagnostics.TraceLevel> è impostato su `Verbose`, nell'esempio viene restituito il secondo messaggio di errore e `category` sulla stessa riga del primo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-580">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="9e10e-581">Un terminatore di riga segue il secondo messaggio.</span><span class="sxs-lookup"><span data-stu-id="9e10e-581">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9e10e-582">È possibile ridurre al minimo la riduzione delle prestazioni di strumentazione dell'applicazione utilizzando <see langword="If...Then" /> istruzioni anziché <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> istruzioni.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-582">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="9e10e-583">I seguenti due esempi di codice inviare lo stesso messaggio di debug.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-583">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="9e10e-584">Tuttavia, il primo esempio è molto più veloce quando viene disattivata, l'analisi perché se <c>mySwitch. TraceError</c> restituisce <see langword="false" />, non è necessario chiamare <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-584">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="9e10e-585">Nel secondo esempio viene chiamato sempre <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, anche quando <c>mySwitch. TraceError</c> è <see langword="false" /> e non viene prodotto alcun output di traccia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-585">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="9e10e-586">Ciò può comportare inutile esecuzione di codice arbitrariamente complesso.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-586">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="9e10e-587">Primo esempio:</span>
            <span class="sxs-lookup">
              <span data-stu-id="9e10e-587">First example:</span>
            </span>  
  
```  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="9e10e-588">Secondo esempio:</span><span class="sxs-lookup"><span data-stu-id="9e10e-588">Second example:</span></span>  
  
```  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>