<Type Name="Stopwatch" FullName="System.Diagnostics.Stopwatch">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9cf613fcbb229511698e1a6e99faa1275c9d4c74" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37767147" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Stopwatch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Stopwatch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Stopwatch" />
  <TypeSignature Language="VB.NET" Value="Public Class Stopwatch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stopwatch" />
  <TypeSignature Language="F#" Value="type Stopwatch = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un set di metodi e proprietà che possono essere usati per misurare con precisione il tempo trascorso.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Diagnostics.Stopwatch> istanza può misurare il tempo trascorso per un intervallo o il tempo totale trascorso in più intervalli. In una tipica <xref:System.Diagnostics.Stopwatch> scenario, si chiama il <xref:System.Diagnostics.Stopwatch.Start%2A> metodo, quindi chiamano le <xref:System.Diagnostics.Stopwatch.Stop%2A> (metodo) e quindi controllare il tempo trascorso utilizzando il <xref:System.Diagnostics.Stopwatch.Elapsed%2A> proprietà.  
  
 Oggetto <xref:System.Diagnostics.Stopwatch> istanza è in esecuzione o arrestato; usare <xref:System.Diagnostics.Stopwatch.IsRunning%2A> per determinare lo stato corrente di un <xref:System.Diagnostics.Stopwatch>. Usare <xref:System.Diagnostics.Stopwatch.Start%2A> per iniziare a misurare il tempo trascorso; usare <xref:System.Diagnostics.Stopwatch.Stop%2A> per arrestare la misurazione del tempo trascorso. Il valore di tempo trascorso tramite le proprietà di query <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, o <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>. È possibile eseguire una query la proprietà tempo trascorso mentre l'istanza è in esecuzione o arrestato. Mentre il tempo trascorso proprietà aumentano il <xref:System.Diagnostics.Stopwatch> è in esecuzione; rimangano costanti quando l'istanza viene arrestata.  
  
 Per impostazione predefinita, il valore del tempo trascorso un <xref:System.Diagnostics.Stopwatch> istanza è uguale al totale di tutti gli intervalli di tempo misurato. Ogni chiamata a <xref:System.Diagnostics.Stopwatch.Start%2A> avvia il conteggio cumulativo tempo; ogni chiamata a <xref:System.Diagnostics.Stopwatch.Stop%2A> termina la misurazione dell'intervallo corrente e blocca il valore cumulativo tempo trascorso. Usare la <xref:System.Diagnostics.Stopwatch.Reset%2A> metodo per cancellare il tempo cumulativo trascorso in un oggetto esistente <xref:System.Diagnostics.Stopwatch> istanza.  
  
 Il <xref:System.Diagnostics.Stopwatch> misura il tempo trascorso utilizzato dal conteggio dei tick del timer nel meccanismo del timer sottostante. Se l'hardware e sistema operativo supporta un contatore delle prestazioni ad alta risoluzione, quindi il <xref:System.Diagnostics.Stopwatch> classe utilizza tale contatore per misurare il tempo trascorso. In caso contrario, il <xref:System.Diagnostics.Stopwatch> classe utilizza il timer di sistema per misurare il tempo trascorso. Usare la <xref:System.Diagnostics.Stopwatch.Frequency> e <xref:System.Diagnostics.Stopwatch.IsHighResolution> campi per determinare la precisione e la risoluzione del <xref:System.Diagnostics.Stopwatch> implementazione degli intervalli.  
  
 Il <xref:System.Diagnostics.Stopwatch> classe facilita la modifica dei contatori di prestazioni correlati a intervalli all'interno di codice gestito. In particolare, il <xref:System.Diagnostics.Stopwatch.Frequency> campo e <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> metodo può essere usato al posto delle API Win32 non gestite `QueryPerformanceFrequency` e `QueryPerformanceCounter`.  
  
> [!NOTE]
>  In un computer multiprocessore, non importa quale processore in esecuzione il thread. Tuttavia, a causa dei bug nel BIOS o Hardware Abstraction Layer (HAL), è possibile ottenere i risultati di durata diversa in processori diversi. Per specificare l'affinità processori per un thread, usare il <xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType> (metodo).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Diagnostics.Stopwatch> classe per determinare il tempo di esecuzione per un'applicazione.  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Diagnostics.Stopwatch> classe per calcolare i dati sulle prestazioni.  
  
 [!code-cpp[StopWatchPerfSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#1)]
 [!code-csharp[StopWatchPerfSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#1)]
 [!code-vb[StopWatchPerfSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeSpan" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stopwatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stopwatch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.Stopwatch" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'oggetto restituito <xref:System.Diagnostics.Stopwatch> istanza viene arrestata e la proprietà tempo trascorso dell'istanza è uguale a zero.  
  
 Usare la <xref:System.Diagnostics.Stopwatch.Start%2A> far iniziare misurando il tempo trascorso con il nuovo metodo <xref:System.Diagnostics.Stopwatch> istanza. Usare la <xref:System.Diagnostics.Stopwatch.StartNew%2A> metodo per inizializzare un nuova <xref:System.Diagnostics.Stopwatch> dell'istanza e avviare immediatamente l'operazione.  
  
   
  
## Examples  
 Nell'esempio seguente viene inizializzato un <xref:System.Diagnostics.Stopwatch> istanza usando un costruttore di classi semplice.  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public TimeSpan Elapsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Elapsed" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.Elapsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elapsed As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Elapsed { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Elapsed : TimeSpan" Usage="System.Diagnostics.Stopwatch.Elapsed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tempo totale trascorso misurato dall'istanza corrente.</summary>
        <value>Oggetto <see cref="T:System.TimeSpan" /> di sola lettura che rappresenta il tempo totale trascorso misurato dall'istanza corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In una tipica <xref:System.Diagnostics.Stopwatch> scenario, si chiama il <xref:System.Diagnostics.Stopwatch.Start%2A> metodo, quindi chiamano le <xref:System.Diagnostics.Stopwatch.Stop%2A> (metodo) e quindi controllare il tempo trascorso utilizzando il <xref:System.Diagnostics.Stopwatch.Elapsed%2A> proprietà.  
  
 Usare la <xref:System.Diagnostics.Stopwatch.Elapsed%2A> con valore della proprietà per recuperare il tempo trascorso <xref:System.TimeSpan> metodi e proprietà. Ad esempio, è possibile formattare l'oggetto restituito <xref:System.TimeSpan> dell'istanza in una rappresentazione di testo o passare a un'altra classe che richiede un <xref:System.TimeSpan> parametro.  
  
 È possibile eseguire una query la proprietà <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, e <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> mentre il <xref:System.Diagnostics.Stopwatch> istanza è in esecuzione o arrestato. Mentre il tempo trascorso proprietà aumentano il <xref:System.Diagnostics.Stopwatch> è in esecuzione; rimangano costanti quando l'istanza viene arrestata.  
  
 Per impostazione predefinita, il valore del tempo trascorso un <xref:System.Diagnostics.Stopwatch> istanza è uguale al totale di tutti gli intervalli di tempo misurato. Ogni chiamata a <xref:System.Diagnostics.Stopwatch.Start%2A> avvia il conteggio cumulativo tempo; ogni chiamata a <xref:System.Diagnostics.Stopwatch.Stop%2A> termina la misurazione dell'intervallo corrente e blocca il valore cumulativo tempo trascorso. Usare la <xref:System.Diagnostics.Stopwatch.Reset%2A> metodo per cancellare il tempo cumulativo trascorso in un oggetto esistente <xref:System.Diagnostics.Stopwatch> istanza.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Diagnostics.Stopwatch.Elapsed%2A> proprietà per determinare il tempo di esecuzione per un'applicazione.  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedMilliseconds">
      <MemberSignature Language="C#" Value="public long ElapsedMilliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedMilliseconds As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedMilliseconds { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedMilliseconds : int64" Usage="System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tempo totale trascorso misurato dall'istanza corrente in millisecondi.</summary>
        <value>Valore long Integer di sola lettura che rappresenta il numero totale di millisecondi misurato dall'istanza corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà rappresenta il tempo trascorso arrotondato per difetto all'intero millisecondo più vicino. Per eseguire misurazioni precisione più elevata, usare il <xref:System.Diagnostics.Stopwatch.Elapsed%2A> o <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> proprietà.  
  
 È possibile eseguire una query la proprietà <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, e <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> mentre il <xref:System.Diagnostics.Stopwatch> istanza è in esecuzione o arrestato. Mentre il tempo trascorso proprietà aumentano il <xref:System.Diagnostics.Stopwatch> è in esecuzione; rimangano costanti quando l'istanza viene arrestata.  
  
 Per impostazione predefinita, il valore del tempo trascorso un <xref:System.Diagnostics.Stopwatch> istanza è uguale al totale di tutti gli intervalli di tempo misurato. Ogni chiamata a <xref:System.Diagnostics.Stopwatch.Start%2A> avvia il conteggio cumulativo tempo; ogni chiamata a <xref:System.Diagnostics.Stopwatch.Stop%2A> termina la misurazione dell'intervallo corrente e blocca il valore cumulativo tempo trascorso. Usare la <xref:System.Diagnostics.Stopwatch.Reset%2A> metodo per cancellare il tempo cumulativo trascorso in un oggetto esistente <xref:System.Diagnostics.Stopwatch> istanza.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Diagnostics.Stopwatch> classe per misurare le prestazioni dei quattro implementazioni diverse per l'analisi di un numero intero da una stringa. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.Stopwatch> classe.  
  
 [!code-cpp[StopWatchPerfSample#3](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#3)]
 [!code-csharp[StopWatchPerfSample#3](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#3)]
 [!code-vb[StopWatchPerfSample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedTicks">
      <MemberSignature Language="C#" Value="public long ElapsedTicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedTicks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedTicks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedTicks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedTicks : int64" Usage="System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tempo totale trascorso misurato dall'istanza corrente in cicli del timer.</summary>
        <value>Valore long Integer di sola lettura che rappresenta il numero totale di cicli del timer misurati dall'istanza corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà rappresenta il numero di tick trascorsi nel meccanismo del timer sottostante. Un segno di graduazione è la più piccola unità di tempo che il <xref:System.Diagnostics.Stopwatch> timer può misurare. Usare la <xref:System.Diagnostics.Stopwatch.Frequency> campo per convertire il <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> valore in un numero di secondi.  
  
 È possibile eseguire una query la proprietà <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, e <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> mentre il <xref:System.Diagnostics.Stopwatch> istanza è in esecuzione o arrestato. Mentre il tempo trascorso proprietà aumentano il <xref:System.Diagnostics.Stopwatch> è in esecuzione; rimangano costanti quando l'istanza viene arrestata.  
  
 Per impostazione predefinita, il valore del tempo trascorso un <xref:System.Diagnostics.Stopwatch> istanza è uguale al totale di tutti gli intervalli di tempo misurato. Ogni chiamata a <xref:System.Diagnostics.Stopwatch.Start%2A> avvia il conteggio cumulativo tempo; ogni chiamata a <xref:System.Diagnostics.Stopwatch.Stop%2A> termina la misurazione dell'intervallo corrente e blocca il valore cumulativo tempo trascorso. Usare la <xref:System.Diagnostics.Stopwatch.Reset%2A> metodo per cancellare il tempo cumulativo trascorso in un oggetto esistente <xref:System.Diagnostics.Stopwatch> istanza.  
  
> [!NOTE]
>  <xref:System.Diagnostics.Stopwatch> segni di graduazione sono diverse da <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>. Ogni segno di graduazione il <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> valore rappresenta un intervallo di 100 nanosecondi. Ogni segno di graduazione il <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> valore rappresenta l'intervallo di tempo uguale a 1 secondo diviso per il <xref:System.Diagnostics.Stopwatch.Frequency>.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Diagnostics.Stopwatch> classe per misurare le prestazioni dei quattro implementazioni diverse per l'analisi di un numero intero da una stringa. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.Stopwatch> classe.  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="Frequency">
      <MemberSignature Language="C#" Value="public static readonly long Frequency;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int64 Frequency" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.Frequency" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Frequency As Long " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly long Frequency;" />
      <MemberSignature Language="F#" Value=" staticval mutable Frequency : int64" Usage="System.Diagnostics.Stopwatch.Frequency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la frequenza del timer sotto forma di numero di cicli al secondo. Questo campo è di sola lettura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La frequenza del timer indica la precisione e la risoluzione. Ad esempio, una frequenza del timer pari a 2 milioni di tick al secondo è uguale a una risoluzione del timer di 500 nanosecondi per tick. In altre parole, poiché un secondo equivale a 1 miliardo di nanosecondi, una frequenza del timer pari a 2 milioni di cicli al secondo è equivalente a 2 milioni di cicli al 1 miliardo di nanosecondi, che può essere semplificato ulteriormente nel 1 tick ogni 500 nanosecondi.  
  
 Il <xref:System.Diagnostics.Stopwatch.Frequency> valore dipende la risoluzione del meccanismo del timer sottostante. Se l'hardware e sistema operativo supporta un contatore delle prestazioni ad alta risoluzione, quindi il <xref:System.Diagnostics.Stopwatch.Frequency> valore riflette la frequenza di tale contatore. In caso contrario, il <xref:System.Diagnostics.Stopwatch.Frequency> valore è basato sulla frequenza del timer di sistema.  
  
 Poiché il <xref:System.Diagnostics.Stopwatch> frequenza dipende dall'hardware installato e sistema operativo, il <xref:System.Diagnostics.Stopwatch.Frequency> valore rimane costante, mentre il sistema è in esecuzione.  
  
   
  
## Examples  
 L'esempio seguente mostra la frequenza e la risoluzione di un <xref:System.Diagnostics.Stopwatch> timer. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.Stopwatch> classe.  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="GetTimestamp">
      <MemberSignature Language="C#" Value="public static long GetTimestamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetTimestamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.GetTimestamp" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTimestamp () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long GetTimestamp();" />
      <MemberSignature Language="F#" Value="static member GetTimestamp : unit -&gt; int64" Usage="System.Diagnostics.Stopwatch.GetTimestamp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene il numero corrente di cicli nel meccanismo del timer.</summary>
        <returns>Valore long Integer che rappresenta il valore del contatore dei cicli del meccanismo del timer sottostante.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il <xref:System.Diagnostics.Stopwatch> classe utilizza un contatore delle prestazioni ad alta risoluzione, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> restituisce il valore corrente di tale contatore. Se il <xref:System.Diagnostics.Stopwatch> classe utilizza il timer di sistema, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> restituisce l'attuale <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> proprietà del <xref:System.DateTime.Now%2A?displayProperty=nameWithType> istanza.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato l'utilizzo del <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> metodo per aggiornare un contatore delle prestazioni.  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="IsHighResolution">
      <MemberSignature Language="C#" Value="public static readonly bool IsHighResolution;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly bool IsHighResolution" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighResolution As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly bool IsHighResolution;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHighResolution : bool" Usage="System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica se il timer è basato su un contatore delle prestazioni ad alta risoluzione. Questo campo è di sola lettura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il timer utilizzato dal <xref:System.Diagnostics.Stopwatch> classe dipende dall'hardware del sistema e del sistema operativo. <xref:System.Diagnostics.Stopwatch.IsHighResolution> viene `true` se il <xref:System.Diagnostics.Stopwatch> timer è basato su un contatore delle prestazioni ad alta risoluzione. In caso contrario, <xref:System.Diagnostics.Stopwatch.IsHighResolution> viene `false`, che indica che il <xref:System.Diagnostics.Stopwatch> timer è basato su timer di sistema.  
  
   
  
## Examples  
 L'esempio seguente mostra la frequenza e la risoluzione di un <xref:System.Diagnostics.Stopwatch> timer. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.Stopwatch> classe.  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="System.Diagnostics.Stopwatch.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene un valore che indica se il timer <see cref="T:System.Diagnostics.Stopwatch" /> è in funzione.</summary>
        <value>
          <see langword="true" /> se l'istanza di <see cref="T:System.Diagnostics.Stopwatch" /> è attualmente in funzione e sta misurando il tempo trascorso per un intervallo; in caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Diagnostics.Stopwatch> istanza inizia con una chiamata a <xref:System.Diagnostics.Stopwatch.Start%2A> o <xref:System.Diagnostics.Stopwatch.StartNew%2A>. Arresta l'istanza in esecuzione con una chiamata a <xref:System.Diagnostics.Stopwatch.Stop%2A> o <xref:System.Diagnostics.Stopwatch.Reset%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="stopwatch.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interrompe la misurazione dell'intervallo di tempo e reimposta il tempo trascorso su zero.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Diagnostics.Stopwatch> istanza calcola e mantiene il tempo cumulativo trascorso in più intervalli di tempo, fino a quando non viene reimpostato l'istanza. Usare <xref:System.Diagnostics.Stopwatch.Stop%2A> per arrestare la misurazione dell'intervallo corrente e mantenere il valore cumulativo tempo trascorso. Usare <xref:System.Diagnostics.Stopwatch.Reset%2A> arrestare qualsiasi misurazione dell'intervallo in corso e cancellare il valore di tempo trascorso.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberSignature Language="F#" Value="member this.Restart : unit -&gt; unit" Usage="stopwatch.Restart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Arresta la misurazione dell'intervallo di tempo, azzera il tempo trascorso e avvia la misurazione del tempo trascorso.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oggetto <xref:System.Diagnostics.Stopwatch> istanza calcola e mantiene il tempo cumulativo trascorso in più intervalli di tempo, fino a quando l'istanza viene reimpostato o riavviato. Usare <xref:System.Diagnostics.Stopwatch.Stop%2A> per arrestare la misurazione dell'intervallo corrente e mantenere il valore cumulativo tempo trascorso. Usare <xref:System.Diagnostics.Stopwatch.Reset%2A> arrestare qualsiasi misurazione dell'intervallo in corso e cancellare il valore di tempo trascorso. Usare <xref:System.Diagnostics.Stopwatch.Restart%2A> misurazione dell'intervallo corrente di arrestare e avviare una nuova misurazione dell'intervallo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="stopwatch.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avvia o riprende la misurazione del tempo trascorso per un intervallo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In una tipica <xref:System.Diagnostics.Stopwatch> scenario, si chiama il <xref:System.Diagnostics.Stopwatch.Start%2A> metodo, quindi chiamano le <xref:System.Diagnostics.Stopwatch.Stop%2A> (metodo) e quindi controllare il tempo trascorso utilizzando il <xref:System.Diagnostics.Stopwatch.Elapsed%2A> proprietà.  
  
 Una volta avviato, un <xref:System.Diagnostics.Stopwatch> timer misura l'intervallo corrente, espressa in Tick del timer trascorso, fino a quando non viene arrestato o reimpostare l'istanza. Avvio di un <xref:System.Diagnostics.Stopwatch> che è già in esecuzione non modificare lo stato del timer o reimpostare le proprietà di tempo trascorso.  
  
 Quando un <xref:System.Diagnostics.Stopwatch> istanza misura più di un intervallo, il <xref:System.Diagnostics.Stopwatch.Start%2A> metodo riprende la misurazione del tempo rispetto a quello di tempo trascorso corrente. Oggetto <xref:System.Diagnostics.Stopwatch> istanza calcola e mantiene il tempo cumulativo trascorso in più intervalli di tempo, fino a quando non viene reimpostato l'istanza. Usare la <xref:System.Diagnostics.Stopwatch.Reset%2A> metodo prima di chiamare <xref:System.Diagnostics.Stopwatch.Start%2A> per cancellare il tempo cumulativo trascorso in una <xref:System.Diagnostics.Stopwatch> istanza. Usare la <xref:System.Diagnostics.Stopwatch.Restart%2A> metodo <xref:System.Diagnostics.Stopwatch.Reset%2A> e <xref:System.Diagnostics.Stopwatch.Start%2A> il <xref:System.Diagnostics.Stopwatch> con un unico comando.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Diagnostics.Stopwatch.Start%2A> metodo per avviare un timer che misura il tempo di esecuzione di un'applicazione.  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Stopwatch StartNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Stopwatch StartNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.StartNew" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StartNew () As Stopwatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Stopwatch ^ StartNew();" />
      <MemberSignature Language="F#" Value="static member StartNew : unit -&gt; System.Diagnostics.Stopwatch" Usage="System.Diagnostics.Stopwatch.StartNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Stopwatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza di <see cref="T:System.Diagnostics.Stopwatch" />, imposta su zero la proprietà del tempo trascorso e avvia la misurazione del tempo trascorso.</summary>
        <returns>Timer <see cref="T:System.Diagnostics.Stopwatch" /> che ha appena iniziato a misurare il tempo trascorso.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo è equivalente alla chiamata di <xref:System.Diagnostics.Stopwatch> costruttore e chiamando quindi <xref:System.Diagnostics.Stopwatch.Start%2A> nella nuova istanza.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Diagnostics.Stopwatch> classe per misurare le prestazioni dei quattro implementazioni diverse per l'analisi di un numero intero da una stringa. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.Stopwatch> classe.  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="stopwatch.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interrompe la misurazione del tempo trascorso per un intervallo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In una tipica <xref:System.Diagnostics.Stopwatch> scenario, si chiama il <xref:System.Diagnostics.Stopwatch.Start%2A> metodo, quindi chiamano le <xref:System.Diagnostics.Stopwatch.Stop%2A> (metodo) e quindi controllare il tempo trascorso utilizzando il <xref:System.Diagnostics.Stopwatch.Elapsed%2A> proprietà.  
  
 Il <xref:System.Diagnostics.Stopwatch.Stop%2A> metodo termina la misurazione dell'intervallo di tempo corrente. L'arresto di un <xref:System.Diagnostics.Stopwatch> vale a dire non in esecuzione non modificano lo stato del timer o reimpostare le proprietà di tempo trascorso.  
  
 Quando un <xref:System.Diagnostics.Stopwatch> istanza misura più di un intervallo, il <xref:System.Diagnostics.Stopwatch.Stop%2A> metodo è equivalente a sospendere la misurazione del tempo trascorso. Una chiamata successiva a <xref:System.Diagnostics.Stopwatch.Start%2A> riprende la misurazione del tempo rispetto a quello di tempo trascorso corrente. Usare la <xref:System.Diagnostics.Stopwatch.Reset%2A> metodo per cancellare il tempo cumulativo trascorso in una <xref:System.Diagnostics.Stopwatch> istanza.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Diagnostics.Stopwatch.Stop%2A> metodo per interrompere un timer che misura il tempo di esecuzione di un'applicazione.  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
  </Members>
</Type>