<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventLogTraceListener.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae0584552f81869e08c9235112fb2fe787ee25677af1de18f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f81869e08c9235112fb2fe787ee25677af1de18f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>Provides a simple listener that directs tracing or debugging output to an <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLog" /&gt;</ph>.</source>
          <target state="translated">Viene fornito un listener semplice che indirizza l'output di tracciatura o debug a <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLog" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>An instance of this <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> can be added to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType&gt;</ph> collections to send output from tracing or debugging to an <ph id="ph5">&lt;xref:System.Diagnostics.EventLog&gt;</ph>.</source>
          <target state="translated">Un'istanza di questo <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> possono essere aggiunti al <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>, o <ph id="ph4">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType&gt;</ph> raccolte per inviare l'output della traccia o di debug per un <ph id="ph5">&lt;xref:System.Diagnostics.EventLog&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>You can add the instance in your code or specify it in the application configuration file.</source>
          <target state="translated">È possibile aggiungere l'istanza nel codice o specificarla nel file di configurazione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>To add an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> using an application configuration file, edit the file that corresponds to the name of your application or the app.config file in a <ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> project.</source>
          <target state="translated">Per aggiungere un <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> utilizzando un file di configurazione dell'applicazione, modificare il file che corrisponde al nome dell'applicazione o il file app. config in un <ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> progetto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>In this file, insert an element for a <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener?displayProperty=nameWithType&gt;</ph> type.</source>
          <target state="translated">In questo file, inserire un elemento per un <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener?displayProperty=nameWithType&gt;</ph> tipo.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>The following example adds a <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> object named <ph id="ph2">`myListener`</ph> to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection.</source>
          <target state="translated">L'esempio seguente aggiunge un <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> oggetto denominato <ph id="ph2">`myListener`</ph> per il <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>The <ph id="ph1">`initializeData`</ph> parameter specifies the name of the event log source that is to be passed to the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">Il <ph id="ph1">`initializeData`</ph> parametro specifica il nome dell'origine che deve essere passata al registro eventi di <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.%23ctor%28System.String%29&gt;</ph> costruttore.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>For more information about how to add trace listeners in the application configuration file, see  or .</source>
          <target state="translated">Per ulteriori informazioni su come aggiungere i listener di traccia nel file di configurazione dell'applicazione, vedere o.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> for the event log that is associated with the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> instance does not exist, a new event source is created.</source>
          <target state="translated">Se il <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> per il registro eventi che è associato il <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> istanza non esiste, viene creata una nuova origine evento.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>To create an event source in Windows Vista, Windows XP Professional, or Windows Server 2003, you must have administrative privileges.</source>
          <target state="translated">Per creare un'origine evento in Windows Vista, Windows XP Professional o Windows Server 2003, è necessario disporre di privilegi amministrativi.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</source>
          <target state="translated">Il motivo per il requisito è che tutti i registri eventi, tra cui sicurezza, è necessario eseguire la ricerca per determinare se l'origine evento è univoco.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>In Windows Vista, users do not have permission to access the security log; therefore, a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown.</source>
          <target state="translated">In Windows Vista, gli utenti non dispongono delle autorizzazioni per accedere al registro di protezione. Viene pertanto generato un oggetto <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>In Windows Vista, User Account Control (UAC) determines the privileges of a user.</source>
          <target state="translated">In Windows Vista, 	la funzionalità Controllo dell'account utente determina i privilegi di un utente.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</source>
          <target state="translated">Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>By default, you are in the standard user role.</source>
          <target state="translated">Per impostazione predefinita, viene assegnato il ruolo dell'utente standard.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</source>
          <target state="translated">Per eseguire il codice che accede al Registro di sicurezza, è necessario elevare i privilegi da utente standard ad amministratore.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</source>
          <target state="translated">È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>The class provides the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.EventLog%2A&gt;</ph> property to get or set the event log that receives the tracing or debugging output, and the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.Name%2A&gt;</ph> property to hold the name of the <ph id="ph3">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph>.</source>
          <target state="translated">La classe fornisce il <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.EventLog%2A&gt;</ph> proprietà da ottenere o impostare il registro eventi che riceve la traccia di output o di debug, e il <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.Name%2A&gt;</ph> contenga il nome della proprietà di <ph id="ph3">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.Close%2A&gt;</ph> method closes the event log so it no longer receives tracing or debugging output.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.Close%2A&gt;</ph> metodo chiude il log eventi in modo non riceva più traccia o di output di debug.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.Write%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.WriteLine%2A&gt;</ph> methods write a message to the event log.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.Write%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.WriteLine%2A&gt;</ph> metodi scrivono un messaggio nel registro eventi.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>To avoid the possibility of writing large amounts of data to the event log, the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> does not output the optional trace data specified by the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Per evitare la possibilità di scrivere grandi quantità di dati nel registro eventi, il <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> non restituire i dati di traccia facoltativi specificati dal <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>The following example creates a trace listener that sends output to an event log.</source>
          <target state="translated">L'esempio seguente crea un listener di traccia che invia l'output in un log eventi.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>First, the code creates a new <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> that uses the source <ph id="ph2">`myEventLogSource`</ph>.</source>
          <target state="translated">In primo luogo, il codice crea un nuovo <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> che utilizza l'origine <ph id="ph2">`myEventLogSource`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>Next, <ph id="ph1">`myTraceListener`</ph> is added to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection.</source>
          <target state="translated">Successivamente, <ph id="ph1">`myTraceListener`</ph> viene aggiunto per il <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> insieme.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>Finally, the example sends a line of output to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> object.</source>
          <target state="translated">Infine, nell'esempio viene inviata una riga di output per il <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> oggetto.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>This type is thread safe.</source>
          <target state="translated">Questo tipo è thread-safe.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> class without a trace listener.</source>
          <target state="translated">Consente di inizializzare una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> senza un listener di traccia.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)">
          <source>The event log to write to.</source>
          <target state="translated">Log eventi in cui scrivere.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> class using the specified event log.</source>
          <target state="translated">Consente di inizializzare una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> utilizzando il log eventi specificato.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)">
          <source>The name of an existing event log source.</source>
          <target state="translated">Nome di un'origine del log eventi esistente.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> class using the specified source.</source>
          <target state="translated">Consente di inizializzare una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph> utilizzando l'origine specificata.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.Close">
          <source>Closes the event log so that it no longer receives tracing or debugging output.</source>
          <target state="translated">Chiude il log eventi in modo che non riceva più output di tracciatura o di debug.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventLogTraceListener.EventLog">
          <source>Gets or sets the event log to write to.</source>
          <target state="translated">Recupera o imposta il log eventi in cui scrivere.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogTraceListener.EventLog">
          <source>The event log to write to.</source>
          <target state="translated">Log eventi in cui scrivere.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventLogTraceListener.Name">
          <source>Gets or sets the name of this <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph>.</source>
          <target state="translated">Ottiene o imposta il nome di <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogTraceListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogTraceListener.Name">
          <source>The name of this trace listener.</source>
          <target state="translated">Nome del listener di traccia.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogTraceListener.Name">
          <source>This property defaults to the source name of the event log.</source>
          <target state="translated">Questa proprietà viene automaticamente il nome di origine del registro eventi.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>Writes trace data to the event log.</source>
          <target state="translated">Scrive i dati di traccia nel log eventi.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>An object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Oggetto che contiene l'ID processo corrente, l'ID thread e le informazioni di analisi dello stack.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A name used to identify the output; typically the name of the application that generated the trace event.</source>
          <target state="translated">Nome utilizzato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Identificatore numerico per l'evento.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The combination of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> uniquely identifies an event.</source>
          <target state="translated">La combinazione di <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> e <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> identifica un evento in modo univoco.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A data object to write to the output file or stream.</source>
          <target state="translated">Oggetto dati da scrivere nel flusso o nel file di output.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Writes trace information, a data object, and event information to the event log.</source>
          <target state="translated">Scrive le informazioni di traccia, un oggetto dati e le informazioni di evento nel log eventi.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> metodi non sono destinati a essere chiamato dal codice dell'applicazione.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>They are called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to output trace data.</source>
          <target state="translated">Vengono chiamati dai metodi di <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, e <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classi di dati di traccia di output.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> method, like the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> method is intended for automated tools but also allows the attaching of additional objects, for example an exception instance, to the trace.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> (metodo), ad esempio il <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> metodo è destinato agli strumenti automatizzati ma consente inoltre di associare oggetti aggiuntivi, ad esempio un'istanza di eccezione per la traccia.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">`eventCache`</ph> and <ph id="ph2">`source`</ph> parameters are used to determine if the event should be traced.</source>
          <target state="translated">Il <ph id="ph1">`eventCache`</ph> e <ph id="ph2">`source`</ph> parametri vengono utilizzati per determinare se l'evento deve essere tracciato.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><ph id="ph1">`id`</ph> is used to create an <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> object and the <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> is equated to an <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`id`</ph> è possibile creare un <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> oggetto e <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> è equivalente a un <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> per il <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> is written to the event log with the <ph id="ph2">`data`</ph> object, formatted as a string, using the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> viene scritto nel registro eventi con il <ph id="ph2">`data`</ph> object, formattata come una stringa, usando il <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The maximum value of the <ph id="ph1">`id`</ph> parameter is 65,535.</source>
          <target state="translated">Il valore massimo di <ph id="ph1">`id`</ph> parametro è di 65.535.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the maximum value is used.</source>
          <target state="translated">Se il <ph id="ph1">`id`</ph> valore specificato è maggiore di 65.535, viene utilizzato il valore massimo.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is not specified.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non specificato.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The log entry string exceeds 32,766 characters.</source>
          <target state="translated">La stringa della voce di log supera il limite di 32.766 caratteri.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>An object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Oggetto che contiene l'ID processo corrente, l'ID thread e le informazioni di analisi dello stack.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A name used to identify the output; typically the name of the application that generated the trace event.</source>
          <target state="translated">Nome utilizzato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Identificatore numerico per l'evento.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The combination of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> uniquely identifies an event.</source>
          <target state="translated">La combinazione di <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> e <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> identifica un evento in modo univoco.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>An array of data objects.</source>
          <target state="translated">Matrice di oggetti dati.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Writes trace information, an array of data objects, and event information to the event log.</source>
          <target state="translated">Scrive le informazioni di traccia, una matrice di oggetti dati e le informazioni di evento nel log eventi.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> metodi non sono destinati a essere chiamato dal codice dell'applicazione.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>They are called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to output trace data.</source>
          <target state="translated">Vengono chiamati dai metodi di <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, e <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classi di dati di traccia di output.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> method, like the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> method is intended for automated tools but also allows the attaching of additional objects, for example an exception instance, to the trace.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> (metodo), ad esempio il <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> metodo è destinato agli strumenti automatizzati ma consente inoltre di associare oggetti aggiuntivi, ad esempio un'istanza di eccezione per la traccia.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">`severity`</ph> and <ph id="ph2">`id`</ph> parameter data is used to create an <ph id="ph3">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> object, which is written to the event log with the data from the array of data objects.</source>
          <target state="translated">Il <ph id="ph1">`severity`</ph> e <ph id="ph2">`id`</ph> dati del parametro viene utilizzati per creare un <ph id="ph3">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> oggetto, che viene scritto nel registro eventi con i dati dalla matrice di oggetti dati.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">`eventCache`</ph> and <ph id="ph2">`source`</ph> parameters are used to determine if the event should be traced.</source>
          <target state="translated">Il <ph id="ph1">`eventCache`</ph> e <ph id="ph2">`source`</ph> parametri vengono utilizzati per determinare se l'evento deve essere tracciato.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><ph id="ph1">`id`</ph> is used to create an <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> object and the <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> is equated to an <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`id`</ph> è possibile creare un <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> oggetto e <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> è equivalente a un <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> per il <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> is written to the event log with the <ph id="ph2">`data`</ph> object array, formatted as a string array, using the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> viene scritto nel registro eventi con il <ph id="ph2">`data`</ph> matrice object, formattata come una matrice di stringhe, usando il <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The maximum value of the <ph id="ph1">`id`</ph> parameter is 65,535.</source>
          <target state="translated">Il valore massimo di <ph id="ph1">`id`</ph> parametro è di 65.535.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the maximum value is used.</source>
          <target state="translated">Se il <ph id="ph1">`id`</ph> valore specificato è maggiore di 65.535, viene utilizzato il valore massimo.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is not specified.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non specificato.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The log entry string exceeds 32,766 characters.</source>
          <target state="translated">La stringa della voce di log supera il limite di 32.766 caratteri.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.EventLogTraceListener">
          <source>Writes event trace information to the event log.</source>
          <target state="translated">Scrive le informazioni di traccia di evento nel log eventi.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>An object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Oggetto che contiene l'ID processo corrente, l'ID thread e le informazioni di analisi dello stack.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A name used to identify the output; typically the name of the application that generated the trace event.</source>
          <target state="translated">Nome utilizzato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Identificatore numerico per l'evento.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The combination of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> uniquely identifies an event.</source>
          <target state="translated">La combinazione di <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> e <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> identifica un evento in modo univoco.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The trace message.</source>
          <target state="translated">Messaggio di traccia.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Writes trace information, a message, and event information to the event log.</source>
          <target state="translated">Scrive le informazioni di traccia, un messaggio e le informazioni di evento nel log eventi.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> metodi non sono destinati a essere chiamato dal codice dell'applicazione.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>These methods are called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
          <target state="translated">Questi metodi vengono chiamati dai metodi del <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, e <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> per scrivere i dati di traccia.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> method is intended to trace events that can be processed automatically by tools.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> metodo è destinato agli eventi di traccia che possono essere elaborati automaticamente dagli strumenti.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>For example a monitoring tool can notify an administrator if a specific event is traced by a specific source.</source>
          <target state="translated">Ad esempio uno strumento di monitoraggio può inviare una notifica amministratore se un evento specifico viene analizzato da un'origine specifica.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">`eventCache`</ph> and <ph id="ph2">`source`</ph> parameters are used to determine if the event should be traced.</source>
          <target state="translated">Il <ph id="ph1">`eventCache`</ph> e <ph id="ph2">`source`</ph> parametri vengono utilizzati per determinare se l'evento deve essere tracciato.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><ph id="ph1">`id`</ph> is used to create an <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> object and the <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> is equated to an <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`id`</ph> è possibile creare un <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> oggetto e <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> è equivalente a un <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> per il <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> is written to the event log with the <ph id="ph2">`message`</ph> data using the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> viene scritto nel registro eventi con il <ph id="ph2">`message`</ph> dati usando il <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The maximum value of the <ph id="ph1">`id`</ph> parameter is 65,535.</source>
          <target state="translated">Il valore massimo di <ph id="ph1">`id`</ph> parametro è di 65.535.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the maximum value is used.</source>
          <target state="translated">Se il <ph id="ph1">`id`</ph> valore specificato è maggiore di 65.535, viene utilizzato il valore massimo.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is not specified.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non specificato.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The log entry string exceeds 32,766 characters.</source>
          <target state="translated">La stringa della voce di log supera il limite di 32.766 caratteri.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>An object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Oggetto che contiene l'ID processo corrente, l'ID thread e le informazioni di analisi dello stack.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A name used to identify the output; typically the name of the application that generated the trace event.</source>
          <target state="translated">Nome utilizzato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Identificatore numerico per l'evento.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The combination of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> uniquely identifies an event.</source>
          <target state="translated">La combinazione di <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> e <bpt id="p2">&lt;c&gt;</bpt>id<ept id="p2">&lt;/c&gt;</ept> identifica un evento in modo univoco.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A format string that contains zero or more format items that correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Stringa di formato che contiene zero o più elementi di formato, corrispondenti a oggetti nella matrice <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>An <ph id="ph1">&lt;see langword="object" /&gt;</ph> array containing zero or more objects to format.</source>
          <target state="translated">Matrice <ph id="ph1">&lt;see langword="object" /&gt;</ph> che contiene zero o più oggetti da formattare.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Writes trace information, a formatted array of objects, and event information to the event log.</source>
          <target state="translated">Scrive le informazioni di traccia, una matrice formattata di oggetti e le informazioni di evento nel log eventi.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> metodi non sono destinati a essere chiamato dal codice dell'applicazione.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>These methods are called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
          <target state="translated">Questi metodi vengono chiamati dai metodi del <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, e <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> per scrivere i dati di traccia.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> method is intended to trace events that can be processed automatically by tools.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> metodo è destinato agli eventi di traccia che possono essere elaborati automaticamente dagli strumenti.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>For example a monitoring tool can notify an administrator if a specific event is traced by a specific source.</source>
          <target state="translated">Ad esempio uno strumento di monitoraggio può inviare una notifica amministratore se un evento specifico viene analizzato da un'origine specifica.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">`eventCache`</ph> and <ph id="ph2">`source`</ph> parameters are used to determine if the event should be traced.</source>
          <target state="translated">Il <ph id="ph1">`eventCache`</ph> e <ph id="ph2">`source`</ph> parametri vengono utilizzati per determinare se l'evento deve essere tracciato.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><ph id="ph1">`id`</ph> is used to create an <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> object and the <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> is equated to an <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`id`</ph> è possibile creare un <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> oggetto e <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> è equivalente a un <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> per il <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> is written to the event log, using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method, with the message obtained from the <ph id="ph3">`format`</ph> and <ph id="ph4">`args`</ph> parameters.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> viene scritto nel registro eventi, utilizzando il <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> con il messaggio ottenuto dal metodo di <ph id="ph3">`format`</ph> e <ph id="ph4">`args`</ph> parametri.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">`args`</ph> object array is converted to a string using the <ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph> method, passing the <ph id="ph3">`format`</ph> string and <ph id="ph4">`args`</ph> array to format the string as the message for the event log.</source>
          <target state="translated">Il <ph id="ph1">`args`</ph> matrice di oggetti viene convertita in una stringa tramite il <ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph> , passando il <ph id="ph3">`format`</ph> stringa e <ph id="ph4">`args`</ph> matrice per formattare la stringa del messaggio per il log eventi.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The maximum value of the <ph id="ph1">`id`</ph> parameter is 65,535.</source>
          <target state="translated">Il valore massimo di <ph id="ph1">`id`</ph> parametro è di 65.535.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the maximum value is used.</source>
          <target state="translated">Se il <ph id="ph1">`id`</ph> valore specificato è maggiore di 65.535, viene utilizzato il valore massimo.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is not specified.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> non specificato.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The log entry string exceeds 32,766 characters.</source>
          <target state="translated">La stringa della voce di log supera il limite di 32.766 caratteri.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
          <source>The message to write.</source>
          <target state="translated">Messaggio da inserire.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
          <source>Writes a message to the event log for this instance.</source>
          <target state="translated">Scrive un messaggio nel log eventi per questa istanza.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
          <source><ph id="ph1">&lt;paramref name="message" /&gt;</ph> exceeds 32,766 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="message" /&gt;</ph> è di lunghezza superiore a 32,766 caratteri.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
          <source>The message to write.</source>
          <target state="translated">Messaggio da inserire.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
          <source>Writes a message to the event log for this instance.</source>
          <target state="translated">Scrive un messaggio nel log eventi per questa istanza.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
          <source><ph id="ph1">&lt;paramref name="message" /&gt;</ph> exceeds 32,766 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="message" /&gt;</ph> è di lunghezza superiore a 32,766 caratteri.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>