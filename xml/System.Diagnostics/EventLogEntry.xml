<Type Name="EventLogEntry" FullName="System.Diagnostics.EventLogEntry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c7e853eba92ac12a35bdff18e6aa0fe055816241" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36674949" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventLogEntry : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EventLogEntry extends System.ComponentModel.Component implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogEntry" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventLogEntry&#xA;Inherits Component&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogEntry sealed : System::ComponentModel::Component, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type EventLogEntry = class&#xA;    inherit Component&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Incapsula un singolo record nel log eventi. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È in genere non creerà le istanze di <xref:System.Diagnostics.EventLogEntry> direttamente quando si lavora con la <xref:System.Diagnostics.EventLog> classe. Il <xref:System.Diagnostics.EventLog.Entries%2A> membro del <xref:System.Diagnostics.EventLog> classe contiene una raccolta di <xref:System.Diagnostics.EventLogEntry> istanze, che è possibile scorrere durante la lettura utilizzando il <xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=nameWithType> membro di classe dell'indice.  
  
> [!IMPORTANT]
>  Questo tipo implementa la <xref:System.IDisposable> interfaccia. Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente. Per eliminare direttamente il tipo, chiamare il relativo <xref:System.IDisposable.Dispose%2A> metodo in un `try` / `catch` blocco. Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio `using` in C# o `Using` in Visual Basic. Per altre informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <xref:System.IDisposable> argomento relativo all'interfaccia.  
  
   
  
## Examples  
 Esempio di codice seguente illustra l'uso della <xref:System.Diagnostics.EventLogEntry> classe. In questo esempio, un `switch` istruzione utilizza l'input della console per eseguire la ricerca di voci del registro eventi per il tipo di evento specificato.  Se viene trovata una corrispondenza, informazioni di sorgente sulla voce di log viene visualizzati nella console.  
  
 [!code-cpp[EventLogEntry_Source#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Source/CPP/eventlogentry_source.cpp#1)]
 [!code-csharp[EventLogEntry_Source#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Source/CS/eventlogentry_source.cs#1)]
 [!code-vb[EventLogEntry_Source#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Source/VB/eventlogentry_source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="T:System.Diagnostics.EventLogEntryCollection" />
    <altmember cref="T:System.Diagnostics.EventInstance" />
  </Docs>
  <Members>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Category" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Category { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Category : string" Usage="System.Diagnostics.EventLogEntry.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The category of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il testo associato alla proprietà <see cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" /> per questa voce.</summary>
        <value>Testo della categoria specifico dell'applicazione.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni applicazione (origine evento) può definire una proprio numerate categorie e le stringhe di testo in cui vengono mappati. Il Visualizzatore eventi è possibile utilizzare la categoria per filtrare gli eventi nel registro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Non è stato possibile allocare spazio per una delle stringhe di inserimento associate alla categoria.</exception>
        <altmember cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
      </Docs>
    </Member>
    <Member MemberName="CategoryNumber">
      <MemberSignature Language="C#" Value="public short CategoryNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 CategoryNumber" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryNumber As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short CategoryNumber { short get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryNumber : int16" Usage="System.Diagnostics.EventLogEntry.CategoryNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("An ID for the category of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il numero di categoria della voce del log eventi.</summary>
        <value>Numero di categoria specifico dell'applicazione per questa voce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni applicazione (origine evento) può definire una proprio numerate categorie e le stringhe di testo in cui vengono mappati. Il Visualizzatore eventi è possibile utilizzare la categoria per filtrare gli eventi nel registro. Le categorie devono essere numerate consecutivamente inizio con il numero 1. Il numero di categoria specificato dal <xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=nameWithType> proprietà. Il Visualizzatore eventi consente di visualizzare la categoria come valore numerico oppure è possibile utilizzare la categoria come identificatore di risorsa per visualizzare una stringa di categoria localizzata. Per ulteriori informazioni, vedere <xref:System.Diagnostics.EventInstance>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.EntryType" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.Category" />
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[]" Usage="System.Diagnostics.EventLogEntry.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Binary data associated with this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene i dati binari associati alla voce.</summary>
        <value>Matrice di byte contenente i dati binari associati alla voce.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di creare una matrice che contiene una copia della voce specifiche degli eventi di dati binari che consente di visualizzare il Visualizzatore eventi in formato esadecimale e testo combinato. Dati specifiche degli eventi vengono talvolta utilizzati per archiviare le informazioni che l'applicazione per elaborare in modo indipendente da Visualizzatore eventi, ad esempio, per creare report dal file di log.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLogEntryType EntryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.EventLogEntryType EntryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.EntryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntryType As EventLogEntryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLogEntryType EntryType { System::Diagnostics::EventLogEntryType get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryType : System.Diagnostics.EventLogEntryType" Usage="System.Diagnostics.EventLogEntry.EntryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The type of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogEntryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo di evento di questa voce.</summary>
        <value>Tipo di evento associato alla voce nel log eventi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tutti i tipi di evento dispongono di dati comuni ben definiti e possono inoltre includere dati specifici dell'evento. Ogni evento è di un solo tipo, l'applicazione indica quando riferisce l'evento. Il Visualizzatore eventi utilizza il tipo di evento per determinare quale icona visualizzare nella visualizzazione elenco del registro eventi.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Diagnostics.EventLogEntry.EntryType%2A> proprietà. In questo esempio, un `switch` istruzione utilizza l'input della console per eseguire la ricerca di voci del registro eventi per l'oggetto specificato <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.  Se viene trovata una corrispondenza, informazioni di sorgente sulla voce di log viene visualizzati nella console.  
  
 [!code-cpp[EventLogEntry_Source#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Source/CPP/eventlogentry_source.cpp#1)]
 [!code-csharp[EventLogEntry_Source#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Source/CS/eventlogentry_source.cs#1)]
 [!code-vb[EventLogEntry_Source#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Source/VB/eventlogentry_source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventInstance.EntryType" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Diagnostics.EventLogEntry otherEntry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(class System.Diagnostics.EventLogEntry otherEntry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (otherEntry As EventLogEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Diagnostics::EventLogEntry ^ otherEntry);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Diagnostics.EventLogEntry -&gt; bool" Usage="eventLogEntry.Equals otherEntry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherEntry" Type="System.Diagnostics.EventLogEntry" />
      </Parameters>
      <Docs>
        <param name="otherEntry">Oggetto <see cref="T:System.Diagnostics.EventLogEntry" /> da confrontare.</param>
        <summary>Esegue un confronto tra due voci del log eventi.</summary>
        <returns>
          <see langword="true" /> se gli oggetti <see cref="T:System.Diagnostics.EventLogEntry" /> sono identici; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo esegue un confronto byte per byte tra i due oggetti. Non determina se i due <xref:System.Diagnostics.EventLogEntry> istanze fanno riferimento allo stesso oggetto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventID">
      <MemberSignature Language="C#" Value="public int EventID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EventID" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.EventID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EventID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EventID : int" Usage="System.Diagnostics.EventLogEntry.EventID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("An ID number for this event entry.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use InstanceId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'identificatore eventi specifico dell'applicazione per la voce di evento corrente.</summary>
        <value>Identificatore specifico dell'applicazione per il messaggio dell'evento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo valore rappresenta l'identificatore dell'evento per la voce nel caso in cui registro, con i primi due bit mascherati. Il <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> proprietà per una voce del registro eventi rappresenta l'identificatore di risorsa completo a 32 bit per l'evento nel file di risorse di messaggio per l'origine evento. Possono contenere due voci del registro eventi dalla stessa origine corrispondenti <xref:System.Diagnostics.EventLogEntry.EventID%2A> valori, ma offrono diversi <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> valori a causa delle differenze nei primi due bit dell'identificatore dell'evento.  
  
 Se l'applicazione ha scritto la voce di evento utilizzando uno del <xref:System.Diagnostics.EventLog.WriteEntry%2A> metodi, le <xref:System.Diagnostics.EventLogEntry.EventID%2A> corrisponde al parametro facoltativo `eventId` parametro. Se l'applicazione ha scritto l'evento utilizzando <xref:System.Diagnostics.EventLog.WriteEvent%2A> o l'API Win32 `ReportEvent`, il <xref:System.Diagnostics.EventLogEntry.EventID%2A> proprietà corrisponde all'identificatore di risorsa per l'evento, con i primi due bit mascherati.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.InstanceId" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Diagnostics.EventLogEntry.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Sequence numer of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l’indice di questa voce nel log eventi.</summary>
        <value>Indice di questa voce nel log eventi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo numero non è necessariamente in base zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public long InstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceId As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceId { long get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : int64" Usage="System.Diagnostics.EventLogEntry.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The instance ID for this event entry.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'identificatore di risorsa che definisce il testo del messaggio per la voce dell'evento.</summary>
        <value>Identificatore di risorsa che corrisponde alla definizione di una stringa nel file di risorse del messaggio dell'origine eventi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> proprietà identifica in modo univoco una voce di evento per un'origine eventi configurata. Il <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> per un registro eventi voce rappresenta l'identificatore di risorsa completo a 32 bit per l'evento nel file di risorse di messaggio per l'origine evento. Il <xref:System.Diagnostics.EventLogEntry.EventID%2A> è uguale a proprietà di <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> con i primi due bit mascherati. Possono contenere due voci del registro eventi dalla stessa origine corrispondenti <xref:System.Diagnostics.EventLogEntry.EventID%2A> valori, ma offrono diversi <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> valori a causa delle differenze dei primi due bit dell'identificatore di risorsa.  
  
 Se l'applicazione ha scritto la voce di evento utilizzando uno del <xref:System.Diagnostics.EventLog.WriteEntry%2A> metodi, le <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> corrisponde al parametro facoltativo `eventId` parametro. Se l'applicazione ha scritto l'evento utilizzando <xref:System.Diagnostics.EventLog.WriteEvent%2A>, il <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> proprietà corrisponde all'identificatore di risorsa specificato nella <xref:System.Diagnostics.EventInstance.InstanceId%2A> del `instance` parametro. Se l'applicazione ha scritto l'evento usando l'API Win32 `ReportEvent`, il <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> proprietà corrisponde all'identificatore di risorsa specificato nella `dwEventID` parametro.  
  
 Per informazioni dettagliate sulla definizione dei messaggi di evento e la creazione di file di risorse registro eventi, vedere l'argomento "Messaggio del compilatore" nella documentazione di Platform SDK [ http://msdn.microsoft.com ](http://msdn.microsoft.com/). Per ulteriori informazioni sugli identificatori di registro eventi, vedere l'argomento "Identificatori di eventi" in Platform SDK.  
  
   
  
## Examples  
 Esempio di codice seguente cerca un registro eventi per le voci con un particolare identificatore di risorsa. L'esempio di codice viene visualizzato il messaggio di evento per ogni voce corrispondente e conta il numero totale di voci corrispondenti nel log. Il testo del messaggio per ogni voce può o non può essere uguali. ogni messaggio di evento dipende il file dei messaggi di origine evento, le stringhe di inserimento e i parametri utilizzati quando è stato scritto.  
  
 [!code-cpp[EventLog_WriteEvent#10](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#10)]
 [!code-csharp[EventLog_WriteEvent#10](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#10)]
 [!code-vb[EventLog_WriteEvent#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string" Usage="System.Diagnostics.EventLogEntry.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The Computer on which this event entry occured.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome del computer in cui è stata generata questa voce.</summary>
        <value>Nome del computer che contiene il log eventi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Diagnostics.EventLogEntry.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.BinaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The message of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il messaggio localizzato associato a questa voce di evento.</summary>
        <value>Testo formattato e localizzato per il messaggio. Include le stringhe di sostituzione associate.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà consente di aprire il Registro di sistema per determinare il nome del file del file DLL che contiene il testo localizzato. Se si riceve un errore del Registro di sistema durante il test del codice sorgente, verificare che il file con estensione dll esista nel computer. Se le stringhe di inserimento sono inclusi nel messaggio, è possibile individuare errori nelle loro allocazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Non è stato possibile allocare spazio per una delle stringhe di inserimento associate al messaggio.</exception>
        <altmember cref="T:System.Diagnostics.EventInstance" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="ReplacementStrings">
      <MemberSignature Language="C#" Value="public string[] ReplacementStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ReplacementStrings" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.ReplacementStrings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReplacementStrings As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ReplacementStrings { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplacementStrings : string[]" Usage="System.Diagnostics.EventLogEntry.ReplacementStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Application strings for this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le stringhe di sostituzione associate alla voce del log eventi.</summary>
        <value>Matrice contenente le stringhe di sostituzione archiviate nella voce dell'evento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questa proprietà recupera solo le stringhe di sostituzione per la voce. Per recuperare il messaggio completo, leggere la <xref:System.Diagnostics.EventLogEntry.Message%2A> proprietà.  
  
 Il <xref:System.Diagnostics.EventLogEntry.ReplacementStrings%2A> proprietà contiene le versioni localizzate di stringhe di sostituzione che vengono utilizzate nella voce del registro eventi. Se si forniscono i file di risorse che contengono le stringhe in ciascuna lingua di destinazione per l'applicazione, è possibile trasmettere messaggi del registro eventi nella lingua utilizzata in tale computer. A tale scopo, creare un'istanza di <xref:System.Resources.ResourceManager> classe per l'assembly delle risorse che contiene le stringhe di sostituzione. Il primo parametro di <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> costruttore identifica l'assembly delle risorse da utilizzare. Utilizzare il <xref:System.Resources.ResourceManager.GetString%2A> metodo dell'istanza per fornire messaggi localizzati per gli eventi di log. Il codice seguente imposta automaticamente il messaggio per la lingua per le impostazioni cultura correnti.  
  
```  
ResourceManager LocRM = new ResourceManager("ReplacementStrings.TestStrings",   
      typeof(Program).Assembly);  
EventLog e1 = new EventLog("LocTest", "MyMachine", "LocTest");  
// Get the string associated with the current culture.  
e1.WriteEntry(LocRM.GetString("strMessage"),  
   EventLogEntryType.Information);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.Message" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : string" Usage="System.Diagnostics.EventLogEntry.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The source application of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome dell’applicazione che ha generato questo evento.</summary>
        <value>Nome registrato nel log eventi come origine di questo evento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'origine evento indica che cosa ha registrato l'evento. È spesso il nome dell'applicazione o il nome del sottocomponente dell'applicazione se l'applicazione è di grandi dimensioni. Applicazioni e servizi in genere scrivere (e pertanto sono origini per) nel registro dell'applicazione o un log personalizzato. I driver di dispositivo è in genere scrivono nel Registro di sistema.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Diagnostics.EventLogEntry.Source%2A> proprietà. In questo esempio, un `switch` istruzione utilizza l'input della console per eseguire la ricerca di voci del registro eventi per l'oggetto specificato <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.  Se viene trovata una corrispondenza, il <xref:System.Diagnostics.EventLogEntry.Source%2A> informazioni di proprietà vengono visualizzate nella console.  
  
 [!code-cpp[EventLogEntry_Source#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Source/CPP/eventlogentry_source.cpp#1)]
 [!code-csharp[EventLogEntry_Source#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Source/CS/eventlogentry_source.cs#1)]
 [!code-vb[EventLogEntry_Source#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Source/VB/eventlogentry_source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Needs serialization support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da popolare con i dati.</param>
        <param name="context">Destinazione della serializzazione (vedere <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
        <summary>Popola un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati necessari per serializzare l'oggetto di destinazione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeGenerated">
      <MemberSignature Language="C#" Value="public DateTime TimeGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.TimeGenerated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeGenerated As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeGenerated { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeGenerated : DateTime" Usage="System.Diagnostics.EventLogEntry.TimeGenerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Generation time of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l’ora locale in cui è stato generato questo evento.</summary>
        <value>Ora locale in cui è stato generato l'evento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro contiene l'ora in cui è stato generato un evento. Ciò non sia lo stesso come il tempo quando le informazioni sull'evento è stato scritto nel registro eventi. Per informazioni, leggere la <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A> proprietà.  
  
 Si verifica generalmente un ritardo tra l'ora in cui viene generato un evento e l'ora che viene registrato. È più importante sapere quando è stato generato l'evento, a meno che non si desidera verificare se esiste un ritardo significativo nella registrazione. Ciò può verificarsi se i file di log si trovano in un server diverso e si verifica un collo di bottiglia.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.TimeWritten" />
      </Docs>
    </Member>
    <Member MemberName="TimeWritten">
      <MemberSignature Language="C#" Value="public DateTime TimeWritten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeWritten" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.TimeWritten" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeWritten As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeWritten { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeWritten : DateTime" Usage="System.Diagnostics.EventLogEntry.TimeWritten" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The time at which this event entry was written to the logfile.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l’ora locale in cui questo evento è stato scritto nel log.</summary>
        <value>Ora locale in cui l'evento è stato scritto nel log.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo membro contiene l'ora in cui le informazioni dell'evento viene scritto nel registro eventi. Ciò potrebbe non essere contemporaneamente a cui è stato generato l'evento. Per informazioni, leggere la <xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A> proprietà.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.TimeGenerated" />
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string" Usage="System.Diagnostics.EventLogEntry.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The name of a user associated with this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome dell'utente responsabile di questo evento.</summary>
        <value>SID (Security Identifier) che identifica in maniera univoca un utente o un gruppo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Spesso, questa proprietà è vuota per gli eventi nei registri diverso dal Registro di protezione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">Non è stato possibile ottenere informazioni relative all'account per il SID dell'utente.</exception>
        <altmember cref="P:System.Diagnostics.EventLogEntry.Source" />
      </Docs>
    </Member>
  </Members>
</Type>