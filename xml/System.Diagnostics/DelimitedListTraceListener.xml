<Type Name="DelimitedListTraceListener" FullName="System.Diagnostics.DelimitedListTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b8a11601bc494b88a1304528c02e2a4892015832" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37663943" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DelimitedListTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DelimitedListTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DelimitedListTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class DelimitedListTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class DelimitedListTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type DelimitedListTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Indirizza l'output di tracciatura o di debug a un writer di testo, quale un writer di flusso, oppure a un flusso, quale un flusso di file.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'output di traccia è in un formato testo delimitato che usa il delimitatore specificato dalla proprietà <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>. Il delimitatore viene usato per terminare ogni campo in una riga di output. Ad esempio, per visualizzare l'output di traccia in un foglio di calcolo di Microsoft Excel, è possibile specificare una virgola (",") come delimitatore e creare un file con valori delimitati da virgole (CSV).  
  
> [!IMPORTANT]
>  <xref:System.IDisposable> interfaccia. Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente. Per eliminare il tipo direttamente, chiamare relativi <xref:System.IDisposable.Dispose%2A> metodo in un`try` / `catch` blocco. Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio `using` in C# o `Using` in Visual Basic. Per altre informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <xref:System.IDisposable> argomento relativo all'interfaccia.  
  
 È possibile abilitare o disabilitare un <xref:System.Diagnostics.DelimitedListTraceListener> tramite il file di configurazione dell'applicazione e utilizzare quindi l'applicazione configurata <xref:System.Diagnostics.DelimitedListTraceListener> nell'applicazione. In alternativa, è possibile creare un <xref:System.Diagnostics.DelimitedListTraceListener> nel codice.  
  
> [!NOTE]
>  Il <xref:System.Diagnostics.DelimitedListTraceListener> delimita solo testo che viene generato utilizzando i metodi che hanno nomi che iniziano con la parola `Trace`, ad esempio <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=nameWithType> o <xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=nameWithType>. Tracciare i dati che viene generati usando il <xref:System.Diagnostics.Debug.Write%2A?displayProperty=nameWithType> e <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=nameWithType> metodi non sono delimitati.  
  
 Per configurare un <xref:System.Diagnostics.DelimitedListTraceListener>, modificare il file di configurazione che corrisponde al nome dell'applicazione. In questo file, è possibile aggiungere un listener, impostare le proprietà di un listener o rimuovere un listener. Il file di configurazione deve essere formattato come illustrato nell'esempio seguente:  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="delimitedListener"   
          type="System.Diagnostics.DelimitedListTraceListener"   
          delimiter=","   
          initializeData="delimitedOutput.csv"   
          traceOutputOptions="ProcessId, DateTime" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  Se si prova a scrivere in un file che è in uso o non disponibile, il nome del file viene automaticamente preceduto da un GUID.  
  
> [!NOTE]
>  I listener sono destinati a essere utilizzata dai metodi del <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> classi per scrivere le informazioni di traccia. I metodi di listener, ad eccezione di costruttori, non devono essere chiamati direttamente dal codice dell'applicazione.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DelimitedListTraceListener" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.Stream -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> destinatario dell'output.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> che scrive nel flusso di output specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza il <xref:System.Diagnostics.TraceListener.Name%2A> proprietà in una stringa vuota ("").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.TextWriter -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.IO.TextWriter" /> destinatario dell'output.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> che scrive nel writer di testo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza il <xref:System.Diagnostics.TraceListener.Name%2A> proprietà in una stringa vuota ("").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Nome del file destinatario dell'output.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> che scrive nel file specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza il <xref:System.Diagnostics.TraceListener.Name%2A> proprietà in una stringa vuota ("").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.Stream stream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.Stream * string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener (stream, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> destinatario dell'output.</param>
        <param name="name">Nome della nuova istanza del listener di traccia.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> che scrive nel flusso di output specificato e ha il nome specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza la <xref:System.Diagnostics.TraceListener.Name%2A> il valore della proprietà di `name` parametro, o su una stringa vuota ("") se il `name` parametro è `null`.  Il <xref:System.Diagnostics.TraceListener.Name%2A> proprietà può essere utilizzata come indice nella `Listeners` raccolta per modificare a livello di programmazione le proprietà per il listener. Ad esempio, il codice seguente imposta la <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> proprietà per l'istanza di <xref:System.Diagnostics.DelimitedListTraceListener> che ha il nome "delimListener":  
  
```csharp  
((DelimitedListTraceListener)Trace.Listeners["delimListener"]).Delimiter = ":"  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.TextWriter writer, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.TextWriter * string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener (writer, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.IO.TextWriter" /> destinatario dell'output.</param>
        <param name="name">Nome della nuova istanza del listener di traccia.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> che scrive nel writer di testo specificato e ha il nome specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza la <xref:System.Diagnostics.TraceListener.Name%2A> il valore della proprietà di `name` parametro, o su una stringa vuota ("") se il `name` parametro è `null`. Il <xref:System.Diagnostics.TraceListener.Name%2A> proprietà può essere utilizzata come indice nella `Listeners` raccolta per modificare a livello di programmazione le proprietà per il listener. Ad esempio il codice seguente imposta la <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> proprietà per l'istanza di <xref:System.Diagnostics.DelimitedListTraceListener> che ha il nome "delimListener":  
  
```csharp  
((DelimitedListTraceListener)Trace.Listeners["delimListener"]).Delimiter = ":"  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (string fileName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::String ^ fileName, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : string * string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener (fileName, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Nome del file destinatario dell'output.</param>
        <param name="name">Nome della nuova istanza del listener di traccia.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> che scrive nel file specificato e ha il nome specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo costruttore inizializza una nuova istanza di <xref:System.IO.StreamWriter> classe per il file specificato nel percorso specificato, usando <xref:System.Text.Encoding.UTF8%2A> codifica. Se il file esiste, questo viene aggiunto a. Se il file non esiste, viene creato un nuovo file.  
  
> [!NOTE]
>  Per ridurre le probabilità di un'eccezione, qualsiasi carattere che potrebbe invalidare l'output viene sostituito con un "?" caratteri.  
  
 Il <xref:System.Diagnostics.TraceListener.Name%2A> proprietà è impostata sul valore della `name` parametro, o su una stringa vuota ("") se il `name` parametro è `null`. Il <xref:System.Diagnostics.TraceListener.Name%2A> proprietà può essere utilizzata come indice nella `Listeners` raccolta per modificare a livello di programmazione le proprietà per il listener. Ad esempio, il codice seguente imposta la <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> proprietà per l'istanza di <xref:System.Diagnostics.DelimitedListTraceListener> che ha il nome "delimListener":  
  
```csharp  
((DelimitedListTraceListener)Trace.Listeners["delimListener"]).Delimiter = ":"  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> è <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="System.Diagnostics.DelimitedListTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il delimitatore per l'elenco delimitato.</summary>
        <value>Delimitatore per l'elenco delimitato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il delimitatore predefinito è ";" (punto e virgola). L'esempio di file di configurazione seguente viene illustrata l'impostazione delle <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> proprietà utilizzando il `delimiter` attributo in un file di configurazione:  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="delimitedListener"   
          type="System.Diagnostics.DelimitedListTraceListener"   
          delimiter=":"   
          initializeData="delimitedOutput.txt"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" /> è impostato su <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" /> è impostata su una stringa vuota("").</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="override this.GetSupportedAttributes : unit -&gt; string[]" Usage="delimitedListTraceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restituisce l'attributo del file di configurazione personalizzato supportato dal listener di traccia delimitato.</summary>
        <returns>Matrice di stringhe contenente il singolo valore "delimiter".</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un attributo personalizzato è un attributo che non viene ereditato dalla classe di base che può essere utilizzata per impostare una proprietà per la classe. L'attributo personalizzato per <xref:System.Diagnostics.DelimitedListTraceListener> viene usato per impostare il <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> proprietà. Esempio di file di configurazione seguente viene illustrato l'utilizzo dei `delimiter` attributo da impostare il <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> proprietà:  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="delimitedListener"   
          type="System.Diagnostics.DelimitedListTraceListener"   
          delimiter=":"   
          initializeData="delimitedOutput.txt"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scrive dati di traccia nel flusso o nel file di output.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="delimitedListTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</param>
        <param name="source">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</param>
        <param name="eventType">Uno dei valori di <see cref="T:System.Diagnostics.TraceEventType" /> che specifica il tipo di evento che ha causato la traccia.</param>
        <param name="id">Identificatore numerico per l'evento.</param>
        <param name="data">Oggetto dati da scrivere nel flusso o nel file di output.</param>
        <summary>Scrive informazioni di traccia, un oggetto dati e informazioni di evento nel file o nel flusso di output.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I valori del `source`, `eventType`, e `id` i parametri vengono scritti sotto forma di intestazione. L'oggetto dati viene convertito in una stringa usando il `ToString` metodo dell'oggetto. Il `eventCache` i dati vengono scritti come un piè di pagina il cui contenuto dipende dal valore della <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> proprietà.  
  
> [!IMPORTANT]
>  Il <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> metodo non è destinato a essere chiamato dal codice dell'applicazione. Viene chiamato dai metodi della <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> classi per scrivere i dati di traccia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="delimitedListTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</param>
        <param name="source">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</param>
        <param name="eventType">Uno dei valori di <see cref="T:System.Diagnostics.TraceEventType" /> che specifica il tipo di evento che ha causato la traccia.</param>
        <param name="id">Identificatore numerico per l'evento.</param>
        <param name="data">Matrice di oggetti dati da scrivere nel flusso o nel file di output.</param>
        <summary>Scrive informazioni di traccia, una matrice di oggetti dati e informazioni di evento nel flusso o nel file di output.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I valori del `source`, `eventType`, e `id` i parametri vengono scritti sotto forma di intestazione. Gli oggetti dati vengono convertiti in stringhe usando il `ToString` metodo per ogni oggetto. Il `eventCache` i dati vengono scritti come un piè di pagina il cui contenuto dipende dal valore della <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> proprietà.  
  
> [!IMPORTANT]
>  Il <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> metodo non è destinato a essere chiamato dal codice dell'applicazione. Viene chiamato dai metodi della <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> classi per scrivere i dati di traccia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scrive informazioni di traccia evento in un flusso o in un file di output.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="delimitedListTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</param>
        <param name="source">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</param>
        <param name="eventType">Uno dei valori di <see cref="T:System.Diagnostics.TraceEventType" /> che specifica il tipo di evento che ha causato la traccia.</param>
        <param name="id">Identificatore numerico per l'evento.</param>
        <param name="message">Messaggio di traccia da scrivere nel flusso o nel file di output.</param>
        <summary>Scrive informazioni di traccia, un messaggio e informazioni di evento nel flusso o nel file di output.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I valori del `source`, `eventType`, e `id` i parametri vengono scritti sotto forma di intestazione, seguito dal `message` dati. Il `eventCache` i dati vengono scritti come un piè di pagina il cui contenuto dipende dal valore della <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> proprietà.  
  
> [!IMPORTANT]
>  Il <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> metodo non è destinato a essere chiamato dal codice dell'applicazione. Viene chiamato dai metodi della <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> classi per scrivere i dati di traccia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="delimitedListTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</param>
        <param name="source">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</param>
        <param name="eventType">Uno dei valori di <see cref="T:System.Diagnostics.TraceEventType" /> che specifica il tipo di evento che ha causato la traccia.</param>
        <param name="id">Identificatore numerico per l'evento.</param>
        <param name="format">Stringa di formato che contiene zero o più elementi di formato, corrispondenti a oggetti nella matrice <c>args</c>.</param>
        <param name="args">Matrice che contiene zero o più oggetti da formattare.</param>
        <summary>Scrive informazioni di traccia, una matrice di oggetti formattata e informazioni di evento nel flusso o nel file di output.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I valori del `source`, `eventType`, e `id` i parametri vengono scritti sotto forma di intestazione. Il `args` matrice di oggetti viene convertita in una stringa usando il <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> , passando il `format` stringa e `args` array per formattare la stringa come la parte di messaggio di traccia. Il `eventCache` i dati vengono scritti come un piè di pagina il cui contenuto dipende dal valore della <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> proprietà.  
  
> [!IMPORTANT]
>  Il <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> metodo non è destinato a essere chiamato dal codice dell'applicazione. Viene chiamato dai metodi della <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> classi per scrivere i dati di traccia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>