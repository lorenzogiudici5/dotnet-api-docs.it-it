<Type Name="TraceSource" FullName="System.Diagnostics.TraceSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5d419a2319360270f7b350c1deb0a013ba37a66d" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52194154" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TraceSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceSource" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceSource" />
  <TypeSignature Language="F#" Value="type TraceSource = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornisce un insieme di metodi e proprietà che consentono alle applicazioni di tracciare l'esecuzione del codice e associare i messaggi di traccia alla relativa origine.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.Diagnostics.TraceSource> viene utilizzata dalle applicazioni per produrre tracce associabili all'applicazione. <xref:System.Diagnostics.TraceSource> fornisce metodi di traccia che consentono di tracciare con facilità eventi e dati e di generare tracce informative. Output di traccia da <xref:System.Diagnostics.TraceSource> possono essere controllate dalle impostazioni del file di configurazione. Il file di configurazione si trova nella cartella con l'eseguibile dell'applicazione e ha il nome dell'applicazione con l'estensione del nome file con estensione config aggiunto. Ad esempio, il nome del file di configurazione per TraceSourceSample.exe è TraceSourceSample.exe.config. Il file di configurazione è utilizzabile per determinare dove vengono inviato le informazioni di traccia e i livelli di attività da tracciare. Nell'esempio seguente viene illustrato il contenuto di un file di configurazione dell'applicazione di esempio.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest" switchName="SourceSwitch"   
        switchType="System.Diagnostics.SourceSwitch" >  
        <listeners>  
          <add name="console" />  
          <remove name ="Default" />  
        </listeners>  
      </source>  
    </sources>  
    <switches>  
      <!-- You can set the level at which tracing is to occur -->  
      <add name="SourceSwitch" value="Warning" />  
        <!-- You can turn tracing off -->  
        <!--add name="SourceSwitch" value="Off" -->  
    </switches>  
    <sharedListeners>  
      <add name="console"   
        type="System.Diagnostics.ConsoleTraceListener"   
        initializeData="false"/>  
    </sharedListeners>  
    <trace autoflush="true" indentsize="4">  
      <listeners>  
        <add name="console" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 Il <xref:System.Diagnostics.TraceSource> classe è identificata dal nome di un'origine, in genere il nome dell'applicazione.  I messaggi di traccia provenienti da un particolare componente possono essere avviati da un'origine di traccia specifico agevolare l'identificazione di tutti i messaggi provenienti da tale componente.  
  
 <xref:System.Diagnostics.TraceSource> Definisce i metodi di traccia, ma non fornisce alcun meccanismo specifico per la generazione e l'archiviazione dei dati di traccia. I dati di traccia viene generati dai listener di traccia, ovvero plug-in che possono essere caricati da origini di traccia.  
  
> [!NOTE]
>  È necessario chiamare i metodi di traccia non durante la finalizzazione. In questo modo può comportare un <xref:System.ObjectDisposedException> generata.  
  
 È possibile personalizzare la destinazione dell'output di traccia aggiungendo o rimuovendo <xref:System.Diagnostics.TraceListener> le istanze o dalla raccolta di cui è archiviato nel <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType> proprietà. Per impostazione predefinita, l'output di traccia viene generato utilizzando un'istanza del <xref:System.Diagnostics.DefaultTraceListener> classe. L'esempio di file di configurazione precedente illustra come rimuovere il <xref:System.Diagnostics.DefaultTraceListener> e l'aggiunta di un <xref:System.Diagnostics.ConsoleTraceListener> per produrre l'output di traccia per l'origine di traccia. Per altre informazioni, vedere [ &lt;listener&gt; ](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-source.md) e [ &lt;sharedListeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/sharedlisteners-element.md).  
  
> [!NOTE]
>  Aggiunta di un listener di traccia di <xref:System.Diagnostics.TraceSource.Listeners%2A> collection può provocare un'eccezione generata durante la traccia, se una risorsa utilizzata dal listener di traccia non è disponibile. Le condizioni e l'eccezione generata dipendono il listener di traccia e non possono essere enumerati in questo argomento. Può essere utile effettuare chiamate per il <xref:System.Diagnostics.TraceSource> metodi `try` / `catch` blocchi per rilevare e gestire le eccezioni dal listener di traccia.  
  
 Il <xref:System.Diagnostics.SourceSwitch> classe fornisce i mezzi per controllare in modo dinamico output di tracciatura. L'esempio di file di configurazione precedente viene illustrato come è possibile disattivare la traccia da un'origine di traccia e controllare il livello di traccia di quale si verifica.  È possibile modificare il valore dell'opzione di origine senza ricompilare l'applicazione. Per informazioni sull'utilizzo del file di configurazione per impostare un'opzione, vedere <xref:System.Diagnostics.Switch> e [procedura: creare, inizializzare e configurare opzioni di traccia](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md).  
  
> [!NOTE]
>  Se si modifica un file di configurazione durante l'esecuzione di un'applicazione, è necessario arrestare e riavviare l'applicazione o il <xref:System.Diagnostics.Trace.Refresh%2A> metodo deve essere chiamato prima che le nuove impostazioni diventano effettive.  
  
 Il <xref:System.Diagnostics.TraceEventType> enumerazione viene utilizzata per definire il tipo di evento del messaggio di traccia. Usare filtri di traccia di <xref:System.Diagnostics.TraceEventType> per determinare se un listener di traccia deve produrre il messaggio di traccia.  
  
 I listener di traccia possono avere facoltativamente un ulteriore livello di applicazione di filtri tramite un filtro di traccia.  Se un listener di traccia è associato un filtro, il listener chiama il <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> metodo su tale filtro per determinare se visualizzare o meno per produrre informazioni di traccia.  
  
 I listener di traccia utilizzano di valori del <xref:System.Diagnostics.Trace> proprietà della classe <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, e <xref:System.Diagnostics.Trace.AutoFlush%2A> per formattare l'output di traccia. È possibile usare gli attributi di file di configurazione per impostare il <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, e <xref:System.Diagnostics.Trace.AutoFlush%2A> proprietà. L'esempio seguente imposta la <xref:System.Diagnostics.Trace.AutoFlush%2A> proprietà `false` e il <xref:System.Diagnostics.Trace.IndentSize%2A> proprietà a 3.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Diagnostics.TraceSource> classe per inoltrare le tracce di listener di traccia.  Viene inoltre illustrato l'utilizzo di switch e filtro.  
  
 [!code-cpp[System.Diagnostics.TraceSource2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CPP/tracesource2.cpp#1)]
 [!code-csharp[System.Diagnostics.TraceSource2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.TraceSource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Questo tipo è thread-safe.</threadsafe>
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/trace-debug/index.md">Schema delle impostazioni di traccia e debug</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.TraceSource" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome dell'origine, che in genere corrisponde al nome dell'applicazione.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.TraceSource" /> usando il nome specificato per l'origine</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il nome dell'origine viene utilizzato per identificare le tracce. Viene usato da un <xref:System.Diagnostics.SourceFilter> per determinare se un listener di traccia deve produrre la traccia. La procedura consigliata consiste nell'usare il nome dell'applicazione per il nome dell'origine.  
  
> [!NOTE]
>  Non è necessario creare un nuovo <xref:System.Diagnostics.TraceSource> istanza per ogni richiesta di traccia. Creare uno <xref:System.Diagnostics.TraceSource> dell'istanza e usarlo per tutte le richieste di traccia per l'applicazione.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo dei <xref:System.Diagnostics.TraceSource.%23ctor%2A> costruttore per creare un nuovo <xref:System.Diagnostics.TraceSource> oggetto. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.TraceSource> classe.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> è una stringa vuota ("").</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name, System.Diagnostics.SourceLevels defaultLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Diagnostics.SourceLevels defaultLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, defaultLevel As SourceLevels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name, System::Diagnostics::SourceLevels defaultLevel);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string * System.Diagnostics.SourceLevels -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource (name, defaultLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultLevel" Type="System.Diagnostics.SourceLevels" />
      </Parameters>
      <Docs>
        <param name="name">Nome dell'origine, che in genere corrisponde al nome dell'applicazione.</param>
        <param name="defaultLevel">Combinazione bit per bit dei valori di enumerazione che specifica il livello di origine predefinito in corrispondenza del quale tracciare.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.TraceSource" />, usando il nome specificato per l'origine e il livello di origine predefinito in corrispondenza del quale deve essere eseguita la traccia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il nome dell'origine viene utilizzato per identificare le tracce. Può essere usato da un <xref:System.Diagnostics.SourceSwitch> per determinare se la traccia deve verificarsi e da un <xref:System.Diagnostics.SourceFilter> per determinare se per produrre la traccia. Il livello di origine predefinito viene usato da un <xref:System.Diagnostics.EventTypeFilter> per determinare se la traccia deve verificarsi base al livello di origine del messaggio da tracciare.  
  
> [!NOTE]
>  Non è necessario creare un nuovo <xref:System.Diagnostics.TraceSource> istanza per ogni richiesta di traccia. Creare uno <xref:System.Diagnostics.TraceSource> dell'istanza e usarlo per tutte le richieste di traccia per l'applicazione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> è una stringa vuota ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.TraceSource.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene gli attributi di opzione personalizzati definiti nel file di configurazione dell'applicazione.</summary>
        <value>Classe <see cref="T:System.Collections.Specialized.StringDictionary" /> contenente gli attributi personalizzati per l'opzione di traccia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.TraceSource.Attributes%2A> proprietà identifica gli attributi personalizzati di cui viene fatto riferimento nel file di configurazione dell'applicazione. Gli attributi personalizzati senza riferimenti non vengono enumerati. Le classi che ereditano dal <xref:System.Diagnostics.TraceSource> classe può aggiungere attributi personalizzati eseguendo l'override di <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=nameWithType> metodo e restituendo una matrice di stringhe di nomi di attributi personalizzati.  
  
 Di seguito è riportato un esempio di un elemento di origine di traccia che specifica l'attributo personalizzato `SecondTraceSourceAttribute`:  
  
```xml  
<sources>  
  <source name="TraceTest" switchName="TestSourceSwitch"   
    switchType="Testing.MySourceSwitch, TraceSample"   
    SecondTraceSourceAttribute="two">  
  </source>  
</sources>  
```  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come visualizzare gli attributi personalizzati per un <xref:System.Diagnostics.TraceSource>.  Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.TraceSource> classe.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#14)]
 [!code-vb[System.Diagnostics.TraceSource2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="traceSource.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chiude tutti i listener di traccia nella raccolta di listener di traccia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.TraceSource.Close%2A> chiamate al metodo il <xref:System.Diagnostics.TraceListener.Close%2A> metodo per ogni listener di traccia di <xref:System.Diagnostics.TraceSource.Listeners%2A> raccolta.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Diagnostics.TraceSource.Close%2A> metodo per chiudere tutti i listener nella raccolta. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.TraceSource> classe.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per operare con codice non gestito. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="traceSource.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Scarica tutti i listener di traccia nella raccolta di listener di traccia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.TraceSource.Flush%2A> chiamate al metodo il <xref:System.Diagnostics.TraceListener.Flush%2A> metodo per ogni listener di traccia di <xref:System.Diagnostics.TraceSource.Listeners%2A> raccolta.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Diagnostics.TraceSource.Flush%2A> metodo per scaricare tutti i listener nella raccolta. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.TraceSource> classe.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">È stato effettuato un tentativo di tracciare un evento durante la finalizzazione.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="traceSource.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ottiene gli attributi personalizzati supportati dall'origine di traccia.</summary>
        <returns>Matrice di stringhe che nomina gli attributi personalizzati supportati dall'origine di traccia oppure <see langword="null" /> in assenza di attributi personalizzati.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implementazione predefinita per <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> restituisce `null`.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato un override del <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> metodo per identificare gli attributi personalizzati per il `MyTraceSource` classe.  
  
 [!code-csharp[System.Diagnostics.TraceSource#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando si eredita dal <see cref="T:System.Diagnostics.TraceSource" /> classe o una classe derivata, è possibile eseguire l'override di <see cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" /> metodo per fornire gli attributi personalizzati per la classe.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.TraceSource.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la raccolta dei listener di traccia per l'origine di traccia.</summary>
        <value>Classe <see cref="T:System.Diagnostics.TraceListenerCollection" /> che contiene i listener di traccia attivi associati all'origine.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizzare questa proprietà per accedere ed eseguire operazioni sui listener di traccia.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per operare con codice non gestito. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Diagnostics.TraceSource.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il nome dell'origine di traccia.</summary>
        <value>Nome dell'origine di traccia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il nome viene impostato mediante il `name` parametro passato al costruttore. È possibile fare riferimento all'origine di traccia utilizzando la `name` attributo nel file di configurazione.  
  
 L'elemento XML seguente mostra che fa riferimento a un'origine di traccia nel file di configurazione.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest">  
      </source>  
    </sources>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come assegnare un nome di un'origine di traccia nella chiamata al costruttore.  Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.TraceSource> classe.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SourceSwitch Switch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SourceSwitch Switch" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Switch" />
      <MemberSignature Language="VB.NET" Value="Public Property Switch As SourceSwitch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SourceSwitch ^ Switch { System::Diagnostics::SourceSwitch ^ get(); void set(System::Diagnostics::SourceSwitch ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Switch : System.Diagnostics.SourceSwitch with get, set" Usage="System.Diagnostics.TraceSource.Switch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SourceSwitch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il valore dell'opzione relativa all'origine.</summary>
        <value>Oggetto <see cref="T:System.Diagnostics.SourceSwitch" /> che rappresenta il valore dell'opzione di origine.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.TraceSource.Switch%2A> proprietà consente di filtrare i messaggi prima che l'origine di traccia chiami il listener.  
  
 L'opzione viene utilizzata per verificare se le chiamate di traccia devono essere generate o ignorate. Chiama ogni metodo di analisi di <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metodo del <xref:System.Diagnostics.SourceSwitch> per determinare se si desidera procedere con la traccia. Se la chiamata restituisce `true`, vengono chiamati i listener.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Diagnostics.TraceSource.Switch" /> è impostato su <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per operare con codice non gestito. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Enumerazione associata: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scrive i dati di traccia nei listener di traccia della raccolta <see cref="P:System.Diagnostics.TraceSource.Listeners" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventType">Uno dei valori di enumerazione che specifica il tipo di evento dei dati di traccia.</param>
        <param name="id">Identificatore numerico per l'evento.</param>
        <param name="data">Dati di traccia.</param>
        <summary>Scrive i dati di traccia nei listener di traccia della raccolta <see cref="P:System.Diagnostics.TraceSource.Listeners" /> usando il tipo di evento, l'identificatore di evento e i dati di traccia specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.TraceSource.TraceData%2A> metodo, ad esempio il <xref:System.Diagnostics.TraceSource.TraceEvent%2A> metodo, è destinato agli strumenti automatizzati, ma consente anche di associare un oggetto aggiuntivo, ad esempio un'istanza di eccezione, alla traccia.  
  
 Il <xref:System.Diagnostics.TraceSource.TraceData%2A> chiamate al metodo il <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=nameWithType> metodo per il <xref:System.Diagnostics.SourceSwitch> oggetto restituito dal <xref:System.Diagnostics.TraceSource.Switch%2A> proprietà. Se <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> restituisce `true`, <xref:System.Diagnostics.TraceSource.TraceData%2A> chiama le corrispondenti <xref:System.Diagnostics.TraceListener.TraceData%2A> metodo su tutti i listener. In caso contrario, <xref:System.Diagnostics.TraceSource.TraceData%2A> restituisce senza chiamare i metodi dei listener.  
  
> [!NOTE]
>  Il <xref:System.Diagnostics.EventLogTraceListener> l'oggetto è limitato a un massimo `id` pari a 65.535. Se il `id` valore specificato è maggiore di 65.535, il <xref:System.Diagnostics.EventLogTraceListener> Usa 65.535 dell'oggetto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Diagnostics.TraceSource.TraceData%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.Object%29> metodo per filtrare e inoltrare un messaggio di traccia ai listener. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.TraceSource> classe.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#28)]
 [!code-vb[System.Diagnostics.TraceSource2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">È stato effettuato un tentativo di tracciare un evento durante la finalizzazione.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">Uno dei valori di enumerazione che specifica il tipo di evento dei dati di traccia.</param>
        <param name="id">Identificatore numerico per l'evento.</param>
        <param name="data">Matrice di oggetti contenente i dati di traccia.</param>
        <summary>Scrive i dati di traccia nei listener di traccia della raccolta <see cref="P:System.Diagnostics.TraceSource.Listeners" /> usando il tipo di evento, l'identificatore di evento e la matrice di dati di traccia specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.TraceSource.TraceData%2A> metodo, ad esempio il <xref:System.Diagnostics.TraceSource.TraceEvent%2A> metodo, è destinato agli strumenti automatizzati, ma consente anche di associare oggetti aggiuntivi, ad esempio un'istanza di eccezione e un'analisi dello stack, nella traccia.  
  
 Il <xref:System.Diagnostics.TraceSource.TraceData%2A> chiamate al metodo il <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metodo per il <xref:System.Diagnostics.SourceSwitch> oggetto restituito dal <xref:System.Diagnostics.TraceSource.Switch%2A> proprietà. Se <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> restituisce `true`, <xref:System.Diagnostics.TraceSource.TraceData%2A> chiama le corrispondenti <xref:System.Diagnostics.TraceListener.TraceData%2A> metodo su tutti i listener. In caso contrario, <xref:System.Diagnostics.TraceSource.TraceData%2A> restituisce senza chiamare i metodi dei listener.  
  
> [!NOTE]
>  Il <xref:System.Diagnostics.EventLogTraceListener> l'oggetto è limitato a un massimo `id` pari a 65.535. Se il `id` valore specificato è maggiore di 65.535, il <xref:System.Diagnostics.EventLogTraceListener> Usa 65.535 dell'oggetto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">È stato effettuato un tentativo di tracciare un evento durante la finalizzazione.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scrive un messaggio di evento di traccia nei listener di traccia della raccolta <see cref="P:System.Diagnostics.TraceSource.Listeners" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int -&gt; unit" Usage="traceSource.TraceEvent (eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventType">Uno dei valori di enumerazione che specifica il tipo di evento dei dati di traccia.</param>
        <param name="id">Identificatore numerico per l'evento.</param>
        <summary>Scrive un messaggio di evento di traccia nei listener di traccia della raccolta <see cref="P:System.Diagnostics.TraceSource.Listeners" /> usando il tipo di evento e l'identificatore di evento specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.TraceSource.TraceEvent%2A> metodo è destinato a eventi di traccia che possono essere elaborati automaticamente dagli strumenti. Ad esempio, uno strumento di monitoraggio può avvisare un amministratore se viene analizzato un evento specifico da un'origine specifica.  
  
 Il <xref:System.Diagnostics.TraceSource.TraceEvent%2A> chiamate al metodo il <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metodo per il <xref:System.Diagnostics.SourceSwitch> oggetto restituito dal <xref:System.Diagnostics.TraceSource.Switch%2A> proprietà. Se <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> restituisce `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> chiama le corrispondenti <xref:System.Diagnostics.TraceListener.TraceEvent%2A> metodo per ogni listener. In caso contrario, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> restituisce senza chiamare i metodi dei listener.  
  
 Il contenuto della traccia è listener specifico. Se il metodo non viene sottoposto a override dall'implementazione del listener, l'output predefinito è il nome di origine di traccia, la relativa identità numerica e il tipo di evento.  Il contenuto dell'analisi aggiuntivi dipende il listener <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> valore della proprietà.  
  
> [!NOTE]
>  Il <xref:System.Diagnostics.EventLogTraceListener> l'oggetto è limitato a un massimo `id` pari a 65.535. Se il `id` valore specificato è maggiore di 65.535, il <xref:System.Diagnostics.EventLogTraceListener> Usa 65.535.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> metodo per passare un evento di traccia ai listener. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.TraceSource> classe.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#17)]
 [!code-vb[System.Diagnostics.TraceSource2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">È stato effettuato un tentativo di tracciare un evento durante la finalizzazione.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventType">Uno dei valori di enumerazione che specifica il tipo di evento dei dati di traccia.</param>
        <param name="id">Identificatore numerico per l'evento.</param>
        <param name="message">Messaggio di traccia da scrivere.</param>
        <summary>Scrive un messaggio di evento di traccia nei listener di traccia della raccolta <see cref="P:System.Diagnostics.TraceSource.Listeners" /> usando il tipo di evento, l'identificatore di evento e il messaggio specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.TraceSource.TraceEvent%2A> metodo è destinato a eventi di traccia che possono essere elaborati automaticamente dagli strumenti. Ad esempio, uno strumento di monitoraggio può avvisare un amministratore se viene analizzato un evento specifico da un'origine specifica.  
  
 Il <xref:System.Diagnostics.TraceSource.TraceEvent%2A> chiamate al metodo il <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metodo per il <xref:System.Diagnostics.SourceSwitch> oggetto restituito dal <xref:System.Diagnostics.TraceSource.Switch%2A> proprietà. Se <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> restituisce `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> chiama le corrispondenti <xref:System.Diagnostics.TraceListener.TraceEvent%2A> metodo per ogni listener. In caso contrario, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> restituisce senza chiamare i metodi dei listener.  
  
 Il contenuto della traccia è listener specifico. Se il metodo non viene sottoposto a override dall'implementazione del listener, l'output predefinito è il nome di origine di traccia, la relativa identità numerica, il tipo di evento e il messaggio.  Il contenuto dell'analisi aggiuntivi dipende il listener <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> valore della proprietà.  
  
> [!NOTE]
>  Il <xref:System.Diagnostics.EventLogTraceListener> l'oggetto è limitato a un massimo `id` pari a 65.535. Se il `id` valore specificato è maggiore di 65.535, il <xref:System.Diagnostics.EventLogTraceListener> Usa 65.535 dell'oggetto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> metodo per passare un evento di traccia ai listener. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.TraceSource> classe.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#18)]
 [!code-vb[System.Diagnostics.TraceSource2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">È stato effettuato un tentativo di tracciare un evento durante la finalizzazione.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">Uno dei valori di enumerazione che specifica il tipo di evento dei dati di traccia.</param>
        <param name="id">Identificatore numerico per l'evento.</param>
        <param name="format">Stringa di formato composta che contiene testo combinato con zero o più elementi di formato, che corrispondono agli oggetti nella matrice <paramref name="args" />.</param>
        <param name="args">Matrice <see langword="object" /> che contiene zero o più oggetti da formattare.</param>
        <summary>Scrive un evento di traccia nei listener di traccia della raccolta <see cref="P:System.Diagnostics.TraceSource.Listeners" /> usando il tipo di evento, l'identificatore di evento, la matrice di argomenti e il formato specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sul `format` parametro, vedere [formattazione composita](~/docs/standard/base-types/composite-formatting.md).  
  
 Il <xref:System.Diagnostics.TraceSource.TraceEvent%2A> metodo è destinato a eventi di traccia che possono essere elaborati automaticamente dagli strumenti. Ad esempio, uno strumento di monitoraggio può avvisare un amministratore se viene analizzato un evento specifico da un'origine specifica.  
  
 Il <xref:System.Diagnostics.TraceSource.TraceEvent%2A> chiamate al metodo il <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metodo per il <xref:System.Diagnostics.SourceSwitch> oggetto restituito dal <xref:System.Diagnostics.TraceSource.Switch%2A> proprietà. Se <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> restituisce `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> chiama le corrispondenti <xref:System.Diagnostics.TraceListener.TraceEvent%2A> metodo per ogni listener. In caso contrario, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> restituisce senza chiamare i metodi dei listener.  
  
 Il contenuto della traccia è listener specifico. Il valore predefinito <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> metodo scrive il nome dell'origine, tipo di evento e identità numerico nell'intestazione della traccia, quindi chiama il <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> , passando il `format` stringa e `args` matrice e l'utilizzo di <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> proprietà per formattare il stringa come l'output del messaggio.  
  
> [!NOTE]
>  Il <xref:System.Diagnostics.EventLogTraceListener> l'oggetto è limitato a un massimo `id` pari a 65.535. Se il `id` valore specificato è maggiore di 65.535, il <xref:System.Diagnostics.EventLogTraceListener> Usa 65.535 dell'oggetto.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> metodo per passare un evento di traccia ai listener. Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.TraceSource> classe.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#24)]
 [!code-vb[System.Diagnostics.TraceSource2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> è <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="format" /> non è valido.  
  
oppure 
Il numero che indica un argomento da formattare è minore di zero oppure maggiore o uguale al numero di oggetti specificati da formattare.</exception>
        <exception cref="T:System.ObjectDisposedException">È stato effettuato un tentativo di tracciare un evento durante la finalizzazione.</exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Formattazione composita</related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">Stringhe di formato numerico standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">Stringhe di formato numerico personalizzato</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Stringhe di formato data/ora standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Stringhe di formato data e ora personalizzato</related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md">Stringhe di formato di enumerazione</related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formattazione di tipi in .NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Scrive un messaggio informativo nei listener di traccia della raccolta <see cref="P:System.Diagnostics.TraceSource.Listeners" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string -&gt; unit" Usage="traceSource.TraceInformation message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Messaggio informativo da inserire.</param>
        <summary>Scrive un messaggio informativo nei listener di traccia della raccolta <see cref="P:System.Diagnostics.TraceSource.Listeners" /> usando il messaggio specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.TraceSource.TraceInformation%2A> metodo fornisce un messaggio informativo progettato per essere lette da utenti e non da strumenti.  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%29> chiama il <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> metodo, l'impostazione `eventType` a <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> e passando il messaggio informativo come la stringa di messaggio. Il <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> metodo chiama a sua volta la <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> metodo per ogni listener di traccia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">È stato effettuato un tentativo di tracciare un evento durante la finalizzazione.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string * obj[] -&gt; unit" Usage="traceSource.TraceInformation (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">Stringa di formato composta che contiene testo combinato con zero o più elementi di formato, che corrispondono agli oggetti nella matrice <paramref name="args" />.</param>
        <param name="args">Matrice che contiene zero o più oggetti da formattare.</param>
        <summary>Scrive un messaggio informativo nei listener di traccia della raccolta <see cref="P:System.Diagnostics.TraceSource.Listeners" /> usando la matrice di oggetti e le informazioni di formattazione specificate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sul `format` parametro, vedere [formattazione composita](~/docs/standard/base-types/composite-formatting.md).  
  
 Il <xref:System.Diagnostics.TraceSource.TraceInformation%2A> metodo fornisce un messaggio informativo progettato per essere lette da utenti e non da strumenti.  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%2CSystem.Object%5B%5D%29> chiama il <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> metodo, l'impostazione `eventType` a <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> e passando il contenuto del messaggio come matrice di oggetti con le informazioni di formattazione. Il <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> metodo chiama a sua volta la <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> metodo per ogni listener di traccia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> è <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="format" /> non è valido.  
  
oppure 
Il numero che indica un argomento da formattare è minore di zero oppure maggiore o uguale al numero di oggetti specificati da formattare.</exception>
        <exception cref="T:System.ObjectDisposedException">È stato effettuato un tentativo di tracciare un evento durante la finalizzazione.</exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Formattazione composita</related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">Stringhe di formato numerico standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">Stringhe di formato numerico personalizzato</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Stringhe di formato data/ora standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Stringhe di formato data e ora personalizzato</related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md">Stringhe di formato di enumerazione</related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formattazione di tipi in .NET</related>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public void TraceTransfer (int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceTransfer(int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceTransfer (id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceTransfer(int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="member this.TraceTransfer : int * string * Guid -&gt; unit" Usage="traceSource.TraceTransfer (id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">Identificatore numerico per l'evento.</param>
        <param name="message">Messaggio di traccia da scrivere.</param>
        <param name="relatedActivityId">Struttura che identifica l'attività correlata.</param>
        <summary>Scrive un messaggio di traccia di trasferimento nei listener di traccia della raccolta <see cref="P:System.Diagnostics.TraceSource.Listeners" /> usando l'identificatore numerico, il messaggio e l'identificatore di attività correlata specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> chiamate al metodo il <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> metodo per ogni listener di traccia di <xref:System.Diagnostics.TraceSource.Listeners%2A> proprietà da scrivere le informazioni di traccia. Il valore predefinito <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> metodo nella base <xref:System.Diagnostics.TraceListener> classe chiama il <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> metodo per l'elaborazione della chiamata, l'impostazione `eventType` a <xref:System.Diagnostics.TraceEventType.Transfer?displayProperty=nameWithType> e l'aggiunta di una rappresentazione di stringa del `relatedActivityId` GUID da `message`.  
  
 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> dovrà essere utilizzato con le operazioni logiche di una <xref:System.Diagnostics.CorrelationManager>. Il `relatedActivityId` parametro è correlato al <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> proprietà di un <xref:System.Diagnostics.CorrelationManager> oggetto. Se un'operazione logica viene avviata in un'attività e trasferisce a un'altra, la seconda attività registra il trasferimento tramite la chiamata di <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> (metodo). Il <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> chiamata è correlato l'identità dell'attività di nuovo l'identità precedente. Il consumer più probabile di questa funzionalità è un visualizzatore di tracce che possa riportano operazioni logiche che si estendono su più attività.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.XmlWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventSchemaTraceListener" />
        <altmember cref="T:System.Diagnostics.DelimitedListTraceListener" />
      </Docs>
    </Member>
  </Members>
</Type>