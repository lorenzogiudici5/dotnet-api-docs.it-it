<Type Name="TraceListener" FullName="System.Diagnostics.TraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61f1f9b7e5952451a1dc31dce5312e93e222a3ef" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52211557" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TraceListener : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TraceListener extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceListener" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TraceListener&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceListener abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type TraceListener = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e7ac9-101">Fornisce la classe base <see langword="abstract" /> per i listener che eseguono il monitoraggio dell'output di traccia e di debug.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7ac9-101">Provides the <see langword="abstract" /> base class for the listeners who monitor trace and debug output.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-102">Per esempi di come implementare un <xref:System.Diagnostics.TraceListener>, vedere la <xref:System.Diagnostics.DefaultTraceListener>, <xref:System.Diagnostics.TextWriterTraceListener> e il <xref:System.Diagnostics.EventLogTraceListener> classi.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-102">For examples of how to implement a <xref:System.Diagnostics.TraceListener>, see the <xref:System.Diagnostics.DefaultTraceListener>, <xref:System.Diagnostics.TextWriterTraceListener> and the <xref:System.Diagnostics.EventLogTraceListener> classes.</span></span>  
  
 <span data-ttu-id="e7ac9-103">È necessario abilitare la tracciatura o di debug per usare un listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-103">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="e7ac9-104">La sintassi seguente è specifica del compilatore.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-104">The following syntax is compiler specific.</span></span> <span data-ttu-id="e7ac9-105">Se si utilizzano i compilatori diversi da c# o Visual Basic, vedere la documentazione per il compilatore.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-105">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="e7ac9-106">Per abilitare il debug in c#, aggiungere il `/d:DEBUG` flag per la riga di comando del compilatore quando si compila il codice oppure è possibile aggiungere `#define DEBUG` nella parte superiore del file app.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-106">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="e7ac9-107">In Visual Basic, aggiungere il `/d:DEBUG=True` flag per la riga di comando del compilatore.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-107">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="e7ac9-108">Per abilitare la traccia in c#, aggiungere il `/d:TRACE` flag per la riga di comando del compilatore quando si compila il codice, o aggiungere `#define TRACE` nella parte superiore del file app.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-108">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="e7ac9-109">In Visual Basic, aggiungere il `/d:TRACE=True` flag per la riga di comando del compilatore.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-109">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="e7ac9-110">Per aggiungere un listener di traccia, modificare il file di configurazione che corrisponde al nome dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-110">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="e7ac9-111">All'interno di questo file, è possibile aggiungere un listener, impostarne il tipo e impostare il parametro, rimuovere un listener o cancellare tutti i listener precedentemente impostati dall'applicazione.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-111">Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="e7ac9-112">Il file di configurazione deve essere formattato simile all'esempio seguente.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-112">The configuration file should be formatted similar to the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="myListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="TextWriterOutput.log" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="e7ac9-113">Per altre informazioni sull'utilizzo dei file di configurazione per la traccia, vedere [ &lt;System. Diagnostics&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/system-diagnostics-element.md).</span><span class="sxs-lookup"><span data-stu-id="e7ac9-113">For more information on using configuration files for tracing, see [&lt;system.diagnostics&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/system-diagnostics-element.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="e7ac9-114">Questo tipo è thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7ac9-114">This type is thread safe.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="e7ac9-115">Ereditare da questa classe per implementare un listener personalizzato per il <see cref="T:System.Diagnostics.Debug" /> e <see cref="T:System.Diagnostics.Trace" /> classi.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e7ac9-115">Inherit from this class to implement a custom listener for the <see cref="T:System.Diagnostics.Debug" /> and <see cref="T:System.Diagnostics.Trace" /> classes.</span>
        </span>
        <span data-ttu-id="e7ac9-116">Come minimo, è necessario implementare il <see cref="M:System.Diagnostics.TraceListener.Write(System.String)" /> e <see cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" /> metodi.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e7ac9-116">At a minimum, you must implement the <see cref="M:System.Diagnostics.TraceListener.Write(System.String)" /> and <see cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" /> methods.</span>
        </span>
        <span data-ttu-id="e7ac9-117">Inoltre, è possibile implementare il <see cref="M:System.Diagnostics.TraceListener.Fail(System.String)" />, <see cref="M:System.Diagnostics.TraceListener.Close" /> e <see cref="M:System.Diagnostics.TraceListener.Flush" /> metodi.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e7ac9-117">Additionally, you can implement the <see cref="M:System.Diagnostics.TraceListener.Fail(System.String)" />, <see cref="M:System.Diagnostics.TraceListener.Close" /> and <see cref="M:System.Diagnostics.TraceListener.Flush" /> methods.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
    <related type="Article" href="https://msdn.microsoft.com/library/3f348f42-fa72-4ff2-aa1c-bb9eecad4bb2">
      <span data-ttu-id="e7ac9-118">&lt;System. Diagnostics&gt; elemento</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7ac9-118">&lt;system.diagnostics&gt; Element</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-119">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-119">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-120">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-120">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-121">La tabella seguente illustra i valori iniziali delle proprietà per un'istanza di <xref:System.Diagnostics.TraceListener>.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-121">The following table shows initial property values for an instance of <xref:System.Diagnostics.TraceListener>.</span></span>  
  
|<span data-ttu-id="e7ac9-122">Proprietà</span><span class="sxs-lookup"><span data-stu-id="e7ac9-122">Property</span></span>|<span data-ttu-id="e7ac9-123">Valore predefinito</span><span class="sxs-lookup"><span data-stu-id="e7ac9-123">Default Value</span></span>|  
|--------------|-------------------|  
|<span data-ttu-id="e7ac9-124">nome</span><span class="sxs-lookup"><span data-stu-id="e7ac9-124">Name</span></span>|<span data-ttu-id="e7ac9-125">Una stringa vuota ("").</span><span class="sxs-lookup"><span data-stu-id="e7ac9-125">The empty string ("").</span></span>|  
|<span data-ttu-id="e7ac9-126">Indent</span><span class="sxs-lookup"><span data-stu-id="e7ac9-126">Indent</span></span>|<span data-ttu-id="e7ac9-127">Zero.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-127">Zero.</span></span>|  
|<span data-ttu-id="e7ac9-128">IndentSize</span><span class="sxs-lookup"><span data-stu-id="e7ac9-128">IndentSize</span></span>|<span data-ttu-id="e7ac9-129">Quattro spazi.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-129">Four spaces.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TraceListener(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceListener : string -&gt; System.Diagnostics.TraceListener" Usage="new System.Diagnostics.TraceListener name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e7ac9-130">Nome di <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-130">The name of the <see cref="T:System.Diagnostics.TraceListener" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-131">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.TraceListener" /> usando il nome specificato come listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-131">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceListener" /> class using the specified name as the listener.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.TraceListener.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-132">Ottiene gli attributi personalizzati del listener di traccia definiti nel file di configurazione dell'applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-132">Gets the custom trace listener attributes defined in the application configuration file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7ac9-133">Oggetto <see cref="T:System.Collections.Specialized.StringDictionary" /> contenente gli attributi personalizzati per il listener di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-133">A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the custom attributes for the trace listener.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-134">Le classi che ereditano dal <xref:System.Diagnostics.TraceListener> classe può aggiungere attributi personalizzati eseguendo l'override di <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> metodo e restituendo una matrice di stringhe di nomi di attributi personalizzati.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-134">Classes that inherit from the <xref:System.Diagnostics.TraceListener> class can add custom attributes by overriding the <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> method and returning a string array of custom attribute names.</span></span> <span data-ttu-id="e7ac9-135">Il <xref:System.Diagnostics.TraceListener.Attributes%2A> proprietà identifica gli attributi personalizzati a cui vengono fatto riferimento nel file di configurazione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-135">The <xref:System.Diagnostics.TraceListener.Attributes%2A> property identifies the custom attributes that are referenced in the application's configuration file.</span></span> <span data-ttu-id="e7ac9-136">Ad esempio, nell'estratto di file di configurazione seguente il <xref:System.Diagnostics.DelimitedListTraceListener> "delimiter" dell'attributo personalizzato viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-136">For example, in the following configuration file excerpt the <xref:System.Diagnostics.DelimitedListTraceListener> custom attribute "delimiter" is referenced.</span></span> <span data-ttu-id="e7ac9-137">In questo caso, il <xref:System.Diagnostics.TraceListener.Attributes%2A> proprietà restituisce un <xref:System.Collections.Specialized.StringDictionary> contenente la stringa "delimiter".</span><span class="sxs-lookup"><span data-stu-id="e7ac9-137">In this case, the <xref:System.Diagnostics.TraceListener.Attributes%2A> property returns a <xref:System.Collections.Specialized.StringDictionary> containing the string "delimiter".</span></span>  
  
```xml  
<listeners>  
  <add name="delimitedListener"   
    type="System.Diagnostics.DelimitedListTraceListener"   
    delimiter=":"   
    initializeData="delimitedOutput.txt"   
    traceOutputOptions="ProcessId, DateTime" />  
  <remove name="Default" />  
</listeners>  
```  
  
 <span data-ttu-id="e7ac9-138">Gli attributi personalizzati senza riferimenti non vengono enumerati.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-138">Unreferenced custom attributes are not enumerated.</span></span>  <span data-ttu-id="e7ac9-139">Per altre informazioni, vedere il metodo <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-139">For more information, see the <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="traceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-140">Quando se ne esegue l'override in una classe derivata, chiude il flusso di output in modo da bloccare la ricezione di output di tracciatura o di debug.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-140">When overridden in a derived class, closes the output stream so it no longer receives tracing or debugging output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-141">Usare questo metodo quando l'output in un file, ad esempio il <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-141">Use this method when the output is going to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span> <span data-ttu-id="e7ac9-142">Dopo una chiamata a questo metodo, è necessario reinizializzare l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-142">After a call to this method, you must reinitialize the object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-143">Rilascia le risorse usate da <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-143">Releases the resources used by the <see cref="T:System.Diagnostics.TraceListener" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="traceListener.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-144">Rilascia tutte le risorse usate da <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-144">Releases all resources used by the <see cref="T:System.Diagnostics.TraceListener" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-145">La chiamata <xref:System.Diagnostics.TraceListener.Dispose%2A> consente le risorse usate dal <xref:System.Diagnostics.TraceListener> riallocazione per altri scopi.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-145">Calling <xref:System.Diagnostics.TraceListener.Dispose%2A> allows the resources used by the <xref:System.Diagnostics.TraceListener> to be reallocated for other purposes.</span></span> <span data-ttu-id="e7ac9-146">Per altre informazioni sulle <xref:System.Diagnostics.TraceListener.Dispose%2A>, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="e7ac9-146">For more information about <xref:System.Diagnostics.TraceListener.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md">
          <span data-ttu-id="e7ac9-147">Pulizia delle risorse non gestite</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-147">Cleaning Up Unmanaged Resources</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="traceListener.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="e7ac9-148">
            <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-148">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-149">Rilascia le risorse non gestite usate da <see cref="T:System.Diagnostics.TraceListener" /> e, facoltativamente, le risorse gestite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-149">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.TraceListener" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-150">Questo metodo viene chiamato da parte del pubblico <xref:System.Diagnostics.TraceListener.Dispose%2A> metodo e <xref:System.Object.Finalize%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="e7ac9-150">This method is called by the public <xref:System.Diagnostics.TraceListener.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="e7ac9-151">`Dispose` richiama il metodo protetto <xref:System.Diagnostics.TraceListener.Dispose%2A> metodo con il `disposing` parametro impostato su `true`.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-151">`Dispose` invokes the protected <xref:System.Diagnostics.TraceListener.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="e7ac9-152"><xref:System.Object.Finalize%2A> richiama `Dispose` con `disposing` impostato su `false`.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-152"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="e7ac9-153">Se il parametro `disposing` è `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti a cui la classe <xref:System.Diagnostics.TraceListener> fa riferimento.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-153">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Diagnostics.TraceListener> references.</span></span> <span data-ttu-id="e7ac9-154">Il metodo richiama il metodo `Dispose` di ciascun oggetto cui viene fatto riferimento.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-154">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e7ac9-155">Il metodo 
            <see langword="Dispose" /> può essere chiamato più volte da altri oggetti.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e7ac9-155">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="e7ac9-156">Quando si esegue l'override di questo metodo, prestare attenzione a non fare riferimento agli oggetti che sono stati eliminati in una precedente chiamata a <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e7ac9-156">When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="e7ac9-157">Per altre informazioni su come implementare <see langword="Dispose" />, vedere [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e7ac9-157">For more information about how to implement <see langword="Dispose" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="e7ac9-158">Per altre informazioni sulle <see langword="Dispose" /> e <see langword="Finalize" />, vedere [pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e7ac9-158">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md">
          <span data-ttu-id="e7ac9-159">Implementazione di un metodo Dispose</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-159">Implementing a Dispose method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md">
          <span data-ttu-id="e7ac9-160">Pulizia delle risorse non gestite</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-160">Cleaning Up Unmanaged Resources</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-161">Genera messaggi di errore nel listener creato durante l'implementazione della classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-161">Emits error messages to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public virtual void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Fail : string -&gt; unit&#xA;override this.Fail : string -&gt; unit" Usage="traceListener.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="e7ac9-162">Messaggio da generare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-162">A message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-163">Genera un messaggio di errore nel listener creato durante l'implementazione della classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-163">Emits an error message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-164">Il comportamento predefinito consiste nel visualizzare il messaggio specificato in una finestra di messaggio quando l'applicazione è in esecuzione in modalità interfaccia utente e la <xref:System.Diagnostics.TraceListener> di istanze in un <xref:System.Diagnostics.TraceListenerCollection> raccolta.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-164">The default behavior is to display the specified message in a message box when the application is running in a user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in a <xref:System.Diagnostics.TraceListenerCollection> collection.</span></span> <span data-ttu-id="e7ac9-165">Per impostazione predefinita, il <xref:System.Diagnostics.TraceListenerCollection> raccolta dispone di un'istanza di un <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-165">By default, the <xref:System.Diagnostics.TraceListenerCollection> collection has an instance of a <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="e7ac9-166">È possibile personalizzare questo comportamento aggiungendo un <xref:System.Diagnostics.TraceListener> a o rimuovere uno dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-166">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to or removing one from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public virtual void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="abstract member Fail : string * string -&gt; unit&#xA;override this.Fail : string * string -&gt; unit" Usage="traceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="e7ac9-167">Messaggio da generare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-167">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="e7ac9-168">Messaggio dettagliato da generare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-168">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-169">Genera un messaggio di errore e un messaggio di errore dettagliato nel listener creato durante l'implementazione della classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-169">Emits an error message and a detailed error message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-170">Il comportamento predefinito consiste nel visualizzare il messaggio e i messaggi dettagliati in una finestra di messaggio quando l'applicazione è in esecuzione in modalità interfaccia utente e la <xref:System.Diagnostics.TraceListener> di istanze in un <xref:System.Diagnostics.TraceListenerCollection> raccolta.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-170">The default behavior is to display the message and detailed message in a message box when the application is running in a user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in a <xref:System.Diagnostics.TraceListenerCollection> collection.</span></span> <span data-ttu-id="e7ac9-171">Per impostazione predefinita, il <xref:System.Diagnostics.TraceListenerCollection> raccolta dispone di un'istanza di un <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-171">By default, the <xref:System.Diagnostics.TraceListenerCollection> collection has an instance of a <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="e7ac9-172">È possibile personalizzare questo comportamento aggiungendo un <xref:System.Diagnostics.TraceListener> a o rimuovere uno dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-172">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to or removing one from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceFilter Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceFilter Filter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As TraceFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceFilter ^ Filter { System::Diagnostics::TraceFilter ^ get(); void set(System::Diagnostics::TraceFilter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Diagnostics.TraceFilter with get, set" Usage="System.Diagnostics.TraceListener.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-173">Ottiene e imposta il filtro di traccia per il listener di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-173">Gets and sets the trace filter for the trace listener.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7ac9-174">Oggetto derivato dalla classe base <see cref="T:System.Diagnostics.TraceFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-174">An object derived from the <see cref="T:System.Diagnostics.TraceFilter" /> base class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-175">Un filtro di traccia può essere aggiunti a un listener di traccia per fornire un livello di controllo rispetto a quello fornito per l'origine di traccia dalle opzioni.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-175">A trace filter can be added to a trace listener to provide a layer of screening beyond that provided to the trace source by switches.</span></span> <span data-ttu-id="e7ac9-176">Ad esempio, il <xref:System.Diagnostics.EventTypeFilter> possono essere aggiunti a un listener di traccia per controllare i tipi di eventi che vengono restituiti come output dal listener.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-176">For example, the <xref:System.Diagnostics.EventTypeFilter> can be added to a trace listener to control the event types that are output by the listener.</span></span>  <span data-ttu-id="e7ac9-177">I listener che vengono chiamati in quanto vengono soddisfatti i criteri del commutatore possono eseguire una query del filtro, se presente, per determinare se un oggetto trace è deve essere inviata all'output.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-177">Listeners that are called because the switch criteria are met can query their filter, if present, to determine if a trace is to be sent to output.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7ac9-178">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Diagnostics.TraceListener.Filter%2A> proprietà per aggiungere un filtro di origine a un listener di traccia della console.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-178">The following code example shows how to use the <xref:System.Diagnostics.TraceListener.Filter%2A> property to add a source filter to a console trace listener.</span></span> <span data-ttu-id="e7ac9-179">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.TraceSource> classe.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-179">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#28)]
 [!code-vb[System.Diagnostics.TraceSource2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="traceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-180">Quando se ne esegue l'override in una classe derivata, scarica il buffer di output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-180">When overridden in a derived class, flushes the output buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="traceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-181">Ottiene gli attributi personalizzati supportati dal listener di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-181">Gets the custom attributes supported by the trace listener.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7ac9-182">Matrice di stringhe che nomina gli attributi personalizzati supportati dal listener di traccia oppure <see langword="null" /> in assenza di attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-182">A string array naming the custom attributes supported by the trace listener, or <see langword="null" /> if there are no custom attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-183">L'implementazione predefinita per <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-183">The default implementation for <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7ac9-184">Esempio di codice seguente viene illustrato un override del <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> metodo per un listener di traccia personalizzato.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-184">The following code sample shows an override of the <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> method for a custom trace listener.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceListener.CustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceListener.CustomAttributes/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.TraceListener.CustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceListener.CustomAttributes/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e7ac9-185">Quando si eredita dal <see cref="T:System.Diagnostics.TraceListener" /> classe o una classe derivata, è possibile eseguire l'override di <see cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" /> metodo per fornire gli attributi personalizzati per la classe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e7ac9-185">When inheriting from the <see cref="T:System.Diagnostics.TraceListener" /> class or a derived class, you can override the <see cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" /> method to provide custom attributes for your class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.TraceListener.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-186">Ottiene o imposta il livello di rientro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-186">Gets or sets the indent level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7ac9-187">Livello di rientro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-187">The indent level.</span>
          </span>
          <span data-ttu-id="e7ac9-188">Il valore predefinito è zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-188">The default is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-189">Il <xref:System.Diagnostics.TraceListener.IndentLevel%2A> proprietà rappresenta il numero di volte in cui il rientro specificato da di <xref:System.Diagnostics.TraceListener.IndentSize%2A> proprietà viene applicata.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-189">The <xref:System.Diagnostics.TraceListener.IndentLevel%2A> property represents the number of times that the indent specified by the <xref:System.Diagnostics.TraceListener.IndentSize%2A> property is applied.</span></span> <span data-ttu-id="e7ac9-190">Questa proprietà viene archiviata in ogni thread/per ogni richiesta.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-190">This property is stored on per-thread/per-request basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.TraceListener.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-191">Ottiene o imposta il numero di spazi in un rientro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-191">Gets or sets the number of spaces in an indent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7ac9-192">Numero di spazi in un rientro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-192">The number of spaces in an indent.</span>
          </span>
          <span data-ttu-id="e7ac9-193">Il valore predefinito è quattro spazi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-193">The default is four spaces.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-194">La proprietà viene archiviata in ogni thread/per ogni richiesta.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-194">The property is stored on per-thread/per-request basis.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7ac9-195">L'operazione impostata non è riuscita perché il valore è minore di zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-195">Set operation failed because the value is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="IsThreadSafe">
      <MemberSignature Language="C#" Value="public virtual bool IsThreadSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadSafe" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.IsThreadSafe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsThreadSafe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsThreadSafe { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsThreadSafe : bool" Usage="System.Diagnostics.TraceListener.IsThreadSafe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-196">Ottiene un valore che indica se il listener di traccia è thread-safe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-196">Gets a value indicating whether the trace listener is thread safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7ac9-197">
            <see langword="true" /> se il listener di traccia è thread-safe; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-197">
              <see langword="true" /> if the trace listener is thread safe; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e7ac9-198">Il valore predefinito è <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-198">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-199">Il valore di <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> viene usato per determinare se si desidera utilizzare un blocco globale per il listener di scrittura.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-199">The value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is used to determine whether to use a global lock when writing to the listener.</span></span> <span data-ttu-id="e7ac9-200">Se il valore di <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> viene `false`, il blocco globale viene usato indipendentemente dal valore di <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-200">If the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `false`, the global lock is used regardless of the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span></span> <span data-ttu-id="e7ac9-201">Il blocco globale non viene usato solo se il valore di <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> viene `true` e il valore di <xref:System.Diagnostics.Trace.UseGlobalLock%2A> è `false`.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-201">The global lock is not used only if the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `true` and the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A> is `false`.</span></span> <span data-ttu-id="e7ac9-202">Il comportamento predefinito consiste nell'usare globale ogni volta che la scrittura nel listener di blocco.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-202">The default behavior is to use the global lock whenever writing to the listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Diagnostics.TraceListener.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-203">Ottiene o imposta un nome per l'oggetto <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-203">Gets or sets a name for this <see cref="T:System.Diagnostics.TraceListener" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7ac9-204">Un nome per l'oggetto <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-204">A name for this <see cref="T:System.Diagnostics.TraceListener" />.</span>
          </span>
          <span data-ttu-id="e7ac9-205">Il valore predefinito è una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-205">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-206">Il nome utilizzabile per organizzare e accedere ai listener in un <xref:System.Diagnostics.TraceListenerCollection> raccolta.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-206">The name can be used to organize and access listeners in a <xref:System.Diagnostics.TraceListenerCollection> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="NeedIndent">
      <MemberSignature Language="C#" Value="protected bool NeedIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedIndent" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.NeedIndent" />
      <MemberSignature Language="VB.NET" Value="Protected Property NeedIndent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool NeedIndent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NeedIndent : bool with get, set" Usage="System.Diagnostics.TraceListener.NeedIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-207">Ottiene o imposta un valore che indica se impostare il rientro dell'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-207">Gets or sets a value indicating whether to indent the output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7ac9-208">
            <see langword="true" /> se è previsto un rientro per l'output; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-208">
              <see langword="true" /> if the output should be indented; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-209">**Nota** il <xref:System.Diagnostics.TraceListener.WriteIndent%2A> metodo, chiamato dalle <xref:System.Diagnostics.DefaultTraceListener> e <xref:System.Diagnostics.TextWriterTraceListener> classi, i set di <xref:System.Diagnostics.TraceListener.NeedIndent%2A> valore della proprietà da `false` per impedire in un secondo momento, rientri necessari.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-209">**Note** The <xref:System.Diagnostics.TraceListener.WriteIndent%2A> method, called by the <xref:System.Diagnostics.DefaultTraceListener> and <xref:System.Diagnostics.TextWriterTraceListener> classes, sets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property value to `false` to prevent later, unnecessary indents.</span></span> <span data-ttu-id="e7ac9-210">È necessario impostare il <xref:System.Diagnostics.TraceListener.NeedIndent%2A> proprietà `true` ogni volta che si desidera impostare un rientro dell'output di traccia.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-210">You must set the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `true` each time you wish to indent trace output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-211">Scrive i dati di traccia nell'output specifico del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-211">Writes trace data to the listener specific output.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public virtual void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="traceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="e7ac9-212">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-212">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="e7ac9-213">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-213">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="e7ac9-214">Uno dei valori di <see cref="T:System.Diagnostics.TraceEventType" /> che specifica il tipo di evento che ha causato la traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-214">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="e7ac9-215">Identificatore numerico per l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-215">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="e7ac9-216">I dati di traccia da creare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-216">The trace data to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-217">Scrive le informazioni di traccia, un oggetto dati e le informazioni di evento nell'output specifico del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-217">Writes trace information, a data object and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="e7ac9-218">Questo metodo non deve essere chiamato direttamente dal codice dell'applicazione, ma i membri del <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> per scrivere i dati di traccia nell'output.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-218">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="e7ac9-219">L'implementazione predefinita scrive la `eventCache`, `source`, `eventType` e `id` parametri nell'intestazione e piè di pagina della traccia.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-219">The default implementation writes the `eventCache`, `source`, `eventType` and `id` parameters in the header and footer of the trace.</span></span> <span data-ttu-id="e7ac9-220">Il `data` parametro viene scritto come corpo del messaggio di traccia.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-220">The `data` parameter is written as the body of the trace message.</span></span> <span data-ttu-id="e7ac9-221">Il `ToString` metodo dell'oggetto dati viene utilizzato per convertire l'oggetto in un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-221">The `ToString` method of the data object is used to convert the object to a <xref:System.String>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public virtual void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="traceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="e7ac9-222">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-222">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="e7ac9-223">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-223">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="e7ac9-224">Uno dei valori di <see cref="T:System.Diagnostics.TraceEventType" /> che specifica il tipo di evento che ha causato la traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-224">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="e7ac9-225">Identificatore numerico per l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-225">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="e7ac9-226">Matrice di oggetti dati da creare come dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-226">An array of objects to emit as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-227">Scrive le informazioni di traccia, una matrice di oggetti dati e le informazioni di evento nell'output specifico del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-227">Writes trace information, an array of data objects and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="e7ac9-228">Questo metodo non deve essere chiamato direttamente dal codice dell'applicazione, ma i membri del <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> per scrivere i dati di traccia nell'output.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-228">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="e7ac9-229">L'implementazione predefinita scrive i valori del `source`, `eventType` e `id` parametri sotto forma di intestazione.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-229">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header.</span></span> <span data-ttu-id="e7ac9-230">Gli oggetti dati vengono convertiti in stringhe usando il `ToString` metodo per ogni oggetto.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-230">The data objects are converted to strings using the `ToString` method of each object.</span></span> <span data-ttu-id="e7ac9-231">Il `eventCache` i dati vengono scritti come un piè di pagina, la natura dei dati di output in corso dipende dal valore della <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-231">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-232">Scrive le informazioni di traccia e di evento nell'output specifico del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-232">Writes trace and event information to the listener specific output.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int -&gt; unit" Usage="traceListener.TraceEvent (eventCache, source, eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="e7ac9-233">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-233">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="e7ac9-234">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-234">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="e7ac9-235">Uno dei valori di <see cref="T:System.Diagnostics.TraceEventType" /> che specifica il tipo di evento che ha causato la traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-235">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="e7ac9-236">Identificatore numerico per l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-236">A numeric identifier for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-237">Scrive le informazioni di traccia e di evento nell'output specifico del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-237">Writes trace and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="e7ac9-238">Questo metodo non deve essere chiamato direttamente dal codice dell'applicazione, ma i membri del <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> per scrivere i dati di traccia nell'output.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-238">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="e7ac9-239">L'implementazione predefinita scrive i valori del `source`, `eventType` e `id` parametri sotto forma di intestazione.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-239">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header.</span></span> <span data-ttu-id="e7ac9-240">Il `eventCache` i dati vengono scritti come un piè di pagina, la natura dei dati di output in corso dipende dal valore della <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-240">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="traceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="e7ac9-241">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-241">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="e7ac9-242">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-242">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="e7ac9-243">Uno dei valori di <see cref="T:System.Diagnostics.TraceEventType" /> che specifica il tipo di evento che ha causato la traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-243">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="e7ac9-244">Identificatore numerico per l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-244">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="e7ac9-245">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-245">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-246">Scrive le informazioni di traccia, un messaggio e le informazioni di evento nell'output specifico del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-246">Writes trace information, a message, and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="e7ac9-247">Questo metodo non deve essere chiamato direttamente dal codice dell'applicazione, ma i membri del <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> per scrivere i dati di traccia nell'output.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-247">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="e7ac9-248">L'implementazione predefinita scrive i valori del `source`, `eventType` e `id` parametri sotto forma di intestazione, seguito dal `message` dati.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-248">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header, followed by the `message` data.</span></span> <span data-ttu-id="e7ac9-249">Il `eventCache` i dati vengono scritti come un piè di pagina, la natura dei dati di output in corso dipende dal valore della <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-249">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="traceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="e7ac9-250">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-250">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="e7ac9-251">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-251">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="e7ac9-252">Uno dei valori di <see cref="T:System.Diagnostics.TraceEventType" /> che specifica il tipo di evento che ha causato la traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-252">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="e7ac9-253">Identificatore numerico per l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-253">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="e7ac9-254">Stringa di formato che contiene zero o più elementi di formato, corrispondenti a oggetti nella matrice <paramref name="args" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-254">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e7ac9-255">Matrice <see langword="object" /> che contiene zero o più oggetti da formattare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-255">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-256">Scrive le informazioni di traccia, una matrice di oggetti formattata e le informazioni di evento nell'output specifico del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-256">Writes trace information, a formatted array of objects and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="e7ac9-257">Questo metodo non deve essere chiamato direttamente dal codice dell'applicazione, ma i membri del <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> per scrivere i dati di traccia nell'output.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-257">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="e7ac9-258">L'implementazione predefinita scrive i valori del `source`, `eventType` e `id` parametri sotto forma di intestazione.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-258">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header.</span></span> <span data-ttu-id="e7ac9-259">Il `args` matrice di oggetti viene convertita in una stringa usando il <xref:System.String.Format%2A> , passando il `format` stringa e `args` array per formattare la stringa come la parte di messaggio di traccia.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-259">The `args` object array is converted to a string using the <xref:System.String.Format%2A> method, passing the `format` string and `args` array to format the string as the message portion of the trace.</span></span> <span data-ttu-id="e7ac9-260">Il `eventCache` i dati vengono scritti come un piè di pagina, la natura dei dati di output in corso dipende dal valore della <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-260">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceOutputOptions">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceOptions TraceOutputOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.TraceOptions TraceOutputOptions" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceOutputOptions As TraceOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceOptions TraceOutputOptions { System::Diagnostics::TraceOptions get(); void set(System::Diagnostics::TraceOptions value); };" />
      <MemberSignature Language="F#" Value="member this.TraceOutputOptions : System.Diagnostics.TraceOptions with get, set" Usage="System.Diagnostics.TraceListener.TraceOutputOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-261">Ottiene o imposta le opzioni dell'output di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-261">Gets or sets the trace output options.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7ac9-262">Combinazione bit per bit dei valori di enumerazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-262">A bitwise combination of the enumeration values.</span>
          </span>
          <span data-ttu-id="e7ac9-263">Il valore predefinito è <see cref="F:System.Diagnostics.TraceOptions.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-263">The default is <see cref="F:System.Diagnostics.TraceOptions.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-264">Il <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> proprietà determina il contenuto facoltativo di output di traccia.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-264">The <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property determines the optional content of trace output.</span></span> <span data-ttu-id="e7ac9-265">La proprietà può essere impostata nel file di configurazione o a livello di codice durante l'esecuzione di includere dati aggiuntivi in modo specifico per una sezione di codice.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-265">The property can be set in the configuration file or programmatically during execution to include additional data specifically for a section of code.</span></span> <span data-ttu-id="e7ac9-266">Ad esempio, è possibile impostare il <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> proprietà per il listener di traccia console <xref:System.Diagnostics.TraceOptions.Callstack?displayProperty=nameWithType> per aggiungere informazioni sullo stack di chiamate per l'output di traccia.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-266">For example, you can set the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for the console trace listener to <xref:System.Diagnostics.TraceOptions.Callstack?displayProperty=nameWithType> to add call stack information to the trace output.</span></span>  
  
 <span data-ttu-id="e7ac9-267">Il <xref:System.Diagnostics.TraceOptions> enumerazione non viene utilizzata dai metodi e classi seguenti:</span><span class="sxs-lookup"><span data-stu-id="e7ac9-267">The <xref:System.Diagnostics.TraceOptions> enumeration is not used by the following classes and methods:</span></span>  
  
-   <span data-ttu-id="e7ac9-268">Il <xref:System.Diagnostics.EventLogTraceListener> classe, poiché potrebbe causare un volume elevato di dati da scrivere nel log.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-268">The <xref:System.Diagnostics.EventLogTraceListener> class, because it can cause a large volume of data to be written to the log.</span></span>  
  
-   <span data-ttu-id="e7ac9-269">Il `Write` e `WriteLine` metodi delle <xref:System.Diagnostics.ConsoleTraceListener>, <xref:System.Diagnostics.DefaultTraceListener>, e <xref:System.Diagnostics.TextWriterTraceListener> classi.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-269">The `Write` and `WriteLine` methods of the <xref:System.Diagnostics.ConsoleTraceListener>, <xref:System.Diagnostics.DefaultTraceListener>, and <xref:System.Diagnostics.TextWriterTraceListener> classes.</span></span>  
  
-   <span data-ttu-id="e7ac9-270">Il <xref:System.Diagnostics.TraceListener.Write%2A> e <xref:System.Diagnostics.TraceListener.WriteLine%2A> metodi del <xref:System.Diagnostics.TraceListener> classe quando non vengono sottoposte a override in una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-270">The <xref:System.Diagnostics.TraceListener.Write%2A> and <xref:System.Diagnostics.TraceListener.WriteLine%2A> methods of the <xref:System.Diagnostics.TraceListener> class when they are not overridden in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7ac9-271">L'esempio seguente illustra l'impostazione di <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> proprietà per un listener di traccia della console.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-271">The following example shows the setting of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for a console trace listener.</span></span> <span data-ttu-id="e7ac9-272">Il listener di traccia della console è uno dei listener enumerate nel <xref:System.Diagnostics.TraceSource.Listeners%2A> proprietà di un'origine di traccia.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-272">The console trace listener is one of the listeners enumerated in the <xref:System.Diagnostics.TraceSource.Listeners%2A> property of a trace source.</span></span> <span data-ttu-id="e7ac9-273">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.TraceSource> classe.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-273">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#16)]
 [!code-vb[System.Diagnostics.TraceSource2#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7ac9-274">L'operazione impostata non è riuscita perché il valore non è valido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-274">Set operation failed because the value is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public virtual void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="abstract member TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit&#xA;override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="traceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="e7ac9-275">Oggetto <see cref="T:System.Diagnostics.TraceEventCache" /> contenente l'ID processo corrente, l'ID thread e le informazioni di traccia dello stack.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-275">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="e7ac9-276">Nome usato per identificare l'output. In genere corrisponde al nome dell'applicazione che ha generato l'evento di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-276">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="e7ac9-277">Identificatore numerico per l'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-277">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="e7ac9-278">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-278">A message to write.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="e7ac9-279">Oggetto <see cref="T:System.Guid" /> che identifica un'attività correlata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-279">A <see cref="T:System.Guid" /> object identifying a related activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-280">Scrive le informazioni di traccia, un messaggio, l'identità di un'attività correlata e le informazioni di evento nell'output specifico del listener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-280">Writes trace information, a message, a related activity identity and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="e7ac9-281">Questo metodo non deve essere chiamato direttamente dal codice dell'applicazione, ma i membri del <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource> per scrivere i dati di traccia nell'output.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-281">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="e7ac9-282">Il <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> metodo viene utilizzato per la correlazione di tracce correlate.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-282">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is used for the correlation of related traces.</span></span> <span data-ttu-id="e7ac9-283">Il <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> chiamate al metodo il <xref:System.Diagnostics.TraceListener.TraceEvent%2A> metodo per l'elaborazione della chiamata, con il livello di eventType impostato su <xref:System.Diagnostics.TraceEventType.Transfer> e il `relatedActivityId` <xref:System.Guid> sotto forma di stringa aggiunta al messaggio.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-283">The <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> method calls the <xref:System.Diagnostics.TraceListener.TraceEvent%2A> method to process the call, with the eventType level set to <xref:System.Diagnostics.TraceEventType.Transfer> and the `relatedActivityId`<xref:System.Guid> as a string appended to the message.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-284">Scrive un messaggio, un nome di categoria o il valore del metodo <see cref="M:System.Object.ToString" /> di un oggetto nel listener creato durante l'implementazione della classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-284">Writes a message, category name, or the value of an object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj -&gt; unit&#xA;override this.Write : obj -&gt; unit" Usage="traceListener.Write o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="e7ac9-285">Oggetto <see cref="T:System.Object" /> di cui si intende scrivere il nome completo della classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-285">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-286">Scrive il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nel listener creato durante l'implementazione della classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-286">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit" Usage="traceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="e7ac9-287">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-287">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-288">Quando se ne esegue l'override in una classe derivata, scrive il messaggio specificato nel listener creato nella classe derivata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-288">When overridden in a derived class, writes the specified message to the listener you create in the derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e7ac9-289">Quando si eredita da questa classe, è necessario implementare questo metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e7ac9-289">When inheriting from this class, you must implement this method.</span>
            </span>
            <span data-ttu-id="e7ac9-290">Per supportare un rientro, è necessario chiamare <see cref="M:System.Diagnostics.TraceListener.WriteIndent" /> se <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> è <see langword="true" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e7ac9-290">To support an indentation, you should call <see cref="M:System.Diagnostics.TraceListener.WriteIndent" /> if <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> is <see langword="true" />.</span>
            </span>
            <span data-ttu-id="e7ac9-291">Se è necessario impostare un rientro la riga seguente, è necessario reimpostare <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> a <see langword="true" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e7ac9-291">If you need to indent the following line, you must reset <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> to <see langword="true" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (object o, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(object o, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (o As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Object ^ o, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj * string -&gt; unit&#xA;override this.Write : obj * string -&gt; unit" Usage="traceListener.Write (o, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="e7ac9-292">Oggetto <see cref="T:System.Object" /> di cui si intende scrivere il nome completo della classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-292">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="e7ac9-293">Nome di categoria usato per organizzare l'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-293">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-294">Scrive un nome di categoria e il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nel listener creato durante l'implementazione della classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-294">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * string -&gt; unit&#xA;override this.Write : string * string -&gt; unit" Usage="traceListener.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="e7ac9-295">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-295">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="e7ac9-296">Nome di categoria usato per organizzare l'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-296">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-297">Scrive un nome di categoria e un messaggio nel listener creato durante l'implementazione della classe <see cref="T:System.Diagnostics.TraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-297">Writes a category name and a message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteIndent">
      <MemberSignature Language="C#" Value="protected virtual void WriteIndent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteIndent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteIndent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteIndent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteIndent();" />
      <MemberSignature Language="F#" Value="abstract member WriteIndent : unit -&gt; unit&#xA;override this.WriteIndent : unit -&gt; unit" Usage="traceListener.WriteIndent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-298">Inserisce il rientro nel listener creato quando si implementa questa classe e reimposta la proprietà <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> su <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-298">Writes the indent to the listener you create when you implement this class, and resets the <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> property to <see langword="false" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-299">Questo metodo scrive il rientro e reimposta il <xref:System.Diagnostics.TraceListener.NeedIndent%2A> proprietà `false`.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-299">This method writes the indent and resets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `false`.</span></span> <span data-ttu-id="e7ac9-300">Chiamare questo metodo se <xref:System.Diagnostics.TraceListener.NeedIndent%2A> viene `true` quando si esegue l'override di <xref:System.Diagnostics.TraceListener.Write%2A> e <xref:System.Diagnostics.TraceListener.WriteLine%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-300">Call this method if <xref:System.Diagnostics.TraceListener.NeedIndent%2A> is `true` when you are overriding the <xref:System.Diagnostics.TraceListener.Write%2A> and <xref:System.Diagnostics.TraceListener.WriteLine%2A> methods.</span></span> <span data-ttu-id="e7ac9-301">Per impostazione predefinita, questo metodo Usa gli spazi vuoti per il rientro.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-301">By default, this method uses blank spaces for indentation.</span></span> <span data-ttu-id="e7ac9-302">La dimensione del rientro è determinata dai valori del <xref:System.Diagnostics.TraceListener.IndentSize%2A> e <xref:System.Diagnostics.TraceListener.IndentLevel%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-302">The size of the indent is determined by the values of the <xref:System.Diagnostics.TraceListener.IndentSize%2A> and <xref:System.Diagnostics.TraceListener.IndentLevel%2A> properties.</span></span> <span data-ttu-id="e7ac9-303">Il <xref:System.Diagnostics.TraceListener.IndentLevel%2A> proprietà rappresenta il numero di volte in cui il rientro di dimensioni specificate dal <xref:System.Diagnostics.TraceListener.IndentSize%2A> proprietà viene applicata.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-303">The <xref:System.Diagnostics.TraceListener.IndentLevel%2A> property represents the number of times the indent of the size specified by the <xref:System.Diagnostics.TraceListener.IndentSize%2A> property is applied.</span></span> <span data-ttu-id="e7ac9-304">Questo metodo viene chiamato il <xref:System.Diagnostics.DefaultTraceListener> e <xref:System.Diagnostics.TextWriterTraceListener> classi.</span><span class="sxs-lookup"><span data-stu-id="e7ac9-304">This method is called by the <xref:System.Diagnostics.DefaultTraceListener> and <xref:System.Diagnostics.TextWriterTraceListener> classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7ac9-305">Scrive un messaggio, un nome di categoria o il valore del metodo <see cref="M:System.Object.ToString" /> di un oggetto nel listener creato durante l'implementazione della classe <see cref="T:System.Diagnostics.TraceListener" />, seguito da un terminatore di riga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-305">Writes a message, category name, or the value of an object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj -&gt; unit&#xA;override this.WriteLine : obj -&gt; unit" Usage="traceListener.WriteLine o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="e7ac9-306">Oggetto <see cref="T:System.Object" /> di cui si intende scrivere il nome completo della classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-306">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-307">Scrive il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nel listener creato durante l'implementazione della classe <see cref="T:System.Diagnostics.TraceListener" />, seguito da un terminatore di riga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-307">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-308">Il terminatore di riga tipico che è possibile implementare è un ritorno a capo seguito da un avanzamento riga (\r\n).</span><span class="sxs-lookup"><span data-stu-id="e7ac9-308">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public abstract void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit" Usage="traceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="e7ac9-309">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-309">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-310">Quando se ne esegue l'override in una classe derivata, scrive un messaggio nel listener creato nella classe derivata, seguito da un terminatore di riga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-310">When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-311">Il terminatore di riga tipico che è possibile implementare è un ritorno a capo seguito da un avanzamento riga (\r\n).</span><span class="sxs-lookup"><span data-stu-id="e7ac9-311">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e7ac9-312">Quando si eredita da questa classe, è necessario implementare questo metodo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e7ac9-312">When inheriting from this class, you must implement this method.</span>
            </span>
            <span data-ttu-id="e7ac9-313">Per supportare un rientro, chiamare <see cref="M:System.Diagnostics.TraceListener.WriteIndent" /> se <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> è <see langword="true" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e7ac9-313">To support an indentation, call <see cref="M:System.Diagnostics.TraceListener.WriteIndent" /> if <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> is <see langword="true" />.</span>
            </span>
            <span data-ttu-id="e7ac9-314">Per far rientrare la riga seguente, è necessario reimpostare <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> a <see langword="true" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e7ac9-314">To indent the following line, you must reset <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> to <see langword="true" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (object o, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(object o, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (o As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Object ^ o, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj * string -&gt; unit&#xA;override this.WriteLine : obj * string -&gt; unit" Usage="traceListener.WriteLine (o, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="e7ac9-315">Oggetto <see cref="T:System.Object" /> di cui si intende scrivere il nome completo della classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-315">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="e7ac9-316">Nome di categoria usato per organizzare l'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-316">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-317">Scrive un nome di categoria e il valore del metodo <see cref="M:System.Object.ToString" /> dell'oggetto nel listener creato durante l'implementazione della classe <see cref="T:System.Diagnostics.TraceListener" />, seguito da un terminatore di riga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-317">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-318">Il terminatore di riga tipico che è possibile implementare è un ritorno a capo seguito da un avanzamento riga (\r\n).</span><span class="sxs-lookup"><span data-stu-id="e7ac9-318">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * string -&gt; unit&#xA;override this.WriteLine : string * string -&gt; unit" Usage="traceListener.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="e7ac9-319">Messaggio da scrivere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-319">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="e7ac9-320">Nome di categoria usato per organizzare l'output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-320">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7ac9-321">Scrive un nome di categoria e un messaggio nel listener creato durante l'implementazione della classe <see cref="T:System.Diagnostics.TraceListener" />, seguiti da un terminatore di riga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7ac9-321">Writes a category name and a message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7ac9-322">Il terminatore di riga tipico che è possibile implementare è un ritorno a capo seguito da un avanzamento riga (\r\n).</span><span class="sxs-lookup"><span data-stu-id="e7ac9-322">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>