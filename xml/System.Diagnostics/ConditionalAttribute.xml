<Type Name="ConditionalAttribute" FullName="System.Diagnostics.ConditionalAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81f6a270fe659ce8724aaa882a4ba2dbdfb14f48" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30397825" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConditionalAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ConditionalAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConditionalAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConditionalAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="05ffb-101">Indica ai compilatori che una chiamata al metodo o un attributo deve essere ignorato a meno che non sia definito un simbolo di compilazione condizionale specificato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="05ffb-101">Indicates to compilers that a method call or attribute should be ignored unless a specified conditional compilation symbol is defined.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ffb-102">È possibile applicare il <xref:System.Diagnostics.ConditionalAttribute> a metodi e classi di attributo.</span><span class="sxs-lookup"><span data-stu-id="05ffb-102">You can apply the <xref:System.Diagnostics.ConditionalAttribute> attribute to methods and classes.</span></span> <span data-ttu-id="05ffb-103">Tuttavia, l'utilizzo nelle classi è valido solo per i tipi che derivano da <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="05ffb-103">However, its use on classes is valid only for types that are derived from <xref:System.Attribute>.</span></span> <span data-ttu-id="05ffb-104"><xref:System.Diagnostics.ConditionalAttribute> verrà ignorato o verrà generato un avviso del compilatore o un messaggio di errore se si applica a qualsiasi altro tipo.</span><span class="sxs-lookup"><span data-stu-id="05ffb-104"><xref:System.Diagnostics.ConditionalAttribute> either will be ignored or will produce a compiler warning or error message if you apply it to any other type.</span></span>  
  
 <span data-ttu-id="05ffb-105">L'applicazione <xref:System.Diagnostics.ConditionalAttribute> a un metodo indica ai compilatori che una chiamata al metodo non deve essere compilata in Microsoft intermediate language (MSIL), a meno che simbolo di compilazione condizionale è associata a <xref:System.Diagnostics.ConditionalAttribute> è definito.</span><span class="sxs-lookup"><span data-stu-id="05ffb-105">Applying <xref:System.Diagnostics.ConditionalAttribute> to a method indicates to compilers that a call to the method should not be compiled into Microsoft intermediate language (MSIL) unless the conditional compilation symbol that is associated with <xref:System.Diagnostics.ConditionalAttribute> is defined.</span></span> <span data-ttu-id="05ffb-106">Se si applica questo attributo a un metodo che non restituisce void, verrà visualizzato un errore di compilazione in Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="05ffb-106">You will get a compilation error in Visual Studio if you apply this attribute to a method that does not return void.</span></span> <span data-ttu-id="05ffb-107">L'applicazione <xref:System.Diagnostics.ConditionalAttribute> a un attributo indica che l'attributo non deve essere inviato ai metadati a meno che non è definito il simbolo di compilazione condizionale.</span><span class="sxs-lookup"><span data-stu-id="05ffb-107">Applying <xref:System.Diagnostics.ConditionalAttribute> to an attribute indicates that the attribute should not be emitted to metadata unless the conditional compilation symbol is defined.</span></span> <span data-ttu-id="05ffb-108">Eventuali argomenti passati al metodo o di attributo sono ancora tipo controllato dal compilatore.</span><span class="sxs-lookup"><span data-stu-id="05ffb-108">Any arguments passed to the method or attribute are still type-checked by the compiler.</span></span>  
  
 <span data-ttu-id="05ffb-109">È possibile utilizzare le tecniche seguenti per definire i simboli di compilazione condizionale:</span><span class="sxs-lookup"><span data-stu-id="05ffb-109">You can use the following techniques to define conditional compilation symbols:</span></span>  
  
-   <span data-ttu-id="05ffb-110">Utilizzare opzioni della riga di comando del compilatore; ad esempio, **/define: DEBUG**.</span><span class="sxs-lookup"><span data-stu-id="05ffb-110">Use compiler command-line options; for example, **/define:DEBUG**.</span></span>  
  
-   <span data-ttu-id="05ffb-111">Utilizzare le variabili di ambiente nella shell di sistema operativo; ad esempio, **set DEBUG = 1**.</span><span class="sxs-lookup"><span data-stu-id="05ffb-111">Use environment variables in the operating system shell; for example, **set DEBUG=1**.</span></span>  
  
-   <span data-ttu-id="05ffb-112">Utilizzare i pragma nel codice sorgente; ad esempio, definire una variabile di compilazione come segue:</span><span class="sxs-lookup"><span data-stu-id="05ffb-112">Use pragmas in the source code; for example, define the compilation variable as follows:</span></span>  
  
    ```csharp  
    #define DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=True  
    ```  
  
     <span data-ttu-id="05ffb-113">Per annullare la definizione della variabile, utilizzare quanto segue:</span><span class="sxs-lookup"><span data-stu-id="05ffb-113">To undefine the variable, use the following:</span></span>  
  
    ```csharp  
    #undef DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=False  
    ```  
  
 <span data-ttu-id="05ffb-114">I compilatori conformi con la lingua specifica CLS (Common) possono ignorare <xref:System.Diagnostics.ConditionalAttribute>.</span><span class="sxs-lookup"><span data-stu-id="05ffb-114">Compilers that comply with the Common Language Specification (CLS) are permitted to ignore <xref:System.Diagnostics.ConditionalAttribute>.</span></span> <span data-ttu-id="05ffb-115">I compilatori C#, Visual Basic e C++ supportano <xref:System.Diagnostics.ConditionalAttribute>; il compilatore JScript non supporta l'attributo.</span><span class="sxs-lookup"><span data-stu-id="05ffb-115">The C#, Visual Basic, and C++ compilers support <xref:System.Diagnostics.ConditionalAttribute>; the JScript compiler does not support the attribute.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05ffb-116">In Visual Basic, l'operatore `AddressOf` non è interessato da questo attributo.</span><span class="sxs-lookup"><span data-stu-id="05ffb-116">In Visual Basic, the `AddressOf` operator is not affected by this attribute.</span></span> <span data-ttu-id="05ffb-117">Ad esempio, `Call CType(AddressOf delegate, Action)` richiama sempre `delegate`, sebbene `Call delegate()` non potrebbe.</span><span class="sxs-lookup"><span data-stu-id="05ffb-117">For example, `Call CType(AddressOf delegate, Action)` always invokes `delegate`, although `Call delegate()` might not.</span></span>  
  
 <span data-ttu-id="05ffb-118"><xref:System.Diagnostics.ConditionalAttribute> viene applicato ai metodi definiti nel <xref:System.Diagnostics.Debug> e <xref:System.Diagnostics.Trace> classi.</span><span class="sxs-lookup"><span data-stu-id="05ffb-118"><xref:System.Diagnostics.ConditionalAttribute> is applied to the methods that are defined in the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes.</span></span>  
  
 <span data-ttu-id="05ffb-119">Per ulteriori informazioni sull'utilizzo degli attributi, vedere [attributi](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="05ffb-119">For more information about how to use attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05ffb-120">L'esempio seguente illustra l'uso di <xref:System.Diagnostics.ConditionalAttribute>.</span><span class="sxs-lookup"><span data-stu-id="05ffb-120">The following example demonstrates the use of <xref:System.Diagnostics.ConditionalAttribute>.</span></span> <span data-ttu-id="05ffb-121">Nell'esempio si presuppone che la condizione viene definita con il **/define** l'opzione del compilatore.</span><span class="sxs-lookup"><span data-stu-id="05ffb-121">The example assumes that the condition is defined with the **/define** compiler option.</span></span> <span data-ttu-id="05ffb-122">È possibile ottenere risultati diversi modificando l'opzione del compilatore.</span><span class="sxs-lookup"><span data-stu-id="05ffb-122">You can obtain different results by changing the compiler option.</span></span> <span data-ttu-id="05ffb-123">È possibile definire le condizioni utilizzando i pragma nel codice di esempio anziché identificarle come opzioni del compilatore.</span><span class="sxs-lookup"><span data-stu-id="05ffb-123">You can optionally define the conditions by using pragmas in the sample code instead of identifying them as compiler options.</span></span>  
  
 [!code-csharp[ConditionalAttributeSample1#7](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#7)]
 [!code-vb[ConditionalAttributeSample1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalAttribute (string conditionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string conditionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalAttribute(System::String ^ conditionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conditionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conditionString">
          <span data-ttu-id="05ffb-124">Stringa che specifica il simbolo di compilazione condizionale con distinzione tra maiuscole e minuscole associato all'attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05ffb-124">A string that specifies the case-sensitive conditional compilation symbol that is associated with the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05ffb-125">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.ConditionalAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05ffb-125">Initializes a new instance of the <see cref="T:System.Diagnostics.ConditionalAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="05ffb-126">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Diagnostics.ConditionalAttribute.%23ctor%2A> costruttore.</span><span class="sxs-lookup"><span data-stu-id="05ffb-126">The following example demonstrates how to use the <xref:System.Diagnostics.ConditionalAttribute.%23ctor%2A> constructor.</span></span> <span data-ttu-id="05ffb-127">In questo esempio fa parte di un esempio più esaustivo disponibile per la <xref:System.Diagnostics.ConditionalAttribute> classe.</span><span class="sxs-lookup"><span data-stu-id="05ffb-127">This example is part of a larger example provided for the <xref:System.Diagnostics.ConditionalAttribute> class.</span></span>  
  
 [!code-csharp[ConditionalAttributeSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#8)]
 [!code-vb[ConditionalAttributeSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionString">
      <MemberSignature Language="C#" Value="public string ConditionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConditionString" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConditionString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05ffb-128">Ottiene il simbolo di compilazione condizionale associato all'attributo <see cref="T:System.Diagnostics.ConditionalAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05ffb-128">Gets the conditional compilation symbol that is associated with the <see cref="T:System.Diagnostics.ConditionalAttribute" /> attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05ffb-129">Stringa che specifica il simbolo di compilazione condizionale con distinzione tra maiuscole e minuscole associato all'attributo <see cref="T:System.Diagnostics.ConditionalAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05ffb-129">A string that specifies the case-sensitive conditional compilation symbol that is associated with the <see cref="T:System.Diagnostics.ConditionalAttribute" /> attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ffb-130">Questa proprietà è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="05ffb-130">This property is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>