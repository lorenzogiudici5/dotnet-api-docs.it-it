<Type Name="PerformanceCounterCategory" FullName="System.Diagnostics.PerformanceCounterCategory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3db581f6728cb8c132d13dd72bdb00703a5ef2fd" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48615868" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PerformanceCounterCategory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PerformanceCounterCategory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounterCategory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PerformanceCounterCategory" />
  <TypeSignature Language="C++ CLI" Value="public ref class PerformanceCounterCategory sealed" />
  <TypeSignature Language="F#" Value="type PerformanceCounterCategory = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta un oggetto delle prestazioni, che definisce una categoria di contatori delle prestazioni.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Creazione o eliminazione di un contatore delle prestazioni richiede la sincronizzazione del codice sottostante usando un mutex denominato. Se un'applicazione con privilegiata elevati consente di bloccare il mutex denominato, i tentativi di creazione o eliminazione di un contatore delle prestazioni, l'applicazione di rispondere fino a quando il blocco viene rilasciato. Per evitare questo problema, non concedere mai <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> dell'autorizzazione per codice non attendibile. Inoltre, <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> autorizzazione potenzialmente consente altre autorizzazioni è stata ignorata e deve essere concesso solo a codice completamente attendibile.  
  
 Il <xref:System.Diagnostics.PerformanceCounterCategory> dell'istanza <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> proprietà viene visualizzata nel campo oggetto prestazione della finestra di dialogo Aggiungi contatori dell'applicazione contatori delle prestazioni.  
  
 Il <xref:System.Diagnostics.PerformanceCounterCategory> classe fornisce diversi metodi per l'interazione con i contatori e le categorie nel computer. Il <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> metodi consentono di definire categorie personalizzate. Il <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> metodo fornisce un modo per rimuovere le categorie dal computer. Il <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> metodo consente di visualizzare l'elenco di categorie, mentre <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> recupera tutti i dati di contatore e istanza associati a una singola categoria.  
  
 Un contatore delle prestazioni pubblica i dati sulle prestazioni relative a un'applicazione. Le categorie includono componenti fisici (ad esempio processori, dischi e memoria) e gli oggetti di sistema (ad esempio processi e thread). Contatori di sistema che sono correlati allo stesso oggetto delle prestazioni sono raggruppati in una categoria che indica il comune stato attivo. Quando si crea un'istanza di <xref:System.Diagnostics.PerformanceCounter> (classe), è prima di tutto indicare la categoria con cui interagisce il componente e quindi si sceglie un contatore di tale categoria.  
  
 Ad esempio, una categoria di contatori di Windows è la categoria di memoria. I contatori di sistema all'interno di questa categoria di tenere traccia dei dati di memoria, ad esempio il numero di byte disponibili e il numero di byte memorizzate nella cache. Se si desidera lavorare con i byte memorizzate nella cache nell'applicazione, si creerà un'istanza di <xref:System.Diagnostics.PerformanceCounter> componente, connetterla alla categoria di memoria e quindi scegliere il contatore appropriato (in questo caso, byte memorizzate nella cache) da tale categoria.  
  
 Anche se il sistema esegue molte altre categorie di contatori disponibili, le categorie che è probabile che interagirà con più di frequente sono le categorie di Cache, memoria, gli oggetti, disco fisico, processo, processore, Server, sistema e Thread.  
  
> [!IMPORTANT]
>  Il <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A> nel metodo il <xref:System.Diagnostics.PerformanceCounter> classe rilascerà il contatore e, se è selezionata l'opzione di riutilizzo per quella categoria, verrà riutilizzato l'istanza del contatore. Ciò potrebbe causare una race condition, se un altro processo o persino un'altra parte del codice sta tentando di scrivere l'istanza del contatore.  
  
> [!NOTE]
>  È consigliabile che è possibile creare nuove categorie di contatori delle prestazioni durante l'installazione dell'applicazione, non durante l'esecuzione dell'applicazione. In questo modo ora il sistema operativo aggiornare l'elenco di categorie di contatori delle prestazioni registrati. Se l'elenco non è stato aggiornato, il tentativo di usare la categoria avrà esito negativo.  
  
> [!NOTE]
>  Categorie di contatori delle prestazioni installate con il [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] utilizzo della memoria condivisa separata, con ogni categoria di contatori delle prestazioni disponga della propria memoria. È possibile specificare le dimensioni della memoria condivisa separata tramite la creazione di un valore DWORD denominato FileMappingSize nella chiave del Registro di sistema HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<il nome di categoria >* \ Prestazioni. Il valore FileMappingSize è impostato per le dimensioni della memoria condivisa della categoria. La dimensione predefinita è 131.072 decimale. Se il valore FileMappingSize non è presente, il `fileMappingSize` valore dell'attributo di `performanceCounters` viene usato l'elemento specificato nel file Machine. config, causando un ulteriore sovraccarico per l'elaborazione di file di configurazione. È possibile realizzare un miglioramento delle prestazioni per l'avvio dell'applicazione impostando le dimensioni del mapping dei file del Registro di sistema. Per altre informazioni sulla dimensione del mapping del file, vedere [ &lt;performanceCounters&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/performancecounters-element.md).  
  
   
  
## Examples  
 L'esempio di codice seguente determina se un <xref:System.Diagnostics.PerformanceCounter> e il relativo <xref:System.Diagnostics.PerformanceCounterCategory> esiste nel computer locale o in un altro computer. Se questi oggetti non esistono nel computer locale, l'esempio facoltativamente li crea. Usa il <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> metodo per determinare se il <xref:System.Diagnostics.PerformanceCounterCategory> esiste.  Se il <xref:System.Diagnostics.PerformanceCounterCategory> non esiste e viene specificato alcun nome di contatore o se il computer è un computer remoto, nell'esempio viene chiuso.  
  
 Se un <xref:System.Diagnostics.PerformanceCounter> viene specificato il nome, l'esempio Usa il <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> (metodo) e visualizza il risultato all'utente. Se il <xref:System.Diagnostics.PerformanceCounter> non esiste, l'utente può eliminare e ricreare il <xref:System.Diagnostics.PerformanceCounterCategory> con il nuovo <xref:System.Diagnostics.PerformanceCounter>. Se si esegue questa operazione, la categoria viene eliminata usando il <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> (metodo).  
  
 Se richiesto, l'esempio verranno create le nuove <xref:System.Diagnostics.PerformanceCounterCategory> e <xref:System.Diagnostics.PerformanceCounter> usando il <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> (metodo). Se viene specificato un nome di istanza, l'esempio Usa il <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> (metodo) e visualizza il risultato.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/CS/perfcountercatcreateexist.cs#27)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/VB/perfcountercatcreateexist.vb#27)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounter" />
    <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, lascia vuota la proprietà <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> e imposta la proprietà <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> sul computer locale.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> deve essere impostata prima di associare questa <xref:System.Diagnostics.PerformanceCounterCategory> istanza con un oggetto delle prestazioni nel server. In caso contrario, viene generata un'eccezione.  
  
   
  
## Examples  
 Esempio di codice seguente accetta un <xref:System.Diagnostics.PerformanceCounterCategory> nome e un nome di computer dalla riga di comando.  Crea un <xref:System.Diagnostics.PerformanceCounterCategory> utilizzando l'overload del costruttore appropriato per il numero di parametri specificati, quindi vengono visualizzate le relative proprietà.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura delle categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounterCategory : string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="new System.Diagnostics.PerformanceCounterCategory categoryName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Il nome della categoria del contatore delle prestazioni o oggetto delle prestazioni al quale associare questa istanza di <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</param>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, imposta la proprietà <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> sul valore specificato e la proprietà <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> sul computer locale.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente accetta un <xref:System.Diagnostics.PerformanceCounterCategory> nome e un nome di computer dalla riga di comando. Crea un <xref:System.Diagnostics.PerformanceCounterCategory> utilizzando l'overload del costruttore appropriato per il numero di parametri specificati, quindi vengono visualizzate le relative proprietà.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> è una stringa vuota ("").</exception>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="categoryName" /> è <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura delle informazioni di categoria, ad esempio il nome della categoria. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounterCategory : string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="new System.Diagnostics.PerformanceCounterCategory (categoryName, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Il nome della categoria del contatore delle prestazioni o oggetto delle prestazioni al quale associare questa istanza di <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</param>
        <param name="machineName">Il computer sul quale sono presenti la categoria del contatore delle prestazioni e i contatori associati.</param>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> e imposta le proprietà <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> e <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> sui valori specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Esempio di codice seguente accetta un <xref:System.Diagnostics.PerformanceCounterCategory> nome e un nome di computer dalla riga di comando. Crea un <xref:System.Diagnostics.PerformanceCounterCategory> utilizzando l'overload del costruttore appropriato per il numero di parametri specificati, quindi vengono visualizzate le relative proprietà.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> è una stringa vuota ("").  
  
oppure 
La sintassi della proprietà <paramref name="machineName" /> non è valida.</exception>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="categoryName" /> è <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura delle informazioni di categoria, ad esempio il nome del computer e categoria. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryHelp">
      <MemberSignature Language="C#" Value="public string CategoryHelp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryHelp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryHelp As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryHelp { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryHelp : string" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il testo della Guida della categoria.</summary>
        <value>Una descrizione dell'oggetto delle prestazioni rilevate da questa categoria.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio di codice seguente crea una <xref:System.Diagnostics.PerformanceCounterCategory> con il <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>. Verrà chiesto all'utente per il <xref:System.Diagnostics.PerformanceCounterCategory> e i nomi dei computer, quindi imposta le <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> e <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> proprietà rispetto ai valori immessi. Visualizza quindi i valori del <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, e <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> delle proprietà, oppure viene visualizzato un messaggio di errore se il <xref:System.Diagnostics.PerformanceCounterCategory> non è accessibile.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> è <see langword="null" />. Il nome della categoria deve essere impostato prima di ottenere la Guida della categoria.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string with get, set" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome dell'oggetto delle prestazioni che definisce questa categoria.</summary>
        <value>Il nome della categoria del contatore delle prestazioni o oggetto delle prestazioni al quale associare questa istanza di <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio di codice seguente crea una <xref:System.Diagnostics.PerformanceCounterCategory> con il <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>. Verrà chiesto all'utente per il <xref:System.Diagnostics.PerformanceCounterCategory> e i nomi dei computer, quindi imposta le <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> e <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> proprietà rispetto ai valori immessi. Visualizza quindi i valori del <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, e <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> delle proprietà, oppure viene visualizzato un messaggio di errore se il <xref:System.Diagnostics.PerformanceCounterCategory> non è accessibile.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> è una stringa vuota ("").</exception>
        <exception cref="T:System.ArgumentNullException">L'elemento <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> è <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura delle categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterCategoryType CategoryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterCategoryType CategoryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryType As PerformanceCounterCategoryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterCategoryType CategoryType { System::Diagnostics::PerformanceCounterCategoryType get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryType : System.Diagnostics.PerformanceCounterCategoryType" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategoryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il tipo di categoria del contatore delle prestazioni.</summary>
        <value>Uno dei valori di <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.PerformanceCounterCategory.CategoryType%2A> proprietà indica se il <xref:System.Diagnostics.PerformanceCounterCategory> oggetto può avere più istanze. I valori possibili sono <xref:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance>, <xref:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance>, o <xref:System.Diagnostics.PerformanceCounterCategoryType.Unknown>.  
  
 Esistono due tipi di categorie di contatori delle prestazioni: a istanza singola e a istanza multipla. Per impostazione predefinita, una categoria è a istanza singola quando viene creata e diventa multi-istanza quando viene aggiunta un'altra istanza. Le categorie vengono create quando un'applicazione è configurata e le istanze vengono aggiunte in fase di esecuzione. Nelle versioni 1.0 e 1.1 di .NET Framework, non è necessario sapere se una categoria di contatori delle prestazioni è a istanza multipla o singola istanza. Nel [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], il <xref:System.Diagnostics.PerformanceCounterCategoryType> enumerazione viene utilizzata per indicare se un contatore delle prestazioni può avere più istanze.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CounterExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se un contatore specificato è registrato in una particolare categoria.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public bool CounterExists (string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CounterExists(string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CounterExists (counterName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CounterExists(System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="member this.CounterExists : string -&gt; bool" Usage="performanceCounterCategory.CounterExists counterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Il nome del contatore delle prestazioni da ricercare.</param>
        <summary>Determina se il contatore specificato è registrato in questa categoria, indicata dalle proprietà <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> e <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />.</summary>
        <returns>
          <see langword="true" /> se il contatore è registrato nella categoria specificata dalle proprietà <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> e <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />; in caso contrario, <see langword="false" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario impostare il <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> proprietà prima di chiamare questo metodo. In caso contrario, viene generata un'eccezione.  
  
 Se non è stato impostato il <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> proprietà, questo metodo Usa il computer locale (".").  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 L'esempio di codice seguente determina se un <xref:System.Diagnostics.PerformanceCounter> esiste. Ottiene un nome di categoria, nome contatore e nome del computer dalla riga di comando, se sono noti. Crea una <xref:System.Diagnostics.PerformanceCounterCategory> dell'oggetto utilizzando il metodo appropriato <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor%2A>. Viene quindi usato il <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%28System.String%29> metodo per determinare se l'oggetto specificato <xref:System.Diagnostics.PerformanceCounter> esista e informa l'utente.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatobjexists.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjcountexists.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="counterName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> non è stata impostata.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member CounterExists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.CounterExists (counterName, categoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Il nome del contatore delle prestazioni da ricercare.</param>
        <param name="categoryName">Il nome della categoria del contatore delle prestazioni o oggetto delle prestazioni cui è associato il contatore delle prestazioni specificato.</param>
        <summary>Determina se il contatore specificato è registrato nella categoria specificata sul computer locale.</summary>
        <returns>
          <see langword="true" /> , se il contatore è registrato nella categoria specificata sul computer locale; in caso contrario, <see langword="false" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 L'esempio di codice seguente determina se un <xref:System.Diagnostics.PerformanceCounter> esiste. Ottiene un nome di categoria, nome contatore e nome del computer dalla riga di comando, se sono noti. Usa l'overload statici del <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> metodo per determinare se l'oggetto specificato <xref:System.Diagnostics.PerformanceCounter> nome esiste nel <xref:System.Diagnostics.PerformanceCounterCategory>. L'overload è selezionata in base se viene fornito un nome di computer.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="categoryName" /> è <see langword="null" />.  
  
oppure 
L'elemento <paramref name="counterName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> è una stringa vuota ("").</exception>
        <exception cref="T:System.InvalidOperationException">Il nome della categoria non esiste.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura delle categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member CounterExists : string * string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.CounterExists (counterName, categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Il nome del contatore delle prestazioni da ricercare.</param>
        <param name="categoryName">Il nome della categoria del contatore delle prestazioni o oggetto delle prestazioni cui è associato il contatore delle prestazioni specificato.</param>
        <param name="machineName">Il nome del computer sul quale sono presenti la categoria del contatore delle prestazioni e i contatori associati.</param>
        <summary>Determina se il contatore specificato è registrato nella categoria specificata in un computer remoto.</summary>
        <returns>
          <see langword="true" /> , se il contatore è registrato nella categoria specificata sul computer specificato; in caso contrario, <see langword="false" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 L'esempio di codice seguente determina se un <xref:System.Diagnostics.PerformanceCounter> esiste. Ottiene un nome di categoria, nome contatore e nome del computer dalla riga di comando, se sono noti. Usa l'overload statici del <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> metodo per determinare se l'oggetto specificato <xref:System.Diagnostics.PerformanceCounter> nome esiste nel <xref:System.Diagnostics.PerformanceCounterCategory>. L'overload è selezionata in base se viene fornito un nome di computer.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="categoryName" /> è <see langword="null" />.  
  
oppure 
L'elemento <paramref name="counterName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> è una stringa vuota ("").  
  
oppure 
<paramref name="machineName" /> non è valido.</exception>
        <exception cref="T:System.InvalidOperationException">Il nome della categoria non esiste.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura delle categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Registra una categoria personalizzata di contatori delle prestazioni e uno o più contatori con il sistema.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.CounterCreationDataCollection -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, counterData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" />
      </Parameters>
      <Docs>
        <param name="categoryName">Il nome della categoria personalizzata di contatori delle prestazioni da creare e registrare con il sistema.</param>
        <param name="categoryHelp">Una descrizione della categoria personalizzata.</param>
        <param name="counterData">Un oggetto <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> che specifica i contatori da creare come parte della nuova categoria.</param>
        <summary>Registra la categoria personalizzata di contatori delle prestazioni contenente i contatori specificati sul computer locale.</summary>
        <returns>Un oggetto <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> associato alla nuova categoria personalizzata o oggetto delle prestazioni.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 L'esempio di codice seguente determina se un <xref:System.Diagnostics.PerformanceCounterCategory> oggetto denominato "orders" è presente. Se non viene creato il <xref:System.Diagnostics.PerformanceCounterCategory> oggetto utilizzando un <xref:System.Diagnostics.CounterCreationDataCollection> oggetto che contiene due contatori delle prestazioni.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Un nome di contatore specificato nell'insieme <paramref name="counterData" /> è <see langword="null" /> oppure una stringa vuota ("").  
  
oppure 
Un contatore specificato nell'insieme <paramref name="counterData" /> è già presente.  
  
oppure 
La sintassi del parametro <paramref name="counterName" /> non è valida. Probabilmente contiene caratteri di barra rovesciata ("\\") o ha una lunghezza maggiore di 80 caratteri.</exception>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="categoryName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La categoria è già presente  sul computer locale.  
  
oppure 
Il layout dell'insieme <paramref name="counterData" /> non è corretto per i contatori di base. Un contatore del tipo <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> o <see langword="SampleCounter" /> deve essere seguito immediatamente da uno dei tipi di contatore di base (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> o <see langword="SampleBase" />).</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Per eseguire attività amministrative su categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.PerformanceCounterCategoryType * System.Diagnostics.CounterCreationDataCollection -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, categoryType, counterData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" />
      </Parameters>
      <Docs>
        <param name="categoryName">Il nome della categoria personalizzata di contatori delle prestazioni da creare e registrare con il sistema.</param>
        <param name="categoryHelp">Una descrizione della categoria personalizzata.</param>
        <param name="categoryType">Uno dei valori di <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />.</param>
        <param name="counterData">Un oggetto <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> che specifica i contatori da creare come parte della nuova categoria.</param>
        <summary>Registra la categoria personalizzata di contatori delle prestazioni contenente i contatori specificati sul computer locale.</summary>
        <returns>Un oggetto <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> associato alla nuova categoria personalizzata o oggetto delle prestazioni.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `categoryType` parametro specifica se la categoria del contatore delle prestazioni è a istanza singola o multi-istanza. Per impostazione predefinita, una categoria è a istanza singola quando viene creata e diventa multi-istanza quando viene aggiunta un'altra istanza. Le categorie vengono create quando un'applicazione è configurata e le istanze vengono aggiunte in fase di esecuzione. Nelle versioni 1.0 e 1.1 di .NET Framework, non è necessario sapere se una categoria di contatori delle prestazioni è a istanza multipla o singola istanza. Nel [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], il <xref:System.Diagnostics.PerformanceCounterCategoryType> enumerazione viene utilizzata per indicare se un contatore delle prestazioni può avere più istanze.  
  
 Categorie di contatori delle prestazioni installate con il [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] utilizzo della memoria condivisa separata, con ogni categoria di contatori delle prestazioni disponga della propria memoria.  È possibile specificare le dimensioni della memoria condivisa separata tramite la creazione di un valore DWORD denominato FileMappingSize nella chiave del Registro di sistema HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<il nome di categoria >* \ Prestazioni. Il valore FileMappingSize è impostato per le dimensioni della memoria condivisa della categoria. La dimensione predefinita è 131.072 decimale. Se il valore FileMappingSize non è presente, il `fileMappingSize` valore dell'attributo di `performanceCounters` viene usato l'elemento specificato nel file Machine. config, causando un ulteriore sovraccarico per l'elaborazione di file di configurazione. È possibile realizzare un miglioramento delle prestazioni per l'avvio dell'applicazione impostando le dimensioni del mapping dei file del Registro di sistema.  
  
> [!NOTE]
>  È consigliabile che è possibile creare nuove categorie di contatori delle prestazioni durante l'installazione dell'applicazione, non durante l'esecuzione dell'applicazione. In questo modo ora il sistema operativo aggiornare l'elenco di categorie di contatori delle prestazioni registrati. Se l'elenco non è stato aggiornato, il tentativo di usare la categoria avrà esito negativo.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> (metodo). Nell'esempio viene illustrato come creare una personalizzata, categoria di contatori delle prestazioni di più istanze per il numero di ordini al secondo.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Un nome di contatore specificato nell'insieme <paramref name="counterData" /> è <see langword="null" /> oppure una stringa vuota ("").  
  
oppure 
Un contatore specificato nell'insieme <paramref name="counterData" /> è già presente.  
  
oppure 
 La sintassi del parametro <paramref name="counterName" /> non è valida. Probabilmente contiene caratteri di barra rovesciata ("\\") o ha una lunghezza maggiore di 80 caratteri.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> è <see langword="null" />.  
  
oppure 
 <paramref name="counterData" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Il valore <paramref name="categoryType" /> non è compreso nell'intervallo dei valori seguenti: <see langword="MultiInstance" />, <see langword="SingleInstance" /> o <see langword="Unknown" />.</exception>
        <exception cref="T:System.InvalidOperationException">La categoria è già presente  sul computer locale.  
  
oppure 
Il layout dell'insieme <paramref name="counterData" /> non è corretto per i contatori di base. Un contatore del tipo <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> o <see langword="SampleCounter" /> deve essere seguito immediatamente da uno dei tipi di contatore di base (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> o <see langword="SampleBase" />).</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Per eseguire attività amministrative su categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, counterName, counterHelp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="counterHelp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Il nome della categoria personalizzata di contatori delle prestazioni da creare e registrare con il sistema.</param>
        <param name="categoryHelp">Una descrizione della categoria personalizzata.</param>
        <param name="counterName">Il nome di un nuovo contatore di tipo <see langword="NumberOfItems32" /> da creare come parte della nuova categoria.</param>
        <param name="counterHelp">Una descrizione del contatore associata alla nuova categoria personalizzata.</param>
        <summary>Registra una categoria personalizzata di contatori delle prestazioni contenente un solo contatore di tipo <see langword="NumberOfItems32" /> sul computer locale.</summary>
        <returns>Un oggetto <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> associato alla nuova categoria di sistema o oggetto delle prestazioni.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 L'esempio di codice seguente crea una <xref:System.Diagnostics.PerformanceCounterCategory> e singolo <xref:System.Diagnostics.PerformanceCounter> con il testo della Guida in linea per ognuno, utilizzando il <xref:System.Diagnostics.PerformanceCounterCategory.Create%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> (metodo).  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatcreate.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatcreate.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="counterName" /> è <see langword="null" /> o è una stringa vuota ("").  
  
oppure 
Il contatore specificato dal parametro <paramref name="counterName" /> esiste già.  
  
oppure 
 La sintassi del parametro <paramref name="counterName" /> non è valida. Probabilmente contiene caratteri di barra rovesciata ("\\") o ha una lunghezza maggiore di 80 caratteri.</exception>
        <exception cref="T:System.InvalidOperationException">La categoria è già presente  sul computer locale.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> è <see langword="null" />.  
  
oppure 
 <paramref name="counterHelp" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Per eseguire attività amministrative su categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.PerformanceCounterCategoryType * string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, categoryType, counterName, counterHelp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="counterHelp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Il nome della categoria personalizzata di contatori delle prestazioni da creare e registrare con il sistema.</param>
        <param name="categoryHelp">Una descrizione della categoria personalizzata.</param>
        <param name="categoryType">Uno dei valori di <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> che specifica se la categoria è <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />, <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" /> o <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" />.</param>
        <param name="counterName">Il nome di un nuovo contatore da creare nel contesto della nuova categoria.</param>
        <param name="counterHelp">Una descrizione del contatore associata alla nuova categoria personalizzata.</param>
        <summary>Registra la categoria personalizzata di contatori delle prestazioni contenente un solo contatore di tipo <see cref="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" /> sul computer locale.</summary>
        <returns>Un oggetto <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> associato alla nuova categoria di sistema o oggetto delle prestazioni.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il `categoryType` parametro specifica se la categoria del contatore delle prestazioni è a istanza singola o multi-istanza. Per impostazione predefinita, una categoria è a istanza singola quando viene creata e diventa multi-istanza quando viene aggiunta un'altra istanza. Le categorie vengono create quando un'applicazione è configurata e le istanze vengono aggiunte in fase di esecuzione. Nelle versioni 1.0 e 1.1 di .NET Framework, non è necessario sapere se una categoria di contatori delle prestazioni è a istanza multipla o singola istanza. Nel [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], il <xref:System.Diagnostics.PerformanceCounterCategoryType> enumerazione viene utilizzata per indicare se un contatore delle prestazioni può avere più istanze.  
  
 Categorie di contatori delle prestazioni installate con il [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] utilizzo della memoria condivisa separata, con ogni categoria di contatori delle prestazioni disponga della propria memoria. È possibile specificare le dimensioni della memoria condivisa separata tramite la creazione di un valore DWORD denominato FileMappingSize nella chiave del Registro di sistema HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<il nome di categoria >* \ Prestazioni. Il valore FileMappingSize è impostato per le dimensioni della memoria condivisa della categoria. La dimensione predefinita è 131.072 decimale. Se il valore FileMappingSize non è presente, il `fileMappingSize` valore dell'attributo di `performanceCounters` viene usato l'elemento specificato nel file Machine. config, causando un ulteriore sovraccarico per l'elaborazione di file di configurazione. È possibile realizzare un miglioramento delle prestazioni per l'avvio dell'applicazione impostando le dimensioni del mapping dei file del Registro di sistema.  
  
> [!NOTE]
>  È consigliabile che è possibile creare nuove categorie di contatori delle prestazioni durante l'installazione dell'applicazione, non durante l'esecuzione dell'applicazione. In questo modo ora il sistema operativo aggiornare l'elenco di categorie di contatori delle prestazioni registrati. Se l'elenco non è stato aggiornato, il tentativo di usare la categoria avrà esito negativo.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo del <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> (metodo). Nell'esempio viene illustrato come creare una categoria di contatori delle prestazioni personalizzati a istanza singola.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#3)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="counterName" /> è <see langword="null" /> o è una stringa vuota ("").  
  
oppure 
Il contatore specificato dal parametro <paramref name="counterName" /> esiste già.  
  
oppure 
 La sintassi del parametro <paramref name="counterName" /> non è valida. Probabilmente contiene caratteri di barra rovesciata ("\\") o ha una lunghezza maggiore di 80 caratteri.</exception>
        <exception cref="T:System.InvalidOperationException">La categoria è già presente  sul computer locale.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> è <see langword="null" />.  
  
oppure 
 <paramref name="counterHelp" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Per eseguire attività amministrative su categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member Delete : string -&gt; unit" Usage="System.Diagnostics.PerformanceCounterCategory.Delete categoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Il nome della categoria personalizzata di contatori delle prestazioni da eliminare.</param>
        <summary>Rimuove la categoria e i contatori associati dal computer locale.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile eliminare solo categorie di contatori delle prestazioni personalizzati dal sistema. È possibile eliminare un contatore da una categoria. A tale scopo, eliminare la categoria e ricreare la categoria con i contatori che si desidera mantenere. Per evitare un'eccezione, verificare che la categoria esiste prima di provare a eliminarlo.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> metodo per eliminare un <xref:System.Diagnostics.PerformanceCounterCategory> e il <xref:System.Diagnostics.PerformanceCounter> gli oggetti in esso contenuti.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatDelete.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatdelete.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="categoryName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La sintassi del parametro <paramref name="categoryName" /> non è valida. Probabilmente contiene caratteri di barra rovesciata ("\\") o ha una lunghezza maggiore di 80 caratteri.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.InvalidOperationException">La categoria non può essere eliminata perché non è una categoria personalizzata.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura delle categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Exists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se la categoria è registrata sul sistema.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.Exists categoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Il nome della categoria del contatore delle prestazioni da ricercare.</param>
        <summary>Determina se la categoria è registrata sul computer locale.</summary>
        <returns>
          <see langword="true" /> se la categoria è registrata; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> metodo può comportare una notevole riduzione delle prestazioni mentre vengono controllati tutti i contatori delle prestazioni nel computer per la disponibilità. Se si sta scrivendo solo in un contatore delle prestazioni, è possibile evitare la ricerca globale per i contatori delle prestazioni tramite la creazione del contatore delle prestazioni quando l'applicazione viene installata e supponendo che la categoria non esiste durante l'accesso del contatore. Non è possibile evitare la ricerca dei contatori delle prestazioni durante la lettura dai contatori delle prestazioni.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 L'esempio di codice seguente determina se un <xref:System.Diagnostics.PerformanceCounterCategory> oggetto denominato "orders" è presente. Se non viene creato il <xref:System.Diagnostics.PerformanceCounterCategory> oggetto utilizzando un <xref:System.Diagnostics.CounterCreationDataCollection> oggetto che contiene due contatori delle prestazioni.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="categoryName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="categoryName" /> è una stringa vuota ("").</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura delle categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member Exists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.Exists (categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Il nome della categoria del contatore delle prestazioni da ricercare.</param>
        <param name="machineName">Il nome del computer da esaminare per la categoria.</param>
        <summary>Determina se la categoria è registrata sul computer specificato.</summary>
        <returns>
          <see langword="true" /> se la categoria è registrata; in caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare il <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> metodo può comportare una notevole riduzione delle prestazioni mentre vengono controllati tutti i contatori delle prestazioni nel computer per la disponibilità. Se si sta scrivendo solo in un contatore delle prestazioni, è possibile evitare la ricerca globale per i contatori delle prestazioni tramite la creazione del contatore delle prestazioni quando l'applicazione viene installata e supponendo che la categoria non esiste durante l'accesso del contatore. Non è possibile evitare la ricerca dei contatori delle prestazioni durante la lettura dai contatori delle prestazioni.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 L'esempio seguente determina se un <xref:System.Diagnostics.PerformanceCounterCategory> oggetto denominato `Orders` esiste. Se non esiste, l'esempio crea il <xref:System.Diagnostics.PerformanceCounterCategory> oggetto utilizzando un <xref:System.Diagnostics.CounterCreationDataCollection> oggetto che contiene due contatori delle prestazioni.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="categoryName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="categoryName" /> è una stringa vuota ("").  
  
oppure 
Il parametro <paramref name="machineName" /> non è valido.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.IO.IOException">Impossibile trovare il percorso di rete.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Il chiamante non dispone dell'autorizzazione richiesta.  
  
oppure 
Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura delle categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCategories">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera un elenco di categorie di contatori delle prestazioni registrate in un computer.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories () As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories();" />
      <MemberSignature Language="F#" Value="static member GetCategories : unit -&gt; System.Diagnostics.PerformanceCounterCategory[]" Usage="System.Diagnostics.PerformanceCounterCategory.GetCategories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera un elenco di categorie di contatori delle prestazioni registrate sul computer locale.</summary>
        <returns>Una matrice di oggetti <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> che indica le categorie registrate sul computer locale.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> per restituire una matrice di <xref:System.Diagnostics.PerformanceCounterCategory> oggetti dal computer locale o in un computer specifico. La funzione converte il <xref:System.Diagnostics.PerformanceCounterCategory> matrice in una matrice di nomi di categoria, che consente di ordinare e di cui viene visualizzato per l'utente. Il <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> overload viene selezionata in base se è stato specificato un nome di computer.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura delle categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories (machineName As String) As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetCategories : string -&gt; System.Diagnostics.PerformanceCounterCategory[]" Usage="System.Diagnostics.PerformanceCounterCategory.GetCategories machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">Il computer sul quale effettuare la ricerca.</param>
        <summary>Recupera un elenco di categorie di contatori delle prestazioni registrate sul computer specificato.</summary>
        <returns>Una matrice di oggetti <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> che indica le categorie registrate sul computer specificato.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per recuperare le categorie nel computer locale, usare un altro overload o passare "." come il `machineName` parametro.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 Il codice seguente viene illustrato come utilizzare il <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> per restituire una matrice di <xref:System.Diagnostics.PerformanceCounterCategory> oggetti dal computer locale o in un computer specifico. La funzione converte il <xref:System.Diagnostics.PerformanceCounterCategory> matrice in una matrice di nomi di categoria, che consente di ordinare e di cui viene visualizzato per l'utente. Il <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> overload viene selezionata in base se è stato specificato un nome di computer.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="machineName" /> non è valido.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura delle categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCounters">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera un elenco di contatori in questa categoria di contatori delle prestazioni.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters () As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters();" />
      <MemberSignature Language="F#" Value="member this.GetCounters : unit -&gt; System.Diagnostics.PerformanceCounter[]" Usage="performanceCounterCategory.GetCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera un elenco di contatori in una categoria di contatori delle prestazioni che contiene esattamente un'istanza.</summary>
        <returns>Una matrice di oggetti <see cref="T:System.Diagnostics.PerformanceCounter" /> che indica i contatori associati a questa categoria di contatori delle prestazioni a una istanza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sulle istanze dell'oggetto delle prestazioni, vedere il <xref:System.Diagnostics.PerformanceCounter> Cenni preliminari sulla classe.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 Esempio di codice seguente ottiene un elenco del <xref:System.Diagnostics.PerformanceCounter> oggetti un <xref:System.Diagnostics.PerformanceCounterCategory>. Viene innanzitutto creata una <xref:System.Diagnostics.PerformanceCounterCategory> con il costruttore appropriato, basata sul fatto che è stato specificato un nome di computer. Viene quindi usato il <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> per restituire una matrice di <xref:System.Diagnostics.PerformanceCounter> oggetti, selezionando il <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> overload basato sul fatto che è stato specificato un nome di istanza.  
  
 Ciò <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters> overload avrà esito negativo a meno che non viene usato con una categoria a istanza singola.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La categoria non è una singola istanza.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.InvalidOperationException">Alla categoria non è associata un'istanza.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters (instanceName As String) As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.GetCounters : string -&gt; System.Diagnostics.PerformanceCounter[]" Usage="performanceCounterCategory.GetCounters instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">L'istanza dell'oggetto delle prestazioni per la quale recuperare un elenco di contatori associati.</param>
        <summary>Recupera un elenco di contatori in una categoria di contatori delle prestazioni che contiene una o più istanze.</summary>
        <returns>Una matrice di oggetti <see cref="T:System.Diagnostics.PerformanceCounter" /> che indica i contatori associati all'istanza dell'oggetto specificato di questa categoria di contatori delle prestazioni.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per rappresentare una categoria a istanza singola, passare una stringa vuota ("") per il `instanceName` parametro.  
  
 Per altre informazioni sulle istanze dell'oggetto delle prestazioni, vedere il <xref:System.Diagnostics.PerformanceCounter> Cenni preliminari sulla classe.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 Esempio di codice seguente ottiene un elenco del <xref:System.Diagnostics.PerformanceCounter> oggetti un <xref:System.Diagnostics.PerformanceCounterCategory>. Viene innanzitutto creata una <xref:System.Diagnostics.PerformanceCounterCategory> con il costruttore appropriato, basata sul fatto che è stato specificato un nome di computer. Viene quindi usato il <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> per restituire una matrice di <xref:System.Diagnostics.PerformanceCounter> oggetti, selezionando il <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> overload basato sul fatto che è stato specificato un nome di istanza.  
  
 Ciò <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%28System.String%29> overload avrà esito negativo a meno che non viene usato con una categoria che contiene le istanze.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="instanceName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> di questa istanza di <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> non è stata impostata.  
  
oppure 
La categoria non contiene l'istanza specificata dal parametro <paramref name="instanceName" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetInstanceNames">
      <MemberSignature Language="C#" Value="public string[] GetInstanceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetInstanceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstanceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetInstanceNames();" />
      <MemberSignature Language="F#" Value="member this.GetInstanceNames : unit -&gt; string[]" Usage="performanceCounterCategory.GetInstanceNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera l'elenco di istanze dell'oggetto delle prestazioni associate a questa categoria.</summary>
        <returns>Una matrice di stringhe che rappresentano i nomi delle istanze degli oggetti delle prestazioni associate a questa categoria oppure, se la categoria contiene soltanto un'istanza dell'oggetto delle prestazioni, una matrice a una sola voce che contiene una stringa vuota ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 Esempio di codice seguente ottiene un elenco del <xref:System.Diagnostics.PerformanceCounter> oggetti un <xref:System.Diagnostics.PerformanceCounterCategory>. Viene innanzitutto creata una <xref:System.Diagnostics.PerformanceCounterCategory> oggetto, utilizzando il costruttore appropriato basato sul fatto che è stato specificato un nome di computer. Quindi, utilizza <xref:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames%2A> per restituire i nomi delle istanze sotto forma di matrice di <xref:System.String>, che consente di ordinare e di cui viene visualizzato.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetinst.cpp#6)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetinst.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetinst.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> è <see langword="null" />. È probabile che la proprietà non sia stata impostata.  
  
oppure 
Alla categoria non è associata un'istanza.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InstanceExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina se la categoria contiene l'istanza dell'oggetto delle prestazioni specificato.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public bool InstanceExists (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InstanceExists(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InstanceExists (instanceName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InstanceExists(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.InstanceExists : string -&gt; bool" Usage="performanceCounterCategory.InstanceExists instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">L'istanza dell'oggetto delle prestazioni da ricercare in questa categoria di contatori delle prestazioni.</param>
        <summary>Determina se l'istanza dell'oggetto delle prestazioni specificato è presente nella categoria identificata dalla proprietà <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> di questo oggetto <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />.</summary>
        <returns>
          <see langword="true" /> se la categoria contiene l'istanza dell'oggetto delle prestazioni specificato; in caso contrario, <see langword="false" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo overload del metodo <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> non è `static`. Richiede la creazione di un <xref:System.Diagnostics.PerformanceCounterCategory> oggetto e impostare il <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> proprietà.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 L'esempio di codice seguente determina se un <xref:System.Diagnostics.PerformanceCounter> istanza esiste all'interno di un <xref:System.Diagnostics.PerformanceCounterCategory>. Viene innanzitutto creata una <xref:System.Diagnostics.PerformanceCounterCategory> oggetto, utilizzando il costruttore appropriato basato sul fatto che è stato specificato un nome di computer. Usa quindi <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%28System.String%29> per determinare se l'istanza specificata esista, quindi informa l'utente. Se viene specificato alcun nome di istanza, l'esempio Usa il nome di istanza singola predefinito.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcounterobjinstexists.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjinstexists.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> è <see langword="null" />. È probabile che la proprietà non sia stata impostata.</exception>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="instanceName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura delle categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member InstanceExists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.InstanceExists (instanceName, categoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">L'istanza dell'oggetto delle prestazioni da ricercare.</param>
        <param name="categoryName">La categoria di contatori delle prestazioni da cercare.</param>
        <summary>Determina se una categoria specificata sul computer locale contiene l'istanza dell'oggetto delle prestazioni specificato.</summary>
        <returns>
          <see langword="true" /> se la categoria contiene l'istanza dell'oggetto delle prestazioni specificato; in caso contrario, <see langword="false" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è possibile determinare la presenza di un'istanza dell'oggetto delle prestazioni in un computer senza specificare una categoria specifica per la ricerca.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 Il codice seguente usa l'overload statici di <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> per determinare se il dato <xref:System.Diagnostics.PerformanceCounter> esiste nell'istanza il <xref:System.Diagnostics.PerformanceCounterCategory>. L'overload è selezionata in base se viene specificato un nome di computer. Se viene specificato alcun nome di istanza, l'esempio Usa il nome di istanza singola predefinito.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="instanceName" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="categoryName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="categoryName" /> è una stringa vuota ("").</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura delle categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member InstanceExists : string * string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.InstanceExists (instanceName, categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">L'istanza dell'oggetto delle prestazioni da ricercare.</param>
        <param name="categoryName">La categoria di contatori delle prestazioni da cercare.</param>
        <param name="machineName">Il nome del computer sul quale ricercare la coppia di istanze della categoria.</param>
        <summary>Determina se una categoria specificata su un particolare computer contiene l'istanza dell'oggetto delle prestazioni specificato.</summary>
        <returns>
          <see langword="true" /> se la categoria contiene l'istanza dell'oggetto delle prestazioni specificato; in caso contrario, <see langword="false" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non è possibile determinare la presenza di un'istanza dell'oggetto delle prestazioni in un computer senza specificare una categoria specifica per la ricerca.  
  
 È possibile usare "." per specificare il computer locale.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 Il codice seguente usa l'overload statici di <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> per determinare se il dato <xref:System.Diagnostics.PerformanceCounter> esiste nell'istanza il <xref:System.Diagnostics.PerformanceCounterCategory>. L'overload è selezionata in base se viene specificato un nome di computer. Se viene specificato alcun nome di istanza, l'esempio Usa il nome di istanza singola predefinito.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="instanceName" /> è <see langword="null" />.  
  
oppure 
Il valore del parametro <paramref name="categoryName" /> è <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Il parametro <paramref name="categoryName" /> è una stringa vuota ("").  
  
oppure 
Il parametro <paramref name="machineName" /> non è valido.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura delle categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il nome del computer sul quale è presente questa categoria.</summary>
        <value>Il nome del computer sul quale sono presenti la categoria del contatore delle prestazioni e i contatori associati.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'esempio di codice seguente crea una <xref:System.Diagnostics.PerformanceCounterCategory> con il <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor> costruttore. Verrà chiesto all'utente per il <xref:System.Diagnostics.PerformanceCounterCategory> e i nomi dei computer, quindi imposta le <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> e <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> proprietà rispetto ai valori immessi. Visualizza quindi i valori del <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, e <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> delle proprietà, oppure viene visualizzato un messaggio di errore se il <xref:System.Diagnostics.PerformanceCounterCategory> non è accessibile.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La sintassi della proprietà <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> non è valida.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura delle categorie di contatori delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="ReadCategory">
      <MemberSignature Language="C#" Value="public System.Diagnostics.InstanceDataCollectionCollection ReadCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.InstanceDataCollectionCollection ReadCategory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadCategory () As InstanceDataCollectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::InstanceDataCollectionCollection ^ ReadCategory();" />
      <MemberSignature Language="F#" Value="member this.ReadCategory : unit -&gt; System.Diagnostics.InstanceDataCollectionCollection" Usage="performanceCounterCategory.ReadCategory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.InstanceDataCollectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legge tutti i dati relativi ai contatori e alle istanze dell'oggetto delle prestazioni associati a questa categoria di contatori delle prestazioni.</summary>
        <returns>Un oggetto <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" /> che contiene i dati relativi ai contatori e alle istanze dell'oggetto delle prestazioni della categoria.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario impostare il <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> proprietà prima di chiamare <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A>.  
  
 La lettura in una sola volta l'intera categoria può essere più efficiente la lettura di un singolo contatore a causa della modalità che il sistema fornisce i dati.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista e versioni successive, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista e versioni successive, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista e versioni successive i privilegi di un utente sono determinati dalla funzionalità Controllo dell'account utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 L'esempio di codice seguente crea una <xref:System.Diagnostics.PerformanceCounterCategory> per un determinato <xref:System.Diagnostics.PerformanceCounterCategory> nome. Usa quindi <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> per restituire un' <xref:System.Diagnostics.InstanceDataCollectionCollection> che contiene i dati dell'istanza per tutte le istanze del <xref:System.Diagnostics.PerformanceCounter> oggetti all'interno di <xref:System.Diagnostics.PerformanceCounterCategory>.  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#6)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> è <see langword="null" />. È probabile che la proprietà non sia stata impostata.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Una chiamata ad un'API di sistema sottostante non ha avuto esito positivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Codice eseguito senza privilegi di amministratore ha tentato di leggere un contatore delle prestazioni.</exception>
        <altmember cref="T:System.Diagnostics.InstanceDataCollectionCollection" />
        <altmember cref="T:System.Diagnostics.InstanceDataCollection" />
        <altmember cref="T:System.Diagnostics.InstanceData" />
      </Docs>
    </Member>
  </Members>
</Type>