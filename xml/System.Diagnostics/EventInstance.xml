<Type Name="EventInstance" FullName="System.Diagnostics.EventInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1fcc37af9f4bf30ee84633c9cccf19d242a1bba9" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46675519" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class EventInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventInstance" />
  <TypeSignature Language="F#" Value="type EventInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta un'informazione nella lingua di sistema per una voce del log eventi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usare <xref:System.Diagnostics.EventInstance> per scrivere una voce del registro eventi con un identificatore di risorsa, anziché un valore stringa. Per scrivere una voce del registro eventi, inizializzare il <xref:System.Diagnostics.EventInstance.InstanceId%2A> proprietà e passare l'istanza per il <xref:System.Diagnostics.EventLog.WriteEvent%2A> (metodo). Il Visualizzatore eventi Usa l'identificatore dell'istanza per individuare e visualizzare la stringa corrispondente dal file di risorse localizzato in base alle impostazioni della lingua corrente. Prima di scrivere eventi usando gli identificatori di risorsa, è necessario registrare l'origine evento con il corrispondente file di risorse.  
  
 Quando si scrivono gli eventi, è possibile impostare il <xref:System.Diagnostics.EventInstance.EntryType%2A> proprietà per specificare l'icona che consente di visualizzare nel Visualizzatore eventi per la voce. È inoltre possibile specificare un <xref:System.Diagnostics.EventInstance.CategoryId%2A> proprietà per specificare la categoria che consente di visualizzare nel Visualizzatore eventi per la voce.  
  
 Il Visualizzatore eventi utilizza la categoria per filtrare gli eventi scritti da un'origine evento. Il Visualizzatore eventi consente di visualizzare la categoria come valore numerico oppure è possibile usare la categoria come identificatore di risorsa per visualizzare una stringa di categoria localizzata.  
  
 Per visualizzare le stringhe di categoria localizzata nel Visualizzatore eventi, è necessario usare un'origine evento configurato con un file di risorse di categoria e impostare il <xref:System.Diagnostics.EventInstance.CategoryId%2A> a un identificatore di risorsa nel file di risorse della categoria. Se l'origine evento non dispone di un file di risorse di categoria configurati o specificato <xref:System.Diagnostics.EventInstance.CategoryId%2A> indicizza una stringa nel file di risorse di categoria e quindi nel Visualizzatore eventi consente di visualizzare il valore della categoria numerica per la voce. Configurare il file di risorse di categoria, oltre al numero di stringhe di categoria nel file di risorse, usando il <xref:System.Diagnostics.EventLogInstaller> o il <xref:System.Diagnostics.EventSourceCreationData> classe.  
  
 È necessario registrare un'origine per un log eventi prima di usare <xref:System.Diagnostics.EventInstance> per scrivere un evento con il <xref:System.Diagnostics.EventLog.WriteEvent%2A> (metodo). L'origine deve essere configurato per la scrittura di voci localizzate nel registro e l'origine deve definire almeno un file di risorse del messaggio.  
  
 Creare la nuova origine evento durante l'installazione dell'applicazione. In questo modo ora il sistema operativo aggiornare l'elenco delle origini degli eventi registrati e le relative configurazioni. Se il sistema operativo non è aggiornato l'elenco di origini evento e si tenta di scrivere un evento con la nuova origine, che l'operazione di scrittura avrà esito negativo. È possibile configurare una nuova origine usando un <xref:System.Diagnostics.EventLogInstaller>, o tramite il <xref:System.Diagnostics.EventLog.CreateEventSource%2A> (metodo). È necessario disporre dei diritti amministrativi nel computer per creare una nuova origine evento.  
  
 Per informazioni dettagliate sulla definizione dei messaggi di evento e la creazione di file di risorse registro eventi, vedere l'argomento "Messaggio del compilatore" nella documentazione di Platform SDK [ http://msdn.microsoft.com ](http://msdn.microsoft.com).  
  
   
  
## Examples  
 Esempio di codice seguente scrive una voce di evento di tipo informativo e quindi riutilizza il <xref:System.Diagnostics.EventInstance> per scrivere una voce per un evento di avviso in un log eventi esistente. Il testo del messaggio di evento è specificato utilizzando un identificatore di risorsa in un file di risorse del messaggio. L'esempio di codice presuppone che il file di risorse corrispondente del messaggio sia stato registrato per l'origine.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 L'esempio di codice Usa il file di testo di messaggio seguente, generato nella libreria di risorse EventLogMsgs. Un file di testo del messaggio è l'origine da cui viene creato il file di risorse del messaggio. Il file di testo del messaggio definisce gli identificatori di risorsa e il testo per la categoria, messaggio di evento e le stringhe di inserimento di parametro.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
    <altmember cref="T:System.Diagnostics.EventLogEntry" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.Diagnostics.EventInstance" /> utilizzando informazioni nella lingua di sistema per definire una voce del log eventi.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventInstance (long instanceId, int categoryId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 instanceId, int32 categoryId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Long, categoryId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventInstance(long instanceId, int categoryId);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventInstance : int64 * int -&gt; System.Diagnostics.EventInstance" Usage="new System.Diagnostics.EventInstance (instanceId, categoryId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Int64" />
        <Parameter Name="categoryId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificatore di risorsa che corrisponde a una stringa definita nel file di risorse del messaggio dell'origine eventi.</param>
        <param name="categoryId">Un identificatore di risorsa che corrisponde a una stringa definita nel file di risorse della categoria dell'origine eventi o a zero, se non specifica nessuna categoria per l'evento.</param>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.Diagnostics.EventInstance" /> utilizzando gli identificatori di risorse specificati per il messaggio e il testo della categoria localizzati della voce dell'evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per scrivere una voce informativa in un log eventi, inizializzare un' <xref:System.Diagnostics.EventInstance> e passarlo al <xref:System.Diagnostics.EventLog.WriteEvent%2A> (metodo). Impostare il `instanceId` all'identificatore di risorsa del messaggio di evento nel corrispondente <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> proprietà per l'origine. Impostare il `categoryId` a un valore di categoria numerica, o l'identificatore di risorsa della categoria di eventi nel <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> proprietà per l'origine, impostare il `categoryId` su zero per nessuna categoria di eventi. Il <xref:System.Diagnostics.EventInstance.EntryType%2A> per la nuova istanza viene impostata su <xref:System.Diagnostics.EventLogEntryType.Information> per impostazione predefinita.  
  
 Il Visualizzatore eventi Usa gli identificatori di risorsa per visualizzare le stringhe corrispondenti dal file di risorse localizzati per l'origine. Prima di poter scrivere gli eventi utilizzando gli identificatori di risorsa, è necessario registrare l'origine con i corrispondenti file di risorse.  
  
   
  
## Examples  
 Esempio di codice seguente scrive una voce di evento di tipo informativo e quindi riutilizza il <xref:System.Diagnostics.EventInstance> per scrivere una voce per un evento di avviso in un log eventi esistente. Il testo del messaggio di evento è specificato utilizzando un identificatore di risorsa in un file di risorse del messaggio. L'esempio di codice presuppone che il file di risorse corrispondente del messaggio sia stato registrato per l'origine.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 L'esempio di codice Usa il file di testo di messaggio seguente, generato nella libreria di risorse EventLogMsgs. Un file di testo del messaggio è l'origine da cui viene creato il file di risorse del messaggio. Il file di testo del messaggio definisce gli identificatori di risorsa e il testo per la categoria, messaggio di evento e le stringhe di inserimento di parametro.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="instanceId" /> è un valore negativo o un valore maggiore di <see cref="F:System.UInt32.MaxValue" />.  
  
oppure 
Il parametro <paramref name="categoryId" /> è un valore negativo o un valore maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventInstance (long instanceId, int categoryId, System.Diagnostics.EventLogEntryType entryType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 instanceId, int32 categoryId, valuetype System.Diagnostics.EventLogEntryType entryType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Long, categoryId As Integer, entryType As EventLogEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventInstance(long instanceId, int categoryId, System::Diagnostics::EventLogEntryType entryType);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventInstance : int64 * int * System.Diagnostics.EventLogEntryType -&gt; System.Diagnostics.EventInstance" Usage="new System.Diagnostics.EventInstance (instanceId, categoryId, entryType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Int64" />
        <Parameter Name="categoryId" Type="System.Int32" />
        <Parameter Name="entryType" Type="System.Diagnostics.EventLogEntryType" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identificatore di risorsa che corrisponde a una stringa definita nel file di risorse del messaggio dell'origine eventi.</param>
        <param name="categoryId">Un identificatore di risorsa che corrisponde a una stringa definita nel file di risorse della categoria dell'origine eventi o a zero, se non specifica nessuna categoria per l'evento.</param>
        <param name="entryType">Valore <see cref="T:System.Diagnostics.EventLogEntryType" /> che indica il tipo di evento.</param>
        <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.Diagnostics.EventInstance" /> utilizzando gli identificatori di risorse specificati per il messaggio e il testo della categoria localizzati della voce dell'evento e il tipo di voce del log eventi specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per scrivere una voce in un log eventi, inizializzare un' <xref:System.Diagnostics.EventInstance> e passarlo al <xref:System.Diagnostics.EventLog.WriteEvent%2A> (metodo). Impostare il `instanceId` all'identificatore di risorsa del messaggio di evento nel corrispondente <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> proprietà per l'origine. Impostare il `categoryId` a un valore di categoria numerica, o l'identificatore di risorsa della categoria di eventi nel <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> proprietà per l'origine, impostare il `categoryId` su zero per nessuna categoria di eventi.  
  
 Il Visualizzatore eventi Usa gli identificatori di risorsa per visualizzare le stringhe corrispondenti dal file di risorse localizzati per l'origine. Prima di poter scrivere gli eventi utilizzando gli identificatori di risorsa, è necessario registrare l'origine con i corrispondenti file di risorse.  
  
 Impostare il `entryType` a uno dei tipi di movimento predefiniti. Il Visualizzatore eventi utilizza il tipo di evento per determinare quale icona visualizzare nella visualizzazione elenco del log eventi.  
  
   
  
## Examples  
 L'esempio di codice seguente scrive due voci di evento nel registro eventi di controllo `myNewLog`. L'esempio di codice crea una nuova origine evento e un nuovo registro eventi se non esistono nel computer locale. Il testo del messaggio di evento è specificato utilizzando un identificatore di risorsa in un file di risorse.  
  
 [!code-cpp[EventLog_WriteEvent#7](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#7)]
 [!code-csharp[EventLog_WriteEvent#7](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#7)]
 [!code-vb[EventLog_WriteEvent#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#7)]  
  
 L'esempio di codice Usa il file di testo di messaggio seguente, generato nella libreria di risorse EventLogMsgs. Un file di testo del messaggio è l'origine da cui viene creato il file di risorse del messaggio. Il file di testo del messaggio definisce gli identificatori di risorsa e il testo per la categoria, messaggio di evento e le stringhe di inserimento di parametro.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="entryType" /> non è un valore valido di <see cref="T:System.Diagnostics.EventLogEntryType" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="instanceId" /> è un valore negativo o un valore maggiore di <see cref="F:System.UInt32.MaxValue" />.  
  
oppure 
 <paramref name="categoryId" /> è un valore negativo o un valore maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
      </Docs>
    </Member>
    <Member MemberName="CategoryId">
      <MemberSignature Language="C#" Value="public int CategoryId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.CategoryId" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryId : int with get, set" Usage="System.Diagnostics.EventInstance.CategoryId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'identificatore di risorsa che specifica la categoria definita dall'applicazione della voce dell'evento.</summary>
        <value>Un valore numerico di categoria o un identificatore di risorsa che corrisponde a una stringa definita nel file di risorse della categoria dell'origine eventi. Il valore predefinito è zero, che significa che per la voce dell'evento non verrà visualizzata alcuna categoria.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Categorie di log eventi sono i valori definiti dall'applicazione che consentono di filtrare gli eventi, o di ottenere ulteriori informazioni sull'evento. Ad esempio, l'applicazione può definire categorie separate per i diversi componenti o diverse operazioni.  
  
 Impostare il <xref:System.Diagnostics.EventInstance.CategoryId%2A> proprietà per specificare la categoria che consente di visualizzare nel Visualizzatore eventi per la voce. Il Visualizzatore eventi consente di visualizzare la categoria come valore numerico, o può usare il <xref:System.Diagnostics.EventInstance.CategoryId%2A> come risorsa identificatore per visualizzare una stringa di categoria localizzata in base alle impostazioni della lingua corrente.  
  
 Per visualizzare le stringhe di categoria localizzata nel Visualizzatore eventi, è necessario usare un'origine evento configurato con un file di risorse di categoria e impostare il <xref:System.Diagnostics.EventInstance.CategoryId%2A> a un identificatore di risorsa nel file di risorse della categoria. Se l'origine evento non dispone di un file di risorse di categoria configurati o specificato <xref:System.Diagnostics.EventInstance.CategoryId%2A> indicizza una stringa nel file di risorse di categoria e quindi nel Visualizzatore eventi consente di visualizzare il valore della categoria numerica per la voce.  
  
 Prima di scrivere categorie di eventi utilizzando gli identificatori di risorsa, è necessario registrare l'origine con il corrispondente file di risorse. Configurare il file di risorse di categoria, oltre al numero di stringhe di categoria nel file di risorse, usando il <xref:System.Diagnostics.EventLogInstaller> o il <xref:System.Diagnostics.EventSourceCreationData> classe. Quando si definiscono le stringhe di categoria in un file di risorse, gli identificatori di risorsa della categoria devono essere numerati consecutivamente a partire da 1, fino a configurato <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> valore della proprietà.  
  
 Categorie di eventi sono facoltative. Se l'applicazione non utilizza le categorie, non impostare il <xref:System.Diagnostics.EventInstance.CategoryId%2A> per la voce del registro eventi.  
  
 Per informazioni dettagliate sulla definizione dei messaggi di evento e la creazione di file di risorse di eventi, vedere l'argomento "Messaggio del compilatore" nella documentazione di Platform SDK [ http://msdn.microsoft.com ](http://msdn.microsoft.com/). Per informazioni dettagliate sulla definizione di categorie di eventi nei file di risorse, vedere l'argomento "Categorie di eventi" in Platform SDK  
  
   
  
## Examples  
 Esempio di codice seguente scrive una voce di evento di tipo informativo e quindi riutilizza il <xref:System.Diagnostics.EventInstance> per scrivere una voce per un evento di avviso in un log eventi esistente. Il testo del messaggio di evento è specificato utilizzando un identificatore di risorsa in un file di risorse del messaggio. L'esempio di codice presuppone che il file di risorse corrispondente del messaggio sia stato registrato per l'origine.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 L'esempio di codice Usa il file di testo di messaggio seguente, generato nella libreria di risorse EventLogMsgs. Un file di testo del messaggio è l'origine da cui viene creato il file di risorse del messaggio. Il file di testo del messaggio definisce gli identificatori di risorsa e il testo per la categoria, messaggio di evento e le stringhe di inserimento di parametro.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La proprietà è impostata su un valore negativo o maggiore di <see cref="F:System.UInt16.MaxValue" />.</exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="EntryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLogEntryType EntryType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.EventLogEntryType EntryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.EntryType" />
      <MemberSignature Language="VB.NET" Value="Public Property EntryType As EventLogEntryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLogEntryType EntryType { System::Diagnostics::EventLogEntryType get(); void set(System::Diagnostics::EventLogEntryType value); };" />
      <MemberSignature Language="F#" Value="member this.EntryType : System.Diagnostics.EventLogEntryType with get, set" Usage="System.Diagnostics.EventInstance.EntryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogEntryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il tipo di evento della voce del log eventi.</summary>
        <value>Valore <see cref="T:System.Diagnostics.EventLogEntryType" /> che indica il tipo di voce dell'evento. Il valore predefinito è <see cref="F:System.Diagnostics.EventLogEntryType.Information" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogni evento è di un solo tipo, l'applicazione indica quando riferisce l'evento. Il Visualizzatore eventi utilizza il tipo di evento per determinare quale icona visualizzare nella visualizzazione elenco del log eventi.  
  
   
  
## Examples  
 Esempio di codice seguente scrive una voce di evento di tipo informativo e quindi riutilizza il <xref:System.Diagnostics.EventInstance> per scrivere una voce per un evento di avviso in un log eventi esistente. Il testo del messaggio di evento è specificato utilizzando un identificatore di risorsa in un file di risorse del messaggio. L'esempio di codice presuppone che il file di risorse corrispondente del messaggio sia stato registrato per l'origine.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 L'esempio di codice Usa il file di testo di messaggio seguente, generato nella libreria di risorse EventLogMsgs. Un file di testo del messaggio è l'origine da cui viene creato il file di risorse del messaggio. Il file di testo del messaggio definisce gli identificatori di risorsa e il testo per la categoria, messaggio di evento e le stringhe di inserimento di parametro.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">La proprietà non è impostata su un valore <see cref="T:System.Diagnostics.EventLogEntryType" /> valido.</exception>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.EntryType" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public long InstanceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceId As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceId { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : int64 with get, set" Usage="System.Diagnostics.EventInstance.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l'identificatore di risorsa che definisce il testo del messaggio per la voce dell'evento.</summary>
        <value>Identificatore di risorsa che corrisponde a una stringa definita nel file di risorse del messaggio dell'origine eventi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.EventInstance.InstanceId%2A> proprietà che identifica in modo univoco una voce di evento per un'origine di eventi configurata. Per gli eventi definiti in file di risorse di messaggio, il <xref:System.Diagnostics.EventInstance.InstanceId%2A> corrisponde all'identificatore di risorsa compilato dai campi di definizione del messaggio nel file di testo del messaggio. L'applicazione può scrivere le voci di registro eventi localizzata impostando il <xref:System.Diagnostics.EventInstance.InstanceId%2A> a un identificatore di risorsa. Il Visualizzatore eventi utilizza la <xref:System.Diagnostics.EventInstance.InstanceId%2A> identificatore di risorsa per trovare e visualizzare la stringa corrispondente dal file di risorse localizzate in base alle impostazioni della lingua corrente. Prima di scrivere eventi usando gli identificatori di risorsa, è necessario registrare l'origine con il corrispondente file di risorse.  
  
 Per informazioni dettagliate sulla definizione dei messaggi di evento e la creazione di file di risorse registro eventi, vedere l'argomento "Messaggio del compilatore" nella documentazione di Platform SDK [ http://msdn.microsoft.com ](http://msdn.microsoft.com/). Per ulteriori informazioni sugli identificatori di registro eventi, vedere l'argomento "Identificatori di evento" in Platform SDK.  
  
   
  
## Examples  
 Esempio di codice seguente scrive una voce di evento di tipo informativo e quindi riutilizza il <xref:System.Diagnostics.EventInstance> per scrivere una voce per un evento di avviso in un log eventi esistente. Il testo del messaggio di evento è specificato utilizzando un identificatore di risorsa in un file di risorse del messaggio. L'esempio di codice presuppone che il file di risorse corrispondente del messaggio sia stato registrato per l'origine.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 L'esempio di codice Usa il file di testo di messaggio seguente, generato nella libreria di risorse EventLogMsgs. Un file di testo del messaggio è l'origine da cui viene creato il file di risorse del messaggio. Il file di testo del messaggio definisce gli identificatori di risorsa e il testo per la categoria, messaggio di evento e le stringhe di inserimento di parametro.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La proprietà è impostata su un valore negativo o maggiore di <see cref="F:System.UInt32.MaxValue" />.</exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.InstanceId" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      </Docs>
    </Member>
  </Members>
</Type>