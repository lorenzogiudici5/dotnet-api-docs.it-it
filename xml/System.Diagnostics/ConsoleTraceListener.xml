<Type Name="ConsoleTraceListener" FullName="System.Diagnostics.ConsoleTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fb887e69cbce0df3845c3eef1e79b919a3ee40b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37664963" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConsoleTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConsoleTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConsoleTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class ConsoleTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConsoleTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type ConsoleTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="332fa-101">Viene indirizzato l'output di tracciatura e debug per l'output standard o il flusso di errore standard.</span>
      <span class="sxs-lookup">
        <span data-stu-id="332fa-101">Directs tracing or debugging output to either the standard output or the standard error stream.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332fa-102">Usare il <xref:System.Diagnostics.ConsoleTraceListener> classe per la scrittura di traccia e i messaggi nella console di debug.</span><span class="sxs-lookup"><span data-stu-id="332fa-102">Use the <xref:System.Diagnostics.ConsoleTraceListener> class to write trace and debugging messages to the console.</span></span> <span data-ttu-id="332fa-103">È possibile inizializzare un <xref:System.Diagnostics.ConsoleTraceListener> oggetto da scrivere i messaggi di traccia per il <xref:System.Console.Out%2A?displayProperty=nameWithType> flusso o il <xref:System.Console.Error%2A?displayProperty=nameWithType> flusso.</span><span class="sxs-lookup"><span data-stu-id="332fa-103">You can initialize a <xref:System.Diagnostics.ConsoleTraceListener> object to write trace messages to the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream or to the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="332fa-104"><xref:System.IDisposable> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="332fa-104"><xref:System.IDisposable> interface.</span></span> <span data-ttu-id="332fa-105">Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente.</span><span class="sxs-lookup"><span data-stu-id="332fa-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="332fa-106">Per eliminare il tipo direttamente, chiamare relativi <xref:System.IDisposable.Dispose%2A> metodo in un`try` / `catch` blocco.</span><span class="sxs-lookup"><span data-stu-id="332fa-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block.</span></span> <span data-ttu-id="332fa-107">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio `using` in C# o `Using` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="332fa-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="332fa-108">Per altre informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <xref:System.IDisposable> argomento relativo all'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="332fa-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="332fa-109">Della traccia e debug di output è abilitato, il <xref:System.Diagnostics.ConsoleTraceListener> i messaggi vengono scritti nell'oggetto specificato <xref:System.Console?displayProperty=nameWithType> flusso, che è simile al modo in cui i messaggi vengono scritti con la <xref:System.Console.Write%2A?displayProperty=nameWithType> o <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="332fa-109">When trace and debugging output is enabled, the <xref:System.Diagnostics.ConsoleTraceListener> messages are written to the specified <xref:System.Console?displayProperty=nameWithType> stream, which is similar to the way messages are written with the <xref:System.Console.Write%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="332fa-110">In un'applicazione console, il <xref:System.Console?displayProperty=nameWithType> flussi di errore e di output scrivono i messaggi alla finestra della console esistente oppure è possibile reindirizzare i flussi per scrivere un <xref:System.IO.TextWriter?displayProperty=nameWithType> istanza.</span><span class="sxs-lookup"><span data-stu-id="332fa-110">In a console application, the <xref:System.Console?displayProperty=nameWithType> output and error streams write messages to the existing console window, or you can redirect the streams to write to a <xref:System.IO.TextWriter?displayProperty=nameWithType> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="332fa-111">Se la console non esiste, come in un'applicazione basata su Windows, non vengono visualizzati i messaggi scritti nella console.</span><span class="sxs-lookup"><span data-stu-id="332fa-111">If the console does not exist, as in a Windows-based application, messages written to the console are not displayed.</span></span>  
  
 <span data-ttu-id="332fa-112">Aggiungere un <xref:System.Diagnostics.ConsoleTraceListener> oggetto appropriato <xref:System.Diagnostics.Trace.Listeners%2A> insieme se si desidera che i messaggi scritti tramite <xref:System.Diagnostics.Trace>, <xref:System.Diagnostics.TraceSource>, o <xref:System.Diagnostics.Debug> deve essere scritto nella console.</span><span class="sxs-lookup"><span data-stu-id="332fa-112">Add a <xref:System.Diagnostics.ConsoleTraceListener> object to the appropriate <xref:System.Diagnostics.Trace.Listeners%2A> collection if you want messages written through <xref:System.Diagnostics.Trace>, <xref:System.Diagnostics.TraceSource>, or <xref:System.Diagnostics.Debug> to be written to the console.</span></span> <span data-ttu-id="332fa-113">Inoltre, è possibile scrivere i messaggi direttamente alla console usando il <xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType> o <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="332fa-113">In addition, you can write messages directly to the console using the <xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="332fa-114">Il <xref:System.Diagnostics.Debug> e <xref:System.Diagnostics.Trace> condividono lo stesso <xref:System.Diagnostics.TraceListenerCollection> insieme, è possibile accedere tramite le rispettive `Listeners` proprietà.</span><span class="sxs-lookup"><span data-stu-id="332fa-114">The <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes share the same <xref:System.Diagnostics.TraceListenerCollection> collection, accessed through their respective `Listeners` properties.</span></span> <span data-ttu-id="332fa-115">Se si aggiunge un <xref:System.Diagnostics.ConsoleTraceListener> dell'oggetto alla raccolta utilizzando una di queste classi, l'altra classe usa automaticamente lo stesso listener.</span><span class="sxs-lookup"><span data-stu-id="332fa-115">If you add a <xref:System.Diagnostics.ConsoleTraceListener> object to the collection using one of these classes, the other class automatically uses the same listener.</span></span>  
  
 <span data-ttu-id="332fa-116">La maggior parte dei compilatori abilita la traccia ed eseguire il debug di output tramite i flag di compilazione condizionale.</span><span class="sxs-lookup"><span data-stu-id="332fa-116">Most compilers enable trace and debug output through conditional compilation flags.</span></span> <span data-ttu-id="332fa-117">Se non si abilita la tracciatura o di debug, i messaggi scritti tramite il <xref:System.Diagnostics.Debug?displayProperty=nameWithType> e <xref:System.Diagnostics.Trace?displayProperty=nameWithType> vengono ignorati.</span><span class="sxs-lookup"><span data-stu-id="332fa-117">If you do not enable tracing or debugging, the messages written through the <xref:System.Diagnostics.Debug?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace?displayProperty=nameWithType> classes are effectively ignored.</span></span> <span data-ttu-id="332fa-118">La sintassi per abilitare la traccia e l'output di debug è specifica del compilatore. Se si utilizzano i compilatori diversi da c# o Visual Basic, vedere la documentazione per il compilatore.</span><span class="sxs-lookup"><span data-stu-id="332fa-118">The syntax to enable trace and debug output is compiler specific; if you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="332fa-119">Per abilitare il debug in c#, aggiungere il **/d: debug**flag da riga di comando del compilatore quando si compila il codice oppure è possibile aggiungere **#define DEBUG** all'inizio del file app.</span><span class="sxs-lookup"><span data-stu-id="332fa-119">To enable debugging in C#, add the **/d:DEBUG**flag to the compiler command line when you compile your code, or you can add **#define DEBUG** to the top of your file.</span></span> <span data-ttu-id="332fa-120">In Visual Basic, aggiungere il **/d: debug = True** flag per la riga di comando del compilatore.</span><span class="sxs-lookup"><span data-stu-id="332fa-120">In Visual Basic, add the **/d:DEBUG=True** flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="332fa-121">Per abilitare la traccia in c#, aggiungere il **/d: Trace** flag alla riga di comando del compilatore quando compila il codice o si aggiungono **#define traccia** all'inizio del file.</span><span class="sxs-lookup"><span data-stu-id="332fa-121">To enable tracing in C#, add the **/d:TRACE** flag to the compiler command line when you compile your code, or add **#define TRACE** to the top of your file.</span></span> <span data-ttu-id="332fa-122">In Visual Basic, aggiungere il **/d: TRACE = True** flag per la riga di comando del compilatore.</span><span class="sxs-lookup"><span data-stu-id="332fa-122">In Visual Basic, add the **/d:TRACE=True** flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="332fa-123">È possibile aggiungere un <xref:System.Diagnostics.ConsoleTraceListener> dell'oggetto per il <xref:System.Diagnostics.Trace.Listeners%2A> raccolta presenti nel codice, è possibile aggiungere un <xref:System.Diagnostics.ConsoleTraceListener> dell'oggetto per il <xref:System.Diagnostics.Trace.Listeners%2A> raccolta tramite il file di configurazione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="332fa-123">You can add a <xref:System.Diagnostics.ConsoleTraceListener> object to the <xref:System.Diagnostics.Trace.Listeners%2A> collection in your code, or you can add a <xref:System.Diagnostics.ConsoleTraceListener> object to the <xref:System.Diagnostics.Trace.Listeners%2A> collection through the application configuration file.</span></span> <span data-ttu-id="332fa-124">Aggiungere il <xref:System.Diagnostics.ConsoleTraceListener> oggetto nel codice per scrivere i messaggi per un percorso di sezione o l'esecuzione di codice specifico.</span><span class="sxs-lookup"><span data-stu-id="332fa-124">Add the <xref:System.Diagnostics.ConsoleTraceListener> object in your code to write messages for a specific code section or execution path.</span></span> <span data-ttu-id="332fa-125">Aggiungere il <xref:System.Diagnostics.ConsoleTraceListener> oggetto nel file di configurazione dell'applicazione indirizzare tutte le traccia e debug messaggi alla console durante l'esecuzione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="332fa-125">Add the <xref:System.Diagnostics.ConsoleTraceListener> object in your application configuration file to direct all trace and debug messages to the console while the application executes.</span></span>  
  
 <span data-ttu-id="332fa-126">Per scrivere analisi e i messaggi nella console per una particolare sezione di codice di debug, inizializzare un <xref:System.Diagnostics.ConsoleTraceListener> dell'oggetto e aggiungerlo al <xref:System.Diagnostics.Trace.Listeners%2A> raccolta.</span><span class="sxs-lookup"><span data-stu-id="332fa-126">To write trace and debug messages to the console for a specific section of code, initialize a <xref:System.Diagnostics.ConsoleTraceListener> object and add it to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="332fa-127">Instrumentare la sezione di codice che contiene i messaggi utilizzando il <xref:System.Diagnostics.Trace> o <xref:System.Diagnostics.Debug> classi.</span><span class="sxs-lookup"><span data-stu-id="332fa-127">Instrument the section of code that contains messages using the <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> classes.</span></span> <span data-ttu-id="332fa-128">Alla fine della sezione di codice, rimuovere il <xref:System.Diagnostics.ConsoleTraceListener> dall'oggetto di <xref:System.Diagnostics.Trace.Listeners%2A> raccolta e chiamare il <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> metodo sul <xref:System.Diagnostics.ConsoleTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="332fa-128">At the end of the code section, remove the <xref:System.Diagnostics.ConsoleTraceListener> object from the <xref:System.Diagnostics.Trace.Listeners%2A> collection, and call the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method on the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span>  
  
 <span data-ttu-id="332fa-129">Per indirizzare tutte le analisi e i messaggi nella console di debug mentre è in esecuzione l'applicazione, aggiungere un <xref:System.Diagnostics.ConsoleTraceListener> oggetto nel file di configurazione dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="332fa-129">To direct all trace and debug messages to the console while the application executes, add a <xref:System.Diagnostics.ConsoleTraceListener> object to the application configuration file.</span></span> <span data-ttu-id="332fa-130">Modificare il file di configurazione che corrisponde al nome dell'applicazione o il file app. config in un [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] progetto.</span><span class="sxs-lookup"><span data-stu-id="332fa-130">Edit the configuration file that corresponds to the name of your application, or the app.config file in a [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] project.</span></span> <span data-ttu-id="332fa-131">In questo file, inserire un elemento per un <xref:System.Diagnostics.ConsoleTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="332fa-131">In this file, insert an element for a <xref:System.Diagnostics.ConsoleTraceListener>.</span></span>  
  
 <span data-ttu-id="332fa-132">L'esempio seguente aggiunge un <xref:System.Diagnostics.ConsoleTraceListener> oggetto denominato `configConsoleListener` per il <xref:System.Diagnostics.Trace.Listeners%2A> raccolta.</span><span class="sxs-lookup"><span data-stu-id="332fa-132">The following example adds a <xref:System.Diagnostics.ConsoleTraceListener> object named `configConsoleListener` to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="configConsoleListener"            type="System.Diagnostics.ConsoleTraceListener" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
 </configuration>  
```  
  
 <span data-ttu-id="332fa-133">Per informazioni dettagliate sull'aggiunta di listener di traccia nel file di configurazione dell'applicazione, vedere [ &lt;listener&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md).</span><span class="sxs-lookup"><span data-stu-id="332fa-133">For details about adding trace listeners in the application configuration file, see [&lt;listeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332fa-134">Esempio di codice seguente implementa un'applicazione console costituito da una classe con due metodi pubblici.</span><span class="sxs-lookup"><span data-stu-id="332fa-134">The following code example implements a console application consisting of a class with two public methods.</span></span>  
  
 <span data-ttu-id="332fa-135">Il `Main` metodo esamina gli argomenti della riga di comando e determina se l'output di traccia deve essere indirizzato al flusso di errore standard o flusso di output standard.</span><span class="sxs-lookup"><span data-stu-id="332fa-135">The `Main` method examines the command-line arguments and determines if trace output should be directed to the standard error stream or the standard output stream.</span></span> <span data-ttu-id="332fa-136">`Main` Crea e Inizializza un <xref:System.Diagnostics.ConsoleTraceListener> oggetto per l'oggetto specificato <xref:System.Console> flusso di output e aggiunge questo oggetto alla raccolta di listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="332fa-136">`Main` creates and initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream, and adds this object to the trace listener collection.</span></span> <span data-ttu-id="332fa-137">Chiama quindi il `WriteEnvironmentInfoToTrace` metodo, che scrive i dettagli sull'ambiente di esecuzione e la configurazione del listener di traccia nell'output di traccia.</span><span class="sxs-lookup"><span data-stu-id="332fa-137">It then calls the `WriteEnvironmentInfoToTrace` method, which writes details about the executing environment and the trace listener configuration to the trace output.</span></span>  
  
 <span data-ttu-id="332fa-138">Quando viene eseguita l'applicazione di esempio, i dettagli di configurazione di ambiente e di traccia vengono scritti nel flusso di output di console specificata tramite la <xref:System.Diagnostics.ConsoleTraceListener> oggetto.</span><span class="sxs-lookup"><span data-stu-id="332fa-138">When the example application runs, the environment and trace configuration details are written to the specified console output stream through the <xref:System.Diagnostics.ConsoleTraceListener> object.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#1)]
 [!code-vb[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Console" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="332fa-139">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.ConsoleTraceListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332fa-139">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="332fa-140">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.ConsoleTraceListener" /> con l'output di traccia scritto nel flusso di output standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332fa-140">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class with trace output written to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332fa-141">Questo costruttore inizializza un <xref:System.Diagnostics.ConsoleTraceListener> oggetto per scrivere messaggi di <xref:System.Console.Out%2A?displayProperty=nameWithType> flusso.</span><span class="sxs-lookup"><span data-stu-id="332fa-141">This constructor initializes a <xref:System.Diagnostics.ConsoleTraceListener> object to write messages to the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream.</span></span> <span data-ttu-id="332fa-142">Relativo <xref:System.Diagnostics.TraceListener.Name%2A> proprietà viene inizializzata su una stringa vuota ("").</span><span class="sxs-lookup"><span data-stu-id="332fa-142">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332fa-143">Il codice seguente viene inizializzato un <xref:System.Diagnostics.ConsoleTraceListener> oggetto per l'oggetto specificato <xref:System.Console> flusso di output e lo aggiunge alla raccolta di listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="332fa-143">The following code example initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream and adds it to the trace listener collection.</span></span> <span data-ttu-id="332fa-144">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.ConsoleTraceListener> classe.</span><span class="sxs-lookup"><span data-stu-id="332fa-144">This code example is part of a larger example provided for the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener (bool useErrorStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool useErrorStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (useErrorStream As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener(bool useErrorStream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConsoleTraceListener : bool -&gt; System.Diagnostics.ConsoleTraceListener" Usage="new System.Diagnostics.ConsoleTraceListener useErrorStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="useErrorStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useErrorStream">
          <span data-ttu-id="332fa-145">
            <see langword="true" /> per scrivere l'output di tracciatura e debug nel flusso di errore standard; <see langword="false" /> per scrivere l'output di tracciatura e debug nel flusso di output standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332fa-145">
              <see langword="true" /> to write tracing and debugging output to the standard error stream; <see langword="false" /> to write tracing and debugging output to the standard output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332fa-146">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.ConsoleTraceListener" /> con un'opzione per la scrittura dell'output di traccia nel flusso di output standard o nel flusso di errore standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332fa-146">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class with an option to write trace output to the standard output stream or the standard error stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332fa-147">Questo costruttore inizializza un <xref:System.Diagnostics.ConsoleTraceListener> oggetto da scrivere i messaggi di <xref:System.Console.Out%2A?displayProperty=nameWithType> o il <xref:System.Console.Error%2A?displayProperty=nameWithType> flusso.</span><span class="sxs-lookup"><span data-stu-id="332fa-147">This constructor initializes a <xref:System.Diagnostics.ConsoleTraceListener> object to write messages to either the <xref:System.Console.Out%2A?displayProperty=nameWithType> or the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream.</span></span> <span data-ttu-id="332fa-148">Relativo <xref:System.Diagnostics.TraceListener.Name%2A> proprietà viene inizializzata su una stringa vuota ("").</span><span class="sxs-lookup"><span data-stu-id="332fa-148">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332fa-149">Il codice seguente viene inizializzato un <xref:System.Diagnostics.ConsoleTraceListener> oggetto per l'oggetto specificato <xref:System.Console> flusso di output e lo aggiunge alla raccolta di listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="332fa-149">The following code example initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream and adds it to the trace listener collection.</span></span> <span data-ttu-id="332fa-150">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Diagnostics.ConsoleTraceListener> classe.</span><span class="sxs-lookup"><span data-stu-id="332fa-150">This code example is part of a larger example provided for the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Console" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="consoleTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="332fa-151">Chiude l'output al flusso specificato per questo listener di traccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332fa-151">Closes the output to the stream specified for this trace listener.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332fa-152">Il flusso specificato per questo <xref:System.Diagnostics.ConsoleTraceListener> istanza (entrambi il <xref:System.Console.Out%2A?displayProperty=nameWithType> flusso o <xref:System.Console.Error%2A?displayProperty=nameWithType> flusso) viene chiuso.</span><span class="sxs-lookup"><span data-stu-id="332fa-152">The stream specified for this <xref:System.Diagnostics.ConsoleTraceListener> instance (either the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream or the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream) is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>