<Type Name="PerformanceCounter" FullName="System.Diagnostics.PerformanceCounter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2dd6d42f93a7390d8889b8e70bd44fdc743df9dd" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37663545" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PerformanceCounter : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PerformanceCounter extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PerformanceCounter&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class PerformanceCounter sealed : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type PerformanceCounter = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.Diagnostics.PerformanceCounterInstaller))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a Windows NT performance counter component.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.PerformanceCounter> componente può essere utilizzato per la lettura di contatori personalizzati predefiniti o esistenti e la pubblicazione delle prestazioni (scrittura) dei dati nei contatori personalizzati.  
  
 Esistono numerosi contatori predefiniti elencati nella Windows Performance Monitor [finestra di dialogo Aggiungi contatori](http://go.microsoft.com/fwlink/p/?LinkId=257854). Per altre informazioni sui contatori delle prestazioni .NET Framework, vedere [contatori delle prestazioni](~/docs/framework/debug-trace-profile/performance-counters.md).  
  
 Questo tipo implementa la <xref:System.IDisposable> interfaccia. Dopo aver utilizzato il tipo, è necessario eliminarlo direttamente o indirettamente. Per eliminare il tipo direttamente, chiamare relativi <xref:System.IDisposable.Dispose%2A> metodo in un `try` / `catch` blocco. Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio come ad esempio `using` in C# o `Using` in Visual Basic. Per altre informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel <xref:System.IDisposable> argomento relativo all'interfaccia.  
  
> [!IMPORTANT]
>  Nelle versioni 1.0 e 1.1 di .NET Framework, questa classe richiede dai chiamanti immediati siano completamente attendibili. A partire da .NET Framework versione 2.0, questa classe richiede <xref:System.Diagnostics.PerformanceCounterPermission> per azioni specifiche. È fortemente consigliabile <xref:System.Diagnostics.PerformanceCounterPermission> non essere concessa a codice parzialmente attendibile.  La possibilità di leggere e scrivere i contatori delle prestazioni consente al codice eseguire azioni quali l'enumerazione dei processi in esecuzione e su come ottenere informazioni su di essi.  
>   
>  Inoltre, passando un <xref:System.Diagnostics.PerformanceCounter> oggetto al codice considerato meno attendibile può creare un problema di sicurezza. Non passare mai prestazioni contatore oggetti, ad esempio un <xref:System.Diagnostics.PerformanceCounterCategory> o <xref:System.Diagnostics.PerformanceCounter>a codice meno attendibile.  
  
 Per leggere da un contatore delle prestazioni, creare un'istanza del <xref:System.Diagnostics.PerformanceCounter> classe, impostare il <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>e, facoltativamente, il <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> o <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> le proprietà e quindi chiamare il <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> metodo da eseguire delle prestazioni lettura del contatore.  
  
 Per pubblicare i dati dei contatori delle prestazioni, creare uno o più contatori personalizzati usando il <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=nameWithType> metodo, creare un'istanza del <xref:System.Diagnostics.PerformanceCounter> classe, impostare il <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> e, facoltativamente, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> o <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> proprietà, e quindi chiamare il <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, o <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> metodi o set di <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> proprietà per modificare il valore del contatore personalizzato.  
  
> [!NOTE]
>  Il <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, e <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> utilizzano i blocchi per aggiornare il valore del contatore. Ciò consente di mantenere il valore del contatore accurate in scenari con multithreading o multiprocesso, ma anche i risultati in una riduzione delle prestazioni. Se non è necessario l'accuratezza che interlocked operazioni forniscono, è possibile aggiornare il <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> proprietà direttamente per un massimo di un 5 volte il miglioramento delle prestazioni.  Tuttavia, in scenari di multithreading, alcuni aggiornamenti per il valore del contatore potrebbe essere ignorati, generando dati non accurati.  
  
 Il contatore è il meccanismo per le prestazioni vengono raccolti i dati. Il Registro di sistema sono archiviati i nomi di tutti i contatori, ciascuno dei quali è correlata a un'area specifica di funzionalità del sistema. Sono esempi di tempi di attività del processore, utilizzo della memoria o il numero di byte ricevuti tramite una connessione di rete.  
  
 Ogni contatore viene identificata tramite il relativo nome e il relativo percorso. Nello stesso modo che un percorso di file include in un'unità, una directory, una o più sottodirectory e un nome di file, le informazioni del contatore è costituito da quattro elementi: il computer, la categoria, l'istanza di categoria e il nome del contatore.  
  
 La categoria o oggetto delle prestazioni, che il contatore misura i dati per, deve includere le informazioni sul contatore. Categorie del computer includono componenti fisici, ad esempio processori, dischi e memoria. Esistono anche categorie di sistema, ad esempio processi e thread. Ogni categoria è correlato a un elemento funzionale all'interno del computer e ha un set di contatori standard assegnato a esso. Questi oggetti sono elencati nell'elenco di riepilogo a discesa di oggetti delle prestazioni della finestra di dialogo Aggiungi contatori all'interno del Monitor di sistema di Windows 2000 ed è necessario includerli nel percorso del contatore. I dati sulle prestazioni sono raggruppati per categoria in cui è correlati.  
  
 In alcuni casi, possono esistere più copie della stessa categoria. Ad esempio, diversi processi e thread eseguiti simultaneamente e alcuni computer dispongono di più processori. Le copie di categoria vengono chiamate istanze di categoria e ogni istanza ha un set di contatori standard assegnato a esso. Se una categoria può avere più di un'istanza, una specifica istanza deve essere incluso nelle informazioni del contatore.  
  
 Per ottenere i dati sulle prestazioni per i contatori che è richiesto un valore iniziale o precedente per eseguire il calcolo necessario, chiamare il <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> metodo due volte e utilizzare le informazioni restituite richieste dall'applicazione.  
  
> [!NOTE]
>  Categorie di contatori delle prestazioni installate con il [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] utilizzo della memoria condivisa separata, con ogni categoria di contatori delle prestazioni disponga della propria memoria. È possibile specificare le dimensioni della memoria condivisa separata tramite la creazione di un valore DWORD denominato FileMappingSize nella chiave del Registro di sistema HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<il nome di categoria >* \ Prestazioni. Il valore FileMappingSize è impostato per le dimensioni della memoria condivisa della categoria. La dimensione predefinita è 131.072 decimale. Se il valore FileMappingSize non è presente, il `fileMappingSize` valore dell'attributo di `performanceCounters` viene usato l'elemento specificato nel file Machine. config, causando un ulteriore sovraccarico per l'elaborazione di file di configurazione. È possibile realizzare un miglioramento delle prestazioni per l'avvio dell'applicazione impostando le dimensioni del mapping dei file del Registro di sistema. Per altre informazioni sulla dimensione del mapping del file, vedere [ &lt;performanceCounters&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/performancecounters-element.md).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato l'utilizzo dei <xref:System.Diagnostics.PerformanceCounter> classe per creare e usare un <xref:System.Diagnostics.PerformanceCounterType.AverageCount64> tipo di contatore. L'esempio crea le categorie, consente di impostare i contatori, raccoglie i dati da contatori e chiama il <xref:System.Diagnostics.CounterSampleCalculator> classe per interpretare i dati del contatore delle prestazioni. I risultati intermedi e finali vengono visualizzati nella finestra della console. Per altri esempi di altri tipi di contatore delle prestazioni, vedere il <xref:System.Diagnostics.PerformanceCounterType> enumerazione.  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounterType" />
    <altmember cref="T:System.Diagnostics.CounterCreationData" />
    <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
    <altmember cref="T:System.Diagnostics.CounterSampleCalculator" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">per un'attendibilità totale per il chiamante immediato. Questa classe non può essere utilizzata da codice parzialmente attendibile.</permission>
        <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.PerformanceCounter" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new, read-only instance of the <see cref="T:System.Diagnostics.PerformanceCounter" /> class, without associating the instance with any system or custom performance counter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo overload del costruttore imposta il <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> delle proprietà su una stringa vuota ("") e imposta il <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> proprietà nel computer locale, (".").  
  
 Questo costruttore non inizializza il contatore delle prestazioni, in modo che l'istanza non vengono associati a un contatore esistente nel computer locale. Per puntare a un contatore delle prestazioni specifici, impostare il <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>e, facoltativamente, il <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> e <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> proprietà prima di leggere tutte le altre proprietà o durante la lettura da un contatore. Per scrivere in un contatore delle prestazioni, impostare il <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> proprietà `false`.  
  
> [!NOTE]
>  Il <xref:System.Security.Permissions.HostProtectionAttribute> applicato a questo membro di attributo ha i seguenti elementi <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> valore proprietà: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.SharedState>. L'oggetto <xref:System.Security.Permissions.HostProtectionAttribute> non influisce sulle applicazioni desktop, che in genere vengono avviate facendo doppio clic sull'icona, digitando un comando oppure immettendo un URL in un browser. Per altre informazioni, vedere la <xref:System.Security.Permissions.HostProtectionAttribute> classe oppure [programmazione in SQL Server e attributi di protezione Host](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).  
  
   
  
## Examples  
 L'esempio di codice seguente crea un'istanza predefinita del <xref:System.Diagnostics.PerformanceCounter> classe. Dopo la creazione dell'istanza, il <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> i valori delle proprietà sono impostate e i risultati di una chiamata al <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> metodo vengono visualizzati.  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la scrittura di categoria del contatore delle prestazioni se il <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> è di proprietà <see langword="false" />. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">The name of the performance counter category (performance object) with which this performance counter is associated.</param>
        <param name="counterName">The name of the performance counter.</param>
        <summary>Initializes a new, read-only instance of the <see cref="T:System.Diagnostics.PerformanceCounter" /> class and associates it with the specified system or custom performance counter on the local computer. This constructor requires that the category have a single instance.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le stringhe di parametri non sono tra maiuscole e minuscole.  
  
 Utilizzare questo overload per accedere a un contatore nel computer locale che appartiene a una categoria che contiene un'istanza di categoria del contatore delle prestazioni. Se si prova a utilizzare questo costruttore per questo aspetto <xref:System.Diagnostics.PerformanceCounter> istanza a una categoria che contiene più istanze, il costruttore genera un'eccezione. Questo overload può accedere a qualsiasi di sola lettura o lettura/scrittura del contatore, ma solo in una modalità di sola lettura. Oggetto <xref:System.Diagnostics.PerformanceCounter> istanza creata usando questo overload non è possibile scrivere del contatore, anche se il contatore stesso possa essere di lettura/scrittura.  
  
 Questo overload del costruttore imposta la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> e <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> i valori delle proprietà passati, imposta la <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> proprietà nel computer locale, "." e imposta il <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> proprietà in una stringa vuota ("").  
  
 Questo costruttore inizializza il contatore delle prestazioni e associa l'istanza con un contatore esistente (un sistema o un contatore personalizzato) nel computer locale. I valori che si passa a per il <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> e <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> proprietà devono puntare a un contatore delle prestazioni esistente nel computer locale.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista, 	la funzionalità Controllo dell'account utente determina i privilegi di un utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="categoryName" /> is an empty string ("").  -or-  <paramref name="counterName" /> is an empty string ("").  -or-  The category specified does not exist.  -or-  The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.  -or-  <paramref name="categoryName" /> and <paramref name="counterName" /> have been localized into different languages.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> or <paramref name="counterName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la scrittura di categoria del contatore delle prestazioni se il <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> è di proprietà <see langword="false" />. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, bool readOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, bool readOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, readOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, bool readOnly);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * bool -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, readOnly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="readOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="categoryName">The name of the performance counter category (performance object) with which this performance counter is associated.</param>
        <param name="counterName">The name of the performance counter.</param>
        <param name="readOnly">
          <see langword="true" /> to access the counter in read-only mode (although the counter itself could be read/write); <see langword="false" /> to access the counter in read/write mode.</param>
        <summary>Initializes a new, read-only or read/write instance of the <see cref="T:System.Diagnostics.PerformanceCounter" /> class and associates it with the specified system or custom performance counter on the local computer. This constructor requires that the category contain a single instance.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le stringhe di parametri non sono tra maiuscole e minuscole.  
  
 Utilizzare questo overload per accedere in sola lettura o lettura/scrittura del contatore nel computer locale che appartiene a una categoria che contiene un'istanza di categoria del contatore delle prestazioni. Se si prova a utilizzare questo costruttore per questo aspetto <xref:System.Diagnostics.PerformanceCounter> istanza a una categoria che contiene più istanze, il costruttore genera un'eccezione.  
  
 Questo overload del costruttore imposta la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> i valori delle proprietà passati, imposta la <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> proprietà nel computer locale, "." e imposta il <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> proprietà in una stringa vuota ("").  
  
 Questo costruttore inizializza il contatore delle prestazioni e associa l'istanza con un contatore esistente (un sistema o un contatore personalizzato) nel computer locale. I valori che si passa a per il <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> e <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> proprietà devono puntare a un contatore delle prestazioni esistente nel computer locale. Se l'istanza del contatore delle prestazioni che è possibile puntare a non è valido, chiamare il costruttore genera un'eccezione.  
  
> [!NOTE]
>  È possibile utilizzare questo overload per connettersi a un contatore di sistema, ma non è possibile scrivere in un contatore di sistema. Pertanto, l'impostazione `readOnly` a `false` quando ci si connette a un contatore di sistema fa sì che il costruttore generare un'eccezione.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista, 	la funzionalità Controllo dell'account utente determina i privilegi di un utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un'istanza del <xref:System.Diagnostics.PerformanceCounter> classe. Nell'esempio vengono passate in nomi di categoria, i nomi dei contatori e un valore del flag che indica che il contatore non è in sola lettura. Questo esempio di codice fa parte di un esempio più esaustivo per le <xref:System.Diagnostics.PerformanceCounter> classe.  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#2)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#2)]
 [!code-vb[PerformanceCounterType.AverageCounter64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <paramref name="categoryName" /> is an empty string ("").  -or-  The <paramref name="counterName" /> is an empty string ("").  -or-  The category specified does not exist. (if <paramref name="readOnly" /> is <see langword="true" />).  -or-  The category specified is not a .NET Framework custom category (if <paramref name="readOnly" /> is <see langword="false" />).  -or-  The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.  -or-  <paramref name="categoryName" /> and <paramref name="counterName" /> have been localized into different languages.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> or <paramref name="counterName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la scrittura di categoria del contatore delle prestazioni se il <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> è di proprietà <see langword="false" />. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, instanceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * string -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, instanceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">The name of the performance counter category (performance object) with which this performance counter is associated.</param>
        <param name="counterName">The name of the performance counter.</param>
        <param name="instanceName">The name of the performance counter category instance, or an empty string (""), if the category contains a single instance.</param>
        <summary>Initializes a new, read-only instance of the <see cref="T:System.Diagnostics.PerformanceCounter" /> class and associates it with the specified system or custom performance counter and category instance on the local computer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le stringhe di parametri non sono tra maiuscole e minuscole.  
  
 Questo overload del costruttore imposta la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> i valori delle proprietà passare e imposta il <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> proprietà nel computer locale, ".".  
  
 Questo costruttore inizializza il contatore delle prestazioni e associa l'istanza con un contatore esistente (un sistema o un contatore personalizzato) nel computer locale. I valori che si passa a per il <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> proprietà devono puntare a un contatore delle prestazioni esistente nel computer locale. Se l'istanza del contatore delle prestazioni che scegliere non è valido, chiamare il costruttore genera un'eccezione.  
  
 Questo overload può accedere a qualsiasi di sola lettura o lettura/scrittura del contatore, ma solo in una modalità di sola lettura. Oggetto <xref:System.Diagnostics.PerformanceCounter> istanza creata usando questo overload non è possibile scrivere del contatore, anche se il contatore stesso possa essere di lettura/scrittura.  
  
 Per creare un'istanza di categoria delle prestazioni, specificare un `instanceName` nella <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> costruttore. Se l'istanza di categoria specificato da `instanceName` esiste già il nuovo oggetto farà riferimento all'istanza di categoria esistente.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista, 	la funzionalità Controllo dell'account utente determina i privilegi di un utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="categoryName" /> is an empty string ("").  -or-  <paramref name="counterName" /> is an empty string ("").  -or-  The category specified is not valid.  -or-  The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.  -or-  <paramref name="instanceName" /> is longer than 127 characters.  -or-  <paramref name="categoryName" /> and <paramref name="counterName" /> have been localized into different languages.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> or <paramref name="counterName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la scrittura di categoria del contatore delle prestazioni se il <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> è di proprietà <see langword="false" />. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, string instanceName, bool readOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, string instanceName, bool readOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, instanceName As String, readOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, System::String ^ instanceName, bool readOnly);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * string * bool -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, instanceName, readOnly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="readOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="categoryName">The name of the performance counter category (performance object) with which this performance counter is associated.</param>
        <param name="counterName">The name of the performance counter.</param>
        <param name="instanceName">The name of the performance counter category instance, or an empty string (""), if the category contains a single instance.</param>
        <param name="readOnly">
          <see langword="true" /> to access a counter in read-only mode; <see langword="false" /> to access a counter in read/write mode.</param>
        <summary>Initializes a new, read-only or read/write instance of the <see cref="T:System.Diagnostics.PerformanceCounter" /> class and associates it with the specified system or custom performance counter and category instance on the local computer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le stringhe di parametri non sono tra maiuscole e minuscole.  
  
 Utilizzare questo overload per accedere a un contatore delle prestazioni in una sola lettura o in modalità lettura/scrittura.  
  
 Questo overload del costruttore imposta la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> i valori delle proprietà passati, e imposta il <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> proprietà nel computer locale, ".".  
  
 Questo costruttore inizializza il contatore delle prestazioni e associa l'istanza con un contatore esistente (un sistema o un contatore personalizzato) nel computer locale. I valori che si passa a per il <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> proprietà devono puntare a un contatore delle prestazioni esistente nel computer locale. Se l'istanza del contatore delle prestazioni che è possibile puntare a non è valido, chiamare il costruttore genera un'eccezione.  
  
> [!NOTE]
>  È possibile utilizzare questo overload per connettersi a un contatore di sistema, ma non è possibile scrivere in un contatore di sistema. Pertanto, l'impostazione `readOnly` a `false` quando ci si connette a un contatore di sistema fa sì che il costruttore generare un'eccezione.  
  
 Per creare un'istanza di categoria delle prestazioni, specificare un `instanceName` nella <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> costruttore. Se l'istanza di categoria specificato da `instanceName` esiste già il nuovo oggetto farà riferimento all'istanza di categoria esistente.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista, 	la funzionalità Controllo dell'account utente determina i privilegi di un utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="categoryName" /> is an empty string ("").  -or-  <paramref name="counterName" /> is an empty string ("").  -or-  The read/write permission setting requested is invalid for this counter.  -or-  The category specified does not exist (if <paramref name="readOnly" /> is <see langword="true" />).  -or-  The category specified is not a .NET Framework custom category (if <paramref name="readOnly" /> is <see langword="false" />).  -or-  The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.  -or-  <paramref name="instanceName" /> is longer than 127 characters.  -or-  <paramref name="categoryName" /> and <paramref name="counterName" /> have been localized into different languages.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> or <paramref name="counterName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la scrittura di categoria del contatore delle prestazioni se il <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> è di proprietà <see langword="false" />. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, string instanceName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, string instanceName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, instanceName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, System::String ^ instanceName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * string * string -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, instanceName, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">The name of the performance counter category (performance object) with which this performance counter is associated.</param>
        <param name="counterName">The name of the performance counter.</param>
        <param name="instanceName">The name of the performance counter category instance, or an empty string (""), if the category contains a single instance.</param>
        <param name="machineName">The computer on which the performance counter and its associated category exist.</param>
        <summary>Initializes a new, read-only instance of the <see cref="T:System.Diagnostics.PerformanceCounter" /> class and associates it with the specified system or custom performance counter and category instance, on the specified computer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le stringhe di parametri non sono tra maiuscole e minuscole.  
  
 Questo overload del costruttore imposta la <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>, e <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> proprietà per i valori passati in.  
  
 Questo costruttore inizializza il contatore delle prestazioni e associa l'istanza con un contatore esistente (un sistema o un contatore personalizzato) nel computer specificato. I valori che si passa a per il <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> e <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> proprietà devono puntare a un contatore delle prestazioni esistente. Se l'istanza del contatore delle prestazioni che scegliere non è valido, chiamare il costruttore genera un'eccezione. Questo overload può accedere a qualsiasi di sola lettura o lettura/scrittura del contatore, ma solo in una modalità di sola lettura. Oggetto <xref:System.Diagnostics.PerformanceCounter> istanza creata usando questo overload non è possibile scrivere del contatore, anche se il contatore stesso possa essere di lettura/scrittura.  
  
> [!NOTE]
>  È possibile scrivere i contatori delle prestazioni remoto. Nessun overload che consente di specificare un'istanza di lettura/scrittura del <xref:System.Diagnostics.PerformanceCounter> classe che si connette a un computer remoto.  
  
 Per creare un'istanza di categoria delle prestazioni, specificare un `instanceName` nella <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> costruttore. Se l'istanza di categoria specificato da `instanceName` esiste già il nuovo oggetto farà riferimento all'istanza di categoria esistente.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista, 	la funzionalità Controllo dell'account utente determina i privilegi di un utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
> [!NOTE]
>  In Windows Vista, quando il computer remoto è un membro del gruppo di lavoro, potrebbe essere necessario disabilitare il controllo dell'account utente in modo che l'account utente locale non è stato applicato e può essere elevato ad account amministratore. Per motivi di sicurezza, la disattivazione di controllo dell'account utente deve essere strettamente. Per informazioni sulla disattivazione di controllo dell'account utente, vedere [controllo Account utente e da WMI](http://go.microsoft.com/fwlink/?LinkId=91617).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="categoryName" /> is an empty string ("").  -or-  <paramref name="counterName" /> is an empty string ("").  -or-  The read/write permission setting requested is invalid for this counter.  -or-  The counter does not exist on the specified computer.  -or-  The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.  -or-  <paramref name="instanceName" /> is longer than 127 characters.  -or-  <paramref name="categoryName" /> and <paramref name="counterName" /> have been localized into different languages.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter is not valid.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> or <paramref name="counterName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la scrittura di categoria del contatore delle prestazioni se il <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> è di proprietà <see langword="false" />. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="performanceCounter.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Begins the initialization of a <see cref="T:System.Diagnostics.PerformanceCounter" /> instance used on a form or by another component. The initialization occurs at runtime.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Progettazione ambiente Usa questo metodo per avviare l'inizializzazione di un componente che viene usato in un form o da un altro componente. Il <xref:System.Diagnostics.PerformanceCounter.EndInit%2A> metodo termina l'inizializzazione. Usando il <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> e <xref:System.Diagnostics.PerformanceCounter.EndInit%2A> metodi impedisce l'utilizzo prima che il completamento dell'inizializzazione del componente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CategoryValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the performance counter category for this performance counter.</summary>
        <value>Il nome della categoria del contatore delle prestazioni (oggetto prestazioni) a cui è associato questo contatore delle prestazioni.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> viene visualizzato nei `Performance Object` campo snap MMC di gestione del contatore delle prestazioni in `Add Counter` nella finestra di dialogo.  
  
 Un contatore delle prestazioni consente di monitorare il comportamento di una categoria o oggetto delle prestazioni, in un computer. Le categorie includono componenti fisici (ad esempio processori, dischi e memoria) e gli oggetti di sistema (ad esempio processi e thread). Contatori di sistema che sono correlati allo stesso oggetto delle prestazioni sono raggruppati in una categoria che indica il comune stato attivo. Quando si crea un'istanza di <xref:System.Diagnostics.PerformanceCounter> (classe), è prima di tutto indicare la categoria con cui interagisce il componente e quindi si sceglie un contatore di tale categoria.  
  
 Ad esempio, una categoria di contatori di Windows è la categoria di memoria. I contatori di sistema all'interno di questa categoria di tenere traccia dei dati di memoria, ad esempio il numero di byte disponibili e il numero di byte memorizzate nella cache. Se si desidera lavorare con i byte memorizzate nella cache nell'applicazione, si creerà un'istanza di <xref:System.Diagnostics.PerformanceCounter> componente, connetterla alla categoria di memoria e quindi scegliere il contatore appropriato (in questo caso, byte memorizzate nella cache) da tale categoria.  
  
 Anche se il sistema esegue molte altre categorie di contatori disponibili, le categorie che è probabile che interagirà con più di frequente sono le categorie di Cache, memoria, gli oggetti, disco fisico, processo, processore, Server, sistema e Thread.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un'istanza predefinita del <xref:System.Diagnostics.PerformanceCounter> classe. Dopo la creazione dell'istanza, il <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> i valori delle proprietà sono impostate e i risultati di una chiamata al <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> metodo vengono visualizzati.  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Diagnostics.PerformanceCounter.CategoryName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <altmember cref="P:System.Diagnostics.Process.ProcessName" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="performanceCounter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the performance counter and frees all the resources allocated by this performance counter instance.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando si associa questa <xref:System.Diagnostics.PerformanceCounter> istanza con un contatore delle prestazioni che si trova nel server, il sistema consente di inizializzare l'istanza e alloca la memoria per contenere le informazioni di esempio di contatore. Il <xref:System.Diagnostics.PerformanceCounter.Close%2A> metodo libera le risorse allocate dall'oggetto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseSharedResources">
      <MemberSignature Language="C#" Value="public static void CloseSharedResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CloseSharedResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.CloseSharedResources" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CloseSharedResources ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CloseSharedResources();" />
      <MemberSignature Language="F#" Value="static member CloseSharedResources : unit -&gt; unit" Usage="System.Diagnostics.PerformanceCounter.CloseSharedResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Frees the performance counter library shared state allocated by the counters.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura di categoria del contatore delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CounterHelp">
      <MemberSignature Language="C#" Value="public string CounterHelp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CounterHelp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterHelp As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CounterHelp { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CounterHelp : string" Usage="System.Diagnostics.PerformanceCounter.CounterHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("A description describing the counter.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the description for this performance counter.</summary>
        <value>Descrizione dell'elemento o della quantità che misura il contatore delle prestazioni.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La finestra di dialogo Aggiungi contatori lo snap MMC di gestione del contatore delle prestazioni nelle visualizzazioni di <xref:System.Diagnostics.PerformanceCounter.CounterHelp%2A> testo quando un utente seleziona un contatore nell'elenco di contatori e fa clic sul pulsante di Explain.  
  
 Quando si crea un nuovo contatore, usare il <xref:System.Diagnostics.PerformanceCounter.CounterHelp%2A> testo per descrivere ciò che consente di monitorare il contatore fare in modo che l'utente può determinare se si desidera aggiungere il contatore alla visualizzazione del Monitor di sistema.  
  
> [!NOTE]
>  Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> proprietà viene <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException> viene generata un'eccezione. Categorie di contatori delle prestazioni create con le versioni precedenti usano la memoria globale condivisa e il valore per <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>. Se la categoria non viene utilizzata da applicazioni in esecuzione nella versione 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista, 	la funzionalità Controllo dell'account utente determina i privilegi di un utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Diagnostics.PerformanceCounter" /> instance is not associated with a performance counter.  -or-  The <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> property is set to <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> when using global shared memory.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura di categoria del contatore delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CounterName">
      <MemberSignature Language="C#" Value="public string CounterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CounterName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CounterName" />
      <MemberSignature Language="VB.NET" Value="Public Property CounterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CounterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CounterName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.CounterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CounterNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the performance counter that is associated with this <see cref="T:System.Diagnostics.PerformanceCounter" /> instance.</summary>
        <value>Il nome del contatore, che in genere descrive la quantità rilevata. Questo nome viene visualizzato nell'elenco dei contatori di prestazioni del contatore Manager MMC snap-in della finestra di dialogo Aggiungi contatori.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile ottenere un elenco di contatori preesistenti disponibili da Windows Performance Manager del [finestra di dialogo Aggiungi contatori](http://go.microsoft.com/fwlink/p/?LinkId=257854).  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come impostare il <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> proprietà a un nome di contatore tipico.  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Diagnostics.PerformanceCounter.CounterName" /> is <see langword="null" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
      </Docs>
    </Member>
    <Member MemberName="CounterType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterType CounterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterType CounterType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CounterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterType As PerformanceCounterType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterType CounterType { System::Diagnostics::PerformanceCounterType get(); };" />
      <MemberSignature Language="F#" Value="member this.CounterType : System.Diagnostics.PerformanceCounterType" Usage="System.Diagnostics.PerformanceCounter.CounterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The type of the counter.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the counter type of the associated performance counter.</summary>
        <value>Oggetto <see cref="T:System.Diagnostics.PerformanceCounterType" /> che descrive il modo in cui il contatore interagisce con un'applicazione di monitoraggio e la natura dei valori che contiene (ad esempio, calcolati o non calcolati).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Diagnostics.PerformanceCounterType> enumerazione contiene i tipi di contatori delle prestazioni che è possibile interagire con. Alcuni dei tipi di contatore rappresentano i valori calcolati, ad esempio la media delle misurazioni contatore ottenuto dal sistema. Altri tipi rappresentano valori non elaborati o non calcolati. La tabella seguente illustra i tipi di contatore interagirà con più di frequente.  
  
|Responsabilità del contatore|Valore PerformanceCounterType|Esempio|  
|------------------------------|----------------------------------|-------------|  
|Mantenere un numero di operazioni o elementi semplice.|`NumberOfItems32`|Tenendo traccia del numero di ordini ricevuti come intero a 32 bit.|  
|Mantenere un semplice conteggio di capacità superiore.|`NumberOfItems64`|Tenendo traccia del numero di ordini per un sito con volumi molto elevati, archiviato come valore intero a 64 bit.|  
|Tenere traccia del numero di elementi o operazioni al secondo.|`RateOfCountsPerSecond32`|Rilevamento degli ordini ricevuti al secondo in un sito.|  
|Tenere traccia di un numero maggiore di elementi o operazioni al secondo.|`RateOfCountsPerSecond64`|Rilevamento degli ordini ricevuti al secondo in un sito con volumi molto elevati.|  
|Calcolare il tempo medio per eseguire un processo o per elaborare un elemento|`AverageTimer32`|Calcolare il tempo medio che richiesto per elaborare un ordine.|  
  
 Quando si crea un contatore di tipo che richiede l'uso di un contatore di base corrispondente, è necessario dichiarare il contatore e la base nel <xref:System.Diagnostics.CounterCreationDataCollection> passato nel <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=nameWithType> (metodo).  
  
> [!NOTE]
>  Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> proprietà viene <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException> viene generata un'eccezione. Categorie di contatori delle prestazioni create con le versioni precedenti usano la memoria globale condivisa e il valore per <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>. Se la categoria non viene utilizzata da applicazioni in esecuzione nella versione 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista, 	la funzionalità Controllo dell'account utente determina i privilegi di un utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The instance is not correctly associated with a performance counter.  -or-  The <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> property is set to <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> when using global shared memory.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura di categoria del contatore delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounterType" />
      </Docs>
    </Member>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public long Decrement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Decrement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Decrement" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrement () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Decrement();" />
      <MemberSignature Language="F#" Value="member this.Decrement : unit -&gt; int64" Usage="performanceCounter.Decrement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Decrements the associated performance counter by one through an efficient atomic operation.</summary>
        <returns>The decremented counter value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile scrivere solo nei contatori personalizzati. Tutti i contatori di sistema sono di sola lettura.  
  
> [!NOTE]
>  Il <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, e <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> utilizzano i blocchi per aggiornare il valore del contatore. Ciò consente di mantenere il valore del contatore accurate in scenari con multithreading o multiprocesso, ma anche i risultati in una riduzione delle prestazioni. Se non è necessario l'accuratezza che interlocked operazioni forniscono, è possibile aggiornare il <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> proprietà direttamente per un massimo di un 5 volte il miglioramento delle prestazioni.  Tuttavia, in scenari di multithreading, alcuni aggiornamenti per il valore del contatore potrebbe essere ignorati, generando dati non accurati.  
  
> [!NOTE]
>  Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> proprietà viene <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException> viene generata un'eccezione. Categorie di contatori delle prestazioni create con le versioni precedenti usano la memoria globale condivisa e il valore per <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>. Se la categoria non viene utilizzata da applicazioni in esecuzione nella versione 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The counter is read-only, so the application cannot decrement it.  -or-  The instance is not correctly associated with a performance counter.  -or-  The <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> property is set to <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> when using global shared memory.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la scrittura di categoria del contatore delle prestazioni se il <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> è di proprietà <see langword="false" />. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
        <threadsafe>Questo metodo è thread-safe.</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="DefaultFileMappingSize">
      <MemberSignature Language="C#" Value="public static int DefaultFileMappingSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 DefaultFileMappingSize" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounter.DefaultFileMappingSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared DefaultFileMappingSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static int DefaultFileMappingSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultFileMappingSize : int" Usage="System.Diagnostics.PerformanceCounter.DefaultFileMappingSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies the size, in bytes, of the global memory shared by performance counters. The default size is 524,288 bytes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="performanceCounter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="performanceCounter.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ends the initialization of a <see cref="T:System.Diagnostics.PerformanceCounter" /> instance that is used on a form or by another component. The initialization occurs at runtime.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Progettazione ambiente utilizza questo metodo per terminare l'inizializzazione di un componente che viene usato in un form o da un altro componente. Il <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> metodo avvia l'inizializzazione. Usando il <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> e <xref:System.Diagnostics.PerformanceCounter.EndInit%2A> metodi impedisce l'utilizzo prima che il completamento dell'inizializzazione del componente.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la scrittura di categoria del contatore delle prestazioni se il <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> è di proprietà <see langword="false" />. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public long Increment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Increment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Increment" />
      <MemberSignature Language="VB.NET" Value="Public Function Increment () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Increment();" />
      <MemberSignature Language="F#" Value="member this.Increment : unit -&gt; int64" Usage="performanceCounter.Increment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Increments the associated performance counter by one through an efficient atomic operation.</summary>
        <returns>The incremented counter value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile scrivere solo nei contatori personalizzati. Tutti i contatori di sistema sono di sola lettura.  
  
> [!NOTE]
>  Il <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, e <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> utilizzano i blocchi per aggiornare il valore del contatore. Ciò consente di mantenere il valore del contatore accurate in scenari con multithreading o multiprocesso, ma anche i risultati in una riduzione delle prestazioni. Se non è necessario l'accuratezza che interlocked operazioni forniscono, è possibile aggiornare il <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> proprietà direttamente per un massimo di un 5 volte il miglioramento delle prestazioni.  Tuttavia, in scenari di multithreading, alcuni aggiornamenti per il valore del contatore potrebbe essere ignorati, generando dati non accurati.  
  
> [!NOTE]
>  Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> proprietà viene <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException> viene generata un'eccezione. Categorie di contatori delle prestazioni create con le versioni precedenti usano la memoria globale condivisa e il valore per <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>. Se la categoria non viene utilizzata da applicazioni in esecuzione nella versione 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The counter is read-only, so the application cannot increment it.  -or-  The instance is not correctly associated with a performance counter.  -or-  The <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> property is set to <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> when using global shared memory.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la scrittura di categoria del contatore delle prestazioni se il <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> è di proprietà <see langword="false" />. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
        <threadsafe>Questo metodo è thread-safe.</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="IncrementBy">
      <MemberSignature Language="C#" Value="public long IncrementBy (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 IncrementBy(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function IncrementBy (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long IncrementBy(long value);" />
      <MemberSignature Language="F#" Value="member this.IncrementBy : int64 -&gt; int64" Usage="performanceCounter.IncrementBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">The value to increment by. (A negative value decrements the counter.)</param>
        <summary>Increments or decrements the value of the associated performance counter by a specified amount through an efficient atomic operation.</summary>
        <returns>The new counter value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile scrivere solo nei contatori personalizzati. Tutti i contatori di sistema sono di sola lettura.  
  
> [!NOTE]
>  Il <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, e <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> utilizzano i blocchi per aggiornare il valore del contatore. Ciò consente di mantenere il valore del contatore accurate in scenari con multithreading o multiprocesso, ma anche i risultati in una riduzione delle prestazioni. Se non è necessario l'accuratezza che interlocked operazioni forniscono, è possibile aggiornare il <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> proprietà direttamente per un massimo di un 5 volte il miglioramento delle prestazioni.  Tuttavia, in scenari di multithreading, alcuni aggiornamenti per il valore del contatore potrebbe essere ignorati, generando dati non accurati.  
  
> [!NOTE]
>  Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> proprietà viene <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException> viene generata un'eccezione. Categorie di contatori delle prestazioni create con le versioni precedenti usano la memoria globale condivisa e il valore per <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>. Se la categoria non viene utilizzata da applicazioni in esecuzione nella versione 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> metodo per incrementare un contatore. Questo esempio di codice fa parte di un esempio più esaustivo per le <xref:System.Diagnostics.PerformanceCounter> classe.  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#3)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#3)]
 [!code-vb[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The counter is read-only, so the application cannot increment it.  -or-  The instance is not correctly associated with a performance counter.  -or-  The <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> property is set to <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> when using global shared memory.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la scrittura di categoria del contatore delle prestazioni se il <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> è di proprietà <see langword="false" />. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
        <threadsafe>Questo metodo è thread-safe.</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="InstanceLifetime">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterInstanceLifetime InstanceLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterInstanceLifetime InstanceLifetime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceLifetime As PerformanceCounterInstanceLifetime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterInstanceLifetime InstanceLifetime { System::Diagnostics::PerformanceCounterInstanceLifetime get(); void set(System::Diagnostics::PerformanceCounterInstanceLifetime value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceLifetime : System.Diagnostics.PerformanceCounterInstanceLifetime with get, set" Usage="System.Diagnostics.PerformanceCounter.InstanceLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterInstanceLifetime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the lifetime of a process.</summary>
        <value>Uno dei valori di <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" />. Il valore predefinito è <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se la categoria del contatore delle prestazioni viene creata con .NET Framework versione 1.0 o 1.1, Usa la memoria globale condivisa e il valore per <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>. Se la categoria non viene utilizzata da applicazioni in esecuzione nella versione 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria.  
  
> [!NOTE]
>  Se il valore della <xref:System.Diagnostics.PerformanceCounter.CounterType%2A> proprietà viene <xref:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance>, il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> valore per il contatore delle prestazioni debba essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The value set is not a member of the <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" /> enumeration.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> is set after the <see cref="T:System.Diagnostics.PerformanceCounter" /> has been initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="InstanceName">
      <MemberSignature Language="C#" Value="public string InstanceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstanceName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.InstanceName" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InstanceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.InstanceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.InstanceNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an instance name for this performance counter.</summary>
        <value>Il nome dell'istanza di categoria del contatore delle prestazioni, o una stringa vuota (""), se il contatore è un contatore a istanza singola.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  I nomi di istanza devono essere minore di 128 caratteri.  
  
 In alcune situazioni, le categorie sono suddivise in istanze di cui tenere traccia dei dati su più occorrenze dell'oggetto che è correlato a una categoria. Le istanze si applicano all'intera categoria, anziché a singoli contatori. Ogni contatore all'interno di una categoria dispone di un'istanza definita per la categoria. Ad esempio, la categoria del processo contiene le istanze denominate del sistema e del tempo di inattività. Quindi, ogni contatore all'interno della categoria di processo contiene i dati per ogni istanza, che illustra informazioni sui processi inattivi o i processi di sistema.  
  
 Numero di categorie non contengono più istanze, pertanto è possibile lasciare vuoto per indicare che non è associata alla categoria alcuna istanza di questa proprietà.  
  
 Se l'oggetto <xref:System.Diagnostics.PerformanceCounter> dell'istanza punti a una categoria non personalizzato, è possibile scegliere solo le istanze di categoria esistente. È possibile creare nuove istanze di categoria solo nelle categorie personalizzate, che consentono di definire come categoria e molti contatori di istanze in base alle esigenze.  
  
 Per creare un'istanza di categoria delle prestazioni, specificare un `instanceName` nella <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> costruttore. Se l'istanza di categoria specificato da `instanceName` esiste già il nuovo oggetto farà riferimento all'istanza di categoria esistente.  
  
> [!NOTE]
>  Non usare i caratteri "(",")", "#", "\\", o "/" nel nome dell'istanza. Se uno di questi caratteri vengono utilizzato, le prestazioni della Console (vedere [Profiling di Runtime](~/docs/framework/debug-trace-profile/runtime-profiling.md)) potrebbe non visualizzare correttamente i valori dell'istanza.  
  
 Se il nome dell'istanza viene generato automaticamente e può contenere i caratteri "(",")", "#", "\\", o "/", usare il mapping dei caratteri nella tabella seguente.  
  
|Carattere|Caratteri con mapping|  
|---------------|----------------------|  
|(|[|  
|)|]|  
|#|_|  
|\|_|  
|/|_|  
  
 Il <xref:System.AppDomain.FriendlyName%2A> proprietà del <xref:System.AppDomain> ottenuto dall'oggetto di <xref:System.AppDomain.CurrentDomain%2A?displayProperty=nameWithType> proprietà è una fonte comune di nomi di istanza che può contenere caratteri non validi.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un'istanza predefinita del <xref:System.Diagnostics.PerformanceCounter> classe. Dopo la creazione dell'istanza, il <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> i valori delle proprietà sono impostate e i risultati di una chiamata al <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> metodo vengono visualizzati.  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO("What's the machine name format?")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the computer name for this performance counter</summary>
        <value>Il server su cui risiedono il contatore delle prestazioni e la categoria associata.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile scrivere i valori solo per i contatori che si trovano nel computer locale. Tuttavia, è possibile leggere i valori dei contatori da qualsiasi computer nell'organizzazione per il quale si dispone dei privilegi di accesso.  
  
 Quando si impostano i <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> proprietà in modo che punti a un computer remoto, il <xref:System.Diagnostics.PerformanceCounter> istanza tenta di aprire il contatore in tale computer. Se il contatore non esiste, l'impostazione di questa proprietà genera un'eccezione.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Diagnostics.PerformanceCounter.MachineName" /> format is invalid.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
      </Docs>
    </Member>
    <Member MemberName="NextSample">
      <MemberSignature Language="C#" Value="public System.Diagnostics.CounterSample NextSample ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Diagnostics.CounterSample NextSample() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.NextSample" />
      <MemberSignature Language="VB.NET" Value="Public Function NextSample () As CounterSample" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::CounterSample NextSample();" />
      <MemberSignature Language="F#" Value="member this.NextSample : unit -&gt; System.Diagnostics.CounterSample" Usage="performanceCounter.NextSample " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.CounterSample</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtains a counter sample, and returns the raw, or uncalculated, value for it.</summary>
        <returns>A <see cref="T:System.Diagnostics.CounterSample" /> that represents the next raw value that the system obtains for this counter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene in genere usato per i contatori che contengono valori non calcolati.  
  
> [!NOTE]
>  Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> proprietà viene <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException> viene generata un'eccezione. Categorie di contatori delle prestazioni create con le versioni precedenti usano la memoria globale condivisa e il valore per <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>. Se la categoria non viene utilizzata da applicazioni in esecuzione nella versione 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista, 	la funzionalità Controllo dell'account utente determina i privilegi di un utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> metodo per ottenere il successivo valore relativo di un contatore. Questo esempio di codice fa parte di un esempio più esaustivo per le <xref:System.Diagnostics.PerformanceCounter> classe.  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#3)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#3)]
 [!code-vb[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The instance is not correctly associated with a performance counter.  -or-  The <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> property is set to <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> when using global shared memory.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura di categoria del contatore delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="NextValue">
      <MemberSignature Language="C#" Value="public float NextValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 NextValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.NextValue" />
      <MemberSignature Language="VB.NET" Value="Public Function NextValue () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float NextValue();" />
      <MemberSignature Language="F#" Value="member this.NextValue : unit -&gt; single" Usage="performanceCounter.NextValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtains a counter sample and returns the calculated value for it.</summary>
        <returns>The next calculated value that the system obtains for this counter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Se il valore calcolato di un contatore dipende da due operazioni di lettura del contatore, la prima operazione di lettura restituisce 0,0. Reimpostare le proprietà del contatore delle prestazioni per specificare un diverso contatore è equivalente alla creazione di un nuovo contatore delle prestazioni e la prima operazione di lettura usando le nuove proprietà restituisce 0,0. Il tempo di ritardo consigliata tra le chiamate al <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> metodo è un secondo, per consentire al contatore di eseguire la lettura incrementale successiva.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni, è necessario disporre dei privilegi amministrativi. In Windows Vista, 	la funzionalità Controllo dell'account utente determina i privilegi di un utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 L'esempio di codice seguente crea un <xref:System.Diagnostics.PerformanceCounterType.ElapsedTime> contatore e viene utilizzato il <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> metodo per visualizzare i valori del contatore in un periodo di tempo.  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The instance is not correctly associated with a performance counter.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la lettura di categoria del contatore delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="RawValue">
      <MemberSignature Language="C#" Value="public long RawValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RawValue" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.RawValue" />
      <MemberSignature Language="VB.NET" Value="Public Property RawValue As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RawValue { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.RawValue : int64 with get, set" Usage="System.Diagnostics.PerformanceCounter.RawValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The raw value of the counter.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the raw, or uncalculated, value of this counter.</summary>
        <value>Il valore non elaborato del contatore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se si tenta di impostare questa proprietà su un valore che è troppo grande per il tipo di contatore è una dimensione di 32 bit, la proprietà tronca il valore a 32 bit. Durante la lettura di contatori personalizzati nel computer locale, usando il <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> proprietà anziché un valore calcolato può produrre miglioramento significativo delle prestazioni negli scenari in cui il valore non elaborato è sufficiente.  
  
 Se il contatore che si sta leggendo è di sola lettura, ottenere il <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> proprietà un campione del contatore nel momento in cui la proprietà viene chiamata. Questa azione equivale a effettuare una chiamata iniziale al <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> (metodo). Se successivamente si chiama <xref:System.Diagnostics.PerformanceCounter.NextSample%2A>, è possibile eseguire calcoli sui valori restituiti da entrambe le chiamate.  
  
 Poiché i contatori di sistema sono di sola lettura, è possibile ottenere ma non impostare i relativi valori non elaborati.  
  
> [!NOTE]
>  Il <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, e <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> utilizzano i blocchi per aggiornare il valore del contatore. Ciò consente di mantenere il valore del contatore accurate in scenari con multithreading o multiprocesso, ma anche i risultati in una riduzione delle prestazioni. Se non è necessario l'accuratezza che interlocked operazioni forniscono, è possibile aggiornare il <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> proprietà direttamente per un massimo di un 5 volte il miglioramento delle prestazioni.  Tuttavia, in scenari di multithreading, alcuni aggiornamenti per il valore del contatore potrebbe essere ignorati, generando dati non accurati.  
  
> [!NOTE]
>  Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> proprietà viene <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException> viene generata un'eccezione. Categorie di contatori delle prestazioni create con le versioni precedenti usano la memoria globale condivisa e il valore per <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>. Se la categoria non viene utilizzata da applicazioni in esecuzione nella versione 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria.  
  
> [!NOTE]
>  Per leggere i contatori delle prestazioni in Windows Vista, Windows XP Professional x64 Edition o Windows Server 2003, è necessario essere un membro del gruppo Performance Monitor Users o disporre di privilegi amministrativi.  
>   
>  Per evitare la necessità di elevare i privilegi per accedere ai contatori delle prestazioni in Windows Vista, aggiungersi al gruppo Performance Monitor Users.  
>   
>  In Windows Vista, 	la funzionalità Controllo dell'account utente determina i privilegi di un utente. Ai membri del gruppo Administrators predefinito vengono assegnati due token di accesso in fase di esecuzione, ovvero un token di accesso utente standard e un token di accesso amministratore. Per impostazione predefinita, viene assegnato il ruolo dell'utente standard. Per eseguire il codice che accede ai contatori delle prestazioni, è innanzitutto necessario elevare i privilegi da utente standard all'amministratore. È possibile farlo quando si avvia un'applicazione facendo clic con il pulsante destro del mouse sull'icona dell'applicazione e indicando l'opzione di esecuzione come amministratore.  
  
   
  
## Examples  
 L'esempio seguente usa il <xref:System.Diagnostics.CounterSample> per visualizzare il valore della classe di <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> proprietà per un contatore.  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">You are trying to set the counter's raw value, but the counter is read-only.  -or-  The instance is not correctly associated with a performance counter.  -or-  The <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> property is set to <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> when using global shared memory.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Code that is executing without administrative privileges attempted to read a performance counter.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la scrittura di categoria del contatore delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Diagnostics.PerformanceCounter.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The accessability level of the counter.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether this <see cref="T:System.Diagnostics.PerformanceCounter" /> instance is in read-only mode.</summary>
        <value>
          <see langword="true" />, se il <see cref="T:System.Diagnostics.PerformanceCounter" /> istanza è in modalità di sola lettura (anche se il contatore stesso possa essere un contatore personalizzato .NET Framework). <see langword="false" /> se è in modalità lettura/scrittura. Il valore predefinito è il valore impostato dal costruttore.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per un contatore di sistema, <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> dovrebbe essere sempre `true`. È possibile scrivere un contatore di sistema.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveInstance">
      <MemberSignature Language="C#" Value="public void RemoveInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.RemoveInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveInstance();" />
      <MemberSignature Language="F#" Value="member this.RemoveInstance : unit -&gt; unit" Usage="performanceCounter.RemoveInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deletes the category instance specified by the <see cref="T:System.Diagnostics.PerformanceCounter" /> object <see cref="P:System.Diagnostics.PerformanceCounter.InstanceName" /> property.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile rimuovere un'istanza solo per un contatore personalizzato. Tutti i contatori di sistema sono di sola lettura, pertanto il tentativo di rimuovere uno di essi genera un'eccezione.  
  
> [!NOTE]
>  Per evitare una possibile race condition quando viene rilasciata la memoria condivisa per un contatore delle prestazioni, è consigliabile che il <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A> chiamare il metodo tramite la <xref:System.AppDomain.DomainUnload> gestore dell'evento.  
  
 Per creare un'istanza di categoria delle prestazioni, specificare un `instanceName` nella <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> costruttore. Se l'istanza di categoria specificato da `instanceName` esiste già il nuovo oggetto farà riferimento all'istanza di categoria esistente.  
  
> [!NOTE]
>  Se il valore per il <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> proprietà viene <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> e la categoria del contatore delle prestazioni è stata creata con .NET Framework versione 1.0 o 1.1, un <xref:System.InvalidOperationException> viene generata un'eccezione. Categorie di contatori delle prestazioni create con le versioni precedenti usano la memoria globale condivisa e il valore per <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> deve essere <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>. Se la categoria non viene utilizzata da applicazioni in esecuzione nella versione 1.0 o 1.1 di .NET Framework, eliminare e ricreare la categoria.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">This counter is read-only, so any instance that is associated with the category cannot be removed.  -or-  The instance is not correctly associated with a performance counter.  -or-  The <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> property is set to <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> when using global shared memory.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">An error occurred when accessing a system API.</exception>
        <exception cref="T:System.PlatformNotSupportedException">The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">per la scrittura di categoria del contatore delle prestazioni. Enumerazione associata: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
  </Members>
</Type>