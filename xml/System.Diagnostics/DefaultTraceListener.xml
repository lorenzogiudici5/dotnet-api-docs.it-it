<Type Name="DefaultTraceListener" FullName="System.Diagnostics.DefaultTraceListener">
  <TypeSignature Language="C#" Value="public class DefaultTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DefaultTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DefaultTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultTraceListener : System::Diagnostics::TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="06ec4-101">Fornisce i metodi di output predefiniti e il comportamento per la traccia.</span><span class="sxs-lookup"><span data-stu-id="06ec4-101">Provides the default output methods and behavior for tracing.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06ec4-102">Un'istanza di questa classe viene aggiunta automaticamente per il <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> e <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> raccolte.</span><span class="sxs-lookup"><span data-stu-id="06ec4-102">An instance of this class is automatically added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections.</span></span> <span data-ttu-id="06ec4-103">In modo esplicito l'aggiunta di un secondo <xref:System.Diagnostics.DefaultTraceListener> cause duplicare i messaggi nella finestra di output del debugger e finestre di messaggi duplicati per le asserzioni.</span><span class="sxs-lookup"><span data-stu-id="06ec4-103">Explicitly adding a second <xref:System.Diagnostics.DefaultTraceListener> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.</span></span>  
  
 <span data-ttu-id="06ec4-104">Per impostazione predefinita, il <xref:System.Diagnostics.DefaultTraceListener.Write%2A> e <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> metodi creano il messaggio a Win32 `OutputDebugString` (funzione) e di ottenere il <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="06ec4-104">By default, the <xref:System.Diagnostics.DefaultTraceListener.Write%2A> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods emit the message to the Win32 `OutputDebugString` function and to the <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="06ec4-105">Per informazioni di `OutputDebugString` di funzione, vedere Platform SDK o MSDN.</span><span class="sxs-lookup"><span data-stu-id="06ec4-105">For information about the `OutputDebugString` function, see the Platform SDK or MSDN.</span></span>  
  
 <span data-ttu-id="06ec4-106">Il <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> (metodo), per impostazione predefinita, viene visualizzato un messaggio quando l'applicazione è in esecuzione in modalità interfaccia utente; emette anche il messaggio utilizzando <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>.</span><span class="sxs-lookup"><span data-stu-id="06ec4-106">The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06ec4-107">La visualizzazione della finestra di messaggio per <xref:System.Diagnostics.Debug.Assert%2A> e <xref:System.Diagnostics.Debug.Fail%2A> chiamate al metodo dipende dalla presenza del <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06ec4-107">The display of the message box for <xref:System.Diagnostics.Debug.Assert%2A> and <xref:System.Diagnostics.Debug.Fail%2A> method calls depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="06ec4-108">Se il <xref:System.Diagnostics.DefaultTraceListener> non si trova nel <xref:System.Diagnostics.Trace.Listeners%2A> insieme, la finestra di messaggio non viene visualizzata.</span><span class="sxs-lookup"><span data-stu-id="06ec4-108">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="06ec4-109">Il <xref:System.Diagnostics.DefaultTraceListener> può essere rimossa mediante il [ \<deselezionare > elemento](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), dal [ \<rimuovere > elemento](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), o chiamando il <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metodo il <xref:System.Diagnostics.Trace.Listeners%2A> proprietà (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="06ec4-109">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\<clear> element](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), by the [\<remove> element](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="06ec4-110">È necessario abilitare l'analisi o di debug per l'utilizzo di un listener di traccia.</span><span class="sxs-lookup"><span data-stu-id="06ec4-110">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="06ec4-111">La sintassi seguente è specifica del compilatore.</span><span class="sxs-lookup"><span data-stu-id="06ec4-111">The following syntax is compiler specific.</span></span> <span data-ttu-id="06ec4-112">Se si utilizzano compilatori diversi da c# o Visual Basic, vedere la documentazione del compilatore.</span><span class="sxs-lookup"><span data-stu-id="06ec4-112">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="06ec4-113">Per abilitare il debug in c#, aggiungere il `/d:DEBUG` flag alla riga di comando del compilatore quando si compila il codice o aggiungere `#define DEBUG` all'inizio del file.</span><span class="sxs-lookup"><span data-stu-id="06ec4-113">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="06ec4-114">In Visual Basic, aggiungere il `/d:DEBUG=True` flag alla riga di comando del compilatore.</span><span class="sxs-lookup"><span data-stu-id="06ec4-114">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="06ec4-115">Per abilitare la traccia in c#, aggiungere il `/d:TRACE` flag alla riga di comando del compilatore quando si compila il codice o aggiungere `#define TRACE` all'inizio del file.</span><span class="sxs-lookup"><span data-stu-id="06ec4-115">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="06ec4-116">In Visual Basic, aggiungere il `/d:TRACE=True` flag alla riga di comando del compilatore.</span><span class="sxs-lookup"><span data-stu-id="06ec4-116">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="06ec4-117">Per aggiungere un listener di traccia, modificare il file di configurazione che corrisponde al nome dell'applicazione.</span><span class="sxs-lookup"><span data-stu-id="06ec4-117">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="06ec4-118">All'interno di questo file, è possibile aggiungere un listener, impostarne il tipo di impostare i parametri, rimuovere un listener o cancellare tutti i listener precedentemente impostati dall'applicazione.</span><span class="sxs-lookup"><span data-stu-id="06ec4-118">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="06ec4-119">Il file di configurazione deve essere formattato simile all'esempio seguente:</span><span class="sxs-lookup"><span data-stu-id="06ec4-119">The configuration file should be formatted similar to the following example:</span></span>  
  
```xml  
<configuration>  
<system.diagnostics>  
  <trace autoflush="false" indentsize="4">  
    <listeners>  
      <remove name="Default" />  
      <add name="myListener"  type="System.Diagnostics.TextWriterTraceListener"    initializeData="c:\myListener.log" />  
    </listeners>  
  </trace>  
</system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="06ec4-120">Esempio di codice seguente calcola coefficienti binomiali di valori utilizzati in probabilità e statistiche.</span><span class="sxs-lookup"><span data-stu-id="06ec4-120">The following code example calculates binomial coefficients, which are values used in probability and statistics.</span></span> <span data-ttu-id="06ec4-121">Questo esempio viene utilizzato un <xref:System.Diagnostics.DefaultTraceListener> risultati di traccia e registrazione degli errori.</span><span class="sxs-lookup"><span data-stu-id="06ec4-121">This example uses a <xref:System.Diagnostics.DefaultTraceListener> to trace results and log errors.</span></span> <span data-ttu-id="06ec4-122">Viene creato un nuovo <xref:System.Diagnostics.DefaultTraceListener>, lo aggiunge al <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> insieme e imposta il <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> proprietà nel file di log specificato negli argomenti della riga di comando.</span><span class="sxs-lookup"><span data-stu-id="06ec4-122">It creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.</span></span>  
  
 <span data-ttu-id="06ec4-123">Se viene rilevato un errore durante l'elaborazione il parametro di input o se il `CalcBinomial` funzione genera un'eccezione, il <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> metodo registra e visualizza un messaggio di errore.</span><span class="sxs-lookup"><span data-stu-id="06ec4-123">If an error is detected while processing the input parameter, or if the `CalcBinomial` function throws an exception, the <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method logs and displays an error message.</span></span> <span data-ttu-id="06ec4-124">Se il <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> proprietà `false`, anche il messaggio di errore viene scritto nella console.</span><span class="sxs-lookup"><span data-stu-id="06ec4-124">If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the error message is also written to the console.</span></span> <span data-ttu-id="06ec4-125">Quando il risultato viene calcolato correttamente, il <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> e <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> metodi scrivono i risultati nel file di log.</span><span class="sxs-lookup"><span data-stu-id="06ec4-125">When the result is calculated successfully, the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> methods write the results to the log file.</span></span>  
  
 <span data-ttu-id="06ec4-126">Il <xref:System.Diagnostics.DefaultTraceListener.Fail%2A>, <xref:System.Diagnostics.DefaultTraceListener.Write%2A>, e <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> metodi che le informazioni di traccia essere scritto solo il <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06ec4-126">The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A>, <xref:System.Diagnostics.DefaultTraceListener.Write%2A>, and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods cause trace information to be written only to the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="06ec4-127">Per scrivere le informazioni di traccia nei listener di tutti i <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> insieme, utilizzare il <xref:System.Diagnostics.Trace.Fail%2A>, <xref:System.Diagnostics.Trace.Write%2A>, e <xref:System.Diagnostics.Trace.WriteLine%2A> metodi del <xref:System.Diagnostics.Trace> classe.</span><span class="sxs-lookup"><span data-stu-id="06ec4-127">To write trace information to all listeners in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, use the <xref:System.Diagnostics.Trace.Fail%2A>, <xref:System.Diagnostics.Trace.Write%2A>, and <xref:System.Diagnostics.Trace.WriteLine%2A> methods of the <xref:System.Diagnostics.Trace> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#11)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#11)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="06ec4-128">Questa classe è thread-safe.</span><span class="sxs-lookup"><span data-stu-id="06ec4-128">This class is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06ec4-129">Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.DefaultTraceListener" /> con "Default" come valore della proprietà <see cref="P:System.Diagnostics.TraceListener.Name" />.</span><span class="sxs-lookup"><span data-stu-id="06ec4-129">Initializes a new instance of the <see cref="T:System.Diagnostics.DefaultTraceListener" /> class with "Default" as its <see cref="P:System.Diagnostics.TraceListener.Name" /> property value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="06ec4-130">Rimuove di esempio di codice seguente il <xref:System.Diagnostics.DefaultTraceListener> fornita dall'applicazione dal <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> raccolta e quindi crea un nuovo <xref:System.Diagnostics.DefaultTraceListener> e lo aggiunge al <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> insieme.</span><span class="sxs-lookup"><span data-stu-id="06ec4-130">The following code example removes the <xref:System.Diagnostics.DefaultTraceListener> provided by the application from the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection and then creates a new <xref:System.Diagnostics.DefaultTraceListener> and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#3)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="AssertUiEnabled">
      <MemberSignature Language="C#" Value="public bool AssertUiEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AssertUiEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property AssertUiEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AssertUiEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("AssertUiEnabled defaults to False; should follow Environment.UserInteractive.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06ec4-131">Ottiene o imposta un valore che indica se l'applicazione è in esecuzione nella modalità interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="06ec4-131">Gets or sets a value indicating whether the application is running in user-interface mode.</span></span></summary>
        <value>
          <span data-ttu-id="06ec4-132"><see langword="true" /> se la modalità interfaccia utente è attivata; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06ec4-132"><see langword="true" /> if user-interface mode is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="06ec4-133">Esempio di codice seguente chiama una funzione che chiama il <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> metodo per accedere a un messaggio di errore se la funzione genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="06ec4-133">The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log an error message if the function throws an exception.</span></span> <span data-ttu-id="06ec4-134">Se il <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> proprietà `false`, il metodo, il messaggio di errore viene scritto anche nella console.</span><span class="sxs-lookup"><span data-stu-id="06ec4-134">If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the method also writes the error message to the console.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06ec4-135">Genera o visualizza un messaggio e una traccia dello stack per un'asserzione che ha sempre esito negativo.</span><span class="sxs-lookup"><span data-stu-id="06ec4-135">Emits or displays a message and a stack trace for an assertion that always fails.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="06ec4-136">Messaggio da generare o da visualizzare.</span><span class="sxs-lookup"><span data-stu-id="06ec4-136">The message to emit or display.</span></span></param>
        <summary><span data-ttu-id="06ec4-137">Genera o visualizza un messaggio e una traccia dello stack per un'asserzione che ha sempre esito negativo.</span><span class="sxs-lookup"><span data-stu-id="06ec4-137">Emits or displays a message and a stack trace for an assertion that always fails.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06ec4-138">Per impostazione predefinita, questo metodo invia il `message` parametro e un'analisi dello stack di una finestra di messaggio (quando l'applicazione viene eseguita in modalità interfaccia utente) e di ottenere il <xref:System.Diagnostics.DefaultTraceListener> istanza.</span><span class="sxs-lookup"><span data-stu-id="06ec4-138">By default, this method sends the `message` parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06ec4-139">Esempio di codice seguente scrive un messaggio di errore per un <xref:System.Diagnostics.DefaultTraceListener> utilizzando il <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="06ec4-139">The following code example writes an error message to a <xref:System.Diagnostics.DefaultTraceListener> using the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29> method.</span></span> <span data-ttu-id="06ec4-140">Anche il metodo scrive il messaggio alla console se un'interfaccia utente non è disponibile.</span><span class="sxs-lookup"><span data-stu-id="06ec4-140">The method also writes the message to the console if a user interface is not available.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#6)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="06ec4-141">Messaggio da generare o da visualizzare.</span><span class="sxs-lookup"><span data-stu-id="06ec4-141">The message to emit or display.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="06ec4-142">Messaggio dettagliato da generare o da visualizzare.</span><span class="sxs-lookup"><span data-stu-id="06ec4-142">The detailed message to emit or display.</span></span></param>
        <summary><span data-ttu-id="06ec4-143">Genera o visualizza un messaggio dettagliato e una traccia dello stack per un'asserzione che ha sempre esito negativo.</span><span class="sxs-lookup"><span data-stu-id="06ec4-143">Emits or displays detailed messages and a stack trace for an assertion that always fails.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06ec4-144">Per impostazione predefinita, questo metodo invia il `message` parametro, il `detailMessage` parametro e un'analisi dello stack di una finestra di messaggio (quando l'applicazione viene eseguita in modalità interfaccia utente) e di ottenere il <xref:System.Diagnostics.DefaultTraceListener> istanza.</span><span class="sxs-lookup"><span data-stu-id="06ec4-144">By default, this method sends the `message` parameter, the `detailMessage` parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06ec4-145">Esempio di codice seguente chiama una funzione che chiama il <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> metodo per registrare un messaggio di errore dettagliato, se la funzione genera un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="06ec4-145">The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log a detailed error message if the function throws an exception.</span></span> <span data-ttu-id="06ec4-146">Se un'interfaccia utente non è disponibile, il metodo scrive il messaggio nella console.</span><span class="sxs-lookup"><span data-stu-id="06ec4-146">The method writes the message to the console if a user interface is not available.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="LogFileName">
      <MemberSignature Language="C#" Value="public string LogFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogFileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DefaultTraceListener.LogFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06ec4-147">Ottiene o imposta il nome di un file di log in cui scrivere i messaggi di traccia o debug.</span><span class="sxs-lookup"><span data-stu-id="06ec4-147">Gets or sets the name of a log file to write trace or debug messages to.</span></span></summary>
        <value><span data-ttu-id="06ec4-148">Nome di un file di log in cui scrivere messaggi di traccia o di debug.</span><span class="sxs-lookup"><span data-stu-id="06ec4-148">The name of a log file to write trace or debug messages to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="06ec4-149">Esempio di codice seguente crea un nuovo <xref:System.Diagnostics.DefaultTraceListener>, lo aggiunge al <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> insieme e imposta il <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> proprietà nel file di log specificato negli argomenti della riga di comando.</span><span class="sxs-lookup"><span data-stu-id="06ec4-149">The following code example creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="06ec4-150">Messaggio da scrivere in <see langword="OutputDebugString" /> e <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="06ec4-150">The message to write to <see langword="OutputDebugString" /> and <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span></span></param>
        <summary><span data-ttu-id="06ec4-151">Scrive l'output nella funzione <see langword="OutputDebugString" /> e nel metodo <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="06ec4-151">Writes the output to the <see langword="OutputDebugString" /> function and to the <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06ec4-152">Per informazioni su Win32 `OutputDebugString` debug funzione, vedere "OutputDebugString" in Platform SDK o MSDN.</span><span class="sxs-lookup"><span data-stu-id="06ec4-152">For information about the Win32 `OutputDebugString` debugging function, see "OutputDebugString" in the Platform SDK or MSDN.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06ec4-153">Esempio di codice seguente formatta i risultati di una funzione e utilizza il <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> metodo per la prima parte del messaggio da scrivere una <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06ec4-153">The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> method to write the first part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="06ec4-154">Messaggio da scrivere in <see langword="OutputDebugString" /> e <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="06ec4-154">The message to write to <see langword="OutputDebugString" /> and <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span></span></param>
        <summary><span data-ttu-id="06ec4-155">Scrive l'output nella funzione <see langword="OutputDebugString" /> e nel metodo <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> seguito da un ritorno a capo e da un avanzamento riga (\r\n).</span><span class="sxs-lookup"><span data-stu-id="06ec4-155">Writes the output to the <see langword="OutputDebugString" /> function and to the <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> method, followed by a carriage return and line feed (\r\n).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06ec4-156">Il terminatore di riga predefinito è un ritorno a capo seguito da un avanzamento riga (\r\n).</span><span class="sxs-lookup"><span data-stu-id="06ec4-156">The default line terminator is a carriage return followed by a line feed (\r\n).</span></span>  
  
 <span data-ttu-id="06ec4-157">Per informazioni su Win32 `OutputDebugString` debug funzione, vedere Platform SDK o MSDN.</span><span class="sxs-lookup"><span data-stu-id="06ec4-157">For information about the Win32 `OutputDebugString` debugging function, see the Platform SDK or MSDN.</span></span>  
  
 <span data-ttu-id="06ec4-158">Questo metodo imposta la <xref:System.Diagnostics.TraceListener.NeedIndent%2A> proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="06ec4-158">This method sets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06ec4-159">Esempio di codice seguente formatta i risultati di una funzione e utilizza il <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> metodo per l'ultima parte del messaggio da scrivere una <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06ec4-159">The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> method to write the last part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>