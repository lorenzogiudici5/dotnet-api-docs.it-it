<Type Name="IMessageSink" FullName="System.Runtime.Remoting.Messaging.IMessageSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1dd3980c6db096c63bf5a16dc14529fdeaebe51c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36631074" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.IMessageSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMessageSink" />
  <TypeSignature Language="F#" Value="type IMessageSink = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definisce l'interfaccia per un sink di messaggi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando viene effettuata una chiamata al metodo sul proxy, l'infrastruttura remota fornisce il supporto necessario per passare gli argomenti all'oggetto effettivo attraverso limiti remoti, chiamando il metodo di oggetto effettivo con gli argomenti e restituire i risultati fino a il client dell'oggetto proxy.  
  
 Una chiamata al metodo remoto è un messaggio che va da lato client e la fine di server e possibilmente nuovamente. Quando la modalità di attraversa i limiti remoti, la chiamata al metodo remoto passa attraverso una catena di `IMessageSink` oggetti. Ogni sink nella catena di riceve l'oggetto messaggio, esegue un'operazione specifica e delega al sink successivo nella catena. L'oggetto proxy contiene un riferimento al primo `IMessageSink` deve utilizzare per iniziare la catena.  
  
 Per le chiamate asincrone, al momento della delega, ogni sink fornisce un sink di risposta (un altro `IMessageSink`) che verrà chiamato dal sink successivo quando la risposta verrà presto recapitato nuovamente.  
  
 Tipi diversi di sink eseguono operazioni diverse, a seconda del tipo di oggetto del messaggio ricevuto. Ad esempio, un sink potrebbe causare un blocco da eseguire, un altro è stato possibile applicare la sicurezza delle chiamate, un altro è stato possibile eseguire servizi di controllo e l'affidabilità chiamate di flusso e un altro ancora trasmettere la chiamata a un altro <xref:System.AppDomain>, processo o computer. Sink di due o più dei messaggi nella catena di interagire tra loro per quanto riguarda ciascuna azione specifica.  
  
   
  
## Examples  
 Esempio di codice seguente viene illustrata l'implementazione del <xref:System.Runtime.Remoting.Messaging.IMessageSink> interfaccia. Si noti che l'esempio presuppone che le definizioni dei tipi e riferimenti ad assembly che devono essere forniti per l'esempio per la compilazione.  
  
 [!code-cpp[IMessageSink_Client#3](~/samples/snippets/cpp/VS_Snippets_Remoting/IMessageSink_Client/CPP/imessagesink_client.cpp#3)]
 [!code-csharp[IMessageSink_Client#3](~/samples/snippets/csharp/VS_Snippets_Remoting/IMessageSink_Client/CS/imessagesink_client.cs#3)]
 [!code-vb[IMessageSink_Client#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMessageSink_Client/VB/imessagesink_client.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>È importante notare che il codice che implementa l'interfaccia corrente deve fornire le implementazioni per entrambi <see cref="M:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" /> e <see cref="M:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />, dal momento che le chiamate sincrone possono essere convertite in chiamate asincrone e viceversa. Anche se il sink non supporta l'elaborazione asincrona, è necessario implementare entrambi i metodi.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="AsyncProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Messaging.IMessageSink replySink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function AsyncProcessMessage (msg As IMessage, replySink As IMessageSink) As IMessageCtrl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Messaging::IMessageCtrl ^ AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Messaging::IMessageSink ^ replySink);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Messaging.IMessageSink -&gt; System.Runtime.Remoting.Messaging.IMessageCtrl" Usage="iMessageSink.AsyncProcessMessage (msg, replySink)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageCtrl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="replySink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
      </Parameters>
      <Docs>
        <param name="msg">Messaggio da elaborare.</param>
        <param name="replySink">Sink di risposta per il messaggio di risposta.</param>
        <summary>Elabora in modo asincrono il messaggio fornito.</summary>
        <returns>Restituisce un'interfaccia <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> che consente di controllare i messaggi asincroni dopo il loro invio.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo viene richiamato sul sink di messaggi dall'infrastruttura di servizi remoti o da un sink precedente per messaggi asincroni.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Il chiamante immediato esegue la chiamata tramite un riferimento all'interfaccia, ma non dispone delle autorizzazioni di accesso all'infrastruttura.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per operare con il codice dell'infrastruttura. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valore di autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="NextSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink NextSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Messaging.IMessageSink NextSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMessageSink.NextSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSink As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Messaging::IMessageSink ^ NextSink { System::Runtime::Remoting::Messaging::IMessageSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSink : System.Runtime.Remoting.Messaging.IMessageSink" Usage="System.Runtime.Remoting.Messaging.IMessageSink.NextSink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il successivo sink di messaggi nella catena di sink.</summary>
        <value>Sink di messaggi successivo nella catena di sink.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Il chiamante immediato esegue la chiamata tramite un riferimento all'interfaccia, ma non dispone delle autorizzazioni di accesso all'infrastruttura.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per operare con il codice dell'infrastruttura. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valore di autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SyncProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SyncProcessMessage (msg As IMessage) As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Messaging::IMessage ^ SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg);" />
      <MemberSignature Language="F#" Value="abstract member SyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage -&gt; System.Runtime.Remoting.Messaging.IMessage" Usage="iMessageSink.SyncProcessMessage msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
      </Parameters>
      <Docs>
        <param name="msg">Messaggio da elaborare.</param>
        <summary>Elabora in modo sincrono il messaggio fornito.</summary>
        <returns>Messaggio di risposta alla richiesta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A> metodo viene richiamato sul sink di messaggi dall'infrastruttura di servizi remoti o da un sink precedente per i messaggi sincroni.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Il chiamante immediato esegue la chiamata tramite un riferimento all'interfaccia, ma non dispone delle autorizzazioni di accesso all'infrastruttura.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">per operare con il codice dell'infrastruttura. Valore richiesta: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valore di autorizzazione: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>