<Type Name="AsyncResult" FullName="System.Runtime.Remoting.Messaging.AsyncResult">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6524151a260446e4b3bf552185f52b72a778b3fa" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39733733" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AsyncResult : IAsyncResult, System.Runtime.Remoting.Messaging.IMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit AsyncResult extends System.Object implements class System.IAsyncResult, class System.Runtime.Remoting.Messaging.IMessageSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.AsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncResult&#xA;Implements IAsyncResult, IMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncResult : IAsyncResult, System::Runtime::Remoting::Messaging::IMessageSink" />
  <TypeSignature Language="F#" Value="type AsyncResult = class&#xA;    interface IAsyncResult&#xA;    interface IMessageSink" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IMessageSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8b6af-101">Incapsula i risultati di un'operazione asincrona su un delegato.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b6af-101">Encapsulates the results of an asynchronous operation on a delegate.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6af-102">Il <xref:System.Runtime.Remoting.Messaging.AsyncResult> classe viene utilizzata in combinazione con chiamate del metodo asincrono tramite delegati.</span><span class="sxs-lookup"><span data-stu-id="8b6af-102">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> class is used in conjunction with asynchronous method calls made using delegates.</span></span> <span data-ttu-id="8b6af-103">Il <xref:System.IAsyncResult> restituito dal delegato `BeginInvoke` metodo può essere convertito in un <xref:System.Runtime.Remoting.Messaging.AsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="8b6af-103">The <xref:System.IAsyncResult> returned from the delegate's `BeginInvoke` method can be cast to an <xref:System.Runtime.Remoting.Messaging.AsyncResult>.</span></span> <span data-ttu-id="8b6af-104">Il <xref:System.Runtime.Remoting.Messaging.AsyncResult> ha il <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> proprietà che contiene il delegato dell'oggetto su cui è stata richiamata la chiamata asincrona.</span><span class="sxs-lookup"><span data-stu-id="8b6af-104">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> has the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> property that holds the delegate object on which the asynchronous call was invoked.</span></span>  
  
 <span data-ttu-id="8b6af-105">Per altre informazioni sulle `BeginInvoke` e le chiamate asincrone con i delegati, vedere [programmazione asincrona tramite delegati](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span><span class="sxs-lookup"><span data-stu-id="8b6af-105">For more information about `BeginInvoke` and asynchronous calls using delegates, see [Asynchronous Programming Using Delegates](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b6af-106">L'esempio seguente illustra come usare il <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> proprietà da ottenere un <xref:System.Threading.WaitHandle>e come in attesa di una chiamata asincrona su un delegato.</span><span class="sxs-lookup"><span data-stu-id="8b6af-106">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="8b6af-107">L'oggetto <xref:System.Threading.WaitHandle> viene segnalato al completamento della chiamata asincrona ed è possibile attenderlo chiamando il metodo <xref:System.Threading.WaitHandle.WaitOne%2A> .</span><span class="sxs-lookup"><span data-stu-id="8b6af-107">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="8b6af-108">L'esempio è costituito da due classi, la classe che contiene il metodo che viene chiamato in modo asincrono, e la classe che contiene il `Main` metodo che effettua la chiamata.</span><span class="sxs-lookup"><span data-stu-id="8b6af-108">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="8b6af-109">Per altre informazioni ed esempi di chiamate ai metodi in modo asincrono usando i delegati, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8b6af-109">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsyncDelegate">
      <MemberSignature Language="C#" Value="public virtual object AsyncDelegate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncDelegate As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ AsyncDelegate { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncDelegate : obj" Usage="System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b6af-110">Ottiene l'oggetto delegato sul quale è stata richiamata la chiamata asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-110">Gets the delegate object on which the asynchronous call was invoked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b6af-111">Oggetto delegato sul quale è stata richiamata la chiamata asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-111">The delegate object on which the asynchronous call was invoked.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6af-112">Il <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> proprietà può essere eseguito il cast alla classe effettiva del delegato definito dall'utente.</span><span class="sxs-lookup"><span data-stu-id="8b6af-112">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> property can be cast to the actual class of the user-defined delegate.</span></span>  
  
 <span data-ttu-id="8b6af-113">Ad esempio, se il delegato usato per effettuare la chiamata asincrona JE typu `MyDelegate`, il delegato restituito da questa proprietà deve essere impostato `MyDelegate`.</span><span class="sxs-lookup"><span data-stu-id="8b6af-113">For example, if the delegate that was used to make the asynchronous call is of type `MyDelegate`, the delegate that is returned by this property must be cast to `MyDelegate`.</span></span> <span data-ttu-id="8b6af-114">Il metodo di callback può quindi chiamare il delegato `EndInvoke` metodo con la firma corretta, per ottenere i risultati della chiamata al metodo asincrona.</span><span class="sxs-lookup"><span data-stu-id="8b6af-114">The callback method can then call the delegate's `EndInvoke` method with the correct signature, in order to obtain the results of the asynchronous method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b6af-115">Esempio di codice seguente viene illustrato come utilizzare il <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> proprietà per ottenere il delegato usato per effettuare la chiamata asincrona, per poter chiamare `EndInvoke`.</span><span class="sxs-lookup"><span data-stu-id="8b6af-115">The following code example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> property to get the delegate that was used to make the asynchronous call, in order to call `EndInvoke`.</span></span> <span data-ttu-id="8b6af-116">I cast di esempio il <xref:System.IAsyncResult>, che è l'unico parametro del metodo di callback, a un <xref:System.Runtime.Remoting.Messaging.AsyncResult> oggetto.</span><span class="sxs-lookup"><span data-stu-id="8b6af-116">The example casts the <xref:System.IAsyncResult>, which is the only parameter of the callback method, to an <xref:System.Runtime.Remoting.Messaging.AsyncResult> object.</span></span>  
  
 <span data-ttu-id="8b6af-117">L'esempio è costituito da due classi, la classe che contiene il metodo che viene chiamato in modo asincrono, e la classe che contiene il `Main` metodo che effettua la chiamata.</span><span class="sxs-lookup"><span data-stu-id="8b6af-117">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="8b6af-118">Per altre informazioni sulla modalità funziona in questo esempio di callback, e altri esempi di chiamate in modo asincrono da metodi tramite delegati, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8b6af-118">For more information on the way this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessMessage">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Messaging.IMessageSink replySink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AsyncProcessMessage (msg As IMessage, replySink As IMessageSink) As IMessageCtrl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageCtrl ^ AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Messaging::IMessageSink ^ replySink);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Messaging.IMessageSink -&gt; System.Runtime.Remoting.Messaging.IMessageCtrl&#xA;override this.AsyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Messaging.IMessageSink -&gt; System.Runtime.Remoting.Messaging.IMessageCtrl" Usage="asyncResult.AsyncProcessMessage (msg, replySink)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageCtrl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="replySink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="8b6af-119">L'interfaccia <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> di richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-119">The request <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> interface.</span>
          </span>
        </param>
        <param name="replySink">
          <span data-ttu-id="8b6af-120">L'interfaccia <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> di risposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-120">The response <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b6af-121">Implementa l'interfaccia <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-121">Implements the <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b6af-122">Non vengono restituiti valori.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-122">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6af-123">Il <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage%2A> metodo per il <xref:System.Runtime.Remoting.Messaging.IMessageSink> interfaccia non è rilevante per il <xref:System.Runtime.Remoting.Messaging.AsyncResult> classe.</span><span class="sxs-lookup"><span data-stu-id="8b6af-123">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage%2A> method of the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface is not relevant to the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class.</span></span> <span data-ttu-id="8b6af-124">Implementazione dell'oggetto <xref:System.Runtime.Remoting.Messaging.AsyncResult> genera un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="8b6af-124">Implementation by <xref:System.Runtime.Remoting.Messaging.AsyncResult> throws a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="8b6af-125">In alternativa, ottenere un <xref:System.Runtime.Remoting.Messaging.AsyncResult> eseguendo il cast di <xref:System.IAsyncResult> interfaccia restituita da una chiamata asincrona eseguita usando un delegato.</span><span class="sxs-lookup"><span data-stu-id="8b6af-125">Instead, obtain an <xref:System.Runtime.Remoting.Messaging.AsyncResult> by casting the <xref:System.IAsyncResult> interface returned by an asynchronous call made using a delegate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public virtual object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj" Usage="System.Runtime.Remoting.Messaging.AsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b6af-126">Ottiene l'oggetto fornito come ultimo parametro di una chiamata di metodo <see langword="BeginInvoke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-126">Gets the object provided as the last parameter of a <see langword="BeginInvoke" /> method call.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b6af-127">Oggetto fornito come ultimo parametro di una chiamata di metodo <see langword="BeginInvoke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-127">The object provided as the last parameter of a <see langword="BeginInvoke" /> method call.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6af-128">Per altre informazioni sul `BeginInvoke` metodo, vedere [programmazione asincrona tramite delegati](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span><span class="sxs-lookup"><span data-stu-id="8b6af-128">For more information about the `BeginInvoke` method, see [Asynchronous Programming Using Delegates](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b6af-129">L'esempio di codice seguente illustra come il <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> proprietà viene utilizzata per passare informazioni a un metodo di callback.</span><span class="sxs-lookup"><span data-stu-id="8b6af-129">The following code example demonstrates how the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> property is used to pass information to a callback method.</span></span> <span data-ttu-id="8b6af-130">L'ultimo parametro del `BeginInvoke` chiamata al metodo è una stringa di formato, che usa il metodo di callback per formattare un messaggio di output.</span><span class="sxs-lookup"><span data-stu-id="8b6af-130">The last parameter of the `BeginInvoke` method call is a format string, which the callback method uses to format an output message.</span></span>  
  
 <span data-ttu-id="8b6af-131">L'esempio è costituito da due classi, la classe che contiene il metodo che viene chiamato in modo asincrono, e la classe che contiene il `Main` metodo che effettua la chiamata.</span><span class="sxs-lookup"><span data-stu-id="8b6af-131">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="8b6af-132">Per altre informazioni sulla modalità funziona in questo esempio di callback, e altri esempi di chiamate in modo asincrono da metodi tramite delegati, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8b6af-132">For more information on the way this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public virtual System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncWaitHandle : System.Threading.WaitHandle" Usage="System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncWaitHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b6af-133">Ottiene un oggetto <see cref="T:System.Threading.WaitHandle" /> che incapsula handle di sincronizzazione Win32 e consente l'implementazione di vari schemi di sincronizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-133">Gets a <see cref="T:System.Threading.WaitHandle" /> that encapsulates Win32 synchronization handles, and allows the implementation of various synchronization schemes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b6af-134">
            <see cref="T:System.Threading.WaitHandle" /> che incapsula handle di sincronizzazione Win32 e consente l'implementazione di vari schemi di sincronizzazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-134">A <see cref="T:System.Threading.WaitHandle" /> that encapsulates Win32 synchronization handles, and allows the implementation of various synchronization schemes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6af-135">Il <xref:System.Threading.WaitHandle> restituito da questo metodo viene segnalato automaticamente al completamento dell'operazione asincrona.</span><span class="sxs-lookup"><span data-stu-id="8b6af-135">The <xref:System.Threading.WaitHandle> returned by this method is automatically signaled when the asynchronous operation has completed.</span></span>  
  
 <span data-ttu-id="8b6af-136">L'handle di attesa non viene chiuso automaticamente quando si chiama `EndInvoke` sul delegato usato per chiamare il metodo asincrono.</span><span class="sxs-lookup"><span data-stu-id="8b6af-136">The wait handle is not closed automatically when you call `EndInvoke` on the delegate that was used to make the asynchronous method call.</span></span> <span data-ttu-id="8b6af-137">Se si rilasciano tutti i riferimenti all'handle di attesa, le risorse di sistema vengono liberate quando Garbage Collection recupera l'handle di attesa.</span><span class="sxs-lookup"><span data-stu-id="8b6af-137">If you release all references to the wait handle, system resources are freed when garbage collection reclaims the wait handle.</span></span> <span data-ttu-id="8b6af-138">Per liberare le risorse di sistema, non appena si desidera più utilizzare l'handle di attesa, chiamare il <xref:System.Threading.WaitHandle.Close%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8b6af-138">To free the system resources as soon as you are finished using the wait handle, call the <xref:System.Threading.WaitHandle.Close%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8b6af-139">Operazione di Garbage collection funziona in modo più efficiente quando gli oggetti eliminabili chiuse o eliminati in modo esplicito.</span><span class="sxs-lookup"><span data-stu-id="8b6af-139">Garbage collection works more efficiently when disposable objects are explicitly closed or disposed.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8b6af-140">Il <xref:System.Threading.WaitHandle> contenuti nel <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> proprietà può essere utilizzata per bloccare il thread corrente fino al completamento della chiamata asincrona.</span><span class="sxs-lookup"><span data-stu-id="8b6af-140">The <xref:System.Threading.WaitHandle> contained in the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property can be used to block the current thread until the asynchronous call is complete.</span></span> <span data-ttu-id="8b6af-141">Tuttavia il <xref:System.Threading.WaitHandle> ignorerà il <xref:System.AsyncCallback>, se ne è stata specificata durante la `BeginInvoke` chiamare.</span><span class="sxs-lookup"><span data-stu-id="8b6af-141">However the <xref:System.Threading.WaitHandle> will ignore the <xref:System.AsyncCallback>, if one was specified during the `BeginInvoke` call.</span></span> <span data-ttu-id="8b6af-142">Di conseguenza, una situazione può verificarsi in cui l'applicazione viene arrestata prima la <xref:System.AsyncCallback> ha terminato l'esecuzione, anche se un <xref:System.Threading.WaitHandle> viene usato al blocco fino al completamento della chiamata asincrona.</span><span class="sxs-lookup"><span data-stu-id="8b6af-142">Therefore, a situation can occur where the application shuts down before the <xref:System.AsyncCallback> has finished executing, even if a <xref:System.Threading.WaitHandle> is used to block until the asynchronous call completion.</span></span> <span data-ttu-id="8b6af-143">Per un esempio di una situazione di questo tipo, vedere l'esempio per la <xref:System.Runtime.Remoting.Messaging.AsyncResult> classe e rimuovere il <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> istruzione.</span><span class="sxs-lookup"><span data-stu-id="8b6af-143">For an example of such a situation, see the example for the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class, and remove the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> statement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b6af-144">L'esempio seguente illustra come usare il <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> proprietà da ottenere un <xref:System.Threading.WaitHandle>e come in attesa di una chiamata asincrona su un delegato.</span><span class="sxs-lookup"><span data-stu-id="8b6af-144">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="8b6af-145">L'oggetto <xref:System.Threading.WaitHandle> viene segnalato al completamento della chiamata asincrona ed è possibile attenderlo chiamando il metodo <xref:System.Threading.WaitHandle.WaitOne%2A> .</span><span class="sxs-lookup"><span data-stu-id="8b6af-145">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="8b6af-146">L'esempio è costituito da due classi, la classe che contiene il metodo che viene chiamato in modo asincrono, e la classe che contiene il `Main` metodo che effettua la chiamata.</span><span class="sxs-lookup"><span data-stu-id="8b6af-146">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="8b6af-147">Per altre informazioni ed esempi di chiamate ai metodi in modo asincrono usando i delegati, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8b6af-147">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.WaitHandle" />
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public virtual bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CompletedSynchronously : bool" Usage="System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.CompletedSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b6af-148">Ottiene un valore che indica se la chiamata <see langword="BeginInvoke" /> è stata completata in modo sincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-148">Gets a value indicating whether the <see langword="BeginInvoke" /> call completed synchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b6af-149">
            <see langword="true" /> se la chiamata <see langword="BeginInvoke" /> è stata completata in modo sincrono; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-149">
              <see langword="true" /> if the <see langword="BeginInvoke" /> call completed synchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6af-150">Se è stato rilevato che il `BeginInvoke` chiamata è stata completata in modo sincrono nel <xref:System.AsyncCallback> delegato, è probabile che il thread che ha chiamato BeginInvoke è il thread corrente.</span><span class="sxs-lookup"><span data-stu-id="8b6af-150">If it is detected that the `BeginInvoke` call completed synchronously in the <xref:System.AsyncCallback> delegate, it is probable that the thread that called BeginInvoke is the current thread.</span></span> <span data-ttu-id="8b6af-151">La maggior parte dei provider del <xref:System.IAsyncResult> interfaccia non userà la funzionalità e verrà restituito un valore predefinito `false`.</span><span class="sxs-lookup"><span data-stu-id="8b6af-151">Most providers of the <xref:System.IAsyncResult> interface will not use the capability and will return a default `false`.</span></span>  
  
 <span data-ttu-id="8b6af-152">L'implementazione corrente di <xref:System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously%2A> restituisce sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="8b6af-152">Current implementation of <xref:System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInvokeCalled">
      <MemberSignature Language="C#" Value="public bool EndInvokeCalled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndInvokeCalled" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.EndInvokeCalled" />
      <MemberSignature Language="VB.NET" Value="Public Property EndInvokeCalled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndInvokeCalled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EndInvokeCalled : bool with get, set" Usage="System.Runtime.Remoting.Messaging.AsyncResult.EndInvokeCalled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b6af-153">Ottiene o imposta un valore che indica se <see langword="EndInvoke" /> è stato chiamato sul <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-153">Gets or sets a value indicating whether <see langword="EndInvoke" /> has been called on the current <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b6af-154">
            <see langword="true" /> se <see langword="EndInvoke" /> è stato chiamato sul <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> corrente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-154">
              <see langword="true" /> if <see langword="EndInvoke" /> has been called on the current <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReplyMessage">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessage GetReplyMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage GetReplyMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReplyMessage () As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessage ^ GetReplyMessage();" />
      <MemberSignature Language="F#" Value="abstract member GetReplyMessage : unit -&gt; System.Runtime.Remoting.Messaging.IMessage&#xA;override this.GetReplyMessage : unit -&gt; System.Runtime.Remoting.Messaging.IMessage" Usage="asyncResult.GetReplyMessage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b6af-155">Ottiene il messaggio di risposta per la chiamata asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-155">Gets the response message for the asynchronous call.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b6af-156">Messaggio remoto che dovrebbe rappresentare la risposta a una chiamata di metodo su un oggetto remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-156">A remoting message that should represent a response to a method call on a remote object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6af-157">Il <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> metodo può restituire un oggetto dopo la <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> viene chiamato il metodo.</span><span class="sxs-lookup"><span data-stu-id="8b6af-157">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> method can return an object after the <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> method is called.</span></span> <span data-ttu-id="8b6af-158">Il <xref:System.Runtime.Remoting.Messaging.IMessage> valore restituito può essere convertito in un <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>.</span><span class="sxs-lookup"><span data-stu-id="8b6af-158">The <xref:System.Runtime.Remoting.Messaging.IMessage> return value can be cast to an <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>.</span></span>  
  
 <span data-ttu-id="8b6af-159">Tuttavia, non occorre chiamare direttamente questi metodi.</span><span class="sxs-lookup"><span data-stu-id="8b6af-159">However, you do not need to call either of these methods directly.</span></span> <span data-ttu-id="8b6af-160">Essi devono essere utilizzati dall'infrastruttura di comunicazione remota di .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="8b6af-160">They are intended for use by the remoting infrastructure of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public virtual bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.IsCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b6af-161">Ottiene un valore che indica se il server ha completato la chiamata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-161">Gets a value indicating whether the server has completed the call.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b6af-162">
            <see langword="true" /> dopo che il server ha completato la chiamata; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-162">
              <see langword="true" /> after the server has completed the call; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6af-163">Il server non deve utilizzare le risorse fornite dal client di fuori di concordata semantica di condivisione dopo avere impostato il <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="8b6af-163">The server must not use any client supplied resources outside of the agreed upon sharing semantics after it sets the <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> property to `true`.</span></span> <span data-ttu-id="8b6af-164">Di conseguenza, è opportuno che il client eliminare le risorse dopo il <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> restituisce proprietà `true`.</span><span class="sxs-lookup"><span data-stu-id="8b6af-164">Thus, it is safe for the client to destroy the resources after the <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> property returns `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b6af-165">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.IAsyncResult.IsCompleted%2A> proprietà del <xref:System.Runtime.Remoting.Messaging.AsyncResult> restituiti da `BeginInvoke` per rilevare quando viene completata una chiamata asincrona.</span><span class="sxs-lookup"><span data-stu-id="8b6af-165">The following example shows how to use the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.Runtime.Remoting.Messaging.AsyncResult> returned by `BeginInvoke` to discover when an asynchronous call completes.</span></span> <span data-ttu-id="8b6af-166">Questa operazione può essere eseguita quando si effettua la chiamata asincrona da un thread che serve l'interfaccia utente.</span><span class="sxs-lookup"><span data-stu-id="8b6af-166">You might do this when making the asynchronous call from a thread that services the user interface.</span></span> <span data-ttu-id="8b6af-167">Il polling del completamento consente al thread chiamante di continuare l'esecuzione mentre viene eseguita la chiamata asincrona su un thread <xref:System.Threading.ThreadPool> .</span><span class="sxs-lookup"><span data-stu-id="8b6af-167">Polling for completion allows the calling thread to continue executing while the asynchronous call executes on a <xref:System.Threading.ThreadPool> thread.</span></span>  
  
 <span data-ttu-id="8b6af-168">L'esempio è costituito da due classi, la classe che contiene il metodo che viene chiamato in modo asincrono, e la classe che contiene il `Main` metodo che effettua la chiamata.</span><span class="sxs-lookup"><span data-stu-id="8b6af-168">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="8b6af-169">Per altre informazioni ed esempi di chiamate ai metodi in modo asincrono usando i delegati, vedere [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="8b6af-169">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#4](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/polling.cpp#4)]
[!code-csharp[AsyncDelegateExamples#4](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/polling.cs#4)]
[!code-vb[AsyncDelegateExamples#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/polling.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink NextSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Messaging.IMessageSink NextSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.NextSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSink As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Messaging::IMessageSink ^ NextSink { System::Runtime::Remoting::Messaging::IMessageSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSink : System.Runtime.Remoting.Messaging.IMessageSink" Usage="System.Runtime.Remoting.Messaging.AsyncResult.NextSink" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMessageSink.NextSink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b6af-170">Ottiene il successivo sink di messaggi nella catena di sink.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-170">Gets the next message sink in the sink chain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b6af-171">Interfaccia <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> che rappresenta il sink di messaggi successivo nella catena di sink.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-171">An <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interface that represents the next message sink in the sink chain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6af-172">L'implementazione corrente delle <xref:System.Runtime.Remoting.Messaging.AsyncResult.NextSink%2A> restituisce `null`.</span><span class="sxs-lookup"><span data-stu-id="8b6af-172">The current implementation of <xref:System.Runtime.Remoting.Messaging.AsyncResult.NextSink%2A> returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMessageCtrl">
      <MemberSignature Language="C#" Value="public virtual void SetMessageCtrl (System.Runtime.Remoting.Messaging.IMessageCtrl mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMessageCtrl(class System.Runtime.Remoting.Messaging.IMessageCtrl mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl(System.Runtime.Remoting.Messaging.IMessageCtrl)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetMessageCtrl (mc As IMessageCtrl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMessageCtrl(System::Runtime::Remoting::Messaging::IMessageCtrl ^ mc);" />
      <MemberSignature Language="F#" Value="abstract member SetMessageCtrl : System.Runtime.Remoting.Messaging.IMessageCtrl -&gt; unit&#xA;override this.SetMessageCtrl : System.Runtime.Remoting.Messaging.IMessageCtrl -&gt; unit" Usage="asyncResult.SetMessageCtrl mc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="System.Runtime.Remoting.Messaging.IMessageCtrl" />
      </Parameters>
      <Docs>
        <param name="mc">
          <span data-ttu-id="8b6af-173">Oggetto <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> per la chiamata di metodo remoto corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-173">The <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> for the current remote method call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b6af-174">Imposta un oggetto <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> per la chiamata corrente al metodo remoto, che consente di controllare i messaggi asincroni dopo il loro invio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-174">Sets an <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> for the current remote method call, which provides a way to control asynchronous messages after they have been dispatched.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6af-175">Non è necessario chiamare il <xref:System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8b6af-175">You do not need to call the <xref:System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncProcessMessage">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SyncProcessMessage (msg As IMessage) As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessage ^ SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg);" />
      <MemberSignature Language="F#" Value="abstract member SyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage -&gt; System.Runtime.Remoting.Messaging.IMessage&#xA;override this.SyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage -&gt; System.Runtime.Remoting.Messaging.IMessage" Usage="asyncResult.SyncProcessMessage msg" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="8b6af-176">Messaggio di risposta a una chiamata di metodo su un oggetto remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-176">A response message to a method call on a remote object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b6af-177">Elabora in modo sincrono il messaggio di risposta restituito da una chiamata di metodo su un oggetto remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-177">Synchronously processes a response message returned by a method call on a remote object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b6af-178">Restituisce <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6af-178">Returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6af-179">Il <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> metodo implementa il <xref:System.Runtime.Remoting.Messaging.IMessageSink> interfaccia.</span><span class="sxs-lookup"><span data-stu-id="8b6af-179">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> method implements the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface.</span></span> <span data-ttu-id="8b6af-180">Non è necessario chiamare questo metodo direttamente.</span><span class="sxs-lookup"><span data-stu-id="8b6af-180">You do not need to call this method directly.</span></span> <span data-ttu-id="8b6af-181">Si tratta per l'utilizzo dall'infrastruttura di comunicazione remota di .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="8b6af-181">It is intended for use by the remoting infrastructure of the .NET Framework.</span></span>  
  
 <span data-ttu-id="8b6af-182"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> richiama il codice di consumer <xref:System.AsyncCallback> delegare.</span><span class="sxs-lookup"><span data-stu-id="8b6af-182"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> invokes the consumer code's <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="8b6af-183">Imposta anche il <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> istanza restituita dal <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="8b6af-183">It also sets the <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> instance returned by the <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> method.</span></span> <span data-ttu-id="8b6af-184">Se il `msg` parametro è di tipo <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>, viene restituito lo stesso oggetto da <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b6af-184">If the `msg` parameter is of type <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>, the same object is returned by <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A>.</span></span> <span data-ttu-id="8b6af-185">In caso contrario, viene restituito un messaggio di risposta che contiene un'eccezione di comunicazione remota.</span><span class="sxs-lookup"><span data-stu-id="8b6af-185">Otherwise, a reply message that contains a remoting exception is returned.</span></span>  
  
 <span data-ttu-id="8b6af-186"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> Consente di modificare anche il valore restituito dal <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="8b6af-186"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> also modifies the value returned by the <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>