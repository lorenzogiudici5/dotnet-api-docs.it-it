<Type Name="SyndicationPerson" FullName="System.ServiceModel.Syndication.SyndicationPerson">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3e7739a37400852668360778be28924844e017cc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36412865" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SyndicationPerson" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SyndicationPerson extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.SyndicationPerson" />
  <TypeSignature Language="VB.NET" Value="Public Class SyndicationPerson" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyndicationPerson" />
  <TypeSignature Language="F#" Value="type SyndicationPerson = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rappresenta un autore o un collaboratore del contenuto di diffusione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile aggiungere gli oggetti <xref:System.ServiceModel.Syndication.SyndicationPerson> alle raccolte di autori e collaboratori sugli oggetti <xref:System.ServiceModel.Syndication.SyndicationFeed> e <xref:System.ServiceModel.Syndication.SyndicationItem>.  
  
 Con la serializzazione per il formato Atom 1.0, la classe <xref:System.ServiceModel.Syndication.SyndicationPerson> viene scritta come elemento `<author>` o `<contributor>`.  
  
 Durante la serializzazione per il formato RSS 2.0, un'istanza di <xref:System.ServiceModel.Syndication.SyndicationPerson> viene scritta come un elemento `<managingEditor>`, `<a10:author>` o `<a10:contributor>`. La modalità in cui viene serializzata una classe <xref:System.ServiceModel.Syndication.SyndicationPerson> dipende dal numero di oggetti <xref:System.ServiceModel.Syndication.SyndicationPerson> aggiunto a <xref:System.ServiceModel.Syndication.SyndicationFeed> o <xref:System.ServiceModel.Syndication.SyndicationItem>, da quale raccolta le istanze di <xref:System.ServiceModel.Syndication.SyndicationPerson> sono state aggiunte e dal valore del parametro `SerializeExtensionAsAtom` per il costruttore <xref:System.ServiceModel.Syndication.Rss20ItemFormatter.%23ctor%28System.ServiceModel.Syndication.SyndicationItem%2CSystem.Boolean%29>. Se solo un oggetto <xref:System.ServiceModel.Syndication.SyndicationPerson> viene aggiunto alla raccolta di <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> (o <xref:System.ServiceModel.Syndication.SyndicationItem.Authors%2A>), <xref:System.ServiceModel.Syndication.SyndicationPerson> viene serializzato in un elemento `<managingEditor>`. Se più oggetti <xref:System.ServiceModel.Syndication.SyndicationPerson> vengono aggiunti alla raccolta di <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> (o <xref:System.ServiceModel.Syndication.SyndicationItem.Authors%2A>) e `SerializeExtensionsAsAtom` è impostato su `true`, tutti gli oggetti <xref:System.ServiceModel.Syndication.SyndicationPerson> vengono serializzati in elementi `<a10:author>`. Se `SerializeExtensionsAsAtom` è  impostato su `false`, le istanze di <xref:System.ServiceModel.Syndication.SyndicationPerson> non vengono serializzate. Qualsiasi istanza di <xref:System.ServiceModel.Syndication.SyndicationPerson> aggiunta alla raccolta di <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> (o <xref:System.ServiceModel.Syndication.SyndicationItem.Contributors%2A>) viene serializzata solo se `SerializeExtensionsAsAtom` è impostato su `true`, nel qual caso viene serializzata in elementi `<a10:contributor>`.  
  
   
  
## Examples  
 Nel codice seguente viene illustrato come aggiungere <xref:System.ServiceModel.Syndication.SyndicationPerson> alla raccolta di autori di un'istanza di <xref:System.ServiceModel.Syndication.SyndicationFeed>.  
  
 [!code-csharp[SyndicationPerson#8](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#8)]
 [!code-vb[SyndicationPerson#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#8)]  
  
 Nel codice XML seguente viene mostrato come serializzare <xref:System.ServiceModel.Syndication.SyndicationPerson> per il formato Atom 1.0.  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 Nel codice XML seguente viene mostrato come serializzare <xref:System.ServiceModel.Syndication.SyndicationPerson> per il formato RSS 2.0.  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza di <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationPerson ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationPerson();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza di <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SyndicationPerson (System.ServiceModel.Syndication.SyndicationPerson source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Syndication.SyndicationPerson source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.ServiceModel.Syndication.SyndicationPerson)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As SyndicationPerson)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SyndicationPerson(System::ServiceModel::Syndication::SyndicationPerson ^ source);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationPerson : System.ServiceModel.Syndication.SyndicationPerson -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="new System.ServiceModel.Syndication.SyndicationPerson source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.ServiceModel.Syndication.SyndicationPerson" />
      </Parameters>
      <Docs>
        <param name="source">Istanza di <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> da cui inizializzare la nuova istanza.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />con l'istanza specificata.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationPerson (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (email As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationPerson(System::String ^ email);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationPerson : string -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="new System.ServiceModel.Syndication.SyndicationPerson email" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">Indirizzo di posta elettronica della persona.</param>
        <summary>Inizializza una nuova istanza di <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> con l'indirizzo di posta elettronica specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come chiamare questo costruttore.  
  
 [!code-csharp[SyndicationPerson#2](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#2)]
 [!code-vb[SyndicationPerson#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationPerson (string email, string name, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string email, string name, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (email As String, name As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationPerson(System::String ^ email, System::String ^ name, System::String ^ uri);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationPerson : string * string * string -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="new System.ServiceModel.Syndication.SyndicationPerson (email, name, uri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">Indirizzo di posta elettronica della persona.</param>
        <param name="name">Nome della persona.</param>
        <param name="uri">URI della pagina Web della persona.</param>
        <summary>Inizializza una nuova istanza di <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> con l'indirizzo di posta elettronica, il nome e l'URI (Uniform Resource Identifier) specificati.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come chiamare questo costruttore.  
  
 [!code-csharp[SyndicationPerson#3](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#3)]
 [!code-vb[SyndicationPerson#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,string&gt; AttributeExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, string&gt; AttributeExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeExtensions As Dictionary(Of XmlQualifiedName, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ AttributeExtensions { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeExtensions : System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName, string&gt;" Usage="System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.AttributeExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le estensioni degli attributi per <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <value>Un dizionario che contiene una raccolta di estensioni degli attributi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il modello a oggetti di diffusione consente di aggiungere attributi personalizzati a un'istanza di <xref:System.ServiceModel.Syndication.SyndicationPerson>. È possibile aggiungere qualsiasi valore/attributo XML valido.  
  
 Con la serializzazione per il formato Atom 1.0, ogni attributo/valore personalizzato viene scritto come attributo negli elementi `<author>` o `<contributor>`. Se serializzato in RSS 2.0, qualsiasi valore/attributo personalizzato viene scritto come attributo negli elementi `<managingEditor>`, `<a10:contributor>` o `<a10:author>`.  
  
   
  
## Examples  
 Nel codice seguente viene illustrato come aggiungere un'estensione di attributo a un'istanza di <xref:System.ServiceModel.Syndication.SyndicationPerson>.  
  
 [!code-csharp[SyndicationPerson#9](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#9)]
 [!code-vb[SyndicationPerson#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#9)]  
  
 Nel codice XML seguente viene mostrato come serializzare la raccolta di <xref:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions%2A> per il formato Atom 1.0.  
  
 [!code-xml[SyndicationPerson#4](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#4)]  
  
 Nel codice XML seguente viene mostrato come serializzare la raccolta di <xref:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions%2A> per il formato RSS 2.0.  
  
 [!code-xml[SyndicationPerson#5](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Syndication.SyndicationPerson Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationPerson Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As SyndicationPerson" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Syndication::SyndicationPerson ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationPerson&#xA;override this.Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="syndicationPerson.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationPerson</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia dell'istanza di <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> esistente.</summary>
        <returns>Nuova istanza di <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nel codice seguente viene illustrato come duplicare un'istanza di <xref:System.ServiceModel.Syndication.SyndicationPerson>.  
  
 [!code-csharp[SyndicationPerson#14](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#14)]
 [!code-vb[SyndicationPerson#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementExtensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementExtensions As SyndicationElementExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ ElementExtensions { System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementExtensions : System.ServiceModel.Syndication.SyndicationElementExtensionCollection" Usage="System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.ElementExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationElementExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene le estensioni degli elementi per <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <value>
          <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> che contiene le estensioni degli elementi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il modello a oggetti di diffusione consente di aggiungere elementi XML personalizzati a un'istanza di <xref:System.ServiceModel.Syndication.SyndicationPerson>. È possibile aggiungere qualsiasi elemento XML valido purché lo spazio dei nomi dell'elemento e lo spazio dei nomi in cui è contenuto siano diversi.  
  
 Se serializzato in Atom 1.0, qualsiasi elemento personalizzato viene scritto come elemento XML all'interno di un elemento `<author>` o `<contributor>`.  
  
 Se serializzato in RSS 2.0, qualsiasi elemento personalizzato viene scritto come elemento XML all'interno dell'elemento `<managingEditor>`, `<a10:contributor>`o `<a10:author>`.  
  
   
  
## Examples  
 Nel codice seguente viene illustrato come aggiungere un'estensione di elemento a un'istanza di <xref:System.ServiceModel.Syndication.SyndicationPerson>.  
  
 [!code-csharp[SyndicationPerson#10](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#10)]
 [!code-vb[SyndicationPerson#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#10)]  
  
 Nel codice XML seguente viene mostrato come serializzare la raccolta di <xref:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions%2A> per il formato Atom 1.0.  
  
 [!code-xml[SyndicationPerson#6](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#6)]  
  
 Nel codice XML seguente viene mostrato come serializzare la raccolta di <xref:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions%2A> per il formato RSS 2.0.  
  
 [!code-xml[SyndicationPerson#7](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Email">
      <MemberSignature Language="C#" Value="public string Email { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Email" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.Email" />
      <MemberSignature Language="VB.NET" Value="Public Property Email As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Email { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Email : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationPerson.Email" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene e imposta l'indirizzo di posta elettronica di <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <value>Indirizzo di posta elettronica della persona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con la serializzazione per il formato Atom 1.0, la proprietà <xref:System.ServiceModel.Syndication.SyndicationPerson> viene scritta come un elemento `<email>`. L'elemento `<email>` viene visualizzato all'interno di un elemento `<author>` o `<contributor>`, a seconda che <xref:System.ServiceModel.Syndication.SyndicationPerson> venga aggiunto alla raccolta degli autori o a quello dei collaboratori.  
  
 Durante la serializzazione per RSS 2.0, questo valore viene scritto come elemento `<a10:email>`. L'elemento `<a10:email>` viene visualizzato all'interno di un elemento `<managingEditor>`, `<a10:author>` o `<a10:contributor>`. Se solo un oggetto <xref:System.ServiceModel.Syndication.SyndicationPerson> viene aggiunto alla raccolta degli autori, l'elemento `<email>`viene scritto nell'elemento `<managingEditor>`. Se più oggetti <xref:System.ServiceModel.Syndication.SyndicationPerson> vengono aggiunti alla raccolta degli autori, l'elemento `<email>`viene scritto nell'elemento `<a10:author>`. Se <xref:System.ServiceModel.Syndication.SyndicationPerson> viene aggiunto alla raccolta dei collaboratori, l'elemento `<email>`viene scritto nell'elemento `<a10:contributor>`.  
  
   
  
## Examples  
 Nel codice seguente viene illustrato come impostare l'indirizzo di posta elettronica di un'istanza di <xref:System.ServiceModel.Syndication.SyndicationPerson>.  
  
 [!code-csharp[SyndicationPerson#11](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#11)]
 [!code-vb[SyndicationPerson#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#11)]  
  
 Nel codice XML seguente viene mostrato come serializzare <xref:System.ServiceModel.Syndication.SyndicationPerson.Email%2A> per il formato Atom 1.0.  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 Nel codice XML seguente viene mostrato come serializzare <xref:System.ServiceModel.Syndication.SyndicationPerson.Email%2A> per il formato RSS 2.0.  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationPerson.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene e imposta il nome della classe <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <value>Nome della persona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con la serializzazione per il formato Atom 1.0, la proprietà <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> viene scritta come elemento `<name>`. L'elemento `<name>` viene visualizzato all'interno di un elemento `<author>` o `<contributor>`, a seconda che <xref:System.ServiceModel.Syndication.SyndicationPerson> venga aggiunto alla raccolta degli autori o a quello dei collaboratori.  
  
 Con la serializzazione per il formato RSS 2.0, la proprietà <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> viene scritta come elemento `<a10:name>`. L'elemento `<a10:name>` viene visualizzato all'interno di un elemento `<managingEditor>`, `<a10:author>` o `<a10:contributor>`. Se solo un oggetto <xref:System.ServiceModel.Syndication.SyndicationPerson> viene aggiunto alla raccolta degli autori, l'elemento `<a10:name>`viene scritto nell'elemento `<managingEditor>`. Se più oggetti <xref:System.ServiceModel.Syndication.SyndicationPerson> vengono aggiunti alla raccolta degli autori, l'elemento `<a10:name>`viene scritto nell'elemento `<a10:author>`. Se <xref:System.ServiceModel.Syndication.SyndicationPerson> viene aggiunto alla raccolta dei collaboratori, l'elemento `<a10:name>`viene scritto nell'elemento `<a10:contributor>`.  
  
   
  
## Examples  
 Nel codice seguente viene illustrato come impostare il nome di <xref:System.ServiceModel.Syndication.SyndicationPerson>:  
  
 [!code-csharp[SyndicationPerson#12](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#12)]
 [!code-vb[SyndicationPerson#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#12)]  
  
 Nel codice XML seguente viene mostrato come serializzare <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> per il formato Atom 1.0.  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 Nel codice XML seguente viene mostrato come serializzare <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> per il formato RSS 2.0.  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseAttribute (string name, string ns, string value, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseAttribute(string name, string ns, string value, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseAttribute (name As String, ns As String, value As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseAttribute(System::String ^ name, System::String ^ ns, System::String ^ value, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseAttribute : string * string * string * string -&gt; bool&#xA;override this.TryParseAttribute : string * string * string * string -&gt; bool" Usage="syndicationPerson.TryParseAttribute (name, ns, value, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nome dell'elemento.</param>
        <param name="ns">Spazio dei nomi dell'elemento.</param>
        <param name="value">Attributo da analizzare.</param>
        <param name="version">La versione di diffusione da utilizzare durante l'analisi.</param>
        <summary>Tenta di analizzare un'estensione degli attributi.</summary>
        <returns>Valore che indica se l'analisi dell'estensione degli attributi è stata completata positivamente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le estensioni degli attributi sono attributi personalizzati che non sono definiti nelle specifiche Atom 1.0 o RSS 2.0. Vengono serializzate come attributo dell'elemento `<author>` o `<contributor>` per Atom 1.0 oppure dell'elemento `<managingEditor>`, `<a10:author>` o `<a10:contributor>` per RSS 2.0. Questo metodo è un punto dell'estensione che consente di gestire la deserializzazione di un'estensione degli attributi personalizzato. A questo scopo, è necessario derivare una classe da <xref:System.ServiceModel.Syndication.SyndicationPerson> ed eseguire l'override del metodo. La chiamata a questo metodo avviene per tutte le estensioni degli attributi non riconosciute.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Rilevato XML non valido durante la lettura.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseElement (System.Xml.XmlReader reader, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseElement(class System.Xml.XmlReader reader, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseElement(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseElement (reader As XmlReader, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseElement(System::Xml::XmlReader ^ reader, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseElement : System.Xml.XmlReader * string -&gt; bool&#xA;override this.TryParseElement : System.Xml.XmlReader * string -&gt; bool" Usage="syndicationPerson.TryParseElement (reader, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> da cui leggere.</param>
        <param name="version">La versione di diffusione da utilizzare durante l'analisi.</param>
        <summary>Tenta di analizzare un'estensione degli elementi.</summary>
        <returns>Valore che indica se l'analisi dell'estensione degli elementi è stata completata positivamente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le estensioni degli elementi sono elementi XML validi che non sono stati indicati nelle specifiche Atom 1.0 o RSS 2.0. È possibile aggiungere qualsiasi elemento XML valido come estensione, purché lo spazio dei nomi sia diverso dallo spazio dei nomi che lo contiene. Questo metodo è un punto dell'estensione che consente di gestire la deserializzazione di un'estensione degli elementi personalizzato. A questo scopo, è necessario derivare una classe da <xref:System.ServiceModel.Syndication.SyndicationPerson> ed eseguire l'override del metodo. La chiamata a questo metodo avviene per tutte le estensioni degli elementi non riconosciute.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Rilevato XML non valido durante la lettura.</exception>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uri : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationPerson.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene e imposta l'URI di <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <value>URI del sito Web della persona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con la serializzazione per il formato Atom 1.0, la proprietà <xref:System.ServiceModel.Syndication.SyndicationPerson.Uri%2A> viene scritta come elemento `<uri>`. L'elemento `<uri>` viene visualizzato all'interno di un elemento `<author>` o `<contributor>`, a seconda che <xref:System.ServiceModel.Syndication.SyndicationPerson> venga aggiunto alla raccolta degli autori o a quello dei collaboratori.  
  
 Con la serializzazione per il formato RSS 2.0, la proprietà <xref:System.ServiceModel.Syndication.SyndicationPerson.Uri%2A> viene scritta come elemento `<a10:uri>`. L'elemento `<a10:uri>` viene visualizzato all'interno di un elemento `<managingEditor>`, `<a10:author>` o `<a10:contributor>`. Se solo un oggetto <xref:System.ServiceModel.Syndication.SyndicationPerson> viene aggiunto alla raccolta degli autori, l'elemento `<a10:uri>`viene scritto nell'elemento `<managingEditor>`. Se più oggetti <xref:System.ServiceModel.Syndication.SyndicationPerson> vengono aggiunti alla raccolta degli autori, l'elemento `<a10:uri>`viene scritto nell'elemento `<a10:author>`. Se <xref:System.ServiceModel.Syndication.SyndicationPerson> viene aggiunto alla raccolta dei collaboratori, l'elemento `<a10:uri>`viene scritto nell'elemento `<a10:contributor>`.  
  
   
  
## Examples  
 Nel codice seguente viene illustrato come impostare l'URI per un'istanza di <xref:System.ServiceModel.Syndication.SyndicationPerson>.  
  
 [!code-csharp[SyndicationPerson#13](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#13)]
 [!code-vb[SyndicationPerson#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#13)]  
  
 Nel codice XML seguente viene mostrato come serializzare <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> per il formato Atom 1.0.  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 Nel codice XML seguente viene mostrato come serializzare <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> per il formato RSS 2.0.  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteAttributeExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteAttributeExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteAttributeExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteAttributeExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationPerson.WriteAttributeExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Xml.XmlReader" /> in cui scrivere.</param>
        <param name="version">La versione di diffusione da utilizzare durante la scrittura.</param>
        <summary>Scrive le estensioni degli attributi nella classe <see cref="T:System.Xml.XmlWriter" /> specificata utilizzando la versione di diffusione specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le estensioni degli attributi sono attributi personalizzati che non sono definiti nelle specifiche Atom 1.0 o RSS 2.0. Vengono serializzate come attributo dell'elemento `<author>` o `<contributor>` per Atom 1.0 oppure dell'elemento `<managingEditor>`, `<a10:author>` o `<a10:contributor>` per RSS 2.0. Questo metodo è un punto dell'estensione che consente di gestire la serializzazione delle estensioni degli attributi personalizzate. A questo scopo, è necessario derivare una classe da <xref:System.ServiceModel.Syndication.SyndicationLink> ed eseguire l'override del metodo. La chiamata a questo metodo avviene per tutte le estensioni degli attributi non riconosciute.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteElementExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteElementExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteElementExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.WriteElementExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteElementExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteElementExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationPerson.WriteElementExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Xml.XmlReader" /> in cui scrivere.</param>
        <param name="version">La versione di diffusione da utilizzare durante la scrittura.</param>
        <summary>Scrive le estensioni degli elementi nella classe <see cref="T:System.Xml.XmlWriter" /> specificata utilizzando la versione di diffusione specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le estensioni degli elementi sono elementi XML validi che non sono stati indicati nelle specifiche Atom 1.0 o RSS 2.0. È possibile aggiungere qualsiasi elemento XML valido come estensione, purché lo spazio dei nomi sia diverso dallo spazio dei nomi che lo contiene. Questo metodo è un punto dell'estensione che consente di gestire la serializzazione delle estensioni degli elementi personalizzate. A questo scopo, è necessario derivare una classe da <xref:System.ServiceModel.Syndication.SyndicationPerson> ed eseguire l'override del metodo. La chiamata a questo metodo avviene per tutte le estensioni degli elementi non riconosciute.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>