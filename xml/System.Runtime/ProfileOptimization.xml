<Type Name="ProfileOptimization" FullName="System.Runtime.ProfileOptimization">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9354708414c54e47f133ae136ea4d54b7bf4bc94" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48692061" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ProfileOptimization" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileOptimization extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ProfileOptimization" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileOptimization" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileOptimization abstract sealed" />
  <TypeSignature Language="F#" Value="type ProfileOptimization = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Migliora le prestazioni di avvio dei domini applicazione in applicazioni che richiedono l'uso del compilatore JIT (Just-in-Time) eseguendo la compilazione in background dei metodi che potrebbero essere eseguiti, in base ai profili creati durante le compilazioni precedenti.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Ottimizzazioni guidate da profilo richiede un computer multicore. I metodi vengono ignorati in altri computer.  
  
 Ogni volta che si avvia ottimizzazioni guidate da profilo in un dominio applicazione, viene letto il profilo è stato creato durante l'utilizzo precedente. Le informazioni nel profilo sono usate per ottenere istruzioni di compilazione in background identificando i metodi che più probabilmente da eseguire durante l'avvio. Nei computer multicore, in questo modo aumentano le probabilità che un metodo è già compilato nel momento in cui che è necessario affinché il thread principale dell'applicazione non è necessario chiamare il compilatore JIT.  
  
 Il file del profilo viene sovrascritto ogni viene utilizzato, in modo che contenga sempre le informazioni più recenti sui metodi vengono usati durante l'avvio.  
  
 I profili di ottimizzazione non sono limitati all'avvio di dominio dell'applicazione. Possono essere utilizzati per qualsiasi attività che richiede un uso massiccio del compilatore JIT. È possibile mantenere più profili per un dominio applicazione in modo che ogni attività di questo tipo ha un proprio profilo.  
  
 Per usare i profili di ottimizzazione in un dominio dell'applicazione, è necessario chiamare il <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> (metodo) e specificare la cartella in cui sono archiviati i profili. La cartella esista già. Per iniziare a usare un profilo, chiamare il <xref:System.Runtime.ProfileOptimization.StartProfile%2A> (metodo) e specificare il nome del file del profilo. Se il file non è stato registrato in precedenza, viene creato al primo utilizzo. Non sono previsti tempi di vantaggio prima delle prestazioni viene creato un profilo.  
  
 Ottimizzazioni guidate da profilo non modifica l'ordine in cui vengono eseguiti i metodi. I metodi non vengono eseguiti sul thread in background; Se un metodo viene compilato ma mai chiamato, non viene semplicemente utilizzato. Se un file del profilo è danneggiato o non è possibile scrivere nella cartella specificata (ad esempio, perché la cartella non esiste), l'esecuzione del programma continua senza una profilatura ottimizzazione.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetProfileRoot">
      <MemberSignature Language="C#" Value="public static void SetProfileRoot (string directoryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetProfileRoot(string directoryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetProfileRoot (directoryPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetProfileRoot(System::String ^ directoryPath);" />
      <MemberSignature Language="F#" Value="static member SetProfileRoot : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.SetProfileRoot directoryPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directoryPath">Il percorso completo della cartella in cui i file del profilo vengono archiviati per il dominio applicazione corrente.</param>
        <summary>Abilita la profilatura dell'ottimizzazione per il dominio dell'applicazione corrente e imposta la cartella in cui i file del profilo di ottimizzazione sono archiviati. In un computer a core singolo il metodo viene ignorato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È necessario chiamare questo metodo prima di chiamare il <xref:System.Runtime.ProfileOptimization.StartProfile%2A> metodo per la prima volta nel dominio dell'applicazione corrente. Se si chiama <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> più volte nello stesso dominio dell'applicazione, tutte le chiamate dopo la prima vengono ignorate.  
  
 La cartella specificata deve esistere. Se non esiste, chiamare questo metodo non viene creata e profilatura non si verifica.  
  
 Nei computer che non dispongono di più core, questo metodo viene ignorato.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede l'attendibilità totale per il chiamante immediato. Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</permission>
      </Docs>
    </Member>
    <Member MemberName="StartProfile">
      <MemberSignature Language="C#" Value="public static void StartProfile (string profile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartProfile(string profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.StartProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StartProfile (profile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StartProfile(System::String ^ profile);" />
      <MemberSignature Language="F#" Value="static member StartProfile : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.StartProfile profile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="profile">Nome file del profilo da utilizzare.</param>
        <summary>Avvia la compilazione JIT dei metodi che erano stati registrati nel file del profilo specificato, in un thread in background. Avvia il processo di registrazione dell'utilizzo del metodo corrente che successivamente sovrascrive il file del profilo specificato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il profilo specificato esiste nella cartella specificata dal <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> metodo, le informazioni in esso contenute viene utilizzato per determinare l'ordine in cui vengono compilati i metodi sul thread in background. Il <xref:System.Runtime.ProfileOptimization.StartProfile%2A> metodo crei il profilo, se non esiste già e avvia la registrazione dell'utilizzo del metodo.  
  
 Vengono registrati solo i metodi che vengono chiamati in realtà, indipendentemente dal fatto che sono stati compilati nel thread in background o sul thread principale dell'applicazione. Un metodo viene compilato nel thread principale dell'applicazione se è necessario chiamarlo prima che il thread in background ha compilato l'applicazione.  
  
 Il codice che esegue la registrazione tiene traccia della frequenza in cui vengono compilati i metodi, inclusi i metodi che vengono compilati in entrambi i thread in background e nel thread principale. Quando la frequenza non supera un predeterminato livello, registrazione si arresta. La registrazione si interrompe anche se la frequenza di compilazione JIT supera un limite predeterminato.  
  
 Se il <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> metodo non è stato chiamato per il dominio applicazione corrente, o se il computer non dispone di più core, il <xref:System.Runtime.ProfileOptimization.StartProfile%2A> metodo non ha alcun effetto.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">richiede l'attendibilità totale per il chiamante immediato. Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</permission>
      </Docs>
    </Member>
  </Members>
</Type>