<Type Name="EditingScope" FullName="System.Activities.Presentation.Model.EditingScope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4e7cc7ff385bdd7a9348268382094dd7d541fc4" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39921940" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EditingScope : System.Activities.Presentation.Model.ModelEditingScope" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EditingScope extends System.Activities.Presentation.Model.ModelEditingScope" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.EditingScope" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingScope&#xA;Inherits ModelEditingScope" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingScope : System::Activities::Presentation::Model::ModelEditingScope" />
  <TypeSignature Language="F#" Value="type EditingScope = class&#xA;    inherit ModelEditingScope" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.Model.ModelEditingScope</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="74044-101">Un ambito di modifica rappresenta una raccolta di modifiche alla struttura a albero <see cref="T:System.Activities.Presentation.Model.ModelItem" /> di cui può essere eseguito il commit o il rollback come un'unità atomica di lavoro.</span>
      <span class="sxs-lookup">
        <span data-stu-id="74044-101">An editing scope represents a collection of changes to the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> tree that can be committed or rolled back as one atomic unit of work.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74044-102">Questa funzione è utile per inviare in batch un set di modifiche a più oggetti <xref:System.Activities.Presentation.Model.ModelItem>.</span><span class="sxs-lookup"><span data-stu-id="74044-102">This is useful for batching together a set of changes to multiple <xref:System.Activities.Presentation.Model.ModelItem> objects.</span></span> <span data-ttu-id="74044-103">Ad esempio, nelle attività di messaggistica le modifiche apportate dalle finestre di dialogo generate avranno effetto su più valori della proprietà.</span><span class="sxs-lookup"><span data-stu-id="74044-103">As an example, in the messaging activities, the changes made from the raised dialogs will impact multiple property values.</span></span> <span data-ttu-id="74044-104">Tuttavia, poiché tutte le modifiche provengono dalla finestra di dialogo generata, le modifiche devono essere considerate come un batch e annullate come un'unica unità di lavoro.</span><span class="sxs-lookup"><span data-stu-id="74044-104">However, as all of the changes come from the raised dialog, the changes need to be considered as a batch and undone as a single unit of work.</span></span> <span data-ttu-id="74044-105">Per ulteriori informazioni sull'utilizzo, vedere l'esempio di ambito di modifica.</span><span class="sxs-lookup"><span data-stu-id="74044-105">For more details on usage, see the Editing Scope sample</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanComplete">
      <MemberSignature Language="C#" Value="protected override bool CanComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool CanComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.EditingScope.CanComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CanComplete () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool CanComplete();" />
      <MemberSignature Language="F#" Value="override this.CanComplete : unit -&gt; bool" Usage="editingScope.CanComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74044-106">Determina se l'istanza di ambito di modifica corrente può essere completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74044-106">Determines whether the current editing scope instance can complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74044-107">
            <see langword="true" /> se è possibile completare l'ambito di modifica; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74044-107">
              <see langword="true" /> if the editing scope can complete; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Changes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Activities.Presentation.Model.Change&gt; Changes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Activities.Presentation.Model.Change&gt; Changes" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.EditingScope.Changes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Changes As List(Of Change)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Activities::Presentation::Model::Change ^&gt; ^ Changes { System::Collections::Generic::List&lt;System::Activities::Presentation::Model::Change ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Changes : System.Collections.Generic.List&lt;System.Activities.Presentation.Model.Change&gt;" Usage="System.Activities.Presentation.Model.EditingScope.Changes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Activities.Presentation.Model.Change&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74044-108">Ottiene un elenco delle modifiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74044-108">Gets a list of changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74044-109">Restituisce un oggetto <see cref="T:System.Collections.Generic.List`1" /> che contiene le modifiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74044-109">Returns a <see cref="T:System.Collections.Generic.List`1" /> that contains the changes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveChanges">
      <MemberSignature Language="C#" Value="public bool HasEffectiveChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveChanges" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasEffectiveChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasEffectiveChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEffectiveChanges : bool" Usage="System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74044-110">Ottiene un valore booleano che specifica se le modifiche sono state applicate all'ambito di modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74044-110">Gets  a Boolean that specifies whether changes have been applied to the editing scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74044-111">
            <see langword="true" /> se le modifiche sono state applicate all'ambito di modifica; in caso contrario, <see langword="false" />..</span>
          <span class="sxs-lookup">
            <span data-stu-id="74044-111">
              <see langword="true" /> if changes have been applied to the editing scope; otherwise, <see langword="false" />..</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnComplete">
      <MemberSignature Language="C#" Value="protected override void OnComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.EditingScope.OnComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnComplete();" />
      <MemberSignature Language="F#" Value="override this.OnComplete : unit -&gt; unit" Usage="editingScope.OnComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74044-112">Genera l'evento Completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74044-112">Raises the Complete event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnException">
      <MemberSignature Language="C#" Value="protected override bool OnException (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnException(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.EditingScope.OnException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnException (e As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnException(Exception ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnException : Exception -&gt; bool" Usage="editingScope.OnException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="74044-113">Eccezione da gestire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74044-113">The exception to handle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74044-114">Gestisce l'eccezione specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74044-114">Handles the specified exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74044-115">
            <see langword="true" /> se l'eccezione è gestita; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74044-115">
              <see langword="true" /> if the exception is handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRevert">
      <MemberSignature Language="C#" Value="protected override void OnRevert (bool finalizing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRevert(bool finalizing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.EditingScope.OnRevert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRevert (finalizing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRevert(bool finalizing);" />
      <MemberSignature Language="F#" Value="override this.OnRevert : bool -&gt; unit" Usage="editingScope.OnRevert finalizing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalizing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="finalizing">
          <span data-ttu-id="74044-116">Non utilizzato in questa implementazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74044-116">Not used in this implementation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74044-117">Genera l'evento Ripristina.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74044-117">Raises the Revert event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>