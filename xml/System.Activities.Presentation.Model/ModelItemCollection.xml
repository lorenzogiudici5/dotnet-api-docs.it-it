<Type Name="ModelItemCollection" FullName="System.Activities.Presentation.Model.ModelItemCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7c0196815c7aa50068f4e9ac91b23cc37d85b87" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52235698" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ModelItemCollection : System.Activities.Presentation.Model.ModelItem, System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt;, System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;, System.Collections.Generic.IList&lt;System.Activities.Presentation.Model.ModelItem&gt;, System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelItemCollection extends System.Activities.Presentation.Model.ModelItem implements class System.Collections.Generic.ICollection`1&lt;class System.Activities.Presentation.Model.ModelItem&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt;, class System.Collections.Generic.IList`1&lt;class System.Activities.Presentation.Model.ModelItem&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.Specialized.INotifyCollectionChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.ModelItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelItemCollection&#xA;Inherits ModelItem&#xA;Implements ICollection(Of ModelItem), IEnumerable(Of ModelItem), IList, IList(Of ModelItem), INotifyCollectionChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelItemCollection abstract : System::Activities::Presentation::Model::ModelItem, System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Model::ModelItem ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt;, System::Collections::Generic::IList&lt;System::Activities::Presentation::Model::ModelItem ^&gt;, System::Collections::IList, System::Collections::Specialized::INotifyCollectionChanged" />
  <TypeSignature Language="F#" Value="type ModelItemCollection = class&#xA;    inherit ModelItem&#xA;    interface IList&lt;ModelItem&gt;&#xA;    interface ICollection&lt;ModelItem&gt;&#xA;    interface seq&lt;ModelItem&gt;&#xA;    interface IEnumerable&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface INotifyCollectionChanged" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.Model.ModelItem</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;System.Activities.Presentation.Model.ModelItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="bfdb2-101">Rappresenta una raccolta di elementi del modello cui è possibile accedere singolarmente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bfdb2-101">Represents a collection of model items that can be individually accessed by index.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfdb2-102">Se vengono apportate modifiche alla raccolta di elementi durante un ambito di modifica, ad esempio all'interno di un'operazione di trascinamento della selezione, il <xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A> proprietà non verrà aggiornata finché non viene completata l'ambito di modifica.</span><span class="sxs-lookup"><span data-stu-id="bfdb2-102">If changes are made to the item collection during an editing scope, such as within a drag and drop operation, the <xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A> property will not be updated until the editing scope completes.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelItemCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelItemCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-103">Crea una nuova istanza di <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-103">Creates a new instance of <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-104">Aggiunge l'elemento del modello alla fine dell'oggetto <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-104">Adds a model item to the end of the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract void Add (System.Activities.Presentation.Model.ModelItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Activities.Presentation.Model.ModelItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Add(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Add (item As ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Add(System::Activities::Presentation::Model::ModelItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Activities.Presentation.Model.ModelItem -&gt; unit" Usage="modelItemCollection.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="bfdb2-105">Elemento del modello da aggiungere alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-105">The model item to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-106">Aggiunge l'elemento del modello alla fine dell'oggetto <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-106">Adds a model item to the end of the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (value As Object) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelItemCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bfdb2-107">Oggetto da aggiungere alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-107">The object to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-108">Aggiunge l'elemento del modello alla fine dell'oggetto <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-108">Adds a model item to the end of the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfdb2-109">Restituisce un oggetto <paramref name="value" /> di cui è stato eseguito il wrapping in un <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-109">Returns <paramref name="value" /> wrapped in a <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfdb2-110">L'oggetto sarà archiviato come un oggetto <xref:System.Activities.Presentation.Model.ModelItem>.</span><span class="sxs-lookup"><span data-stu-id="bfdb2-110">The object will be stored as a <xref:System.Activities.Presentation.Model.ModelItem>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public abstract void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="modelItemCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-111">Rimuove tutti gli elementi da <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-111">Removes all elements from the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event CollectionChanged As NotifyCollectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Collections::Specialized::NotifyCollectionChangedEventHandler ^ CollectionChanged;" />
      <MemberSignature Language="F#" Value="member this.CollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventHandler " Usage="member this.CollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NotifyCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-112">Si verifica quando la raccolta cambia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-112">Occurs when the collection changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-113">Consente di stabilire se <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contiene l'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-113">Determines whether the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contains the specified element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (System.Activities.Presentation.Model.ModelItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Activities.Presentation.Model.ModelItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (item As ModelItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Contains(System::Activities::Presentation::Model::ModelItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Activities.Presentation.Model.ModelItem -&gt; bool" Usage="modelItemCollection.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="bfdb2-114">Valore da individuare nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-114">The value to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-115">Consente di stabilire se <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contiene l'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-115">Determines whether the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contains the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfdb2-116">
            <see langword="true" /> se <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contiene un elemento con il valore specificato, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-116">
              <see langword="true" /> if the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contains an element that has the specified value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfdb2-117">
            <paramref name="item" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-117">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Contains(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool" Usage="modelItemCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bfdb2-118">Valore da individuare nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-118">The value to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-119">Consente di stabilire se <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contiene l'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-119">Determines whether the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contains the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfdb2-120">
            <see langword="true" /> se <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contiene un elemento con il valore specificato, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-120">
              <see langword="true" /> if the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contains an element that has the specified value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfdb2-121">
            <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-121">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public abstract void CopyTo (System.Activities.Presentation.Model.ModelItem[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Activities.Presentation.Model.ModelItem[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CopyTo (array As ModelItem(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CopyTo(cli::array &lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Activities.Presentation.Model.ModelItem[] * int -&gt; unit" Usage="modelItemCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Activities.Presentation.Model.ModelItem[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="bfdb2-122">Matrice in cui copiare la raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-122">The array to copy the collection into.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="bfdb2-123">Indice nella matrice in corrispondenza della quale iniziare a eseguire la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-123">The index in the array to start copying at.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-124">Copia il contenuto della raccolta in una matrice specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-124">Copies the contents of the collection into the given array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfdb2-125">
            <paramref name="array" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-125">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="bfdb2-126">
            <paramref name="arrayIndex" /> è esterno all'intervallo o non c'è spazio sufficiente nella matrice per i contenuti della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-126">
              <paramref name="arrayIndex" /> is out of range, or there is not sufficient room in the array to hold the contents of the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public abstract int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Activities.Presentation.Model.ModelItemCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-127">Restituisce il numero di elementi nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-127">Returns the count of items in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfdb2-128">Restituisce il numero <see cref="T:System.Int32" /> di elementi nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-128">Returns the <see cref="T:System.Int32" /> count of items in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfdb2-129">Questo valore non viene aggiornato durante un <xref:System.Activities.Presentation.EditingContext> sessione.</span><span class="sxs-lookup"><span data-stu-id="bfdb2-129">This value is not updated during an <xref:System.Activities.Presentation.EditingContext> session.</span></span> <span data-ttu-id="bfdb2-130">Se un oggetto viene aggiunto per il <xref:System.Activities.Presentation.Model.ModelItemCollection> durante una sessione, il <xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A> valore non verrà aggiornato fino a quando non viene chiusa la sessione.</span><span class="sxs-lookup"><span data-stu-id="bfdb2-130">If an object is added to the <xref:System.Activities.Presentation.Model.ModelItemCollection> during a session, the <xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A> value will not be updated until the session exits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Model.ModelItem&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="modelItemCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-131">Ottiene un enumeratore che scorre la raccolta <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-131">Gets an enumerator that iterates through the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfdb2-132">Restituisce <see cref="T:System.Collections.Generic.IEnumerator`1" /> per <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-132">Returns an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public abstract int IndexOf (System.Activities.Presentation.Model.ModelItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Activities.Presentation.Model.ModelItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.IndexOf(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IndexOf (item As ModelItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int IndexOf(System::Activities::Presentation::Model::ModelItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : System.Activities.Presentation.Model.ModelItem -&gt; int" Usage="modelItemCollection.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="bfdb2-133">Oggetto da individuare nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-133">The object to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-134">Restituisce l'indice in base zero della prima occorrenza di un valore nella raccolta <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-134">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfdb2-135">Indice in base zero della prima occorrenza di <paramref name="item" /> all'interno dell'intero oggetto <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />, se presente; in caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-135">The zero-based index of the first occurrence of <paramref name="item" /> within the entire <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-136">Inserisce un elemento in <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-136">Inserts an element into the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> at the specified index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public abstract void Insert (int index, System.Activities.Presentation.Model.ModelItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Activities.Presentation.Model.ModelItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Insert (index As Integer, item As ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Insert(int index, System::Activities::Presentation::Model::ModelItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * System.Activities.Presentation.Model.ModelItem -&gt; unit" Usage="modelItemCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="bfdb2-137">Indice in base zero nel quale <paramref name="item" /> deve essere inserito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-137">The zero-based index at which <paramref name="item" /> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="bfdb2-138">Elemento del modello da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-138">The model item to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-139">Inserisce un elemento in <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-139">Inserts an element into the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Insert (index As Integer, value As Object) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelItemCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="bfdb2-140">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-140">The zero-based index at which <paramref name="value" /> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bfdb2-141">Oggetto da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-141">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-142">Inserisce un elemento in <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-142">Inserts an element into the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfdb2-143">Restituisce un oggetto <paramref name="value" /> di cui è stato eseguito il wrapping in un <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-143">Returns <paramref name="value" /> wrapped in a <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="protected virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-144">Ottiene un valore che indica se le dimensioni della raccolta sono fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-144">Gets a value that indicates whether the collection has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfdb2-145">
            <see langword="true" /> se la raccolta è a dimensione fissa; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-145">
              <see langword="true" /> if the collection is a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfdb2-146">L'implementazione predefinita restituisce `true` se la raccolta è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="bfdb2-146">The default implementation returns `true` if the collection is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-147">Ottiene un valore che indica se la raccolta è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-147">Gets a value that indicates whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfdb2-148">
            <see langword="true" /> se la raccolta non può essere modificata; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-148">
              <see langword="true" /> if the collection cannot be modified; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="protected virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-149">Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-149">Gets a value that indicates whether access to the collection is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfdb2-150">
            <see langword="true" /> se l'accesso alla raccolta è sincronizzato (thread-safe). In caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-150">
              <see langword="true" /> if access to the collection is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(index As Integer) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ default[int] { System::Activities::Presentation::Model::ModelItem ^ get(int index); void set(int index, System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Activities.Presentation.Model.ModelItem with get, set" Usage="System.Activities.Presentation.Model.ModelItemCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="bfdb2-151">Indice in base zero della raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-151">The zero-based index of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-152">Ottiene o imposta l'elemento della raccolta in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-152">Gets or sets the item at the given index in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfdb2-153">Restituisce <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-153">Returns <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Model.ModelItemCollection.ItemProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Model.ModelItemCollection.ItemProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-154">Identifica la proprietà di dipendenza Item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-154">Identifies the Item dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfdb2-155">La proprietà Item rappresenta tutti gli elementi della raccolta e viene definita come tipo <xref:System.Activities.Presentation.Model.ModelItem>.</span><span class="sxs-lookup"><span data-stu-id="bfdb2-155">The Item property represents all the items in the collection and is defined as type <xref:System.Activities.Presentation.Model.ModelItem>.</span></span> <span data-ttu-id="bfdb2-156">Proprietà Item punta all'oggetto <xref:System.Activities.Presentation.Model.ModelItemCollection> stesso.</span><span class="sxs-lookup"><span data-stu-id="bfdb2-156">The Item property points to the <xref:System.Activities.Presentation.Model.ModelItemCollection> itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public abstract void Move (int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move(int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Move(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Move (fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Move(int fromIndex, int toIndex);" />
      <MemberSignature Language="F#" Value="abstract member Move : int * int -&gt; unit" Usage="modelItemCollection.Move (fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromIndex">
          <span data-ttu-id="bfdb2-157">Indice dell'elemento da spostare, prima dello spostamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-157">The index of the item to be moved before the move.</span>
          </span>
        </param>
        <param name="toIndex">
          <span data-ttu-id="bfdb2-158">Indice dell'elemento da spostare, dopo lo spostamento</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-158">The index of the item after it is moved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-159">Sposta un elemento della raccolta in corrispondenza di un diverso valore dell'indice.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-159">Moves an item in the collection to a different index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="bfdb2-160">
            <paramref name="fromIndex" /> o <paramref name="toIndex" /> sono negativi oppure maggiori o uguali a <see cref="P:System.Activities.Presentation.Model.ModelItemCollection.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-160">Either <paramref name="fromIndex" /> or <paramref name="toIndex" /> is negative or greater than or equal to <see cref="P:System.Activities.Presentation.Model.ModelItemCollection.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-161">Rimuove dalla raccolta un oggetto <see cref="T:System.Activities.Presentation.Model.ModelItem" /> a altri oggetti <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-161">Removes a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> or other <see cref="T:System.Object" /> from the collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract bool Remove (System.Activities.Presentation.Model.ModelItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Activities.Presentation.Model.ModelItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (item As ModelItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Remove(System::Activities::Presentation::Model::ModelItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Activities.Presentation.Model.ModelItem -&gt; bool" Usage="modelItemCollection.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="bfdb2-162">Oggetto <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-162">The <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-163">Rimuove il parametro <see cref="T:System.Activities.Presentation.Model.ModelItem" /> dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-163">Removes the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfdb2-164">
            <see langword="true" /> se <see cref="T:System.Activities.Presentation.Model.ModelItem" /> è stato rimosso dalla raccolta; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-164">
              <see langword="true" /> if the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> was removed from the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract bool Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Remove(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; bool" Usage="modelItemCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bfdb2-165">Oggetto <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-165">The <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-166">Rimuove il valore dalla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-166">Removes the value from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfdb2-167">
            <see langword="true" /> se il valore è stato rimosso correttamente dalla raccolta; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-167">
              <see langword="true" /> if the value was removed from the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public abstract void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="modelItemCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="bfdb2-168">Indice dell'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-168">The index of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-169">Rimuove l'elemento in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-169">Removes the item at the given index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="protected virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Activities.Presentation.Model.ModelItemCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-170">Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-170">Gets an object that can be used to synchronize access to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfdb2-171">Restituisce un oggetto <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-171">Returns an <see cref="T:System.Object" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="bfdb2-172">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-172">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="bfdb2-173">L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-173">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfdb2-174">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-174">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-175">Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-175">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-176">Ottiene il numero di elementi contenuti nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-176">Gets the number of elements contained in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfdb2-177">Ottiene un valore <see cref="T:System.Int32" /> che è il numero di elementi contenuti nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-177">Returns an <see cref="T:System.Int32" /> value that is the number of elements contained in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-178">Il numero di elementi contenuti in <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-178">The number of elements contained in the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfdb2-179">
            <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-179">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-180">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-180">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfdb2-181">Restituisce un oggetto <see cref="T:System.Object" /> che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-181">Returns an <see cref="T:System.Object" /> that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value=" Iterator Overridable NotOverridable Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.Presentation.Model.ModelItemCollection/&lt;System-Collections-IEnumerable-GetEnumerator&gt;d__54))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.Presentation.Model.ModelItemCollection/&lt;System_Collections_IEnumerable_GetEnumerator&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-182">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-182">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfdb2-183">Restituisce un oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere la raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-183">Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bfdb2-184">Oggetto da aggiungere alla raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-184">The object to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-185">Aggiunge l'elemento del modello alla fine dell'oggetto <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-185">Adds a model item to the end of the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfdb2-186">Restituisce l'indice dell'oggetto aggiunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-186">Returns the index of the newly added object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-187">Rimuove tutti gli elementi da <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-187">Removes all items from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bfdb2-188">Oggetto da individuare nella raccolta <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-188">The object to locate in the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-189">Consente di stabilire se <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contiene l'elemento specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-189">Determines whether the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contains the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfdb2-190">
            <see langword="true" /> se <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contiene un elemento con il valore specificato, in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-190">
              <see langword="true" /> if the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contains an element that has the specified value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfdb2-191">
            <paramref name="value" /> è <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-191">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bfdb2-192">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-192">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-193">Determina l'indice di un elemento specifico in <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-193">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfdb2-194">Restituisce l'indice <see cref="T:System.Int32" /> di <paramref name="value" /> se presente nell'elenco; in caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-194">Returns the <see cref="T:System.Int32" /> index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="bfdb2-195">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-195">The zero-based index at which <paramref name="value" /> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bfdb2-196">Oggetto da inserire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-196">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-197">Inserisce un elemento in <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-197">Inserts an element into the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-198">Ottiene un valore che indica se le dimensioni dell'oggetto <see cref="T:System.Collections.IList" /> sono fisse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-198">Gets a value that indicates whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfdb2-199">
            <see langword="true" /> se <see cref="T:System.Collections.IList" /> è di dimensioni fisse; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-199">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfdb2-200">Ottiene un valore che indica se <see cref="T:System.Collections.IList" /> è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-200">Gets a value that indicates whether the <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfdb2-201">
            <see langword="true" /> se <see cref="T:System.Collections.IList" /> è di sola lettura; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-201">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="bfdb2-202">Indice in base zero dell'elemento da ottenere o impostare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-202">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-203">Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-203">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfdb2-204">Elemento in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-204">The element at the specified index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bfdb2-205">Oggetto <see cref="T:System.Object" /> da rimuovere da <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-205">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-206">Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-206">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfdb2-207">In raccolte di elementi adiacenti, quali gli elenchi, gli elementi successivi al punto di inserimento vengono spostati verso il basso per consentire l'inserimento del nuovo elemento.</span><span class="sxs-lookup"><span data-stu-id="bfdb2-207">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="bfdb2-208">Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati.</span><span class="sxs-lookup"><span data-stu-id="bfdb2-208">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="bfdb2-209">Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente in bucket, come accade ad esempio per le tabelle hash.</span><span class="sxs-lookup"><span data-stu-id="bfdb2-209">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span> <span data-ttu-id="bfdb2-210">Se `value` non viene trovato nell'oggetto <xref:System.Collections.IList>, l'oggetto <xref:System.Collections.IList> rimane invariato e non vengono generate eccezioni.</span><span class="sxs-lookup"><span data-stu-id="bfdb2-210">If `value` is not found in the <xref:System.Collections.IList>, the <xref:System.Collections.IList> remains unchanged and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="bfdb2-211">Indice in base zero dell'elemento da rimuovere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-211">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfdb2-212">Rimuove l'elemento <see cref="T:System.Collections.IList" /> in corrispondenza dell'indice specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfdb2-212">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>