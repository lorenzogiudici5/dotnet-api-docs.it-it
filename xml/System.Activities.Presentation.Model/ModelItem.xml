<Type Name="ModelItem" FullName="System.Activities.Presentation.Model.ModelItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1c69e040b34e1e71977002e6b9ae0f7498bb066" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36721603" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ModelItem : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelItem extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.ModelItem" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelItem&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelItem abstract : System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type ModelItem = class&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="075b7-101">Rappresenta un singolo elemento nel modello di modifica.</span>
      <span class="sxs-lookup">
        <span data-stu-id="075b7-101">Represents a single item in the editing model.</span>
      </span>
      <span data-ttu-id="075b7-102">Un elemento può essere qualunque cosa, da una struttura dati complessa fino a un colore o a un numero intero.</span>
      <span class="sxs-lookup">
        <span data-stu-id="075b7-102">An item can be anything from a complex data structure down to a color or integer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="075b7-103">È possibile accedere alle proprietà dell'elemento tramite la relativa raccolta <xref:System.Activities.Presentation.Model.ModelItem.Properties%2A> e apportare modifiche ai valori delle proprietà.</span><span class="sxs-lookup"><span data-stu-id="075b7-103">You can access the item’s properties through its <xref:System.Activities.Presentation.Model.ModelItem.Properties%2A> collection and make changes to the values of the properties.</span></span>  
  
 <span data-ttu-id="075b7-104">Un oggetto <xref:System.Activities.Presentation.Model.ModelItem> è essenzialmente un wrapper del modello dati sottostante della finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="075b7-104">A <xref:System.Activities.Presentation.Model.ModelItem> is a wrapper around the underlying data model of the designer.</span></span> <span data-ttu-id="075b7-105">È possibile accedere al modello sottostante tramite il metodo <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="075b7-105">You can access the underlying model through the <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="075b7-106">Qualsiasi modifica a un oggetto restituito dal metodo <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> non comparirà nella serializzazione e nei sistemi di annullamento della finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="075b7-106">Any changes you make to an object returned from the <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> method will not be reflected by the serialization and undo systems of the designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="075b7-107"><xref:System.Activities.Presentation.Model.ModelItem> può essere considerato come un proxy sottile per un oggetto a cui punta.</span><span class="sxs-lookup"><span data-stu-id="075b7-107">The <xref:System.Activities.Presentation.Model.ModelItem> can be thought of as a thin proxy for an object at which it points.</span></span> <span data-ttu-id="075b7-108">Per prima cosa, definire un oggetto `Animal` semplice.</span><span class="sxs-lookup"><span data-stu-id="075b7-108">First define a simple `Animal` object.</span></span>  
  
```  
  
public class Animal  
{  
    // simple property  
    public string Name { get; set; }  
    // complex property   
    public Location Residence { get; set; }   
    // list   
    public List<Animal> CloseRelatives { get; set; }  
    // dictionary  
    public Dictionary<string, object> Features { get; set; }   
}  
  
public class Location  
{  
    public string StreetAddress { get; set; }  
    public string City { get; set; }  
    public string State { get; set; }   
}  
  
```  
  
 <span data-ttu-id="075b7-109">In secondo luogo, creare un'istanza di quell'oggetto `Animal` e un oggetto <xref:System.Activities.Presentation.Model.ModelItem> che è un proxy per l'oggetto stesso.</span><span class="sxs-lookup"><span data-stu-id="075b7-109">Secondly, create an instance of that `Animal` and a <xref:System.Activities.Presentation.Model.ModelItem> that is a proxy for it.</span></span> <span data-ttu-id="075b7-110">L'oggetto può essere recuperato chiamando <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="075b7-110">The object can then be retrieved by calling <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>.</span></span> <span data-ttu-id="075b7-111">Nel codice seguente viene mostrato anche come utilizzare le altre proprietà definite da <xref:System.Activities.Presentation.Model.ModelItem>.</span><span class="sxs-lookup"><span data-stu-id="075b7-111">The following code also shows how to use other properties defined by <xref:System.Activities.Presentation.Model.ModelItem>.</span></span>  
  
```  
  
EditingContext ec = new EditingContext();  
var companion1 = new Animal { Name = "Houdini the parakeet" };  
var companion2 = new Animal { Name = "Groucho the fish" };  
var animal = new Animal   
   {  
      Name = "Sasha the pug",  
      Residence = new Location   
      {  
         StreetAddress = "123 Main Street",  
         City = "AnyTown",  
         State = "Washington"  
      },  
      Features = new Dictionary<string, object> {   
         {"noise", "snort" },  
         {"MeanTimeUntilNaps", TimeSpan.FromMinutes(15) }  
      },  
      CloseRelatives = new List<Animal> { companion1, companion2 }   
   };  
ModelTreeManager mtm = new ModelTreeManager(ec);  mtm.Load(animal);  
ModelItem mi = mtm.Root;  
  
//Testing other properties of the class  
ModelItem root = mtm.Root;  
Assert.IsTrue(root.GetCurrentValue() == animal, "GetCurrentValue() returns same object");  
Assert.IsTrue(root.ItemType == typeof(Animal),"ItemType describes the item");  
Assert.IsTrue(root.Parent == null,"root parent is null");  
Assert.IsTrue(root.Source == null, "root source is null");  
Assert.IsTrue(((List<Animal>)root.Properties["CloseRelatives"].ComputedValue)[0] == companion1,   
   "ComputedValue of prop == actual object");  
Assert.IsFalse(((List<Animal>)root.Properties["CloseRelatives"].ComputedValue)[0] == companion2,   
   "ComputedValue of prop == actual object");  
Assert.AreEqual(root.Properties["Residence"].  
   Value.  
   Properties["StreetAddress"].  
   Value.GetCurrentValue(), "123 Main Street", "get actual value back out");  
Assert.AreEqual(root, root.Properties["Residence"].Parent, "property points to owner");  
ModelItem location = root.Properties["Residence"].Value;  
Assert.AreEqual(root.Properties["Residence"], location.Source, "sources point to the right place");  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="075b7-112">Crea una nuova istanza della classe <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-112">Creates a new instance of the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Activities.Presentation.Model.ModelItem.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="075b7-113">Ottiene gli attributi dichiarati su questo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-113">Gets the attributes declared on this item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="075b7-114">Raccolta che contiene gli attributi dell'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-114">A collection that contains the attributes of the item.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginEdit">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="075b7-115">Apre un ambito di modifica per la finestra di progettazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-115">Opens an editing scope for the designer.</span>
          </span>
        </summary>
        <altmember cref="T:System.Activities.Presentation.Model.ModelEditingScope" />
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelEditingScope BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginEdit () As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit();" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : unit -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="075b7-116">Apre un ambito di modifica per la finestra di progettazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-116">Opens an editing scope for the designer.</span>
          </span>
          <span data-ttu-id="075b7-117">Quando un ambito di modifica è aperto, tutte le modifiche su tutti gli oggetti verranno salvate nell'ambito fino a quando la transazione sarà completata o ripristinata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-117">After an editing scope is open, all changes across all objects will be saved into the scope until the transaction is completed or reverted.</span>
          </span>
          <span data-ttu-id="075b7-118">Gli ambiti di modifica possono essere annidati, tuttavia è necessario eseguirne il commit in base all'ordine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-118">Editing scopes can be nested, but must be committed in order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="075b7-119">Oggetto <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" /> che deve essere completato o ripristinato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-119">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="075b7-120">Un ambito di modifica consente di applicare più modifiche al modello in una singola transazione.</span><span class="sxs-lookup"><span data-stu-id="075b7-120">An editing scope allows multiple changes to the model to be applied as a single transaction.</span></span> <span data-ttu-id="075b7-121">È possibile ripristinare tutte le modifiche apportate all'interno dell'ambito di modifica in qualsiasi momento prima che venga completata la transazione.</span><span class="sxs-lookup"><span data-stu-id="075b7-121">All of the changes made within the editing scope can be reverted at any time before the transaction is completed.</span></span>  
  
 <span data-ttu-id="075b7-122">Gli ambiti di modifica sono globali per la finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="075b7-122">Editing scopes are global to the designer.</span></span> <span data-ttu-id="075b7-123">È possibile creare un ambito di modifica per qualsiasi elemento nella finestra di progettazione; non è necessario creare un ambito di modifica per l'elemento specifico che si vuole modificare.</span><span class="sxs-lookup"><span data-stu-id="075b7-123">An editing scope can be created for any item in the designer; you do not need to create an editing scope for the specific item you are changing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Presentation.Model.ModelEditingScope BeginEdit (bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(bool shouldApplyChangesImmediately) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginEdit (shouldApplyChangesImmediately As Boolean) As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit(bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : bool -&gt; System.Activities.Presentation.Model.ModelEditingScope&#xA;override this.BeginEdit : bool -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit shouldApplyChangesImmediately" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shouldApplyChangesImmediately" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="shouldApplyChangesImmediately">
          <span data-ttu-id="075b7-124">
            <see langword="true" /> per indicare che le modifiche devono essere applicate immediatamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-124">
              <see langword="true" /> to indicate that the changes should be applied immediately; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="075b7-125">Apre un ambito di modifica per la finestra di progettazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-125">Opens an editing scope for the designer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="075b7-126">Oggetto <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" /> che deve essere completato o ripristinato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-126">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelEditingScope BeginEdit (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginEdit (description As String) As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit(System::String ^ description);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : string -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="075b7-127">Descrizione della modifica (facoltativa).</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-127">An optional description of the change.</span>
          </span>
          <span data-ttu-id="075b7-128">Questo verrà impostato nella proprietà <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> dell'ambito di modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-128">This will be set into the <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> property of the editing scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="075b7-129">Apre un ambito di modifica per la finestra di progettazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-129">Opens an editing scope for the designer.</span>
          </span>
          <span data-ttu-id="075b7-130">Quando un ambito di modifica è aperto, tutte le modifiche su tutti gli oggetti verranno salvate nell'ambito fino a quando la transazione sarà completata o ripristinata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-130">After an editing scope is open, all changes across all objects will be saved into the scope until the transaction is completed or reverted.</span>
          </span>
          <span data-ttu-id="075b7-131">Gli ambiti di modifica possono essere annidati, tuttavia è necessario eseguirne il commit in base all'ordine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-131">Editing scopes can be nested, but must be committed in order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="075b7-132">Oggetto <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" /> che deve essere completato o ripristinato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-132">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="075b7-133">Un ambito di modifica consente di applicare più modifiche al modello in una singola transazione.</span><span class="sxs-lookup"><span data-stu-id="075b7-133">An editing scope allows multiple changes to the model to be applied as a single transaction.</span></span> <span data-ttu-id="075b7-134">È possibile ripristinare tutte le modifiche apportate all'interno dell'ambito di modifica in qualsiasi momento prima che venga completata la transazione.</span><span class="sxs-lookup"><span data-stu-id="075b7-134">All of the changes made within the editing scope can be reverted at any time before the transaction is completed.</span></span>  
  
 <span data-ttu-id="075b7-135">Gli ambiti di modifica sono globali per la finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="075b7-135">Editing scopes are global to the designer.</span></span> <span data-ttu-id="075b7-136">È possibile creare un ambito di modifica per qualsiasi elemento nella finestra di progettazione; non è necessario creare un ambito di modifica per l'elemento specifico che si vuole modificare.</span><span class="sxs-lookup"><span data-stu-id="075b7-136">An editing scope can be created for any item in the designer; you do not need to create an editing scope for the specific item you are changing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Presentation.Model.ModelEditingScope BeginEdit (string description, bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description, bool shouldApplyChangesImmediately) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginEdit (description As String, shouldApplyChangesImmediately As Boolean) As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit(System::String ^ description, bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : string * bool -&gt; System.Activities.Presentation.Model.ModelEditingScope&#xA;override this.BeginEdit : string * bool -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit (description, shouldApplyChangesImmediately)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="shouldApplyChangesImmediately" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="075b7-137">Descrizione della modifica (facoltativa).</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-137">An optional description of the change.</span>
          </span>
          <span data-ttu-id="075b7-138">Questo verrà impostato nella proprietà <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> dell'ambito di modifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-138">This will be set into the <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> property of the editing scope.</span>
          </span>
        </param>
        <param name="shouldApplyChangesImmediately">
          <span data-ttu-id="075b7-139">
            <see langword="true" /> per indicare che le modifiche devono essere applicate immediatamente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-139">
              <see langword="true" /> to indicate that the changes should be applied immediately; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="075b7-140">Apre un ambito di modifica per la finestra di progettazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-140">Opens an editing scope for the designer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="075b7-141">Oggetto <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" /> che deve essere completato o ripristinato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-141">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelProperty Content { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelProperty Content" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Content" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Content As ModelProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelProperty ^ Content { System::Activities::Presentation::Model::ModelProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Content : System.Activities.Presentation.Model.ModelProperty" Usage="System.Activities.Presentation.Model.ModelItem.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="075b7-142">Ottiene l'oggetto <see langword="ContentPropertyAttribute" /> dell'elemento o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-142">Gets the <see langword="ContentPropertyAttribute" /> of the item, or <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="075b7-143">
            <see langword="ContentPropertyAttribute" /> dell'elemento come <see cref="T:System.Activities.Presentation.Model.ModelProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-143">The <see langword="ContentPropertyAttribute" /> of the item as a <see cref="T:System.Activities.Presentation.Model.ModelProperty" />.</span>
          </span>
          <span data-ttu-id="075b7-144">Se <see langword="ContentPropertyAttribute" /> non è dichiarato da <see cref="P:System.Activities.Presentation.Model.ModelItem.ItemType" /> di questo elemento, <see cref="P:System.Activities.Presentation.Model.ModelItem.Content" /> restituisce <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-144">If the <see langword="ContentPropertyAttribute" /> is not declared by the <see cref="P:System.Activities.Presentation.Model.ModelItem.ItemType" /> of this item, <see cref="P:System.Activities.Presentation.Model.ModelItem.Content" /> returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public abstract object GetCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.GetCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCurrentValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetCurrentValue();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValue : unit -&gt; obj" Usage="modelItem.GetCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="075b7-145">Restituisce il valore corrente dell'oggetto modello sottostante di cui l'oggetto <see cref="T:System.Activities.Presentation.Model.ModelItem" /> sta eseguendo il wrapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-145">Returns the current value of the underlying model object that the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> is wrapping.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="075b7-146">Valore corrente dell'oggetto modello sottostante di cui l'oggetto <see cref="T:System.Activities.Presentation.Model.ModelItem" /> sta eseguendo il wrapping come <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-146">The current value of the underlying model object that the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> is wrapping as an <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="075b7-147">È possibile controllare questo oggetto senza tuttavia apportarvi modifiche.</span><span class="sxs-lookup"><span data-stu-id="075b7-147">You can inspect this object, but you should not make any changes to it.</span></span> <span data-ttu-id="075b7-148">Le modifiche apportate all'oggetto restituito non saranno incorporate nella finestra di progettazione.</span><span class="sxs-lookup"><span data-stu-id="075b7-148">Changes made to the object returned will not be incorporated into the designer.</span></span> <span data-ttu-id="075b7-149">Il metodo <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> può restituire un'istanza esistente oppure una nuova istanza duplicata dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="075b7-149">The <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> method can return either an existing or new cloned instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public abstract Type ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ItemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ItemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : Type" Usage="System.Activities.Presentation.Model.ModelItem.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="075b7-150">Ottiene il tipo dell'oggetto rappresentato dall'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-150">Gets the type of object that the item represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="075b7-151">Tipo dell'oggetto rappresentato dall'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-151">The type of object that the item represents.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Activities.Presentation.Model.ModelItem.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="075b7-152">Ottiene o imposta il nome o l'ID dell'elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-152">Gets or sets the name or ID of the item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="075b7-153">Nome o ID dell'elemento sotto forma di <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-153">The name or ID of the item as a <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="075b7-154">Non tutti gli elementi devono avere nomi, in modo che questa operazione potrebbe restituire `null`.</span><span class="sxs-lookup"><span data-stu-id="075b7-154">Not all items need to have names, so this might return `null`.</span></span> <span data-ttu-id="075b7-155">Inoltre, a seconda del tipo di elemento e del punto della gerarchia in cui si trova, impostare <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> di un elemento potrebbe non essere sempre un'operazione valida.</span><span class="sxs-lookup"><span data-stu-id="075b7-155">Depending on the type of item and where it sits in the hierarchy, it might not always be legal to set the <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> on an item.</span></span> <span data-ttu-id="075b7-156">Se il <xref:System.Activities.Presentation.Model.ModelItem.ItemType%2A> di questo elemento dichiara un `RuntimeNamePropertyAttribute`, il <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> proprietà rappresenta un mapping diretto per la proprietà dipendono da tale attributo.</span><span class="sxs-lookup"><span data-stu-id="075b7-156">If the <xref:System.Activities.Presentation.Model.ModelItem.ItemType%2A> of this item declares a `RuntimeNamePropertyAttribute`, the  <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> property is a direct mapping to the property dictated by that attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Parent" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Parent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Parent As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Parent { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.Model.ModelItem.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="075b7-157">Ottiene l'elemento padre di questo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-157">Gets the item that is the parent of this item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="075b7-158">Oggetto <see cref="T:System.Activities.Presentation.Model.ModelItem" /> che è l'elemento padre di questo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-158">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that is the parent of this item.</span>
          </span>
          <span data-ttu-id="075b7-159">Se un elemento è contenuto in una raccolta o in un dizionario, viene restituito l'oggetto proprietario della raccolta o del dizionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-159">If an item is contained in a collection or dictionary, the object that owns the collection or dictionary is returned instead.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parents">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Parents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Parents" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Parents" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Parents As IEnumerable(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Parents { System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parents : seq&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="System.Activities.Presentation.Model.ModelItem.Parents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="075b7-160">Ottiene tutti i padri di questo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-160">Gets all parents of this item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="075b7-161">Elementi padre di questo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-161">The parents of this item.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Properties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Properties As ModelPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelPropertyCollection ^ Properties { System::Activities::Presentation::Model::ModelPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Activities.Presentation.Model.ModelPropertyCollection" Usage="System.Activities.Presentation.Model.ModelItem.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="075b7-162">Ottiene le proprietà pubbliche su questo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-162">Gets the public properties on this item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="075b7-163">Oggetto <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> che contiene le proprietà pubbliche di questo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-163">A <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> that contains the public properties of this item.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="075b7-164">Il set di proprietà restituito potrebbe variare in base alle proprietà associate o alle modifiche apportate all'ambito di modifica.</span><span class="sxs-lookup"><span data-stu-id="075b7-164">The set of properties returned might change based on attached properties or changes to the editing scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public abstract event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Model.ModelItem.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="075b7-165">Implementa <see langword="INotifyPropertyChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-165">Implements <see langword="INotifyPropertyChanged" />.</span>
          </span>
          <span data-ttu-id="075b7-166">Utilizzare questo evento per attendere le modifiche nel modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-166">Use this event to listen for changes to the model.</span>
          </span>
          <span data-ttu-id="075b7-167">Viene utilizzato anche dalle funzionalità dell'associazione dati di WPF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-167">This is also used by the data binding features of WPF.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="075b7-168">Dopo aver terminato di utilizzarli, disconnettere gli eventi dagli elementi</span><span class="sxs-lookup"><span data-stu-id="075b7-168">Disconnect events from items when you are finished with them.</span></span> <span data-ttu-id="075b7-169">In caso contrario, è necessario impedire al Garbage Collector di eliminare un elemento non più utilizzato.</span><span class="sxs-lookup"><span data-stu-id="075b7-169">Otherwise, you might prevent the garbage collector from disposing of an item that is no longer in use.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Root" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Root" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Root As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Root { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.Model.ModelItem.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="075b7-170">Ottiene l'elemento radice di questo albero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-170">Gets the item that is the root of this tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="075b7-171">Oggetto <see cref="T:System.Activities.Presentation.Model.ModelItem" /> che è l'elemento radice di questo albero oppure <see langword="null" /> se questo elemento non è parte di un albero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-171">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that is the root of this tree, or <see langword="null" /> if this item is not part of a tree.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelProperty Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelProperty Source" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Source" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Source As ModelProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelProperty ^ Source { System::Activities::Presentation::Model::ModelProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : System.Activities.Presentation.Model.ModelProperty" Usage="System.Activities.Presentation.Model.ModelItem.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="075b7-172">Ottiene la proprietà che ha fornito questo valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-172">Gets the property that provided this value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="075b7-173">Oggetto <see cref="T:System.Activities.Presentation.Model.ModelProperty" /> che indica l'origine di questo valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-173">A <see cref="T:System.Activities.Presentation.Model.ModelProperty" /> that indicates the source of this value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="075b7-174">Se l'elemento rappresenta la radice dell'oggetto grafico, verrà restituito `null`.</span><span class="sxs-lookup"><span data-stu-id="075b7-174">If the item represents the root of the object graph, this will return `null`.</span></span> <span data-ttu-id="075b7-175">Se un elemento è membro di una raccolta o di un dizionario, la proprietà restituita dall'Origine è una pseudo proprietà fornita dalla raccolta o dal dizionario.</span><span class="sxs-lookup"><span data-stu-id="075b7-175">If an item is a member of a collection or dictionary, the property returned from Source will be a pseudo-property provided by the collection or dictionary.</span></span> <span data-ttu-id="075b7-176">Per altri valori, la proprietà Origine restituisce la proprietà in cui è stato effettivamente impostato il valore.</span><span class="sxs-lookup"><span data-stu-id="075b7-176">For other values, the Source property returns the property where the value was actually set.</span></span> <span data-ttu-id="075b7-177">Pertanto, se un valore viene ereditato, l'Origine consente di individuare chi ha fornito originariamente il valore.</span><span class="sxs-lookup"><span data-stu-id="075b7-177">Therefore, if a value is being inherited, Source allows you to find out who originally provided the value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sources">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelProperty&gt; Sources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelProperty&gt; Sources" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Sources" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Sources As IEnumerable(Of ModelProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelProperty ^&gt; ^ Sources { System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sources : seq&lt;System.Activities.Presentation.Model.ModelProperty&gt;" Usage="System.Activities.Presentation.Model.ModelItem.Sources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="075b7-178">Ottiene tutte le proprietà che gestiscono questo valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-178">Gets all the properties that hold this value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="075b7-179">Origine di questo valore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-179">The sources of this value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="modelItem.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="075b7-180">Restituisce una rappresentazione di stringa dell'oggetto modello sottostante contenuta in questo elemento del modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-180">Returns a string representation of the underlying model object contained in this model item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="075b7-181">Rappresentazione di stringa dell'oggetto modello sottostante contenuta in questo elemento del modello.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-181">A string representation of the underlying model object contained in this model item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public abstract System.Windows.DependencyObject View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject View" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.View" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property View As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::DependencyObject ^ View { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.View : System.Windows.DependencyObject" Usage="System.Activities.Presentation.Model.ModelItem.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="075b7-182">Ottiene un un oggetto <see cref="T:System.Windows.DependencyObject" /> che rappresenta graficamente questo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-182">Gets a <see cref="T:System.Windows.DependencyObject" /> that graphically represents this item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="075b7-183">Oggetto <see cref="T:System.Windows.DependencyObject" /> che graficamente rappresenta questo elemento o <see langword="null" /> se tale rappresentazione non esiste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="075b7-183">A <see cref="T:System.Windows.DependencyObject" /> that graphically represents this item, or <see langword="null" /> if there is no such representation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>