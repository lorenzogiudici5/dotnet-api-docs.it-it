<Type Name="PluralizationService" FullName="System.Data.Entity.Design.PluralizationServices.PluralizationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3195d66352935aa70b77a546be6c824a5e962f0d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36691166" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PluralizationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PluralizationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PluralizationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class PluralizationService abstract" />
  <TypeSignature Language="F#" Value="type PluralizationService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="defa1-101">Fornisce metodi per costruire forme plurali e singolari di parole.</span>
      <span class="sxs-lookup">
        <span data-stu-id="defa1-101">Provides methods for constructing plural and singular forms of words.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="defa1-102">Il <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> classe applica le regole in lingua inglese per la creazione di forme singolare e plurale di parole.</span><span class="sxs-lookup"><span data-stu-id="defa1-102">The <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> class applies English rules for constructing plural and singular forms of words.</span></span> <span data-ttu-id="defa1-103">Per estendere il servizio ad altri linguaggi, usare il <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> nella <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> classe.</span><span class="sxs-lookup"><span data-stu-id="defa1-103">To extend the service to other languages, use the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> on the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PluralizationService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PluralizationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="defa1-104">Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-104">Initializes a new instance of the <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateService">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Design.PluralizationServices.PluralizationService CreateService (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Design.PluralizationServices.PluralizationService CreateService(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateService (culture As CultureInfo) As PluralizationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Entity::Design::PluralizationServices::PluralizationService ^ CreateService(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member CreateService : System.Globalization.CultureInfo -&gt; System.Data.Entity.Design.PluralizationServices.PluralizationService" Usage="System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Design.PluralizationServices.PluralizationService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="defa1-105">
            <see cref="T:System.Globalization.CultureInfo" /> che corrisponde alle regole del linguaggio applicate alle forme singolari e plurali delle parole.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-105">The <see cref="T:System.Globalization.CultureInfo" /> that corresponds to the language rules applied for singular and plural forms of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="defa1-106">Crea una classe <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> che applica regole del linguaggio che corrispondono all'oggetto <see cref="T:System.Globalization.CultureInfo" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-106">Creates a <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> that applies language rules that correspond to the specified <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="defa1-107">Oggetto <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> appena creato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-107">The newly created <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="defa1-108">Il <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> classe applica le regole in lingua inglese per la creazione di forme singolare e plurale di parole.</span><span class="sxs-lookup"><span data-stu-id="defa1-108">The <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> class applies English rules for constructing plural and singular forms of words.</span></span> <span data-ttu-id="defa1-109">Per estendere il servizio ad altri linguaggi, usare il <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> nella <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> classe.</span><span class="sxs-lookup"><span data-stu-id="defa1-109">To extend the service to other languages, use the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> on the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Globalization::CultureInfo ^ Culture {  public:&#xA;System::Globalization::CultureInfo ^ get(); protected:&#xA; void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="defa1-110">Ottiene o imposta le impostazioni cultura <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-110">Gets or sets the <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> culture.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="defa1-111">Oggetto che specifica le regole del linguaggio da applicare ai singolari e plurali.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-111">An object that specifies which language rules to apply for singulars and plurals.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="defa1-112">Il <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> classe applica le regole in lingua inglese per la creazione di forme singolare e plurale di parole.</span><span class="sxs-lookup"><span data-stu-id="defa1-112">The <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> class applies English rules for constructing plural and singular forms of words.</span></span> <span data-ttu-id="defa1-113">Per estendere il servizio ad altri linguaggi, usare il <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> nella <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> classe.</span><span class="sxs-lookup"><span data-stu-id="defa1-113">To extend the service to other languages, use the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> on the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPlural">
      <MemberSignature Language="C#" Value="public abstract bool IsPlural (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPlural(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsPlural (word As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsPlural(System::String ^ word);" />
      <MemberSignature Language="F#" Value="abstract member IsPlural : string -&gt; bool" Usage="pluralizationService.IsPlural word" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word">
          <span data-ttu-id="defa1-114">Valore da analizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-114">The value to be analyzed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="defa1-115">Determina se la parola specificata è plurale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-115">Determines whether the specified word is plural.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="defa1-116">
            <see langword="true" /> se la parola è plurale; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-116">
              <see langword="true" /> if the word is plural; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="defa1-117">Il <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> classe applica le regole in lingua inglese per la creazione di forme singolare e plurale di parole.</span><span class="sxs-lookup"><span data-stu-id="defa1-117">The <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> class applies English rules for constructing plural and singular forms of words.</span></span> <span data-ttu-id="defa1-118">Per estendere il servizio ad altri linguaggi, usare il <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> nella <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> classe.</span><span class="sxs-lookup"><span data-stu-id="defa1-118">To extend the service to other languages, use the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> on the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> class.</span></span>  
  
 <span data-ttu-id="defa1-119">Sia il <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> e <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> i metodi possono restituire `true` per la stessa parola.</span><span class="sxs-lookup"><span data-stu-id="defa1-119">Both the <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> and <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> methods can return `true` for the same word.</span></span> <span data-ttu-id="defa1-120">Ad esempio, entrambi i metodi restituirà `true` per la parola "fish".</span><span class="sxs-lookup"><span data-stu-id="defa1-120">For example, both methods will return `true` for the word "fish".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingular">
      <MemberSignature Language="C#" Value="public abstract bool IsSingular (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSingular(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSingular (word As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSingular(System::String ^ word);" />
      <MemberSignature Language="F#" Value="abstract member IsSingular : string -&gt; bool" Usage="pluralizationService.IsSingular word" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word">
          <span data-ttu-id="defa1-121">Valore da analizzare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-121">The value to be analyzed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="defa1-122">Determina se la parola specificata è singolare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-122">Determines whether the specified word is singular.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="defa1-123">
            <see langword="true" /> se la parola è singolare; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-123">
              <see langword="true" /> if the word is singular; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="defa1-124">Il <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> classe applica le regole in lingua inglese per la creazione di forme singolare e plurale di parole.</span><span class="sxs-lookup"><span data-stu-id="defa1-124">The <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> class applies English rules for constructing plural and singular forms of words.</span></span> <span data-ttu-id="defa1-125">Per estendere il servizio ad altri linguaggi, usare il <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> nella <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> classe.</span><span class="sxs-lookup"><span data-stu-id="defa1-125">To extend the service to other languages, use the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> on the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> class.</span></span>  
  
 <span data-ttu-id="defa1-126">Sia il <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> e <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> i metodi possono restituire `true` per la stessa parola.</span><span class="sxs-lookup"><span data-stu-id="defa1-126">Both the <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> and <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> methods can return `true` for the same word.</span></span> <span data-ttu-id="defa1-127">Ad esempio, entrambi i metodi restituirà `true` per la parola "fish".</span><span class="sxs-lookup"><span data-stu-id="defa1-127">For example, both methods will return `true` for the word "fish".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pluralize">
      <MemberSignature Language="C#" Value="public abstract string Pluralize (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Pluralize(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Pluralize (word As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Pluralize(System::String ^ word);" />
      <MemberSignature Language="F#" Value="abstract member Pluralize : string -&gt; string" Usage="pluralizationService.Pluralize word" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word">
          <span data-ttu-id="defa1-128">Parola da rendere al plurale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-128">The word to be made plural.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="defa1-129">Restituisce la forma plurale della parola specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-129">Returns the plural form of the specified word</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="defa1-130">Forma plurale del parametro di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-130">The plural form of the input parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="defa1-131">Il <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> classe applica le regole in lingua inglese per la creazione di forme singolare e plurale di parole.</span><span class="sxs-lookup"><span data-stu-id="defa1-131">The <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> class applies English rules for constructing plural and singular forms of words.</span></span> <span data-ttu-id="defa1-132">Per estendere il servizio ad altri linguaggi, usare il <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> nella <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> classe.</span><span class="sxs-lookup"><span data-stu-id="defa1-132">To extend the service to other languages, use the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> on the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Singularize">
      <MemberSignature Language="C#" Value="public abstract string Singularize (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Singularize(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Singularize (word As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Singularize(System::String ^ word);" />
      <MemberSignature Language="F#" Value="abstract member Singularize : string -&gt; string" Usage="pluralizationService.Singularize word" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word">
          <span data-ttu-id="defa1-133">Parola da rendere al singolare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-133">The word to be made singular.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="defa1-134">Restituisce la forma singolare della parola specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-134">Returns the singular form of the specified word.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="defa1-135">Forma singolare del parametro di input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="defa1-135">The singular form of the input parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="defa1-136">Il <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> classe applica le regole in lingua inglese per la creazione di forme singolare e plurale di parole.</span><span class="sxs-lookup"><span data-stu-id="defa1-136">The <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> class applies English rules for constructing plural and singular forms of words.</span></span> <span data-ttu-id="defa1-137">Per estendere il servizio ad altri linguaggi, usare il <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> nella <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> classe.</span><span class="sxs-lookup"><span data-stu-id="defa1-137">To extend the service to other languages, use the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService> on the <xref:System.Data.Entity.Design.EntityModelSchemaGenerator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>