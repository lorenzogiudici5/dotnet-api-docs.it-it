<Type Name="SendMessageContent" FullName="System.ServiceModel.Activities.SendMessageContent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="751cdb06d768a9cfe67ab8454e749da0564d2e56" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36621802" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SendMessageContent : System.ServiceModel.Activities.SendContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SendMessageContent extends System.ServiceModel.Activities.SendContent" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activities.SendMessageContent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SendMessageContent&#xA;Inherits SendContent" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendMessageContent sealed : System::ServiceModel::Activities::SendContent" />
  <TypeSignature Language="F#" Value="type SendMessageContent = class&#xA;    inherit SendContent" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activities.SendContent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Message")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e380c-101">Classe utilizzata per inviare un solo elemento (messaggio) da o verso un servizio del flusso di lavoro.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e380c-101">A class used to send a single item (message) to or from a workflow service.</span>
      </span>
      <span data-ttu-id="e380c-102">L'elemento può essere un tipo integrato come tipi primitivi, <see cref="T:System.ServiceModel.Channels.Message" />o <see cref="T:System.Xml.Linq.XElement" />; o un contratto dati definito dall'applicazione, un contratto di messaggio o un tipo serializzabile in Xml.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e380c-102">The item can be a built-in type such as primitive types, <see cref="T:System.ServiceModel.Channels.Message" />, or <see cref="T:System.Xml.Linq.XElement" />; or an application-defined data contract, message contract, or XML serializable type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e380c-103">In caso di utilizzo di questa classe, messaggi serializzati sulla rete sono senza wrapper, a meno che i dati siano un tipo di contratto di messaggio o di tipo <xref:System.ServiceModel.Channels.Message>.</span><span class="sxs-lookup"><span data-stu-id="e380c-103">When using this class, messages serialized on the wire are unwrapped, unless the data is a message contract type or of type <xref:System.ServiceModel.Channels.Message>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e380c-104">Nell'esempio seguente viene illustrato come utilizzare un'istanza <xref:System.ServiceModel.Activities.SendMessageContent> con un'attività <xref:System.ServiceModel.Activities.Send>.</span><span class="sxs-lookup"><span data-stu-id="e380c-104">The following example shows how to use a <xref:System.ServiceModel.Activities.SendMessageContent> instance with a <xref:System.ServiceModel.Activities.Send> activity.</span></span>  
  
 [!code-csharp[ContentBasedCorrelation#0](~/samples/snippets/csharp/VS_Snippets_CFX/contentbasedcorrelation/cs/client.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e380c-105">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Activities.SendMessageContent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e380c-105">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMessageContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendMessageContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMessageContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e380c-106">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Activities.SendMessageContent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e380c-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMessageContent (System.Activities.InArgument message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.InArgument message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As InArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMessageContent(System::Activities::InArgument ^ message);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Activities.SendMessageContent : System.Activities.InArgument -&gt; System.ServiceModel.Activities.SendMessageContent" Usage="new System.ServiceModel.Activities.SendMessageContent message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.Activities.InArgument" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="e380c-107">I dati da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e380c-107">The data to send.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e380c-108">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> con i dati specificati da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e380c-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> class with the specified data to send.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e380c-109">Nell'esempio seguente viene illustrato come utilizzare questo costruttore.</span><span class="sxs-lookup"><span data-stu-id="e380c-109">The following example shows how to use this constructor.</span></span>  
  
 [!code-csharp[ContentBasedCorrelation#0](~/samples/snippets/csharp/VS_Snippets_CFX/contentbasedcorrelation/cs/client.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMessageContent (System.Activities.InArgument message, Type declaredMessageType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.InArgument message, class System.Type declaredMessageType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As InArgument, declaredMessageType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMessageContent(System::Activities::InArgument ^ message, Type ^ declaredMessageType);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Activities.SendMessageContent : System.Activities.InArgument * Type -&gt; System.ServiceModel.Activities.SendMessageContent" Usage="new System.ServiceModel.Activities.SendMessageContent (message, declaredMessageType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.Activities.InArgument" />
        <Parameter Name="declaredMessageType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="e380c-110">I dati da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e380c-110">The data to send.</span>
          </span>
        </param>
        <param name="declaredMessageType">
          <span data-ttu-id="e380c-111">Il tipo di dati che viene visualizzato nella descrizione del servizio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e380c-111">The data type that appears on the service description.</span>
          </span>
          <span data-ttu-id="e380c-112">Deve essere dello stesso tipo di <c>message</c> o di qualsiasi tipo base di <c>message</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e380c-112">It must be the same type as <c>message</c> or any base type of <c>message</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e380c-113">Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> con il messaggio e il tipo di messaggio specificati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e380c-113">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> class with the specified message and message type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaredMessageType">
      <MemberSignature Language="C#" Value="public Type DeclaredMessageType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaredMessageType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeclaredMessageType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaredMessageType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeclaredMessageType : Type with get, set" Usage="System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e380c-114">Ottiene o imposta il tipo di messaggio dichiarato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e380c-114">Gets or sets the declared message type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e380c-115">Tipo di messaggio dichiarato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e380c-115">The declared message type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e380c-116"><xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A> è il tipo di dati che verrà visualizzato nella descrizione del servizio e WSDL.</span><span class="sxs-lookup"><span data-stu-id="e380c-116"><xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A> is the data type that will appear on the service description and WSDL.</span></span> <span data-ttu-id="e380c-117">È consigliabile che la descrizione del servizio contenga il tipo di classe di base in modo che le varie classi derivate possano essere inviate e ricevute dal servizio in fase di runtime. </span><span class="sxs-lookup"><span data-stu-id="e380c-117">You may want the service description to contain the base class type so that various derived classes can be sent and received by the service at runtime.</span></span> <span data-ttu-id="e380c-118"><xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A>Deve corrispondere al tipo di argomento della proprietà del messaggio o al tipo di base.</span><span class="sxs-lookup"><span data-stu-id="e380c-118"><xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A> must be either the same as the argument type of the Message property or its base type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument Message { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument Message" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activities.SendMessageContent.Message" />
      <MemberSignature Language="VB.NET" Value="Public Property Message As InArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument ^ Message { System::Activities::InArgument ^ get(); void set(System::Activities::InArgument ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Message : System.Activities.InArgument with get, set" Usage="System.ServiceModel.Activities.SendMessageContent.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e380c-119">Ottiene o imposta i dati da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e380c-119">Gets or sets the data to send.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e380c-120">I dati da inviare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e380c-120">The data to send.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeDeclaredMessageType">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeDeclaredMessageType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeDeclaredMessageType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeDeclaredMessageType () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeDeclaredMessageType();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeDeclaredMessageType : unit -&gt; bool" Usage="sendMessageContent.ShouldSerializeDeclaredMessageType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e380c-121">Ottiene un valore che indica se il valore della proprietà <see cref="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType" /> deve essere nel formato XAML serializzato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e380c-121">Gets a value that indicates whether the <see cref="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType" /> property should be XAML-serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e380c-122">
            <see langword="true" /> se la proprietà deve essere serializzata; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e380c-122">
              <see langword="true" /> if the property should be serialized; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>