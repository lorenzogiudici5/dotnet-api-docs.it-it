<Type Name="TransactedReceiveScope" FullName="System.ServiceModel.Activities.TransactedReceiveScope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49cf2e305d346219b1288a787961e46dae311a7d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30505695" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TransactedReceiveScope : System.Activities.NativeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TransactedReceiveScope extends System.Activities.NativeActivity" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activities.TransactedReceiveScope" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TransactedReceiveScope&#xA;Inherits NativeActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransactedReceiveScope sealed : System::Activities::NativeActivity" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.NativeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Body")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Un'attività che definisce l'ambito della durata di una transazione iniziata da un messaggio ricevuto. È possibile che la transazione sia propagata nel flusso di lavoro al messaggio di avvio o venga creata dal dispatcher alla ricezione del messaggio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'attività <xref:System.ServiceModel.Activities.TransactedReceiveScope> consente di controllare la durata della transazione propagata.  
  
> [!WARNING]
>  Per un tipo di avvio <xref:System.ServiceModel.Activities.TransactedReceiveScope> attività (un <xref:System.ServiceModel.Activities.TransactedReceiveScope> che contiene un <xref:System.ServiceModel.Activities.Receive> attività con <xref:System.ServiceModel.Activities.Receive.CanCreateInstance%2A> impostato su `true`), viene creata la transazione prima che il runtime viene avviata l'esecuzione di <xref:System.ServiceModel.Activities.TransactedReceiveScope> attività. Questa transazione non si trova a livello delle attività del flusso di lavoro, ma si trova ai livelli di persistenza sottostante. Se l'esecuzione del flusso di lavoro incontra un'attività <xref:System.Activities.Statements.Persist> prima dell'attività <xref:System.ServiceModel.Activities.TransactedReceiveScope>, il runtime cerca di rendere persistente nella transazione di ambiente. Questo comportamento causa un blocco finché la transazione non viene completata. Poiché l'esecuzione del flusso di lavoro non ha raggiunto la sezione <xref:System.ServiceModel.Activities.TransactedReceiveScope.Body%2A>, la transazione non può terminare. Questo deadlock provoca la mancata risposta del flusso di lavoro fino a che la transazione non scade. Quando la transazione scade, l'istanza appena creata viene interrotta.  
  
> [!IMPORTANT]
>  Ogni volta che si utilizza un oggetto <xref:System.ServiceModel.Activities.TransactedReceiveScope>, è consigliabile posizionare tutte le attività Receive del flusso di lavoro all'interno delle attività <xref:System.ServiceModel.Activities.TransactedReceiveScope>.  
  
> [!IMPORTANT]
>  Quando si utilizza l'oggetto <xref:System.ServiceModel.Activities.TransactedReceiveScope> e i messaggi arrivano nell'ordine non corretto, il flusso di lavoro verrà interrotto quando si tenterà di consegnare il primo messaggio nell'ordine non corretto. È necessario assicurarsi che il flusso di lavoro sia sempre in corrispondenza di un punto di interruzione coerente quando il flusso di lavoro è inattivo. In questo modo sarà possibile riavviare il flusso di lavoro da un punto di persistenza precedente nel caso in cui il flusso di lavoro venga interrotto.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come utilizzare la classe <xref:System.ServiceModel.Activities.TransactedReceiveScope> in un'attività <xref:System.Activities.Statements.Sequence>.  
  
 [!code-csharp[TransactedReceiveScope#0](~/samples/snippets/csharp/VS_Snippets_CFX/transactedreceivescope/cs/common/codeserviceworkflow.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactedReceiveScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.TransactedReceiveScope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactedReceiveScope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.ServiceModel.Activities.TransactedReceiveScope" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity Body" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activities.TransactedReceiveScope.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ Body { System::Activities::Activity ^ get(); void set(System::Activities::Activity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta <see cref="T:System.Activities.Activity" /> che costituisce il corpo dell'attività <see cref="T:System.ServiceModel.Activities.TransactedReceiveScope" />.</summary>
        <value>Il corpo dell'ambito di ricezione transazionale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La transazione è di ambiente per la durata intera del corpo.  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare la proprietà <xref:System.ServiceModel.Activities.TransactedReceiveScope.Body%2A>.  
  
 [!code-csharp[TransactedReceiveScope#0](~/samples/snippets/csharp/VS_Snippets_CFX/transactedreceivescope/cs/common/codeserviceworkflow.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.TransactedReceiveScope.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Activities.Receive Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Activities.Receive Request" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activities.TransactedReceiveScope.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As Receive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Activities::Receive ^ Request { System::ServiceModel::Activities::Receive ^ get(); void set(System::ServiceModel::Activities::Receive ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Activities.Receive</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta l’attività <see cref="T:System.ServiceModel.Activities.Receive" /> associata a questa attività <see cref="T:System.ServiceModel.Activities.TransactedReceiveScope" />.</summary>
        <value>L'attività di ricezione associata all'ambito di ricezione transazionale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare la proprietà <xref:System.ServiceModel.Activities.TransactedReceiveScope.Request%2A>.  
  
 [!code-csharp[TransactedReceiveScope#0](~/samples/snippets/csharp/VS_Snippets_CFX/transactedreceivescope/cs/common/codeserviceworkflow.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Variables">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; Variables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; Variables" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activities.TransactedReceiveScope.Variables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Variables As Collection(Of Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ Variables { System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la raccolta di oggetti <see cref="T:System.Activities.Variable" /> associati a questo oggetto <see cref="T:System.ServiceModel.Activities.TransactedReceiveScope" />.</summary>
        <value>Le variabili associate all'ambito di ricezione transazionale.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente viene illustrato come impostare la proprietà <xref:System.ServiceModel.Activities.TransactedReceiveScope.Variables%2A>.  
  
 [!code-csharp[TransactedReceiveScope#0](~/samples/snippets/csharp/VS_Snippets_CFX/transactedreceivescope/cs/common/codeserviceworkflow.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>