<Type Name="WebMethodAttribute" FullName="System.Web.Services.WebMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fbb32fe86838ce711647b8159774d6ab966929a3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36594404" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebMethodAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WebMethodAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Aggiungendo questo attributo a un metodo in un servizio Web XML creato utilizzando ASP.NET, si consentirà la chiamata del metodo da parte di client Web remoti. Questa classe non può essere ereditata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 All'interno di una classe che hanno impostato questo attributo vengono chiamati i metodi del servizio Web XML. Il metodo e la classe deve essere pubblico e in esecuzione all'interno di un'applicazione Web ASP.NET.  
  
   
  
## Examples  
 Nell'esempio seguente il metodo `GetMachineName` può essere chiamato in modalità remota tramite il Web, perché contiene un <xref:System.Web.Services.WebMethodAttribute>. `GetUserName` non può essere chiamata in modalità remota, perché non dispone di un <xref:System.Web.Services.WebMethodAttribute>, anche se è `public`.  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EnterpriseServices.TransactionOption" />
    <altmember cref="T:System.Web.Services.WebService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute enableSession" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">Indica se lo stato della sessione è attivato per il metodo di servizio Web XML.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">Indica se lo stato della sessione è attivato per il metodo di servizio Web XML.</param>
        <param name="transactionOption">Inizializza il supporto transazioni di un metodo di servizio Web XML.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una chiamata al servizio web può essere solo la radice di una transazione, a causa della natura senza stata del protocollo HTTP. Ciò significa che le due impostazioni seguenti sono equivalenti, con ogni chiamata crea una nuova transazione:  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 Significa anche che tutte le impostazioni seguenti sono equivalenti. vale a dire nessun supporto delle transazioni:  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption * int -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">Indica se lo stato della sessione è attivato per il metodo di servizio Web XML.</param>
        <param name="transactionOption">Inizializza il supporto transazioni di un metodo di servizio Web XML.</param>
        <param name="cacheDuration">Inizializza il numero di secondi di memorizzazione della risposta nella cache.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una chiamata al servizio web può essere solo la radice di una transazione, a causa della natura senza stata del protocollo HTTP.  Ciò significa che le due impostazioni seguenti sono equivalenti, con ogni chiamata crea una nuova transazione:  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 Significa anche che tutte le impostazioni seguenti sono equivalenti. vale a dire nessun supporto delle transazioni:  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption * int -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption * int * bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration, bufferResponse)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">Indica se lo stato della sessione è attivato per il metodo di servizio Web XML.</param>
        <param name="transactionOption">Inizializza il supporto transazioni di un metodo di servizio Web XML.</param>
        <param name="cacheDuration">Inizializza il numero di secondi di memorizzazione della risposta nella cache.</param>
        <param name="bufferResponse">Indica se la risposta alla richiesta viene memorizzata nel buffer.</param>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Services.WebMethodAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una chiamata al servizio web può essere solo la radice di una transazione, a causa della natura senza stata del protocollo HTTP.  Ciò significa che le due impostazioni seguenti sono equivalenti, con ogni chiamata crea una nuova transazione:  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 Significa anche che tutte le impostazioni seguenti sono equivalenti. vale a dire nessun supporto delle transazioni:  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption * int * bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration, bufferResponse)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <param name="bufferResponse">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferResponse">
      <MemberSignature Language="C#" Value="public bool BufferResponse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferResponse" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.BufferResponse" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferResponse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BufferResponse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BufferResponse : bool with get, set" Usage="System.Web.Services.WebMethodAttribute.BufferResponse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta la memorizzazione della risposta alla richiesta nel buffer.</summary>
        <value>
          <see langword="true" /> se la risposta alla richiesta viene memorizzata nel buffer; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'impostazione <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> a `true`, serializza la risposta del metodo del servizio Web XML in un buffer di memoria fino a quando la risposta viene serializzata completamente o il buffer è pieno. Dopo la risposta viene memorizzato nel buffer, viene restituita al client del servizio Web XML attraverso la rete. Quando si <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> è `false`, la risposta al metodo del servizio Web XML viene inviata al client durante la serializzazione. In generale, si desidera solo impostare <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> a `false`, se è noto che un metodo di servizio Web XML restituisce grandi quantità di dati al client. Per più piccole quantità di dati, sono preferibile con le prestazioni del servizio Web XML <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> a `true`.  
  
 Quando si <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> è `false`, le estensioni SOAP sono disabilitate per il metodo di servizio Web XML.  
  
   
  
## Examples  
 Il codice seguente viene impostata la <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> proprietà `false` e gestisce lo streaming di un file di testo al client. L'esempio di codice viene illustrato come eseguire il flusso di una grande quantità di dati al client utilizzando una classe che implementa il <xref:System.Collections.IEnumerable> interfaccia.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.Services.WebMethodAttribute.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene o imposta il numero di secondi che indicano la durata del mantenimento della risposta nella cache.</summary>
        <value>Numero di secondi che indicano la durata del mantenimento della risposta nella cache. Il valore predefinito è 0, che indica che la risposta non viene memorizzata nella cache.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando è abilitata la memorizzazione nella cache le richieste e risposte contenute in memoria nel server per almeno la durata della cache in modo attenzione deve essere utilizzata se si prevede di richieste o risposte per presentare dimensioni estremamente elevate o si prevede che le richieste a variano notevolmente.  
  
 Vi sono due fattori che possono influire sulla memorizzazione dell'output nella cache in un'applicazione servizio Web ASP.NET 2.0.  
  
 In ASP.NET 2.0 il metodo HTTP della pagina di prova non è più GET, ma POST. I metodi POST, tuttavia, in genere non vengono memorizzati nella cache. Se si modifica la pagina di prova in un'applicazione servizio Web ASP.NET 2.0 in modo che venga utilizzato GET, la memorizzazione nella cache non presenta problemi.  
  
 Inoltre per HTTP è indicato che un agente utente (il browser o l'applicazione chiamante) dovrebbe essere in grado di eseguire l'override della memorizzazione nella cache impostando "Cache-Control" su "no-cache". Pertanto le applicazioni ASP.NET ignorano i risultati memorizzati nella cache quando trovano un'intestazione "no-cache".  
  
   
  
## Examples  
 Nell'esempio seguente inserisce il risultato della chiamata al `ServiceUsage` metodo del servizio Web XML nella cache per 60 secondi. Ogni volta che un Web XML client del servizio esegue il `ServiceUsage` metodo del servizio Web XML durante questo periodo, viene restituito lo stesso risultato.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.Services.WebMethodAttribute.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Messaggio descrittivo per il metodo di servizio Web XML.</summary>
        <value>Messaggio descrittivo per il metodo di servizio Web XML. Il valore predefinito è <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Descrittivo viene visualizzato il messaggio di potenziali clienti del servizio Web XML quando vengono generati i documenti di descrizione per il servizio Web XML, ad esempio la descrizione del servizio e il servizio pagina della Guida.  
  
   
  
## Examples  
 Nell'esempio seguente, la stringa `Obtains the Server Computer Name` viene utilizzato per descrivere il metodo del servizio Web XML nella pagina della Guida del servizio e descrizione del servizio per il servizio Web XML.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EnableSession">
      <MemberSignature Language="C#" Value="public bool EnableSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.EnableSession" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSession { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSession : bool with get, set" Usage="System.Web.Services.WebMethodAttribute.EnableSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica se lo stato della sessione è attivato per un metodo di servizio Web XML.</summary>
        <value>
          <see langword="true" /> se lo stato della sessione è attivato per un metodo di servizio Web XML. Il valore predefinito è <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per poter archiviare lo stato della sessione in ASP.NET <xref:System.Web.SessionState.HttpSessionState> dell'oggetto, il servizio Web XML deve ereditare da <xref:System.Web.Services.WebService> e una <xref:System.Web.Services.WebMethodAttribute> applicato al metodo del servizio Web XML, impostando il <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> proprietà `true`. Se lo stato della sessione non è necessaria per un metodo di servizio Web XML, quindi disabilitarlo può migliorare le prestazioni.  
  
 Un client del servizio Web XML viene identificato da un cookie HTTP restituito da un servizio Web XML. Affinché un servizio Web XML mantenere lo stato della sessione per un client, il client deve mantenere il cookie. I client possono ricevere il cookie HTTP creando una nuova istanza della <xref:System.Net.CookieContainer> e l'assegnazione che per il <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> proprietà della classe proxy prima di chiamare il metodo del servizio Web XML. Se si desidera mantenere lo stato della sessione anche quando l'istanza della classe proxy esce dall'ambito, il client deve mantenere il cookie HTTP tra le chiamate al servizio Web XML. Ad esempio, un client Web Form può rendere persistente il cookie HTTP, salvando il <xref:System.Net.CookieContainer> nello stato sessione. Poiché non tutti i servizi Web XML utilizzano lo stato della sessione e pertanto i client non viene sempre richiesto di utilizzare il <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> proprietà di un proxy client, la documentazione per il servizio Web XML deve indicare se lo stato della sessione viene utilizzato.  
  
   
  
## Examples  
 Nell'esempio seguente lo stato della sessione viene utilizzato per determinare quante volte una determinata sessione accede al metodo di servizio Web XML `SessionHitCounter`.  
  
  
  
 Esempio di codice seguente è un client Web Form di un servizio Web XML che usa lo stato della sessione. Il client mantiene il cookie HTTP che identifica in modo univoco la sessione da archiviare nello stato della sessione del client.  
  
 [!code-aspx-csharp[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer" />
      </Docs>
    </Member>
    <Member MemberName="MessageName">
      <MemberSignature Language="C#" Value="public string MessageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.MessageName" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageName : string with get, set" Usage="System.Web.Services.WebMethodAttribute.MessageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Il nome utilizzato per il metodo di servizio Web XML nei dati che un metodo di servizio Web XML riceve e restituisce.</summary>
        <value>Il nome utilizzato per il metodo di servizio Web XML nei dati che un metodo di servizio Web XML riceve e restituisce. Il valore predefinito corrisponde al nome del metodo di servizio Web XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> proprietà può essere utilizzata per creare alias dei nomi di metodo o proprietà. L'utilizzo più comune del <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> proprietà sarà in modo da identificare metodi polimorfici. Per impostazione predefinita, <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> è impostata sul nome del metodo del servizio Web XML. Pertanto, se un servizio Web XML contiene due o più metodi del servizio Web XML con lo stesso nome, è possibile identificare in modo univoco i singoli metodi del servizio Web XML impostando il <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> su un nome univoco all'interno del servizio Web XML, senza modificare il nome del nome effettivo del metodo nel codice.  
  
 Quando i dati viene passati a un servizio Web XML viene inviato in una richiesta e quando viene restituita che viene inviata una risposta. All'interno della richiesta e risposta, il nome utilizzato per il metodo di servizio Web XML è relativo <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> proprietà.  
  
 Il nome del messaggio associato a un metodo di servizio Web XML deve essere univoco all'interno del servizio Web XML.  
  
 Se dopo che i client chiamano il metodo originale, viene aggiunto un nuovo metodo di servizio Web XML con lo stesso nome ma parametri diversi, di un diverso nome del messaggio deve essere specificato per il nuovo metodo, ma il nome originale del messaggio deve essere lasciato invariato per assicurare la compatibilità con i client esistenti.  
  
   
  
## Examples  
 Nell'esempio seguente, <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> viene utilizzato per evitare ambiguità tra i due `Add` metodi.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOption">
      <MemberSignature Language="C#" Value="public System.EnterpriseServices.TransactionOption TransactionOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.EnterpriseServices.TransactionOption TransactionOption" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.TransactionOption" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionOption As TransactionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::EnterpriseServices::TransactionOption TransactionOption { System::EnterpriseServices::TransactionOption get(); void set(System::EnterpriseServices::TransactionOption value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionOption : System.EnterpriseServices.TransactionOption with get, set" Usage="System.Web.Services.WebMethodAttribute.TransactionOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica il supporto transazioni di un metodo di servizio Web XML.</summary>
        <value>supporto transazioni di un metodo di servizio Web XML. Il valore predefinito è <see cref="F:System.EnterpriseServices.TransactionOption.Disabled" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I metodi del servizio Web XML possono partecipare solo come oggetto principale in una transazione, a causa della natura senza stata del protocollo HTTP. I metodi del servizio Web XML possono richiamare gli oggetti COM che partecipano alla stessa transazione come metodo di servizio Web XML, se l'oggetto COM è contrassegnato per l'esecuzione all'interno di una transazione nello strumento di amministrazione Servizi componenti. Se un metodo di servizio Web XML con un <xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A> proprietà di `Required` oppure `RequiresNew` richiama un altro metodo del servizio Web XML con un <xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A> proprietà di `Required` o `RequiresNew`, ogni metodo del servizio Web XML fa parte di un proprio transazione, perché un metodo di servizio Web XML può funzionare solo come oggetto principale in una transazione.  
  
|Elemento|Descrizione|  
|----------|-----------------|  
|Disabilitato|Indica che il metodo del servizio Web XML non viene eseguito all'interno dell'ambito di una transazione. Quando viene elaborata una richiesta, il metodo del servizio Web XML viene eseguito senza una transazione.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Disabled`)]|  
|NotSupported|Indica che il metodo del servizio Web XML non viene eseguito all'interno dell'ambito di una transazione. Quando viene elaborata una richiesta, il metodo del servizio Web XML viene eseguito senza una transazione.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.NotSupported`)]|  
|Supportato|Indica che il metodo del servizio Web XML non viene eseguito all'interno dell'ambito di transazioni. Quando viene elaborata una richiesta, il servizio Web XML viene creato senza una transazione.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Supported`)]|  
|Obbligatorio|Indica che il metodo del servizio Web XML richiede una transazione. Poiché i metodi del servizio Web XML possono partecipare solo come oggetto principale in una transazione, una nuova transazione verrà creata per il metodo del servizio Web XML.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Required`)]|  
|RequiresNew|Indica che il metodo del servizio Web XML richiede una nuova transazione. Quando viene elaborata una richiesta, il servizio Web XML viene creato all'interno di una nuova transazione.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.RequiresNew`)]|  
  
 Se un'eccezione viene generata da o non intercettata da un metodo di servizio Web XML, la transazione viene interrotta automaticamente. Se non si verificano eccezioni viene eseguito automaticamente il commit della transazione, a meno che il metodo viene chiamato in modo esplicito `SetAbort`.  
  
   
  
## Examples  
 Nell'esempio seguente inizia una nuova transazione quando il `Transfer` metodo viene chiamato.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EnterpriseServices.TransactionOption" />
      </Docs>
    </Member>
  </Members>
</Type>