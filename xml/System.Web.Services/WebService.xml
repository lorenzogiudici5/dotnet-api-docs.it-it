<Type Name="WebService" FullName="System.Web.Services.WebService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4544db5d35d59148a39a15185fab1a57d9cdada6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36394916" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebService : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebService extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebService" />
  <TypeSignature Language="VB.NET" Value="Public Class WebService&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebService : System::ComponentModel::MarshalByValueComponent" />
  <TypeSignature Language="F#" Value="type WebService = class&#xA;    inherit MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definisce la classe di base facoltativa per i servizi Web XML, che fornisce accesso diretto agli oggetti comuni ASP.NET, quali lo stato applicazione e lo stato sessione.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se non è necessario accedere agli oggetti ASP.NET comuni, è comunque possibile creare un servizio Web XML senza che deriva da <xref:System.Web.Services.WebService>. Oggetti ASP.NET aggiuntivi sono accessibili tramite <xref:System.Web.Services.WebService.Context%2A>.  
  
 I metodi del servizio Web XML con il <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> proprietà di uno <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> o <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> impostata su `true`, non hanno accesso a loro <xref:System.Web.HttpContext>. Di conseguenza, accedere a tutte le proprietà del <xref:System.Web.Services.WebService> (classe), all'interno di tale metodo del servizio Web XML restituito `null`.  
  
 Se si utilizza .NET Framework versione 1.0 XML metodi del servizio Web che hanno il <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> o <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> attributo applicata ad essi con il <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> proprietà impostata su `true`, non hanno accesso a loro <xref:System.Web.HttpContext> tramite il statico <xref:System.Web.HttpContext.Current%2A> proprietà. Per l'accesso di <xref:System.Web.HttpContext>, derivare la classe che implementa il metodo del servizio Web XML da <xref:System.Web.Services.WebService> e accedere la <xref:System.Web.Services.WebService.Context%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente crea un servizio Web XML, che deriva da <xref:System.Web.Services.WebService>, per usare il <xref:System.Web.Services.WebService.Context%2A> proprietà per ottenere l'ora della richiesta nel server.  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Services.WebService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : System.Web.HttpApplicationState" Usage="System.Web.Services.WebService.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("The ASP.NET application object for the current request.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto applicazione per la richiesta HTTP corrente.</summary>
        <value>Oggetto <see cref="T:System.Web.HttpApplicationState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Servizi Web XML è possono utilizzare sia lo stato dell'applicazione e lo stato della sessione. In tutte le sessioni di accesso a un servizio Web XML indipendentemente dal fatto lo stato della sessione è stato disattivato per un metodo viene mantenuto lo stato dell'applicazione (usando il <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> proprietà del <xref:System.Web.Services.WebMethodAttribute>).  
  
   
  
## Examples  
 Nell'esempio seguente viene illustrato un contatore, si incrementa il conteggio ogni volta che un browser chiama il metodo di servizio Web XML.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpApplicationState" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.Services.WebService.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene il <see cref="T:System.Web.HttpContext" /> ASP.NET per la richiesta corrente, che incapsula tutto il contesto HTTP specifico utilizzato dal server HTTP per elaborare le richieste Web.</summary>
        <value>Il <see cref="T:System.Web.HttpContext" /> ASP.NET per la richiesta corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I metodi del servizio Web XML con il <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> o <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> attributo applicata ad essi con il <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> proprietà impostata su `true`, non hanno accesso a loro <xref:System.Web.HttpContext> mediante il <xref:System.Web.HttpContext.Current%2A> proprietà. Per l'accesso di <xref:System.Web.HttpContext>, derivare la classe che implementa il metodo del servizio Web XML da <xref:System.Web.Services.WebService> e accedere la <xref:System.Web.Services.WebService.Context%2A> proprietà.  
  
   
  
## Examples  
 Nell'esempio seguente viene utilizzato il <xref:System.Web.Services.WebService.Context%2A> proprietà per ottenere l'ora della richiesta nel server.  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <paramref name="Context" /> è <see langword="null" />.</exception>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Web.HttpServerUtility" Usage="System.Web.Services.WebService.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="T:System.Web.HttpServerUtility" /> per la richiesta corrente.</summary>
        <value>Oggetto <see cref="T:System.Web.HttpServerUtility" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il <xref:System.Web.HttpServerUtility> classe fornisce numerosi metodi che possono essere usati nell'elaborazione delle richieste Web, tra cui <xref:System.Web.HttpServerUtility.CreateObject%2A> (per la creazione di istanze di oggetti COM).  
  
   
  
## Examples  
 Nell'esempio seguente restituisce il nome del computer del server Web utilizzando il <xref:System.Web.Services.WebService.Server%2A> proprietà.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpServerUtility" />
        <altmember cref="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Session : System.Web.SessionState.HttpSessionState" Usage="System.Web.Services.WebService.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'istanza <see cref="T:System.Web.SessionState.HttpSessionState" /> per la richiesta corrente.</summary>
        <value>Istanza <see cref="T:System.Web.SessionState.HttpSessionState" /> che rappresenta l'oggetto dello stato sessione ASP.NET per la sessione corrente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Nell'esempio seguente lo stato della sessione viene utilizzato per determinare quante volte una determinata sessione accede al metodo di servizio Web XML `SessionHitCounter`. In questo esempio, il <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> proprietà del <xref:System.Web.Services.WebMethodAttribute> è impostata su `true` per ottenere l'accesso allo stato sessione.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.SessionState.HttpSessionState" />
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion" Usage="System.Web.Services.WebService.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene la versione del protocollo SOAP utilizzata per effettuare la richiesta SOAP al servizio Web XML.</summary>
        <value>Uno dei valori di <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />. Il valore predefinito è <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se il protocollo SOAP non è stato utilizzato per comunicare con il servizio Web XML, ad esempio HTTP-GET o HTTP-POST, il valore della <xref:System.Web.Services.WebService.SoapVersion%2A> proprietà <xref:System.Web.Services.Protocols.SoapProtocolVersion.Default>.  
  
 Per i servizi Web XML che non derivano dal <xref:System.Web.Services.WebService> classe, la versione del protocollo SOAP utilizzata per eseguire la richiesta SOAP per il Web XML può essere inoltre accedere al servizio utilizzando la voce "WebServiceSoapVersion" del <xref:System.Web.HttpContext.Items%2A?displayProperty=nameWithType> proprietà. Tale voce è di tipo <xref:System.Web.Services.Protocols.SoapProtocolVersion>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal" Usage="System.Web.Services.WebService.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ottiene l'oggetto <see cref="P:System.Web.HttpContext.User" /> del server ASP.NET. Può essere utilizzato per verificare se un utente è autorizzato a eseguire la richiesta.</summary>
        <value>
          <see cref="T:System.Security.Principal.IPrincipal" /> che rappresenta l'oggetto server ASP.NET <see cref="P:System.Web.HttpContext.User" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Internet Information Services (IIS) sia .NET Framework devono essere configurate per l'autenticazione per consentire il <xref:System.Web.Services.WebService.User%2A> proprietà sia significativa. L'autenticazione è il processo di accettazione delle credenziali di un utente e la convalida di tali credenziali rispetto a un'autorità specificata. Se le credenziali siano valide, è necessario un'identità autenticata. L'inserimento di voci nel file Web. config è configurata l'autenticazione in .NET Framework.  
  
 L'esempio seguente illustra le voci inserite nel file Web. config per abilitare l'autenticazione di Windows.  
  
```  
<security>  
 <authentication mode="Windows"> <!-- Mode Options are Windows, Cookie, Passport and None or Empty String -->  
 </authentication>  
 </security>  
```  
  
 Per ulteriori informazioni su come configurare la protezione per un servizio Web XML, vedere [ &#91; \<topic://cpconSecuringASPNETWebServices >&#93;](http://msdn.microsoft.com/library/354b2ab1-2782-4542-b32a-dc560178b90c).  
  
   
  
## Examples  
 Nell'esempio seguente esegue una ricerca il nome utente autenticato e restituisce tale nome.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
      </Docs>
    </Member>
  </Members>
</Type>