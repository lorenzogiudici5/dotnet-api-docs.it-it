<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ReadOnlyCollection`1.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c3312e093dae107ebd5c515a35f814a44fbef6e2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c3312e093dae107ebd5c515a35f814a44fbef6e2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>The type of elements in the collection.</source>
          <target state="translated">Tipo di elementi contenuti nella raccolta.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>Provides the base class for a generic read-only collection.</source>
          <target state="translated">Fornisce la classe base per una raccolta generica di sola lettura.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>An instance of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> generic class is always read-only.</source>
          <target state="translated">Un'istanza di <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> classe generica è sempre di sola lettura.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Una raccolta di sola lettura è semplicemente una raccolta con un wrapper che impedisce la modifica. Pertanto, se vengono apportate modifiche alla raccolta sottostante, la raccolta di sola lettura riflette le modifiche.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>See <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> for a modifiable version of this class.</source>
          <target state="translated">Vedere <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> per una versione modificabile di questa classe.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>The following code example demonstrates several members of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente illustra i diversi membri del <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>The code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings and adds four dinosaur names to it.</source>
          <target state="translated">Nell'esempio di codice viene creato un <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> di stringhe e vengono aggiunte quattro dinosauro a esso.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>The code example then wraps the list in a <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</source>
          <target state="translated">L'esempio di codice viene quindi eseguito il wrapping l'elenco in un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>After demonstrating the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A&gt;</ph> members, the code example shows that the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> is just a wrapper for the original <ph id="ph6">&lt;xref:System.Collections.Generic.List%601&gt;</ph> by adding a new item to the <ph id="ph7">&lt;xref:System.Collections.Generic.List%601&gt;</ph> and displaying the contents of the <ph id="ph8">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</source>
          <target state="translated">Dopo aver illustrato i <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A&gt;</ph> membri, nell'esempio di codice viene illustrato che il <ph id="ph5">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> è un wrapper originale <ph id="ph6">&lt;xref:System.Collections.Generic.List%601&gt;</ph> aggiungendo un nuovo elemento il <ph id="ph7">&lt;xref:System.Collections.Generic.List%601&gt;</ph> e visualizzazione del contenuto del <ph id="ph8">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>Finally, the code example creates an array larger than the collection and uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A&gt;</ph> method to insert the elements of the collection into the middle of the array.</source>
          <target state="translated">Infine, l'esempio di codice crea una matrice più grande dell'insieme e Usa il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A&gt;</ph> per inserire gli elementi della raccolta nella parte centrale della matrice.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Statici pubblici (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) di questo tipo sono thread-safe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">I membri di istanza non sono garantiti come thread-safe.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> può supportare più lettori contemporaneamente, fino a quando non è possibile modificare la raccolta.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Anche in questo caso, l'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>This base class is provided to make it easier for implementers to create a generic read-only custom collection.</source>
          <target state="translated">Questa classe di base viene fornita per semplificare agli implementatori di creare una raccolta personalizzata in sola lettura generica.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
          <source>Implementers are encouraged to extend this base class instead of creating their own.</source>
          <target state="translated">Gli sviluppatori sono invitati a estendere la classe base anziché crearne di proprie.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>The list to wrap.</source>
          <target state="translated">Elenco di cui eseguire il wrapping.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> class that is a read-only wrapper around the specified list.</source>
          <target state="translated">Consente di inizializzare una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> come wrapper in sola lettura per l'elenco specificato.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>To prevent any modifications to <ph id="ph1">`list`</ph>, expose <ph id="ph2">`list`</ph> only through this wrapper.</source>
          <target state="translated">Per evitare che venga <ph id="ph1">`list`</ph>, esporre <ph id="ph2">`list`</ph> solo tramite il wrapper.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Una raccolta di sola lettura è semplicemente una raccolta con un wrapper che impedisce la modifica. Pertanto, se vengono apportate modifiche alla raccolta sottostante, la raccolta di sola lettura riflette le modifiche.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Questo costruttore è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>The following code example demonstrates this constructor and several members of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente viene illustrato questo costruttore e diversi membri della <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>The code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings and adds four dinosaur names to it.</source>
          <target state="translated">Nell'esempio di codice viene creato un <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> di stringhe e vengono aggiunte quattro dinosauro a esso.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>The code example then wraps the list in a <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> by passing it to the constructor.</source>
          <target state="translated">L'esempio di codice viene quindi eseguito il wrapping l'elenco in un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> passandolo al costruttore.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>After demonstrating the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A&gt;</ph> members, the code example shows that the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> is just a wrapper for the original <ph id="ph6">&lt;xref:System.Collections.Generic.List%601&gt;</ph> by adding a new item to the <ph id="ph7">&lt;xref:System.Collections.Generic.List%601&gt;</ph> and displaying the contents of the <ph id="ph8">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</source>
          <target state="translated">Dopo aver illustrato i <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A&gt;</ph> membri, nell'esempio di codice viene illustrato che il <ph id="ph5">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> è un wrapper originale <ph id="ph6">&lt;xref:System.Collections.Generic.List%601&gt;</ph> aggiungendo un nuovo elemento il <ph id="ph7">&lt;xref:System.Collections.Generic.List%601&gt;</ph> e visualizzazione del contenuto del <ph id="ph8">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>Finally, the code example creates an array larger than the collection and uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A&gt;</ph> method to insert the elements of the collection into the middle of the array.</source>
          <target state="translated">Infine, l'esempio di codice crea una matrice più grande dell'insieme e Usa il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A&gt;</ph> per inserire gli elementi della raccolta nella parte centrale della matrice.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source><ph id="ph1">&lt;paramref name="list" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="list" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">Oggetto da individuare nella raccolta <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Il valore può essere <ph id="ph1">&lt;see langword="null" /&gt;</ph> per i tipi di riferimento.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
          <source>Determines whether an element is in the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">Determina se un elemento è incluso in <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="value" /&gt;</ph> è presente in <ph id="ph3">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Questo metodo determina l'uguaglianza utilizzando l'operatore di confronto di uguaglianza predefinito <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
          <source>The following code example demonstrates several members of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente illustra i diversi membri del <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
          <source>The code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings and adds four dinosaur names to it.</source>
          <target state="translated">Nell'esempio di codice viene creato un <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> di stringhe e vengono aggiunte quattro dinosauro a esso.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
          <source>The code example then wraps the list in a <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</source>
          <target state="translated">L'esempio di codice viene quindi eseguito il wrapping l'elenco in un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
          <source>After demonstrating the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A&gt;</ph> members, the code example shows that the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> is just a wrapper for the original <ph id="ph6">&lt;xref:System.Collections.Generic.List%601&gt;</ph> by adding a new item to the <ph id="ph7">&lt;xref:System.Collections.Generic.List%601&gt;</ph> and displaying the contents of the <ph id="ph8">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</source>
          <target state="translated">Dopo aver illustrato i <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A&gt;</ph> membri, nell'esempio di codice viene illustrato che il <ph id="ph5">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> è un wrapper originale <ph id="ph6">&lt;xref:System.Collections.Generic.List%601&gt;</ph> aggiungendo un nuovo elemento il <ph id="ph7">&lt;xref:System.Collections.Generic.List%601&gt;</ph> e visualizzazione del contenuto del <ph id="ph8">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
          <source>Finally, the code example creates an array larger than the collection and uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A&gt;</ph> method to insert the elements of the collection into the middle of the array.</source>
          <target state="translated">Infine, l'esempio di codice crea una matrice più grande dell'insieme e Usa il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A&gt;</ph> per inserire gli elementi della raccolta nella parte centrale della matrice.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">L'indicizzazione di <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> deve essere in base zero.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Indice in base zero in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> in corrispondenza del quale ha inizio la copia.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated">Copia l'intero oggetto <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> in un oggetto <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">Questo metodo utilizza <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> per copiare gli elementi.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order that the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</source>
          <target state="translated">Gli elementi vengono copiati il <ph id="ph1">&lt;xref:System.Array&gt;</ph> nello stesso ordine in cui l'enumeratore scorre la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
          <source>The following code example demonstrates several members of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente illustra i diversi membri del <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
          <source>The code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings and adds four dinosaur names to it.</source>
          <target state="translated">Nell'esempio di codice viene creato un <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> di stringhe e vengono aggiunte quattro dinosauro a esso.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
          <source>The code example then wraps the list in a <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</source>
          <target state="translated">L'esempio di codice viene quindi eseguito il wrapping l'elenco in un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
          <source>After demonstrating the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A&gt;</ph> members, the code example shows that the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> is just a wrapper for the original <ph id="ph6">&lt;xref:System.Collections.Generic.List%601&gt;</ph> by adding a new item to the <ph id="ph7">&lt;xref:System.Collections.Generic.List%601&gt;</ph> and displaying the contents of the <ph id="ph8">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</source>
          <target state="translated">Dopo aver illustrato i <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A&gt;</ph> membri, nell'esempio di codice viene illustrato che il <ph id="ph5">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> è un wrapper originale <ph id="ph6">&lt;xref:System.Collections.Generic.List%601&gt;</ph> aggiungendo un nuovo elemento il <ph id="ph7">&lt;xref:System.Collections.Generic.List%601&gt;</ph> e visualizzazione del contenuto del <ph id="ph8">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
          <source>Finally, the code example creates an array larger than the collection and uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A&gt;</ph> method to insert the elements of the collection into the middle of the array.</source>
          <target state="translated">Infine, l'esempio di codice crea una matrice più grande dell'insieme e Usa il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A&gt;</ph> per inserire gli elementi della raccolta nella parte centrale della matrice.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Il numero di elementi nell'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> di origine è maggiore dello spazio disponibile tra <ph id="ph2">&lt;paramref name="index" /&gt;</ph> e la fine dell'oggetto <ph id="ph3">&lt;paramref name="array" /&gt;</ph> di destinazione.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">Ottiene il numero di elementi contenuti nell'istanza di <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">Numero di elementi contenuti nell'istanza di <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count">
          <source>The following code example demonstrates several members of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente illustra i diversi membri del <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count">
          <source>The code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings and adds four dinosaur names to it.</source>
          <target state="translated">Nell'esempio di codice viene creato un <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> di stringhe e vengono aggiunte quattro dinosauro a esso.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count">
          <source>The code example then wraps the list in a <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</source>
          <target state="translated">L'esempio di codice viene quindi eseguito il wrapping l'elenco in un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count">
          <source>After demonstrating the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A&gt;</ph> members, the code example shows that the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> is just a wrapper for the original <ph id="ph6">&lt;xref:System.Collections.Generic.List%601&gt;</ph> by adding a new item to the <ph id="ph7">&lt;xref:System.Collections.Generic.List%601&gt;</ph> and displaying the contents of the <ph id="ph8">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</source>
          <target state="translated">Dopo aver illustrato i <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A&gt;</ph> membri, nell'esempio di codice viene illustrato che il <ph id="ph5">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> è un wrapper originale <ph id="ph6">&lt;xref:System.Collections.Generic.List%601&gt;</ph> aggiungendo un nuovo elemento il <ph id="ph7">&lt;xref:System.Collections.Generic.List%601&gt;</ph> e visualizzazione del contenuto del <ph id="ph8">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count">
          <source>Finally, the code example creates an array larger than the collection and uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A&gt;</ph> method to insert the elements of the collection into the middle of the array.</source>
          <target state="translated">Infine, l'esempio di codice crea una matrice più grande dell'insieme e Usa il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A&gt;</ph> per inserire gli elementi della raccolta nella parte centrale della matrice.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">Restituisce un enumeratore che esegue l'iterazione di <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> per l'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Il <ph id="ph1">`foreach`</ph> istruzione del linguaggio c# (<ph id="ph2">`for each`</ph> in Visual C++, <ph id="ph3">`For Each`</ph> in Visual Basic) nasconde la complessità degli enumeratori.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Pertanto, si consiglia l'utilizzo di <ph id="ph1">`foreach`</ph>, anziché la modifica diretta dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">In questa posizione, la proprietà <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> è indefinita.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</source>
          <target state="translated">Pertanto, è necessario chiamare il metodo <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated">La proprietà <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> restituisce lo stesso oggetto finché non viene chiamato il metodo <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> imposta <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> sull'elemento successivo.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituisce <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituire anche <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Se l'ultima chiamata a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituito <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> è definito.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">Non è possibile impostare nuovamente la proprietà <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> sul primo elemento della raccolta; è necessario creare una nuova istanza di enumeratore.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">In caso di modifiche alla raccolta, ad esempio aggiunta, modifica o eliminazione di elementi, l'enumeratore sarà reso non valido in modo irreversibile e il comportamento corrispondente non sarà definito.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Le implementazioni predefinite di raccolte in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> non sono sincronizzate.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>The following code example uses the enumerator to display the contents of a <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> that wraps a <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">Esempio di codice seguente utilizza l'enumeratore per visualizzare il contenuto di un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> che esegue il wrapping di un <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
          <source>The enumerator is concealed by the <ph id="ph1">`foreach`</ph> statement (<ph id="ph2">`For Each`</ph> in Visual Basic, <ph id="ph3">`for each`</ph> in C++).</source>
          <target state="translated">L'enumeratore è nascosto per il <ph id="ph1">`foreach`</ph> istruzione (<ph id="ph2">`For Each`</ph> in Visual Basic <ph id="ph3">`for each`</ph> in C++).</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">Oggetto da individuare nella raccolta <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Il valore può essere <ph id="ph1">&lt;see langword="null" /&gt;</ph> per i tipi di riferimento.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the entire <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">Cerca l'oggetto specificato e restituisce l'indice in base zero della prima occorrenza nell'intero oggetto <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the entire <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>, if found; otherwise, -1.</source>
          <target state="translated">Indice in base zero della prima occorrenza di <ph id="ph1">&lt;paramref name="item" /&gt;</ph> all'interno dell'intero oggetto <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>, se presente; in caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> is searched forward starting at the first element and ending at the last element.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> avanti al primo elemento fino all'ultimo elemento, viene eseguita la ricerca.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)">
          <source>This method determines equality using the default comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Questo metodo determina l'uguaglianza utilizzando l'operatore di confronto <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
          <source>The zero-based index of the element to get.</source>
          <target state="translated">Indice in base zero dell'elemento da ottenere.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
          <source>Gets the element at the specified index.</source>
          <target state="translated">Ottiene l'elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">Elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following C# syntax: <ph id="ph1">`myCollection[index]`</ph> (<ph id="ph2">`myCollection(index)`</ph> in Visual Basic).</source>
          <target state="translated">Questa proprietà consente di accedere a un elemento specifico nella raccolta utilizzando la sintassi c# seguente: <ph id="ph1">`myCollection[index]`</ph> (<ph id="ph2">`myCollection(index)`</ph> in Visual Basic).</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph> property.</source>
          <target state="translated">Nel linguaggio c# viene utilizzata la parola chiave per definire gli indicizzatori anziché implementare la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">In Visual Basic la proprietà <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph> viene implementata come predefinita per fornire la stessa funzionalità di indicizzazione.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
          <source>The following code example demonstrates several members of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente illustra i diversi membri del <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
          <source>The code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings and adds four dinosaur names to it.</source>
          <target state="translated">Nell'esempio di codice viene creato un <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> di stringhe e vengono aggiunte quattro dinosauro a esso.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
          <source>The code example then wraps the list in a <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</source>
          <target state="translated">L'esempio di codice viene quindi eseguito il wrapping l'elenco in un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
          <source>After demonstrating the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A&gt;</ph> members, the code example shows that the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> is just a wrapper for the original <ph id="ph6">&lt;xref:System.Collections.Generic.List%601&gt;</ph> by adding a new item to the <ph id="ph7">&lt;xref:System.Collections.Generic.List%601&gt;</ph> and displaying the contents of the <ph id="ph8">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</source>
          <target state="translated">Dopo aver illustrato i <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A&gt;</ph> membri, nell'esempio di codice viene illustrato che il <ph id="ph5">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> è un wrapper originale <ph id="ph6">&lt;xref:System.Collections.Generic.List%601&gt;</ph> aggiungendo un nuovo elemento il <ph id="ph7">&lt;xref:System.Collections.Generic.List%601&gt;</ph> e visualizzazione del contenuto del <ph id="ph8">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
          <source>Finally, the code example creates an array larger than the collection and uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A&gt;</ph> method to insert the elements of the collection into the middle of the array.</source>
          <target state="translated">Infine, l'esempio di codice crea una matrice più grande dell'insieme e Usa il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A&gt;</ph> per inserire gli elementi della raccolta nella parte centrale della matrice.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è uguale a o maggiore di <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> wraps.</source>
          <target state="translated">Restituisce l'interfaccia <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> inclusa nell'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> wraps.</source>
          <target state="translated">Interfaccia <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> inclusa nell'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items">
          <source>The following code example demonstrates several members of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> class.</source>
          <target state="translated">Esempio di codice seguente illustra i diversi membri del <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items">
          <source>The code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of strings and adds four dinosaur names to it.</source>
          <target state="translated">Nell'esempio di codice viene creato un <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> di stringhe e vengono aggiunte quattro dinosauro a esso.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items">
          <source>The code example then wraps the list in a <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</source>
          <target state="translated">L'esempio di codice viene quindi eseguito il wrapping l'elenco in un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items">
          <source>After demonstrating the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A&gt;</ph> members, the code example shows that the <ph id="ph5">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> is just a wrapper for the original <ph id="ph6">&lt;xref:System.Collections.Generic.List%601&gt;</ph> by adding a new item to the <ph id="ph7">&lt;xref:System.Collections.Generic.List%601&gt;</ph> and displaying the contents of the <ph id="ph8">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</source>
          <target state="translated">Dopo aver illustrato i <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A&gt;</ph> membri, nell'esempio di codice viene illustrato che il <ph id="ph5">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> è un wrapper originale <ph id="ph6">&lt;xref:System.Collections.Generic.List%601&gt;</ph> aggiungendo un nuovo elemento il <ph id="ph7">&lt;xref:System.Collections.Generic.List%601&gt;</ph> e visualizzazione del contenuto del <ph id="ph8">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items">
          <source>Finally, the code example creates an array larger than the collection and uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A&gt;</ph> method to insert the elements of the collection into the middle of the array.</source>
          <target state="translated">Infine, l'esempio di codice crea una matrice più grande dell'insieme e Usa il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A&gt;</ph> per inserire gli elementi della raccolta nella parte centrale della matrice.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items">
          <source>This property is provided to allow direct access to members of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> hides.</source>
          <target state="translated">Questa proprietà viene fornita per consentire l'accesso diretto ai membri del <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> che il <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> nasconde.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The object to add to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">Oggetto da aggiungere all'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>Adds an item to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">Aggiunge un elemento a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>This implementation always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>Always thrown.</source>
          <target state="translated">Sempre generato.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>Removes all items from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">Rimuove tutti gli elementi da <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>This implementation always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>Always thrown.</source>
          <target state="translated">Sempre generato.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated">Ottiene un valore che indica se <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> è di sola lettura.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> è di sola lettura; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Nell'implementazione predefinita di <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>, questa proprietà restituisce sempre <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Una raccolta di sola lettura non consente l'aggiunta, la rimozione o la modifica di elementi dopo la sua creazione.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Una raccolta di sola lettura è semplicemente una raccolta con un wrapper che impedisce la modifica. Pertanto, se vengono apportate modifiche alla raccolta sottostante, la raccolta di sola lettura riflette le modifiche.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>The object to remove from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">Oggetto da rimuovere da <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">Rimuove la prima occorrenza di un oggetto specifico da <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>This implementation always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> was successfully removed from the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="value" /&gt;</ph> è stato rimosso correttamente da <ph id="ph3">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>Always thrown.</source>
          <target state="translated">Sempre generato.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Indice in base zero in corrispondenza del quale deve essere inserito <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>The object to insert into the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph>.</source>
          <target state="translated">Oggetto da inserire in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>Inserts an item to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> at the specified index.</source>
          <target state="translated">Inserisce un elemento in <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>This implementation always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>Always thrown.</source>
          <target state="translated">Sempre generato.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The zero-based index of the element to get.</source>
          <target state="translated">Indice in base zero dell'elemento da ottenere.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>Gets the element at the specified index.</source>
          <target state="translated">Ottiene l'elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> occurs if you try to set the item at the specified index.</source>
          <target state="translated">Si verifica un'eccezione <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> se si tenta di impostare l'elemento nell'indice specificato.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">Elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>Because the collection is read-only, you can only get this item at the specified index.</source>
          <target state="translated">Poiché la raccolta è di sola lettura, è possibile ottenere solo l'elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>An exception will occur if you try to set the item.</source>
          <target state="translated">Se si tenta di impostare l'elemento, si verificherà un'eccezione.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>Always thrown if the property is set.</source>
          <target state="translated">Generata sempre, se la proprietà è impostata.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>The zero-based index of the item to remove.</source>
          <target state="translated">Indice in base zero dell'elemento da rimuovere.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> item at the specified index.</source>
          <target state="translated">Rimuove l'elemento <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>This implementation always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>Always thrown.</source>
          <target state="translated">Sempre generato.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">L'indicizzazione di <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> deve essere in base zero.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Indice in base zero in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> in corrispondenza del quale ha inizio la copia.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">Copia gli elementi di <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> in <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> a partire da un particolare indice <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>If the type of the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">`array`</ph>, the non-generic implementations of <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Se il tipo di origine <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> non può essere eseguire automaticamente il cast al tipo della destinazione <ph id="ph2">`array`</ph>, le implementazioni non generica di <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> generare <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, mentre le implementazioni generiche generano <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> è <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> è minore di zero.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> è multidimensionale.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> non dispone di indicizzazione in base zero.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Il numero di elementi nell'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> di origine è maggiore dello spazio disponibile tra <ph id="ph2">&lt;paramref name="index" /&gt;</ph> e la fine dell'oggetto <ph id="ph3">&lt;paramref name="array" /&gt;</ph> di destinazione.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">oppure</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Non è possibile eseguire il cast automatico del tipo dell'oggetto <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> di origine al tipo dell'oggetto <ph id="ph2">&lt;paramref name="array" /&gt;</ph> di destinazione.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Ottiene un valore che indica se l'accesso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> è sincronizzato (thread-safe).</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'accesso a <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> è sincronizzato (thread-safe); in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Nell'implementazione predefinita di <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>, questa proprietà restituisce sempre <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Le implementazioni predefinite di raccolte in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> non sono sincronizzate.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> Restituisce un oggetto che può essere utilizzato per sincronizzare l'accesso al <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Oggetto che può essere usato per sincronizzare l'accesso a <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>, this property always returns the current instance.</source>
          <target state="translated">Nell'implementazione predefinita di <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>, questa proprietà restituisce sempre l'istanza corrente.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Le implementazioni predefinite di raccolte in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> non sono sincronizzate.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumerazione di una raccolta non è di per sé una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> Restituisce un oggetto che può essere utilizzato per sincronizzare l'accesso al <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">La sincronizzazione è efficace solo se tutti i thread bloccano questo oggetto prima di accedere alla raccolta.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property for C#, Visual C++, and Visual Basic.</source>
          <target state="translated">Il codice seguente viene illustrato come utilizzare il <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> proprietà per c#, Visual C++ e Visual Basic.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> che può essere usato per eseguire l'iterazione della raccolta.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Il <ph id="ph1">`foreach`</ph> istruzione del linguaggio c# (<ph id="ph2">`for each`</ph> in Visual C++, <ph id="ph3">`For Each`</ph> in Visual Basic) nasconde la complessità degli enumeratori.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Pertanto, si consiglia l'utilizzo di <ph id="ph1">`foreach`</ph>, anziché la modifica diretta dell'enumeratore.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non per modificare la raccolta sottostante.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inizialmente l'enumeratore è posizionato davanti al primo elemento della raccolta.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated">Anche il metodo <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> riporta l'enumeratore in questa posizione.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">In questa posizione, la proprietà <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> è indefinita.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Pertanto, è necessario chiamare il metodo <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> per spostare in avanti l'enumeratore, in corrispondenza del primo elemento della raccolta, prima di leggere il valore di <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> restituisce lo stesso oggetto finché non viene chiamato il metodo <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> o <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> imposta <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> sull'elemento successivo.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> raggiunge la fine della raccolta, l'enumeratore è posizionato dopo l'ultimo elemento nella raccolta e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituisce <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando l'enumeratore si trova in questa posizione, le chiamate successive a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituire anche <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Se l'ultima chiamata a <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> restituito <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> è definito.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Per impostare nuovamente la proprietà <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> sul primo elemento della raccolta, è possibile chiamare il metodo <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> seguito da <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un enumeratore rimane valido fino a quando la raccolta non subisce modifiche.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">In caso di modifiche alla raccolta, ad esempio aggiunta, modifica o eliminazione di elementi, l'enumeratore sarà reso non valido in modo irreversibile e il comportamento corrispondente non sarà definito.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L'enumeratore non dispone di accesso esclusivo alla raccolta. L'enumerazione di una raccolta non è quindi una procedura thread-safe.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Per assicurare la protezione del thread durante l'enumerazione, è possibile bloccare la raccolta durante l'intera enumerazione.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Per consentire l'accesso alla raccolta in lettura e scrittura da parte di più thread, è necessario implementare la propria sincronizzazione.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">Le implementazioni predefinite di raccolte in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> non sono sincronizzate.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Questo metodo è un'operazione o (1).</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to add to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> da aggiungere a <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
          <source>Adds an item to the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Aggiunge un elemento a <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
          <source>This implementation always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
          <source>The position into which the new element was inserted.</source>
          <target state="translated">Posizione in cui è stato inserito il nuovo elemento.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
          <source>Always thrown.</source>
          <target state="translated">Sempre generato.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear">
          <source>Removes all items from the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Rimuove tutti gli elementi da <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear">
          <source>This implementation always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear">
          <source>Always thrown.</source>
          <target state="translated">Sempre generato.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> da individuare in <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> contains a specific value.</source>
          <target state="translated">Stabilisce se <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> contiene un valore specifico.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.IList" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se l'oggetto <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> si trova in <ph id="ph3">&lt;see cref="T:System.Collections.IList" /&gt;</ph>; in caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
          <source>This method determines equality using the default comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Questo metodo determina l'uguaglianza utilizzando l'operatore di confronto <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un'implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not of the type specified for the generic type parameter <ph id="ph2">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">Il tipo del parametro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> non corrisponde a quello specificato per il parametro di tipo generico <ph id="ph2">&lt;paramref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> da individuare in <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>Determines the index of a specific item in the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Determina l'indice di un elemento specifico in <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>The index of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> if found in the list; otherwise, -1.</source>
          <target state="translated">Indice di <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, se presente nell'elenco; in caso contrario, -1.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>This method determines equality using the default comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Questo metodo determina l'uguaglianza utilizzando l'operatore di confronto <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un'operazione O (<ph id="ph1">`n`</ph>) operazione, in cui <ph id="ph2">`n`</ph> è <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un'implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not of the type specified for the generic type parameter <ph id="ph2">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">Il tipo del parametro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> non corrisponde a quello specificato per il parametro di tipo generico <ph id="ph2">&lt;paramref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Indice in base zero in corrispondenza del quale deve essere inserito <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to insert into the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> da inserire in <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>Inserts an item to the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> at the specified index.</source>
          <target state="translated">Inserisce un elemento in <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This implementation always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>Always thrown.</source>
          <target state="translated">Sempre generato.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Ottiene un valore che indica se <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> ha dimensioni fisse.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> è di dimensioni fisse; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Nell'implementazione predefinita di <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>, questa proprietà restituisce sempre <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">Una raccolta con dimensioni fisse non consente l'aggiunta o la rimozione di elementi dopo la sua creazione, ma consente la modifica degli elementi esistenti.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Una raccolta con una dimensione fissa è semplicemente una raccolta con un wrapper che impedisce l'aggiunta e rimozione di elementi. Pertanto, se vengono apportate modifiche alla raccolta sottostante, incluse l'aggiunta o la rimozione di elementi, la raccolta a dimensione fissa riflette le modifiche.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated">Ottiene un valore che indica se <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> è di sola lettura.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> è di sola lettura; in caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Nell'implementazione predefinita di <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>, questa proprietà restituisce sempre <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Una raccolta di sola lettura non consente l'aggiunta, la rimozione o la modifica di elementi dopo la sua creazione.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Una raccolta di sola lettura è semplicemente una raccolta con un wrapper che impedisce la modifica. Pertanto, se vengono apportate modifiche alla raccolta sottostante, la raccolta di sola lettura riflette le modifiche.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
          <source>The zero-based index of the element to get.</source>
          <target state="translated">Indice in base zero dell'elemento da ottenere.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
          <source>Gets the element at the specified index.</source>
          <target state="translated">Ottiene l'elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> occurs if you try to set the item at the specified index.</source>
          <target state="translated">Si verifica un'eccezione <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> se si tenta di impostare l'elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">Elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">Questa proprietà consente di accedere a un elemento specifico della raccolta utilizzando la sintassi seguente: <ph id="ph1">`myCollection[index]`</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
          <source>The C# language uses the <bpt id="p1">[</bpt>this<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A&gt;</ph> property.</source>
          <target state="translated">Nel linguaggio c# viene utilizzata la <bpt id="p1">[</bpt>questo<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> (parola chiave) per definire gli indicizzatori anziché implementare la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A&gt;</ph> proprietà.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">In Visual Basic la proprietà <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A&gt;</ph> viene implementata come predefinita per fornire la stessa funzionalità di indicizzazione.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Il recupero del valore di questa proprietà è un'operazione O(1).</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> non è un indice valido nell'interfaccia <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
          <source>Always thrown if the property is set.</source>
          <target state="translated">Generata sempre, se la proprietà è impostata.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to remove from the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> da rimuovere da <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Rimuove la prima occorrenza di un oggetto specifico da <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
          <source>This implementation always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
          <source>Always thrown.</source>
          <target state="translated">Sempre generato.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
          <source>The zero-based index of the item to remove.</source>
          <target state="translated">Indice in base zero dell'elemento da rimuovere.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> item at the specified index.</source>
          <target state="translated">Rimuove l'elemento <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
          <source>This implementation always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">Questa implementazione genera sempre <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Questo membro è un’implementazione esplicita di un membro di interfaccia.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Può essere utilizzato solo quando si esegue il cast dell'istanza <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> a un'interfaccia <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
          <source>Always thrown.</source>
          <target state="translated">Sempre generato.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>