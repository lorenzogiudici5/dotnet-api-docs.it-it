<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObservableCollection`1.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eaa22977009257753fbc64752753fc05cd2ab76d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eaa22977009257753fbc64752753fc05cd2ab76d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>The type of elements in the collection.</source>
          <target state="translated">Tipo di elementi contenuti nella raccolta.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed.</source>
          <target state="translated">Rappresenta una raccolta di dati dinamica che fornisce notifiche in caso di aggiunta o rimozione di elementi oppure quando viene aggiornato l'intero elenco.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>In many cases the data that you work with is a collection of objects.</source>
          <target state="translated">In molti casi i dati che si lavora con sono una raccolta di oggetti.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>For example, a common scenario in data binding is to use an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> such as a <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph> to display a collection of records.</source>
          <target state="translated">Ad esempio, uno scenario comune di associazione dati consiste nell'utilizzare un <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> , ad esempio un <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, o <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph> per visualizzare un insieme di record.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>You can enumerate over any collection that implements the <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">È possibile enumerare su qualsiasi raccolta che implementa il <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>However, to set up dynamic bindings so that insertions or deletions in the collection update the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> automatically, the collection must implement the <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interface.</source>
          <target state="translated">Tuttavia, per impostare associazioni dinamiche in modo che le operazioni di inserimento o eliminazione nella raccolta di <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> automaticamente, la raccolta deve implementare il <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>This interface exposes the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event, an event that should be raised whenever the underlying collection changes.</source>
          <target state="translated">Questa interfaccia espone il <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> evento, un evento che deve essere generato ogni volta che viene modificata la raccolta sottostante.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> provides the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> class, which is a built-in implementation of a data collection that implements the <ph id="ph3">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> fornisce la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> (classe), ovvero un'implementazione predefinita di una raccolta di dati che implementa il <ph id="ph3">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Before implementing your own collection, consider using <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> or one of the existing collection classes, such as <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, and <ph id="ph4">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph>, among many others.</source>
          <target state="translated">Prima di implementare una raccolta personalizzata, è consigliabile utilizzare <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> o una raccolta esistente classi, ad esempio <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, e <ph id="ph4">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph>, tra molti altri.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>If you have an advanced scenario and want to implement your own collection, consider using <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, which provides a non-generic collection of objects that can be individually accessed by index.</source>
          <target state="translated">Se si desidera implementare la propria raccolta di uno scenario avanzato, è consigliabile utilizzare <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, che fornisce una raccolta non generica di oggetti che è possibile accedere singolarmente tramite indice.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Implementing <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> provides the best performance with the data binding engine.</source>
          <target state="translated">Implementazione <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> offre le migliori prestazioni con il motore di associazione dati.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>To fully support transferring data values from binding source objects to binding targets, each object in your collection that supports bindable properties must implement an appropriate property changed notification mechanism such as the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface.</source>
          <target state="translated">Per supportare completamente il trasferimento dei valori dei dati da oggetti origine dell'associazione all'associazione di destinazioni, ogni oggetto nella raccolta che supporta proprietà associabili deve implementare un meccanismo di notifica di modifica delle proprietà appropriata, ad esempio il <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interfaccia.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>For more information, see "Binding to Collections" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere "Associazione agli insiemi" in <bpt id="p1">[</bpt>Panoramica del Data Binding<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Notes on XAML Usage</source>
          <target state="translated">Note sull'utilizzo XAML</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> can be used as a XAML object element in <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, in versions 3.0 and 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> può essere utilizzato come elemento oggetto XAML in <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, nelle versioni 3.0 e 3.5.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>However, the usage has substantial limitations.</source>
          <target state="translated">Tuttavia, l'utilizzo presenta limitazioni sostanziali.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> must be the root element, because the  that must be used to specify the constrained type of the generic <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> is only supported on the object element for the root element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> deve essere l'elemento radice, poiché l'oggetto che dovrà essere utilizzato per specificare il tipo dell'eccezione generica vincolato <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> è supportato solo l'elemento oggetto per l'elemento radice.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>You must declare an  (which entails that the build action for this XAML file must be <ph id="ph1">`Page`</ph> or some other build action that compiles the XAML).</source>
          <target state="translated">È necessario dichiarare un (quali comporta che l'azione di compilazione per questo file XAML deve essere <ph id="ph1">`Page`</ph> o un'altra operazione che viene compilato il codice XAML di compilazione).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> is in a namespace and assembly that are not initially mapped to the default XML namespace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> è in un spazio dei nomi e assembly che non sono inizialmente mappati allo spazio dei nomi XML predefinito.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>You must map a prefix for the namespace and assembly, and then use that prefix on the object element tag for <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>.</source>
          <target state="translated">È necessario eseguire il mapping di un prefisso per lo spazio dei nomi e assembly e quindi utilizzare tale prefisso sul tag di elemento dell'oggetto per <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>A more straightforward way to use <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> capabilities from XAML in an application is to declare your own non-generic custom collection class that derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>, and constrains it to a specific type.</source>
          <target state="translated">Un modo più semplice per utilizzare <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> funzionalità di XAML in un'applicazione consiste nel dichiarare la propria classe di raccolta personalizzato non generica che deriva da <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>, e limita a un tipo specifico.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Then map the assembly that contains this class, and reference it as an object element in your XAML.</source>
          <target state="translated">Eseguire il mapping dell'assembly che contiene la classe, quindi farvi riferimento come elemento oggetto in XAML.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection from which the elements are copied.</source>
          <target state="translated">Raccolta da cui vengono copiati gli elementi.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class that contains elements copied from the specified collection.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> che contiene gli elementi copiati dalla raccolta specificata.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> in the same order they are read by the enumerator of the collection.</source>
          <target state="translated">Gli elementi vengono copiati il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> nello stesso ordine in cui vengono letti dall'enumeratore della raccolta.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> non può essere <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>The list from which the elements are copied.</source>
          <target state="translated">Elenco da cui vengono copiati gli elementi.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class that contains elements copied from the specified list.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> che contiene gli elementi copiati dall'elenco specificato.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> in the same order they are read by the enumerator of the list.</source>
          <target state="translated">Gli elementi vengono copiati il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> nello stesso ordine in cui vengono letti dall'enumeratore dell'elenco.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>The <ph id="ph1">&lt;paramref name="list" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Il parametro <ph id="ph1">&lt;paramref name="list" /&gt;</ph> non può essere <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
          <source>Disallows reentrant attempts to change this collection.</source>
          <target state="translated">Non consente tentativi di routine rientranti per modificare la raccolta.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
          <source>An <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> object that can be used to dispose of the object.</source>
          <target state="translated">Oggetto <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> che può essere usato per eliminare l'oggetto.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
          <source>The typical usage is to wrap an <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.OnCollectionChanged%2A&gt;</ph> call within a <ph id="ph2">`using`</ph> scope, as in the following example:</source>
          <target state="translated">L'utilizzo tipico consiste nell'eseguire il wrapping di un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.OnCollectionChanged%2A&gt;</ph> chiamare all'interno di un <ph id="ph2">`using`</ph> ambito, come nell'esempio seguente:</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>Checks for reentrant attempts to change this collection.</source>
          <target state="translated">Cerca i tentativi di routine rientranti per modificare la raccolta.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>If there was a call to <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph> of which the <ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph> return value has not yet been disposed of.</source>
          <target state="translated">Se è stata effettuata una chiamata a <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph> di cui non è ancora stato eliminato il valore restituito <ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>Typically, this means when there are additional attempts to change this collection during a <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph> event.</source>
          <target state="translated">In genere, questo indica quando vengono eseguiti altri tentativi di modificare la raccolta durante un evento <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>However, it depends on when derived classes choose to call <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph>.</source>
          <target state="translated">Dipende tuttavia da quando le classi derivate scelgono di chiamare <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>Removes all items from the collection.</source>
          <target state="translated">Rimuove tutti gli elementi dalla raccolta.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>The base class calls this method when the list is being cleared.</source>
          <target state="translated">La classe di base chiama questo metodo quando l'elenco viene cancellato.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">Questa implementazione genera il <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">Per ulteriori informazioni, vedere il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph> metodo la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe di base.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged">
          <source>Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.</source>
          <target state="translated">Si verifica quando un elemento viene aggiunto, rimosso, modificato o spostato oppure quando viene aggiornato l'intero elenco.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Indice in base zero in corrispondenza del quale deve essere inserito <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>The object to insert.</source>
          <target state="translated">Oggetto da inserire.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>Inserts an item into the collection at the specified index.</source>
          <target state="translated">Inserisce un elemento nella raccolta in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>The base class calls this method when an item is added to the collection.</source>
          <target state="translated">La classe di base chiama questo metodo quando un elemento viene aggiunto alla raccolta.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">Questa implementazione genera il <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.InsertItem%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">Per ulteriori informazioni, vedere il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.InsertItem%2A&gt;</ph> metodo la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe di base.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>The zero-based index specifying the location of the item to be moved.</source>
          <target state="translated">Indice in base zero che specifica la posizione dell'elemento da spostare.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>The zero-based index specifying the new location of the item.</source>
          <target state="translated">Indice in base zero che specifica la nuova posizione dell'elemento.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>Moves the item at the specified index to a new location in the collection.</source>
          <target state="translated">Sposta l'elemento in corrispondenza dell'indice specificato in una nuova posizione nella raccolta.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>Subclasses can override the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.MoveItem%2A&gt;</ph> method to provide custom behavior for this method.</source>
          <target state="translated">Le sottoclassi possono eseguire l'override di <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.MoveItem%2A&gt;</ph> metodo per fornire un comportamento personalizzato per questo metodo.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>The zero-based index specifying the location of the item to be moved.</source>
          <target state="translated">Indice in base zero che specifica la posizione dell'elemento da spostare.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>The zero-based index specifying the new location of the item.</source>
          <target state="translated">Indice in base zero che specifica la nuova posizione dell'elemento.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>Moves the item at the specified index to a new location in the collection.</source>
          <target state="translated">Sposta l'elemento in corrispondenza dell'indice specificato in una nuova posizione nella raccolta.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">Questa implementazione genera il <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>Subclasses can override this protected method to provide custom behavior for the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.Move%2A&gt;</ph> method.</source>
          <target state="translated">Le sottoclassi possono eseguire l'override di questo metodo protetto per fornire un comportamento personalizzato per il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.Move%2A&gt;</ph> metodo.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>Arguments of the event being raised.</source>
          <target state="translated">Argomenti dell'evento da generare.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph> event with the provided arguments.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph> con gli argomenti forniti.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>Properties and methods that modify this collection raise the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.CollectionChanged&gt;</ph> event through this <ph id="ph2">`virtual`</ph> method.</source>
          <target state="translated">Proprietà e metodi che modificano questo insieme generano il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.CollectionChanged&gt;</ph> evento tramite questo <ph id="ph2">`virtual`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>When overriding this method, either call the base implementation or use the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.BlockReentrancy%2A&gt;</ph> method to handle reentrant collection changes, as in the following example:</source>
          <target state="translated">Quando si esegue l'override di questo metodo, chiamare l'implementazione di base o utilizzare il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.BlockReentrancy%2A&gt;</ph> cambia metodo per gestire insieme rientrante, come nell'esempio seguente:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Arguments of the event being raised.</source>
          <target state="translated">Argomenti dell'evento da generare.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /&gt;</ph> event with the provided arguments.</source>
          <target state="translated">Genera l'evento <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /&gt;</ph> con gli argomenti forniti.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged">
          <source>Occurs when a property value changes.</source>
          <target state="translated">Generato quando il valore di una proprietà cambia.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">Indice in base zero dell'elemento da rimuovere.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>Removes the item at the specified index of the collection.</source>
          <target state="translated">Rimuove l'elemento in corrispondenza dell'indice specificato della raccolta.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>The base class calls this method when an item is removed from the collection.</source>
          <target state="translated">La classe di base chiama questo metodo quando un elemento viene rimosso dalla raccolta.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">Questa implementazione genera il <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">Per ulteriori informazioni, vedere il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph> metodo la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe di base.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>The zero-based index of the element to replace.</source>
          <target state="translated">Indice in base zero dell'elemento da sostituire.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>The new value for the element at the specified index.</source>
          <target state="translated">Nuovo valore dell'elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>Replaces the element at the specified index.</source>
          <target state="translated">Sostituisce l'elemento in corrispondenza dell'indice specificato.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>The base class calls this method when an item is set in the collection.</source>
          <target state="translated">La classe di base chiama questo metodo quando è impostato un elemento nella raccolta.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">Questa implementazione genera il <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">Per ulteriori informazioni, vedere il <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> metodo la <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe di base.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>