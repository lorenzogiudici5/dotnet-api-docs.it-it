<Type Name="KeyedCollection&lt;TKey,TItem&gt;" FullName="System.Collections.ObjectModel.KeyedCollection&lt;TKey,TItem&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="081a8839059eeefd055349f66dc042fca18a52a4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36644945" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class KeyedCollection&lt;TKey,TItem&gt; : System.Collections.ObjectModel.Collection&lt;TItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit KeyedCollection`2&lt;TKey, TItem&gt; extends System.Collections.ObjectModel.Collection`1&lt;!TItem&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.KeyedCollection`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class KeyedCollection(Of TKey, TItem)&#xA;Inherits Collection(Of TItem)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TItem&gt;&#xA;public ref class KeyedCollection abstract : System::Collections::ObjectModel::Collection&lt;TItem&gt;" />
  <TypeSignature Language="F#" Value="type KeyedCollection&lt;'Key, 'Item&gt; = class&#xA;    inherit Collection&lt;'Item&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TItem" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;TItem&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">TItem</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_KeyedCollectionDebugView`2))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="2affe-101">Tipo di chiavi nella raccolta.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2affe-101">The type of keys in the collection.</span>
      </span>
    </typeparam>
    <typeparam name="TItem">
      <span data-ttu-id="2affe-102">Tipo di elementi nella raccolta.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2affe-102">The type of items in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="2affe-103">Provides the abstract base class for a collection whose keys are embedded in the values.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2affe-103">Provides the abstract base class for a collection whose keys are embedded in the values.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2affe-104">Il <xref:System.Collections.ObjectModel.KeyedCollection%602> classe fornisce entrambi o (1) il recupero indicizzato e chiave che si avvicina o (1).</span><span class="sxs-lookup"><span data-stu-id="2affe-104">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class provides both O(1) indexed retrieval and keyed retrieval that approaches O(1).</span></span> <span data-ttu-id="2affe-105">È un tipo astratto o più precisamente un gruppo infinito di tipi astratti, perché ognuno dei relativi tipi generici costruiti è una classe base astratta.</span><span class="sxs-lookup"><span data-stu-id="2affe-105">It is an abstract type, or more accurately an infinite set of abstract types, because each of its constructed generic types is an abstract base class.</span></span> <span data-ttu-id="2affe-106">Per utilizzare <xref:System.Collections.ObjectModel.KeyedCollection%602>, derivare un tipo di raccolta da tipo costruito appropriato.</span><span class="sxs-lookup"><span data-stu-id="2affe-106">To use <xref:System.Collections.ObjectModel.KeyedCollection%602>, derive your collection type from the appropriate constructed type.</span></span>  
  
 <span data-ttu-id="2affe-107">Il <xref:System.Collections.ObjectModel.KeyedCollection%602> classe è un ibrido tra una raccolta in base il <xref:System.Collections.Generic.IList%601> interfaccia generica e una raccolta in base al <xref:System.Collections.Generic.IDictionary%602> interfaccia generica.</span><span class="sxs-lookup"><span data-stu-id="2affe-107">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class is a hybrid between a collection based on the <xref:System.Collections.Generic.IList%601> generic interface and a collection based on the <xref:System.Collections.Generic.IDictionary%602> generic interface.</span></span> <span data-ttu-id="2affe-108">Ad esempio raccolte basate sul <xref:System.Collections.Generic.IList%601> interfaccia generica, <xref:System.Collections.ObjectModel.KeyedCollection%602> rappresenta un elenco di elementi indicizzato.</span><span class="sxs-lookup"><span data-stu-id="2affe-108">Like collections based on the <xref:System.Collections.Generic.IList%601> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> is an indexed list of items.</span></span> <span data-ttu-id="2affe-109">Ad esempio raccolte basate sul <xref:System.Collections.Generic.IDictionary%602> interfaccia generica, <xref:System.Collections.ObjectModel.KeyedCollection%602> dispone di una chiave associata a ogni elemento.</span><span class="sxs-lookup"><span data-stu-id="2affe-109">Like collections based on the <xref:System.Collections.Generic.IDictionary%602> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> has a key associated with each element.</span></span>  
  
 <span data-ttu-id="2affe-110">A differenza dei dizionari, un elemento di <xref:System.Collections.ObjectModel.KeyedCollection%602> non è una coppia chiave/valore; al contrario, l'intero elemento è il valore e la chiave viene incorporata all'interno del valore.</span><span class="sxs-lookup"><span data-stu-id="2affe-110">Unlike dictionaries, an element of <xref:System.Collections.ObjectModel.KeyedCollection%602> is not a key/value pair; instead, the entire element is the value and the key is embedded within the value.</span></span>  <span data-ttu-id="2affe-111">Ad esempio, un elemento di una raccolta derivata da `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` in Visual Basic) potrebbe essere "John Doe Jr."</span><span class="sxs-lookup"><span data-stu-id="2affe-111">For example, an element of a collection derived from `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` in Visual Basic) might be "John Doe Jr."</span></span> <span data-ttu-id="2affe-112">dove il valore è "John Doe Jr."</span><span class="sxs-lookup"><span data-stu-id="2affe-112">where the value is "John Doe Jr."</span></span> <span data-ttu-id="2affe-113">e la chiave è "Doe"; o una raccolta di chiavi integer contenente i record dei dipendenti potrebbe essere derivata da `KeyedCollection\<int,Employee>`.</span><span class="sxs-lookup"><span data-stu-id="2affe-113">and the key is "Doe"; or a collection of employee records containing integer keys could be derived from `KeyedCollection\<int,Employee>`.</span></span> <span data-ttu-id="2affe-114">La classe astratta <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metodo estrae la chiave dall'elemento.</span><span class="sxs-lookup"><span data-stu-id="2affe-114">The abstract <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method extracts the key from the element.</span></span>  
  
 <span data-ttu-id="2affe-115">Per impostazione predefinita, il <xref:System.Collections.ObjectModel.KeyedCollection%602> include un dizionario di ricerca che è possibile ottenere con la <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="2affe-115">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that you can obtain with the <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> property.</span></span>  <span data-ttu-id="2affe-116">Quando viene aggiunto un elemento per il <xref:System.Collections.ObjectModel.KeyedCollection%602>, la chiave dell'elemento è una volta estratto e salvata nel dizionario di ricerca per velocizzare le ricerche.</span><span class="sxs-lookup"><span data-stu-id="2affe-116">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="2affe-117">Override di questo comportamento specificando una soglia di creazione del dizionario, quando si crea il <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="2affe-117">This behavior is overridden by specifying a dictionary creation threshold when you create the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="2affe-118">Il dizionario di ricerca viene creato la prima volta che il numero di elementi supera tale soglia.</span><span class="sxs-lookup"><span data-stu-id="2affe-118">The lookup dictionary is created the first time the number of elements exceeds that threshold.</span></span>  <span data-ttu-id="2affe-119">Se si specifica -1 come soglia, non viene creato mai il dizionario di ricerca.</span><span class="sxs-lookup"><span data-stu-id="2affe-119">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2affe-120">Quando viene utilizzato il dizionario di ricerca interno, contiene riferimenti a tutti gli elementi nella raccolta se `TItem` è un tipo riferimento, o copie di tutti gli elementi nella raccolta se `TItem` è un tipo valore.</span><span class="sxs-lookup"><span data-stu-id="2affe-120">When the internal lookup dictionary is used, it contains references to all the items in the collection if `TItem` is a reference type, or copies of all the items in the collection if `TItem` is a value type.</span></span> <span data-ttu-id="2affe-121">Pertanto, utilizzando il dizionario di ricerca potrebbe non essere appropriato se `TItem` è un tipo valore.</span><span class="sxs-lookup"><span data-stu-id="2affe-121">Thus, using the lookup dictionary may not be appropriate if `TItem` is a value type.</span></span>  
  
 <span data-ttu-id="2affe-122">È possibile accedere a un elemento mediante il relativo indice o chiave utilizzando il <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="2affe-122">You can access an item by its index or key by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="2affe-123">È possibile aggiungere elementi senza una chiave, ma questi elementi successivamente possono essere eseguiti solo in base all'indice.</span><span class="sxs-lookup"><span data-stu-id="2affe-123">You can add items without a key, but these items can subsequently be accessed only by index.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2affe-124">In questa sezione contiene due esempi di codice.</span><span class="sxs-lookup"><span data-stu-id="2affe-124">This section contains two code examples.</span></span> <span data-ttu-id="2affe-125">Nel primo esempio viene illustrato il codice minimo necessario per derivare da <xref:System.Collections.ObjectModel.KeyedCollection%602>e vengono illustrati molti dei metodi ereditati.</span><span class="sxs-lookup"><span data-stu-id="2affe-125">The first example shows the minimum code required to derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and demonstrates many of the inherited methods.</span></span> <span data-ttu-id="2affe-126">Nel secondo esempio viene illustrato come eseguire l'override dei metodi protetti di <xref:System.Collections.ObjectModel.KeyedCollection%602> per fornire un comportamento personalizzato.</span><span class="sxs-lookup"><span data-stu-id="2affe-126">The second example shows how to override the protected methods of <xref:System.Collections.ObjectModel.KeyedCollection%602> to provide custom behavior.</span></span>  
  
 <span data-ttu-id="2affe-127">**Esempio 1**</span><span class="sxs-lookup"><span data-stu-id="2affe-127">**Example 1**</span></span>  
  
 <span data-ttu-id="2affe-128">Questo esempio di codice viene illustrato il codice minimo necessario per derivare una classe di raccolta da <xref:System.Collections.ObjectModel.KeyedCollection%602>: si esegue l'override di <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> (metodo) e fornendo un costruttore pubblico che delega a un costruttore di classe di base.</span><span class="sxs-lookup"><span data-stu-id="2affe-128">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="2affe-129">L'esempio di codice viene illustrato inoltre molte delle proprietà e metodi ereditati da <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601> classi.</span><span class="sxs-lookup"><span data-stu-id="2affe-129">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="2affe-130">Il `SimpleOrder` classe è un elenco molto semplice che contiene `OrderItem` oggetti, ognuno dei quali rappresenta una voce nell'ordine.</span><span class="sxs-lookup"><span data-stu-id="2affe-130">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="2affe-131">La chiave di `OrderItem` non è modificabile, un fattore importante per le classi che derivano da <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="2affe-131">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="2affe-132">Per un esempio di codice che usa chiavi modificabili, vedere <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-132">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 <span data-ttu-id="2affe-133">**Esempio 2**</span><span class="sxs-lookup"><span data-stu-id="2affe-133">**Example 2**</span></span>  
  
 <span data-ttu-id="2affe-134">Esempio di codice seguente viene illustrato come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metodi, per fornire un comportamento personalizzato per il <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metodi e per impostare il valore predefinito <xref:System.Collections.ObjectModel.Collection%601.Item%2A> proprietà (l'indicizzatore in c#).</span><span class="sxs-lookup"><span data-stu-id="2affe-134">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="2affe-135">Il comportamento personalizzato fornito in questo esempio è un evento di notifica denominato `Changed`, che viene generato al termine di ciascuno dei metodi sottoposti a override.</span><span class="sxs-lookup"><span data-stu-id="2affe-135">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="2affe-136">Nell'esempio di codice viene creato il `SimpleOrder` classe che deriva da <xref:System.Collections.ObjectModel.KeyedCollection%602> e rappresenta un modulo d'ordine semplice.</span><span class="sxs-lookup"><span data-stu-id="2affe-136">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="2affe-137">Il form contiene `OrderItem` gli oggetti che rappresentano elementi ordinati.</span><span class="sxs-lookup"><span data-stu-id="2affe-137">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="2affe-138">L'esempio di codice crea inoltre un `SimpleOrderChangedEventArgs` classe destinata a contenere le informazioni sull'evento e un'enumerazione per identificare il tipo di modifica.</span><span class="sxs-lookup"><span data-stu-id="2affe-138">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="2affe-139">L'esempio di codice viene illustrato il comportamento personalizzato mediante la chiamata in proprietà e metodi della classe derivata, il `Main` metodo il `Demo` (classe).</span><span class="sxs-lookup"><span data-stu-id="2affe-139">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="2affe-140">Questo esempio di codice Usa gli oggetti con le chiavi non modificabile.</span><span class="sxs-lookup"><span data-stu-id="2affe-140">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="2affe-141">Per un esempio di codice che usa chiavi modificabili, vedere <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-141">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Specialized.StringDictionary" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2affe-142">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-142">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2affe-143">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the default equality comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-143">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the default equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2affe-144">Un <xref:System.Collections.ObjectModel.KeyedCollection%602> create con questo costruttore utilizza l'operatore di confronto di uguaglianza predefinito per il tipo della chiave, ottenuto da <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2affe-144">A <xref:System.Collections.ObjectModel.KeyedCollection%602> created with this constructor uses the default generic equality comparer for the type of the key, obtained from <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2affe-145">Per specificare un operatore di confronto di uguaglianza generico diverso, usare il <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> costruttore o <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> costruttore.</span><span class="sxs-lookup"><span data-stu-id="2affe-145">To specify a different generic equality comparer, use the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructor or the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="2affe-146">Per impostazione predefinita, il <xref:System.Collections.ObjectModel.KeyedCollection%602> include un dizionario di ricerca che viene creato quando viene aggiunto il primo elemento.</span><span class="sxs-lookup"><span data-stu-id="2affe-146">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="2affe-147">Quando viene aggiunto un elemento per il <xref:System.Collections.ObjectModel.KeyedCollection%602>, la chiave dell'elemento è una volta estratto e salvata nel dizionario di ricerca per velocizzare le ricerche.</span><span class="sxs-lookup"><span data-stu-id="2affe-147">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="2affe-148">Questo comportamento può essere modificato utilizzando il <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> costruttore e specificando una soglia di creazione del dizionario.</span><span class="sxs-lookup"><span data-stu-id="2affe-148">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2affe-149">Poiché il <xref:System.Collections.ObjectModel.KeyedCollection%602> classe è astratta (`MustInherit` in Visual Basic), è necessario derivare da quest'ultimo per utilizzarlo.</span><span class="sxs-lookup"><span data-stu-id="2affe-149">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="2affe-150">Nel costruttore del tipo derivato, chiamare appropriata <xref:System.Collections.ObjectModel.KeyedCollection%602> costruttore.</span><span class="sxs-lookup"><span data-stu-id="2affe-150">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="2affe-151">Non è necessario per esporre le funzionalità, ad esempio il confronto di uguaglianza o la soglia di creazione dizionario nei costruttori.</span><span class="sxs-lookup"><span data-stu-id="2affe-151">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="2affe-152">Questo costruttore è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2affe-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2affe-153">Questo esempio di codice viene illustrato il codice minimo necessario per derivare una classe di raccolta da <xref:System.Collections.ObjectModel.KeyedCollection%602>: si esegue l'override di <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> (metodo) e fornendo un costruttore pubblico che delega a un costruttore di classe di base.</span><span class="sxs-lookup"><span data-stu-id="2affe-153">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="2affe-154">L'esempio di codice viene illustrato inoltre molte delle proprietà e metodi ereditati da <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601> classi.</span><span class="sxs-lookup"><span data-stu-id="2affe-154">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="2affe-155">Il `SimpleOrder` classe è un elenco molto semplice che contiene `OrderItem` oggetti, ognuno dei quali rappresenta una voce nell'ordine.</span><span class="sxs-lookup"><span data-stu-id="2affe-155">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="2affe-156">La chiave di `OrderItem` non è modificabile, un fattore importante per le classi che derivano da <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="2affe-156">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="2affe-157">Per un esempio di codice che usa chiavi modificabili, vedere <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-157">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="2affe-158">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-158">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2affe-159">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-159">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2affe-160">Per impostazione predefinita, il <xref:System.Collections.ObjectModel.KeyedCollection%602> include un dizionario di ricerca che viene creato quando viene aggiunto il primo elemento.</span><span class="sxs-lookup"><span data-stu-id="2affe-160">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="2affe-161">Quando viene aggiunto un elemento per il <xref:System.Collections.ObjectModel.KeyedCollection%602>, la chiave dell'elemento è una volta estratto e salvata nel dizionario di ricerca per velocizzare le ricerche.</span><span class="sxs-lookup"><span data-stu-id="2affe-161">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="2affe-162">Questo comportamento può essere modificato utilizzando il <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> costruttore e specificando una soglia di creazione del dizionario.</span><span class="sxs-lookup"><span data-stu-id="2affe-162">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2affe-163">Poiché il <xref:System.Collections.ObjectModel.KeyedCollection%602> classe è astratta (`MustInherit` in Visual Basic), è necessario derivare da quest'ultimo per utilizzarlo.</span><span class="sxs-lookup"><span data-stu-id="2affe-163">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="2affe-164">Nel costruttore del tipo derivato, chiamare appropriata <xref:System.Collections.ObjectModel.KeyedCollection%602> costruttore.</span><span class="sxs-lookup"><span data-stu-id="2affe-164">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="2affe-165">Non è necessario per esporre le funzionalità, ad esempio il confronto di uguaglianza o la soglia di creazione dizionario nei costruttori.</span><span class="sxs-lookup"><span data-stu-id="2affe-165">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="2affe-166">Questo costruttore è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2affe-166">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer, int32 dictionaryCreationThreshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey), dictionaryCreationThreshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * int -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; (comparer, dictionaryCreationThreshold)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="dictionaryCreationThreshold" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="2affe-167">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-167">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <param name="dictionaryCreationThreshold">
          <span data-ttu-id="2affe-168">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-168">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2affe-169">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-169">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2affe-170">Per impostazione predefinita, il <xref:System.Collections.ObjectModel.KeyedCollection%602> include un dizionario di ricerca che viene creato quando viene aggiunto il primo elemento.</span><span class="sxs-lookup"><span data-stu-id="2affe-170">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="2affe-171">Quando viene aggiunto un elemento per il <xref:System.Collections.ObjectModel.KeyedCollection%602>, la chiave dell'elemento è una volta estratto e salvata nel dizionario di ricerca per velocizzare le ricerche.</span><span class="sxs-lookup"><span data-stu-id="2affe-171">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="2affe-172">Questo costruttore consente di eseguire l'override di questo comportamento.</span><span class="sxs-lookup"><span data-stu-id="2affe-172">This constructor allows you to override that behavior.</span></span> <span data-ttu-id="2affe-173">Specificare 0 per creare il dizionario, quando viene aggiunto il primo elemento, 1 per creare il dizionario, quando viene aggiunto il secondo elemento e così via.</span><span class="sxs-lookup"><span data-stu-id="2affe-173">Specify 0 to create the dictionary when the first element is added, 1 to create the dictionary when the second element is added, and so on.</span></span> <span data-ttu-id="2affe-174">Se si specifica -1 come soglia, non viene creato mai il dizionario di ricerca.</span><span class="sxs-lookup"><span data-stu-id="2affe-174">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
 <span data-ttu-id="2affe-175">Per le raccolte minima il miglioramento nella velocità di recupero dal dizionario di ricerca potrebbe non essere opportuno memoria aggiuntiva necessaria per il dizionario.</span><span class="sxs-lookup"><span data-stu-id="2affe-175">For very small collections the improvement in retrieval speed provided by the lookup dictionary might not be worth the extra memory required by the dictionary.</span></span> <span data-ttu-id="2affe-176">Impostare una soglia consente di stabilire quando tale compromesso.</span><span class="sxs-lookup"><span data-stu-id="2affe-176">Setting a threshold allows you to decide when to make that tradeoff.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2affe-177">Poiché il <xref:System.Collections.ObjectModel.KeyedCollection%602> classe è astratta (`MustInherit` in Visual Basic), è necessario derivare da quest'ultimo per utilizzarlo.</span><span class="sxs-lookup"><span data-stu-id="2affe-177">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="2affe-178">Nel costruttore del tipo derivato, chiamare appropriata <xref:System.Collections.ObjectModel.KeyedCollection%602> costruttore.</span><span class="sxs-lookup"><span data-stu-id="2affe-178">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="2affe-179">Non è necessario per esporre le funzionalità, ad esempio il confronto di uguaglianza o la soglia di creazione dizionario nei costruttori.</span><span class="sxs-lookup"><span data-stu-id="2affe-179">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="2affe-180">Questo costruttore è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2affe-180">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2affe-181">Esempio di codice seguente viene illustrato come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metodi, per fornire un comportamento personalizzato per il <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metodi e per impostare il valore predefinito <xref:System.Collections.ObjectModel.Collection%601.Item%2A> proprietà (l'indicizzatore in c#).</span><span class="sxs-lookup"><span data-stu-id="2affe-181">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="2affe-182">Il comportamento personalizzato fornito in questo esempio è un evento di notifica denominato `Changed`, che viene generato al termine di ciascuno dei metodi sottoposti a override.</span><span class="sxs-lookup"><span data-stu-id="2affe-182">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="2affe-183">Nell'esempio di codice viene utilizzata la <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> costruttore con una soglia pari a 0, in modo che il dizionario interno viene creato la prima volta che un oggetto viene aggiunto alla raccolta.</span><span class="sxs-lookup"><span data-stu-id="2affe-183">The code example uses the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor with a threshold of 0, so that the internal dictionary is created the first time an object is added to the collection.</span></span>  
  
 <span data-ttu-id="2affe-184">Nell'esempio di codice viene creato il `SimpleOrder` classe che deriva da <xref:System.Collections.ObjectModel.KeyedCollection%602> e rappresenta un modulo d'ordine semplice.</span><span class="sxs-lookup"><span data-stu-id="2affe-184">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="2affe-185">Il form contiene `OrderItem` gli oggetti che rappresentano elementi ordinati.</span><span class="sxs-lookup"><span data-stu-id="2affe-185">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="2affe-186">L'esempio di codice crea inoltre un `SimpleOrderChangedEventArgs` classe destinata a contenere le informazioni sull'evento e un'enumerazione per identificare il tipo di modifica.</span><span class="sxs-lookup"><span data-stu-id="2affe-186">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="2affe-187">L'esempio di codice viene illustrato il comportamento personalizzato mediante la chiamata in proprietà e metodi della classe derivata, il `Main` metodo il `Demo` (classe).</span><span class="sxs-lookup"><span data-stu-id="2affe-187">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="2affe-188">Questo esempio di codice Usa gli oggetti con le chiavi non modificabile.</span><span class="sxs-lookup"><span data-stu-id="2affe-188">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="2affe-189">Per un esempio di codice che usa chiavi modificabili, vedere <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-189">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2affe-190">
            <paramref name="dictionaryCreationThreshold" /> is less than –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-190">
              <paramref name="dictionaryCreationThreshold" /> is less than –1.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName="ChangeItemKey">
      <MemberSignature Language="C#" Value="protected void ChangeItemKey (TItem item, TKey newKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ChangeItemKey(!TItem item, !TKey newKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ChangeItemKey (item As TItem, newKey As TKey)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ChangeItemKey(TItem item, TKey newKey);" />
      <MemberSignature Language="F#" Value="member this.ChangeItemKey : 'Item * 'Key -&gt; unit" Usage="keyedCollection.ChangeItemKey (item, newKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
        <Parameter Name="newKey" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="2affe-191">The element to change the key of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-191">The element to change the key of.</span>
          </span>
        </param>
        <param name="newKey">
          <span data-ttu-id="2affe-192">The new key for <c>item</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-192">The new key for <c>item</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2affe-193">Changes the key associated with the specified element in the lookup dictionary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-193">Changes the key associated with the specified element in the lookup dictionary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2affe-194">Questo metodo non modifica la chiave incorporata in `item`; semplicemente sostituisce la chiave salvata nel dizionario di ricerca.</span><span class="sxs-lookup"><span data-stu-id="2affe-194">This method does not modify the key embedded in `item`; it simply replaces the key saved in the lookup dictionary.</span></span>  <span data-ttu-id="2affe-195">Pertanto, se `newKey` è diversa dalla chiave incorporata nel `item`, non è possibile accedere `item` utilizzando la chiave restituita dal <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-195">Therefore, if `newKey` is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="2affe-196">Questo metodo non esegue alcuna operazione se il <xref:System.Collections.ObjectModel.KeyedCollection%602> non dispone di un dizionario di ricerca.</span><span class="sxs-lookup"><span data-stu-id="2affe-196">This method does nothing if the <xref:System.Collections.ObjectModel.KeyedCollection%602> does not have a lookup dictionary.</span></span>  
  
 <span data-ttu-id="2affe-197">Ogni chiave in un <xref:System.Collections.ObjectModel.KeyedCollection%602> devono essere univoci.</span><span class="sxs-lookup"><span data-stu-id="2affe-197">Every key in a <xref:System.Collections.ObjectModel.KeyedCollection%602> must be unique.</span></span> <span data-ttu-id="2affe-198">Non può essere una chiave `null`.</span><span class="sxs-lookup"><span data-stu-id="2affe-198">A key cannot be `null`.</span></span>  
  
 <span data-ttu-id="2affe-199">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2affe-199">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="2affe-200">Note per gli implementatori</span><span class="sxs-lookup"><span data-stu-id="2affe-200">Notes for Implementers</span></span>  
 <span data-ttu-id="2affe-201">Prima di modificare la chiave in un elemento incorporato, è necessario chiamare questo metodo per aggiornare la chiave nel dizionario di ricerca.</span><span class="sxs-lookup"><span data-stu-id="2affe-201">Before modifying the key embedded in an item, you must call this method to update the key in the lookup dictionary.</span></span> <span data-ttu-id="2affe-202">Se la soglia di creazione del dizionario è -1, questo metodo non è necessario.</span><span class="sxs-lookup"><span data-stu-id="2affe-202">If the dictionary creation threshold is –1, calling this method is not necessary.</span></span>  
  
 <span data-ttu-id="2affe-203">Non esporre il <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metodo come metodo pubblico di una classe derivata.</span><span class="sxs-lookup"><span data-stu-id="2affe-203">Do not expose the <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method as a public method of a derived class.</span></span> <span data-ttu-id="2affe-204">Un utilizzo improprio di questo metodo inserisce il dizionario di ricerca non è sincronizzato con le chiavi degli elementi.</span><span class="sxs-lookup"><span data-stu-id="2affe-204">Misuse of this method puts the lookup dictionary out of sync with item keys.</span></span> <span data-ttu-id="2affe-205">Ad esempio, impostando la chiave `null` e quindi impostandolo su un altro valore consente di aggiungere più chiavi per un elemento al dizionario di ricerca.</span><span class="sxs-lookup"><span data-stu-id="2affe-205">For example, setting the key to `null` and then setting it to another value adds multiple keys for an item to the lookup dictionary.</span></span> <span data-ttu-id="2affe-206">Esporre questo metodo internamente per consentire le chiavi degli elementi modificabili: quando viene modificata la chiave per un elemento, questo metodo viene utilizzato per modificare la chiave nel dizionario di ricerca.</span><span class="sxs-lookup"><span data-stu-id="2affe-206">Expose this method internally to allow mutable item keys: When the key for an item changes, this method is used to change the key in the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2affe-207">Esempio di codice seguente viene illustrato come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metodo per supportare chiavi modificabili e su come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metodi mantenere l'integrità delle chiavi e la raccolta.</span><span class="sxs-lookup"><span data-stu-id="2affe-207">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="2affe-208">Nell'esempio di codice viene creato il `MutableKeys` insieme, che deriva da <xref:System.Collections.ObjectModel.KeyedCollection%602>e il `MutableKey` classe.</span><span class="sxs-lookup"><span data-stu-id="2affe-208">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="2affe-209">Il `MutableKey` classe ha un impostabile `Key` proprietà.</span><span class="sxs-lookup"><span data-stu-id="2affe-209">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="2affe-210">Quando una nuova chiave viene assegnata alla proprietà, chiama il metodo set della proprietà di `internal` (`Friend` in Visual Basic) `ChangeKey` metodo della raccolta per verificare se la nuova chiave genererebbe un conflitto con una chiave esistente.</span><span class="sxs-lookup"><span data-stu-id="2affe-210">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="2affe-211">In tal caso, viene generata un'eccezione e il valore della proprietà non viene modificato.</span><span class="sxs-lookup"><span data-stu-id="2affe-211">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="2affe-212">Per mantenere la connessione tra un `MutableKey` oggetto e il `MutableKeys` insieme e per impedire che un oggetto da inserire in due raccolte, la `MutableKey` classe dispone di un `internal` (`Friend` in Visual Basic) `Collection`campo.</span><span class="sxs-lookup"><span data-stu-id="2affe-212">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="2affe-213">Questo campo è gestito dai metodi protetti che forniscono un comportamento personalizzato per l'aggiunta e rimozione di elementi dalla raccolta, ad esempio il <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2affe-213">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="2affe-214">Il campo viene impostato quando l'elemento viene aggiunto a una raccolta e cancellato quando l'elemento viene rimosso.</span><span class="sxs-lookup"><span data-stu-id="2affe-214">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2affe-215">
            <paramref name="item" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-215">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2affe-216">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-216">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2affe-217">
            <paramref name="item" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-217">
              <paramref name="item" /> is not found.</span>
          </span>
          <span data-ttu-id="2affe-218">-or-  <paramref name="key" /> already exists in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-218">-or-  <paramref name="key" /> already exists in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="keyedCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2affe-219">Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-219">Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2affe-220">Se è presente un dizionario di ricerca, questo metodo cancella, ma non per eliminarla.</span><span class="sxs-lookup"><span data-stu-id="2affe-220">If there is a lookup dictionary, this method clears it but does not delete it.</span></span>  
  
 <span data-ttu-id="2affe-221">Se il numero di elementi ha superato la soglia di dizionario per la creazione e la <xref:System.Collections.ObjectModel.KeyedCollection%602> è usando un dizionario di ricerca, continuerà a utilizzare un dizionario di ricerca, anche se il numero di elementi è nuovamente sotto la soglia.</span><span class="sxs-lookup"><span data-stu-id="2affe-221">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="2affe-222">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-222">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="2affe-223">Note per gli implementatori</span><span class="sxs-lookup"><span data-stu-id="2affe-223">Notes for Implementers</span></span>  
 <span data-ttu-id="2affe-224">Eseguire l'override di questo metodo per fornire un comportamento personalizzato per il <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metodo ereditato dal <xref:System.Collections.ObjectModel.Collection%601> classe generica.</span><span class="sxs-lookup"><span data-stu-id="2affe-224">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="2affe-225">Chiamare l'implementazione della classe base di questo metodo per cancellare la raccolta sottostante e per cancellare il dizionario di ricerca.</span><span class="sxs-lookup"><span data-stu-id="2affe-225">Call the base class implementation of this method to clear the underlying collection and to clear the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2affe-226">In questa sezione sono riportati due esempi di codice che illustrano l'override di <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> metodo per fornire un comportamento personalizzato per la cancellazione di tutti gli oggetti dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="2affe-226">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> method to provide custom behavior for clearing all objects from the collection.</span></span> <span data-ttu-id="2affe-227">Nel primo esempio viene aggiunto un evento di notifica personalizzata e il secondo fornisce supporto per una raccolta di oggetti con chiavi modificabile.</span><span class="sxs-lookup"><span data-stu-id="2affe-227">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="2affe-228">Esempio 1</span><span class="sxs-lookup"><span data-stu-id="2affe-228">Example 1</span></span>  
  
 <span data-ttu-id="2affe-229">Esempio di codice seguente viene illustrato come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metodi, per fornire un comportamento personalizzato per il <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metodi e per impostare il valore predefinito <xref:System.Collections.ObjectModel.Collection%601.Item%2A> proprietà (l'indicizzatore in c#).</span><span class="sxs-lookup"><span data-stu-id="2affe-229">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="2affe-230">Il comportamento personalizzato fornito in questo esempio è un evento di notifica denominato `Changed`, che viene generato al termine di ciascuno dei metodi sottoposti a override.</span><span class="sxs-lookup"><span data-stu-id="2affe-230">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="2affe-231">Nell'esempio di codice viene creato il `SimpleOrder` classe che deriva da <xref:System.Collections.ObjectModel.KeyedCollection%602> e rappresenta un modulo d'ordine semplice.</span><span class="sxs-lookup"><span data-stu-id="2affe-231">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="2affe-232">Il form contiene `OrderItem` gli oggetti che rappresentano elementi ordinati.</span><span class="sxs-lookup"><span data-stu-id="2affe-232">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="2affe-233">L'esempio di codice crea inoltre un `SimpleOrderChangedEventArgs` classe destinata a contenere le informazioni sull'evento e un'enumerazione per identificare il tipo di modifica.</span><span class="sxs-lookup"><span data-stu-id="2affe-233">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="2affe-234">L'esempio di codice viene illustrato il comportamento personalizzato mediante la chiamata in proprietà e metodi della classe derivata, il `Main` metodo il `Demo` (classe).</span><span class="sxs-lookup"><span data-stu-id="2affe-234">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="2affe-235">Questo esempio di codice Usa gli oggetti con le chiavi non modificabile.</span><span class="sxs-lookup"><span data-stu-id="2affe-235">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="2affe-236">Per un esempio di codice che usa chiavi modificabili, vedere <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-236">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="2affe-237">Esempio 2</span><span class="sxs-lookup"><span data-stu-id="2affe-237">Example 2</span></span>  
  
 <span data-ttu-id="2affe-238">Esempio di codice seguente viene illustrato come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metodo per supportare chiavi modificabili e su come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metodi mantenere l'integrità delle chiavi e la raccolta.</span><span class="sxs-lookup"><span data-stu-id="2affe-238">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="2affe-239">Nell'esempio di codice viene creato il `MutableKeys` insieme, che deriva da <xref:System.Collections.ObjectModel.KeyedCollection%602>e il `MutableKey` classe.</span><span class="sxs-lookup"><span data-stu-id="2affe-239">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="2affe-240">Il `MutableKey` classe ha un impostabile `Key` proprietà.</span><span class="sxs-lookup"><span data-stu-id="2affe-240">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="2affe-241">Quando una nuova chiave viene assegnata alla proprietà, chiama il metodo set della proprietà di `internal` (`Friend` in Visual Basic) `ChangeKey` metodo della raccolta per verificare se la nuova chiave genererebbe un conflitto con una chiave esistente.</span><span class="sxs-lookup"><span data-stu-id="2affe-241">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="2affe-242">In tal caso, viene generata un'eccezione e il valore della proprietà non viene modificato.</span><span class="sxs-lookup"><span data-stu-id="2affe-242">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="2affe-243">Per mantenere la connessione tra un `MutableKey` oggetto e il `MutableKeys` insieme e per impedire che un oggetto da inserire in due raccolte, la `MutableKey` classe dispone di un `internal` (`Friend` in Visual Basic) `Collection`campo.</span><span class="sxs-lookup"><span data-stu-id="2affe-243">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="2affe-244">Questo campo è gestito dai metodi protetti che forniscono un comportamento personalizzato per l'aggiunta e rimozione di elementi dalla raccolta, ad esempio il <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2affe-244">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="2affe-245">Il campo viene impostato quando l'elemento viene aggiunto a una raccolta e cancellato quando l'elemento viene rimosso.</span><span class="sxs-lookup"><span data-stu-id="2affe-245">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.Generic.IEqualityComparer&lt;'Key&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2affe-246">Gets the generic equality comparer that is used to determine equality of keys in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-246">Gets the generic equality comparer that is used to determine equality of keys in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2affe-247">L'implementazione del <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> interfaccia generica che consente di determinare l'uguaglianza delle chiavi nella raccolta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-247">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface that is used to determine equality of keys in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2affe-248">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="2affe-248">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Contains : 'Key -&gt; bool" Usage="keyedCollection.Contains key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2affe-249">The key to locate in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-249">The key to locate in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2affe-250">Determines whether the collection contains an element with the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-250">Determines whether the collection contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2affe-251">
            <see langword="true" /> if the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-251">
              <see langword="true" /> if the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2affe-252">Se il <xref:System.Collections.ObjectModel.KeyedCollection%602> dispone di un dizionario di ricerca, `key` viene utilizzato per la ricerca nel dizionario.</span><span class="sxs-lookup"><span data-stu-id="2affe-252">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to search the dictionary.</span></span> <span data-ttu-id="2affe-253">Se è presente alcun dizionario di ricerca, la chiave di ogni elemento verrà estratte usando la <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metodo e confrontato con la chiave specificata.</span><span class="sxs-lookup"><span data-stu-id="2affe-253">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="2affe-254">Questo metodo è un'operazione o (1) se il <xref:System.Collections.ObjectModel.KeyedCollection%602> dispone di un dizionario di ricerca; in caso contrario, è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-254">This method is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2affe-255">Questo esempio di codice viene illustrato il codice minimo necessario per derivare una classe di raccolta da <xref:System.Collections.ObjectModel.KeyedCollection%602>: si esegue l'override di <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> (metodo) e fornendo un costruttore pubblico che delega a un costruttore di classe di base.</span><span class="sxs-lookup"><span data-stu-id="2affe-255">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="2affe-256">L'esempio di codice viene illustrato inoltre molte delle proprietà e metodi ereditati da <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601> classi.</span><span class="sxs-lookup"><span data-stu-id="2affe-256">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="2affe-257">Il `SimpleOrder` classe è un elenco molto semplice che contiene `OrderItem` oggetti, ognuno dei quali rappresenta una voce nell'ordine.</span><span class="sxs-lookup"><span data-stu-id="2affe-257">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="2affe-258">La chiave di `OrderItem` non è modificabile, un fattore importante per le classi che derivano da <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="2affe-258">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="2affe-259">Per un esempio di codice che usa chiavi modificabili, vedere <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-259">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2affe-260">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-260">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      </Docs>
    </Member>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IDictionary&lt;TKey,TItem&gt; Dictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;!TKey, !TItem&gt; Dictionary" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ Dictionary { System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dictionary : System.Collections.Generic.IDictionary&lt;'Key, 'Item&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Dictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;TKey,TItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2affe-261">Gets the lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-261">Gets the lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2affe-262">Il dizionario di ricerca del <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, se presente; in caso contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-262">The lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, if it exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2affe-263">Per impostazione predefinita, il <xref:System.Collections.ObjectModel.KeyedCollection%602> include un dizionario di ricerca che viene creato quando viene aggiunto il primo elemento.</span><span class="sxs-lookup"><span data-stu-id="2affe-263">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="2affe-264">Quando viene aggiunto un elemento per il <xref:System.Collections.ObjectModel.KeyedCollection%602>, la chiave dell'elemento è una volta estratto e salvata nel dizionario di ricerca per velocizzare le ricerche.</span><span class="sxs-lookup"><span data-stu-id="2affe-264">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="2affe-265">Questo comportamento può essere modificato utilizzando il <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> costruttore e specificando una soglia di creazione del dizionario.</span><span class="sxs-lookup"><span data-stu-id="2affe-265">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
 <span data-ttu-id="2affe-266">Il recupero del valore di questa proprietà è un'operazione O(1).</span><span class="sxs-lookup"><span data-stu-id="2affe-266">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2affe-267">Esempio di codice seguente viene illustrato come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metodo per supportare chiavi modificabili e su come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metodi mantenere l'integrità delle chiavi e la raccolta.</span><span class="sxs-lookup"><span data-stu-id="2affe-267">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="2affe-268">Nell'esempio di codice viene creato il `MutableKeys` insieme, che deriva da <xref:System.Collections.ObjectModel.KeyedCollection%602>e il `MutableKey` classe.</span><span class="sxs-lookup"><span data-stu-id="2affe-268">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="2affe-269">Il `MutableKey` classe ha un impostabile `Key` proprietà.</span><span class="sxs-lookup"><span data-stu-id="2affe-269">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="2affe-270">Quando una nuova chiave viene assegnata alla proprietà, chiama il metodo set della proprietà di `internal` (`Friend` in Visual Basic) `ChangeKey` metodo della raccolta per verificare se la nuova chiave genererebbe un conflitto con una chiave esistente.</span><span class="sxs-lookup"><span data-stu-id="2affe-270">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="2affe-271">In tal caso, viene generata un'eccezione e il valore della proprietà non viene modificato.</span><span class="sxs-lookup"><span data-stu-id="2affe-271">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="2affe-272">Per mantenere la connessione tra un `MutableKey` oggetto e il `MutableKeys` insieme e per impedire che un oggetto da inserire in due raccolte, la `MutableKey` classe dispone di un `internal` (`Friend` in Visual Basic) `Collection`campo.</span><span class="sxs-lookup"><span data-stu-id="2affe-272">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="2affe-273">Questo campo è gestito dai metodi protetti che forniscono un comportamento personalizzato per l'aggiunta e rimozione di elementi dalla raccolta, ad esempio il <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2affe-273">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="2affe-274">Il campo viene impostato quando l'elemento viene aggiunto a una raccolta e cancellato quando l'elemento viene rimosso.</span><span class="sxs-lookup"><span data-stu-id="2affe-274">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyForItem">
      <MemberSignature Language="C#" Value="protected abstract TKey GetKeyForItem (TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TKey GetKeyForItem(!TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetKeyForItem (item As TItem) As TKey" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TKey GetKeyForItem(TItem item);" />
      <MemberSignature Language="F#" Value="abstract member GetKeyForItem : 'Item -&gt; 'Key" Usage="keyedCollection.GetKeyForItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="2affe-275">The element from which to extract the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-275">The element from which to extract the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2affe-276">When implemented in a derived class, extracts the key from the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-276">When implemented in a derived class, extracts the key from the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2affe-277">The key for the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-277">The key for the specified element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2affe-278">Se la chiave nel dizionario di ricerca è diversa dalla chiave incorporata nel `item`, non è possibile accedere `item` usando la chiave restituita dal <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-278">If the key in the lookup dictionary is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="2affe-279">È possibile implementare questo metodo per restituire `null` per una raccolta che contiene gli elementi senza chiavi, nel qual caso gli elementi accessibili solo tramite il relativo indice.</span><span class="sxs-lookup"><span data-stu-id="2affe-279">You can implement this method to return `null` for a collection that contains items without keys, in which case the items can be accessed only by their index.</span></span> <span data-ttu-id="2affe-280">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2affe-280">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="2affe-281">Note per gli implementatori</span><span class="sxs-lookup"><span data-stu-id="2affe-281">Notes for Implementers</span></span>  
 <span data-ttu-id="2affe-282">È necessario eseguire l'override di questo metodo per fornire al dizionario con un modo per estrarre le chiavi dagli elementi nel dizionario.</span><span class="sxs-lookup"><span data-stu-id="2affe-282">You must override this method to provide the dictionary with a way to extract keys from items in the dictionary.</span></span>  
  
 <span data-ttu-id="2affe-283">Questo metodo viene chiamato internamente.</span><span class="sxs-lookup"><span data-stu-id="2affe-283">This method is called internally.</span></span> <span data-ttu-id="2affe-284">Non è necessario renderlo pubblico.</span><span class="sxs-lookup"><span data-stu-id="2affe-284">It is not necessary for it to be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2affe-285">Questo esempio di codice viene illustrato il codice minimo necessario per derivare una classe di raccolta da <xref:System.Collections.ObjectModel.KeyedCollection%602>: si esegue l'override di <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> (metodo) e fornendo un costruttore pubblico che delega a un costruttore di classe di base.</span><span class="sxs-lookup"><span data-stu-id="2affe-285">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="2affe-286">L'esempio di codice viene illustrato inoltre molte delle proprietà e metodi ereditati da <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601> classi.</span><span class="sxs-lookup"><span data-stu-id="2affe-286">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="2affe-287">Il `SimpleOrder` classe è un elenco molto semplice che contiene `OrderItem` oggetti, ognuno dei quali rappresenta una voce nell'ordine.</span><span class="sxs-lookup"><span data-stu-id="2affe-287">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="2affe-288">La chiave di `OrderItem` non è modificabile, un fattore importante per le classi che derivano da <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="2affe-288">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="2affe-289">Per un esempio di codice che usa chiavi modificabili, vedere <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-289">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'Item -&gt; unit" Usage="keyedCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="2affe-290">The zero-based index at which <c>item</c> should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-290">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="2affe-291">The object to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-291">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2affe-292">Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-292">Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2affe-293">Se `index` è uguale a <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` viene aggiunto alla fine del <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="2affe-293">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span>  
  
 <span data-ttu-id="2affe-294">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-294">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="2affe-295"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> viene chiamato dal <xref:System.Collections.ObjectModel.Collection%601.Add%2A> e <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="2affe-295"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> is called by the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="2affe-296">Note per gli implementatori</span><span class="sxs-lookup"><span data-stu-id="2affe-296">Notes for Implementers</span></span>  
 <span data-ttu-id="2affe-297">Eseguire l'override di questo metodo per fornire un comportamento personalizzato per il <xref:System.Collections.ObjectModel.Collection%601.Add%2A> e <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> ereditati dal <xref:System.Collections.ObjectModel.Collection%601> classe generica.</span><span class="sxs-lookup"><span data-stu-id="2affe-297">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="2affe-298">Chiamare l'implementazione della classe base di questo metodo per inserire l'elemento nella raccolta sottostante e aggiornare il dizionario di ricerca.</span><span class="sxs-lookup"><span data-stu-id="2affe-298">Call the base class implementation of this method to insert the item into the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2affe-299">In questa sezione sono riportati due esempi di codice che illustrano l'override di <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metodo per fornire un comportamento personalizzato per l'aggiunta o inserimento di oggetti nella raccolta.</span><span class="sxs-lookup"><span data-stu-id="2affe-299">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method to provide custom behavior for adding or inserting objects into the collection.</span></span> <span data-ttu-id="2affe-300">Nel primo esempio viene aggiunto un evento di notifica personalizzata e il secondo fornisce supporto per una raccolta di oggetti con chiavi modificabile.</span><span class="sxs-lookup"><span data-stu-id="2affe-300">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="2affe-301">Esempio 1</span><span class="sxs-lookup"><span data-stu-id="2affe-301">Example 1</span></span>  
  
 <span data-ttu-id="2affe-302">Esempio di codice seguente viene illustrato come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metodi, per fornire un comportamento personalizzato per il <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metodi e per impostare il valore predefinito <xref:System.Collections.ObjectModel.Collection%601.Item%2A> proprietà (l'indicizzatore in c#).</span><span class="sxs-lookup"><span data-stu-id="2affe-302">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="2affe-303">Il comportamento personalizzato fornito in questo esempio è un evento di notifica denominato `Changed`, che viene generato al termine di ciascuno dei metodi sottoposti a override.</span><span class="sxs-lookup"><span data-stu-id="2affe-303">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="2affe-304">Nell'esempio di codice viene creato il `SimpleOrder` classe che deriva da <xref:System.Collections.ObjectModel.KeyedCollection%602> e rappresenta un modulo d'ordine semplice.</span><span class="sxs-lookup"><span data-stu-id="2affe-304">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="2affe-305">Il form contiene `OrderItem` gli oggetti che rappresentano elementi ordinati.</span><span class="sxs-lookup"><span data-stu-id="2affe-305">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="2affe-306">L'esempio di codice crea inoltre un `SimpleOrderChangedEventArgs` classe destinata a contenere le informazioni sull'evento e un'enumerazione per identificare il tipo di modifica.</span><span class="sxs-lookup"><span data-stu-id="2affe-306">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="2affe-307">L'esempio di codice viene illustrato il comportamento personalizzato mediante la chiamata in proprietà e metodi della classe derivata, il `Main` metodo il `Demo` (classe).</span><span class="sxs-lookup"><span data-stu-id="2affe-307">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="2affe-308">Questo esempio di codice Usa gli oggetti con le chiavi non modificabile.</span><span class="sxs-lookup"><span data-stu-id="2affe-308">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="2affe-309">Per un esempio di codice che usa chiavi modificabili, vedere <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-309">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="2affe-310">Esempio 2</span><span class="sxs-lookup"><span data-stu-id="2affe-310">Example 2</span></span>  
  
 <span data-ttu-id="2affe-311">Esempio di codice seguente viene illustrato come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metodo per supportare chiavi modificabili e su come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metodi mantenere l'integrità delle chiavi e la raccolta.</span><span class="sxs-lookup"><span data-stu-id="2affe-311">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="2affe-312">Nell'esempio di codice viene creato il `MutableKeys` insieme, che deriva da <xref:System.Collections.ObjectModel.KeyedCollection%602>e il `MutableKey` classe.</span><span class="sxs-lookup"><span data-stu-id="2affe-312">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="2affe-313">Il `MutableKey` classe ha un impostabile `Key` proprietà.</span><span class="sxs-lookup"><span data-stu-id="2affe-313">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="2affe-314">Quando una nuova chiave viene assegnata alla proprietà, chiama il metodo set della proprietà di `internal` (`Friend` in Visual Basic) `ChangeKey` metodo della raccolta per verificare se la nuova chiave genererebbe un conflitto con una chiave esistente.</span><span class="sxs-lookup"><span data-stu-id="2affe-314">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="2affe-315">In tal caso, viene generata un'eccezione e il valore della proprietà non viene modificato.</span><span class="sxs-lookup"><span data-stu-id="2affe-315">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="2affe-316">Per mantenere la connessione tra un `MutableKey` oggetto e il `MutableKeys` insieme e per impedire che un oggetto da inserire in due raccolte, la `MutableKey` classe dispone di un `internal` (`Friend` in Visual Basic) `Collection`campo.</span><span class="sxs-lookup"><span data-stu-id="2affe-316">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="2affe-317">Questo campo è gestito dai metodi protetti che forniscono un comportamento personalizzato per l'aggiunta e rimozione di elementi dalla raccolta, ad esempio il <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2affe-317">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="2affe-318">Il campo viene impostato quando l'elemento viene aggiunto a una raccolta e cancellato quando l'elemento viene rimosso.</span><span class="sxs-lookup"><span data-stu-id="2affe-318">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2affe-319">
            <paramref name="index" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-319">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="2affe-320">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-320">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TItem this[TKey key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TItem Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As TKey) As TItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TItem default[TKey] { TItem get(TKey key); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Item" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2affe-321">The key of the element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-321">The key of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2affe-322">Gets the element with the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-322">Gets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2affe-323">Elemento con la chiave specificata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-323">The element with the specified key.</span>
          </span>
          <span data-ttu-id="2affe-324">Se un elemento con la chiave specificata non viene trovato, viene generata un'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-324">If an element with the specified key is not found, an exception is thrown.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2affe-325">Questa proprietà consente di accedere a un elemento specifico nella raccolta utilizzando la sintassi seguente: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2affe-325">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2affe-326">Questa proprietà è diverso dal ereditato <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> proprietà, che ottiene e imposta gli elementi in base all'indice numerico.</span><span class="sxs-lookup"><span data-stu-id="2affe-326">This property is distinct from the inherited <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which gets and sets elements by numeric index.</span></span> <span data-ttu-id="2affe-327">Tuttavia, se `TKey` è di tipo <xref:System.Int32>, questa proprietà maschera la proprietà ereditata.</span><span class="sxs-lookup"><span data-stu-id="2affe-327">However, if `TKey` is of type <xref:System.Int32>, this property masks the inherited property.</span></span> <span data-ttu-id="2affe-328">In tal caso, è possibile accedere alla proprietà ereditata eseguendo il cast di <xref:System.Collections.ObjectModel.KeyedCollection%602> al tipo di base.</span><span class="sxs-lookup"><span data-stu-id="2affe-328">In that case, you can access the inherited property by casting the <xref:System.Collections.ObjectModel.KeyedCollection%602> to its base type.</span></span> <span data-ttu-id="2affe-329">Ad esempio `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` in Visual Basic `KeyedCollection<int, MyType^>` in C++) può essere convertito in `Collection<MyType>` (`Collection(Of MyType)` in Visual Basic `Collection<MyType^>` in C++).</span><span class="sxs-lookup"><span data-stu-id="2affe-329">For example, `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` in Visual Basic, `KeyedCollection<int, MyType^>` in C++) can be cast to `Collection<MyType>` (`Collection(Of MyType)` in Visual Basic, `Collection<MyType^>` in C++).</span></span>  
  
 <span data-ttu-id="2affe-330">Se il <xref:System.Collections.ObjectModel.KeyedCollection%602> dispone di un dizionario di ricerca, `key` viene utilizzato per recuperare l'elemento dal dizionario.</span><span class="sxs-lookup"><span data-stu-id="2affe-330">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to retrieve the element from the dictionary.</span></span>  <span data-ttu-id="2affe-331">Se è presente alcun dizionario di ricerca, la chiave di ogni elemento verrà estratte usando la <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metodo e confrontato con la chiave specificata.</span><span class="sxs-lookup"><span data-stu-id="2affe-331">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="2affe-332">Nel linguaggio c# viene utilizzata la parola chiave per definire gli indicizzatori anziché implementare la <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> proprietà.</span><span class="sxs-lookup"><span data-stu-id="2affe-332">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="2affe-333">In Visual Basic la proprietà <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> viene implementata come predefinita per fornire la stessa funzionalità di indicizzazione.</span><span class="sxs-lookup"><span data-stu-id="2affe-333">Visual Basic implements <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="2affe-334">Il recupero del valore di questa proprietà è un'operazione o (1) se il <xref:System.Collections.ObjectModel.KeyedCollection%602> dispone di un dizionario di ricerca; in caso contrario, è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-334">Retrieving the value of this property is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2affe-335">Questo esempio di codice viene illustrato il codice minimo necessario per derivare una classe di raccolta da <xref:System.Collections.ObjectModel.KeyedCollection%602>: si esegue l'override di <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> (metodo) e fornendo un costruttore pubblico che delega a un costruttore di classe di base.</span><span class="sxs-lookup"><span data-stu-id="2affe-335">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="2affe-336">L'esempio di codice viene illustrato inoltre molte delle proprietà e metodi ereditati da <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601> classi.</span><span class="sxs-lookup"><span data-stu-id="2affe-336">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="2affe-337">L'esempio di codice chiama sia il <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> proprietà, che è di sola lettura e recupera dalla chiave, e il <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> proprietà, che è possibile impostare e recuperare in base all'indice.</span><span class="sxs-lookup"><span data-stu-id="2affe-337">The code example calls both the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only and retrieves by key, and the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which is settable and retrieves by index.</span></span> <span data-ttu-id="2affe-338">Viene illustrato come accedere alla proprietà di quest'ultima quando gli oggetti della raccolta derivata dispongono di chiavi integer, distinguibile da interi utilizzati per il recupero indicizzato.</span><span class="sxs-lookup"><span data-stu-id="2affe-338">It shows how to access the latter property when the objects in the derived collection have integer keys, indistinguishable from the integers used for indexed retrieval.</span></span>  
  
 <span data-ttu-id="2affe-339">Il `SimpleOrder` classe è un elenco molto semplice che contiene `OrderItem` oggetti, ognuno dei quali rappresenta una voce nell'ordine.</span><span class="sxs-lookup"><span data-stu-id="2affe-339">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="2affe-340">La chiave di `OrderItem` non è modificabile, un fattore importante per le classi che derivano da <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="2affe-340">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="2affe-341">Per un esempio di codice che usa chiavi modificabili, vedere <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-341">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2affe-342">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-342">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="2affe-343">An element with the specified key does not exist in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-343">An element with the specified key does not exist in the collection.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Remove : 'Key -&gt; bool" Usage="keyedCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2affe-344">The key of the element to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-344">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2affe-345">Removes the element with the specified key from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-345">Removes the element with the specified key from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2affe-346">
            <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-346">
              <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2affe-347">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-347">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2affe-348">La chiave dell'elemento viene anche rimossa dal dizionario di ricerca.</span><span class="sxs-lookup"><span data-stu-id="2affe-348">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="2affe-349">Se il numero di elementi ha superato la soglia di dizionario per la creazione e la <xref:System.Collections.ObjectModel.KeyedCollection%602> è usando un dizionario di ricerca, continuerà a utilizzare un dizionario di ricerca, anche se il numero di elementi è nuovamente sotto la soglia.</span><span class="sxs-lookup"><span data-stu-id="2affe-349">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2affe-350">Per personalizzare il comportamento di questo metodo, eseguire l'override di <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2affe-350">To customize the behavior of this method, override the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method.</span></span>  
  
 <span data-ttu-id="2affe-351">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-351">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2affe-352">Questo esempio di codice viene illustrato il codice minimo necessario per derivare una classe di raccolta da <xref:System.Collections.ObjectModel.KeyedCollection%602>: si esegue l'override di <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> (metodo) e fornendo un costruttore pubblico che delega a un costruttore di classe di base.</span><span class="sxs-lookup"><span data-stu-id="2affe-352">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="2affe-353">L'esempio di codice viene illustrato inoltre molte delle proprietà e metodi ereditati da <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601> classi.</span><span class="sxs-lookup"><span data-stu-id="2affe-353">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="2affe-354">Nell'esempio viene illustrato <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> metodo ereditato dal <xref:System.Collections.ObjectModel.KeyedCollection%602>, che rimuove l'elemento con una chiave specificata, nonché il <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> e <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> ai metodi ereditati da <xref:System.Collections.ObjectModel.Collection%601>, quale rimuovere rispettivamente per oggetto e per indice.</span><span class="sxs-lookup"><span data-stu-id="2affe-354">The example demonstrates <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> method inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602>, which removes the item with a specified key, and also the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> methods inherited from <xref:System.Collections.ObjectModel.Collection%601>, which remove by object and by index respectively.</span></span>  
  
 <span data-ttu-id="2affe-355">Il `SimpleOrder` classe è un elenco molto semplice che contiene `OrderItem` oggetti, ognuno dei quali rappresenta una voce nell'ordine.</span><span class="sxs-lookup"><span data-stu-id="2affe-355">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="2affe-356">La chiave di `OrderItem` non è modificabile, un fattore importante per le classi che derivano da <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="2affe-356">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="2affe-357">Per un esempio di codice che usa chiavi modificabili, vedere <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-357">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2affe-358">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-358">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="keyedCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="2affe-359">The index of the element to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-359">The index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2affe-360">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-360">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2affe-361">La chiave dell'elemento viene anche rimossa dal dizionario di ricerca.</span><span class="sxs-lookup"><span data-stu-id="2affe-361">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="2affe-362">Se il numero di elementi ha superato la soglia di dizionario per la creazione e la <xref:System.Collections.ObjectModel.KeyedCollection%602> è usando un dizionario di ricerca, continuerà a utilizzare un dizionario di ricerca, anche se il numero di elementi è nuovamente sotto la soglia.</span><span class="sxs-lookup"><span data-stu-id="2affe-362">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="2affe-363">Questo metodo è un'operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-363">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="2affe-364">Note per gli implementatori</span><span class="sxs-lookup"><span data-stu-id="2affe-364">Notes for Implementers</span></span>  
 <span data-ttu-id="2affe-365">Eseguire l'override di questo metodo per fornire un comportamento personalizzato per il <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> e <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> ereditati dal <xref:System.Collections.ObjectModel.Collection%601> classe generica e il <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> metodo.</span><span class="sxs-lookup"><span data-stu-id="2affe-365">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class, and the <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> method.</span></span>  
  
 <span data-ttu-id="2affe-366">Chiamare l'implementazione della classe base di questo metodo per rimuovere l'elemento dalla raccolta sottostante e aggiornare il dizionario di ricerca.</span><span class="sxs-lookup"><span data-stu-id="2affe-366">Call the base class implementation of this method to remove the item from the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2affe-367">In questa sezione sono riportati due esempi di codice che illustrano l'override di <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> metodo per fornire un comportamento personalizzato per la rimozione di oggetti dalla raccolta.</span><span class="sxs-lookup"><span data-stu-id="2affe-367">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method to provide custom behavior for removing objects from the collection.</span></span> <span data-ttu-id="2affe-368">Nel primo esempio viene aggiunto un evento di notifica personalizzata e il secondo fornisce supporto per una raccolta di oggetti con chiavi modificabile.</span><span class="sxs-lookup"><span data-stu-id="2affe-368">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="2affe-369">Esempio 1</span><span class="sxs-lookup"><span data-stu-id="2affe-369">Example 1</span></span>  
  
 <span data-ttu-id="2affe-370">Esempio di codice seguente viene illustrato come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metodi, per fornire un comportamento personalizzato per il <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metodi e per impostare il valore predefinito <xref:System.Collections.ObjectModel.Collection%601.Item%2A> proprietà (l'indicizzatore in c#).</span><span class="sxs-lookup"><span data-stu-id="2affe-370">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="2affe-371">Il comportamento personalizzato fornito in questo esempio è un evento di notifica denominato `Changed`, che viene generato al termine di ciascuno dei metodi sottoposti a override.</span><span class="sxs-lookup"><span data-stu-id="2affe-371">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="2affe-372">Nell'esempio di codice viene creato il `SimpleOrder` classe che deriva da <xref:System.Collections.ObjectModel.KeyedCollection%602> e rappresenta un modulo d'ordine semplice.</span><span class="sxs-lookup"><span data-stu-id="2affe-372">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="2affe-373">Il form contiene `OrderItem` gli oggetti che rappresentano elementi ordinati.</span><span class="sxs-lookup"><span data-stu-id="2affe-373">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="2affe-374">L'esempio di codice crea inoltre un `SimpleOrderChangedEventArgs` classe destinata a contenere le informazioni sull'evento e un'enumerazione per identificare il tipo di modifica.</span><span class="sxs-lookup"><span data-stu-id="2affe-374">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="2affe-375">L'esempio di codice viene illustrato il comportamento personalizzato mediante la chiamata in proprietà e metodi della classe derivata, il `Main` metodo il `Demo` (classe).</span><span class="sxs-lookup"><span data-stu-id="2affe-375">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="2affe-376">Questo esempio di codice Usa gli oggetti con le chiavi non modificabile.</span><span class="sxs-lookup"><span data-stu-id="2affe-376">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="2affe-377">Per un esempio di codice che usa chiavi modificabili, vedere <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-377">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="2affe-378">Esempio 2</span><span class="sxs-lookup"><span data-stu-id="2affe-378">Example 2</span></span>  
  
 <span data-ttu-id="2affe-379">Esempio di codice seguente viene illustrato come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metodo per supportare chiavi modificabili e su come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metodi mantenere l'integrità delle chiavi e la raccolta.</span><span class="sxs-lookup"><span data-stu-id="2affe-379">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="2affe-380">Nell'esempio di codice viene creato il `MutableKeys` insieme, che deriva da <xref:System.Collections.ObjectModel.KeyedCollection%602>e il `MutableKey` classe.</span><span class="sxs-lookup"><span data-stu-id="2affe-380">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="2affe-381">Il `MutableKey` classe ha un impostabile `Key` proprietà.</span><span class="sxs-lookup"><span data-stu-id="2affe-381">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="2affe-382">Quando una nuova chiave viene assegnata alla proprietà, chiama il metodo set della proprietà di `internal` (`Friend` in Visual Basic) `ChangeKey` metodo della raccolta per verificare se la nuova chiave genererebbe un conflitto con una chiave esistente.</span><span class="sxs-lookup"><span data-stu-id="2affe-382">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="2affe-383">In tal caso, viene generata un'eccezione e il valore della proprietà non viene modificato.</span><span class="sxs-lookup"><span data-stu-id="2affe-383">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="2affe-384">Per mantenere la connessione tra un `MutableKey` oggetto e il `MutableKeys` insieme e per impedire che un oggetto da inserire in due raccolte, la `MutableKey` classe dispone di un `internal` (`Friend` in Visual Basic) `Collection`campo.</span><span class="sxs-lookup"><span data-stu-id="2affe-384">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="2affe-385">Questo campo è gestito dai metodi protetti che forniscono un comportamento personalizzato per l'aggiunta e rimozione di elementi dalla raccolta, ad esempio il <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2affe-385">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="2affe-386">Il campo viene impostato quando l'elemento viene aggiunto a una raccolta e cancellato quando l'elemento viene rimosso.</span><span class="sxs-lookup"><span data-stu-id="2affe-386">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * 'Item -&gt; unit" Usage="keyedCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="2affe-387">The zero-based index of the item to be replaced.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-387">The zero-based index of the item to be replaced.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="2affe-388">The new item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-388">The new item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2affe-389">Replaces the item at the specified index with the specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2affe-389">Replaces the item at the specified index with the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2affe-390">Il dizionario di ricerca viene aggiornato di conseguenza.</span><span class="sxs-lookup"><span data-stu-id="2affe-390">The lookup dictionary is updated accordingly.</span></span> <span data-ttu-id="2affe-391">Vale a dire, la chiave dell'elemento che viene sostituito viene rimossa dal dizionario di ricerca e la chiave del nuovo elemento viene aggiunto.</span><span class="sxs-lookup"><span data-stu-id="2affe-391">That is, the key of the item that is being replaced is removed from the lookup dictionary, and the key of the new item is added.</span></span>  
  
 <span data-ttu-id="2affe-392">Questo metodo è un'operazione o (1).</span><span class="sxs-lookup"><span data-stu-id="2affe-392">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="2affe-393">Note per gli implementatori</span><span class="sxs-lookup"><span data-stu-id="2affe-393">Notes for Implementers</span></span>  
 <span data-ttu-id="2affe-394">Eseguire l'override di questo metodo per fornire un comportamento personalizzato per l'impostazione di <xref:System.Collections.ObjectModel.Collection%601.Item%2A> proprietà ereditate dal <xref:System.Collections.ObjectModel.Collection%601> classe generica.</span><span class="sxs-lookup"><span data-stu-id="2affe-394">Override this method to provide customized behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2affe-395">Questo metodo non influiscono sul comportamento del <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> proprietà, che è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="2affe-395">This method does not affect the behavior of the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only.</span></span>  
  
 <span data-ttu-id="2affe-396">Chiamare l'implementazione della classe base di questo metodo per impostare l'elemento nella raccolta sottostante e aggiornare il dizionario di ricerca.</span><span class="sxs-lookup"><span data-stu-id="2affe-396">Call the base class implementation of this method to set the item in the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2affe-397">In questa sezione sono riportati due esempi di codice che illustrano l'override di <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metodo per fornire un comportamento personalizzato per l'impostazione di <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="2affe-397">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> method to provide custom behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2affe-398">Nel primo esempio viene aggiunto un evento di notifica personalizzata e il secondo fornisce supporto per una raccolta di oggetti con chiavi modificabile.</span><span class="sxs-lookup"><span data-stu-id="2affe-398">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="2affe-399">Esempio 1</span><span class="sxs-lookup"><span data-stu-id="2affe-399">Example 1</span></span>  
  
 <span data-ttu-id="2affe-400">Esempio di codice seguente viene illustrato come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metodi, per fornire un comportamento personalizzato per il <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metodi e per impostare il valore predefinito <xref:System.Collections.ObjectModel.Collection%601.Item%2A> proprietà (l'indicizzatore in c#).</span><span class="sxs-lookup"><span data-stu-id="2affe-400">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="2affe-401">Il comportamento personalizzato fornito in questo esempio è un evento di notifica denominato `Changed`, che viene generato al termine di ciascuno dei metodi sottoposti a override.</span><span class="sxs-lookup"><span data-stu-id="2affe-401">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="2affe-402">Nell'esempio di codice viene creato il `SimpleOrder` classe che deriva da <xref:System.Collections.ObjectModel.KeyedCollection%602> e rappresenta un modulo d'ordine semplice.</span><span class="sxs-lookup"><span data-stu-id="2affe-402">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="2affe-403">Il form contiene `OrderItem` gli oggetti che rappresentano elementi ordinati.</span><span class="sxs-lookup"><span data-stu-id="2affe-403">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="2affe-404">L'esempio di codice crea inoltre un `SimpleOrderChangedEventArgs` classe destinata a contenere le informazioni sull'evento e un'enumerazione per identificare il tipo di modifica.</span><span class="sxs-lookup"><span data-stu-id="2affe-404">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="2affe-405">L'esempio di codice viene illustrato il comportamento personalizzato mediante la chiamata in proprietà e metodi della classe derivata, il `Main` metodo il `Demo` (classe).</span><span class="sxs-lookup"><span data-stu-id="2affe-405">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="2affe-406">Questo esempio di codice Usa gli oggetti con le chiavi non modificabile.</span><span class="sxs-lookup"><span data-stu-id="2affe-406">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="2affe-407">Per un esempio di codice che usa chiavi modificabili, vedere <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="2affe-407">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="2affe-408">Esempio 2</span><span class="sxs-lookup"><span data-stu-id="2affe-408">Example 2</span></span>  
  
 <span data-ttu-id="2affe-409">Esempio di codice seguente viene illustrato come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metodo per supportare chiavi modificabili e su come eseguire l'override protetto <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metodi mantenere l'integrità delle chiavi e la raccolta.</span><span class="sxs-lookup"><span data-stu-id="2affe-409">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="2affe-410">Nell'esempio di codice viene creato il `MutableKeys` insieme, che deriva da <xref:System.Collections.ObjectModel.KeyedCollection%602>e il `MutableKey` classe.</span><span class="sxs-lookup"><span data-stu-id="2affe-410">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="2affe-411">Il `MutableKey` classe ha un impostabile `Key` proprietà.</span><span class="sxs-lookup"><span data-stu-id="2affe-411">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="2affe-412">Quando una nuova chiave viene assegnata alla proprietà, chiama il metodo set della proprietà di `internal` (`Friend` in Visual Basic) `ChangeKey` metodo della raccolta per verificare se la nuova chiave genererebbe un conflitto con una chiave esistente.</span><span class="sxs-lookup"><span data-stu-id="2affe-412">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="2affe-413">In tal caso, viene generata un'eccezione e il valore della proprietà non viene modificato.</span><span class="sxs-lookup"><span data-stu-id="2affe-413">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="2affe-414">Per mantenere la connessione tra un `MutableKey` oggetto e il `MutableKeys` insieme e per impedire che un oggetto da inserire in due raccolte, la `MutableKey` classe dispone di un `internal` (`Friend` in Visual Basic) `Collection`campo.</span><span class="sxs-lookup"><span data-stu-id="2affe-414">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="2affe-415">Questo campo è gestito dai metodi protetti che forniscono un comportamento personalizzato per l'aggiunta e rimozione di elementi dalla raccolta, ad esempio il <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metodo.</span><span class="sxs-lookup"><span data-stu-id="2affe-415">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="2affe-416">Il campo viene impostato quando l'elemento viene aggiunto a una raccolta e cancellato quando l'elemento viene rimosso.</span><span class="sxs-lookup"><span data-stu-id="2affe-416">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TItem&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef item As TItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TItem % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : 'Key *  -&gt; bool" Usage="keyedCollection.TryGetValue (key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="item" Type="TItem&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>