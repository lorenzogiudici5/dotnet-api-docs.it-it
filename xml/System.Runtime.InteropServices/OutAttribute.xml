<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OutAttribute.xml" source-language="en-US" target-language="it-IT">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56a5f667aa9e088c1293983294fb45fd08504295c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a5f667aa9e088c1293983294fb45fd08504295c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>Indicates that data should be marshaled from callee back to caller.</source>
          <target state="translated">Indica che il marshalling dei dati deve essere effettuato dal chiamato al chiamante.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>You can apply this attribute to parameters.</source>
          <target state="translated">È possibile applicare questo attributo per i parametri.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> is optional.</source>
          <target state="translated">Il <ph id="ph1">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> è facoltativo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>The attribute is supported for COM interop and platform invoke only.</source>
          <target state="translated">L'attributo è supportato per l'interoperabilità COM e platform invoke solo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</source>
          <target state="translated">In assenza di impostazioni esplicite, il marshalling di interoperabilità presuppone regole basate sul parametro di tipo, se il parametro viene passato per riferimento oppure per valore e se il tipo è copiabili o non copiabili.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>For example, the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</source>
          <target state="translated">Ad esempio, la <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> classe viene sempre considerata In/Out e una matrice di stringhe passati per valore viene considerata.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>Out-only behavior is never a default marshaling behavior for parameters.</source>
          <target state="translated">Comportamento solo in entrata non è mai un comportamento per i parametri di marshalling predefinito.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> to value and reference types passed by reference to change In/Out behavior to Out-only behavior, which is equivalent to using the <ph id="ph2">`out`</ph> keyword in C#.</source>
          <target state="translated">È possibile applicare il <ph id="ph1">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> per tipi di riferimento e valore passati per riferimento, per modificare In/Out comportamento al comportamento solo in entrata, che equivale all'utilizzo di <ph id="ph2">`out`</ph> (parola chiave) in c#.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>For example, arrays passed by value, marshaled as In-only parameters by default, can be changed to Out-only.</source>
          <target state="translated">Ad esempio, le matrici passate per valore, eseguire il marshalling come parametri In-only per impostazione predefinita, sono modificabili a Out-only.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>However, the behavior does not always provide expected semantics when the types include all-blittable elements or fields because the interop marshaler uses pinning.</source>
          <target state="translated">Tuttavia, il comportamento non sempre fornisce la semantica prevista quando i tipi includono gli elementi copiabili all o campi perché il marshalling di interoperabilità utilizza il blocco.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>If you do not care about passing data into the callee, Out-only marshaling can provide better performance for non-blittable types.</source>
          <target state="translated">Se non si desidera eseguire sul passaggio dei dati al destinatario della chiamata, è possibile fornire prestazioni migliori per i tipi non copiabili solo effettuare il marshalling.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>Combining the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> is particularly useful when applied to arrays and formatted, non-blittable types.</source>
          <target state="translated">La combinazione di <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> e <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> è particolarmente utile quando applicata a matrici e formattato, i tipi non copiabili.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>Callers see the changes a callee makes to these types only when you apply both attributes.</source>
          <target state="translated">Le modifiche a che un oggetto chiamato apportate a questi tipi solo quando si applicano a entrambi gli attributi, vedere i chiamanti.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>Since these types require copying during marshaling, you can use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> to reduce unnecessary copies.</source>
          <target state="translated">Poiché questi tipi richiedono la copia durante il marshalling, è possibile utilizzare <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> e <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> per ridurre le copie non necessari.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>For more information on the effect of <ph id="ph1">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> on marshaling behavior, see <bpt id="p1">[</bpt>Directional Attributes<ept id="p1">](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sull'effetto di <ph id="ph1">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> sul comportamento di marshalling, vedere <bpt id="p1">[</bpt>attributi direzionali<ept id="p1">](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>The following example shows how to apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> to a platform invoke prototype that passes an array as a parameter.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come applicare il <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> e <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> a un platform invoke prototipo che passa una matrice come parametro.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.OutAttribute">
          <source>The combination of directional attributes allows the caller to see the changes made by the callee.</source>
          <target state="translated">La combinazione di attributi direzionali consente al chiamante di visualizzare le modifiche apportate dal chiamato.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.OutAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.OutAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inizializza una nuova istanza della classe <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.OutAttribute" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>