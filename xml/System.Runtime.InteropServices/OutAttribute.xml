<Type Name="OutAttribute" FullName="System.Runtime.InteropServices.OutAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3eaa677a4f9a7077cfdb2048e578ae78c834742f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37636998" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OutAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OutAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.OutAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OutAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type OutAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="70e5b-101">Indica che il marshalling dei dati deve essere effettuato dal chiamato al chiamante.</span>
      <span class="sxs-lookup">
        <span data-stu-id="70e5b-101">Indicates that data should be marshaled from callee back to caller.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e5b-102">È possibile applicare questo attributo ai parametri.</span><span class="sxs-lookup"><span data-stu-id="70e5b-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="70e5b-103">Il <xref:System.Runtime.InteropServices.OutAttribute> è facoltativo.</span><span class="sxs-lookup"><span data-stu-id="70e5b-103">The <xref:System.Runtime.InteropServices.OutAttribute> is optional.</span></span> <span data-ttu-id="70e5b-104">L'attributo è supportato per l'interoperabilità COM e platform invoke solo.</span><span class="sxs-lookup"><span data-stu-id="70e5b-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="70e5b-105">In assenza di impostazioni esplicite, il marshalling di interoperabilità presuppone le regole in base al parametro tipo, se il parametro viene passato per riferimento oppure per valore e se il tipo è copiabile da blt o non copiabili da blt.</span><span class="sxs-lookup"><span data-stu-id="70e5b-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="70e5b-106">Ad esempio, il <xref:System.Text.StringBuilder> classe è sempre si presuppone che sia In ingresso/uscita e una matrice di stringhe passata per valore è in.</span><span class="sxs-lookup"><span data-stu-id="70e5b-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="70e5b-107">Comportamento solo in entrata non è mai un comportamento per i parametri di marshalling predefinito.</span><span class="sxs-lookup"><span data-stu-id="70e5b-107">Out-only behavior is never a default marshaling behavior for parameters.</span></span> <span data-ttu-id="70e5b-108">È possibile applicare il <xref:System.Runtime.InteropServices.OutAttribute> ai tipi di riferimento e valore passati per riferimento alla modifica In ingresso/uscita comportamento al comportamento solo in entrata, che equivale all'uso di `out` parola chiave nel linguaggio c#.</span><span class="sxs-lookup"><span data-stu-id="70e5b-108">You can apply the <xref:System.Runtime.InteropServices.OutAttribute> to value and reference types passed by reference to change In/Out behavior to Out-only behavior, which is equivalent to using the `out` keyword in C#.</span></span> <span data-ttu-id="70e5b-109">Ad esempio, le matrici passate per valore, il marshalling come parametri solo In per impostazione predefinita, modificabili in Out-only.</span><span class="sxs-lookup"><span data-stu-id="70e5b-109">For example, arrays passed by value, marshaled as In-only parameters by default, can be changed to Out-only.</span></span> <span data-ttu-id="70e5b-110">Tuttavia, il comportamento non sempre fornisce semantica prevista quando i tipi includono gli elementi copiabili da blt all o perché il marshalling di interoperabilità Usa l'aggiunta di campi.</span><span class="sxs-lookup"><span data-stu-id="70e5b-110">However, the behavior does not always provide expected semantics when the types include all-blittable elements or fields because the interop marshaler uses pinning.</span></span> <span data-ttu-id="70e5b-111">Se non si è interessati passando i dati nel computer chiamato, solo in entrata di marshalling può offrire prestazioni migliori per i tipi non copiabili da blt.</span><span class="sxs-lookup"><span data-stu-id="70e5b-111">If you do not care about passing data into the callee, Out-only marshaling can provide better performance for non-blittable types.</span></span>  
  
 <span data-ttu-id="70e5b-112">La combinazione di <xref:System.Runtime.InteropServices.InAttribute> e <xref:System.Runtime.InteropServices.OutAttribute> è particolarmente utile quando applicato a matrici e formattato, i tipi non copiabili da blt.</span><span class="sxs-lookup"><span data-stu-id="70e5b-112">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="70e5b-113">I chiamanti visualizzano le modifiche apportate una chiamata a questi tipi solo quando si applicano a entrambi gli attributi.</span><span class="sxs-lookup"><span data-stu-id="70e5b-113">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="70e5b-114">Poiché questi tipi richiedono la copia durante il marshalling, è possibile usare <xref:System.Runtime.InteropServices.InAttribute> e <xref:System.Runtime.InteropServices.OutAttribute> ridurre inutili copie.</span><span class="sxs-lookup"><span data-stu-id="70e5b-114">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="70e5b-115">Per altre informazioni sugli effetti degli <xref:System.Runtime.InteropServices.OutAttribute> sul comportamento di marshalling, vedere [attributi direzionali](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span><span class="sxs-lookup"><span data-stu-id="70e5b-115">For more information on the effect of <xref:System.Runtime.InteropServices.OutAttribute> on marshaling behavior, see [Directional Attributes](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e5b-116">Nell'esempio seguente viene illustrato come applicare la <xref:System.Runtime.InteropServices.InAttribute> e <xref:System.Runtime.InteropServices.OutAttribute> a un platform invoke prototipo che passa una matrice come parametro.</span><span class="sxs-lookup"><span data-stu-id="70e5b-116">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="70e5b-117">La combinazione di attributi direzionali consente al chiamante di visualizzare le modifiche apportate dal chiamato.</span><span class="sxs-lookup"><span data-stu-id="70e5b-117">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.InAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.OutAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70e5b-118">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.OutAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="70e5b-118">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.OutAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>